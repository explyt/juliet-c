!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":89:10)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":89:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":89:20)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":89:32)
#loc190 = loc(fused[#loc83, #loc84])
#loc191 = loc(fused[#loc85, #loc86])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc161)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc163)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc165)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc166)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc23)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb2 loc(#loc169)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %7 ^bb3, ^bb11 loc(#loc27)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc172)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc29)
    %9 = cir.const #cir.int<50> : !s32i loc(#loc30)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc30)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc173)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc174)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc29)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc175)
    cir.store %14, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc178)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc179)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc42)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc36)
  ^bb8:  // pred: ^bb7
    %22 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc43)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc22)
  ^bb10:  // pred: ^bb9
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc48)
    cir.store %28, %1 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb2 loc(#loc169)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc182)
  ^bb13:  // pred: ^bb12
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
    %31 = cir.const #cir.int<67> : !s32i loc(#loc52)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc53)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc53)
    cir.libc.memset %35 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc183)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc57)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc58)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
    %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc184)
    %43 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc61)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc64)
    %48 = cir.call @strncat(%44, %45, %47) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc61)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %50 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc67)
    %51 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    cir.call @free(%52) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb14 loc(#loc50)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc12)
  } loc(#loc164)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc70)
  } loc(#loc185)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc90)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17_good() : () -> () loc(#loc92)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17_bad() : () -> () loc(#loc96)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.return %17 : !s32i loc(#loc194)
  } loc(#loc189)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc196)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc197)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc109)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc113)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb2 loc(#loc200)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc202)
    cir.brcond %7 ^bb3, ^bb11 loc(#loc117)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc203)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc119)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc120)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc204)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc205)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc206)
    cir.store %14, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.br ^bb5 loc(#loc208)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc128)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc209)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc210)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc130)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc132)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc130)
    cir.br ^bb7 loc(#loc126)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc126)
  ^bb8:  // pred: ^bb7
    %22 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc133)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc211)
    cir.br ^bb9 loc(#loc112)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc112)
  ^bb10:  // pred: ^bb9
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc138)
    cir.store %28, %1 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb2 loc(#loc200)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc112)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc213)
  ^bb13:  // pred: ^bb12
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
    %31 = cir.const #cir.int<67> : !s32i loc(#loc142)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc143)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc143)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc143)
    cir.libc.memset %35 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc214)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc147)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc148)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc148)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
    %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc150)
    cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc215)
    %43 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc151)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc154)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc154)
    %48 = cir.call @strncat(%44, %45, %47) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    %50 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc157)
    %51 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
    cir.call @free(%52) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
    cir.br ^bb14 loc(#loc140)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc102)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":152:1)
#loc6 = loc("/usr/include/string.h":153:29)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":23:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":44:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":36:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":36:24)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":25:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":25:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":26:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":26:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":27:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":27:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":28:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":34:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":28:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":28:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":28:16)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":28:20)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":28:18)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":29:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":31:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":31:31)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":31:34)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":31:45)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":31:46)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":31:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":32:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":32:37)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":32:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":32:21)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":32:27)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":32:28)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":32:34)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":32:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":33:19)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":33:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":33:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":33:15)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":28:24)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":28:23)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":35:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":43:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":37:16)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":37:24)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":37:29)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":37:33)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":37:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":37:34)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":38:25)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":38:16)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":38:20)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":38:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":40:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":40:17)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":40:23)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":40:31)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":41:19)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":41:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":42:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":42:14)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":74:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":77:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":76:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":76:13)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":94:15)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":96:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":99:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":101:15)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":89:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":104:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":90:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":92:27)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":92:22)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":92:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":94:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":95:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":95:67)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":96:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":99:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":100:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":100:66)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":101:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":103:12)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":103:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":51:1)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":72:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":64:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":64:24)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":53:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":53:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":54:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":54:12)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":55:12)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":55:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":56:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":62:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":56:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":56:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":56:16)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":56:20)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":56:18)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":57:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":59:24)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":59:31)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":59:35)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":59:46)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":59:47)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":59:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":60:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":60:37)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":60:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":60:21)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":60:27)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":60:28)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":60:34)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":60:33)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":61:19)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":61:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":61:14)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":61:15)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":56:24)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":56:23)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":63:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":71:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":65:16)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":65:24)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":65:29)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":65:33)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":65:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":65:34)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":66:25)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":66:16)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":66:20)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":66:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":68:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":68:17)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":68:23)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":68:31)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":69:19)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":69:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":70:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_17.c":70:14)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc17, #loc18])
#loc168 = loc(fused[#loc20, #loc19])
#loc169 = loc(fused[#loc21, #loc22])
#loc170 = loc(fused[#loc24, #loc23])
#loc171 = loc(fused[#loc25, #loc26])
#loc172 = loc(fused[#loc28, #loc22])
#loc173 = loc(fused[#loc31, #loc32])
#loc174 = loc(fused[#loc30, #loc32])
#loc175 = loc(fused[#loc29, #loc33])
#loc176 = loc(fused[#loc34, #loc33])
#loc177 = loc(fused[#loc35, #loc36])
#loc178 = loc(fused[#loc37, #loc38])
#loc179 = loc(fused[#loc39, #loc36])
#loc180 = loc(fused[#loc44, #loc43])
#loc181 = loc(fused[#loc48, #loc47])
#loc182 = loc(fused[#loc49, #loc50])
#loc183 = loc(fused[#loc55, #loc56])
#loc184 = loc(fused[#loc60, #loc57])
#loc185 = loc(fused[#loc69, #loc70])
#loc186 = loc(fused[#loc71, #loc72])
#loc187 = loc(fused[#loc73, #loc74])
#loc188 = loc(fused[#loc75, #loc76])
#loc189 = loc(fused[#loc81, #loc82])
#loc192 = loc(fused[#loc92, #loc93])
#loc193 = loc(fused[#loc96, #loc97])
#loc194 = loc(fused[#loc100, #loc99])
#loc195 = loc(fused[#loc101, #loc102])
#loc196 = loc(fused[#loc103, #loc104])
#loc197 = loc(fused[#loc105, #loc106])
#loc198 = loc(fused[#loc107, #loc108])
#loc199 = loc(fused[#loc110, #loc109])
#loc200 = loc(fused[#loc111, #loc112])
#loc201 = loc(fused[#loc114, #loc113])
#loc202 = loc(fused[#loc115, #loc116])
#loc203 = loc(fused[#loc118, #loc112])
#loc204 = loc(fused[#loc121, #loc122])
#loc205 = loc(fused[#loc120, #loc122])
#loc206 = loc(fused[#loc119, #loc123])
#loc207 = loc(fused[#loc124, #loc123])
#loc208 = loc(fused[#loc125, #loc126])
#loc209 = loc(fused[#loc127, #loc128])
#loc210 = loc(fused[#loc129, #loc126])
#loc211 = loc(fused[#loc134, #loc133])
#loc212 = loc(fused[#loc138, #loc137])
#loc213 = loc(fused[#loc139, #loc140])
#loc214 = loc(fused[#loc145, #loc146])
#loc215 = loc(fused[#loc150, #loc147])
