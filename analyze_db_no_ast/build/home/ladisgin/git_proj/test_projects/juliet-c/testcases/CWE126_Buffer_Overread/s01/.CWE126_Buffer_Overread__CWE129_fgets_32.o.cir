!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc189)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc190)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc191)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc192)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc193)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc195)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc196)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc197)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc196)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc197)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc22)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc200)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc200)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc202)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc202)
        cir.store %11, %10 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc202)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc36)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc36)
          %15 = cir.const #cir.int<4> : !u64i loc(#loc36)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc36)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc36)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc36)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc190)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
          %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc204)
          %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc40)
          cir.if %27 {
            %28 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
            %29 = cir.call @atoi(%28) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc45)
            cir.store %29, %5 : !s32i, !cir.ptr<!s32i> loc(#loc206)
          } else {
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
            cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc48)
          } loc(#loc205)
        } loc(#loc203)
      } loc(#loc201)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    } loc(#loc199)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc209)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc56)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc209)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc211)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc211)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc211)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc63)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc213)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc65)
          cir.if %13 {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc69)
            %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc70)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc70)
            %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc70)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc71)
          } else {
            %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
          } loc(#loc214)
        } loc(#loc212)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc14)
  } loc(#loc194)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc217)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    cir.return loc(#loc74)
  } loc(#loc215)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc220)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc221)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc220)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc221)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc88)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc224)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc224)
      %8 = cir.const #cir.int<7> : !s32i loc(#loc95)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc225)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    } loc(#loc223)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc228)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc228)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc230)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc230)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc230)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc111)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc112)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc232)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc113)
          cir.if %13 {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc118)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc118)
            %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc119)
          } else {
            %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc120)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc120)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc121)
          } loc(#loc233)
        } loc(#loc231)
      } loc(#loc229)
    } loc(#loc227)
    cir.return loc(#loc80)
  } loc(#loc218)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc122)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc235)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc237)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc236)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc237)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc132)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc240)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc137)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc138)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc240)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc242)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc242)
        cir.store %11, %10 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc242)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc145)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc146)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc146)
          %15 = cir.const #cir.int<4> : !u64i loc(#loc146)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc146)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc146)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc146)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc146)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc146)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc190)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc147)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc148)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
          %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc244)
          %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc150)
          cir.if %27 {
            %28 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc154)
            %29 = cir.call @atoi(%28) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc155)
            cir.store %29, %5 : !s32i, !cir.ptr<!s32i> loc(#loc246)
          } else {
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc158)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc158)
            cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc159)
          } loc(#loc245)
        } loc(#loc243)
      } loc(#loc241)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc160)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc161)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    } loc(#loc239)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc249)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc167)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc249)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc251)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc251)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc251)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc174)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc175)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc253)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc176)
          %14 = cir.ternary(%13, true {
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc178)
            %16 = cir.const #cir.int<10> : !s32i loc(#loc179)
            %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc254)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc181)
            %19 = cir.ternary(%18, true {
              %20 = cir.const #true loc(#loc177)
              cir.yield %20 : !cir.bool loc(#loc177)
            }, false {
              %20 = cir.const #false loc(#loc177)
              cir.yield %20 : !cir.bool loc(#loc177)
            }) : (!cir.bool) -> !cir.bool loc(#loc177)
            cir.yield %19 : !cir.bool loc(#loc177)
          }, false {
            %15 = cir.const #false loc(#loc177)
            cir.yield %15 : !cir.bool loc(#loc177)
          }) : (!cir.bool) -> !cir.bool loc(#loc177)
          cir.if %14 {
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc185)
            %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc186)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc186)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc186)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc187)
          } else {
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc122)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc122)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc188)
          } loc(#loc255)
        } loc(#loc252)
      } loc(#loc250)
    } loc(#loc248)
    cir.return loc(#loc124)
  } loc(#loc234)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":43:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":60:27)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":64:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":26:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":27:22)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":28:22)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":30:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":30:12)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":30:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":31:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":47:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":32:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":32:21)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":32:20)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":33:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":45:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":34:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":34:49)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:13)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":44:13)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:23)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:36)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:53)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:17)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:63)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:60)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":37:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":40:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":42:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:29)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:24)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:17)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:40)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":43:17)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":46:21)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":46:10)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":46:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":48:5)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":63:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":49:9)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":49:21)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":49:20)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":50:9)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":62:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":51:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":51:34)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":61:13)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:17)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:25)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:22)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":55:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":57:13)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":59:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":56:37)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":56:30)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":56:17)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":60:17)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":145:1)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":149:1)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":147:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":147:13)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":148:5)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":148:13)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":71:1)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":101:1)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":73:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":73:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":74:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":74:22)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":75:5)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":75:22)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":77:13)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":77:12)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":77:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":78:5)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":84:5)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":79:9)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":79:21)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":79:20)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":82:16)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":82:9)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":83:21)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":83:10)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":83:9)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":85:5)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":100:5)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":86:9)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":86:21)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":86:20)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":87:9)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":99:9)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":88:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":88:34)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":98:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:17)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:25)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:22)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":92:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":94:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":96:13)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":93:37)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":93:30)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":93:17)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":97:27)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":97:17)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":139:27)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":104:1)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":143:1)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":106:5)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":106:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":107:5)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":107:22)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":108:5)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":108:22)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":110:13)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":110:12)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":110:5)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":111:5)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":127:5)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":112:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":112:21)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":112:20)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":113:9)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":125:9)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":114:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":114:49)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:13)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":124:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:23)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:36)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:53)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:17)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:63)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:60)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":117:13)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":120:13)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":122:13)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:29)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:24)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:17)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:40)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":123:27)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":123:17)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":126:21)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":126:10)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":126:9)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":128:5)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":142:5)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":129:9)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":129:21)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":129:20)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":130:9)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":141:9)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":131:13)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":131:34)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:13)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":140:13)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:17)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:25)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:22)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:27)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:30)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:38)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:40)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:35)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":134:13)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":136:13)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":138:13)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":135:37)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":135:30)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":135:17)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":139:17)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc3, #loc4])
#loc191 = loc(fused[#loc5, #loc6])
#loc192 = loc(fused[#loc7, #loc8])
#loc193 = loc(fused[#loc10, #loc11])
#loc194 = loc(fused[#loc13, #loc14])
#loc195 = loc(fused[#loc15, #loc16])
#loc196 = loc(fused[#loc17, #loc18])
#loc197 = loc(fused[#loc19, #loc20])
#loc198 = loc(fused[#loc23, #loc21])
#loc199 = loc(fused[#loc24, #loc25])
#loc200 = loc(fused[#loc26, #loc27])
#loc201 = loc(fused[#loc29, #loc30])
#loc202 = loc(fused[#loc31, #loc32])
#loc203 = loc(fused[#loc33, #loc34])
#loc204 = loc(fused[#loc38, #loc39])
#loc205 = loc(fused[#loc41, #loc42, #loc43, #loc34])
#loc206 = loc(fused[#loc46, #loc47])
#loc207 = loc(fused[#loc51, #loc49])
#loc208 = loc(fused[#loc52, #loc53])
#loc209 = loc(fused[#loc54, #loc55])
#loc210 = loc(fused[#loc57, #loc58])
#loc211 = loc(fused[#loc59, #loc60])
#loc212 = loc(fused[#loc61, #loc62])
#loc213 = loc(fused[#loc63, #loc64])
#loc214 = loc(fused[#loc66, #loc67, #loc68, #loc62])
#loc215 = loc(fused[#loc73, #loc74])
#loc216 = loc(fused[#loc75, #loc76])
#loc217 = loc(fused[#loc77, #loc78])
#loc218 = loc(fused[#loc79, #loc80])
#loc219 = loc(fused[#loc81, #loc82])
#loc220 = loc(fused[#loc83, #loc84])
#loc221 = loc(fused[#loc85, #loc86])
#loc222 = loc(fused[#loc89, #loc87])
#loc223 = loc(fused[#loc90, #loc91])
#loc224 = loc(fused[#loc92, #loc93])
#loc225 = loc(fused[#loc96, #loc95])
#loc226 = loc(fused[#loc99, #loc97])
#loc227 = loc(fused[#loc100, #loc101])
#loc228 = loc(fused[#loc102, #loc103])
#loc229 = loc(fused[#loc105, #loc106])
#loc230 = loc(fused[#loc107, #loc108])
#loc231 = loc(fused[#loc109, #loc110])
#loc232 = loc(fused[#loc111, #loc112])
#loc233 = loc(fused[#loc114, #loc115, #loc116, #loc110])
#loc234 = loc(fused[#loc123, #loc124])
#loc235 = loc(fused[#loc125, #loc126])
#loc236 = loc(fused[#loc127, #loc128])
#loc237 = loc(fused[#loc129, #loc130])
#loc238 = loc(fused[#loc133, #loc131])
#loc239 = loc(fused[#loc134, #loc135])
#loc240 = loc(fused[#loc136, #loc137])
#loc241 = loc(fused[#loc139, #loc140])
#loc242 = loc(fused[#loc141, #loc142])
#loc243 = loc(fused[#loc143, #loc144])
#loc244 = loc(fused[#loc148, #loc149])
#loc245 = loc(fused[#loc151, #loc152, #loc153, #loc144])
#loc246 = loc(fused[#loc156, #loc157])
#loc247 = loc(fused[#loc162, #loc160])
#loc248 = loc(fused[#loc163, #loc164])
#loc249 = loc(fused[#loc165, #loc166])
#loc250 = loc(fused[#loc168, #loc169])
#loc251 = loc(fused[#loc170, #loc171])
#loc252 = loc(fused[#loc172, #loc173])
#loc253 = loc(fused[#loc174, #loc175])
#loc254 = loc(fused[#loc178, #loc180])
#loc255 = loc(fused[#loc182, #loc183, #loc184, #loc173])
