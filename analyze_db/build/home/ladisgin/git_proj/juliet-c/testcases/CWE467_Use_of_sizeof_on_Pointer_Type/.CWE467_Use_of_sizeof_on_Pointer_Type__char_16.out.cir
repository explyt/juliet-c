!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc56 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":73:10)
#loc57 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":73:14)
#loc58 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":73:20)
#loc59 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":73:32)
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc106)
  cir.func private @printHexCharLine(!s8i) loc(#loc107)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc108)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__char_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["badChar", init] {alignment = 8 : i64} loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %2 ^bb3, ^bb10 loc(#loc15)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc18)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc113)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.br ^bb5 loc(#loc116)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc117)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc118)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc30)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.int<66> : !s32i loc(#loc31)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc31)
    %17 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.store %16, %17 : !s8i, !cir.ptr<!s8i> loc(#loc119)
    %18 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc35)
    cir.call @printHexCharLine(%19) : (!s8i) -> () loc(#loc36)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc38)
    cir.br ^bb9 loc(#loc17)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc14)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc10)
  } loc(#loc109)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__char_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc120)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc122)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc63)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE467_Use_of_sizeof_on_Pointer_Type__char_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call @CWE467_Use_of_sizeof_on_Pointer_Type__char_16_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE467_Use_of_sizeof_on_Pointer_Type__char_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call @CWE467_Use_of_sizeof_on_Pointer_Type__char_16_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.return %17 : !s32i loc(#loc130)
  } loc(#loc125)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["goodChar", init] {alignment = 8 : i64} loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc133)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %2 ^bb3, ^bb10 loc(#loc80)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc77)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc135)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc139)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc140)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc93)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc95)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
    cir.br ^bb7 loc(#loc89)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc89)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.int<71> : !s32i loc(#loc96)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc96)
    %17 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    cir.store %16, %17 : !s8i, !cir.ptr<!s8i> loc(#loc141)
    %18 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc100)
    cir.call @printHexCharLine(%19) : (!s8i) -> () loc(#loc101)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc104)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc79)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc75)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":20:1)
#loc10 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":35:1)
#loc11 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":25:13)
#loc12 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":25:30)
#loc13 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":22:5)
#loc14 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":34:5)
#loc15 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":22:11)
#loc16 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":24:9)
#loc17 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":32:9)
#loc18 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":27:31)
#loc19 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":27:38)
#loc20 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":27:52)
#loc21 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":27:53)
#loc22 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":27:13)
#loc23 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":28:13)
#loc24 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":28:44)
#loc25 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":28:17)
#loc26 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":28:28)
#loc27 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":28:34)
#loc28 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":28:35)
#loc29 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":28:41)
#loc30 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":28:40)
#loc31 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":29:24)
#loc32 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":29:14)
#loc33 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":29:13)
#loc34 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":30:31)
#loc35 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":30:30)
#loc36 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":30:13)
#loc37 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":31:18)
#loc38 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":31:13)
#loc39 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":33:9)
#loc40 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":59:1)
#loc41 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":62:1)
#loc42 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":61:5)
#loc43 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":61:11)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":78:15)
#loc51 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":80:15)
#loc52 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":83:15)
#loc53 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":85:15)
#loc54 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":73:1)
#loc55 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":88:1)
#loc60 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":74:1)
#loc61 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":76:27)
#loc62 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":76:22)
#loc63 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":76:5)
#loc64 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":78:5)
#loc65 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":79:5)
#loc66 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":79:56)
#loc67 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":80:5)
#loc68 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":83:5)
#loc69 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":84:5)
#loc70 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":84:55)
#loc71 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":85:5)
#loc72 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":87:12)
#loc73 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":87:5)
#loc74 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":42:1)
#loc75 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":57:1)
#loc76 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":47:13)
#loc77 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":47:31)
#loc78 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":44:5)
#loc79 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":56:5)
#loc80 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":44:11)
#loc81 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":46:9)
#loc82 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":54:9)
#loc83 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":49:32)
#loc84 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":49:39)
#loc85 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":49:55)
#loc86 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":49:56)
#loc87 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":49:13)
#loc88 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":50:13)
#loc89 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":50:45)
#loc90 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":50:17)
#loc91 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":50:29)
#loc92 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":50:35)
#loc93 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":50:36)
#loc94 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":50:42)
#loc95 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":50:41)
#loc96 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":51:25)
#loc97 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":51:14)
#loc98 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":51:13)
#loc99 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":52:31)
#loc100 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":52:30)
#loc101 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":52:13)
#loc102 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":53:18)
#loc103 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":53:13)
#loc104 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_16.c":55:9)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc13, #loc14])
#loc112 = loc(fused[#loc16, #loc17])
#loc113 = loc(fused[#loc19, #loc20])
#loc114 = loc(fused[#loc18, #loc21])
#loc115 = loc(fused[#loc22, #loc21])
#loc116 = loc(fused[#loc23, #loc24])
#loc117 = loc(fused[#loc25, #loc26])
#loc118 = loc(fused[#loc27, #loc24])
#loc119 = loc(fused[#loc33, #loc31])
#loc120 = loc(fused[#loc40, #loc41])
#loc121 = loc(fused[#loc42, #loc43])
#loc122 = loc(fused[#loc44, #loc45])
#loc123 = loc(fused[#loc46, #loc47])
#loc124 = loc(fused[#loc48, #loc49])
#loc125 = loc(fused[#loc54, #loc55])
#loc128 = loc(fused[#loc65, #loc66])
#loc129 = loc(fused[#loc69, #loc70])
#loc130 = loc(fused[#loc73, #loc72])
#loc131 = loc(fused[#loc74, #loc75])
#loc132 = loc(fused[#loc76, #loc77])
#loc133 = loc(fused[#loc78, #loc79])
#loc134 = loc(fused[#loc81, #loc82])
#loc135 = loc(fused[#loc84, #loc85])
#loc136 = loc(fused[#loc83, #loc86])
#loc137 = loc(fused[#loc87, #loc86])
#loc138 = loc(fused[#loc88, #loc89])
#loc139 = loc(fused[#loc90, #loc91])
#loc140 = loc(fused[#loc92, #loc89])
#loc141 = loc(fused[#loc98, #loc96])
