!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":159:10)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":159:14)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":159:20)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":159:32)
#loc259 = loc(fused[#loc167, #loc168])
#loc260 = loc(fused[#loc169, #loc170])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @_ZL10staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc183)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc184)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc185)
  cir.func @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_073badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc188)
    cir.br ^bb1 loc(#loc189)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc190)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc191)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<8> : !u64i loc(#loc192)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc192)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc193)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc25)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc195)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc27)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc28)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc28)
    cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc27)
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc23)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc197)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc36)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc41)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc202)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc203)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<8> : !u64i loc(#loc204)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc45)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc204)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc205)
    cir.br ^bb3 loc(#loc39)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc39)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc206)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc50)
    %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc208)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb8 loc(#loc52)
  ^bb7:  // pred: ^bb5
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc55)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc55)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
    cir.br ^bb8 loc(#loc48)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc48)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc33)
  } loc(#loc198)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc65)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc213)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc214)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<8> : !u64i loc(#loc215)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc69)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc215)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc216)
    cir.br ^bb3 loc(#loc63)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc217)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc218)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc219)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc76)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc76)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    cir.br ^bb7 loc(#loc72)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc57)
  } loc(#loc209)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc220)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc221)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc85)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc90)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc226)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc227)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb8 loc(#loc92)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc96)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc97)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc228)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc229)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc230)
    cir.store %14, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc231)
    cir.br ^bb4 loc(#loc232)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc104)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc105)
    %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s64i>, !cir.bool loc(#loc233)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc234)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc109)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc103)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc88)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc88)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc235)
  ^bb10:  // pred: ^bb9
    %21 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc113)
    %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc236)
    cir.brcond %24 ^bb11, ^bb12 loc(#loc237)
  ^bb11:  // pred: ^bb10
    %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc115)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc116)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc116)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb12 loc(#loc111)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc111)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc82)
  } loc(#loc222)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc121)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc240)
    cir.br ^bb1 loc(#loc241)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc126)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc242)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc243)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc128)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc129)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc129)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc244)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc245)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc246)
    cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc247)
    cir.br ^bb3 loc(#loc248)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc136)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc137)
    %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc249)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc250)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc139)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc141)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
    cir.br ^bb5 loc(#loc135)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc135)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc124)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc124)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc251)
  ^bb9:  // pred: ^bb8
    %19 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc183)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc145)
    %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc252)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc253)
  ^bb10:  // pred: ^bb9
    %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc147)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc148)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc148)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc147)
    cir.br ^bb11 loc(#loc143)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc143)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc118)
  } loc(#loc238)
  cir.func @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_074goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07L8goodB2G1Ev() : () -> () loc(#loc151)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07L8goodB2G2Ev() : () -> () loc(#loc152)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07L8goodG2B1Ev() : () -> () loc(#loc153)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07L8goodG2B2Ev() : () -> () loc(#loc154)
    cir.return loc(#loc150)
  } loc(#loc254)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc255)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc256)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc164)
  cir.func @main(%arg0: !s32i loc(fused[#loc167, #loc168]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc169, #loc170])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc166)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc171)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc172)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc173)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc174)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc161)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_074goodEv() : () -> () loc(#loc176)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc162)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc163)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_073badEv() : () -> () loc(#loc179)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc164)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc181)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    cir.return %15 : !s32i loc(#loc261)
  } loc(#loc258)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":23:1)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":23:25)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":30:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":46:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":32:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":32:15)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":34:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":34:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":35:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":39:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":35:8)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":35:20)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":36:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":38:16)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":38:20)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":30:6)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":38:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":40:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":45:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":40:8)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":40:20)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":41:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":44:9)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":44:14)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":66:19)
#loc30 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc31 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":53:1)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":73:1)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":55:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":55:15)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":57:12)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":57:5)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":58:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":62:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":58:8)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":58:20)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":59:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":61:16)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":61:20)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":53:13)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":61:9)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":63:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":72:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":63:8)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":63:20)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":64:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":67:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":69:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":66:9)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":71:16)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":76:1)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":91:1)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":78:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":78:15)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":80:12)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":80:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":81:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":85:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":81:8)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":81:20)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":82:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":84:16)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":84:20)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":76:13)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":84:9)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":86:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":90:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":86:8)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":86:20)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":87:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":89:16)
#loc77 = loc("/usr/include/stdlib.h":672:1)
#loc78 = loc("/usr/include/stdlib.h":672:45)
#loc79 = loc("/usr/include/stdlib.h":756:1)
#loc80 = loc("/usr/include/stdlib.h":756:70)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":94:1)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":116:1)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":96:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":96:15)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":98:12)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":98:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":99:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":109:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":99:8)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":99:20)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":100:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":103:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":105:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":102:19)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":102:9)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":107:27)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":107:34)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":107:38)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":107:52)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":107:53)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":107:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":108:9)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":108:37)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":108:13)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":108:21)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":108:27)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":108:28)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":108:34)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":108:33)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":110:5)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":115:5)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":110:8)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":110:20)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":111:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":114:9)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":114:14)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":119:1)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":136:1)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":121:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":121:15)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":123:12)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":123:5)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":124:5)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":129:5)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":124:8)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":124:20)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":125:5)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":127:27)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":127:34)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":127:38)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":127:52)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":127:53)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":127:9)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":128:9)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":128:37)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":128:13)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":128:21)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":128:27)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":128:28)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":128:34)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":128:33)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":130:5)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":135:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":130:8)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":130:20)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":131:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":134:9)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":134:14)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":138:1)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":144:1)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":140:5)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":141:5)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":142:5)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":143:5)
#loc155 = loc("/usr/include/stdlib.h":575:1)
#loc156 = loc("/usr/include/stdlib.h":575:41)
#loc157 = loc("/usr/include/time.h":76:1)
#loc158 = loc("/usr/include/time.h":76:38)
#loc159 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc160 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":164:15)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":166:15)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":169:15)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":171:15)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":159:1)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":174:1)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":160:1)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":162:27)
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":162:22)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":162:5)
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":164:5)
#loc176 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":165:5)
#loc177 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":166:5)
#loc178 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":169:5)
#loc179 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":170:5)
#loc180 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":171:5)
#loc181 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":173:12)
#loc182 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_07.cpp":173:5)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc9, #loc10])
#loc188 = loc(fused[#loc12, #loc11])
#loc189 = loc(fused[#loc13, #loc14])
#loc190 = loc(fused[#loc15, #loc16])
#loc191 = loc(fused[#loc17, #loc14])
#loc192 = loc(fused[#loc18, #loc19])
#loc193 = loc(fused[#loc21, #loc19])
#loc194 = loc(fused[#loc22, #loc23])
#loc195 = loc(fused[#loc24, #loc25])
#loc196 = loc(fused[#loc26, #loc23])
#loc197 = loc(fused[#loc30, #loc31])
#loc198 = loc(fused[#loc32, #loc33])
#loc199 = loc(fused[#loc34, #loc35])
#loc200 = loc(fused[#loc37, #loc36])
#loc201 = loc(fused[#loc38, #loc39])
#loc202 = loc(fused[#loc40, #loc41])
#loc203 = loc(fused[#loc42, #loc39])
#loc204 = loc(fused[#loc43, #loc44])
#loc205 = loc(fused[#loc46, #loc44])
#loc206 = loc(fused[#loc47, #loc48])
#loc207 = loc(fused[#loc49, #loc50])
#loc208 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc209 = loc(fused[#loc56, #loc57])
#loc210 = loc(fused[#loc58, #loc59])
#loc211 = loc(fused[#loc61, #loc60])
#loc212 = loc(fused[#loc62, #loc63])
#loc213 = loc(fused[#loc64, #loc65])
#loc214 = loc(fused[#loc66, #loc63])
#loc215 = loc(fused[#loc67, #loc68])
#loc216 = loc(fused[#loc70, #loc68])
#loc217 = loc(fused[#loc71, #loc72])
#loc218 = loc(fused[#loc73, #loc74])
#loc219 = loc(fused[#loc75, #loc72])
#loc220 = loc(fused[#loc77, #loc78])
#loc221 = loc(fused[#loc79, #loc80])
#loc222 = loc(fused[#loc81, #loc82])
#loc223 = loc(fused[#loc83, #loc84])
#loc224 = loc(fused[#loc86, #loc85])
#loc225 = loc(fused[#loc87, #loc88])
#loc226 = loc(fused[#loc89, #loc90])
#loc227 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc228 = loc(fused[#loc98, #loc99])
#loc229 = loc(fused[#loc97, #loc99])
#loc230 = loc(fused[#loc96, #loc100])
#loc231 = loc(fused[#loc101, #loc100])
#loc232 = loc(fused[#loc102, #loc103])
#loc233 = loc(fused[#loc104, #loc105])
#loc234 = loc(fused[#loc106, #loc103])
#loc235 = loc(fused[#loc110, #loc111])
#loc236 = loc(fused[#loc112, #loc113])
#loc237 = loc(fused[#loc114, #loc111])
#loc238 = loc(fused[#loc117, #loc118])
#loc239 = loc(fused[#loc119, #loc120])
#loc240 = loc(fused[#loc122, #loc121])
#loc241 = loc(fused[#loc123, #loc124])
#loc242 = loc(fused[#loc125, #loc126])
#loc243 = loc(fused[#loc127, #loc124])
#loc244 = loc(fused[#loc130, #loc131])
#loc245 = loc(fused[#loc129, #loc131])
#loc246 = loc(fused[#loc128, #loc132])
#loc247 = loc(fused[#loc133, #loc132])
#loc248 = loc(fused[#loc134, #loc135])
#loc249 = loc(fused[#loc136, #loc137])
#loc250 = loc(fused[#loc138, #loc135])
#loc251 = loc(fused[#loc142, #loc143])
#loc252 = loc(fused[#loc144, #loc145])
#loc253 = loc(fused[#loc146, #loc143])
#loc254 = loc(fused[#loc149, #loc150])
#loc255 = loc(fused[#loc155, #loc156])
#loc256 = loc(fused[#loc157, #loc158])
#loc257 = loc(fused[#loc159, #loc160])
#loc258 = loc(fused[#loc165, #loc166])
#loc261 = loc(fused[#loc182, #loc181])
