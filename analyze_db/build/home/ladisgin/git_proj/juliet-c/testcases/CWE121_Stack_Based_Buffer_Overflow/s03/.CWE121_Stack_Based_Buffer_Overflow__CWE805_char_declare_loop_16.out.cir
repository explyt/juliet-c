!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":98:10)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":98:14)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":98:20)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":98:32)
#loc174 = loc(fused[#loc74, #loc75])
#loc175 = loc(fused[#loc76, #loc77])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc152)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc154)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc156)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %6 ^bb3, ^bb4 loc(#loc17)
  ^bb3:  // pred: ^bb2
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc20)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc16)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc159)
  ^bb6:  // pred: ^bb5
    %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc28)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc29)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc29)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc160)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc33)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc34)
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    cir.br ^bb7 loc(#loc162)
  ^bb7:  // pred: ^bb6
    %27 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc39)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc163)
    cir.br ^bb8 loc(#loc162)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %29 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc42)
    %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc164)
    cir.brcond %32 ^bb9, ^bb13 loc(#loc43)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc165)
  ^bb10:  // pred: ^bb9
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc46)
    %36 = cir.load %35 : !cir.ptr<!s8i>, !s8i loc(#loc46)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc49)
    cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    cir.br ^bb11 loc(#loc38)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc38)
  ^bb12:  // pred: ^bb11
    %40 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc52)
    cir.store %41, %0 : !u64i, !cir.ptr<!u64i> loc(#loc167)
    cir.br ^bb8 loc(#loc162)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc38)
  ^bb14:  // pred: ^bb13
    %42 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc53)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc55)
    %48 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb15 loc(#loc26)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc4)
  } loc(#loc150)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc169)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc171)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc81)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.return %17 : !s32i loc(#loc178)
  } loc(#loc173)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc181)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc183)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc106)
    cir.brcond %6 ^bb3, ^bb4 loc(#loc106)
  ^bb3:  // pred: ^bb2
    %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc109)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc187)
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc105)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc188)
  ^bb6:  // pred: ^bb5
    %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc117)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc118)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc118)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc189)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc122)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc123)
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc125)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc190)
    cir.br ^bb7 loc(#loc191)
  ^bb7:  // pred: ^bb6
    %27 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc128)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    cir.br ^bb8 loc(#loc191)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %29 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc130)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc131)
    %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc193)
    cir.brcond %32 ^bb9, ^bb13 loc(#loc132)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc194)
  ^bb10:  // pred: ^bb9
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc135)
    %36 = cir.load %35 : !cir.ptr<!s8i>, !s8i loc(#loc135)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    cir.br ^bb11 loc(#loc127)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc127)
  ^bb12:  // pred: ^bb11
    %40 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc141)
    cir.store %41, %0 : !u64i, !cir.ptr<!u64i> loc(#loc196)
    cir.br ^bb8 loc(#loc191)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc127)
  ^bb14:  // pred: ^bb13
    %42 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc142)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc144)
    %48 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc146)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc197)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb15 loc(#loc115)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc93)
  } loc(#loc179)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":49:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":37:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":37:16)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":38:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":38:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":25:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":26:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":27:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":35:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":28:11)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":32:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":32:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":33:19)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":33:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":33:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":33:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":34:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":36:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":48:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:16)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:24)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:29)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:33)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:34)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":40:25)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":40:16)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":40:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":40:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":45:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:18)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:14)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:21)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:25)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:23)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":43:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:30)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:18)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:19)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:31)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:31)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:30)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:23)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:14)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:18)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:19)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":47:19)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":47:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":83:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":86:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":85:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":85:13)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":103:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":105:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":108:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":110:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":98:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":113:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":99:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":101:27)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":101:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":101:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":103:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":104:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":104:74)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":105:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":108:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":109:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":109:73)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":110:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":112:12)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":112:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":56:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":81:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":69:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":69:16)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":70:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":70:24)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":58:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":58:12)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":59:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":59:26)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":60:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":60:28)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":61:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":67:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":61:11)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":64:16)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":64:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":65:19)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":65:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":65:14)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":65:15)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":66:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":68:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":80:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:16)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:24)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:29)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:33)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:34)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":72:25)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":72:16)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":72:20)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":72:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":77:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:18)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:14)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:21)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:25)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:23)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":75:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:30)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:23)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:18)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:19)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:31)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:31)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:30)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:23)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:14)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:18)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:19)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":79:19)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":79:9)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc11, #loc12])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc15, #loc16])
#loc157 = loc(fused[#loc19, #loc18])
#loc158 = loc(fused[#loc21, #loc20])
#loc159 = loc(fused[#loc25, #loc26])
#loc160 = loc(fused[#loc31, #loc32])
#loc161 = loc(fused[#loc36, #loc33])
#loc162 = loc(fused[#loc37, #loc38])
#loc163 = loc(fused[#loc40, #loc39])
#loc164 = loc(fused[#loc41, #loc42])
#loc165 = loc(fused[#loc44, #loc38])
#loc166 = loc(fused[#loc47, #loc50])
#loc167 = loc(fused[#loc52, #loc51])
#loc168 = loc(fused[#loc54, #loc53])
#loc169 = loc(fused[#loc60, #loc61])
#loc170 = loc(fused[#loc62, #loc63])
#loc171 = loc(fused[#loc64, #loc65])
#loc172 = loc(fused[#loc66, #loc67])
#loc173 = loc(fused[#loc72, #loc73])
#loc176 = loc(fused[#loc83, #loc84])
#loc177 = loc(fused[#loc87, #loc88])
#loc178 = loc(fused[#loc91, #loc90])
#loc179 = loc(fused[#loc92, #loc93])
#loc180 = loc(fused[#loc94, #loc95])
#loc181 = loc(fused[#loc96, #loc97])
#loc182 = loc(fused[#loc98, #loc99])
#loc183 = loc(fused[#loc100, #loc101])
#loc184 = loc(fused[#loc102, #loc103])
#loc185 = loc(fused[#loc104, #loc105])
#loc186 = loc(fused[#loc108, #loc107])
#loc187 = loc(fused[#loc110, #loc109])
#loc188 = loc(fused[#loc114, #loc115])
#loc189 = loc(fused[#loc120, #loc121])
#loc190 = loc(fused[#loc125, #loc122])
#loc191 = loc(fused[#loc126, #loc127])
#loc192 = loc(fused[#loc129, #loc128])
#loc193 = loc(fused[#loc130, #loc131])
#loc194 = loc(fused[#loc133, #loc127])
#loc195 = loc(fused[#loc136, #loc139])
#loc196 = loc(fused[#loc141, #loc140])
#loc197 = loc(fused[#loc143, #loc142])
