!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":27:23)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":27:28)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":59:27)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":59:32)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":76:27)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":76:32)
#loc119 = loc(fused[#loc12, #loc13])
#loc132 = loc(fused[#loc49, #loc50])
#loc139 = loc(fused[#loc67, #loc68])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc114)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc115)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc119)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc16)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc120)
    cir.store %2, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc120)
    cir.br ^bb2 loc(#loc122)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc21)
    %4 = cir.const #cir.int<3> : !s32i loc(#loc22)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc22)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc22)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
    %10 = cir.binop(add, %7, %9) : !u64i loc(#loc22)
    %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc22)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc115)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc24)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
    %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc123)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc124)
  ^bb3:  // pred: ^bb2
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
    %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc30)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.br ^bb5 loc(#loc27)
  ^bb4:  // pred: ^bb2
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc11)
  } loc(#loc118)
  cir.func private @printIntLine(!s32i) loc(#loc126)
  cir.func @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc128)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc41)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc43)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc130)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc46)
    cir.return loc(#loc37)
  } loc(#loc127)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc49, #loc50])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc132)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc51)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc52)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.return loc(#loc48)
  } loc(#loc131)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc59)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc61)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc137)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc64)
    cir.return loc(#loc55)
  } loc(#loc134)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc67, #loc68])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc139)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc71)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc140)
    cir.store %2, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc140)
    cir.br ^bb2 loc(#loc142)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc76)
    %4 = cir.const #cir.int<3> : !s32i loc(#loc77)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc77)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc77)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc77)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc77)
    %10 = cir.binop(add, %7, %9) : !u64i loc(#loc77)
    %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc77)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc115)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
    %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc79)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc80)
    %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc143)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc144)
  ^bb3:  // pred: ^bb2
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
    %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb5 loc(#loc82)
  ^bb4:  // pred: ^bb2
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc88)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb5 loc(#loc75)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc75)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc66)
  } loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc90)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc96)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc98)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc150)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc151)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %8 = cir.binop(div, %6, %7) : !s32i loc(#loc152)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc108)
    cir.br ^bb4 loc(#loc104)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc90)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc92)
  } loc(#loc146)
  cir.func @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L7goodG2BEv() : () -> () loc(#loc112)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L7goodB2GEv() : () -> () loc(#loc113)
    cir.return loc(#loc111)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":39:23)
#loc10 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":27:1)
#loc11 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":42:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":30:9)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":30:45)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":28:1)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":29:5)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":41:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:9)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":40:9)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:19)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:32)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:49)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:13)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:59)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":33:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":36:9)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":38:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":35:25)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":35:20)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":35:13)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":35:36)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":39:13)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":44:1)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":52:1)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":46:5)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":46:9)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":48:13)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":48:12)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":48:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":49:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":51:18)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":51:24)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":51:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":59:1)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":63:1)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":60:1)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":62:12)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":62:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":65:1)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":73:1)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":67:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":67:9)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":69:13)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":69:12)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":69:5)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":70:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":72:18)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":72:24)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":72:5)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":76:1)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":91:1)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":79:9)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":79:45)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":77:1)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":78:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":90:5)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:9)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":89:9)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:19)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:32)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:49)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:13)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:59)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":82:9)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":85:9)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":87:9)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":84:25)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":84:20)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":84:13)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":84:36)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":88:23)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":88:13)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":106:19)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":93:1)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":108:1)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":95:5)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":95:9)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":97:13)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":97:12)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":97:5)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":98:5)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":100:5)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":107:5)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":100:9)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":100:17)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":101:5)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":103:5)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":105:5)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":102:22)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":102:28)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":102:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":106:9)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":110:1)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":114:1)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":112:5)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":113:5)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc10, #loc11])
#loc120 = loc(fused[#loc14, #loc15])
#loc121 = loc(fused[#loc17, #loc18])
#loc122 = loc(fused[#loc19, #loc20])
#loc123 = loc(fused[#loc24, #loc25])
#loc124 = loc(fused[#loc26, #loc27, #loc28, #loc20])
#loc125 = loc(fused[#loc31, #loc32])
#loc126 = loc(fused[#loc34, #loc35])
#loc127 = loc(fused[#loc36, #loc37])
#loc128 = loc(fused[#loc38, #loc39])
#loc129 = loc(fused[#loc42, #loc40])
#loc130 = loc(fused[#loc44, #loc45])
#loc131 = loc(fused[#loc47, #loc48])
#loc133 = loc(fused[#loc53, #loc52])
#loc134 = loc(fused[#loc54, #loc55])
#loc135 = loc(fused[#loc56, #loc57])
#loc136 = loc(fused[#loc60, #loc58])
#loc137 = loc(fused[#loc62, #loc63])
#loc138 = loc(fused[#loc65, #loc66])
#loc140 = loc(fused[#loc69, #loc70])
#loc141 = loc(fused[#loc72, #loc73])
#loc142 = loc(fused[#loc74, #loc75])
#loc143 = loc(fused[#loc79, #loc80])
#loc144 = loc(fused[#loc81, #loc82, #loc83, #loc75])
#loc145 = loc(fused[#loc86, #loc87])
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc93, #loc94])
#loc148 = loc(fused[#loc97, #loc95])
#loc149 = loc(fused[#loc99, #loc100])
#loc150 = loc(fused[#loc101, #loc102])
#loc151 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc152 = loc(fused[#loc106, #loc107])
#loc153 = loc(fused[#loc110, #loc111])
