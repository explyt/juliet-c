!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":42:26)
#loc72 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":95:26)
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc99)
  cir.global "private" internal dsolocal @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_badData = #cir.int<0> : !u32i {alignment = 4 : i64} loc(#loc100)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc102)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc9)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc103)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc11)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc11)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc11)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc11)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc11)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc11)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc11)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc11)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc11)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc11)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc11)
    cir.br ^bb3(%18 : !u32i) loc(#loc11)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc11)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc11)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc11)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc11)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc11)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc11)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc11)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc11)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc11)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc11)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc11)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc11)
    cir.br ^bb3(%34 : !u32i) loc(#loc11)
  ^bb3(%35: !u32i loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":42:26)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc11)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc11)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc11)
    cir.store %37, %0 : !u32i, !cir.ptr<!u32i> loc(#loc104)
    %38 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc13)
    %39 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_badData : !cir.ptr<!u32i> loc(#loc100)
    cir.store %38, %39 : !u32i, !cir.ptr<!u32i> loc(#loc105)
    %40 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc106)
    cir.call %40() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc101)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc107)
  cir.func private @printUnsignedLine(!u32i) loc(#loc110)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc112)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc113)
    %2 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_badData : !cir.ptr<!u32i> loc(#loc100)
    %3 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc30)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc33)
    %5 = cir.unary(dec, %4) : !u32i, !u32i loc(#loc33)
    cir.store %5, %1 : !u32i, !cir.ptr<!u32i> loc(#loc115)
    %6 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc28)
    cir.store %6, %0 : !u32i, !cir.ptr<!u32i> loc(#loc112)
    %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc35)
    cir.call @printUnsignedLine(%7) : (!u32i) -> () loc(#loc36)
    cir.br ^bb2 loc(#loc32)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc26)
  } loc(#loc111)
  cir.global "private" internal dsolocal @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_goodG2BData = #cir.int<0> : !u32i {alignment = 4 : i64} loc(#loc116)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc118)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc43)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc119)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc46)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc46)
    cir.store %5, %0 : !u32i, !cir.ptr<!u32i> loc(#loc120)
    %6 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc48)
    %7 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_goodG2BData : !cir.ptr<!u32i> loc(#loc116)
    cir.store %6, %7 : !u32i, !cir.ptr<!u32i> loc(#loc121)
    %8 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %8() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc40)
  } loc(#loc117)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc125)
    %2 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_goodG2BData : !cir.ptr<!u32i> loc(#loc116)
    %3 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc57)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc60)
    %5 = cir.unary(dec, %4) : !u32i, !u32i loc(#loc60)
    cir.store %5, %1 : !u32i, !cir.ptr<!u32i> loc(#loc127)
    %6 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc55)
    cir.store %6, %0 : !u32i, !cir.ptr<!u32i> loc(#loc124)
    %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc62)
    cir.call @printUnsignedLine(%7) : (!u32i) -> () loc(#loc63)
    cir.br ^bb2 loc(#loc59)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc53)
  } loc(#loc123)
  cir.global "private" internal dsolocal @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_goodB2GData = #cir.int<0> : !u32i {alignment = 4 : i64} loc(#loc128)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc70)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc131)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc72)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc72)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc72)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc72)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc72)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc72)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc72)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc72)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc72)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc72)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc72)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc72)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc72)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc72)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc72)
    cir.br ^bb3(%18 : !u32i) loc(#loc72)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc72)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc72)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc72)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc72)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc72)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc72)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc72)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc72)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc72)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc72)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc72)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc72)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc72)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc72)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc72)
    cir.br ^bb3(%34 : !u32i) loc(#loc72)
  ^bb3(%35: !u32i loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":95:26)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc72)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc72)
    cir.store %37, %0 : !u32i, !cir.ptr<!u32i> loc(#loc132)
    %38 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc74)
    %39 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_goodB2GData : !cir.ptr<!u32i> loc(#loc128)
    cir.store %38, %39 : !u32i, !cir.ptr<!u32i> loc(#loc133)
    %40 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %40() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc67)
  } loc(#loc129)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc138)
    %2 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_predec_45_goodB2GData : !cir.ptr<!u32i> loc(#loc128)
    %3 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc86)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc89)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc90)
    %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc140)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc141)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc94)
    %9 = cir.unary(dec, %8) : !u32i, !u32i loc(#loc94)
    cir.store %9, %1 : !u32i, !cir.ptr<!u32i> loc(#loc142)
    %10 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc84)
    cir.store %10, %0 : !u32i, !cir.ptr<!u32i> loc(#loc137)
    %11 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc96)
    cir.call @printUnsignedLine(%11) : (!u32i) -> () loc(#loc97)
    cir.br ^bb4 loc(#loc92)
  ^bb3:  // pred: ^bb1
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc80)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb4 loc(#loc88)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc88)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc82)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":20:1)
#loc4 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":20:21)
#loc5 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":37:1)
#loc6 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":45:1)
#loc7 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":39:5)
#loc8 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":39:18)
#loc9 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":40:12)
#loc10 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":40:5)
#loc12 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":42:5)
#loc13 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":43:69)
#loc14 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":43:5)
#loc15 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":44:5)
#loc16 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":44:13)
#loc17 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":100:1)
#loc18 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":104:1)
#loc19 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":102:5)
#loc20 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":102:13)
#loc21 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":103:5)
#loc22 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":103:13)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc25 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":26:1)
#loc26 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":35:1)
#loc27 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":32:9)
#loc28 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":32:31)
#loc29 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":28:5)
#loc30 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":28:25)
#loc31 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":29:5)
#loc32 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":34:5)
#loc33 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":31:9)
#loc34 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":31:11)
#loc35 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":33:27)
#loc36 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":33:9)
#loc37 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":21:1)
#loc38 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":21:21)
#loc39 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":63:1)
#loc40 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":71:1)
#loc41 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":65:5)
#loc42 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":65:18)
#loc43 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":66:12)
#loc44 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":66:5)
#loc45 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":68:13)
#loc46 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":68:12)
#loc47 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":68:5)
#loc48 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":69:73)
#loc49 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":69:5)
#loc50 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":70:5)
#loc51 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":70:17)
#loc52 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":52:1)
#loc53 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":61:1)
#loc54 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":58:9)
#loc55 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":58:31)
#loc56 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":54:5)
#loc57 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":54:25)
#loc58 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":55:5)
#loc59 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":60:5)
#loc60 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":57:9)
#loc61 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":57:11)
#loc62 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":59:27)
#loc63 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":59:9)
#loc64 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":22:1)
#loc65 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":22:21)
#loc66 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":90:1)
#loc67 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":98:1)
#loc68 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":92:5)
#loc69 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":92:18)
#loc70 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":93:12)
#loc71 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":93:5)
#loc73 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":95:5)
#loc74 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":96:73)
#loc75 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":96:5)
#loc76 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":97:5)
#loc77 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":97:17)
#loc78 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc79 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc80 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":86:19)
#loc81 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":74:1)
#loc82 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":88:1)
#loc83 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":81:9)
#loc84 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":81:31)
#loc85 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":76:5)
#loc86 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":76:25)
#loc87 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":78:5)
#loc88 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":87:5)
#loc89 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":78:9)
#loc90 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":78:16)
#loc91 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":79:5)
#loc92 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":83:5)
#loc93 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":85:5)
#loc94 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":80:9)
#loc95 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":80:11)
#loc96 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":82:27)
#loc97 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":82:9)
#loc98 = loc("CWE191_Integer_Underflow__unsigned_int_rand_predec_45.c":86:9)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc10, #loc9])
#loc104 = loc(fused[#loc12, #loc11])
#loc105 = loc(fused[#loc14, #loc13])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc17, #loc18])
#loc108 = loc(fused[#loc19, #loc20])
#loc109 = loc(fused[#loc21, #loc22])
#loc110 = loc(fused[#loc23, #loc24])
#loc111 = loc(fused[#loc25, #loc26])
#loc112 = loc(fused[#loc27, #loc28])
#loc113 = loc(fused[#loc29, #loc30])
#loc114 = loc(fused[#loc31, #loc32])
#loc115 = loc(fused[#loc33, #loc34])
#loc116 = loc(fused[#loc37, #loc38])
#loc117 = loc(fused[#loc39, #loc40])
#loc118 = loc(fused[#loc41, #loc42])
#loc119 = loc(fused[#loc44, #loc43])
#loc120 = loc(fused[#loc47, #loc45])
#loc121 = loc(fused[#loc49, #loc48])
#loc122 = loc(fused[#loc50, #loc51])
#loc123 = loc(fused[#loc52, #loc53])
#loc124 = loc(fused[#loc54, #loc55])
#loc125 = loc(fused[#loc56, #loc57])
#loc126 = loc(fused[#loc58, #loc59])
#loc127 = loc(fused[#loc60, #loc61])
#loc128 = loc(fused[#loc64, #loc65])
#loc129 = loc(fused[#loc66, #loc67])
#loc130 = loc(fused[#loc68, #loc69])
#loc131 = loc(fused[#loc71, #loc70])
#loc132 = loc(fused[#loc73, #loc72])
#loc133 = loc(fused[#loc75, #loc74])
#loc134 = loc(fused[#loc76, #loc77])
#loc135 = loc(fused[#loc78, #loc79])
#loc136 = loc(fused[#loc81, #loc82])
#loc137 = loc(fused[#loc83, #loc84])
#loc138 = loc(fused[#loc85, #loc86])
#loc139 = loc(fused[#loc87, #loc88])
#loc140 = loc(fused[#loc89, #loc90])
#loc141 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc142 = loc(fused[#loc94, #loc95])
