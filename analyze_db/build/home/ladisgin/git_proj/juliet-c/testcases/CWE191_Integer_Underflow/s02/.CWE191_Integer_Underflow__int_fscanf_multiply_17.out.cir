!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc67 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":116:10)
#loc68 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":116:14)
#loc69 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":116:20)
#loc70 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":116:32)
#loc209 = loc(fused[#loc67, #loc68])
#loc210 = loc(fused[#loc69, #loc70])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc180)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc182)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc185)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc186)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc187)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.br ^bb1 loc(#loc189)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc21)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    cir.br ^bb2 loc(#loc189)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc191)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc25)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc192)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc181)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc27)
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc30)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb2 loc(#loc189)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc194)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb10 loc(#loc194)
  ^bb10:  // 2 preds: ^bb9, ^bb18
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %20 ^bb11, ^bb19 loc(#loc37)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc197)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc198)
  ^bb13:  // pred: ^bb12
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc199)
    cir.brcond %23 ^bb14, ^bb15 loc(#loc200)
  ^bb14:  // pred: ^bb13
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %26 = cir.binop(mul, %24, %25) nsw : !s32i loc(#loc44)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc46)
    cir.br ^bb15 loc(#loc40)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc40)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc32)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc32)
  ^bb18:  // pred: ^bb17
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc48)
    cir.store %29, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb10 loc(#loc194)
  ^bb19:  // pred: ^bb10
    cir.br ^bb20 loc(#loc32)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc9)
  } loc(#loc183)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc202)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc205)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc206)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc64)
  cir.func @main(%arg0: !s32i loc(fused[#loc67, #loc68]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc69, #loc70])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc71)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc72)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc73)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc73)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc74)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc61)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fscanf_multiply_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE191_Integer_Underflow__int_fscanf_multiply_17_good() : () -> () loc(#loc76)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc63)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fscanf_multiply_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call @CWE191_Integer_Underflow__int_fscanf_multiply_17_bad() : () -> () loc(#loc80)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    cir.return %17 : !s32i loc(#loc213)
  } loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc85)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc215)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc216)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc217)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc218)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb1 loc(#loc220)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb2 loc(#loc220)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc222)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc103)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc223)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc105)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc181)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc106)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc107)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc107)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc105)
    cir.br ^bb5 loc(#loc98)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc98)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc109)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb2 loc(#loc220)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc225)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc112)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb10 loc(#loc225)
  ^bb10:  // 2 preds: ^bb9, ^bb23
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc227)
    cir.brcond %20 ^bb11, ^bb24 loc(#loc116)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc228)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc229)
  ^bb13:  // pred: ^bb12
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc230)
    cir.brcond %23 ^bb14, ^bb20 loc(#loc231)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc232)
  ^bb15:  // pred: ^bb14
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %25 = cir.const #cir.int<2147483647> : !s32i loc(#loc126)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc126)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc126)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc127)
    %30 = cir.binop(div, %28, %29) : !s32i loc(#loc233)
    %31 = cir.cmp(gt, %24, %30) : !s32i, !cir.bool loc(#loc234)
    cir.brcond %31 ^bb16, ^bb17 loc(#loc235)
  ^bb16:  // pred: ^bb15
    %32 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc89)
    %34 = cir.binop(mul, %32, %33) nsw : !s32i loc(#loc132)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc134)
    cir.br ^bb18 loc(#loc130)
  ^bb17:  // pred: ^bb15
    %36 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc85)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.br ^bb18 loc(#loc124)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc124)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc119)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc119)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc111)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc111)
  ^bb23:  // pred: ^bb22
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %39 = cir.unary(inc, %38) : !s32i, !s32i loc(#loc137)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb10 loc(#loc225)
  ^bb24:  // pred: ^bb10
    cir.br ^bb25 loc(#loc111)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc87)
  } loc(#loc214)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc238)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc239)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc240)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc241)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc147)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc151)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb2 loc(#loc243)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc245)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc155)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc246)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<2> : !s32i loc(#loc157)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc158)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb5 loc(#loc150)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc150)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc161)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.br ^bb2 loc(#loc243)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc150)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc249)
  ^bb9:  // pred: ^bb8
    %13 = cir.const #cir.int<0> : !s32i loc(#loc164)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    cir.br ^bb10 loc(#loc249)
  ^bb10:  // 2 preds: ^bb9, ^bb18
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc251)
    cir.brcond %16 ^bb11, ^bb19 loc(#loc168)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc252)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc253)
  ^bb13:  // pred: ^bb12
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %19 ^bb14, ^bb15 loc(#loc255)
  ^bb14:  // pred: ^bb13
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc141)
    %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc175)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc177)
    cir.br ^bb15 loc(#loc171)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc171)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc163)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc163)
  ^bb18:  // pred: ^bb17
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc179)
    cir.store %25, %2 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.br ^bb10 loc(#loc249)
  ^bb19:  // pred: ^bb10
    cir.br ^bb20 loc(#loc163)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc139)
  } loc(#loc237)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":31:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":22:1)
#loc9 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":42:1)
#loc10 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":38:13)
#loc11 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":38:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":24:5)
#loc13 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":24:9)
#loc14 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":24:11)
#loc15 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":25:5)
#loc16 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":25:9)
#loc17 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":27:12)
#loc18 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":27:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":28:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":32:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":28:13)
#loc22 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":28:9)
#loc23 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":28:16)
#loc24 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":28:20)
#loc25 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":28:18)
#loc26 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":29:5)
#loc27 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":31:9)
#loc28 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":31:16)
#loc29 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":28:24)
#loc30 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":28:23)
#loc31 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":33:5)
#loc32 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":41:5)
#loc33 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":33:13)
#loc34 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":33:9)
#loc35 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":33:16)
#loc36 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":33:20)
#loc37 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":33:18)
#loc38 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":34:5)
#loc39 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":35:9)
#loc40 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":40:9)
#loc41 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":35:12)
#loc42 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":35:19)
#loc43 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":36:9)
#loc44 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":38:26)
#loc45 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":39:26)
#loc46 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":39:13)
#loc47 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":33:24)
#loc48 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":33:23)
#loc49 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":101:1)
#loc50 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":105:1)
#loc51 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":103:5)
#loc52 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":103:13)
#loc53 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":104:5)
#loc54 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":104:13)
#loc55 = loc("/usr/include/stdlib.h":575:1)
#loc56 = loc("/usr/include/stdlib.h":575:41)
#loc57 = loc("/usr/include/time.h":76:1)
#loc58 = loc("/usr/include/time.h":76:38)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc61 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":121:15)
#loc62 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":123:15)
#loc63 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":126:15)
#loc64 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":128:15)
#loc65 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":116:1)
#loc66 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":131:1)
#loc71 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":117:1)
#loc72 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":119:27)
#loc73 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":119:22)
#loc74 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":119:5)
#loc75 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":121:5)
#loc76 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":122:5)
#loc77 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":122:59)
#loc78 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":123:5)
#loc79 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":126:5)
#loc80 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":127:5)
#loc81 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":127:58)
#loc82 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":128:5)
#loc83 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":130:12)
#loc84 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":130:5)
#loc85 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":72:27)
#loc86 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":49:1)
#loc87 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":76:1)
#loc88 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":67:17)
#loc89 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":67:37)
#loc90 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":51:5)
#loc91 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":51:9)
#loc92 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":51:11)
#loc93 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":52:5)
#loc94 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":52:9)
#loc95 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":54:12)
#loc96 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":54:5)
#loc97 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":55:5)
#loc98 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":59:5)
#loc99 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":55:13)
#loc100 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":55:9)
#loc101 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":55:16)
#loc102 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":55:20)
#loc103 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":55:18)
#loc104 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":56:5)
#loc105 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":58:9)
#loc106 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":58:16)
#loc107 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":58:23)
#loc108 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":55:24)
#loc109 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":55:23)
#loc110 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":60:5)
#loc111 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":75:5)
#loc112 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":60:13)
#loc113 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":60:9)
#loc114 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":60:16)
#loc115 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":60:20)
#loc116 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":60:18)
#loc117 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":61:5)
#loc118 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":62:9)
#loc119 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":74:9)
#loc120 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":62:12)
#loc121 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":62:19)
#loc122 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":63:9)
#loc123 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":65:13)
#loc124 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":73:13)
#loc125 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":65:17)
#loc126 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":65:25)
#loc127 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":65:33)
#loc128 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":65:34)
#loc129 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":66:13)
#loc130 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":69:13)
#loc131 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":71:13)
#loc132 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":67:30)
#loc133 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":68:30)
#loc134 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":68:17)
#loc135 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":72:17)
#loc136 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":60:24)
#loc137 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":60:23)
#loc138 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":79:1)
#loc139 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":99:1)
#loc140 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":95:13)
#loc141 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":95:33)
#loc142 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":81:5)
#loc143 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":81:9)
#loc144 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":81:11)
#loc145 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":82:5)
#loc146 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":82:9)
#loc147 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":84:12)
#loc148 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":84:5)
#loc149 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":85:5)
#loc150 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":89:5)
#loc151 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":85:13)
#loc152 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":85:9)
#loc153 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":85:16)
#loc154 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":85:20)
#loc155 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":85:18)
#loc156 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":86:5)
#loc157 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":88:17)
#loc158 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":88:16)
#loc159 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":88:9)
#loc160 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":85:24)
#loc161 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":85:23)
#loc162 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":90:5)
#loc163 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":98:5)
#loc164 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":90:13)
#loc165 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":90:9)
#loc166 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":90:16)
#loc167 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":90:20)
#loc168 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":90:18)
#loc169 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":91:5)
#loc170 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":92:9)
#loc171 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":97:9)
#loc172 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":92:12)
#loc173 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":92:19)
#loc174 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":93:9)
#loc175 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":95:26)
#loc176 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":96:26)
#loc177 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":96:13)
#loc178 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":90:24)
#loc179 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_17.c":90:23)
#loc180 = loc(fused[#loc1, #loc2])
#loc181 = loc(fused[#loc3, #loc4])
#loc182 = loc(fused[#loc6, #loc7])
#loc183 = loc(fused[#loc8, #loc9])
#loc184 = loc(fused[#loc10, #loc11])
#loc185 = loc(fused[#loc12, #loc13])
#loc186 = loc(fused[#loc12, #loc14])
#loc187 = loc(fused[#loc15, #loc16])
#loc188 = loc(fused[#loc18, #loc17])
#loc189 = loc(fused[#loc19, #loc20])
#loc190 = loc(fused[#loc22, #loc21])
#loc191 = loc(fused[#loc23, #loc24])
#loc192 = loc(fused[#loc26, #loc20])
#loc193 = loc(fused[#loc30, #loc29])
#loc194 = loc(fused[#loc31, #loc32])
#loc195 = loc(fused[#loc34, #loc33])
#loc196 = loc(fused[#loc35, #loc36])
#loc197 = loc(fused[#loc38, #loc32])
#loc198 = loc(fused[#loc39, #loc40])
#loc199 = loc(fused[#loc41, #loc42])
#loc200 = loc(fused[#loc43, #loc40])
#loc201 = loc(fused[#loc48, #loc47])
#loc202 = loc(fused[#loc49, #loc50])
#loc203 = loc(fused[#loc51, #loc52])
#loc204 = loc(fused[#loc53, #loc54])
#loc205 = loc(fused[#loc55, #loc56])
#loc206 = loc(fused[#loc57, #loc58])
#loc207 = loc(fused[#loc59, #loc60])
#loc208 = loc(fused[#loc65, #loc66])
#loc211 = loc(fused[#loc76, #loc77])
#loc212 = loc(fused[#loc80, #loc81])
#loc213 = loc(fused[#loc84, #loc83])
#loc214 = loc(fused[#loc86, #loc87])
#loc215 = loc(fused[#loc88, #loc89])
#loc216 = loc(fused[#loc90, #loc91])
#loc217 = loc(fused[#loc90, #loc92])
#loc218 = loc(fused[#loc93, #loc94])
#loc219 = loc(fused[#loc96, #loc95])
#loc220 = loc(fused[#loc97, #loc98])
#loc221 = loc(fused[#loc100, #loc99])
#loc222 = loc(fused[#loc101, #loc102])
#loc223 = loc(fused[#loc104, #loc98])
#loc224 = loc(fused[#loc109, #loc108])
#loc225 = loc(fused[#loc110, #loc111])
#loc226 = loc(fused[#loc113, #loc112])
#loc227 = loc(fused[#loc114, #loc115])
#loc228 = loc(fused[#loc117, #loc111])
#loc229 = loc(fused[#loc118, #loc119])
#loc230 = loc(fused[#loc120, #loc121])
#loc231 = loc(fused[#loc122, #loc119])
#loc232 = loc(fused[#loc123, #loc124])
#loc233 = loc(fused[#loc126, #loc127])
#loc234 = loc(fused[#loc125, #loc128])
#loc235 = loc(fused[#loc129, #loc130, #loc131, #loc124])
#loc236 = loc(fused[#loc137, #loc136])
#loc237 = loc(fused[#loc138, #loc139])
#loc238 = loc(fused[#loc140, #loc141])
#loc239 = loc(fused[#loc142, #loc143])
#loc240 = loc(fused[#loc142, #loc144])
#loc241 = loc(fused[#loc145, #loc146])
#loc242 = loc(fused[#loc148, #loc147])
#loc243 = loc(fused[#loc149, #loc150])
#loc244 = loc(fused[#loc152, #loc151])
#loc245 = loc(fused[#loc153, #loc154])
#loc246 = loc(fused[#loc156, #loc150])
#loc247 = loc(fused[#loc159, #loc157])
#loc248 = loc(fused[#loc161, #loc160])
#loc249 = loc(fused[#loc162, #loc163])
#loc250 = loc(fused[#loc165, #loc164])
#loc251 = loc(fused[#loc166, #loc167])
#loc252 = loc(fused[#loc169, #loc163])
#loc253 = loc(fused[#loc170, #loc171])
#loc254 = loc(fused[#loc172, #loc173])
#loc255 = loc(fused[#loc174, #loc171])
#loc256 = loc(fused[#loc179, #loc178])
