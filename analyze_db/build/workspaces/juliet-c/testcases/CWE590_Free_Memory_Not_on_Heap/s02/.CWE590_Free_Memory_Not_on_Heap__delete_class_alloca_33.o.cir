!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc36 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc68)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc69)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc71)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc72)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc73)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc74)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc14)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc15)
    cir.store %4, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc75)
    cir.br ^bb1 loc(#loc76)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<8> : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc8)
    cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc71)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc19)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc20)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc23)
    %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
    cir.store %15, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc79)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc80)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc10)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc10)
    cir.store %17, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc72)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc31)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc32)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc70)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc81)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc36)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc36)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
    cir.return loc(#loc36)
  } loc(#loc36)
  cir.func internal private @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc83)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc84)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc85)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc86)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc46)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc47)
    cir.store %4, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc87)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<8> : !u64i loc(#loc89)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc83)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
    cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc40)
    cir.store %7, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc83)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc55)
    %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc56)
    cir.store %14, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc92)
    cir.br ^bb2 loc(#loc50)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc93)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc42)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc42)
    cir.store %16, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc84)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc62)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc63)
    cir.call @_ZdlPv(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc38)
  } loc(#loc82)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33L7goodG2BEv() : () -> () loc(#loc67)
    cir.return loc(#loc66)
  } loc(#loc94)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":44:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":33:9)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":33:53)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":39:9)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":39:31)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":28:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":28:20)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":29:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":29:31)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":30:12)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":30:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":31:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":37:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":34:30)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":34:9)
#loc21 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":35:30)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":35:9)
#loc24 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":36:16)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":36:9)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":38:5)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":43:5)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":40:22)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":40:28)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":40:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":42:16)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":26:6)
#loc34 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc35 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":51:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":69:1)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":58:9)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":58:41)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":64:9)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":64:31)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":53:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":53:20)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":54:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":54:31)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":55:12)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":55:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":56:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":62:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":58:37)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":59:30)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":59:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":60:30)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":60:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":61:16)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":61:9)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":63:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":68:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":65:22)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":65:28)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":65:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":67:16)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":51:13)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":71:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":74:1)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_33.cpp":73:5)
#loc68 = loc(fused[#loc1, #loc2])
#loc69 = loc(fused[#loc3, #loc4])
#loc70 = loc(fused[#loc5, #loc6])
#loc71 = loc(fused[#loc7, #loc8])
#loc72 = loc(fused[#loc9, #loc10])
#loc73 = loc(fused[#loc11, #loc12])
#loc74 = loc(fused[#loc13, #loc14])
#loc75 = loc(fused[#loc16, #loc15])
#loc76 = loc(fused[#loc17, #loc18])
#loc77 = loc(fused[#loc20, #loc19])
#loc78 = loc(fused[#loc23, #loc22])
#loc79 = loc(fused[#loc26, #loc25])
#loc80 = loc(fused[#loc27, #loc28])
#loc81 = loc(fused[#loc34, #loc35])
#loc82 = loc(fused[#loc37, #loc38])
#loc83 = loc(fused[#loc39, #loc40])
#loc84 = loc(fused[#loc41, #loc42])
#loc85 = loc(fused[#loc43, #loc44])
#loc86 = loc(fused[#loc45, #loc46])
#loc87 = loc(fused[#loc48, #loc47])
#loc88 = loc(fused[#loc49, #loc50])
#loc89 = loc(fused[#loc51, #loc40])
#loc90 = loc(fused[#loc53, #loc52])
#loc91 = loc(fused[#loc55, #loc54])
#loc92 = loc(fused[#loc57, #loc56])
#loc93 = loc(fused[#loc58, #loc59])
#loc94 = loc(fused[#loc65, #loc66])
