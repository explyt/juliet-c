!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":28:21)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":28:28)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":69:25)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":69:32)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":104:25)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":104:32)
#true = #cir.bool<true> : !cir.bool
#loc186 = loc(fused[#loc15, #loc16])
#loc210 = loc(fused[#loc74, #loc75])
#loc230 = loc(fused[#loc127, #loc128])
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc180)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc181)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc183)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc12)
  cir.func internal private @badSink(%arg0: !u64i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc186)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc17)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc188)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc24)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc190)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc191)
        cir.if %4 {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc30)
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc31)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc193)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc194)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc195)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
          cir.scope {
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc198)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc41)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc42)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc43)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
            } loc(#loc199)
          } loc(#loc197)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc44)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc47)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc48)
          %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc48)
        } else {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc12)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc50)
        } loc(#loc192)
      } loc(#loc189)
    } loc(#loc187)
    cir.return loc(#loc14)
  } loc(#loc185)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc200)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc203)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!u64i)>> loc(#loc58)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc203)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc59)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc204)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc61)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc61)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc205)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc64)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc64)
    cir.return loc(#loc54)
  } loc(#loc201)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc68)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc208)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc70)
    cir.return loc(#loc67)
  } loc(#loc206)
  cir.func internal private @goodG2BSink(%arg0: !u64i loc(fused[#loc74, #loc75])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc210)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc76)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc212)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc214)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc215)
        cir.if %4 {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc89)
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc90)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc217)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc218)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc219)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
          cir.scope {
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc222)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc100)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc102)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
            } loc(#loc223)
          } loc(#loc221)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc103)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc105)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc105)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc107)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc108)
          %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc108)
        } else {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc110)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc110)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc111)
        } loc(#loc216)
      } loc(#loc213)
    } loc(#loc211)
    cir.return loc(#loc73)
  } loc(#loc209)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!u64i)>> loc(#loc117)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc226)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc118)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc120)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc120)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc228)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc122)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc122)
    cir.return loc(#loc113)
  } loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc124)
  cir.func internal private @goodB2GSink(%arg0: !u64i loc(fused[#loc127, #loc128])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc230)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc129)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc232)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc136)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc234)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc235)
        %5 = cir.ternary(%4, true {
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc141)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc141)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc236)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc139)
            cir.yield %11 : !cir.bool loc(#loc139)
          }, false {
            %11 = cir.const #false loc(#loc139)
            cir.yield %11 : !cir.bool loc(#loc139)
          }) : (!cir.bool) -> !cir.bool loc(#loc139)
          cir.yield %10 : !cir.bool loc(#loc139)
        }, false {
          %6 = cir.const #false loc(#loc139)
          cir.yield %6 : !cir.bool loc(#loc139)
        }) : (!cir.bool) -> !cir.bool loc(#loc139)
        cir.if %5 {
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc145)
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc146)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc238)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc239)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc240)
          cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
          cir.scope {
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc154)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc154)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc243)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc156)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc157)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc158)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
            } loc(#loc244)
          } loc(#loc242)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc159)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc161)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc161)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
          %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc164)
          %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc165)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
        } else {
          %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc124)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc124)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc166)
        } loc(#loc237)
      } loc(#loc233)
    } loc(#loc231)
    cir.return loc(#loc126)
  } loc(#loc229)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!u64i)>> loc(#loc172)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc247)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc173)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc175)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc175)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc178)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc179)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc178)
    cir.return loc(#loc168)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":40:30)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":46:23)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":28:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":49:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":29:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":30:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":48:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":31:9)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":31:16)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":35:9)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":47:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":35:13)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":35:20)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":35:39)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":36:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":43:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":45:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:32)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:39)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:44)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:55)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:56)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:45)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:17)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:29)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:35)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:36)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:42)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:41)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":40:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":40:20)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":41:23)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":41:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":42:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":42:18)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":46:13)
#loc51 = loc("/usr/include/stdlib.h":573:1)
#loc52 = loc("/usr/include/stdlib.h":573:24)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":51:1)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":62:1)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":53:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":53:12)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":55:5)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":55:32)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":57:12)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":57:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":59:12)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":59:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":59:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":61:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":61:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":138:1)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":142:1)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":140:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":140:13)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":141:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":141:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":69:1)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":90:1)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":70:1)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":71:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":89:5)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":72:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":72:16)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":76:9)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":88:9)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":76:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":76:20)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":76:39)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":77:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":84:9)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":86:9)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:32)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:39)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:44)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:55)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:56)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:45)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:29)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:35)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:36)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:42)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:41)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":81:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":81:20)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":81:30)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":82:23)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":82:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":83:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":83:18)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":87:23)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":87:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":92:1)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":101:1)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":94:5)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":94:12)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":95:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":95:32)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":97:12)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":97:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":99:12)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":99:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":100:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":100:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":122:23)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":104:1)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":125:1)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":105:1)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":106:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":124:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":107:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":107:16)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":123:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:20)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:39)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:41)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:44)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:51)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":112:9)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":119:9)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":121:9)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:32)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:39)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:44)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:55)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:56)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:45)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:17)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:29)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:35)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:36)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:42)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:41)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":116:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":116:20)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":116:30)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":117:23)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":117:13)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":118:13)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":118:18)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":122:13)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":127:1)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":136:1)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":129:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":129:12)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":130:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":130:32)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":132:12)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":132:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":134:12)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":134:5)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":134:17)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":135:5)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":135:13)
#loc180 = loc(fused[#loc1, #loc2])
#loc181 = loc(fused[#loc3, #loc4])
#loc182 = loc(fused[#loc5, #loc6])
#loc183 = loc(fused[#loc8, #loc9])
#loc184 = loc(fused[#loc10, #loc11])
#loc185 = loc(fused[#loc13, #loc14])
#loc187 = loc(fused[#loc18, #loc19])
#loc188 = loc(fused[#loc20, #loc21])
#loc189 = loc(fused[#loc22, #loc23])
#loc190 = loc(fused[#loc25, #loc26])
#loc191 = loc(fused[#loc24, #loc26])
#loc192 = loc(fused[#loc27, #loc28, #loc29, #loc23])
#loc193 = loc(fused[#loc32, #loc33])
#loc194 = loc(fused[#loc31, #loc33])
#loc195 = loc(fused[#loc30, #loc34])
#loc196 = loc(fused[#loc35, #loc34])
#loc197 = loc(fused[#loc36, #loc37])
#loc198 = loc(fused[#loc38, #loc39])
#loc199 = loc(fused[#loc40, #loc37])
#loc200 = loc(fused[#loc51, #loc52])
#loc201 = loc(fused[#loc53, #loc54])
#loc202 = loc(fused[#loc55, #loc56])
#loc203 = loc(fused[#loc57, #loc58])
#loc204 = loc(fused[#loc60, #loc59])
#loc205 = loc(fused[#loc62, #loc63])
#loc206 = loc(fused[#loc66, #loc67])
#loc207 = loc(fused[#loc68, #loc69])
#loc208 = loc(fused[#loc70, #loc71])
#loc209 = loc(fused[#loc72, #loc73])
#loc211 = loc(fused[#loc77, #loc78])
#loc212 = loc(fused[#loc79, #loc80])
#loc213 = loc(fused[#loc81, #loc82])
#loc214 = loc(fused[#loc84, #loc85])
#loc215 = loc(fused[#loc83, #loc85])
#loc216 = loc(fused[#loc86, #loc87, #loc88, #loc82])
#loc217 = loc(fused[#loc91, #loc92])
#loc218 = loc(fused[#loc90, #loc92])
#loc219 = loc(fused[#loc89, #loc93])
#loc220 = loc(fused[#loc94, #loc93])
#loc221 = loc(fused[#loc95, #loc96])
#loc222 = loc(fused[#loc97, #loc98])
#loc223 = loc(fused[#loc99, #loc96])
#loc224 = loc(fused[#loc112, #loc113])
#loc225 = loc(fused[#loc114, #loc115])
#loc226 = loc(fused[#loc116, #loc117])
#loc227 = loc(fused[#loc119, #loc118])
#loc228 = loc(fused[#loc121, #loc120])
#loc229 = loc(fused[#loc125, #loc126])
#loc231 = loc(fused[#loc130, #loc131])
#loc232 = loc(fused[#loc132, #loc133])
#loc233 = loc(fused[#loc134, #loc135])
#loc234 = loc(fused[#loc137, #loc138])
#loc235 = loc(fused[#loc136, #loc138])
#loc236 = loc(fused[#loc140, #loc141])
#loc237 = loc(fused[#loc142, #loc143, #loc144, #loc135])
#loc238 = loc(fused[#loc147, #loc148])
#loc239 = loc(fused[#loc146, #loc148])
#loc240 = loc(fused[#loc145, #loc149])
#loc241 = loc(fused[#loc150, #loc149])
#loc242 = loc(fused[#loc151, #loc152])
#loc243 = loc(fused[#loc153, #loc154])
#loc244 = loc(fused[#loc155, #loc152])
#loc245 = loc(fused[#loc167, #loc168])
#loc246 = loc(fused[#loc169, #loc170])
#loc247 = loc(fused[#loc171, #loc172])
#loc248 = loc(fused[#loc174, #loc173])
#loc249 = loc(fused[#loc176, #loc177])
