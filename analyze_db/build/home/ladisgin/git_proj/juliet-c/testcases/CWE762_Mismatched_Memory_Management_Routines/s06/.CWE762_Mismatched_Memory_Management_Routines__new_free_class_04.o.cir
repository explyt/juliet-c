!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc146)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc147)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_043badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc153)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc18)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc153)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc17)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc154)
    cir.br ^bb3 loc(#loc13)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc13)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc156)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc24)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc25)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc24)
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc7)
  } loc(#loc148)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc28)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc158)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_04L8goodB2G1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc164)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc43)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc164)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc42)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc165)
    cir.br ^bb3 loc(#loc38)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc38)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc167)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc28)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb8 loc(#loc49)
  ^bb7:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc52)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc52)
    cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc43)
    cir.br ^bb8 loc(#loc46)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc46)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc32)
  } loc(#loc159)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_04L8goodB2G2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc57)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc61)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc173)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc65)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc173)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc64)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc174)
    cir.br ^bb3 loc(#loc60)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc60)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc175)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc176)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc71)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc65)
    cir.br ^bb7 loc(#loc68)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc68)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc54)
  } loc(#loc168)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc177)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc178)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_04L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc84)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc183)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb8 loc(#loc86)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc90)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc91)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc91)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc184)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc185)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc90)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc186)
    cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc187)
    cir.br ^bb4 loc(#loc188)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc98)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc99)
    %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc189)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc190)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc103)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc101)
    cir.br ^bb6 loc(#loc97)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc83)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc191)
  ^bb10:  // pred: ^bb9
    %19 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc106)
    cir.brcond %20 ^bb11, ^bb12 loc(#loc192)
  ^bb11:  // pred: ^bb10
    %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc108)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc109)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc109)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc108)
    cir.br ^bb12 loc(#loc105)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc105)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc77)
  } loc(#loc179)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_04L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc114)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc118)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc197)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc120)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc121)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc198)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc199)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc120)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc200)
    cir.store %10, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc201)
    cir.br ^bb3 loc(#loc202)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc128)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc129)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc203)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc204)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc131)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc133)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc131)
    cir.br ^bb5 loc(#loc127)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc127)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc117)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc117)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc205)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc136)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc206)
  ^bb10:  // pred: ^bb9
    %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc138)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc139)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc139)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc138)
    cir.br ^bb11 loc(#loc135)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc135)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc111)
  } loc(#loc193)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_044goodEv() extra(#fn_attr2) {
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_04L8goodB2G1Ev() : () -> () loc(#loc142)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_04L8goodB2G2Ev() : () -> () loc(#loc143)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_04L8goodG2B1Ev() : () -> () loc(#loc144)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_04L8goodG2B2Ev() : () -> () loc(#loc145)
    cir.return loc(#loc141)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":31:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":47:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":33:5)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":33:20)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":35:12)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":35:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":36:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":40:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":36:8)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":37:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":39:16)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":39:20)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":31:6)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":39:9)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":41:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":46:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":41:8)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":42:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":45:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":45:14)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":67:19)
#loc29 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc30 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":54:1)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":74:1)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":56:5)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":56:20)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":58:12)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":58:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":59:5)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":63:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":59:8)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":60:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":62:16)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":62:20)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":54:13)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":62:9)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":64:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":73:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":64:8)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":65:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":68:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":70:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":67:9)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":72:16)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":77:1)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":92:1)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":79:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":79:20)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":81:12)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":81:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":82:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":86:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":82:8)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":83:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":85:16)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":85:20)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":77:13)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":85:9)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":87:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":91:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":87:8)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":88:5)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":90:16)
#loc72 = loc("/usr/include/stdlib.h":672:1)
#loc73 = loc("/usr/include/stdlib.h":672:45)
#loc74 = loc("/usr/include/stdlib.h":756:1)
#loc75 = loc("/usr/include/stdlib.h":756:70)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":95:1)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":117:1)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":97:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":97:20)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":99:12)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":99:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":100:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":110:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":100:8)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":101:5)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":104:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":106:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":103:19)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":103:9)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":108:32)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":108:39)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":108:43)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":108:62)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":108:63)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":108:9)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":109:9)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":109:37)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":109:13)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":109:21)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":109:27)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":109:28)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":109:34)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":109:33)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":111:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":116:5)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":111:8)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":112:5)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":115:9)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":115:14)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":120:1)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":137:1)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":122:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":122:20)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":124:12)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":124:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":125:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":130:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":125:8)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":126:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":128:32)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":128:39)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":128:43)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":128:62)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":128:63)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":128:9)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":129:9)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":129:37)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":129:13)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":129:21)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":129:27)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":129:28)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":129:34)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":129:33)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":131:5)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":136:5)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":131:8)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":132:5)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":135:9)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":135:14)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":139:1)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":145:1)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":141:5)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":142:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":143:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_04.cpp":144:5)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc4, #loc5])
#loc148 = loc(fused[#loc6, #loc7])
#loc149 = loc(fused[#loc8, #loc9])
#loc150 = loc(fused[#loc11, #loc10])
#loc151 = loc(fused[#loc12, #loc13])
#loc152 = loc(fused[#loc15, #loc13])
#loc153 = loc(fused[#loc16, #loc17])
#loc154 = loc(fused[#loc19, #loc17])
#loc155 = loc(fused[#loc20, #loc21])
#loc156 = loc(fused[#loc23, #loc21])
#loc157 = loc(fused[#loc26, #loc27])
#loc158 = loc(fused[#loc29, #loc30])
#loc159 = loc(fused[#loc31, #loc32])
#loc160 = loc(fused[#loc33, #loc34])
#loc161 = loc(fused[#loc36, #loc35])
#loc162 = loc(fused[#loc37, #loc38])
#loc163 = loc(fused[#loc40, #loc38])
#loc164 = loc(fused[#loc41, #loc42])
#loc165 = loc(fused[#loc44, #loc42])
#loc166 = loc(fused[#loc45, #loc46])
#loc167 = loc(fused[#loc48, #loc49, #loc50, #loc46])
#loc168 = loc(fused[#loc53, #loc54])
#loc169 = loc(fused[#loc55, #loc56])
#loc170 = loc(fused[#loc58, #loc57])
#loc171 = loc(fused[#loc59, #loc60])
#loc172 = loc(fused[#loc62, #loc60])
#loc173 = loc(fused[#loc63, #loc64])
#loc174 = loc(fused[#loc66, #loc64])
#loc175 = loc(fused[#loc67, #loc68])
#loc176 = loc(fused[#loc70, #loc68])
#loc177 = loc(fused[#loc72, #loc73])
#loc178 = loc(fused[#loc74, #loc75])
#loc179 = loc(fused[#loc76, #loc77])
#loc180 = loc(fused[#loc78, #loc79])
#loc181 = loc(fused[#loc81, #loc80])
#loc182 = loc(fused[#loc82, #loc83])
#loc183 = loc(fused[#loc85, #loc86, #loc87, #loc83])
#loc184 = loc(fused[#loc92, #loc93])
#loc185 = loc(fused[#loc91, #loc93])
#loc186 = loc(fused[#loc90, #loc94])
#loc187 = loc(fused[#loc95, #loc94])
#loc188 = loc(fused[#loc96, #loc97])
#loc189 = loc(fused[#loc98, #loc99])
#loc190 = loc(fused[#loc100, #loc97])
#loc191 = loc(fused[#loc104, #loc105])
#loc192 = loc(fused[#loc107, #loc105])
#loc193 = loc(fused[#loc110, #loc111])
#loc194 = loc(fused[#loc112, #loc113])
#loc195 = loc(fused[#loc115, #loc114])
#loc196 = loc(fused[#loc116, #loc117])
#loc197 = loc(fused[#loc119, #loc117])
#loc198 = loc(fused[#loc122, #loc123])
#loc199 = loc(fused[#loc121, #loc123])
#loc200 = loc(fused[#loc120, #loc124])
#loc201 = loc(fused[#loc125, #loc124])
#loc202 = loc(fused[#loc126, #loc127])
#loc203 = loc(fused[#loc128, #loc129])
#loc204 = loc(fused[#loc130, #loc127])
#loc205 = loc(fused[#loc134, #loc135])
#loc206 = loc(fused[#loc137, #loc135])
#loc207 = loc(fused[#loc140, #loc141])
