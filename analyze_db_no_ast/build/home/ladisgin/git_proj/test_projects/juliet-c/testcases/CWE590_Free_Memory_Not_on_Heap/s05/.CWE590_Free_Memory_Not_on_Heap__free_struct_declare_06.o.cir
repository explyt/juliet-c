!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc187)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc188)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc191)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc193)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc15)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc196)
          cir.scope {
            %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc198)
            cir.scope {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc27)
              %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc27)
              cir.store %16, %14 : !u64i, !cir.ptr<!u64i> loc(#loc200)
              cir.for : cond {
                %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc29)
                %18 = cir.const #cir.int<100> : !s32i loc(#loc30)
                %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc30)
                %20 = cir.cmp(lt, %17, %19) : !u64i, !s32i loc(#loc201)
                %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc31)
                cir.condition(%21) loc(#loc31)
              } body {
                cir.scope {
                  %17 = cir.const #cir.int<1> : !s32i loc(#loc33)
                  %18 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc34)
                  %19 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
                  %20 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %18 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
                  %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
                  cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc203)
                  %22 = cir.const #cir.int<1> : !s32i loc(#loc37)
                  %23 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc38)
                  %24 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
                  %25 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
                  %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                  cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc204)
                } loc(#loc202)
                cir.yield loc(#loc26)
              } step {
                %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc41)
                %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc42)
                cir.store %18, %14 : !u64i, !cir.ptr<!u64i> loc(#loc205)
                cir.yield loc(#loc199)
              } loc(#loc199)
            } loc(#loc199)
          } loc(#loc197)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
          cir.store %13, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc206)
        } loc(#loc195)
      } loc(#loc194)
    } loc(#loc192)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc48)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc49)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc50)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    cir.return loc(#loc6)
  } loc(#loc189)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc207)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc210)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc59)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc211)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc212)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc215)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc73)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc74)
      %10 = cir.cmp(ne, %8, %9) : !s32i, !s32i loc(#loc217)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc75)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc79)
      } else {
        cir.scope {
          %12 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc220)
          %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc84)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc85)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc85)
          %16 = cir.const #cir.int<8> : !u64i loc(#loc221)
          %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc222)
          %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc84)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc223)
          cir.store %19, %12 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc220)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc225)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc92)
            cir.if %25 {
              %26 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc94)
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc96)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
            } loc(#loc226)
          } loc(#loc224)
          cir.scope {
            %21 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc228)
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc103)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc103)
              cir.store %23, %21 : !u64i, !cir.ptr<!u64i> loc(#loc230)
              cir.for : cond {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc105)
                %25 = cir.const #cir.int<100> : !s32i loc(#loc106)
                %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc106)
                %27 = cir.cmp(lt, %24, %26) : !u64i, !s32i loc(#loc231)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc107)
                cir.condition(%28) loc(#loc107)
              } body {
                cir.scope {
                  %24 = cir.const #cir.int<1> : !s32i loc(#loc109)
                  %25 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
                  %26 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc111)
                  %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
                  %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
                  cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc233)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc113)
                  %30 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
                  %31 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc115)
                  %32 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
                  %33 = cir.get_member %32[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                  cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc234)
                } loc(#loc232)
                cir.yield loc(#loc102)
              } step {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc117)
                %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc118)
                cir.store %25, %21 : !u64i, !cir.ptr<!u64i> loc(#loc235)
                cir.yield loc(#loc229)
              } loc(#loc229)
            } loc(#loc229)
          } loc(#loc227)
          %20 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
          cir.store %20, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc236)
        } loc(#loc219)
      } loc(#loc218)
    } loc(#loc216)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc124)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc125)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc126)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
    cir.return loc(#loc66)
  } loc(#loc213)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc239)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc135)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc136)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc241)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc137)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc244)
          %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc143)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc144)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc144)
          %16 = cir.const #cir.int<8> : !u64i loc(#loc245)
          %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc246)
          %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc247)
          cir.store %19, %12 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc244)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc249)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc151)
            cir.if %25 {
              %26 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc153)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc153)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc154)
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc155)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc156)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc155)
            } loc(#loc250)
          } loc(#loc248)
          cir.scope {
            %21 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc252)
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc163)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc163)
              cir.store %23, %21 : !u64i, !cir.ptr<!u64i> loc(#loc254)
              cir.for : cond {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc165)
                %25 = cir.const #cir.int<100> : !s32i loc(#loc166)
                %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc166)
                %27 = cir.cmp(lt, %24, %26) : !u64i, !s32i loc(#loc255)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc167)
                cir.condition(%28) loc(#loc167)
              } body {
                cir.scope {
                  %24 = cir.const #cir.int<1> : !s32i loc(#loc169)
                  %25 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc170)
                  %26 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc171)
                  %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
                  %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
                  cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc257)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc173)
                  %30 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc174)
                  %31 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc175)
                  %32 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
                  %33 = cir.get_member %32[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                  cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc258)
                } loc(#loc256)
                cir.yield loc(#loc162)
              } step {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc177)
                %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc178)
                cir.store %25, %21 : !u64i, !cir.ptr<!u64i> loc(#loc259)
                cir.yield loc(#loc253)
              } loc(#loc253)
            } loc(#loc253)
          } loc(#loc251)
          %20 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc179)
          cir.store %20, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc260)
        } loc(#loc243)
      } loc(#loc242)
    } loc(#loc240)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc181)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc184)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc185)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc186)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc185)
    cir.return loc(#loc128)
  } loc(#loc237)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":27:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":50:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":29:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":29:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":30:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":30:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":31:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":46:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":31:8)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":31:27)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":31:25)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":32:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":33:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":45:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":35:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":35:41)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":36:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":43:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":37:17)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":37:24)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":38:17)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":42:17)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":38:26)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":38:22)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":38:29)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":38:33)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":38:31)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":39:17)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":40:44)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":40:32)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":40:21)
#loc36 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":41:44)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":41:32)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":41:21)
#loc40 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":38:39)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":38:38)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":44:20)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":44:13)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":47:22)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":47:27)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":47:28)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":47:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":49:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":49:10)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":123:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":127:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":125:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":125:14)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":126:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":126:14)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":64:19)
#loc60 = loc("/usr/include/stdlib.h":672:1)
#loc61 = loc("/usr/include/stdlib.h":672:45)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":73:27)
#loc63 = loc("/usr/include/stdlib.h":756:1)
#loc64 = loc("/usr/include/stdlib.h":756:70)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":57:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":90:1)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":59:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":59:21)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":60:12)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":60:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":61:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":86:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":61:8)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":61:27)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":61:25)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":62:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":65:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":67:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":64:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":68:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":85:9)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":70:13)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":70:91)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":70:59)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":70:66)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":70:70)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":70:90)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":71:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":75:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":71:17)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":71:31)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":71:28)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":72:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":73:17)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":74:17)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":74:22)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":76:13)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":83:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":77:17)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":77:24)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":78:17)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":82:17)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":78:26)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":78:22)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":78:29)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":78:33)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":78:31)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":79:17)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":80:44)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":80:21)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":80:32)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":80:33)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":81:44)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":81:21)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":81:32)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":81:33)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":78:39)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":78:38)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":84:20)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":84:13)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":87:22)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":87:27)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":87:28)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":87:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":89:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":89:10)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":93:1)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":121:1)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":95:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":95:21)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":96:12)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":96:5)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":97:5)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":117:5)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":97:8)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":97:27)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":97:25)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":98:5)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":99:9)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":116:9)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":101:13)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":101:91)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":101:59)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":101:66)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":101:70)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":101:90)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":102:13)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":106:13)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":102:17)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":102:31)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":102:28)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":103:13)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":104:27)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":104:17)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":105:17)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":105:22)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":107:13)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":114:13)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":108:17)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":108:24)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":109:17)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":113:17)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":109:26)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":109:22)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":109:29)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":109:33)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":109:31)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":110:17)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":111:44)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":111:21)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":111:32)
#loc172 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":111:33)
#loc173 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":112:44)
#loc174 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":112:21)
#loc175 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":112:32)
#loc176 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":112:33)
#loc177 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":109:39)
#loc178 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":109:38)
#loc179 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":115:20)
#loc180 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":115:13)
#loc181 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":118:22)
#loc182 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":118:27)
#loc183 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":118:28)
#loc184 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":118:5)
#loc185 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":120:5)
#loc186 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_06.c":120:10)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc10, #loc9])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc13, #loc14])
#loc194 = loc(fused[#loc16, #loc12])
#loc195 = loc(fused[#loc17, #loc18])
#loc196 = loc(fused[#loc19, #loc20])
#loc197 = loc(fused[#loc21, #loc22])
#loc198 = loc(fused[#loc23, #loc24])
#loc199 = loc(fused[#loc25, #loc26])
#loc200 = loc(fused[#loc28, #loc27])
#loc201 = loc(fused[#loc29, #loc30])
#loc202 = loc(fused[#loc32, #loc26])
#loc203 = loc(fused[#loc35, #loc33])
#loc204 = loc(fused[#loc39, #loc37])
#loc205 = loc(fused[#loc42, #loc41])
#loc206 = loc(fused[#loc44, #loc43])
#loc207 = loc(fused[#loc51, #loc52])
#loc208 = loc(fused[#loc53, #loc54])
#loc209 = loc(fused[#loc55, #loc56])
#loc210 = loc(fused[#loc57, #loc58])
#loc211 = loc(fused[#loc60, #loc61])
#loc212 = loc(fused[#loc63, #loc64])
#loc213 = loc(fused[#loc65, #loc66])
#loc214 = loc(fused[#loc67, #loc68])
#loc215 = loc(fused[#loc70, #loc69])
#loc216 = loc(fused[#loc71, #loc72])
#loc217 = loc(fused[#loc73, #loc74])
#loc218 = loc(fused[#loc76, #loc77, #loc78, #loc72])
#loc219 = loc(fused[#loc80, #loc81])
#loc220 = loc(fused[#loc82, #loc83])
#loc221 = loc(fused[#loc86, #loc87])
#loc222 = loc(fused[#loc85, #loc87])
#loc223 = loc(fused[#loc84, #loc83])
#loc224 = loc(fused[#loc88, #loc89])
#loc225 = loc(fused[#loc90, #loc91])
#loc226 = loc(fused[#loc93, #loc89])
#loc227 = loc(fused[#loc97, #loc98])
#loc228 = loc(fused[#loc99, #loc100])
#loc229 = loc(fused[#loc101, #loc102])
#loc230 = loc(fused[#loc104, #loc103])
#loc231 = loc(fused[#loc105, #loc106])
#loc232 = loc(fused[#loc108, #loc102])
#loc233 = loc(fused[#loc110, #loc109])
#loc234 = loc(fused[#loc114, #loc113])
#loc235 = loc(fused[#loc118, #loc117])
#loc236 = loc(fused[#loc120, #loc119])
#loc237 = loc(fused[#loc127, #loc128])
#loc238 = loc(fused[#loc129, #loc130])
#loc239 = loc(fused[#loc132, #loc131])
#loc240 = loc(fused[#loc133, #loc134])
#loc241 = loc(fused[#loc135, #loc136])
#loc242 = loc(fused[#loc138, #loc134])
#loc243 = loc(fused[#loc139, #loc140])
#loc244 = loc(fused[#loc141, #loc142])
#loc245 = loc(fused[#loc145, #loc146])
#loc246 = loc(fused[#loc144, #loc146])
#loc247 = loc(fused[#loc143, #loc142])
#loc248 = loc(fused[#loc147, #loc148])
#loc249 = loc(fused[#loc149, #loc150])
#loc250 = loc(fused[#loc152, #loc148])
#loc251 = loc(fused[#loc157, #loc158])
#loc252 = loc(fused[#loc159, #loc160])
#loc253 = loc(fused[#loc161, #loc162])
#loc254 = loc(fused[#loc164, #loc163])
#loc255 = loc(fused[#loc165, #loc166])
#loc256 = loc(fused[#loc168, #loc162])
#loc257 = loc(fused[#loc170, #loc169])
#loc258 = loc(fused[#loc174, #loc173])
#loc259 = loc(fused[#loc178, #loc177])
#loc260 = loc(fused[#loc180, #loc179])
