!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc38 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":113:10)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":113:14)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":113:20)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":113:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc167 = loc(fused[#loc110, #loc111])
#loc168 = loc(fused[#loc112, #loc113])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_103badEvE10dataBuffer = #cir.zero : !ty_TwoIntsClass {alignment = 4 : i64} loc(#loc1)
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc126)
  cir.func private @printIntLine(!s32i) loc(#loc127)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc128)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_103badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc131)
    cir.scope {
      %7 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc126)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc16)
      cir.if %9 {
        cir.scope {
          %10 = cir.get_global @_ZZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_103badEvE10dataBuffer : !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc20)
          %12 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc135)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
          %14 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
          cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc136)
          cir.store %10, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc137)
        } loc(#loc134)
      } loc(#loc133)
    } loc(#loc132)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc30)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc31)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
    cir.return loc(#loc9)
  } loc(#loc129)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc139)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc38)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc38)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    cir.return loc(#loc38)
  } loc(#loc38)
  cir.func internal private @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_10L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc142)
    cir.scope {
      %7 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc138)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc47)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc47)
      cir.if %9 {
        %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } else {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc146)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc147)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc146)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc147)
          cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc55)
          cir.store %13, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc146)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc57)
          %15 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc58)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc148)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc59)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc149)
          %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc61)
          cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc150)
        } loc(#loc145)
      } loc(#loc144)
    } loc(#loc143)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc65)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc66)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    cir.return loc(#loc40)
  } loc(#loc140)
  cir.func internal private @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_10L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc153)
    cir.scope {
      %7 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc126)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc76)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc76)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc157)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc158)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc157)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc158)
          cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc81)
          cir.store %13, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc157)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc83)
          %15 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc84)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc159)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc85)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc86)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc160)
          %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
          cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc161)
        } loc(#loc156)
      } loc(#loc155)
    } loc(#loc154)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc91)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc92)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
    cir.return loc(#loc69)
  } loc(#loc151)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_104goodEv() extra(#fn_attr1) {
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_10L8goodG2B1Ev() : () -> () loc(#loc96)
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_10L8goodG2B2Ev() : () -> () loc(#loc97)
    cir.return loc(#loc95)
  } loc(#loc162)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc163)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc164)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc107)
  cir.func @main(%arg0: !s32i loc(fused[#loc110, #loc111]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc112, #loc113])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc109)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc114)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc115)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc116)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc116)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc117)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc104)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_104goodEv() : () -> () loc(#loc119)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc106)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_103badEv() : () -> () loc(#loc122)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc107)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc124)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %15 : !s32i loc(#loc169)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":34:33)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc3 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":26:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":43:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":28:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":28:20)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":29:12)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":29:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":30:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":39:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":30:8)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":31:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":32:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":38:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":35:33)
#loc21 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":35:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":36:33)
#loc24 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":36:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":37:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":37:21)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":40:18)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":40:24)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":40:5)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":42:12)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":26:6)
#loc33 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc34 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":57:19)
#loc36 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":50:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":72:1)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":52:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":52:20)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":53:12)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":53:5)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":54:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":68:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":54:8)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":55:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":58:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":60:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":57:9)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":61:9)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":67:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":63:13)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":63:45)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":63:41)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":64:34)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":64:13)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":65:34)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":65:13)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":66:20)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":66:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":69:18)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":69:24)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":69:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":71:12)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":50:13)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":75:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":92:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":77:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":77:20)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":78:12)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":78:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":79:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":88:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":79:8)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":80:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":81:9)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":87:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":83:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":83:45)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":83:41)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":84:34)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":84:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":85:34)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":85:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":86:20)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":86:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":89:18)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":89:24)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":89:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":91:12)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":75:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":94:1)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":98:1)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":96:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":97:5)
#loc98 = loc("/usr/include/stdlib.h":575:1)
#loc99 = loc("/usr/include/stdlib.h":575:41)
#loc100 = loc("/usr/include/time.h":76:1)
#loc101 = loc("/usr/include/time.h":76:38)
#loc102 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc103 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":118:15)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":120:15)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":123:15)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":125:15)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":113:1)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":128:1)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":114:1)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":116:27)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":116:22)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":116:5)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":118:5)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":119:5)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":120:5)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":123:5)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":124:5)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":125:5)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":127:12)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_10.cpp":127:5)
#loc126 = loc(fused[#loc2, #loc3])
#loc127 = loc(fused[#loc4, #loc5])
#loc128 = loc(fused[#loc6, #loc7])
#loc129 = loc(fused[#loc8, #loc9])
#loc130 = loc(fused[#loc10, #loc11])
#loc131 = loc(fused[#loc13, #loc12])
#loc132 = loc(fused[#loc14, #loc15])
#loc133 = loc(fused[#loc17, #loc15])
#loc134 = loc(fused[#loc18, #loc19])
#loc135 = loc(fused[#loc22, #loc20])
#loc136 = loc(fused[#loc25, #loc23])
#loc137 = loc(fused[#loc26, #loc27])
#loc138 = loc(fused[#loc33, #loc34])
#loc139 = loc(fused[#loc36, #loc37])
#loc140 = loc(fused[#loc39, #loc40])
#loc141 = loc(fused[#loc41, #loc42])
#loc142 = loc(fused[#loc44, #loc43])
#loc143 = loc(fused[#loc45, #loc46])
#loc144 = loc(fused[#loc48, #loc49, #loc50, #loc46])
#loc145 = loc(fused[#loc52, #loc53])
#loc146 = loc(fused[#loc54, #loc55])
#loc147 = loc(fused[#loc56, #loc55])
#loc148 = loc(fused[#loc58, #loc57])
#loc149 = loc(fused[#loc60, #loc59])
#loc150 = loc(fused[#loc62, #loc61])
#loc151 = loc(fused[#loc68, #loc69])
#loc152 = loc(fused[#loc70, #loc71])
#loc153 = loc(fused[#loc73, #loc72])
#loc154 = loc(fused[#loc74, #loc75])
#loc155 = loc(fused[#loc77, #loc75])
#loc156 = loc(fused[#loc78, #loc79])
#loc157 = loc(fused[#loc80, #loc81])
#loc158 = loc(fused[#loc82, #loc81])
#loc159 = loc(fused[#loc84, #loc83])
#loc160 = loc(fused[#loc86, #loc85])
#loc161 = loc(fused[#loc88, #loc87])
#loc162 = loc(fused[#loc94, #loc95])
#loc163 = loc(fused[#loc98, #loc99])
#loc164 = loc(fused[#loc100, #loc101])
#loc165 = loc(fused[#loc102, #loc103])
#loc166 = loc(fused[#loc108, #loc109])
#loc169 = loc(fused[#loc125, #loc124])
