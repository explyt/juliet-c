!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":143:10)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":143:14)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":143:20)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":143:32)
#loc288 = loc(fused[#loc89, #loc90])
#loc289 = loc(fused[#loc91, #loc92])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc251)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc252)
  cir.func private @printIntLine(!s32i) loc(#loc253)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc11)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc256)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc257)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc258)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc259)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc20)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc20)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !cir.bool loc(#loc261)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc22)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc24)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc22)
      } loc(#loc262)
    } loc(#loc260)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc27)
        cir.condition(%9) loc(#loc27)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc265)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc34)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc267)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc36)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc37)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc38)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc268)
              %14 = cir.cmp(lt, %10, %13) : !s32i, !cir.bool loc(#loc269)
              cir.condition(%14) loc(#loc40)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc42)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc44)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc45)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc271)
              } loc(#loc270)
              cir.yield loc(#loc33)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc47)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc272)
              cir.yield loc(#loc266)
            } loc(#loc266)
          } loc(#loc266)
        } loc(#loc264)
        cir.break loc(#loc48)
      } loc(#loc263)
    } loc(#loc263)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc51)
        cir.condition(%9) loc(#loc51)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc275)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc58)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc277)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc60)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc61)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc278)
              cir.condition(%12) loc(#loc62)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc65)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc66)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc67)
              } loc(#loc279)
              cir.yield loc(#loc57)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc68)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc69)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc280)
              cir.yield loc(#loc276)
            } loc(#loc276)
          } loc(#loc276)
        } loc(#loc274)
        cir.break loc(#loc70)
      } loc(#loc273)
    } loc(#loc273)
    cir.return loc(#loc8)
  } loc(#loc254)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc282)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc283)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc72)
  } loc(#loc281)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc284)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc285)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc286)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc86)
  cir.func @main(%arg0: !s32i loc(fused[#loc89, #loc90]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc91, #loc92])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc288)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc289)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc88)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc93)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc94)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc95)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc95)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc96)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc83)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc290)
    cir.call @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16_good() : () -> () loc(#loc98)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc84)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc85)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc291)
    cir.call @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16_bad() : () -> () loc(#loc102)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc86)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    cir.return %17 : !s32i loc(#loc292)
  } loc(#loc287)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc294)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc111)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc112)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc112)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc295)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc296)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc297)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc298)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc119)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc120)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !cir.bool loc(#loc300)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc123)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc124)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
      } loc(#loc301)
    } loc(#loc299)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc127)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc127)
        cir.condition(%9) loc(#loc127)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc304)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc134)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc306)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc137)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc138)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc307)
              %14 = cir.cmp(lt, %10, %13) : !s32i, !cir.bool loc(#loc308)
              cir.condition(%14) loc(#loc140)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc143)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc145)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc310)
              } loc(#loc309)
              cir.yield loc(#loc133)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc147)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc311)
              cir.yield loc(#loc305)
            } loc(#loc305)
          } loc(#loc305)
        } loc(#loc303)
        cir.break loc(#loc148)
      } loc(#loc302)
    } loc(#loc302)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc151)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc151)
        cir.condition(%9) loc(#loc151)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc314)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc158)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc316)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc160)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc161)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc317)
              cir.condition(%12) loc(#loc162)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc166)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc167)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc319)
              } loc(#loc318)
              cir.yield loc(#loc157)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc169)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc320)
              cir.yield loc(#loc315)
            } loc(#loc315)
          } loc(#loc315)
        } loc(#loc313)
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc322)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc176)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc324)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc179)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc325)
              cir.condition(%12) loc(#loc180)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc184)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc185)
              } loc(#loc326)
              cir.yield loc(#loc175)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc186)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc187)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc327)
              cir.yield loc(#loc323)
            } loc(#loc323)
          } loc(#loc323)
        } loc(#loc321)
        cir.break loc(#loc188)
      } loc(#loc312)
    } loc(#loc312)
    cir.return loc(#loc108)
  } loc(#loc293)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc329)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc193)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc194)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc194)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc330)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc331)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc332)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc333)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc201)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc202)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc202)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !cir.bool loc(#loc335)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc204)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc205)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc206)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc204)
      } loc(#loc336)
    } loc(#loc334)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc209)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc209)
        cir.condition(%9) loc(#loc209)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc339)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc216)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc341)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc218)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc219)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc342)
              cir.condition(%12) loc(#loc220)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc222)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc225)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc344)
              } loc(#loc343)
              cir.yield loc(#loc215)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc226)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc227)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc345)
              cir.yield loc(#loc340)
            } loc(#loc340)
          } loc(#loc340)
        } loc(#loc338)
        cir.break loc(#loc228)
      } loc(#loc337)
    } loc(#loc337)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc231)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc231)
        cir.condition(%9) loc(#loc231)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc348)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc238)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc350)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc240)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc241)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc351)
              cir.condition(%12) loc(#loc242)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc244)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc246)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc247)
              } loc(#loc352)
              cir.yield loc(#loc237)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc248)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc249)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc353)
              cir.yield loc(#loc349)
            } loc(#loc349)
          } loc(#loc349)
        } loc(#loc347)
        cir.break loc(#loc250)
      } loc(#loc346)
    } loc(#loc346)
    cir.return loc(#loc190)
  } loc(#loc328)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":22:1)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":51:1)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":24:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":24:11)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":25:19)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":25:26)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":25:29)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":25:39)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":25:40)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":25:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":26:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":26:33)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":26:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":26:17)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":26:23)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":26:24)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":26:30)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":26:29)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":27:5)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":38:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":27:11)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":30:9)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":36:9)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":31:13)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":31:17)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:13)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":35:13)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:19)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:17)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:22)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:25)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:28)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:29)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:23)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":33:13)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":34:27)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":34:17)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":34:22)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":34:23)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:33)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":32:32)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":37:9)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":39:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":50:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":39:11)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":42:9)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":48:9)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":43:13)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":43:17)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":44:13)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":47:13)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":44:19)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":44:17)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":44:22)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":44:24)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":44:23)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":45:13)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":46:30)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":46:35)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":46:36)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":46:17)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":44:29)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":44:28)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":49:9)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":128:1)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":132:1)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":130:5)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":130:13)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":131:5)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":131:13)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc82 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":148:15)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":150:15)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":153:15)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":155:15)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":143:1)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":158:1)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":144:1)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":146:27)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":146:22)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":146:5)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":148:5)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":149:5)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":149:81)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":150:5)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":153:5)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":154:5)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":154:80)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":155:5)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":157:12)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":157:5)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":58:1)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":94:1)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":60:5)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":60:11)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":61:19)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":61:26)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":61:29)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":61:39)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":61:40)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":61:5)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":62:5)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":62:33)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":62:9)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":62:17)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":62:23)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":62:24)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":62:30)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":62:29)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":63:5)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":74:5)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":63:11)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":66:9)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":72:9)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":67:13)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":67:17)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:13)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":71:13)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:19)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:17)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:22)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:25)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:28)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:29)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:23)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":69:13)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":70:27)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":70:17)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":70:22)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":70:23)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:33)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":68:32)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":73:9)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":75:5)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":93:5)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":75:11)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":78:9)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":84:9)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":79:13)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":79:17)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":80:13)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":83:13)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":80:19)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":80:17)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":80:22)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":80:24)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":80:23)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":81:13)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":82:27)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":82:17)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":82:22)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":82:23)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":80:29)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":80:28)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":85:9)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":91:9)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":86:13)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":86:17)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":87:13)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":90:13)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":87:19)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":87:17)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":87:22)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":87:24)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":87:23)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":88:13)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":89:30)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":89:35)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":89:36)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":89:17)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":87:29)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":87:28)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":92:9)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":97:1)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":126:1)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":99:5)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":99:11)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":100:19)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":100:26)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":100:29)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":100:39)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":100:40)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":100:5)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":101:5)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":101:33)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":101:9)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":101:17)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":101:23)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":101:24)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":101:30)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":101:29)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":102:5)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":113:5)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":102:11)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":105:9)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":111:9)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":106:13)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":106:17)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":107:13)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":110:13)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":107:19)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":107:17)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":107:22)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":107:24)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":107:23)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":108:13)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":109:27)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":109:17)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":109:22)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":109:23)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":107:29)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":107:28)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":112:9)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":114:5)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":125:5)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":114:11)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":117:9)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":123:9)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":118:13)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":118:17)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":119:13)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":122:13)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":119:19)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":119:17)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":119:22)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":119:24)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":119:23)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":120:13)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":121:30)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":121:35)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":121:36)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":121:17)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":119:29)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":119:28)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_16.c":124:9)
#loc251 = loc(fused[#loc1, #loc2])
#loc252 = loc(fused[#loc3, #loc4])
#loc253 = loc(fused[#loc5, #loc6])
#loc254 = loc(fused[#loc7, #loc8])
#loc255 = loc(fused[#loc9, #loc10])
#loc256 = loc(fused[#loc13, #loc14])
#loc257 = loc(fused[#loc12, #loc14])
#loc258 = loc(fused[#loc11, #loc15])
#loc259 = loc(fused[#loc16, #loc15])
#loc260 = loc(fused[#loc17, #loc18])
#loc261 = loc(fused[#loc19, #loc20])
#loc262 = loc(fused[#loc21, #loc18])
#loc263 = loc(fused[#loc25, #loc26])
#loc264 = loc(fused[#loc28, #loc29])
#loc265 = loc(fused[#loc30, #loc31])
#loc266 = loc(fused[#loc32, #loc33])
#loc267 = loc(fused[#loc35, #loc34])
#loc268 = loc(fused[#loc37, #loc38])
#loc269 = loc(fused[#loc36, #loc39])
#loc270 = loc(fused[#loc41, #loc33])
#loc271 = loc(fused[#loc43, #loc42])
#loc272 = loc(fused[#loc47, #loc46])
#loc273 = loc(fused[#loc49, #loc50])
#loc274 = loc(fused[#loc52, #loc53])
#loc275 = loc(fused[#loc54, #loc55])
#loc276 = loc(fused[#loc56, #loc57])
#loc277 = loc(fused[#loc59, #loc58])
#loc278 = loc(fused[#loc60, #loc61])
#loc279 = loc(fused[#loc63, #loc57])
#loc280 = loc(fused[#loc69, #loc68])
#loc281 = loc(fused[#loc71, #loc72])
#loc282 = loc(fused[#loc73, #loc74])
#loc283 = loc(fused[#loc75, #loc76])
#loc284 = loc(fused[#loc77, #loc78])
#loc285 = loc(fused[#loc79, #loc80])
#loc286 = loc(fused[#loc81, #loc82])
#loc287 = loc(fused[#loc87, #loc88])
#loc290 = loc(fused[#loc98, #loc99])
#loc291 = loc(fused[#loc102, #loc103])
#loc292 = loc(fused[#loc106, #loc105])
#loc293 = loc(fused[#loc107, #loc108])
#loc294 = loc(fused[#loc109, #loc110])
#loc295 = loc(fused[#loc113, #loc114])
#loc296 = loc(fused[#loc112, #loc114])
#loc297 = loc(fused[#loc111, #loc115])
#loc298 = loc(fused[#loc116, #loc115])
#loc299 = loc(fused[#loc117, #loc118])
#loc300 = loc(fused[#loc119, #loc120])
#loc301 = loc(fused[#loc121, #loc118])
#loc302 = loc(fused[#loc125, #loc126])
#loc303 = loc(fused[#loc128, #loc129])
#loc304 = loc(fused[#loc130, #loc131])
#loc305 = loc(fused[#loc132, #loc133])
#loc306 = loc(fused[#loc135, #loc134])
#loc307 = loc(fused[#loc137, #loc138])
#loc308 = loc(fused[#loc136, #loc139])
#loc309 = loc(fused[#loc141, #loc133])
#loc310 = loc(fused[#loc143, #loc142])
#loc311 = loc(fused[#loc147, #loc146])
#loc312 = loc(fused[#loc149, #loc150])
#loc313 = loc(fused[#loc152, #loc153])
#loc314 = loc(fused[#loc154, #loc155])
#loc315 = loc(fused[#loc156, #loc157])
#loc316 = loc(fused[#loc159, #loc158])
#loc317 = loc(fused[#loc160, #loc161])
#loc318 = loc(fused[#loc163, #loc157])
#loc319 = loc(fused[#loc165, #loc164])
#loc320 = loc(fused[#loc169, #loc168])
#loc321 = loc(fused[#loc170, #loc171])
#loc322 = loc(fused[#loc172, #loc173])
#loc323 = loc(fused[#loc174, #loc175])
#loc324 = loc(fused[#loc177, #loc176])
#loc325 = loc(fused[#loc178, #loc179])
#loc326 = loc(fused[#loc181, #loc175])
#loc327 = loc(fused[#loc187, #loc186])
#loc328 = loc(fused[#loc189, #loc190])
#loc329 = loc(fused[#loc191, #loc192])
#loc330 = loc(fused[#loc195, #loc196])
#loc331 = loc(fused[#loc194, #loc196])
#loc332 = loc(fused[#loc193, #loc197])
#loc333 = loc(fused[#loc198, #loc197])
#loc334 = loc(fused[#loc199, #loc200])
#loc335 = loc(fused[#loc201, #loc202])
#loc336 = loc(fused[#loc203, #loc200])
#loc337 = loc(fused[#loc207, #loc208])
#loc338 = loc(fused[#loc210, #loc211])
#loc339 = loc(fused[#loc212, #loc213])
#loc340 = loc(fused[#loc214, #loc215])
#loc341 = loc(fused[#loc217, #loc216])
#loc342 = loc(fused[#loc218, #loc219])
#loc343 = loc(fused[#loc221, #loc215])
#loc344 = loc(fused[#loc223, #loc222])
#loc345 = loc(fused[#loc227, #loc226])
#loc346 = loc(fused[#loc229, #loc230])
#loc347 = loc(fused[#loc232, #loc233])
#loc348 = loc(fused[#loc234, #loc235])
#loc349 = loc(fused[#loc236, #loc237])
#loc350 = loc(fused[#loc239, #loc238])
#loc351 = loc(fused[#loc240, #loc241])
#loc352 = loc(fused[#loc243, #loc237])
#loc353 = loc(fused[#loc249, #loc248])
