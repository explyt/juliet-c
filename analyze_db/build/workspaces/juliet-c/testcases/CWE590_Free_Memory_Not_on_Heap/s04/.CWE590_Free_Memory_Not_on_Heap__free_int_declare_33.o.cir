!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc108)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc109)
  cir.func @_ZN51CWE590_Free_Memory_Not_on_Heap__free_int_declare_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc112)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc10)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc115)
      cir.scope {
        %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc117)
        cir.scope {
          %6 = cir.const #cir.int<0> : !s32i loc(#loc23)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc23)
          cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc119)
          cir.for : cond {
            %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc25)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc26)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc26)
            %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc120)
            cir.condition(%11) loc(#loc120)
          } body {
            cir.scope {
              %8 = cir.const #cir.int<5> : !s32i loc(#loc28)
              %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc30)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !u64i), !cir.ptr<!s32i> loc(#loc30)
              cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc122)
            } loc(#loc121)
            cir.yield loc(#loc22)
          } step {
            %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc31)
            %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc32)
            cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc123)
            cir.yield loc(#loc118)
          } loc(#loc118)
        } loc(#loc118)
      } loc(#loc116)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc33)
      cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc124)
    } loc(#loc114)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc38)
      %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
      cir.store %5, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc126)
      %6 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc41)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc42)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc43)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc44)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
    } loc(#loc125)
    cir.return loc(#loc6)
  } loc(#loc110)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc129)
  cir.func internal private @_ZN51CWE590_Free_Memory_Not_on_Heap__free_int_declare_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc132)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc57)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc58)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc135)
      %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc64)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc65)
      %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc65)
      %7 = cir.const #cir.int<4> : !u64i loc(#loc136)
      %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc137)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc138)
      cir.store %10, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc135)
      cir.scope {
        %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc71)
        %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc140)
        cir.if %14 {
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc73)
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc74)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc75)
          cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc74)
        } loc(#loc141)
      } loc(#loc139)
      cir.scope {
        %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc143)
        cir.scope {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc82)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc82)
          cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc145)
          cir.for : cond {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc84)
            %16 = cir.const #cir.int<100> : !s32i loc(#loc85)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc85)
            %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc146)
            cir.condition(%18) loc(#loc146)
          } body {
            cir.scope {
              %15 = cir.const #cir.int<5> : !s32i loc(#loc87)
              %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
              %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc89)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc90)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc148)
            } loc(#loc147)
            cir.yield loc(#loc81)
          } step {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc91)
            %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc92)
            cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc149)
            cir.yield loc(#loc144)
          } loc(#loc144)
        } loc(#loc144)
      } loc(#loc142)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
      cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    } loc(#loc134)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc98)
      %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
      cir.store %5, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc152)
      %6 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc100)
      %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc101)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc99)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc102)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc103)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc104)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    } loc(#loc151)
    cir.return loc(#loc53)
  } loc(#loc130)
  cir.func @_ZN51CWE590_Free_Memory_Not_on_Heap__free_int_declare_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE590_Free_Memory_Not_on_Heap__free_int_declare_33L7goodG2BEv() : () -> () loc(#loc107)
    cir.return loc(#loc106)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":49:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":28:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":28:11)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":29:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":29:22)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":30:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":30:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":31:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":42:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":33:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":33:27)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":34:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":40:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":35:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":35:20)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":36:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":39:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":36:22)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":36:18)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":36:25)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":36:29)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":37:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":38:33)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":38:28)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":38:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":36:35)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":36:34)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":41:16)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":41:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":43:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":48:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":44:9)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":44:22)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":45:22)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":45:27)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":45:28)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":45:9)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":47:9)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":47:14)
#loc45 = loc("/usr/include/stdlib.h":672:1)
#loc46 = loc("/usr/include/stdlib.h":672:45)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":66:23)
#loc50 = loc("/usr/include/stdlib.h":756:1)
#loc51 = loc("/usr/include/stdlib.h":756:70)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":56:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":84:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":58:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":58:11)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":59:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":59:22)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":60:12)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":60:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":61:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":77:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":63:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":63:57)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":63:35)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":63:42)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":63:46)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":63:56)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":64:9)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":68:9)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":64:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":64:27)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":65:9)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":66:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":67:13)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":67:18)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":69:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":75:9)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":70:13)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":70:20)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":71:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":74:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":71:22)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":71:18)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":71:25)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":71:29)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":72:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":73:33)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":73:17)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":73:28)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":73:29)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":71:35)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":71:34)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":76:16)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":76:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":78:5)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":83:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":79:9)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":79:22)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":80:22)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":80:27)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":80:28)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":80:9)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":82:9)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":82:14)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":86:1)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":89:1)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_33.cpp":88:5)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc12, #loc11])
#loc114 = loc(fused[#loc13, #loc14])
#loc115 = loc(fused[#loc15, #loc16])
#loc116 = loc(fused[#loc17, #loc18])
#loc117 = loc(fused[#loc19, #loc20])
#loc118 = loc(fused[#loc21, #loc22])
#loc119 = loc(fused[#loc24, #loc23])
#loc120 = loc(fused[#loc25, #loc26])
#loc121 = loc(fused[#loc27, #loc22])
#loc122 = loc(fused[#loc30, #loc28])
#loc123 = loc(fused[#loc32, #loc31])
#loc124 = loc(fused[#loc34, #loc33])
#loc125 = loc(fused[#loc35, #loc36])
#loc126 = loc(fused[#loc37, #loc38])
#loc127 = loc(fused[#loc45, #loc46])
#loc128 = loc(fused[#loc47, #loc48])
#loc129 = loc(fused[#loc50, #loc51])
#loc130 = loc(fused[#loc52, #loc53])
#loc131 = loc(fused[#loc54, #loc55])
#loc132 = loc(fused[#loc56, #loc57])
#loc133 = loc(fused[#loc59, #loc58])
#loc134 = loc(fused[#loc60, #loc61])
#loc135 = loc(fused[#loc62, #loc63])
#loc136 = loc(fused[#loc66, #loc67])
#loc137 = loc(fused[#loc65, #loc67])
#loc138 = loc(fused[#loc64, #loc63])
#loc139 = loc(fused[#loc68, #loc69])
#loc140 = loc(fused[#loc70, #loc71])
#loc141 = loc(fused[#loc72, #loc69])
#loc142 = loc(fused[#loc76, #loc77])
#loc143 = loc(fused[#loc78, #loc79])
#loc144 = loc(fused[#loc80, #loc81])
#loc145 = loc(fused[#loc83, #loc82])
#loc146 = loc(fused[#loc84, #loc85])
#loc147 = loc(fused[#loc86, #loc81])
#loc148 = loc(fused[#loc88, #loc87])
#loc149 = loc(fused[#loc92, #loc91])
#loc150 = loc(fused[#loc94, #loc93])
#loc151 = loc(fused[#loc95, #loc96])
#loc152 = loc(fused[#loc97, #loc98])
#loc153 = loc(fused[#loc105, #loc106])
