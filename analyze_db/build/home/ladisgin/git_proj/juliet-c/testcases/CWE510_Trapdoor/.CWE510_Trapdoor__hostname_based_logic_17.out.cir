!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc205 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":229:10)
#loc206 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":229:14)
#loc207 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":229:20)
#loc208 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":229:32)
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc414 = loc(fused[#loc205, #loc206])
#loc415 = loc(fused[#loc207, #loc208])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc332)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc333)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc334)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc335)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc336)
  cir.func private @getsockname(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc337)
  cir.func private @getnameinfo(!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc338)
  cir.func private @strcmp(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc339)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"admin.google.com\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc17)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc340)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Welcome, admin!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Welcome!\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc341)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Send failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc24)
  cir.func private @close(!s32i) -> !s32i loc(#loc342)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc344)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["acceptService"] {alignment = 4 : i64} loc(#loc345)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptServiceLen", init] {alignment = 4 : i64} loc(#loc346)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc347)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc348)
    %5 = cir.alloca !cir.array<!s8i x 1025>, !cir.ptr<!cir.array<!s8i x 1025>>, ["hostname"] {alignment = 16 : i64} loc(#loc349)
    %6 = cir.alloca !cir.array<!s8i x 32>, !cir.ptr<!cir.array<!s8i x 32>>, ["servInfo"] {alignment = 16 : i64} loc(#loc350)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc351)
    cir.br ^bb1 loc(#loc352)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<0> : !s32i loc(#loc46)
    cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.br ^bb2 loc(#loc352)
  ^bb2:  // 2 preds: ^bb1, ^bb58
    %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc354)
    cir.brcond %11 ^bb3, ^bb59 loc(#loc50)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc355)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc356)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<16> : !u64i loc(#loc357)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc357)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc35)
    cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc37)
    cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.br ^bb6 loc(#loc358)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc358)
  ^bb7:  // pred: ^bb45
    %18 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc57)
    cir.brcond %19 ^bb8, ^bb46 loc(#loc57)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %20 = cir.const #cir.int<2> : !s32i loc(#loc58)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %22 = cir.const #cir.int<6> : !s32i loc(#loc60)
    %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
    cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb9 loc(#loc360)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc67)
    %27 = cir.cmp(eq, %24, %26) : !s32i, !cir.bool loc(#loc361)
    cir.brcond %27 ^bb10, ^bb11 loc(#loc362)
  ^bb10:  // pred: ^bb9
    cir.br ^bb46 loc(#loc69)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc65)
  ^bb12:  // pred: ^bb11
    %28 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc363)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %30 = cir.const #cir.int<16> : !u64i loc(#loc364)
    cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc365)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc77)
    %33 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc366)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc80)
    %36 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc367)
    %38 = cir.const #cir.int<20000> : !s32i loc(#loc84)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc84)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc85)
    %41 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc368)
    cir.br ^bb13 loc(#loc369)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %43 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc370)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc371)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc371)
    %46 = cir.call @bind(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc96)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc97)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc373)
  ^bb14:  // pred: ^bb13
    cir.br ^bb46 loc(#loc99)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc90)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc374)
  ^bb17:  // pred: ^bb16
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %51 = cir.const #cir.int<5> : !s32i loc(#loc103)
    %52 = cir.call @listen(%50, %51) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc104)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc105)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc375)
    cir.brcond %55 ^bb18, ^bb19 loc(#loc376)
  ^bb18:  // pred: ^bb17
    cir.br ^bb46 loc(#loc107)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc101)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc109)
    %58 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc110)
    %59 = cir.call @accept(%56, %57, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc111)
    cir.store %59, %4 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb21 loc(#loc378)
  ^bb21:  // pred: ^bb20
    %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc117)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc379)
    cir.brcond %63 ^bb22, ^bb23 loc(#loc380)
  ^bb22:  // pred: ^bb21
    cir.br ^bb46 loc(#loc119)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc115)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc381)
  ^bb25:  // pred: ^bb24
    %64 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %65 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc382)
    %66 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!u32i> loc(#loc383)
    %67 = cir.call @getsockname(%64, %65, %66) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc127)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc129)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc384)
    cir.brcond %70 ^bb26, ^bb27 loc(#loc385)
  ^bb26:  // pred: ^bb25
    cir.br ^bb46 loc(#loc131)
  ^bb27:  // pred: ^bb25
    cir.br ^bb28 loc(#loc121)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc386)
  ^bb29:  // pred: ^bb28
    %71 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc387)
    %72 = cir.const #cir.int<16> : !u64i loc(#loc388)
    %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc388)
    %74 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc138)
    %75 = cir.const #cir.int<1025> : !s32i loc(#loc139)
    %76 = cir.cast(integral, %75 : !s32i), !u32i loc(#loc139)
    %77 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc140)
    %78 = cir.const #cir.int<32> : !s32i loc(#loc141)
    %79 = cir.cast(integral, %78 : !s32i), !u32i loc(#loc141)
    %80 = cir.const #cir.int<2> : !s32i loc(#loc142)
    %81 = cir.call @getnameinfo(%71, %73, %74, %76, %77, %79, %80) : (!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc143)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %83 = cir.cmp(ne, %81, %82) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %83 ^bb30, ^bb31 loc(#loc390)
  ^bb30:  // pred: ^bb29
    cir.br ^bb46 loc(#loc146)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc133)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc391)
  ^bb33:  // pred: ^bb32
    %84 = cir.get_global @strcmp : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc149)
    %85 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc17)
    %86 = cir.cast(array_to_ptrdecay, %85 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc17)
    %87 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc150)
    %88 = cir.call @strcmp(%86, %87) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc149)
    %89 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %90 = cir.cmp(eq, %88, %89) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %90 ^bb34, ^bb39 loc(#loc393)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc394)
  ^bb35:  // pred: ^bb34
    %91 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %92 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %93 = cir.cast(array_to_ptrdecay, %92 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc20)
    %94 = cir.cast(bitcast, %93 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %95 = cir.const #cir.int<15> : !u64i loc(#loc395)
    %96 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %97 = cir.call @send(%91, %94, %95, %96) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc161)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %99 = cir.unary(minus, %98) : !s32i, !s32i loc(#loc162)
    %100 = cir.cast(integral, %99 : !s32i), !s64i loc(#loc162)
    %101 = cir.cmp(eq, %97, %100) : !s64i, !cir.bool loc(#loc396)
    cir.brcond %101 ^bb36, ^bb37 loc(#loc397)
  ^bb36:  // pred: ^bb35
    cir.br ^bb46 loc(#loc164)
  ^bb37:  // pred: ^bb35
    cir.br ^bb38 loc(#loc156)
  ^bb38:  // pred: ^bb37
    cir.br ^bb44 loc(#loc153)
  ^bb39:  // pred: ^bb33
    cir.br ^bb40 loc(#loc398)
  ^bb40:  // pred: ^bb39
    %102 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %103 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc21)
    %104 = cir.cast(array_to_ptrdecay, %103 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc21)
    %105 = cir.cast(bitcast, %104 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %106 = cir.const #cir.int<8> : !u64i loc(#loc399)
    %107 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %108 = cir.call @send(%102, %105, %106, %107) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc171)
    %109 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %110 = cir.unary(minus, %109) : !s32i, !s32i loc(#loc172)
    %111 = cir.cast(integral, %110 : !s32i), !s64i loc(#loc172)
    %112 = cir.cmp(eq, %108, %111) : !s64i, !cir.bool loc(#loc400)
    cir.brcond %112 ^bb41, ^bb42 loc(#loc401)
  ^bb41:  // pred: ^bb40
    %113 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc24)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%114) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    cir.br ^bb42 loc(#loc166)
  ^bb42:  // 2 preds: ^bb40, ^bb41
    cir.br ^bb43 loc(#loc166)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc148)
  ^bb44:  // 2 preds: ^bb38, ^bb43
    cir.br ^bb45 loc(#loc148)
  ^bb45:  // pred: ^bb44
    cir.br ^bb7 loc(#loc56)
  ^bb46:  // 8 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22, ^bb26, ^bb30, ^bb36
    cir.br ^bb47 loc(#loc56)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc402)
  ^bb48:  // pred: ^bb47
    %115 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %116 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %117 = cir.unary(minus, %116) : !s32i, !s32i loc(#loc178)
    %118 = cir.cmp(ne, %115, %117) : !s32i, !cir.bool loc(#loc403)
    cir.brcond %118 ^bb49, ^bb50 loc(#loc404)
  ^bb49:  // pred: ^bb48
    %119 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %120 = cir.call @close(%119) : (!s32i) -> !s32i loc(#loc181)
    cir.br ^bb50 loc(#loc176)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc176)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc405)
  ^bb52:  // pred: ^bb51
    %121 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %122 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %123 = cir.unary(minus, %122) : !s32i, !s32i loc(#loc185)
    %124 = cir.cmp(ne, %121, %123) : !s32i, !cir.bool loc(#loc406)
    cir.brcond %124 ^bb53, ^bb54 loc(#loc407)
  ^bb53:  // pred: ^bb52
    %125 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %126 = cir.call @close(%125) : (!s32i) -> !s32i loc(#loc188)
    cir.br ^bb54 loc(#loc183)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc183)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc53)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc45)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc45)
  ^bb58:  // pred: ^bb57
    %127 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %128 = cir.unary(inc, %127) : !s32i, !s32i loc(#loc190)
    cir.store %128, %7 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.br ^bb2 loc(#loc352)
  ^bb59:  // pred: ^bb2
    cir.br ^bb60 loc(#loc45)
  ^bb60:  // pred: ^bb59
    cir.return loc(#loc28)
  } loc(#loc343)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc410)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc193)
    cir.return loc(#loc192)
  } loc(#loc409)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc411)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc412)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc202)
  cir.func @main(%arg0: !s32i loc(fused[#loc205, #loc206]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc207, #loc208])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc414)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc415)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc204)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc209)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc210)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc211)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc211)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc212)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc199)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc199)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc213)
    %8 = cir.get_global @CWE510_Trapdoor__hostname_based_logic_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc416)
    cir.call @CWE510_Trapdoor__hostname_based_logic_17_good() : () -> () loc(#loc214)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc200)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc201)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    %13 = cir.get_global @CWE510_Trapdoor__hostname_based_logic_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc417)
    cir.call @CWE510_Trapdoor__hostname_based_logic_17_bad() : () -> () loc(#loc218)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc202)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc221)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc418)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc418)
    cir.return %17 : !s32i loc(#loc418)
  } loc(#loc413)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc420)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc421)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc422)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc423)
    cir.br ^bb1 loc(#loc424)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc235)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.br ^bb2 loc(#loc424)
  ^bb2:  // 2 preds: ^bb1, ^bb41
    %5 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc426)
    cir.brcond %7 ^bb3, ^bb42 loc(#loc239)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc427)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc428)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc228)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc228)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc230)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    cir.br ^bb6 loc(#loc429)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc429)
  ^bb7:  // pred: ^bb28
    %12 = cir.const #cir.int<0> : !s32i loc(#loc245)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc245)
    cir.brcond %13 ^bb8, ^bb29 loc(#loc245)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %14 = cir.const #cir.int<2> : !s32i loc(#loc246)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc248)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc249)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    cir.br ^bb9 loc(#loc431)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc255)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc432)
    cir.brcond %21 ^bb10, ^bb11 loc(#loc433)
  ^bb10:  // pred: ^bb9
    cir.br ^bb29 loc(#loc257)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc253)
  ^bb12:  // pred: ^bb11
    %22 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc434)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc260)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc435)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc436)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc265)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc265)
    %27 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc437)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc267)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc267)
    %30 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc438)
    %32 = cir.const #cir.int<20000> : !s32i loc(#loc269)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc269)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc270)
    %35 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc439)
    cir.br ^bb13 loc(#loc440)
  ^bb13:  // pred: ^bb12
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %37 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc441)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc442)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc442)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc280)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc281)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc281)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc443)
    cir.brcond %43 ^bb14, ^bb15 loc(#loc444)
  ^bb14:  // pred: ^bb13
    cir.br ^bb29 loc(#loc283)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc274)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc445)
  ^bb17:  // pred: ^bb16
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc287)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc288)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc289)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc289)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc446)
    cir.brcond %49 ^bb18, ^bb19 loc(#loc447)
  ^bb18:  // pred: ^bb17
    cir.br ^bb29 loc(#loc291)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc285)
  ^bb20:  // pred: ^bb19
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc293)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc294)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc295)
    cir.store %53, %2 : !s32i, !cir.ptr<!s32i> loc(#loc448)
    cir.br ^bb21 loc(#loc449)
  ^bb21:  // pred: ^bb20
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc301)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc450)
    cir.brcond %57 ^bb22, ^bb23 loc(#loc451)
  ^bb22:  // pred: ^bb21
    cir.br ^bb29 loc(#loc303)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc299)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc452)
  ^bb25:  // pred: ^bb24
    %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc306)
    %59 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc307)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc307)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc307)
    %62 = cir.const #cir.int<8> : !u64i loc(#loc453)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc310)
    %64 = cir.call @send(%58, %61, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc311)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc312)
    %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc312)
    %67 = cir.cast(integral, %66 : !s32i), !s64i loc(#loc312)
    %68 = cir.cmp(eq, %64, %67) : !s64i, !cir.bool loc(#loc454)
    cir.brcond %68 ^bb26, ^bb27 loc(#loc455)
  ^bb26:  // pred: ^bb25
    %69 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc314)
    %70 = cir.cast(array_to_ptrdecay, %69 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc314)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc315)
    cir.br ^bb27 loc(#loc305)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc305)
  ^bb28:  // pred: ^bb27
    cir.br ^bb7 loc(#loc244)
  ^bb29:  // 5 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22
    cir.br ^bb30 loc(#loc244)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc456)
  ^bb31:  // pred: ^bb30
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc319)
    %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc319)
    %74 = cir.cmp(ne, %71, %73) : !s32i, !cir.bool loc(#loc457)
    cir.brcond %74 ^bb32, ^bb33 loc(#loc458)
  ^bb32:  // pred: ^bb31
    %75 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    %76 = cir.call @close(%75) : (!s32i) -> !s32i loc(#loc322)
    cir.br ^bb33 loc(#loc317)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc317)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc459)
  ^bb35:  // pred: ^bb34
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc325)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc326)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc326)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc460)
    cir.brcond %80 ^bb36, ^bb37 loc(#loc461)
  ^bb36:  // pred: ^bb35
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc328)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc329)
    cir.br ^bb37 loc(#loc324)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc324)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc242)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc234)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc234)
  ^bb41:  // pred: ^bb40
    %83 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc330)
    %84 = cir.unary(inc, %83) : !s32i, !s32i loc(#loc331)
    cir.store %84, %3 : !s32i, !cir.ptr<!s32i> loc(#loc462)
    cir.br ^bb2 loc(#loc424)
  ^bb42:  // pred: ^bb2
    cir.br ^bb43 loc(#loc234)
  ^bb43:  // pred: ^bb42
    cir.return loc(#loc224)
  } loc(#loc419)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_17.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":116:1)
#loc12 = loc("/usr/include/sys/socket.h":117:33)
#loc13 = loc("/usr/include/netdb.h":675:1)
#loc14 = loc("/usr/include/netdb.h":678:36)
#loc15 = loc("/usr/include/string.h":156:1)
#loc16 = loc("/usr/include/string.h":157:33)
#loc17 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":106:28)
#loc18 = loc("/usr/include/sys/socket.h":138:1)
#loc19 = loc("/usr/include/sys/socket.h":138:74)
#loc20 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":108:44)
#loc21 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":116:44)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":118:35)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":47:1)
#loc28 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":139:1)
#loc29 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":57:13)
#loc30 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":57:32)
#loc31 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":57:41)
#loc32 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":58:13)
#loc33 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":58:56)
#loc34 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":59:13)
#loc35 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":59:35)
#loc36 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":60:13)
#loc37 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":60:35)
#loc38 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":61:13)
#loc39 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":61:37)
#loc40 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":62:13)
#loc41 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":62:37)
#loc42 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":49:5)
#loc43 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":49:9)
#loc44 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":50:5)
#loc45 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":138:5)
#loc46 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":50:13)
#loc47 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":50:9)
#loc48 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":50:16)
#loc49 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":50:20)
#loc50 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":50:18)
#loc51 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":51:5)
#loc52 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":52:9)
#loc53 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":137:9)
#loc54 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":58:36)
#loc55 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":63:13)
#loc56 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":122:21)
#loc57 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":122:20)
#loc58 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":72:39)
#loc59 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":72:48)
#loc60 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":72:61)
#loc61 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":72:32)
#loc62 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":72:17)
#loc63 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":72:72)
#loc64 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":73:17)
#loc65 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":76:17)
#loc66 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":73:21)
#loc67 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":73:37)
#loc68 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":74:17)
#loc69 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":75:21)
#loc70 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":77:24)
#loc71 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":77:25)
#loc72 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":77:34)
#loc73 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":77:37)
#loc74 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":77:51)
#loc75 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":77:17)
#loc76 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":77:52)
#loc77 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":78:38)
#loc78 = loc("/usr/include/netinet/in.h":249:5)
#loc79 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":78:17)
#loc80 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":79:43)
#loc81 = loc("/usr/include/netinet/in.h":251:20)
#loc82 = loc("/usr/include/netinet/in.h":33:15)
#loc83 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":79:17)
#loc84 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":80:42)
#loc85 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":80:36)
#loc86 = loc("/usr/include/netinet/in.h":250:15)
#loc87 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":80:17)
#loc88 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":80:47)
#loc89 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":81:17)
#loc90 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":84:17)
#loc91 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":81:26)
#loc92 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":81:58)
#loc93 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":81:59)
#loc94 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":81:68)
#loc95 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":81:82)
#loc96 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":81:21)
#loc97 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":81:88)
#loc98 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":82:17)
#loc99 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":83:21)
#loc100 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":85:17)
#loc101 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":88:17)
#loc102 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":85:28)
#loc103 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":85:42)
#loc104 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":85:21)
#loc105 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":85:48)
#loc106 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":86:17)
#loc107 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":87:21)
#loc108 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":89:39)
#loc109 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":89:53)
#loc110 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":89:59)
#loc111 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":89:32)
#loc112 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":89:17)
#loc113 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":89:63)
#loc114 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":90:17)
#loc115 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":93:17)
#loc116 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":90:21)
#loc117 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":90:37)
#loc118 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":91:17)
#loc119 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":92:21)
#loc120 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":94:17)
#loc121 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":97:17)
#loc122 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":94:33)
#loc123 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":94:66)
#loc124 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":94:67)
#loc125 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":94:82)
#loc126 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":94:83)
#loc127 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":94:21)
#loc128 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":94:105)
#loc129 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":94:104)
#loc130 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":95:17)
#loc131 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":96:21)
#loc132 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":98:17)
#loc133 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":104:17)
#loc134 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":98:52)
#loc135 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":98:53)
#loc136 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":99:33)
#loc137 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":99:55)
#loc138 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":100:33)
#loc139 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":101:33)
#loc140 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":101:45)
#loc141 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":101:55)
#loc142 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":101:67)
#loc143 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":98:21)
#loc144 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":101:86)
#loc145 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":102:17)
#loc146 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":103:21)
#loc147 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":106:17)
#loc148 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":120:17)
#loc149 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":106:21)
#loc150 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":106:48)
#loc151 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":106:61)
#loc152 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":107:17)
#loc153 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":113:17)
#loc154 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":115:17)
#loc155 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":108:21)
#loc156 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":112:21)
#loc157 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":108:30)
#loc158 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":108:59)
#loc159 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":108:79)
#loc160 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":108:82)
#loc161 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":108:25)
#loc162 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":108:89)
#loc163 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":109:21)
#loc164 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":111:25)
#loc165 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":116:21)
#loc166 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":119:21)
#loc167 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":116:30)
#loc168 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":116:61)
#loc169 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":116:83)
#loc170 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":116:86)
#loc171 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":116:25)
#loc172 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":116:92)
#loc173 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":117:21)
#loc174 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":118:25)
#loc175 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":123:13)
#loc176 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":126:13)
#loc177 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":123:17)
#loc178 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":123:33)
#loc179 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":124:13)
#loc180 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":125:30)
#loc181 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":125:17)
#loc182 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":127:13)
#loc183 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":130:13)
#loc184 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":127:17)
#loc185 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":127:33)
#loc186 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":128:13)
#loc187 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":129:30)
#loc188 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":129:17)
#loc189 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":50:24)
#loc190 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":50:23)
#loc191 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":215:1)
#loc192 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":218:1)
#loc193 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":217:5)
#loc194 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":217:11)
#loc195 = loc("/usr/include/stdlib.h":575:1)
#loc196 = loc("/usr/include/stdlib.h":575:41)
#loc197 = loc("/usr/include/time.h":76:1)
#loc198 = loc("/usr/include/time.h":76:38)
#loc199 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":234:15)
#loc200 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":236:15)
#loc201 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":239:15)
#loc202 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":241:15)
#loc203 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":229:1)
#loc204 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":244:1)
#loc209 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":230:1)
#loc210 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":232:27)
#loc211 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":232:22)
#loc212 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":232:5)
#loc213 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":234:5)
#loc214 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":235:5)
#loc215 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":235:51)
#loc216 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":236:5)
#loc217 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":239:5)
#loc218 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":240:5)
#loc219 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":240:50)
#loc220 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":241:5)
#loc221 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":243:12)
#loc222 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":243:5)
#loc223 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":146:1)
#loc224 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":213:1)
#loc225 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":156:13)
#loc226 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":156:32)
#loc227 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":157:13)
#loc228 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":157:35)
#loc229 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":158:13)
#loc230 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":158:35)
#loc231 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":148:5)
#loc232 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":148:9)
#loc233 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":149:5)
#loc234 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":212:5)
#loc235 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":149:13)
#loc236 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":149:9)
#loc237 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":149:16)
#loc238 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":149:20)
#loc239 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":149:18)
#loc240 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":150:5)
#loc241 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":151:9)
#loc242 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":211:9)
#loc243 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":159:13)
#loc244 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":196:21)
#loc245 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":196:20)
#loc246 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":168:39)
#loc247 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":168:48)
#loc248 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":168:61)
#loc249 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":168:32)
#loc250 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":168:17)
#loc251 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":168:72)
#loc252 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":169:17)
#loc253 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":172:17)
#loc254 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":169:21)
#loc255 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":169:37)
#loc256 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":170:17)
#loc257 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":171:21)
#loc258 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":173:24)
#loc259 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":173:25)
#loc260 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":173:34)
#loc261 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":173:37)
#loc262 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":173:51)
#loc263 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":173:17)
#loc264 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":173:52)
#loc265 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":174:38)
#loc266 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":174:17)
#loc267 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":175:43)
#loc268 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":175:17)
#loc269 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":176:42)
#loc270 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":176:36)
#loc271 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":176:17)
#loc272 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":176:47)
#loc273 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":177:17)
#loc274 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":180:17)
#loc275 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":177:26)
#loc276 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":177:58)
#loc277 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":177:59)
#loc278 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":177:68)
#loc279 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":177:82)
#loc280 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":177:21)
#loc281 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":177:88)
#loc282 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":178:17)
#loc283 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":179:21)
#loc284 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":181:17)
#loc285 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":184:17)
#loc286 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":181:28)
#loc287 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":181:42)
#loc288 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":181:21)
#loc289 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":181:48)
#loc290 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":182:17)
#loc291 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":183:21)
#loc292 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":185:39)
#loc293 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":185:53)
#loc294 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":185:59)
#loc295 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":185:32)
#loc296 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":185:17)
#loc297 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":185:63)
#loc298 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":186:17)
#loc299 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":189:17)
#loc300 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":186:21)
#loc301 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":186:37)
#loc302 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":187:17)
#loc303 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":188:21)
#loc304 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":191:17)
#loc305 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":194:17)
#loc306 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":191:26)
#loc307 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":191:40)
#loc308 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":191:57)
#loc309 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":191:79)
#loc310 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":191:82)
#loc311 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":191:21)
#loc312 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":191:88)
#loc313 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":192:17)
#loc314 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":193:31)
#loc315 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":193:21)
#loc316 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":197:13)
#loc317 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":200:13)
#loc318 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":197:17)
#loc319 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":197:33)
#loc320 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":198:13)
#loc321 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":199:30)
#loc322 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":199:17)
#loc323 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":201:13)
#loc324 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":204:13)
#loc325 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":201:17)
#loc326 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":201:33)
#loc327 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":202:13)
#loc328 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":203:30)
#loc329 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":203:17)
#loc330 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":149:24)
#loc331 = loc("CWE510_Trapdoor__hostname_based_logic_17.c":149:23)
#loc332 = loc(fused[#loc1, #loc2])
#loc333 = loc(fused[#loc3, #loc4])
#loc334 = loc(fused[#loc5, #loc6])
#loc335 = loc(fused[#loc7, #loc8])
#loc336 = loc(fused[#loc9, #loc10])
#loc337 = loc(fused[#loc11, #loc12])
#loc338 = loc(fused[#loc13, #loc14])
#loc339 = loc(fused[#loc15, #loc16])
#loc340 = loc(fused[#loc18, #loc19])
#loc341 = loc(fused[#loc22, #loc23])
#loc342 = loc(fused[#loc25, #loc26])
#loc343 = loc(fused[#loc27, #loc28])
#loc344 = loc(fused[#loc29, #loc30])
#loc345 = loc(fused[#loc29, #loc31])
#loc346 = loc(fused[#loc32, #loc33])
#loc347 = loc(fused[#loc34, #loc35])
#loc348 = loc(fused[#loc36, #loc37])
#loc349 = loc(fused[#loc38, #loc39])
#loc350 = loc(fused[#loc40, #loc41])
#loc351 = loc(fused[#loc42, #loc43])
#loc352 = loc(fused[#loc44, #loc45])
#loc353 = loc(fused[#loc47, #loc46])
#loc354 = loc(fused[#loc48, #loc49])
#loc355 = loc(fused[#loc51, #loc45])
#loc356 = loc(fused[#loc52, #loc53])
#loc357 = loc(fused[#loc54, #loc33])
#loc358 = loc(fused[#loc55, #loc56])
#loc359 = loc(fused[#loc62, #loc63])
#loc360 = loc(fused[#loc64, #loc65])
#loc361 = loc(fused[#loc66, #loc67])
#loc362 = loc(fused[#loc68, #loc65])
#loc363 = loc(fused[#loc70, #loc71])
#loc364 = loc(fused[#loc73, #loc74])
#loc365 = loc(fused[#loc75, #loc76])
#loc366 = loc(fused[#loc79, #loc77])
#loc367 = loc(fused[#loc83, #loc80])
#loc368 = loc(fused[#loc87, #loc88])
#loc369 = loc(fused[#loc89, #loc90])
#loc370 = loc(fused[#loc92, #loc93])
#loc371 = loc(fused[#loc94, #loc95])
#loc372 = loc(fused[#loc96, #loc97])
#loc373 = loc(fused[#loc98, #loc90])
#loc374 = loc(fused[#loc100, #loc101])
#loc375 = loc(fused[#loc104, #loc105])
#loc376 = loc(fused[#loc106, #loc101])
#loc377 = loc(fused[#loc112, #loc113])
#loc378 = loc(fused[#loc114, #loc115])
#loc379 = loc(fused[#loc116, #loc117])
#loc380 = loc(fused[#loc118, #loc115])
#loc381 = loc(fused[#loc120, #loc121])
#loc382 = loc(fused[#loc123, #loc124])
#loc383 = loc(fused[#loc125, #loc126])
#loc384 = loc(fused[#loc127, #loc128])
#loc385 = loc(fused[#loc130, #loc121])
#loc386 = loc(fused[#loc132, #loc133])
#loc387 = loc(fused[#loc134, #loc135])
#loc388 = loc(fused[#loc136, #loc137])
#loc389 = loc(fused[#loc143, #loc144])
#loc390 = loc(fused[#loc145, #loc133])
#loc391 = loc(fused[#loc147, #loc148])
#loc392 = loc(fused[#loc149, #loc151])
#loc393 = loc(fused[#loc152, #loc153, #loc154, #loc148])
#loc394 = loc(fused[#loc155, #loc156])
#loc395 = loc(fused[#loc158, #loc159])
#loc396 = loc(fused[#loc161, #loc162])
#loc397 = loc(fused[#loc163, #loc156])
#loc398 = loc(fused[#loc165, #loc166])
#loc399 = loc(fused[#loc168, #loc169])
#loc400 = loc(fused[#loc171, #loc172])
#loc401 = loc(fused[#loc173, #loc166])
#loc402 = loc(fused[#loc175, #loc176])
#loc403 = loc(fused[#loc177, #loc178])
#loc404 = loc(fused[#loc179, #loc176])
#loc405 = loc(fused[#loc182, #loc183])
#loc406 = loc(fused[#loc184, #loc185])
#loc407 = loc(fused[#loc186, #loc183])
#loc408 = loc(fused[#loc190, #loc189])
#loc409 = loc(fused[#loc191, #loc192])
#loc410 = loc(fused[#loc193, #loc194])
#loc411 = loc(fused[#loc195, #loc196])
#loc412 = loc(fused[#loc197, #loc198])
#loc413 = loc(fused[#loc203, #loc204])
#loc416 = loc(fused[#loc214, #loc215])
#loc417 = loc(fused[#loc218, #loc219])
#loc418 = loc(fused[#loc222, #loc221])
#loc419 = loc(fused[#loc223, #loc224])
#loc420 = loc(fused[#loc225, #loc226])
#loc421 = loc(fused[#loc227, #loc228])
#loc422 = loc(fused[#loc229, #loc230])
#loc423 = loc(fused[#loc231, #loc232])
#loc424 = loc(fused[#loc233, #loc234])
#loc425 = loc(fused[#loc236, #loc235])
#loc426 = loc(fused[#loc237, #loc238])
#loc427 = loc(fused[#loc240, #loc234])
#loc428 = loc(fused[#loc241, #loc242])
#loc429 = loc(fused[#loc243, #loc244])
#loc430 = loc(fused[#loc250, #loc251])
#loc431 = loc(fused[#loc252, #loc253])
#loc432 = loc(fused[#loc254, #loc255])
#loc433 = loc(fused[#loc256, #loc253])
#loc434 = loc(fused[#loc258, #loc259])
#loc435 = loc(fused[#loc261, #loc262])
#loc436 = loc(fused[#loc263, #loc264])
#loc437 = loc(fused[#loc266, #loc265])
#loc438 = loc(fused[#loc268, #loc267])
#loc439 = loc(fused[#loc271, #loc272])
#loc440 = loc(fused[#loc273, #loc274])
#loc441 = loc(fused[#loc276, #loc277])
#loc442 = loc(fused[#loc278, #loc279])
#loc443 = loc(fused[#loc280, #loc281])
#loc444 = loc(fused[#loc282, #loc274])
#loc445 = loc(fused[#loc284, #loc285])
#loc446 = loc(fused[#loc288, #loc289])
#loc447 = loc(fused[#loc290, #loc285])
#loc448 = loc(fused[#loc296, #loc297])
#loc449 = loc(fused[#loc298, #loc299])
#loc450 = loc(fused[#loc300, #loc301])
#loc451 = loc(fused[#loc302, #loc299])
#loc452 = loc(fused[#loc304, #loc305])
#loc453 = loc(fused[#loc308, #loc309])
#loc454 = loc(fused[#loc311, #loc312])
#loc455 = loc(fused[#loc313, #loc305])
#loc456 = loc(fused[#loc316, #loc317])
#loc457 = loc(fused[#loc318, #loc319])
#loc458 = loc(fused[#loc320, #loc317])
#loc459 = loc(fused[#loc323, #loc324])
#loc460 = loc(fused[#loc325, #loc326])
#loc461 = loc(fused[#loc327, #loc324])
#loc462 = loc(fused[#loc331, #loc330])
