!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":107:23)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68_badData : !s32i {alignment = 4 : i64} loc(#loc216)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc217)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc218)
  cir.func private @printIntLine(!s32i) loc(#loc219)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc11)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc221)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b_badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc224)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc225)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68_badData : !cir.ptr<!s32i> loc(#loc216)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb1 loc(#loc226)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc24)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc25)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc227)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc228)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc229)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc224)
    cir.br ^bb2 loc(#loc230)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc31)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc231)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc232)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc33)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc35)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb4 loc(#loc29)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc233)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc38)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.br ^bb7 loc(#loc233)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc41)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc235)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc42)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc236)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc47)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.br ^bb10 loc(#loc37)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc37)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %28 = cir.unary(inc, %27) nsw : !s32i, !s32i loc(#loc49)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.br ^bb7 loc(#loc233)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc37)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc239)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %31 = cir.cmp(ge, %29, %30) : !s32i, !cir.bool loc(#loc240)
    cir.brcond %31 ^bb15, ^bb24 loc(#loc241)
  ^bb15:  // pred: ^bb14
    %32 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc60)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.br ^bb16 loc(#loc243)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb17 loc(#loc243)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %38 = cir.const #cir.int<10> : !s32i loc(#loc66)
    %39 = cir.cmp(lt, %37, %38) : !s32i, !cir.bool loc(#loc245)
    cir.brcond %39 ^bb18, ^bb22 loc(#loc67)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc246)
  ^bb19:  // pred: ^bb18
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc71)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc72)
    cir.br ^bb20 loc(#loc62)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc62)
  ^bb21:  // pred: ^bb20
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %45 = cir.unary(inc, %44) nsw : !s32i, !s32i loc(#loc74)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb17 loc(#loc243)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc62)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc55)
  ^bb24:  // pred: ^bb14
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc11)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb25 loc(#loc51)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc51)
  ^bb26:  // pred: ^bb25
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc76)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
    cir.br ^bb27 loc(#loc23)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc15)
  } loc(#loc222)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68_goodG2BData : !s32i {alignment = 4 : i64} loc(#loc248)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b_goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc251)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc252)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68_goodG2BData : !cir.ptr<!s32i> loc(#loc248)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.br ^bb1 loc(#loc253)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc90)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc91)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc91)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc254)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc255)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc90)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc256)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc251)
    cir.br ^bb2 loc(#loc257)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc97)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc258)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc259)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc99)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc101)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
    cir.br ^bb4 loc(#loc95)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc95)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc260)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.br ^bb7 loc(#loc260)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc107)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc262)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc108)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc263)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc113)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb10 loc(#loc103)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc103)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %28 = cir.unary(inc, %27) nsw : !s32i, !s32i loc(#loc115)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.br ^bb7 loc(#loc260)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc103)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc266)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %31 = cir.cmp(ge, %29, %30) : !s32i, !cir.bool loc(#loc267)
    cir.brcond %31 ^bb15, ^bb24 loc(#loc268)
  ^bb15:  // pred: ^bb14
    %32 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc124)
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc126)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    cir.br ^bb16 loc(#loc270)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc129)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.br ^bb17 loc(#loc270)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %38 = cir.const #cir.int<10> : !s32i loc(#loc132)
    %39 = cir.cmp(lt, %37, %38) : !s32i, !cir.bool loc(#loc272)
    cir.brcond %39 ^bb18, ^bb22 loc(#loc133)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc273)
  ^bb19:  // pred: ^bb18
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc137)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc138)
    cir.br ^bb20 loc(#loc128)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc128)
  ^bb21:  // pred: ^bb20
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %45 = cir.unary(inc, %44) nsw : !s32i, !s32i loc(#loc140)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.br ^bb17 loc(#loc270)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc128)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc121)
  ^bb24:  // pred: ^bb14
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc141)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb25 loc(#loc117)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc117)
  ^bb26:  // pred: ^bb25
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc143)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc143)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb27 loc(#loc89)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc81)
  } loc(#loc249)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68_goodB2GData : !s32i {alignment = 4 : i64} loc(#loc275)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc147)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b_goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc278)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc279)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68_goodB2GData : !cir.ptr<!s32i> loc(#loc275)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb1 loc(#loc280)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc158)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc159)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc159)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc281)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc282)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc158)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc283)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc278)
    cir.br ^bb2 loc(#loc284)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc165)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc285)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc286)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc167)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc169)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc167)
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc163)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc287)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc172)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb7 loc(#loc287)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc175)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc289)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc176)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc290)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc181)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb10 loc(#loc171)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc171)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %28 = cir.unary(inc, %27) nsw : !s32i, !s32i loc(#loc183)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.br ^bb7 loc(#loc287)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc171)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc293)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %31 = cir.cmp(ge, %29, %30) : !s32i, !cir.bool loc(#loc294)
    cir.brcond %31 ^bb15, ^bb20 loc(#loc188)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc190)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc295)
    cir.brcond %34 ^bb16, ^bb17 loc(#loc188)
  ^bb16:  // pred: ^bb15
    %35 = cir.const #true loc(#loc188)
    cir.br ^bb18(%35 : !cir.bool) loc(#loc188)
  ^bb17:  // pred: ^bb15
    %36 = cir.const #false loc(#loc188)
    cir.br ^bb18(%36 : !cir.bool) loc(#loc188)
  ^bb18(%37: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":107:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc188)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%37 : !cir.bool) loc(#loc188)
  ^bb20:  // pred: ^bb14
    %38 = cir.const #false loc(#loc188)
    cir.br ^bb21(%38 : !cir.bool) loc(#loc188)
  ^bb21(%39: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":107:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc188)
  ^bb22:  // pred: ^bb21
    cir.brcond %39 ^bb23, ^bb32 loc(#loc296)
  ^bb23:  // pred: ^bb22
    %40 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc196)
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc198)
    cir.store %40, %43 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.br ^bb24 loc(#loc298)
  ^bb24:  // pred: ^bb23
    %44 = cir.const #cir.int<0> : !s32i loc(#loc201)
    cir.store %44, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb25 loc(#loc298)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc204)
    %47 = cir.cmp(lt, %45, %46) : !s32i, !cir.bool loc(#loc300)
    cir.brcond %47 ^bb26, ^bb30 loc(#loc205)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc301)
  ^bb27:  // pred: ^bb26
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc207)
    %49 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!s32i>, %49 : !s32i), !cir.ptr<!s32i> loc(#loc209)
    %51 = cir.load %50 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.call @printIntLine(%51) : (!s32i) -> () loc(#loc210)
    cir.br ^bb28 loc(#loc200)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc200)
  ^bb29:  // pred: ^bb28
    %52 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %53 = cir.unary(inc, %52) nsw : !s32i, !s32i loc(#loc212)
    cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb25 loc(#loc298)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc200)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc193)
  ^bb32:  // pred: ^bb22
    %54 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc147)
    %55 = cir.cast(array_to_ptrdecay, %54 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc213)
    cir.br ^bb33 loc(#loc185)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc185)
  ^bb34:  // pred: ^bb33
    %56 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc214)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc214)
    cir.call @free(%57) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc215)
    cir.br ^bb35 loc(#loc157)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc149)
  } loc(#loc276)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":20:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":20:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":51:23)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":26:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":55:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":30:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":30:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":31:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":31:54)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":28:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":28:16)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":29:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":54:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":31:31)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":31:38)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":31:43)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":31:53)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":32:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":32:39)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":32:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":32:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":32:29)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":32:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":32:36)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":32:35)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":34:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":37:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":34:18)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":34:14)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":34:21)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":34:25)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":34:23)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":35:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":36:25)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":36:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":36:20)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":36:21)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":34:30)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":34:29)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":40:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":52:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":40:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":40:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":41:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":48:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":50:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":42:28)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":42:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":42:20)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":42:24)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":44:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":47:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":44:21)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":44:17)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":44:24)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":44:28)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":44:26)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":45:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":46:30)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":46:37)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":46:38)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":46:17)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":44:33)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":44:32)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":51:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":53:14)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":53:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":21:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":21:12)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":62:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":91:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":66:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":66:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":67:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":67:54)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":64:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":64:16)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":65:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":90:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":67:31)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":67:38)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":67:43)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":67:53)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":68:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":68:39)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":68:13)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":68:23)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":68:29)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":68:30)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":68:36)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":68:35)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":70:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":73:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":70:18)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":70:14)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":70:21)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":70:25)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":70:23)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":71:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":72:25)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":72:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":72:20)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":72:21)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":70:30)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":70:29)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":76:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":88:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":76:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":76:21)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":77:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":84:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":86:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":78:28)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":78:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":78:20)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":78:24)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":80:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":83:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":80:21)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":80:17)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":80:24)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":80:28)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":80:26)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":81:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":82:30)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":82:37)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":82:38)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":82:17)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":80:33)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":80:32)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":87:23)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":87:13)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":89:14)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":89:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":22:1)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":22:12)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":118:23)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":94:1)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":122:1)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":98:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":98:13)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":99:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":99:54)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":96:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":96:16)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":97:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":121:5)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":99:31)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":99:38)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":99:43)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":99:53)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":100:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":100:39)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":100:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":100:23)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":100:29)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":100:30)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":100:36)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":100:35)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":102:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":105:9)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":102:18)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":102:14)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":102:21)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":102:25)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":102:23)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":103:9)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":104:25)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":104:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":104:20)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":104:21)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":102:30)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":102:29)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":107:9)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":119:9)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":107:13)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":107:21)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":107:26)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":107:34)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":107:36)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":108:9)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":115:9)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":117:9)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":109:28)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":109:13)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":109:20)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":109:24)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":111:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":114:13)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":111:21)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":111:17)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":111:24)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":111:28)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":111:26)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":112:13)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":113:30)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":113:37)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":113:38)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":113:17)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":111:33)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":111:32)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":118:13)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":120:14)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_68b.c":120:9)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc5, #loc6])
#loc219 = loc(fused[#loc7, #loc8])
#loc220 = loc(fused[#loc9, #loc10])
#loc221 = loc(fused[#loc12, #loc13])
#loc222 = loc(fused[#loc14, #loc15])
#loc223 = loc(fused[#loc16, #loc17])
#loc224 = loc(fused[#loc18, #loc19])
#loc225 = loc(fused[#loc20, #loc21])
#loc226 = loc(fused[#loc22, #loc23])
#loc227 = loc(fused[#loc26, #loc27])
#loc228 = loc(fused[#loc25, #loc27])
#loc229 = loc(fused[#loc24, #loc19])
#loc230 = loc(fused[#loc28, #loc29])
#loc231 = loc(fused[#loc30, #loc31])
#loc232 = loc(fused[#loc32, #loc29])
#loc233 = loc(fused[#loc36, #loc37])
#loc234 = loc(fused[#loc39, #loc38])
#loc235 = loc(fused[#loc40, #loc41])
#loc236 = loc(fused[#loc43, #loc37])
#loc237 = loc(fused[#loc45, #loc44])
#loc238 = loc(fused[#loc49, #loc48])
#loc239 = loc(fused[#loc50, #loc51])
#loc240 = loc(fused[#loc52, #loc53])
#loc241 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc242 = loc(fused[#loc58, #loc57])
#loc243 = loc(fused[#loc61, #loc62])
#loc244 = loc(fused[#loc64, #loc63])
#loc245 = loc(fused[#loc65, #loc66])
#loc246 = loc(fused[#loc68, #loc62])
#loc247 = loc(fused[#loc74, #loc73])
#loc248 = loc(fused[#loc78, #loc79])
#loc249 = loc(fused[#loc80, #loc81])
#loc250 = loc(fused[#loc82, #loc83])
#loc251 = loc(fused[#loc84, #loc85])
#loc252 = loc(fused[#loc86, #loc87])
#loc253 = loc(fused[#loc88, #loc89])
#loc254 = loc(fused[#loc92, #loc93])
#loc255 = loc(fused[#loc91, #loc93])
#loc256 = loc(fused[#loc90, #loc85])
#loc257 = loc(fused[#loc94, #loc95])
#loc258 = loc(fused[#loc96, #loc97])
#loc259 = loc(fused[#loc98, #loc95])
#loc260 = loc(fused[#loc102, #loc103])
#loc261 = loc(fused[#loc105, #loc104])
#loc262 = loc(fused[#loc106, #loc107])
#loc263 = loc(fused[#loc109, #loc103])
#loc264 = loc(fused[#loc111, #loc110])
#loc265 = loc(fused[#loc115, #loc114])
#loc266 = loc(fused[#loc116, #loc117])
#loc267 = loc(fused[#loc118, #loc119])
#loc268 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc269 = loc(fused[#loc124, #loc123])
#loc270 = loc(fused[#loc127, #loc128])
#loc271 = loc(fused[#loc130, #loc129])
#loc272 = loc(fused[#loc131, #loc132])
#loc273 = loc(fused[#loc134, #loc128])
#loc274 = loc(fused[#loc140, #loc139])
#loc275 = loc(fused[#loc145, #loc146])
#loc276 = loc(fused[#loc148, #loc149])
#loc277 = loc(fused[#loc150, #loc151])
#loc278 = loc(fused[#loc152, #loc153])
#loc279 = loc(fused[#loc154, #loc155])
#loc280 = loc(fused[#loc156, #loc157])
#loc281 = loc(fused[#loc160, #loc161])
#loc282 = loc(fused[#loc159, #loc161])
#loc283 = loc(fused[#loc158, #loc153])
#loc284 = loc(fused[#loc162, #loc163])
#loc285 = loc(fused[#loc164, #loc165])
#loc286 = loc(fused[#loc166, #loc163])
#loc287 = loc(fused[#loc170, #loc171])
#loc288 = loc(fused[#loc173, #loc172])
#loc289 = loc(fused[#loc174, #loc175])
#loc290 = loc(fused[#loc177, #loc171])
#loc291 = loc(fused[#loc179, #loc178])
#loc292 = loc(fused[#loc183, #loc182])
#loc293 = loc(fused[#loc184, #loc185])
#loc294 = loc(fused[#loc186, #loc187])
#loc295 = loc(fused[#loc189, #loc191])
#loc296 = loc(fused[#loc192, #loc193, #loc194, #loc185])
#loc297 = loc(fused[#loc196, #loc195])
#loc298 = loc(fused[#loc199, #loc200])
#loc299 = loc(fused[#loc202, #loc201])
#loc300 = loc(fused[#loc203, #loc204])
#loc301 = loc(fused[#loc206, #loc200])
#loc302 = loc(fused[#loc212, #loc211])
