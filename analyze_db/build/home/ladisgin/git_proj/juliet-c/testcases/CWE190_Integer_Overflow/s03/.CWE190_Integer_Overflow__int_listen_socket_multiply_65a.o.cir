!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":98:44)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":198:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE190_Integer_Overflow__int_listen_socket_multiply_65b_badSink(!s32i) loc(#loc287)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc288)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc289)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc290)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc291)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc292)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc293)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc294)
  cir.func private @close(!s32i) -> !s32i loc(#loc295)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_multiply_65_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc297)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc298)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc299)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc300)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc301)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc302)
    %6 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc303)
    %7 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_multiply_65b_badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
    cir.store %7, %6 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc303)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc35)
    cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.br ^bb1 loc(#loc305)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc26)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc28)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb2 loc(#loc306)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc306)
  ^bb3:  // pred: ^bb32
    %13 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %14 ^bb4, ^bb33 loc(#loc41)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %15 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc44)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.br ^bb5 loc(#loc308)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc51)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc309)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc310)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc53)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // pred: ^bb7
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc311)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc312)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc313)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc61)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc314)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc64)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc315)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc68)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc68)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc69)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc316)
    cir.br ^bb9 loc(#loc317)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc318)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc319)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc319)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc80)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc81)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc320)
    cir.brcond %44 ^bb10, ^bb11 loc(#loc321)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc83)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc74)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc322)
  ^bb13:  // pred: ^bb12
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc87)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc88)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc89)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc323)
    cir.brcond %50 ^bb14, ^bb15 loc(#loc324)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc91)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc85)
  ^bb16:  // pred: ^bb15
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc93)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc94)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc95)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.br ^bb17 loc(#loc326)
  ^bb17:  // pred: ^bb16
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc101)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc327)
    cir.brcond %58 ^bb18, ^bb19 loc(#loc328)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc103)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc99)
  ^bb20:  // pred: ^bb19
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc106)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc106)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc106)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc106)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc106)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc106)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc106)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc107)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc329)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc109)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc330)
    cir.br ^bb21 loc(#loc331)
  ^bb21:  // pred: ^bb20
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc115)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %78 ^bb22, ^bb23 loc(#loc116)
  ^bb22:  // pred: ^bb21
    %79 = cir.const #true loc(#loc116)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc116)
  ^bb23:  // pred: ^bb21
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %82 ^bb24, ^bb25 loc(#loc116)
  ^bb24:  // pred: ^bb23
    %83 = cir.const #true loc(#loc116)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc116)
  ^bb25:  // pred: ^bb23
    %84 = cir.const #false loc(#loc116)
    cir.br ^bb26(%84 : !cir.bool) loc(#loc116)
  ^bb26(%85: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":98:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc116)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%85 : !cir.bool) loc(#loc116)
  ^bb28(%86: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":98:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc116)
  ^bb29:  // pred: ^bb28
    cir.brcond %86 ^bb30, ^bb31 loc(#loc334)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc120)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc113)
  ^bb32:  // pred: ^bb31
    %87 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc121)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc335)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc125)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb3 loc(#loc40)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc40)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc337)
  ^bb35:  // pred: ^bb34
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %96 = cir.unary(minus, %95) : !s32i, !s32i loc(#loc131)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc338)
    cir.brcond %97 ^bb36, ^bb37 loc(#loc339)
  ^bb36:  // pred: ^bb35
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc134)
    cir.br ^bb37 loc(#loc129)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc129)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc340)
  ^bb39:  // pred: ^bb38
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc138)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc341)
    cir.brcond %103 ^bb40, ^bb41 loc(#loc342)
  ^bb40:  // pred: ^bb39
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc141)
    cir.br ^bb41 loc(#loc136)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc136)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc38)
  ^bb43:  // pred: ^bb42
    %106 = cir.load %6 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.call %106(%107) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc142)
    cir.return loc(#loc20)
  } loc(#loc296)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_multiply_65_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc344)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc146)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc345)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc148)
    cir.return loc(#loc145)
  } loc(#loc343)
  cir.func private @CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodG2BSink(!s32i) loc(#loc346)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc348)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc349)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc349)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc158)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc160)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc162)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc162)
    cir.return loc(#loc153)
  } loc(#loc347)
  cir.func private @CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodB2GSink(!s32i) loc(#loc352)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc354)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc355)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc356)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc357)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc358)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc359)
    %6 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc360)
    %7 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_multiply_65b_goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc181)
    cir.store %7, %6 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc360)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc182)
    cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb1 loc(#loc362)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc173)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc175)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.br ^bb2 loc(#loc363)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc363)
  ^bb3:  // pred: ^bb32
    %13 = cir.const #cir.int<0> : !s32i loc(#loc188)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc188)
    cir.brcond %14 ^bb4, ^bb33 loc(#loc188)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %15 = cir.const #cir.int<2> : !s32i loc(#loc189)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc191)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc192)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.br ^bb5 loc(#loc365)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc198)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc366)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc367)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc200)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc196)
  ^bb8:  // pred: ^bb7
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc368)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc203)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc369)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc370)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc208)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc208)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc371)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc210)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc372)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc212)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc212)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc213)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc373)
    cir.br ^bb9 loc(#loc374)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc375)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc376)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc376)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc223)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc224)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc224)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc377)
    cir.brcond %44 ^bb10, ^bb11 loc(#loc378)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc226)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc217)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc379)
  ^bb13:  // pred: ^bb12
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc230)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc231)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc232)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc380)
    cir.brcond %50 ^bb14, ^bb15 loc(#loc381)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc234)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc228)
  ^bb16:  // pred: ^bb15
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc236)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc237)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc238)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.br ^bb17 loc(#loc383)
  ^bb17:  // pred: ^bb16
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc244)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc384)
    cir.brcond %58 ^bb18, ^bb19 loc(#loc385)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc246)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc242)
  ^bb20:  // pred: ^bb19
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc248)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc248)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc249)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc249)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc249)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc249)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc249)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc249)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc249)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc250)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc386)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc251)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc252)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc252)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    cir.br ^bb21 loc(#loc388)
  ^bb21:  // pred: ^bb20
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc258)
    %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc258)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %78 ^bb22, ^bb23 loc(#loc259)
  ^bb22:  // pred: ^bb21
    %79 = cir.const #true loc(#loc259)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc259)
  ^bb23:  // pred: ^bb21
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc261)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc390)
    cir.brcond %82 ^bb24, ^bb25 loc(#loc259)
  ^bb24:  // pred: ^bb23
    %83 = cir.const #true loc(#loc259)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc259)
  ^bb25:  // pred: ^bb23
    %84 = cir.const #false loc(#loc259)
    cir.br ^bb26(%84 : !cir.bool) loc(#loc259)
  ^bb26(%85: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":198:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc259)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%85 : !cir.bool) loc(#loc259)
  ^bb28(%86: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":198:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc259)
  ^bb29:  // pred: ^bb28
    cir.brcond %86 ^bb30, ^bb31 loc(#loc391)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc263)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc256)
  ^bb32:  // pred: ^bb31
    %87 = cir.const #cir.int<0> : !s32i loc(#loc264)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc264)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc266)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc266)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc392)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc267)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc268)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb3 loc(#loc187)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc187)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc394)
  ^bb35:  // pred: ^bb34
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc274)
    %96 = cir.unary(minus, %95) : !s32i, !s32i loc(#loc274)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc395)
    cir.brcond %97 ^bb36, ^bb37 loc(#loc396)
  ^bb36:  // pred: ^bb35
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc277)
    cir.br ^bb37 loc(#loc272)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc272)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc397)
  ^bb39:  // pred: ^bb38
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc281)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc281)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc398)
    cir.brcond %103 ^bb40, ^bb41 loc(#loc399)
  ^bb40:  // pred: ^bb39
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc284)
    cir.br ^bb41 loc(#loc279)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc279)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc185)
  ^bb43:  // pred: ^bb42
    %106 = cir.load %6 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc285)
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    cir.call %106(%107) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc285)
    cir.return loc(#loc167)
  } loc(#loc353)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":45:1)
#loc2 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":45:78)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":47:1)
#loc20 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":125:1)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":59:9)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":59:13)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":60:9)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":60:28)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":61:9)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":61:31)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":62:9)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":62:31)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":63:9)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":63:41)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":49:5)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":49:9)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":51:5)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":51:29)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":53:12)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":53:5)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":54:5)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":122:5)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":64:9)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":107:17)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":107:16)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":74:35)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":74:44)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":74:57)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":74:28)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":74:13)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":74:68)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":75:13)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":78:13)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":75:17)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":75:33)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":76:13)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":77:17)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":79:20)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":79:21)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":79:30)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":79:33)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":79:47)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":79:13)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":79:48)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":80:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":80:13)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":81:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":81:13)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":82:38)
#loc69 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":82:32)
#loc70 = loc("/usr/include/netinet/in.h":250:15)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":82:13)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":82:46)
#loc73 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":83:13)
#loc74 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":86:13)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":83:22)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":83:54)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":83:55)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":83:64)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":83:78)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":83:17)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":83:84)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":84:13)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":85:17)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":87:13)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":90:13)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":87:24)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":87:38)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":87:17)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":87:57)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":88:13)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":89:17)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":91:35)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":91:49)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":91:55)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":91:28)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":91:13)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":91:59)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":92:13)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":95:13)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":92:17)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":92:33)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":93:13)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":94:17)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":97:31)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":97:45)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":97:58)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":97:76)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":97:79)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":97:26)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":97:13)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":97:80)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":98:13)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":101:13)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":98:17)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":98:31)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":98:47)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":98:61)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":99:13)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":100:17)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":103:39)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":103:25)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":103:13)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":105:25)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":105:20)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":105:13)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":105:36)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":108:9)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":111:9)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":108:13)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":108:29)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":109:9)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":110:26)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":110:13)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":112:9)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":115:9)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":112:13)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":112:29)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":113:9)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":114:26)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":114:13)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":124:5)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":124:13)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":226:1)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":230:1)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":228:5)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":228:13)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":229:5)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":229:13)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":132:1)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":132:82)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":134:1)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":143:1)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":136:5)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":136:9)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":137:5)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":137:29)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":139:12)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":139:5)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":141:12)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":141:5)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":142:5)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":142:13)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":146:1)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":146:82)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":148:1)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":224:1)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":159:9)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":159:13)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":160:9)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":160:28)
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":161:9)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":161:31)
#loc174 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":162:9)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":162:31)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":163:9)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":163:41)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":150:5)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":150:9)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":151:5)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":151:29)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":153:12)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":153:5)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":154:5)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":222:5)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":164:9)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":207:17)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":207:16)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":174:35)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":174:44)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":174:57)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":174:28)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":174:13)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":174:68)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":175:13)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":178:13)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":175:17)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":175:33)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":176:13)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":177:17)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":179:20)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":179:21)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":179:30)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":179:33)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":179:47)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":179:13)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":179:48)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":180:34)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":180:13)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":181:39)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":181:13)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":182:38)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":182:32)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":182:13)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":182:46)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":183:13)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":186:13)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":183:22)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":183:54)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":183:55)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":183:64)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":183:78)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":183:17)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":183:84)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":184:13)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":185:17)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":187:13)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":190:13)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":187:24)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":187:38)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":187:17)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":187:57)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":188:13)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":189:17)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":191:35)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":191:49)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":191:55)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":191:28)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":191:13)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":191:59)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":192:13)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":195:13)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":192:17)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":192:33)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":193:13)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":194:17)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":197:31)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":197:45)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":197:58)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":197:76)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":197:79)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":197:26)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":197:13)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":197:80)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":198:13)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":201:13)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":198:17)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":198:31)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":198:47)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":198:61)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":199:13)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":200:17)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":203:39)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":203:25)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":203:13)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":205:25)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":205:20)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":205:13)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":205:36)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":208:9)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":211:9)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":208:13)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":208:29)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":209:9)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":210:26)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":210:13)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":212:9)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":215:9)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":212:13)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":212:29)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":213:9)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":214:26)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":214:13)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":223:5)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_65a.c":223:13)
#loc287 = loc(fused[#loc1, #loc2])
#loc288 = loc(fused[#loc3, #loc4])
#loc289 = loc(fused[#loc5, #loc6])
#loc290 = loc(fused[#loc7, #loc8])
#loc291 = loc(fused[#loc9, #loc10])
#loc292 = loc(fused[#loc11, #loc12])
#loc293 = loc(fused[#loc13, #loc14])
#loc294 = loc(fused[#loc15, #loc16])
#loc295 = loc(fused[#loc17, #loc18])
#loc296 = loc(fused[#loc19, #loc20])
#loc297 = loc(fused[#loc21, #loc22])
#loc298 = loc(fused[#loc23, #loc24])
#loc299 = loc(fused[#loc25, #loc26])
#loc300 = loc(fused[#loc27, #loc28])
#loc301 = loc(fused[#loc29, #loc30])
#loc302 = loc(fused[#loc31, #loc32])
#loc303 = loc(fused[#loc33, #loc34])
#loc304 = loc(fused[#loc36, #loc35])
#loc305 = loc(fused[#loc37, #loc38])
#loc306 = loc(fused[#loc39, #loc40])
#loc307 = loc(fused[#loc46, #loc47])
#loc308 = loc(fused[#loc48, #loc49])
#loc309 = loc(fused[#loc50, #loc51])
#loc310 = loc(fused[#loc52, #loc49])
#loc311 = loc(fused[#loc54, #loc55])
#loc312 = loc(fused[#loc57, #loc58])
#loc313 = loc(fused[#loc59, #loc60])
#loc314 = loc(fused[#loc63, #loc61])
#loc315 = loc(fused[#loc67, #loc64])
#loc316 = loc(fused[#loc71, #loc72])
#loc317 = loc(fused[#loc73, #loc74])
#loc318 = loc(fused[#loc76, #loc77])
#loc319 = loc(fused[#loc78, #loc79])
#loc320 = loc(fused[#loc80, #loc81])
#loc321 = loc(fused[#loc82, #loc74])
#loc322 = loc(fused[#loc84, #loc85])
#loc323 = loc(fused[#loc88, #loc89])
#loc324 = loc(fused[#loc90, #loc85])
#loc325 = loc(fused[#loc96, #loc97])
#loc326 = loc(fused[#loc98, #loc99])
#loc327 = loc(fused[#loc100, #loc101])
#loc328 = loc(fused[#loc102, #loc99])
#loc329 = loc(fused[#loc106, #loc107])
#loc330 = loc(fused[#loc110, #loc111])
#loc331 = loc(fused[#loc112, #loc113])
#loc332 = loc(fused[#loc114, #loc115])
#loc333 = loc(fused[#loc117, #loc118])
#loc334 = loc(fused[#loc119, #loc113])
#loc335 = loc(fused[#loc123, #loc121])
#loc336 = loc(fused[#loc126, #loc127])
#loc337 = loc(fused[#loc128, #loc129])
#loc338 = loc(fused[#loc130, #loc131])
#loc339 = loc(fused[#loc132, #loc129])
#loc340 = loc(fused[#loc135, #loc136])
#loc341 = loc(fused[#loc137, #loc138])
#loc342 = loc(fused[#loc139, #loc136])
#loc343 = loc(fused[#loc144, #loc145])
#loc344 = loc(fused[#loc146, #loc147])
#loc345 = loc(fused[#loc148, #loc149])
#loc346 = loc(fused[#loc150, #loc151])
#loc347 = loc(fused[#loc152, #loc153])
#loc348 = loc(fused[#loc154, #loc155])
#loc349 = loc(fused[#loc156, #loc157])
#loc350 = loc(fused[#loc159, #loc158])
#loc351 = loc(fused[#loc161, #loc160])
#loc352 = loc(fused[#loc164, #loc165])
#loc353 = loc(fused[#loc166, #loc167])
#loc354 = loc(fused[#loc168, #loc169])
#loc355 = loc(fused[#loc170, #loc171])
#loc356 = loc(fused[#loc172, #loc173])
#loc357 = loc(fused[#loc174, #loc175])
#loc358 = loc(fused[#loc176, #loc177])
#loc359 = loc(fused[#loc178, #loc179])
#loc360 = loc(fused[#loc180, #loc181])
#loc361 = loc(fused[#loc183, #loc182])
#loc362 = loc(fused[#loc184, #loc185])
#loc363 = loc(fused[#loc186, #loc187])
#loc364 = loc(fused[#loc193, #loc194])
#loc365 = loc(fused[#loc195, #loc196])
#loc366 = loc(fused[#loc197, #loc198])
#loc367 = loc(fused[#loc199, #loc196])
#loc368 = loc(fused[#loc201, #loc202])
#loc369 = loc(fused[#loc204, #loc205])
#loc370 = loc(fused[#loc206, #loc207])
#loc371 = loc(fused[#loc209, #loc208])
#loc372 = loc(fused[#loc211, #loc210])
#loc373 = loc(fused[#loc214, #loc215])
#loc374 = loc(fused[#loc216, #loc217])
#loc375 = loc(fused[#loc219, #loc220])
#loc376 = loc(fused[#loc221, #loc222])
#loc377 = loc(fused[#loc223, #loc224])
#loc378 = loc(fused[#loc225, #loc217])
#loc379 = loc(fused[#loc227, #loc228])
#loc380 = loc(fused[#loc231, #loc232])
#loc381 = loc(fused[#loc233, #loc228])
#loc382 = loc(fused[#loc239, #loc240])
#loc383 = loc(fused[#loc241, #loc242])
#loc384 = loc(fused[#loc243, #loc244])
#loc385 = loc(fused[#loc245, #loc242])
#loc386 = loc(fused[#loc249, #loc250])
#loc387 = loc(fused[#loc253, #loc254])
#loc388 = loc(fused[#loc255, #loc256])
#loc389 = loc(fused[#loc257, #loc258])
#loc390 = loc(fused[#loc260, #loc261])
#loc391 = loc(fused[#loc262, #loc256])
#loc392 = loc(fused[#loc266, #loc264])
#loc393 = loc(fused[#loc269, #loc270])
#loc394 = loc(fused[#loc271, #loc272])
#loc395 = loc(fused[#loc273, #loc274])
#loc396 = loc(fused[#loc275, #loc272])
#loc397 = loc(fused[#loc278, #loc279])
#loc398 = loc(fused[#loc280, #loc281])
#loc399 = loc(fused[#loc282, #loc279])
