!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":111:10)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":111:14)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":111:20)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":111:32)
#loc265 = loc(fused[#loc105, #loc106])
#loc266 = loc(fused[#loc107, #loc108])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc224)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc225)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc226)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc227)
  cir.func private @printIntLine(!s32i) loc(#loc228)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc231)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc231)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc234)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc235)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc236)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc237)
          cir.store %9, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc234)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc31)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc32)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc239)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc35)
              %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc36)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
            } loc(#loc240)
          } loc(#loc238)
          %10 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc25)
          %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
          cir.store %11, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc235)
          %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc38)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc39)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc39)
          cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc38)
          %15 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
          %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc41)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc42)
        } loc(#loc233)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc243)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc49)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc244)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc245)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc243)
          cir.scope {
            %21 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc54)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc55)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc247)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc57)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc59)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc57)
            } loc(#loc248)
          } loc(#loc246)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc60)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc249)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc60)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc250)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc251)
          cir.scope {
            %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc68)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc253)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc72)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
            } loc(#loc254)
          } loc(#loc252)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc73)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc255)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc77)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc256)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc258)
            %22 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc82)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
            cir.store %23, %21 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc258)
            %24 = cir.load deref %21 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
            %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc86)
          } loc(#loc257)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc87)
          %19 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc88)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc88)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
        } loc(#loc241)
      } loc(#loc232)
    } loc(#loc230)
    cir.return loc(#loc12)
  } loc(#loc229)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc259)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc261)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc262)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc102)
  cir.func @main(%arg0: !s32i loc(fused[#loc105, #loc106]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc107, #loc108])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc266)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc104)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc109)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc110)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc111)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc111)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc112)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc99)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_malloc_use_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call @CWE758_Undefined_Behavior__int_pointer_malloc_use_12_good() : () -> () loc(#loc114)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc101)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_malloc_use_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call @CWE758_Undefined_Behavior__int_pointer_malloc_use_12_bad() : () -> () loc(#loc118)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc102)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    cir.return %17 : !s32i loc(#loc269)
  } loc(#loc264)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc272)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc272)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc127)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc127)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc275)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc276)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc138)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc277)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc278)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc276)
          cir.scope {
            %21 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc144)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc280)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc146)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc147)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc148)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc146)
            } loc(#loc281)
          } loc(#loc279)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc149)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc282)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc149)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc283)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc284)
          cir.scope {
            %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc157)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc286)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc159)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc160)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc161)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc159)
            } loc(#loc287)
          } loc(#loc285)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc162)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc288)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc166)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc289)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc291)
            %22 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc171)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
            cir.store %23, %21 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc291)
            %24 = cir.load deref %21 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc173)
            %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc174)
            cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc175)
          } loc(#loc290)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc176)
          %19 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc177)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc177)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc176)
        } loc(#loc274)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc293)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc294)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc184)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc295)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc296)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc294)
          cir.scope {
            %21 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc189)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc190)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc298)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc192)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc193)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc194)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc192)
            } loc(#loc299)
          } loc(#loc297)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc195)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc300)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc195)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc301)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc302)
          cir.scope {
            %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc202)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc203)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc203)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc304)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc205)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc206)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc207)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc205)
            } loc(#loc305)
          } loc(#loc303)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc208)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc209)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc306)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc211)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc212)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc307)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc309)
            %22 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc217)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
            cir.store %23, %21 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc309)
            %24 = cir.load deref %21 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc219)
            %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc220)
            cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc221)
          } loc(#loc308)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc222)
          %19 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc223)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc223)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc222)
        } loc(#loc292)
      } loc(#loc273)
    } loc(#loc271)
    cir.return loc(#loc124)
  } loc(#loc270)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":20:1)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":50:1)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":22:5)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":49:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":22:8)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":22:33)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":23:5)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":31:5)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":33:5)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":24:9)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":30:9)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":25:13)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":25:60)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":27:13)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":27:27)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":25:40)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":25:47)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":25:59)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":26:13)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":26:44)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":26:17)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":26:28)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":26:34)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":26:35)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":26:41)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":26:40)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":27:26)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":28:13)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":28:18)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":29:27)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":29:26)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":29:13)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":34:9)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":48:9)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":35:13)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":35:19)
#loc47 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":36:13)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":36:60)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":36:40)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":36:47)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":36:59)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":37:13)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":37:44)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":37:17)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":37:28)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":37:34)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":37:35)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":37:41)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":37:40)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":39:27)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":39:34)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":39:44)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":39:45)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":39:13)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":40:13)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":40:41)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":40:17)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":40:25)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":40:31)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":40:32)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":40:38)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":40:37)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":41:21)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":41:14)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":41:13)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":42:24)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":42:14)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":42:13)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":43:13)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":46:13)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":44:17)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":44:31)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":44:30)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":45:31)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":45:30)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":45:17)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":47:13)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":47:18)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":97:1)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":100:1)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":99:5)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":99:11)
#loc93 = loc("/usr/include/stdlib.h":575:1)
#loc94 = loc("/usr/include/stdlib.h":575:41)
#loc95 = loc("/usr/include/time.h":76:1)
#loc96 = loc("/usr/include/time.h":76:38)
#loc97 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc98 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":116:15)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":118:15)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":121:15)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":123:15)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":111:1)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":126:1)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":112:1)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":114:27)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":114:22)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":114:5)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":116:5)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":117:5)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":117:63)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":118:5)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":121:5)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":122:5)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":122:62)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":123:5)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":125:12)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":125:5)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":57:1)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":95:1)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":59:5)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":94:5)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":59:8)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":59:33)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":60:5)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":76:5)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":78:5)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":61:9)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":75:9)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":62:13)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":62:19)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":63:13)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":63:60)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":63:40)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":63:47)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":63:59)
#loc141 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":64:13)
#loc142 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":64:44)
#loc143 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":64:17)
#loc144 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":64:28)
#loc145 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":64:34)
#loc146 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":64:35)
#loc147 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":64:41)
#loc148 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":64:40)
#loc149 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":66:27)
#loc150 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":66:34)
#loc151 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":66:44)
#loc152 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":66:45)
#loc153 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":66:13)
#loc154 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":67:13)
#loc155 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":67:41)
#loc156 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":67:17)
#loc157 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":67:25)
#loc158 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":67:31)
#loc159 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":67:32)
#loc160 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":67:38)
#loc161 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":67:37)
#loc162 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":68:21)
#loc163 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":68:14)
#loc164 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":68:13)
#loc165 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":69:24)
#loc166 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":69:14)
#loc167 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":69:13)
#loc168 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":70:13)
#loc169 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":73:13)
#loc170 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":71:17)
#loc171 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":71:31)
#loc172 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":71:30)
#loc173 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":72:31)
#loc174 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":72:30)
#loc175 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":72:17)
#loc176 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":74:13)
#loc177 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":74:18)
#loc178 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":79:9)
#loc179 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":93:9)
#loc180 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":80:13)
#loc181 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":80:19)
#loc182 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":81:13)
#loc183 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":81:60)
#loc184 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":81:40)
#loc185 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":81:47)
#loc186 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":81:59)
#loc187 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":82:13)
#loc188 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":82:44)
#loc189 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":82:17)
#loc190 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":82:28)
#loc191 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":82:34)
#loc192 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":82:35)
#loc193 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":82:41)
#loc194 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":82:40)
#loc195 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":84:27)
#loc196 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":84:34)
#loc197 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":84:44)
#loc198 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":84:45)
#loc199 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":84:13)
#loc200 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":85:13)
#loc201 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":85:41)
#loc202 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":85:17)
#loc203 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":85:25)
#loc204 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":85:31)
#loc205 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":85:32)
#loc206 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":85:38)
#loc207 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":85:37)
#loc208 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":86:21)
#loc209 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":86:14)
#loc210 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":86:13)
#loc211 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":87:24)
#loc212 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":87:14)
#loc213 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":87:13)
#loc214 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":88:13)
#loc215 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":91:13)
#loc216 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":89:17)
#loc217 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":89:31)
#loc218 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":89:30)
#loc219 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":90:31)
#loc220 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":90:30)
#loc221 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":90:17)
#loc222 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":92:13)
#loc223 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_12.c":92:18)
#loc224 = loc(fused[#loc1, #loc2])
#loc225 = loc(fused[#loc3, #loc4])
#loc226 = loc(fused[#loc5, #loc6])
#loc227 = loc(fused[#loc7, #loc8])
#loc228 = loc(fused[#loc9, #loc10])
#loc229 = loc(fused[#loc11, #loc12])
#loc230 = loc(fused[#loc13, #loc14])
#loc231 = loc(fused[#loc15, #loc16])
#loc232 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc233 = loc(fused[#loc20, #loc21])
#loc234 = loc(fused[#loc22, #loc23])
#loc235 = loc(fused[#loc24, #loc25])
#loc236 = loc(fused[#loc27, #loc28])
#loc237 = loc(fused[#loc26, #loc23])
#loc238 = loc(fused[#loc29, #loc30])
#loc239 = loc(fused[#loc31, #loc32])
#loc240 = loc(fused[#loc33, #loc30])
#loc241 = loc(fused[#loc43, #loc44])
#loc242 = loc(fused[#loc45, #loc46])
#loc243 = loc(fused[#loc47, #loc48])
#loc244 = loc(fused[#loc50, #loc51])
#loc245 = loc(fused[#loc49, #loc48])
#loc246 = loc(fused[#loc52, #loc53])
#loc247 = loc(fused[#loc54, #loc55])
#loc248 = loc(fused[#loc56, #loc53])
#loc249 = loc(fused[#loc61, #loc62])
#loc250 = loc(fused[#loc60, #loc63])
#loc251 = loc(fused[#loc64, #loc63])
#loc252 = loc(fused[#loc65, #loc66])
#loc253 = loc(fused[#loc67, #loc68])
#loc254 = loc(fused[#loc69, #loc66])
#loc255 = loc(fused[#loc75, #loc73])
#loc256 = loc(fused[#loc78, #loc76])
#loc257 = loc(fused[#loc79, #loc80])
#loc258 = loc(fused[#loc81, #loc82])
#loc259 = loc(fused[#loc89, #loc90])
#loc260 = loc(fused[#loc91, #loc92])
#loc261 = loc(fused[#loc93, #loc94])
#loc262 = loc(fused[#loc95, #loc96])
#loc263 = loc(fused[#loc97, #loc98])
#loc264 = loc(fused[#loc103, #loc104])
#loc267 = loc(fused[#loc114, #loc115])
#loc268 = loc(fused[#loc118, #loc119])
#loc269 = loc(fused[#loc122, #loc121])
#loc270 = loc(fused[#loc123, #loc124])
#loc271 = loc(fused[#loc125, #loc126])
#loc272 = loc(fused[#loc127, #loc128])
#loc273 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc274 = loc(fused[#loc132, #loc133])
#loc275 = loc(fused[#loc134, #loc135])
#loc276 = loc(fused[#loc136, #loc137])
#loc277 = loc(fused[#loc139, #loc140])
#loc278 = loc(fused[#loc138, #loc137])
#loc279 = loc(fused[#loc141, #loc142])
#loc280 = loc(fused[#loc143, #loc144])
#loc281 = loc(fused[#loc145, #loc142])
#loc282 = loc(fused[#loc150, #loc151])
#loc283 = loc(fused[#loc149, #loc152])
#loc284 = loc(fused[#loc153, #loc152])
#loc285 = loc(fused[#loc154, #loc155])
#loc286 = loc(fused[#loc156, #loc157])
#loc287 = loc(fused[#loc158, #loc155])
#loc288 = loc(fused[#loc164, #loc162])
#loc289 = loc(fused[#loc167, #loc165])
#loc290 = loc(fused[#loc168, #loc169])
#loc291 = loc(fused[#loc170, #loc171])
#loc292 = loc(fused[#loc178, #loc179])
#loc293 = loc(fused[#loc180, #loc181])
#loc294 = loc(fused[#loc182, #loc183])
#loc295 = loc(fused[#loc185, #loc186])
#loc296 = loc(fused[#loc184, #loc183])
#loc297 = loc(fused[#loc187, #loc188])
#loc298 = loc(fused[#loc189, #loc190])
#loc299 = loc(fused[#loc191, #loc188])
#loc300 = loc(fused[#loc196, #loc197])
#loc301 = loc(fused[#loc195, #loc198])
#loc302 = loc(fused[#loc199, #loc198])
#loc303 = loc(fused[#loc200, #loc201])
#loc304 = loc(fused[#loc202, #loc203])
#loc305 = loc(fused[#loc204, #loc201])
#loc306 = loc(fused[#loc210, #loc208])
#loc307 = loc(fused[#loc213, #loc211])
#loc308 = loc(fused[#loc214, #loc215])
#loc309 = loc(fused[#loc216, #loc217])
