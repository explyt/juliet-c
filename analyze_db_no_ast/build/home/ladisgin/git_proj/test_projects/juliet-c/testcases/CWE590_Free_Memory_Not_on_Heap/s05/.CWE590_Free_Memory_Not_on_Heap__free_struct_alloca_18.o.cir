!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc113)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc114)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc118)
    cir.goto "source" loc(#loc119)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc117)
    cir.scope {
      %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc121)
      cir.scope {
        %18 = cir.const #cir.int<0> : !s32i loc(#loc22)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc22)
        cir.store %19, %17 : !u64i, !cir.ptr<!u64i> loc(#loc123)
        cir.for : cond {
          %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc24)
          %21 = cir.const #cir.int<100> : !s32i loc(#loc25)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc25)
          %23 = cir.cmp(lt, %20, %22) : !u64i, !s32i loc(#loc124)
          %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc26)
          cir.condition(%24) loc(#loc26)
        } body {
          cir.scope {
            %20 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
            %22 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
            %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc126)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %26 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
            %27 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
            %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc127)
          } loc(#loc125)
          cir.yield loc(#loc21)
        } step {
          %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc39)
          cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc128)
          cir.yield loc(#loc122)
        } loc(#loc122)
      } loc(#loc122)
    } loc(#loc120)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc45)
    %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc46)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc47)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    cir.return loc(#loc6)
  } loc(#loc115)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc130)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc134)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
    cir.goto "source" loc(#loc139)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc69)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc71)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc140)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc141)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc137)
    cir.scope {
      %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc144)
      %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc78)
      cir.if %21 {
        %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc80)
        %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc81)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc82)
        cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
      } loc(#loc145)
    } loc(#loc143)
    cir.scope {
      %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc147)
      cir.scope {
        %18 = cir.const #cir.int<0> : !s32i loc(#loc89)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc89)
        cir.store %19, %17 : !u64i, !cir.ptr<!u64i> loc(#loc149)
        cir.for : cond {
          %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc91)
          %21 = cir.const #cir.int<100> : !s32i loc(#loc92)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc92)
          %23 = cir.cmp(lt, %20, %22) : !u64i, !s32i loc(#loc150)
          %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc93)
          cir.condition(%24) loc(#loc93)
        } body {
          cir.scope {
            %20 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
            %22 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc97)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
            %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc152)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %26 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
            %27 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc101)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
            %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc153)
          } loc(#loc151)
          cir.yield loc(#loc88)
        } step {
          %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc103)
          %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc104)
          cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc154)
          cir.yield loc(#loc148)
        } loc(#loc148)
      } loc(#loc148)
    } loc(#loc146)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
    cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc110)
    %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc111)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc112)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
    cir.return loc(#loc60)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":45:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":25:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":25:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":31:9)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":31:55)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":26:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":26:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":27:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":27:10)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":28:1)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":32:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":39:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":33:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":33:20)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":38:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:22)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:18)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:25)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:29)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:27)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":35:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":36:40)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":36:17)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":36:28)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":36:29)
#loc32 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":37:40)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":37:17)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":37:28)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":37:29)
#loc37 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:35)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:34)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":40:16)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":40:9)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":42:22)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":42:27)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":42:28)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":42:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":44:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":44:10)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":81:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":84:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":83:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":83:13)
#loc52 = loc("/usr/include/stdlib.h":672:1)
#loc53 = loc("/usr/include/stdlib.h":672:45)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":63:23)
#loc57 = loc("/usr/include/stdlib.h":756:1)
#loc58 = loc("/usr/include/stdlib.h":756:70)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":52:1)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":79:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":54:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":54:21)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:87)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":55:12)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":55:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":56:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":56:10)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":57:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:55)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:62)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:66)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:86)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":61:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":65:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":61:13)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":61:27)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":61:24)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":62:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":63:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":64:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":64:18)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":66:9)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":73:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":67:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":67:20)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":72:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:22)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:18)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:25)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:29)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:27)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":69:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":70:40)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":70:17)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":70:28)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":70:29)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":71:40)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":71:17)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":71:28)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":71:29)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:35)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:34)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":74:16)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":74:9)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":76:22)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":76:27)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":76:28)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":76:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":78:5)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":78:10)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc12, #loc11])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc16, #loc17])
#loc121 = loc(fused[#loc18, #loc19])
#loc122 = loc(fused[#loc20, #loc21])
#loc123 = loc(fused[#loc23, #loc22])
#loc124 = loc(fused[#loc24, #loc25])
#loc125 = loc(fused[#loc27, #loc21])
#loc126 = loc(fused[#loc29, #loc28])
#loc127 = loc(fused[#loc34, #loc33])
#loc128 = loc(fused[#loc39, #loc38])
#loc129 = loc(fused[#loc41, #loc40])
#loc130 = loc(fused[#loc48, #loc49])
#loc131 = loc(fused[#loc50, #loc51])
#loc132 = loc(fused[#loc52, #loc53])
#loc133 = loc(fused[#loc54, #loc55])
#loc134 = loc(fused[#loc57, #loc58])
#loc135 = loc(fused[#loc59, #loc60])
#loc136 = loc(fused[#loc61, #loc62])
#loc137 = loc(fused[#loc63, #loc64])
#loc138 = loc(fused[#loc66, #loc65])
#loc139 = loc(fused[#loc67, #loc68])
#loc140 = loc(fused[#loc72, #loc73])
#loc141 = loc(fused[#loc71, #loc73])
#loc142 = loc(fused[#loc70, #loc64])
#loc143 = loc(fused[#loc74, #loc75])
#loc144 = loc(fused[#loc76, #loc77])
#loc145 = loc(fused[#loc79, #loc75])
#loc146 = loc(fused[#loc83, #loc84])
#loc147 = loc(fused[#loc85, #loc86])
#loc148 = loc(fused[#loc87, #loc88])
#loc149 = loc(fused[#loc90, #loc89])
#loc150 = loc(fused[#loc91, #loc92])
#loc151 = loc(fused[#loc94, #loc88])
#loc152 = loc(fused[#loc96, #loc95])
#loc153 = loc(fused[#loc100, #loc99])
#loc154 = loc(fused[#loc104, #loc103])
#loc155 = loc(fused[#loc106, #loc105])
