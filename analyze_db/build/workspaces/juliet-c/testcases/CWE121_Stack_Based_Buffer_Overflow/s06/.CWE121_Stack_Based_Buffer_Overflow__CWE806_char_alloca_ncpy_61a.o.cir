!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61b_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc69)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc70)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc71)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc72)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc74)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc75)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc14)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc14)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %11 = cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61b_badSource(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc18)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    cir.scope {
      %12 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc79)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc79)
      cir.store %13, %12 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc79)
      %14 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc25)
      %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc26)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc28)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc28)
      %20 = cir.call @strncpy(%15, %16, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc25)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc30)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc30)
      %23 = cir.const #cir.int<50> : !s32i loc(#loc31)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc31)
      %26 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc33)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc33)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc80)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    } loc(#loc78)
    cir.return loc(#loc10)
  } loc(#loc73)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc82)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc37)
  } loc(#loc81)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61b_goodG2BSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc83)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc85)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc86)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc47)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc47)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc47)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc47)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc47)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %11 = cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61b_goodG2BSource(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc51)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    cir.scope {
      %12 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc90)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc90)
      cir.store %13, %12 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc90)
      %14 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc58)
      %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc59)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc61)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc61)
      %20 = cir.call @strncpy(%15, %16, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc58)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc63)
      %23 = cir.const #cir.int<50> : !s32i loc(#loc64)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc64)
      %26 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc66)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc91)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    } loc(#loc89)
    cir.return loc(#loc43)
  } loc(#loc84)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":24:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":24:93)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":26:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":39:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":28:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":29:33)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":30:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":30:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":31:86)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":31:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":31:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":31:90)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":32:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":38:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":33:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":33:25)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":35:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":35:17)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":35:23)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":35:29)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":35:36)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":36:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":36:14)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":36:17)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":36:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":37:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":37:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":63:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":66:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":65:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":65:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":46:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":46:97)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":48:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":61:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":50:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":50:12)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":51:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":51:33)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":52:12)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":52:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":53:90)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":53:12)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":53:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":53:94)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":54:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":60:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":55:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":55:25)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":57:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":57:17)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":57:23)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":57:29)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":57:36)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":58:22)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":58:14)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":58:17)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":58:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":59:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_61a.c":59:9)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc3, #loc4])
#loc71 = loc(fused[#loc5, #loc6])
#loc72 = loc(fused[#loc7, #loc8])
#loc73 = loc(fused[#loc9, #loc10])
#loc74 = loc(fused[#loc11, #loc12])
#loc75 = loc(fused[#loc13, #loc14])
#loc76 = loc(fused[#loc16, #loc15])
#loc77 = loc(fused[#loc19, #loc20])
#loc78 = loc(fused[#loc21, #loc22])
#loc79 = loc(fused[#loc23, #loc24])
#loc80 = loc(fused[#loc33, #loc30])
#loc81 = loc(fused[#loc36, #loc37])
#loc82 = loc(fused[#loc38, #loc39])
#loc83 = loc(fused[#loc40, #loc41])
#loc84 = loc(fused[#loc42, #loc43])
#loc85 = loc(fused[#loc44, #loc45])
#loc86 = loc(fused[#loc46, #loc47])
#loc87 = loc(fused[#loc49, #loc48])
#loc88 = loc(fused[#loc52, #loc53])
#loc89 = loc(fused[#loc54, #loc55])
#loc90 = loc(fused[#loc56, #loc57])
#loc91 = loc(fused[#loc66, #loc63])
