!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_char_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc131)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_char_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc133)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc135)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc9)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
      cir.if %3 {
        %4 = cir.const #cir.int<67> : !s32i loc(#loc12)
        %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc12)
        cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc137)
      } loc(#loc136)
    } loc(#loc134)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc139)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc16)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
      cir.if %3 {
        %4 = cir.const #cir.int<90> : !s32i loc(#loc19)
        %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc19)
        cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc141)
        %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc21)
        cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc22)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc4)
  } loc(#loc132)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_char_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc144)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc146)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc24)
  } loc(#loc142)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc34)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc35)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.return %2 : !s32i loc(#loc148)
  } loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc39)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc151)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc153)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc46)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc46)
      cir.if %3 {
        %4 = cir.const #cir.int<67> : !s32i loc(#loc49)
        %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc49)
        cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc155)
      } loc(#loc154)
    } loc(#loc152)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc157)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc53)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc53)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc58)
      } else {
        %4 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc59)
        cir.call @printHexCharLine(%4) : (!s8i) -> () loc(#loc60)
      } loc(#loc158)
    } loc(#loc156)
    cir.return loc(#loc41)
  } loc(#loc150)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.return %2 : !s32i loc(#loc160)
  } loc(#loc159)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc162)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc164)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc71)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc71)
      cir.if %3 {
        %4 = cir.const #cir.int<67> : !s32i loc(#loc74)
        %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc74)
        cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc166)
      } loc(#loc165)
    } loc(#loc163)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc168)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc78)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc78)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc81)
        cir.call @printHexCharLine(%4) : (!s8i) -> () loc(#loc82)
      } loc(#loc169)
    } loc(#loc167)
    cir.return loc(#loc66)
  } loc(#loc161)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc171)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc173)
      %2 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc89)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc89)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc95)
      } else {
        %4 = cir.const #cir.int<67> : !s32i loc(#loc96)
        %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc96)
        cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc175)
        %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc98)
        cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc99)
      } loc(#loc174)
    } loc(#loc172)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc177)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc102)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc102)
      cir.if %3 {
        %4 = cir.const #cir.int<90> : !s32i loc(#loc105)
        %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc105)
        cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc179)
        %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc107)
        cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc108)
      } loc(#loc178)
    } loc(#loc176)
    cir.return loc(#loc84)
  } loc(#loc170)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc181)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc183)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc115)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc115)
      cir.if %3 {
        %4 = cir.const #cir.int<67> : !s32i loc(#loc118)
        %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc118)
        cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc185)
        %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc120)
        cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc121)
      } loc(#loc184)
    } loc(#loc182)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc187)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc124)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc124)
      cir.if %3 {
        %4 = cir.const #cir.int<90> : !s32i loc(#loc127)
        %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc127)
        cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc189)
        %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc129)
        cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc130)
      } loc(#loc188)
    } loc(#loc186)
    cir.return loc(#loc110)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_char_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE563_Unused_Variable__unused_value_char_08.c":37:1)
#loc4 = loc("CWE563_Unused_Variable__unused_value_char_08.c":51:1)
#loc5 = loc("CWE563_Unused_Variable__unused_value_char_08.c":39:5)
#loc6 = loc("CWE563_Unused_Variable__unused_value_char_08.c":39:10)
#loc7 = loc("CWE563_Unused_Variable__unused_value_char_08.c":40:5)
#loc8 = loc("CWE563_Unused_Variable__unused_value_char_08.c":44:5)
#loc9 = loc("CWE563_Unused_Variable__unused_value_char_08.c":40:8)
#loc10 = loc("CWE563_Unused_Variable__unused_value_char_08.c":40:26)
#loc11 = loc("CWE563_Unused_Variable__unused_value_char_08.c":41:5)
#loc12 = loc("CWE563_Unused_Variable__unused_value_char_08.c":43:16)
#loc13 = loc("CWE563_Unused_Variable__unused_value_char_08.c":43:9)
#loc14 = loc("CWE563_Unused_Variable__unused_value_char_08.c":45:5)
#loc15 = loc("CWE563_Unused_Variable__unused_value_char_08.c":50:5)
#loc16 = loc("CWE563_Unused_Variable__unused_value_char_08.c":45:8)
#loc17 = loc("CWE563_Unused_Variable__unused_value_char_08.c":45:26)
#loc18 = loc("CWE563_Unused_Variable__unused_value_char_08.c":46:5)
#loc19 = loc("CWE563_Unused_Variable__unused_value_char_08.c":48:16)
#loc20 = loc("CWE563_Unused_Variable__unused_value_char_08.c":48:9)
#loc21 = loc("CWE563_Unused_Variable__unused_value_char_08.c":49:26)
#loc22 = loc("CWE563_Unused_Variable__unused_value_char_08.c":49:9)
#loc23 = loc("CWE563_Unused_Variable__unused_value_char_08.c":135:1)
#loc24 = loc("CWE563_Unused_Variable__unused_value_char_08.c":141:1)
#loc25 = loc("CWE563_Unused_Variable__unused_value_char_08.c":137:5)
#loc26 = loc("CWE563_Unused_Variable__unused_value_char_08.c":137:14)
#loc27 = loc("CWE563_Unused_Variable__unused_value_char_08.c":138:5)
#loc28 = loc("CWE563_Unused_Variable__unused_value_char_08.c":138:14)
#loc29 = loc("CWE563_Unused_Variable__unused_value_char_08.c":139:5)
#loc30 = loc("CWE563_Unused_Variable__unused_value_char_08.c":139:14)
#loc31 = loc("CWE563_Unused_Variable__unused_value_char_08.c":140:5)
#loc32 = loc("CWE563_Unused_Variable__unused_value_char_08.c":140:14)
#loc33 = loc("CWE563_Unused_Variable__unused_value_char_08.c":25:1)
#loc34 = loc("CWE563_Unused_Variable__unused_value_char_08.c":28:1)
#loc35 = loc("CWE563_Unused_Variable__unused_value_char_08.c":27:12)
#loc36 = loc("CWE563_Unused_Variable__unused_value_char_08.c":27:5)
#loc37 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE563_Unused_Variable__unused_value_char_08.c":69:19)
#loc40 = loc("CWE563_Unused_Variable__unused_value_char_08.c":58:1)
#loc41 = loc("CWE563_Unused_Variable__unused_value_char_08.c":76:1)
#loc42 = loc("CWE563_Unused_Variable__unused_value_char_08.c":60:5)
#loc43 = loc("CWE563_Unused_Variable__unused_value_char_08.c":60:10)
#loc44 = loc("CWE563_Unused_Variable__unused_value_char_08.c":61:5)
#loc45 = loc("CWE563_Unused_Variable__unused_value_char_08.c":65:5)
#loc46 = loc("CWE563_Unused_Variable__unused_value_char_08.c":61:8)
#loc47 = loc("CWE563_Unused_Variable__unused_value_char_08.c":61:26)
#loc48 = loc("CWE563_Unused_Variable__unused_value_char_08.c":62:5)
#loc49 = loc("CWE563_Unused_Variable__unused_value_char_08.c":64:16)
#loc50 = loc("CWE563_Unused_Variable__unused_value_char_08.c":64:9)
#loc51 = loc("CWE563_Unused_Variable__unused_value_char_08.c":66:5)
#loc52 = loc("CWE563_Unused_Variable__unused_value_char_08.c":75:5)
#loc53 = loc("CWE563_Unused_Variable__unused_value_char_08.c":66:8)
#loc54 = loc("CWE563_Unused_Variable__unused_value_char_08.c":66:27)
#loc55 = loc("CWE563_Unused_Variable__unused_value_char_08.c":67:5)
#loc56 = loc("CWE563_Unused_Variable__unused_value_char_08.c":70:5)
#loc57 = loc("CWE563_Unused_Variable__unused_value_char_08.c":72:5)
#loc58 = loc("CWE563_Unused_Variable__unused_value_char_08.c":69:9)
#loc59 = loc("CWE563_Unused_Variable__unused_value_char_08.c":74:26)
#loc60 = loc("CWE563_Unused_Variable__unused_value_char_08.c":74:9)
#loc61 = loc("CWE563_Unused_Variable__unused_value_char_08.c":30:1)
#loc62 = loc("CWE563_Unused_Variable__unused_value_char_08.c":33:1)
#loc63 = loc("CWE563_Unused_Variable__unused_value_char_08.c":32:12)
#loc64 = loc("CWE563_Unused_Variable__unused_value_char_08.c":32:5)
#loc65 = loc("CWE563_Unused_Variable__unused_value_char_08.c":79:1)
#loc66 = loc("CWE563_Unused_Variable__unused_value_char_08.c":92:1)
#loc67 = loc("CWE563_Unused_Variable__unused_value_char_08.c":81:5)
#loc68 = loc("CWE563_Unused_Variable__unused_value_char_08.c":81:10)
#loc69 = loc("CWE563_Unused_Variable__unused_value_char_08.c":82:5)
#loc70 = loc("CWE563_Unused_Variable__unused_value_char_08.c":86:5)
#loc71 = loc("CWE563_Unused_Variable__unused_value_char_08.c":82:8)
#loc72 = loc("CWE563_Unused_Variable__unused_value_char_08.c":82:26)
#loc73 = loc("CWE563_Unused_Variable__unused_value_char_08.c":83:5)
#loc74 = loc("CWE563_Unused_Variable__unused_value_char_08.c":85:16)
#loc75 = loc("CWE563_Unused_Variable__unused_value_char_08.c":85:9)
#loc76 = loc("CWE563_Unused_Variable__unused_value_char_08.c":87:5)
#loc77 = loc("CWE563_Unused_Variable__unused_value_char_08.c":91:5)
#loc78 = loc("CWE563_Unused_Variable__unused_value_char_08.c":87:8)
#loc79 = loc("CWE563_Unused_Variable__unused_value_char_08.c":87:26)
#loc80 = loc("CWE563_Unused_Variable__unused_value_char_08.c":88:5)
#loc81 = loc("CWE563_Unused_Variable__unused_value_char_08.c":90:26)
#loc82 = loc("CWE563_Unused_Variable__unused_value_char_08.c":90:9)
#loc83 = loc("CWE563_Unused_Variable__unused_value_char_08.c":95:1)
#loc84 = loc("CWE563_Unused_Variable__unused_value_char_08.c":115:1)
#loc85 = loc("CWE563_Unused_Variable__unused_value_char_08.c":97:5)
#loc86 = loc("CWE563_Unused_Variable__unused_value_char_08.c":97:10)
#loc87 = loc("CWE563_Unused_Variable__unused_value_char_08.c":98:5)
#loc88 = loc("CWE563_Unused_Variable__unused_value_char_08.c":108:5)
#loc89 = loc("CWE563_Unused_Variable__unused_value_char_08.c":98:8)
#loc90 = loc("CWE563_Unused_Variable__unused_value_char_08.c":98:27)
#loc91 = loc("CWE563_Unused_Variable__unused_value_char_08.c":99:5)
#loc92 = loc("CWE563_Unused_Variable__unused_value_char_08.c":102:5)
#loc93 = loc("CWE563_Unused_Variable__unused_value_char_08.c":104:5)
#loc94 = loc("CWE563_Unused_Variable__unused_value_char_08.c":101:19)
#loc95 = loc("CWE563_Unused_Variable__unused_value_char_08.c":101:9)
#loc96 = loc("CWE563_Unused_Variable__unused_value_char_08.c":106:16)
#loc97 = loc("CWE563_Unused_Variable__unused_value_char_08.c":106:9)
#loc98 = loc("CWE563_Unused_Variable__unused_value_char_08.c":107:26)
#loc99 = loc("CWE563_Unused_Variable__unused_value_char_08.c":107:9)
#loc100 = loc("CWE563_Unused_Variable__unused_value_char_08.c":109:5)
#loc101 = loc("CWE563_Unused_Variable__unused_value_char_08.c":114:5)
#loc102 = loc("CWE563_Unused_Variable__unused_value_char_08.c":109:8)
#loc103 = loc("CWE563_Unused_Variable__unused_value_char_08.c":109:26)
#loc104 = loc("CWE563_Unused_Variable__unused_value_char_08.c":110:5)
#loc105 = loc("CWE563_Unused_Variable__unused_value_char_08.c":112:16)
#loc106 = loc("CWE563_Unused_Variable__unused_value_char_08.c":112:9)
#loc107 = loc("CWE563_Unused_Variable__unused_value_char_08.c":113:26)
#loc108 = loc("CWE563_Unused_Variable__unused_value_char_08.c":113:9)
#loc109 = loc("CWE563_Unused_Variable__unused_value_char_08.c":118:1)
#loc110 = loc("CWE563_Unused_Variable__unused_value_char_08.c":133:1)
#loc111 = loc("CWE563_Unused_Variable__unused_value_char_08.c":120:5)
#loc112 = loc("CWE563_Unused_Variable__unused_value_char_08.c":120:10)
#loc113 = loc("CWE563_Unused_Variable__unused_value_char_08.c":121:5)
#loc114 = loc("CWE563_Unused_Variable__unused_value_char_08.c":126:5)
#loc115 = loc("CWE563_Unused_Variable__unused_value_char_08.c":121:8)
#loc116 = loc("CWE563_Unused_Variable__unused_value_char_08.c":121:26)
#loc117 = loc("CWE563_Unused_Variable__unused_value_char_08.c":122:5)
#loc118 = loc("CWE563_Unused_Variable__unused_value_char_08.c":124:16)
#loc119 = loc("CWE563_Unused_Variable__unused_value_char_08.c":124:9)
#loc120 = loc("CWE563_Unused_Variable__unused_value_char_08.c":125:26)
#loc121 = loc("CWE563_Unused_Variable__unused_value_char_08.c":125:9)
#loc122 = loc("CWE563_Unused_Variable__unused_value_char_08.c":127:5)
#loc123 = loc("CWE563_Unused_Variable__unused_value_char_08.c":132:5)
#loc124 = loc("CWE563_Unused_Variable__unused_value_char_08.c":127:8)
#loc125 = loc("CWE563_Unused_Variable__unused_value_char_08.c":127:26)
#loc126 = loc("CWE563_Unused_Variable__unused_value_char_08.c":128:5)
#loc127 = loc("CWE563_Unused_Variable__unused_value_char_08.c":130:16)
#loc128 = loc("CWE563_Unused_Variable__unused_value_char_08.c":130:9)
#loc129 = loc("CWE563_Unused_Variable__unused_value_char_08.c":131:26)
#loc130 = loc("CWE563_Unused_Variable__unused_value_char_08.c":131:9)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc11, #loc8])
#loc137 = loc(fused[#loc13, #loc12])
#loc138 = loc(fused[#loc14, #loc15])
#loc139 = loc(fused[#loc16, #loc17])
#loc140 = loc(fused[#loc18, #loc15])
#loc141 = loc(fused[#loc20, #loc19])
#loc142 = loc(fused[#loc23, #loc24])
#loc143 = loc(fused[#loc25, #loc26])
#loc144 = loc(fused[#loc27, #loc28])
#loc145 = loc(fused[#loc29, #loc30])
#loc146 = loc(fused[#loc31, #loc32])
#loc147 = loc(fused[#loc33, #loc34])
#loc148 = loc(fused[#loc36, #loc35])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc40, #loc41])
#loc151 = loc(fused[#loc42, #loc43])
#loc152 = loc(fused[#loc44, #loc45])
#loc153 = loc(fused[#loc46, #loc47])
#loc154 = loc(fused[#loc48, #loc45])
#loc155 = loc(fused[#loc50, #loc49])
#loc156 = loc(fused[#loc51, #loc52])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc159 = loc(fused[#loc61, #loc62])
#loc160 = loc(fused[#loc64, #loc63])
#loc161 = loc(fused[#loc65, #loc66])
#loc162 = loc(fused[#loc67, #loc68])
#loc163 = loc(fused[#loc69, #loc70])
#loc164 = loc(fused[#loc71, #loc72])
#loc165 = loc(fused[#loc73, #loc70])
#loc166 = loc(fused[#loc75, #loc74])
#loc167 = loc(fused[#loc76, #loc77])
#loc168 = loc(fused[#loc78, #loc79])
#loc169 = loc(fused[#loc80, #loc77])
#loc170 = loc(fused[#loc83, #loc84])
#loc171 = loc(fused[#loc85, #loc86])
#loc172 = loc(fused[#loc87, #loc88])
#loc173 = loc(fused[#loc89, #loc90])
#loc174 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc175 = loc(fused[#loc97, #loc96])
#loc176 = loc(fused[#loc100, #loc101])
#loc177 = loc(fused[#loc102, #loc103])
#loc178 = loc(fused[#loc104, #loc101])
#loc179 = loc(fused[#loc106, #loc105])
#loc180 = loc(fused[#loc109, #loc110])
#loc181 = loc(fused[#loc111, #loc112])
#loc182 = loc(fused[#loc113, #loc114])
#loc183 = loc(fused[#loc115, #loc116])
#loc184 = loc(fused[#loc117, #loc114])
#loc185 = loc(fused[#loc119, #loc118])
#loc186 = loc(fused[#loc122, #loc123])
#loc187 = loc(fused[#loc124, #loc125])
#loc188 = loc(fused[#loc126, #loc123])
#loc189 = loc(fused[#loc128, #loc127])
