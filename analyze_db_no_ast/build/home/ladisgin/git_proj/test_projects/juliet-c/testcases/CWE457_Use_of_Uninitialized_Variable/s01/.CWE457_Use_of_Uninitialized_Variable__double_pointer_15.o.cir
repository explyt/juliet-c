!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc192)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @printDoubleLine(!cir.double) loc(#loc193)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_pointer_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc12)
      cir.switch (%1 : !s32i) [
      case (equal, 6) {
        cir.break loc(#loc13)
      },
      case (default) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc14)
        cir.break loc(#loc15)
      }
      ] loc(#loc10)
    } loc(#loc196)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc18)
      cir.switch (%1 : !s32i) [
      case (equal, 7) {
        %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc19)
        %3 = cir.load %2 : !cir.ptr<!cir.double>, !cir.double loc(#loc20)
        cir.call @printDoubleLine(%3) : (!cir.double) -> () loc(#loc21)
        cir.break loc(#loc22)
      },
      case (default) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc23)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc23)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc24)
        cir.break loc(#loc25)
      }
      ] loc(#loc16)
    } loc(#loc197)
    cir.return loc(#loc7)
  } loc(#loc194)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_pointer_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc27)
  } loc(#loc198)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc203)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc204)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc46)
      cir.switch (%1 : !s32i) [
      case (equal, 6) {
        cir.break loc(#loc47)
      },
      case (default) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc49)
        cir.break loc(#loc50)
      }
      ] loc(#loc44)
    } loc(#loc207)
    cir.scope {
      %1 = cir.const #cir.int<8> : !s32i loc(#loc53)
      cir.switch (%1 : !s32i) [
      case (equal, 7) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc55)
        cir.break loc(#loc56)
      },
      case (default) {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc57)
        %3 = cir.const #cir.int<8> : !u64i loc(#loc209)
        %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc57)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc210)
        cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc211)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc64)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc65)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !s32i loc(#loc213)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc66)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc68)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc69)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc70)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc68)
          } loc(#loc214)
        } loc(#loc212)
        %6 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc71)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc72)
        cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc215)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc74)
        %9 = cir.load %8 : !cir.ptr<!cir.double>, !cir.double loc(#loc75)
        cir.call @printDoubleLine(%9) : (!cir.double) -> () loc(#loc76)
        cir.break loc(#loc77)
      }
      ] loc(#loc51)
    } loc(#loc208)
    cir.return loc(#loc41)
  } loc(#loc205)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc84)
      cir.switch (%1 : !s32i) [
      case (equal, 6) {
        cir.break loc(#loc85)
      },
      case (default) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc87)
        cir.break loc(#loc88)
      }
      ] loc(#loc82)
    } loc(#loc218)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc91)
      cir.switch (%1 : !s32i) [
      case (equal, 7) {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
        %3 = cir.const #cir.int<8> : !u64i loc(#loc220)
        %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc92)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc221)
        cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc222)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc99)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc100)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !s32i loc(#loc224)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc101)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc103)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc105)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc103)
          } loc(#loc225)
        } loc(#loc223)
        %6 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc106)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc107)
        cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc226)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc109)
        %9 = cir.load %8 : !cir.ptr<!cir.double>, !cir.double loc(#loc110)
        cir.call @printDoubleLine(%9) : (!cir.double) -> () loc(#loc111)
        cir.break loc(#loc112)
      },
      case (default) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc113)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        cir.break loc(#loc115)
      }
      ] loc(#loc89)
    } loc(#loc219)
    cir.return loc(#loc79)
  } loc(#loc216)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc228)
    cir.scope {
      %1 = cir.const #cir.int<5> : !s32i loc(#loc122)
      cir.switch (%1 : !s32i) [
      case (equal, 6) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc124)
        cir.break loc(#loc125)
      },
      case (default) {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc126)
        %3 = cir.const #cir.int<8> : !u64i loc(#loc230)
        %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc126)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc231)
        cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc232)
        cir.scope {
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc133)
          %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc134)
          %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !s32i loc(#loc234)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc135)
          cir.if %12 {
            %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc138)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc139)
            cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr1) loc(#loc137)
          } loc(#loc235)
        } loc(#loc233)
        %6 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc140)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc141)
        cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc236)
        cir.break loc(#loc143)
      }
      ] loc(#loc120)
    } loc(#loc229)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc146)
      cir.switch (%1 : !s32i) [
      case (equal, 7) {
        %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc147)
        %3 = cir.load %2 : !cir.ptr<!cir.double>, !cir.double loc(#loc148)
        cir.call @printDoubleLine(%3) : (!cir.double) -> () loc(#loc149)
        cir.break loc(#loc150)
      },
      case (default) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc151)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc151)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc152)
        cir.break loc(#loc153)
      }
      ] loc(#loc144)
    } loc(#loc237)
    cir.return loc(#loc117)
  } loc(#loc227)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc160)
      cir.switch (%1 : !s32i) [
      case (equal, 6) {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc161)
        %3 = cir.const #cir.int<8> : !u64i loc(#loc241)
        %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc161)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc242)
        cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc243)
        cir.scope {
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc168)
          %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc169)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc169)
          %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !s32i loc(#loc245)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc170)
          cir.if %12 {
            %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc172)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc173)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc174)
            cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr1) loc(#loc172)
          } loc(#loc246)
        } loc(#loc244)
        %6 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc175)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc176)
        cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc247)
        cir.break loc(#loc178)
      },
      case (default) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc179)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc179)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc180)
        cir.break loc(#loc181)
      }
      ] loc(#loc158)
    } loc(#loc240)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc184)
      cir.switch (%1 : !s32i) [
      case (equal, 7) {
        %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc185)
        %3 = cir.load %2 : !cir.ptr<!cir.double>, !cir.double loc(#loc186)
        cir.call @printDoubleLine(%3) : (!cir.double) -> () loc(#loc187)
        cir.break loc(#loc188)
      },
      case (default) {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc189)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc189)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc190)
        cir.break loc(#loc191)
      }
      ] loc(#loc182)
    } loc(#loc248)
    cir.return loc(#loc155)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":35:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":24:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":49:1)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":26:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":26:14)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":27:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":37:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":27:12)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":32:9)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":35:9)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":36:9)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":38:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":48:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":38:12)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":42:26)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":42:25)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":42:9)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":43:9)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":46:19)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":46:9)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":47:9)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":181:1)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":187:1)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":183:5)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":183:14)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":184:5)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":184:14)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":185:5)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":185:14)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":186:5)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":186:14)
#loc36 = loc("/usr/include/stdlib.h":672:1)
#loc37 = loc("/usr/include/stdlib.h":672:45)
#loc38 = loc("/usr/include/stdlib.h":756:1)
#loc39 = loc("/usr/include/stdlib.h":756:70)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":56:1)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":85:1)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":58:5)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":58:14)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":59:5)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":69:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":59:12)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":64:9)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":67:19)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":67:9)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":68:9)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":70:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":84:5)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":70:12)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":74:19)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":74:9)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":75:9)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:26)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:33)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:46)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:47)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:9)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:9)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:37)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:13)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:21)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:18)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:27)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:28)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:34)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:33)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":81:17)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":81:10)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":81:9)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":82:26)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":82:25)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":82:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":83:9)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":88:1)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":117:1)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":90:5)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":90:14)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":91:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":101:5)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":91:12)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":96:9)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":99:19)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":99:9)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":100:9)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":102:5)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":116:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":102:12)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:26)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:33)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:46)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:47)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:9)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:9)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:37)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:13)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:21)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:18)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:27)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:28)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:34)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:33)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":109:17)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":109:10)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":109:9)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":110:26)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":110:25)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":110:9)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":111:9)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":114:19)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":114:9)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":115:9)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":120:1)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":148:1)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":122:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":122:14)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":123:5)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":136:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":123:12)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":127:19)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":127:9)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":128:9)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:26)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:33)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:46)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:47)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:9)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:9)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:37)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:13)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:21)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:18)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:27)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:28)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:34)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:33)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":134:17)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":134:10)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":134:9)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":135:9)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":137:5)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":147:5)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":137:12)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":141:26)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":141:25)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":141:9)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":142:9)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":145:19)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":145:9)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":146:9)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":151:1)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":179:1)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":153:5)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":153:14)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":154:5)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":167:5)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":154:12)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:26)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:33)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:46)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:47)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:9)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:9)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:37)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:13)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:21)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:18)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:27)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:28)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:34)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:33)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":161:17)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":161:10)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":161:9)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":162:9)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":165:19)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":165:9)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":166:9)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":168:5)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":178:5)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":168:12)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":172:26)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":172:25)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":172:9)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":173:9)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":176:19)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":176:9)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":177:9)
#loc192 = loc(fused[#loc1, #loc2])
#loc193 = loc(fused[#loc4, #loc5])
#loc194 = loc(fused[#loc6, #loc7])
#loc195 = loc(fused[#loc8, #loc9])
#loc196 = loc(fused[#loc10, #loc11])
#loc197 = loc(fused[#loc16, #loc17])
#loc198 = loc(fused[#loc26, #loc27])
#loc199 = loc(fused[#loc28, #loc29])
#loc200 = loc(fused[#loc30, #loc31])
#loc201 = loc(fused[#loc32, #loc33])
#loc202 = loc(fused[#loc34, #loc35])
#loc203 = loc(fused[#loc36, #loc37])
#loc204 = loc(fused[#loc38, #loc39])
#loc205 = loc(fused[#loc40, #loc41])
#loc206 = loc(fused[#loc42, #loc43])
#loc207 = loc(fused[#loc44, #loc45])
#loc208 = loc(fused[#loc51, #loc52])
#loc209 = loc(fused[#loc58, #loc59])
#loc210 = loc(fused[#loc57, #loc60])
#loc211 = loc(fused[#loc61, #loc60])
#loc212 = loc(fused[#loc62, #loc63])
#loc213 = loc(fused[#loc64, #loc65])
#loc214 = loc(fused[#loc67, #loc63])
#loc215 = loc(fused[#loc73, #loc71])
#loc216 = loc(fused[#loc78, #loc79])
#loc217 = loc(fused[#loc80, #loc81])
#loc218 = loc(fused[#loc82, #loc83])
#loc219 = loc(fused[#loc89, #loc90])
#loc220 = loc(fused[#loc93, #loc94])
#loc221 = loc(fused[#loc92, #loc95])
#loc222 = loc(fused[#loc96, #loc95])
#loc223 = loc(fused[#loc97, #loc98])
#loc224 = loc(fused[#loc99, #loc100])
#loc225 = loc(fused[#loc102, #loc98])
#loc226 = loc(fused[#loc108, #loc106])
#loc227 = loc(fused[#loc116, #loc117])
#loc228 = loc(fused[#loc118, #loc119])
#loc229 = loc(fused[#loc120, #loc121])
#loc230 = loc(fused[#loc127, #loc128])
#loc231 = loc(fused[#loc126, #loc129])
#loc232 = loc(fused[#loc130, #loc129])
#loc233 = loc(fused[#loc131, #loc132])
#loc234 = loc(fused[#loc133, #loc134])
#loc235 = loc(fused[#loc136, #loc132])
#loc236 = loc(fused[#loc142, #loc140])
#loc237 = loc(fused[#loc144, #loc145])
#loc238 = loc(fused[#loc154, #loc155])
#loc239 = loc(fused[#loc156, #loc157])
#loc240 = loc(fused[#loc158, #loc159])
#loc241 = loc(fused[#loc162, #loc163])
#loc242 = loc(fused[#loc161, #loc164])
#loc243 = loc(fused[#loc165, #loc164])
#loc244 = loc(fused[#loc166, #loc167])
#loc245 = loc(fused[#loc168, #loc169])
#loc246 = loc(fused[#loc171, #loc167])
#loc247 = loc(fused[#loc177, #loc175])
#loc248 = loc(fused[#loc182, #loc183])
