!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":108:10)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":108:14)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":108:20)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":108:32)
#loc200 = loc(fused[#loc71, #loc72])
#loc201 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int64_t_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc172)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc173)
  cir.func private @printLongLongLine(!s64i) loc(#loc174)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int64_t_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc177)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc178)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc179)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc180)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc181)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc24)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s64i>, !cir.bool loc(#loc183)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc28)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc184)
    } loc(#loc182)
    cir.scope {
      %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc186)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc35)
        cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc188)
        cir.for : cond {
          %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc38)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc38)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc189)
          cir.condition(%22) loc(#loc39)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<5> : !s64i loc(#loc41)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc42)
            %21 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s64i>, %21 : !u64i), !cir.ptr<!s64i> loc(#loc44)
            cir.store %19, %22 : !s64i, !cir.ptr<!s64i> loc(#loc191)
          } loc(#loc190)
          cir.yield loc(#loc34)
        } step {
          %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc45)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc46)
          cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc192)
          cir.yield loc(#loc187)
        } loc(#loc187)
      } loc(#loc187)
    } loc(#loc185)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc47)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc48)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc49)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc51)
    %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc49)
    cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc52)
    cir.return loc(#loc10)
  } loc(#loc175)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int64_t_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc193)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc196)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc197)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc200)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc201)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE416_Use_After_Free__malloc_free_int64_t_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call @CWE416_Use_After_Free__malloc_free_int64_t_01_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE416_Use_After_Free__malloc_free_int64_t_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call @CWE416_Use_After_Free__malloc_free_int64_t_01_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    cir.return %17 : !s32i loc(#loc204)
  } loc(#loc199)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc93)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc207)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc95)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc96)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc208)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc209)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc210)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc211)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc103)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc104)
      %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s64i>, !cir.bool loc(#loc213)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc106)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc107)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc108)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc106)
      } loc(#loc214)
    } loc(#loc212)
    cir.scope {
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc216)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc115)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc115)
        cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc218)
        cir.for : cond {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc117)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc118)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc118)
          %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc219)
          cir.condition(%19) loc(#loc119)
        } body {
          cir.scope {
            %16 = cir.const #cir.int<5> : !s64i loc(#loc121)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc122)
            %18 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !u64i), !cir.ptr<!s64i> loc(#loc124)
            cir.store %16, %19 : !s64i, !cir.ptr<!s64i> loc(#loc221)
          } loc(#loc220)
          cir.yield loc(#loc114)
        } step {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc125)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc126)
          cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc222)
          cir.yield loc(#loc217)
        } loc(#loc217)
      } loc(#loc217)
    } loc(#loc215)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc127)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s64i>, %10 : !s32i), !cir.ptr<!s64i> loc(#loc129)
    %12 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc127)
    cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc130)
    cir.return loc(#loc90)
  } loc(#loc205)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc135)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc225)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc137)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc138)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc226)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc227)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc137)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc228)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc229)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc145)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc146)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc146)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc231)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc148)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc149)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc150)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
      } loc(#loc232)
    } loc(#loc230)
    cir.scope {
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc234)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc157)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc157)
        cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc236)
        cir.for : cond {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc159)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc160)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc160)
          %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc237)
          cir.condition(%18) loc(#loc161)
        } body {
          cir.scope {
            %15 = cir.const #cir.int<5> : !s64i loc(#loc163)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc164)
            %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc165)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc166)
            cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc239)
          } loc(#loc238)
          cir.yield loc(#loc156)
        } step {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc167)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc168)
          cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc240)
          cir.yield loc(#loc235)
        } loc(#loc235)
      } loc(#loc235)
    } loc(#loc233)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc169)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc170)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc170)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc169)
    cir.return loc(#loc132)
  } loc(#loc223)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int64_t_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":24:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":43:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":26:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":26:15)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":28:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":28:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":29:23)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":29:30)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":29:34)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":29:48)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":29:49)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":29:5)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":30:5)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":30:33)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":30:9)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":30:17)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":30:23)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":30:24)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":30:30)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":30:29)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":31:5)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":37:5)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":32:9)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":32:16)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":33:9)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":36:9)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":33:17)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":33:13)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":33:20)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":33:24)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":33:22)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":34:9)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":35:23)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":35:13)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":35:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":35:19)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":33:30)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":33:29)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":39:5)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":39:10)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":41:23)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":41:28)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":41:29)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":41:5)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":93:1)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":97:1)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":95:5)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":95:13)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":96:5)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":96:13)
#loc59 = loc("/usr/include/stdlib.h":575:1)
#loc60 = loc("/usr/include/stdlib.h":575:41)
#loc61 = loc("/usr/include/time.h":76:1)
#loc62 = loc("/usr/include/time.h":76:38)
#loc63 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc64 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":113:15)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":115:15)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":118:15)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":120:15)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":108:1)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":123:1)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":109:1)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":111:27)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":111:22)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":111:5)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":113:5)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":114:5)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":114:56)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":115:5)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":118:5)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":119:5)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":119:55)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":120:5)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":122:12)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":122:5)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":50:1)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":68:1)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":52:5)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":52:15)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":54:12)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":54:5)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":55:23)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":55:30)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":55:34)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":55:48)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":55:49)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":55:5)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":56:5)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":56:33)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":56:9)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":56:17)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":56:23)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":56:24)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":56:30)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":56:29)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":57:5)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":63:5)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":58:9)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":58:16)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":59:9)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":62:9)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":59:17)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":59:13)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":59:20)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":59:24)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":59:22)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":60:9)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":61:23)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":61:13)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":61:18)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":61:19)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":59:30)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":59:29)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":66:23)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":66:28)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":66:29)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":66:5)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":71:1)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":91:1)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":73:5)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":73:15)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":75:12)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":75:5)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":76:23)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":76:30)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":76:34)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":76:48)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":76:49)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":76:5)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":77:5)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":77:33)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":77:9)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":77:17)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":77:23)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":77:24)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":77:30)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":77:29)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":78:5)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":84:5)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":79:9)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":79:16)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":80:9)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":83:9)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":80:17)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":80:13)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":80:20)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":80:24)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":80:22)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":81:9)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":82:23)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":82:13)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":82:18)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":82:19)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":80:30)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":80:29)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":86:5)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_int64_t_01.c":86:10)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc14, #loc13])
#loc178 = loc(fused[#loc17, #loc18])
#loc179 = loc(fused[#loc16, #loc18])
#loc180 = loc(fused[#loc15, #loc19])
#loc181 = loc(fused[#loc20, #loc19])
#loc182 = loc(fused[#loc21, #loc22])
#loc183 = loc(fused[#loc23, #loc24])
#loc184 = loc(fused[#loc25, #loc22])
#loc185 = loc(fused[#loc29, #loc30])
#loc186 = loc(fused[#loc31, #loc32])
#loc187 = loc(fused[#loc33, #loc34])
#loc188 = loc(fused[#loc36, #loc35])
#loc189 = loc(fused[#loc37, #loc38])
#loc190 = loc(fused[#loc40, #loc34])
#loc191 = loc(fused[#loc42, #loc41])
#loc192 = loc(fused[#loc46, #loc45])
#loc193 = loc(fused[#loc53, #loc54])
#loc194 = loc(fused[#loc55, #loc56])
#loc195 = loc(fused[#loc57, #loc58])
#loc196 = loc(fused[#loc59, #loc60])
#loc197 = loc(fused[#loc61, #loc62])
#loc198 = loc(fused[#loc63, #loc64])
#loc199 = loc(fused[#loc69, #loc70])
#loc202 = loc(fused[#loc80, #loc81])
#loc203 = loc(fused[#loc84, #loc85])
#loc204 = loc(fused[#loc88, #loc87])
#loc205 = loc(fused[#loc89, #loc90])
#loc206 = loc(fused[#loc91, #loc92])
#loc207 = loc(fused[#loc94, #loc93])
#loc208 = loc(fused[#loc97, #loc98])
#loc209 = loc(fused[#loc96, #loc98])
#loc210 = loc(fused[#loc95, #loc99])
#loc211 = loc(fused[#loc100, #loc99])
#loc212 = loc(fused[#loc101, #loc102])
#loc213 = loc(fused[#loc103, #loc104])
#loc214 = loc(fused[#loc105, #loc102])
#loc215 = loc(fused[#loc109, #loc110])
#loc216 = loc(fused[#loc111, #loc112])
#loc217 = loc(fused[#loc113, #loc114])
#loc218 = loc(fused[#loc116, #loc115])
#loc219 = loc(fused[#loc117, #loc118])
#loc220 = loc(fused[#loc120, #loc114])
#loc221 = loc(fused[#loc122, #loc121])
#loc222 = loc(fused[#loc126, #loc125])
#loc223 = loc(fused[#loc131, #loc132])
#loc224 = loc(fused[#loc133, #loc134])
#loc225 = loc(fused[#loc136, #loc135])
#loc226 = loc(fused[#loc139, #loc140])
#loc227 = loc(fused[#loc138, #loc140])
#loc228 = loc(fused[#loc137, #loc141])
#loc229 = loc(fused[#loc142, #loc141])
#loc230 = loc(fused[#loc143, #loc144])
#loc231 = loc(fused[#loc145, #loc146])
#loc232 = loc(fused[#loc147, #loc144])
#loc233 = loc(fused[#loc151, #loc152])
#loc234 = loc(fused[#loc153, #loc154])
#loc235 = loc(fused[#loc155, #loc156])
#loc236 = loc(fused[#loc158, #loc157])
#loc237 = loc(fused[#loc159, #loc160])
#loc238 = loc(fused[#loc162, #loc156])
#loc239 = loc(fused[#loc164, #loc163])
#loc240 = loc(fused[#loc168, #loc167])
