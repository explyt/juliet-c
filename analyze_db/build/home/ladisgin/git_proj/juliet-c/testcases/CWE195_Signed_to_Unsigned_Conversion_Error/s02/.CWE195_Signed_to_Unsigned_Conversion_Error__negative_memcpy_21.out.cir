!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":24:22)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":24:26)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":154:10)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":154:14)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":154:20)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":154:32)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":66:27)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":66:31)
#loc165 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":105:27)
#loc166 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":105:31)
#loc223 = loc(fused[#loc5, #loc6])
#loc250 = loc(fused[#loc79, #loc80])
#loc251 = loc(fused[#loc81, #loc82])
#loc257 = loc(fused[#loc102, #loc103])
#loc279 = loc(fused[#loc165, #loc166])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc221)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc5, #loc6])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc4)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    cir.scope {
      %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc221)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc10)
      cir.if %6 {
        %7 = cir.const #cir.int<1> : !s32i loc(#loc12)
        %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc13)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
      } loc(#loc225)
    } loc(#loc224)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.return %3 : !s32i loc(#loc227)
  } loc(#loc222)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc228)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc24)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc221)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %6 = cir.call @badSource(%5) : (!s32i) -> !s32i loc(#loc29)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc235)
      %8 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc236)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc236)
      cir.store %9, %8 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc236)
      %10 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
      %12 = cir.const #cir.int<65> : !s32i loc(#loc39)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc40)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
      cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc237)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc44)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc45)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc46)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc45)
      %22 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc47)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc238)
      cir.scope {
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
        %26 = cir.const #cir.int<100> : !s32i loc(#loc51)
        %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc240)
        cir.if %27 {
          %28 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc55)
          cir.libc.memcpy %33 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc242)
          %34 = cir.const #cir.int<0> : !s32i loc(#loc58)
          %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc58)
          %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
          %37 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
          %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc60)
          cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc243)
        } loc(#loc241)
      } loc(#loc239)
      %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    } loc(#loc234)
    cir.return loc(#loc20)
  } loc(#loc229)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc244)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc247)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc251)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc86)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    cir.return %17 : !s32i loc(#loc254)
  } loc(#loc249)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc99)
  cir.func internal private @goodG2B1Source(%arg0: !s32i loc(fused[#loc102, #loc103])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc257)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.scope {
      %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc255)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc107)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc107)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc111)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc112)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc112)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
      } loc(#loc259)
    } loc(#loc258)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    cir.return %3 : !s32i loc(#loc261)
  } loc(#loc256)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc263)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc122)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc255)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %6 = cir.call @goodG2B1Source(%5) : (!s32i) -> !s32i loc(#loc127)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc268)
      %8 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc269)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc269)
      cir.store %9, %8 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc269)
      %10 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
      %12 = cir.const #cir.int<65> : !s32i loc(#loc137)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc138)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc139)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc138)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc138)
      cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc142)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc142)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc143)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc144)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc143)
      %22 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc145)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc271)
      cir.scope {
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        %26 = cir.const #cir.int<100> : !s32i loc(#loc149)
        %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc273)
        cir.if %27 {
          %28 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc151)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc152)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc153)
          cir.libc.memcpy %33 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc275)
          %34 = cir.const #cir.int<0> : !s32i loc(#loc156)
          %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc156)
          %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
          %37 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
          %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc158)
          cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc276)
        } loc(#loc274)
      } loc(#loc272)
      %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc159)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    } loc(#loc267)
    cir.return loc(#loc118)
  } loc(#loc262)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc277)
  cir.func internal private @goodG2B2Source(%arg0: !s32i loc(fused[#loc165, #loc166])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc279)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc164)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.scope {
      %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc277)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc170)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc170)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc172)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc173)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc172)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
      } loc(#loc281)
    } loc(#loc280)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    cir.return %3 : !s32i loc(#loc283)
  } loc(#loc278)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc285)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc182)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc277)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %6 = cir.call @goodG2B2Source(%5) : (!s32i) -> !s32i loc(#loc187)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc290)
      %8 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc291)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc291)
      cir.store %9, %8 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc291)
      %10 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc196)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc196)
      %12 = cir.const #cir.int<65> : !s32i loc(#loc197)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc198)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc199)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc198)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc198)
      cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc292)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc202)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc202)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc203)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc204)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc203)
      %22 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc205)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc205)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc293)
      cir.scope {
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
        %26 = cir.const #cir.int<100> : !s32i loc(#loc209)
        %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc295)
        cir.if %27 {
          %28 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc211)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc211)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc212)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc212)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc213)
          cir.libc.memcpy %33 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc297)
          %34 = cir.const #cir.int<0> : !s32i loc(#loc216)
          %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc216)
          %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc217)
          %37 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc218)
          %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc218)
          cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc298)
        } loc(#loc296)
      } loc(#loc294)
      %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    } loc(#loc289)
    cir.return loc(#loc178)
  } loc(#loc284)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":0:0)
#loc1 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":22:1)
#loc2 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":22:24)
#loc3 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":24:1)
#loc4 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":32:1)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":25:1)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":26:5)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":30:5)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":26:8)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":27:5)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":29:17)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":29:16)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":29:9)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":31:12)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":31:5)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":34:1)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":55:1)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":36:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":36:9)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":38:13)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":38:12)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":38:5)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":39:17)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":39:5)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":40:22)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":40:12)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":40:5)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":40:26)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":41:5)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":54:5)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":42:9)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":42:24)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":43:9)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":43:26)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":44:16)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":44:24)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":44:29)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":44:33)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":44:9)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":44:34)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":45:25)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":45:16)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":45:20)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":45:9)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":46:9)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":52:9)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":46:13)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":46:20)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":47:9)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":50:20)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":50:26)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":50:34)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":50:13)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":50:38)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":51:26)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":51:18)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":51:13)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":53:19)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":53:9)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":138:1)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":142:1)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":140:5)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":140:14)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":141:5)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":141:14)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":159:15)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":161:15)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":164:15)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":166:15)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":154:1)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":169:1)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":155:1)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":157:27)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":157:22)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":157:5)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":159:5)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":160:5)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":160:73)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":161:5)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":164:5)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":165:5)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":165:72)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":166:5)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":168:12)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":168:5)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":62:1)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":62:29)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":71:19)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":66:1)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":79:1)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":67:1)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":68:5)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":77:5)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":68:8)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":69:5)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":72:5)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":74:5)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":71:9)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":76:16)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":76:20)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":76:9)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":78:12)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":78:5)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":81:1)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":102:1)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":83:5)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":83:9)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":85:13)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":85:12)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":85:5)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":86:22)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":86:5)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":87:27)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":87:12)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":87:5)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":87:31)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":88:5)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":101:5)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":89:9)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":89:24)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":90:9)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":90:26)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":91:16)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":91:24)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":91:29)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":91:33)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":91:9)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":91:34)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":92:25)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":92:16)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":92:20)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":92:9)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":93:9)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":99:9)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":93:13)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":93:20)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":94:9)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":97:20)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":97:26)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":97:34)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":97:13)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":97:38)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":98:26)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":98:18)
#loc158 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":98:13)
#loc159 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":100:19)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":100:9)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":63:1)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":63:29)
#loc163 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":105:1)
#loc164 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":113:1)
#loc167 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":106:1)
#loc168 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":107:5)
#loc169 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":111:5)
#loc170 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":107:8)
#loc171 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":108:5)
#loc172 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":110:16)
#loc173 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":110:20)
#loc174 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":110:9)
#loc175 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":112:12)
#loc176 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":112:5)
#loc177 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":115:1)
#loc178 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":136:1)
#loc179 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":117:5)
#loc180 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":117:9)
#loc181 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":119:13)
#loc182 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":119:12)
#loc183 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":119:5)
#loc184 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":120:22)
#loc185 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":120:5)
#loc186 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":121:27)
#loc187 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":121:12)
#loc188 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":121:5)
#loc189 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":121:31)
#loc190 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":122:5)
#loc191 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":135:5)
#loc192 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":123:9)
#loc193 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":123:24)
#loc194 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":124:9)
#loc195 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":124:26)
#loc196 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":125:16)
#loc197 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":125:24)
#loc198 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":125:29)
#loc199 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":125:33)
#loc200 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":125:9)
#loc201 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":125:34)
#loc202 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":126:25)
#loc203 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":126:16)
#loc204 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":126:20)
#loc205 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":126:9)
#loc206 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":127:9)
#loc207 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":133:9)
#loc208 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":127:13)
#loc209 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":127:20)
#loc210 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":128:9)
#loc211 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":131:20)
#loc212 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":131:26)
#loc213 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":131:34)
#loc214 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":131:13)
#loc215 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":131:38)
#loc216 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":132:26)
#loc217 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":132:18)
#loc218 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":132:13)
#loc219 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":134:19)
#loc220 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_21.c":134:9)
#loc221 = loc(fused[#loc1, #loc2])
#loc222 = loc(fused[#loc3, #loc4])
#loc224 = loc(fused[#loc8, #loc9])
#loc225 = loc(fused[#loc11, #loc9])
#loc226 = loc(fused[#loc14, #loc12])
#loc227 = loc(fused[#loc16, #loc15])
#loc228 = loc(fused[#loc17, #loc18])
#loc229 = loc(fused[#loc19, #loc20])
#loc230 = loc(fused[#loc21, #loc22])
#loc231 = loc(fused[#loc25, #loc23])
#loc232 = loc(fused[#loc27, #loc26])
#loc233 = loc(fused[#loc30, #loc31])
#loc234 = loc(fused[#loc32, #loc33])
#loc235 = loc(fused[#loc34, #loc35])
#loc236 = loc(fused[#loc36, #loc37])
#loc237 = loc(fused[#loc42, #loc43])
#loc238 = loc(fused[#loc47, #loc44])
#loc239 = loc(fused[#loc48, #loc49])
#loc240 = loc(fused[#loc50, #loc51])
#loc241 = loc(fused[#loc52, #loc49])
#loc242 = loc(fused[#loc56, #loc57])
#loc243 = loc(fused[#loc60, #loc58])
#loc244 = loc(fused[#loc63, #loc64])
#loc245 = loc(fused[#loc65, #loc66])
#loc246 = loc(fused[#loc67, #loc68])
#loc247 = loc(fused[#loc69, #loc70])
#loc248 = loc(fused[#loc71, #loc72])
#loc249 = loc(fused[#loc77, #loc78])
#loc252 = loc(fused[#loc88, #loc89])
#loc253 = loc(fused[#loc92, #loc93])
#loc254 = loc(fused[#loc96, #loc95])
#loc255 = loc(fused[#loc97, #loc98])
#loc256 = loc(fused[#loc100, #loc101])
#loc258 = loc(fused[#loc105, #loc106])
#loc259 = loc(fused[#loc108, #loc109, #loc110, #loc106])
#loc260 = loc(fused[#loc114, #loc113])
#loc261 = loc(fused[#loc116, #loc115])
#loc262 = loc(fused[#loc117, #loc118])
#loc263 = loc(fused[#loc119, #loc120])
#loc264 = loc(fused[#loc123, #loc121])
#loc265 = loc(fused[#loc125, #loc124])
#loc266 = loc(fused[#loc128, #loc129])
#loc267 = loc(fused[#loc130, #loc131])
#loc268 = loc(fused[#loc132, #loc133])
#loc269 = loc(fused[#loc134, #loc135])
#loc270 = loc(fused[#loc140, #loc141])
#loc271 = loc(fused[#loc145, #loc142])
#loc272 = loc(fused[#loc146, #loc147])
#loc273 = loc(fused[#loc148, #loc149])
#loc274 = loc(fused[#loc150, #loc147])
#loc275 = loc(fused[#loc154, #loc155])
#loc276 = loc(fused[#loc158, #loc156])
#loc277 = loc(fused[#loc161, #loc162])
#loc278 = loc(fused[#loc163, #loc164])
#loc280 = loc(fused[#loc168, #loc169])
#loc281 = loc(fused[#loc171, #loc169])
#loc282 = loc(fused[#loc174, #loc173])
#loc283 = loc(fused[#loc176, #loc175])
#loc284 = loc(fused[#loc177, #loc178])
#loc285 = loc(fused[#loc179, #loc180])
#loc286 = loc(fused[#loc183, #loc181])
#loc287 = loc(fused[#loc185, #loc184])
#loc288 = loc(fused[#loc188, #loc189])
#loc289 = loc(fused[#loc190, #loc191])
#loc290 = loc(fused[#loc192, #loc193])
#loc291 = loc(fused[#loc194, #loc195])
#loc292 = loc(fused[#loc200, #loc201])
#loc293 = loc(fused[#loc205, #loc202])
#loc294 = loc(fused[#loc206, #loc207])
#loc295 = loc(fused[#loc208, #loc209])
#loc296 = loc(fused[#loc210, #loc207])
#loc297 = loc(fused[#loc214, #loc215])
#loc298 = loc(fused[#loc218, #loc216])
