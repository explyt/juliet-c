!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":119:10)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":119:14)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":119:20)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":119:32)
#loc141 = loc(fused[#loc47, #loc48])
#loc142 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc127)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc128)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc124)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc124)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.br ^bb4 loc(#loc129)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc22)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc24)
    %10 = cir.const #cir.int<6> : !u64i loc(#loc130)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc131)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc27)
    %14 = cir.binop(sub, %11, %13) : !u64i loc(#loc132)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc4)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc4)
    %19 = cir.call @snprintf(%7, %14, %16, %18) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc22)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc133)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc134)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc7)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc15)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc9)
  } loc(#loc123)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc138)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc54)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.return %17 : !s32i loc(#loc145)
  } loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb10 loc(#loc76)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc147)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc147)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.br ^bb5 loc(#loc152)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc83)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc85)
    %12 = cir.const #cir.int<6> : !u64i loc(#loc153)
    %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc154)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc88)
    %16 = cir.binop(sub, %13, %15) : !u64i loc(#loc155)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc89)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc89)
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc90)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc90)
    %21 = cir.call @snprintf(%9, %16, %18, %20) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc83)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc156)
    cir.brcond %23 ^bb6, ^bb7 loc(#loc157)
  ^bb6:  // pred: ^bb5
    %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc93)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb7 loc(#loc82)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc82)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc80)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc73)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc73)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc67)
  } loc(#loc146)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc103)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc162)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc163)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc159)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc159)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc109)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc111)
    %10 = cir.const #cir.int<6> : !u64i loc(#loc165)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc166)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc114)
    %14 = cir.binop(sub, %11, %13) : !u64i loc(#loc167)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc115)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc115)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc116)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc116)
    %19 = cir.call @snprintf(%7, %14, %16, %18) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc109)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc169)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc119)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb6 loc(#loc108)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc108)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc102)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc102)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc96)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:57)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:65)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":51:27)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":38:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":55:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":45:13)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":45:36)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":46:13)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":46:27)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":40:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":54:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":40:8)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":41:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":42:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":53:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":52:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:17)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:26)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:31)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:35)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:52)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:54)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":49:80)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":50:13)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":51:17)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":104:1)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":108:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":106:5)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":106:11)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":107:5)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":107:11)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":124:15)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":126:15)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":129:15)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":131:15)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":119:1)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":134:1)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":120:1)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":122:27)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":122:22)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":122:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":124:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":125:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":125:76)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":126:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":129:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":130:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":130:75)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":131:5)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":133:12)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":133:5)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":67:19)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":62:1)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":83:1)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":74:13)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":74:36)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":75:13)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":75:27)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":64:5)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":82:5)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":64:8)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":65:5)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":68:5)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":70:5)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":67:9)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":71:9)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":81:9)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:13)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":80:13)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:17)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:26)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:31)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:35)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:52)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:54)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:57)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:65)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":77:79)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":78:13)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":79:27)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":79:17)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":86:1)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":102:1)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":93:13)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":93:36)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":94:13)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":94:27)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":88:5)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":101:5)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":88:8)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":89:5)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":90:9)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":100:9)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:13)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":99:13)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:17)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:26)
#loc111 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:31)
#loc112 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:35)
#loc113 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:52)
#loc114 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:54)
#loc115 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:57)
#loc116 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:65)
#loc117 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":96:79)
#loc118 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":97:13)
#loc119 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":98:27)
#loc120 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_04.c":98:17)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc8, #loc9])
#loc124 = loc(fused[#loc10, #loc11])
#loc125 = loc(fused[#loc12, #loc13])
#loc126 = loc(fused[#loc14, #loc15])
#loc127 = loc(fused[#loc17, #loc15])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc20, #loc21])
#loc130 = loc(fused[#loc25, #loc26])
#loc131 = loc(fused[#loc24, #loc26])
#loc132 = loc(fused[#loc24, #loc27])
#loc133 = loc(fused[#loc22, #loc28])
#loc134 = loc(fused[#loc29, #loc21])
#loc135 = loc(fused[#loc31, #loc32])
#loc136 = loc(fused[#loc33, #loc34])
#loc137 = loc(fused[#loc35, #loc36])
#loc138 = loc(fused[#loc37, #loc38])
#loc139 = loc(fused[#loc39, #loc40])
#loc140 = loc(fused[#loc45, #loc46])
#loc143 = loc(fused[#loc56, #loc57])
#loc144 = loc(fused[#loc60, #loc61])
#loc145 = loc(fused[#loc64, #loc63])
#loc146 = loc(fused[#loc66, #loc67])
#loc147 = loc(fused[#loc68, #loc69])
#loc148 = loc(fused[#loc70, #loc71])
#loc149 = loc(fused[#loc72, #loc73])
#loc150 = loc(fused[#loc75, #loc76, #loc77, #loc73])
#loc151 = loc(fused[#loc79, #loc80])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc86, #loc87])
#loc154 = loc(fused[#loc85, #loc87])
#loc155 = loc(fused[#loc85, #loc88])
#loc156 = loc(fused[#loc83, #loc91])
#loc157 = loc(fused[#loc92, #loc82])
#loc158 = loc(fused[#loc95, #loc96])
#loc159 = loc(fused[#loc97, #loc98])
#loc160 = loc(fused[#loc99, #loc100])
#loc161 = loc(fused[#loc101, #loc102])
#loc162 = loc(fused[#loc104, #loc102])
#loc163 = loc(fused[#loc105, #loc106])
#loc164 = loc(fused[#loc107, #loc108])
#loc165 = loc(fused[#loc112, #loc113])
#loc166 = loc(fused[#loc111, #loc113])
#loc167 = loc(fused[#loc111, #loc114])
#loc168 = loc(fused[#loc109, #loc117])
#loc169 = loc(fused[#loc118, #loc108])
