!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc21 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":44:21)
#loc22 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":44:25)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":103:44)
#loc170 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":157:25)
#loc171 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":157:29)
#loc286 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":223:44)
#loc316 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":136:25)
#loc317 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":136:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc350 = loc(fused[#loc21, #loc22])
#loc407 = loc(fused[#loc170, #loc171])
#loc464 = loc(fused[#loc316, #loc317])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc340)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc341)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc342)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc343)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc344)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc345)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc346)
  cir.func private @close(!s32i) -> !s32i loc(#loc347)
  cir.func private @printIntLine(!s32i) loc(#loc348)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc21, #loc22])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc351)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc350)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc25)
    cir.br ^bb1 loc(#loc352)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc353)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc354)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc24)
    %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc31)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc33)
    cir.br ^bb3 loc(#loc27)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc20)
  } loc(#loc349)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc356)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc357)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc358)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc359)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc360)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc361)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc48)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb1 loc(#loc363)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc41)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc43)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb2 loc(#loc364)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc364)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc54)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc365)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc59)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb6 loc(#loc367)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc66)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc368)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc369)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc68)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc64)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc370)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc371)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc372)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc76)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc373)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc79)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc374)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc83)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc83)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc84)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc375)
    cir.br ^bb10 loc(#loc376)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc377)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc378)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc378)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc95)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc96)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc379)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc380)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc98)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc89)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc381)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc102)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc103)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc104)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc382)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc383)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc106)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc100)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc108)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc109)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc110)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    cir.br ^bb18 loc(#loc385)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc116)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc386)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc387)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc118)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc114)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
    %60 = cir.const #cir.int<3> : !s32i loc(#loc121)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc121)
    %62 = cir.const #cir.int<4> : !u64i loc(#loc121)
    %63 = cir.binop(mul, %61, %62) : !u64i loc(#loc121)
    %64 = cir.const #cir.int<2> : !s32i loc(#loc121)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc121)
    %66 = cir.binop(add, %63, %65) : !u64i loc(#loc121)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc122)
    %69 = cir.binop(sub, %66, %68) : !u64i loc(#loc388)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %71 = cir.call @recv(%57, %59, %69, %70) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc124)
    %72 = cir.cast(integral, %71 : !s64i), !s32i loc(#loc124)
    cir.store %72, %0 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    cir.br ^bb22 loc(#loc390)
  ^bb22:  // pred: ^bb21
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc130)
    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc391)
    cir.brcond %76 ^bb23, ^bb24 loc(#loc131)
  ^bb23:  // pred: ^bb22
    %77 = cir.const #true loc(#loc131)
    cir.br ^bb29(%77 : !cir.bool) loc(#loc131)
  ^bb24:  // pred: ^bb22
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %79 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %80 ^bb25, ^bb26 loc(#loc131)
  ^bb25:  // pred: ^bb24
    %81 = cir.const #true loc(#loc131)
    cir.br ^bb27(%81 : !cir.bool) loc(#loc131)
  ^bb26:  // pred: ^bb24
    %82 = cir.const #false loc(#loc131)
    cir.br ^bb27(%82 : !cir.bool) loc(#loc131)
  ^bb27(%83: !cir.bool loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":103:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc131)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%83 : !cir.bool) loc(#loc131)
  ^bb29(%84: !cir.bool loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":103:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc131)
  ^bb30:  // pred: ^bb29
    cir.brcond %84 ^bb31, ^bb32 loc(#loc393)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc135)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc128)
  ^bb33:  // pred: ^bb32
    %85 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %86 = cir.cast(integral, %85 : !s32i), !s8i loc(#loc136)
    %87 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %88 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
    %89 = cir.ptr_stride(%88 : !cir.ptr<!s8i>, %87 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %86, %89 : !s8i, !cir.ptr<!s8i> loc(#loc394)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc139)
    %91 = cir.call @atoi(%90) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc140)
    cir.store %91, %5 : !s32i, !cir.ptr<!s32i> loc(#loc395)
    cir.br ^bb34 loc(#loc56)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc53)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc53)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc396)
  ^bb37:  // pred: ^bb36
    %92 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %93 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %94 = cir.unary(minus, %93) nsw : !s32i, !s32i loc(#loc146)
    %95 = cir.cmp(ne, %92, %94) : !s32i, !cir.bool loc(#loc397)
    cir.brcond %95 ^bb38, ^bb39 loc(#loc398)
  ^bb38:  // pred: ^bb37
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %97 = cir.call @close(%96) : (!s32i) -> !s32i loc(#loc149)
    cir.br ^bb39 loc(#loc144)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc144)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc399)
  ^bb41:  // pred: ^bb40
    %98 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %100 = cir.unary(minus, %99) nsw : !s32i, !s32i loc(#loc153)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc400)
    cir.brcond %101 ^bb42, ^bb43 loc(#loc401)
  ^bb42:  // pred: ^bb41
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc156)
    cir.br ^bb43 loc(#loc151)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc151)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc51)
  ^bb45:  // pred: ^bb44
    %104 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.call @badSink(%104) : (!s32i) -> () loc(#loc158)
    cir.return loc(#loc35)
  } loc(#loc355)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc403)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc161)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc404)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc163)
    cir.return loc(#loc160)
  } loc(#loc402)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc405)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc167)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc170, #loc171])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc408)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc407)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb1 loc(#loc409)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc410)
    cir.brcond %4 ^bb2, ^bb8 loc(#loc411)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc412)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc183)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc183)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc183)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc184)
    %11 = cir.binop(div, %9, %10) : !s32i loc(#loc413)
    %12 = cir.cmp(gt, %5, %11) : !s32i, !cir.bool loc(#loc414)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc415)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc173)
    %15 = cir.binop(mul, %13, %14) nsw : !s32i loc(#loc189)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc191)
    cir.br ^bb6 loc(#loc187)
  ^bb5:  // pred: ^bb3
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc167)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    cir.br ^bb6 loc(#loc181)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc181)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc176)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc176)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc169)
  } loc(#loc406)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc417)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc418)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc419)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc420)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc421)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc422)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc207)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc423)
    cir.br ^bb1 loc(#loc424)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc200)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc419)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc202)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    cir.br ^bb2 loc(#loc425)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc425)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc213)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc213)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc213)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc426)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc216)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc218)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc219)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    cir.br ^bb6 loc(#loc428)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc225)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc225)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc429)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc430)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc227)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc223)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc431)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc230)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc432)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc433)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc235)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc235)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc434)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc237)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc237)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc435)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc239)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc239)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc240)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc436)
    cir.br ^bb10 loc(#loc437)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc438)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc439)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc439)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc250)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc251)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc251)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc440)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc441)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc253)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc244)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc442)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc257)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc258)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc259)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc259)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc443)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc444)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc261)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc255)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc263)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc264)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc265)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    cir.br ^bb18 loc(#loc446)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc271)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc271)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc447)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc448)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc273)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc269)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc275)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc275)
    %60 = cir.const #cir.int<3> : !s32i loc(#loc276)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc276)
    %62 = cir.const #cir.int<4> : !u64i loc(#loc276)
    %63 = cir.binop(mul, %61, %62) : !u64i loc(#loc276)
    %64 = cir.const #cir.int<2> : !s32i loc(#loc276)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc276)
    %66 = cir.binop(add, %63, %65) : !u64i loc(#loc276)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc277)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc277)
    %69 = cir.binop(sub, %66, %68) : !u64i loc(#loc449)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc278)
    %71 = cir.call @recv(%57, %59, %69, %70) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc279)
    %72 = cir.cast(integral, %71 : !s64i), !s32i loc(#loc279)
    cir.store %72, %0 : !s32i, !cir.ptr<!s32i> loc(#loc450)
    cir.br ^bb22 loc(#loc451)
  ^bb22:  // pred: ^bb21
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc285)
    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc285)
    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc452)
    cir.brcond %76 ^bb23, ^bb24 loc(#loc286)
  ^bb23:  // pred: ^bb22
    %77 = cir.const #true loc(#loc286)
    cir.br ^bb29(%77 : !cir.bool) loc(#loc286)
  ^bb24:  // pred: ^bb22
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %79 = cir.const #cir.int<0> : !s32i loc(#loc288)
    %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc453)
    cir.brcond %80 ^bb25, ^bb26 loc(#loc286)
  ^bb25:  // pred: ^bb24
    %81 = cir.const #true loc(#loc286)
    cir.br ^bb27(%81 : !cir.bool) loc(#loc286)
  ^bb26:  // pred: ^bb24
    %82 = cir.const #false loc(#loc286)
    cir.br ^bb27(%82 : !cir.bool) loc(#loc286)
  ^bb27(%83: !cir.bool loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":223:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc286)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%83 : !cir.bool) loc(#loc286)
  ^bb29(%84: !cir.bool loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":223:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc286)
  ^bb30:  // pred: ^bb29
    cir.brcond %84 ^bb31, ^bb32 loc(#loc454)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc290)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc283)
  ^bb33:  // pred: ^bb32
    %85 = cir.const #cir.int<0> : !s32i loc(#loc291)
    %86 = cir.cast(integral, %85 : !s32i), !s8i loc(#loc291)
    %87 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %88 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc293)
    %89 = cir.ptr_stride(%88 : !cir.ptr<!s8i>, %87 : !s32i), !cir.ptr<!s8i> loc(#loc293)
    cir.store %86, %89 : !s8i, !cir.ptr<!s8i> loc(#loc455)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc294)
    %91 = cir.call @atoi(%90) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc295)
    cir.store %91, %5 : !s32i, !cir.ptr<!s32i> loc(#loc456)
    cir.br ^bb34 loc(#loc215)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc212)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc212)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc457)
  ^bb37:  // pred: ^bb36
    %92 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %93 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %94 = cir.unary(minus, %93) nsw : !s32i, !s32i loc(#loc301)
    %95 = cir.cmp(ne, %92, %94) : !s32i, !cir.bool loc(#loc458)
    cir.brcond %95 ^bb38, ^bb39 loc(#loc459)
  ^bb38:  // pred: ^bb37
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %97 = cir.call @close(%96) : (!s32i) -> !s32i loc(#loc304)
    cir.br ^bb39 loc(#loc299)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc299)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc460)
  ^bb41:  // pred: ^bb40
    %98 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc308)
    %100 = cir.unary(minus, %99) nsw : !s32i, !s32i loc(#loc308)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc461)
    cir.brcond %101 ^bb42, ^bb43 loc(#loc462)
  ^bb42:  // pred: ^bb41
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc311)
    cir.br ^bb43 loc(#loc306)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc306)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc210)
  ^bb45:  // pred: ^bb44
    %104 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    cir.call @goodB2GSink(%104) : (!s32i) -> () loc(#loc313)
    cir.return loc(#loc194)
  } loc(#loc416)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc316, #loc317])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc465)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc464)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.br ^bb1 loc(#loc466)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc324)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc467)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc468)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc319)
    %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc326)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc465)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc327)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc328)
    cir.br ^bb3 loc(#loc322)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc322)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc315)
  } loc(#loc463)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc470)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc333)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc471)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc335)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc336)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc472)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc338)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc339)
    cir.return loc(#loc330)
  } loc(#loc469)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":44:1)
#loc20 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":52:1)
#loc23 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":49:9)
#loc24 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":49:29)
#loc25 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":45:1)
#loc26 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":46:5)
#loc27 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":51:5)
#loc28 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":46:8)
#loc29 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":46:15)
#loc30 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":47:5)
#loc31 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":49:22)
#loc32 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":50:22)
#loc33 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":50:9)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":54:1)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":129:1)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":64:9)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":64:13)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":65:9)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":65:28)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":66:9)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":66:31)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":67:9)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":67:31)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":68:9)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":68:41)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":56:5)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":56:9)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":58:12)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":58:5)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":59:5)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":127:5)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":69:9)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":112:17)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":112:16)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":70:9)
#loc56 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":111:9)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":79:35)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":79:44)
#loc59 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":79:57)
#loc60 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":79:28)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":79:13)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":79:68)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":80:13)
#loc64 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":83:13)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":80:17)
#loc66 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":80:33)
#loc67 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":81:13)
#loc68 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":82:17)
#loc69 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":84:20)
#loc70 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":84:21)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":84:30)
#loc72 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":84:33)
#loc73 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":84:47)
#loc74 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":84:13)
#loc75 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":84:48)
#loc76 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":85:34)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":85:13)
#loc79 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":86:39)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":86:13)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":87:38)
#loc84 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":87:32)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":87:13)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":87:46)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":88:13)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":91:13)
#loc90 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":88:22)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":88:54)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":88:55)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":88:64)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":88:78)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":88:17)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":88:84)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":89:13)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":90:17)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":92:13)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":95:13)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":92:24)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":92:38)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":92:17)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":92:57)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":93:13)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":94:17)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":96:35)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":96:49)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":96:55)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":96:28)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":96:13)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":96:59)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":97:13)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":100:13)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":97:17)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":97:33)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":98:13)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":99:17)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":102:31)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":102:45)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":102:58)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":102:76)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":102:79)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":102:26)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":102:13)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":102:80)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":103:13)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":106:13)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":103:17)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":103:31)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":103:47)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":103:61)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":104:13)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":105:17)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":108:39)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":108:25)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":108:13)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":110:25)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":110:20)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":110:13)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":110:36)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":113:9)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":116:9)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":113:13)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":113:29)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":114:9)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":115:26)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":115:13)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":117:9)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":120:9)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":117:13)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":117:29)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":118:9)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":119:26)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":119:13)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":128:13)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":128:5)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":251:1)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":255:1)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":253:5)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":253:13)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":254:5)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":254:13)
#loc165 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc166 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc167 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":169:23)
#loc168 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":157:1)
#loc169 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":172:1)
#loc172 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":164:13)
#loc173 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":164:33)
#loc174 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":158:1)
#loc175 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":159:5)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":171:5)
#loc177 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":159:8)
#loc178 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":159:15)
#loc179 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":160:5)
#loc180 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":162:9)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":170:9)
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":162:13)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":162:21)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":162:29)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":162:30)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":163:9)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":166:9)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":168:9)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":164:26)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":165:26)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":165:13)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":169:13)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":174:1)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":249:1)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":184:9)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":184:13)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":185:9)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":185:28)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":186:9)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":186:31)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":187:9)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":187:31)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":188:9)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":188:41)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":176:5)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":176:9)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":178:12)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":178:5)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":179:5)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":247:5)
#loc211 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":189:9)
#loc212 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":232:17)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":232:16)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":190:9)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":231:9)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":199:35)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":199:44)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":199:57)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":199:28)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":199:13)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":199:68)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":200:13)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":203:13)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":200:17)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":200:33)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":201:13)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":202:17)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":204:20)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":204:21)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":204:30)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":204:33)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":204:47)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":204:13)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":204:48)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":205:34)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":205:13)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":206:39)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":206:13)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":207:38)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":207:32)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":207:13)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":207:46)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":208:13)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":211:13)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":208:22)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":208:54)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":208:55)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":208:64)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":208:78)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":208:17)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":208:84)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":209:13)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":210:17)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":212:13)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":215:13)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":212:24)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":212:38)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":212:17)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":212:57)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":213:13)
#loc261 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":214:17)
#loc262 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":216:35)
#loc263 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":216:49)
#loc264 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":216:55)
#loc265 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":216:28)
#loc266 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":216:13)
#loc267 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":216:59)
#loc268 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":217:13)
#loc269 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":220:13)
#loc270 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":217:17)
#loc271 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":217:33)
#loc272 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":218:13)
#loc273 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":219:17)
#loc274 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":222:31)
#loc275 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":222:45)
#loc276 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":222:58)
#loc277 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":222:76)
#loc278 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":222:79)
#loc279 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":222:26)
#loc280 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":222:13)
#loc281 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":222:80)
#loc282 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":223:13)
#loc283 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":226:13)
#loc284 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":223:17)
#loc285 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":223:31)
#loc287 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":223:47)
#loc288 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":223:61)
#loc289 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":224:13)
#loc290 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":225:17)
#loc291 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":228:39)
#loc292 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":228:25)
#loc293 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":228:13)
#loc294 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":230:25)
#loc295 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":230:20)
#loc296 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":230:13)
#loc297 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":230:36)
#loc298 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":233:9)
#loc299 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":236:9)
#loc300 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":233:13)
#loc301 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":233:29)
#loc302 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":234:9)
#loc303 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":235:26)
#loc304 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":235:13)
#loc305 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":237:9)
#loc306 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":240:9)
#loc307 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":237:13)
#loc308 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":237:29)
#loc309 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":238:9)
#loc310 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":239:26)
#loc311 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":239:13)
#loc312 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":248:17)
#loc313 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":248:5)
#loc314 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":136:1)
#loc315 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":144:1)
#loc318 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":141:9)
#loc319 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":141:29)
#loc320 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":137:1)
#loc321 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":138:5)
#loc322 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":143:5)
#loc323 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":138:8)
#loc324 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":138:15)
#loc325 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":139:5)
#loc326 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":141:22)
#loc327 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":142:22)
#loc328 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":142:9)
#loc329 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":146:1)
#loc330 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":154:1)
#loc331 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":148:5)
#loc332 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":148:9)
#loc333 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":150:12)
#loc334 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":150:5)
#loc335 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":152:13)
#loc336 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":152:12)
#loc337 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":152:5)
#loc338 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":153:17)
#loc339 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_41.c":153:5)
#loc340 = loc(fused[#loc1, #loc2])
#loc341 = loc(fused[#loc3, #loc4])
#loc342 = loc(fused[#loc5, #loc6])
#loc343 = loc(fused[#loc7, #loc8])
#loc344 = loc(fused[#loc9, #loc10])
#loc345 = loc(fused[#loc11, #loc12])
#loc346 = loc(fused[#loc13, #loc14])
#loc347 = loc(fused[#loc15, #loc16])
#loc348 = loc(fused[#loc17, #loc18])
#loc349 = loc(fused[#loc19, #loc20])
#loc351 = loc(fused[#loc23, #loc24])
#loc352 = loc(fused[#loc26, #loc27])
#loc353 = loc(fused[#loc28, #loc29])
#loc354 = loc(fused[#loc30, #loc27])
#loc355 = loc(fused[#loc34, #loc35])
#loc356 = loc(fused[#loc36, #loc37])
#loc357 = loc(fused[#loc38, #loc39])
#loc358 = loc(fused[#loc40, #loc41])
#loc359 = loc(fused[#loc42, #loc43])
#loc360 = loc(fused[#loc44, #loc45])
#loc361 = loc(fused[#loc46, #loc47])
#loc362 = loc(fused[#loc49, #loc48])
#loc363 = loc(fused[#loc50, #loc51])
#loc364 = loc(fused[#loc52, #loc53])
#loc365 = loc(fused[#loc55, #loc56])
#loc366 = loc(fused[#loc61, #loc62])
#loc367 = loc(fused[#loc63, #loc64])
#loc368 = loc(fused[#loc65, #loc66])
#loc369 = loc(fused[#loc67, #loc64])
#loc370 = loc(fused[#loc69, #loc70])
#loc371 = loc(fused[#loc72, #loc73])
#loc372 = loc(fused[#loc74, #loc75])
#loc373 = loc(fused[#loc78, #loc76])
#loc374 = loc(fused[#loc82, #loc79])
#loc375 = loc(fused[#loc86, #loc87])
#loc376 = loc(fused[#loc88, #loc89])
#loc377 = loc(fused[#loc91, #loc92])
#loc378 = loc(fused[#loc93, #loc94])
#loc379 = loc(fused[#loc95, #loc96])
#loc380 = loc(fused[#loc97, #loc89])
#loc381 = loc(fused[#loc99, #loc100])
#loc382 = loc(fused[#loc103, #loc104])
#loc383 = loc(fused[#loc105, #loc100])
#loc384 = loc(fused[#loc111, #loc112])
#loc385 = loc(fused[#loc113, #loc114])
#loc386 = loc(fused[#loc115, #loc116])
#loc387 = loc(fused[#loc117, #loc114])
#loc388 = loc(fused[#loc121, #loc122])
#loc389 = loc(fused[#loc125, #loc126])
#loc390 = loc(fused[#loc127, #loc128])
#loc391 = loc(fused[#loc129, #loc130])
#loc392 = loc(fused[#loc132, #loc133])
#loc393 = loc(fused[#loc134, #loc128])
#loc394 = loc(fused[#loc138, #loc136])
#loc395 = loc(fused[#loc141, #loc142])
#loc396 = loc(fused[#loc143, #loc144])
#loc397 = loc(fused[#loc145, #loc146])
#loc398 = loc(fused[#loc147, #loc144])
#loc399 = loc(fused[#loc150, #loc151])
#loc400 = loc(fused[#loc152, #loc153])
#loc401 = loc(fused[#loc154, #loc151])
#loc402 = loc(fused[#loc159, #loc160])
#loc403 = loc(fused[#loc161, #loc162])
#loc404 = loc(fused[#loc163, #loc164])
#loc405 = loc(fused[#loc165, #loc166])
#loc406 = loc(fused[#loc168, #loc169])
#loc408 = loc(fused[#loc172, #loc173])
#loc409 = loc(fused[#loc175, #loc176])
#loc410 = loc(fused[#loc177, #loc178])
#loc411 = loc(fused[#loc179, #loc176])
#loc412 = loc(fused[#loc180, #loc181])
#loc413 = loc(fused[#loc183, #loc184])
#loc414 = loc(fused[#loc182, #loc185])
#loc415 = loc(fused[#loc186, #loc187, #loc188, #loc181])
#loc416 = loc(fused[#loc193, #loc194])
#loc417 = loc(fused[#loc195, #loc196])
#loc418 = loc(fused[#loc197, #loc198])
#loc419 = loc(fused[#loc199, #loc200])
#loc420 = loc(fused[#loc201, #loc202])
#loc421 = loc(fused[#loc203, #loc204])
#loc422 = loc(fused[#loc205, #loc206])
#loc423 = loc(fused[#loc208, #loc207])
#loc424 = loc(fused[#loc209, #loc210])
#loc425 = loc(fused[#loc211, #loc212])
#loc426 = loc(fused[#loc214, #loc215])
#loc427 = loc(fused[#loc220, #loc221])
#loc428 = loc(fused[#loc222, #loc223])
#loc429 = loc(fused[#loc224, #loc225])
#loc430 = loc(fused[#loc226, #loc223])
#loc431 = loc(fused[#loc228, #loc229])
#loc432 = loc(fused[#loc231, #loc232])
#loc433 = loc(fused[#loc233, #loc234])
#loc434 = loc(fused[#loc236, #loc235])
#loc435 = loc(fused[#loc238, #loc237])
#loc436 = loc(fused[#loc241, #loc242])
#loc437 = loc(fused[#loc243, #loc244])
#loc438 = loc(fused[#loc246, #loc247])
#loc439 = loc(fused[#loc248, #loc249])
#loc440 = loc(fused[#loc250, #loc251])
#loc441 = loc(fused[#loc252, #loc244])
#loc442 = loc(fused[#loc254, #loc255])
#loc443 = loc(fused[#loc258, #loc259])
#loc444 = loc(fused[#loc260, #loc255])
#loc445 = loc(fused[#loc266, #loc267])
#loc446 = loc(fused[#loc268, #loc269])
#loc447 = loc(fused[#loc270, #loc271])
#loc448 = loc(fused[#loc272, #loc269])
#loc449 = loc(fused[#loc276, #loc277])
#loc450 = loc(fused[#loc280, #loc281])
#loc451 = loc(fused[#loc282, #loc283])
#loc452 = loc(fused[#loc284, #loc285])
#loc453 = loc(fused[#loc287, #loc288])
#loc454 = loc(fused[#loc289, #loc283])
#loc455 = loc(fused[#loc293, #loc291])
#loc456 = loc(fused[#loc296, #loc297])
#loc457 = loc(fused[#loc298, #loc299])
#loc458 = loc(fused[#loc300, #loc301])
#loc459 = loc(fused[#loc302, #loc299])
#loc460 = loc(fused[#loc305, #loc306])
#loc461 = loc(fused[#loc307, #loc308])
#loc462 = loc(fused[#loc309, #loc306])
#loc463 = loc(fused[#loc314, #loc315])
#loc465 = loc(fused[#loc318, #loc319])
#loc466 = loc(fused[#loc321, #loc322])
#loc467 = loc(fused[#loc323, #loc324])
#loc468 = loc(fused[#loc325, #loc322])
#loc469 = loc(fused[#loc329, #loc330])
#loc470 = loc(fused[#loc331, #loc332])
#loc471 = loc(fused[#loc334, #loc333])
#loc472 = loc(fused[#loc337, #loc335])
