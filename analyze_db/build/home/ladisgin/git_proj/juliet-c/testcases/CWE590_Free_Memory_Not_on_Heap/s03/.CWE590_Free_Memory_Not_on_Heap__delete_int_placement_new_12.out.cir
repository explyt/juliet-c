!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":105:10)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":105:14)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":105:20)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":105:32)
#loc161 = loc(fused[#loc103, #loc104])
#loc162 = loc(fused[#loc105, #loc106])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc119)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc120)
  cir.func private @printIntLine(!s32i) loc(#loc121)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc122)
  cir.func @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc125)
    cir.scope {
      %6 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc17)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc127)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["buffer"] {alignment = 1 : i64} loc(#loc130)
          %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc131)
          %10 = cir.const #cir.int<4> : !u64i loc(#loc132)
          %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc29)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
          cir.store %13, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc131)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc30)
          %15 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc133)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
          cir.store %16, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc134)
        } loc(#loc129)
      } else {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc136)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc137)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc136)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc137)
          cir.store %11, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc136)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc40)
          %13 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc138)
          %14 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
          cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
        } loc(#loc135)
      } loc(#loc128)
    } loc(#loc126)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc47)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc48)
    cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    cir.return loc(#loc10)
  } loc(#loc123)
  cir.func internal private @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    cir.scope {
      %6 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc58)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc144)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc147)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc148)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc147)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc148)
          cir.store %11, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc68)
          %13 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc149)
          %14 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
          cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
        } loc(#loc146)
      } else {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc152)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc153)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc152)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc153)
          cir.store %11, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc152)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc78)
          %13 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc154)
          %14 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
          cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc155)
        } loc(#loc151)
      } loc(#loc145)
    } loc(#loc143)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc85)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc86)
    cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    cir.return loc(#loc51)
  } loc(#loc140)
  cir.func @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12L7goodG2BEv() : () -> () loc(#loc90)
    cir.return loc(#loc89)
  } loc(#loc156)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc157)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc110)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.call @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_124goodEv() : () -> () loc(#loc112)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.call @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_123badEv() : () -> () loc(#loc115)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc117)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    cir.return %15 : !s32i loc(#loc163)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":26:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":52:1)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":28:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":28:11)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":29:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":29:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":30:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":48:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":30:8)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":30:33)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":31:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":39:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":41:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":32:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":38:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":34:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":34:36)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":35:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":35:44)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":35:32)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":35:36)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":36:27)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":36:14)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":36:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":37:20)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":37:13)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":42:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":47:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":44:13)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":44:36)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":44:32)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":45:27)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":45:14)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":45:13)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":46:20)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":46:13)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":49:19)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":49:18)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":49:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":51:12)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":26:6)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":60:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":85:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":62:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":62:11)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":63:12)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":63:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":64:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":81:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":64:8)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":64:33)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":65:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":72:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":74:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":66:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":71:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":68:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":68:36)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":68:32)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":69:27)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":69:14)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":69:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":70:20)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":70:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":75:9)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":80:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":77:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":77:36)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":77:32)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":78:27)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":78:14)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":78:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":79:20)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":79:13)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":82:19)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":82:18)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":82:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":84:12)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":60:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":87:1)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":90:1)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":89:5)
#loc91 = loc("/usr/include/stdlib.h":575:1)
#loc92 = loc("/usr/include/stdlib.h":575:41)
#loc93 = loc("/usr/include/time.h":76:1)
#loc94 = loc("/usr/include/time.h":76:38)
#loc95 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc96 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":110:15)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":112:15)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":115:15)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":117:15)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":105:1)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":120:1)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":106:1)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":108:27)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":108:22)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":108:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":110:5)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":111:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":112:5)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":115:5)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":116:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":117:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":119:12)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_12.cpp":119:5)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc11, #loc12])
#loc125 = loc(fused[#loc14, #loc13])
#loc126 = loc(fused[#loc15, #loc16])
#loc127 = loc(fused[#loc17, #loc18])
#loc128 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc129 = loc(fused[#loc22, #loc23])
#loc130 = loc(fused[#loc24, #loc25])
#loc131 = loc(fused[#loc26, #loc27])
#loc132 = loc(fused[#loc28, #loc27])
#loc133 = loc(fused[#loc32, #loc30])
#loc134 = loc(fused[#loc34, #loc33])
#loc135 = loc(fused[#loc35, #loc36])
#loc136 = loc(fused[#loc37, #loc38])
#loc137 = loc(fused[#loc39, #loc38])
#loc138 = loc(fused[#loc42, #loc40])
#loc139 = loc(fused[#loc44, #loc43])
#loc140 = loc(fused[#loc50, #loc51])
#loc141 = loc(fused[#loc52, #loc53])
#loc142 = loc(fused[#loc55, #loc54])
#loc143 = loc(fused[#loc56, #loc57])
#loc144 = loc(fused[#loc58, #loc59])
#loc145 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc146 = loc(fused[#loc63, #loc64])
#loc147 = loc(fused[#loc65, #loc66])
#loc148 = loc(fused[#loc67, #loc66])
#loc149 = loc(fused[#loc70, #loc68])
#loc150 = loc(fused[#loc72, #loc71])
#loc151 = loc(fused[#loc73, #loc74])
#loc152 = loc(fused[#loc75, #loc76])
#loc153 = loc(fused[#loc77, #loc76])
#loc154 = loc(fused[#loc80, #loc78])
#loc155 = loc(fused[#loc82, #loc81])
#loc156 = loc(fused[#loc88, #loc89])
#loc157 = loc(fused[#loc91, #loc92])
#loc158 = loc(fused[#loc93, #loc94])
#loc159 = loc(fused[#loc95, #loc96])
#loc160 = loc(fused[#loc101, #loc102])
#loc163 = loc(fused[#loc118, #loc117])
