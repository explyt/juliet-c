!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":26:25)
#loc10 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":26:32)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":67:30)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":67:37)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":105:30)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":105:37)
#loc265 = loc(fused[#loc9, #loc10])
#loc299 = loc(fused[#loc102, #loc103])
#loc327 = loc(fused[#loc185, #loc186])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc261)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc262)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc263)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc265)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc261)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc267)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc17)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc268)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc269)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc270)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
    cir.br ^bb3 loc(#loc272)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc273)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc274)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc29)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc31)
    %22 = cir.const #cir.int<50> : !s32i loc(#loc32)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc32)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc32)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc275)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc36)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %29 = cir.const #cir.int<50> : !s32i loc(#loc38)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc38)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc40)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc276)
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    cir.store %33, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc277)
    cir.return %34 : !cir.ptr<!s8i> loc(#loc277)
  } loc(#loc264)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc278)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc279)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc280)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memcpy_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc282)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc283)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc55)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc261)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %6 = cir.call @badSource(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc60)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
    cir.br ^bb1 loc(#loc287)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc66)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc67)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc67)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc288)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc71)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc72)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc77)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc77)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc290)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc291)
    cir.libc.memcpy %29 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc292)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc83)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc84)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc86)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc293)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc89)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb2 loc(#loc64)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc50)
  } loc(#loc281)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memcpy_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc295)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc296)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc92)
  } loc(#loc294)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc99)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc102, #loc103])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc101)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    cir.br ^bb1 loc(#loc300)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc297)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc107)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc301)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb8 loc(#loc109)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc112)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc113)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc302)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc303)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc304)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
    cir.br ^bb4 loc(#loc306)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc307)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc308)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc123)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc125)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
    cir.br ^bb6 loc(#loc119)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc119)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    %23 = cir.const #cir.int<65> : !s32i loc(#loc127)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc128)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc128)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc128)
    cir.libc.memset %27 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc309)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc132)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc134)
    %34 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc310)
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.store %35, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc311)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc311)
    cir.return %36 : !cir.ptr<!s8i> loc(#loc311)
  } loc(#loc298)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc313)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc145)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc297)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %6 = cir.call @goodG2B1Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc150)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc317)
    cir.br ^bb1 loc(#loc318)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc155)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc156)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc157)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc157)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc319)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc161)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc161)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc162)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc162)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc164)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc320)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc165)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc165)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc167)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc167)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc321)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc322)
    cir.libc.memcpy %29 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc323)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc173)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc174)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc174)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc176)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc176)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc324)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc179)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc180)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc179)
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc140)
  } loc(#loc312)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc325)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc185, #loc186])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc327)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc184)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.br ^bb1 loc(#loc328)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc325)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc190)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc329)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc192)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc193)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc193)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc330)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc331)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc192)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc332)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    cir.br ^bb3 loc(#loc334)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc201)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc335)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc336)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc203)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc205)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc203)
    cir.br ^bb5 loc(#loc199)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc199)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc206)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc207)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc208)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc208)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc208)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc337)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc212)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc212)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc214)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc214)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc216)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc338)
    cir.br ^bb7 loc(#loc189)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc189)
  ^bb8:  // pred: ^bb7
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
    cir.store %33, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc339)
    cir.return %34 : !cir.ptr<!s8i> loc(#loc339)
  } loc(#loc326)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc341)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc342)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc225)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc343)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc325)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
    %6 = cir.call @goodG2B2Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc230)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc345)
    cir.br ^bb1 loc(#loc346)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc235)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc235)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc236)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc237)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc237)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc237)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc347)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc241)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc241)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc242)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc242)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc244)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc348)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc245)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc245)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc246)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc247)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc248)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc247)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc349)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc350)
    cir.libc.memcpy %29 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc351)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc253)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc253)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc254)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc254)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc256)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc256)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc352)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc257)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc258)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc259)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc260)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc259)
    cir.br ^bb2 loc(#loc234)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc220)
  } loc(#loc340)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_21.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":24:1)
#loc2 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":24:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":26:1)
#loc8 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":37:1)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":27:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":28:5)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":35:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":28:8)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":29:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":31:24)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":31:31)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":31:34)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":31:45)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":31:46)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":31:9)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":32:9)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":32:37)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":32:13)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":32:21)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":32:27)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":32:28)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":32:34)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":32:33)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":33:16)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":33:22)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":33:27)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":33:30)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":33:9)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":33:31)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":34:22)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":34:9)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":34:14)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":34:17)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":34:18)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":36:12)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":36:5)
#loc43 = loc("/usr/include/string.h":407:1)
#loc44 = loc("/usr/include/string.h":408:33)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("/usr/include/stdlib.h":687:1)
#loc48 = loc("/usr/include/stdlib.h":687:32)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":39:1)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":56:1)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":46:9)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":46:22)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":41:5)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":41:12)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":42:12)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":42:5)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":43:17)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":43:5)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":44:22)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":44:12)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":44:5)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":44:26)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":45:5)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":55:5)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":47:16)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":47:22)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":47:27)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":47:31)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":47:9)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":47:32)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":48:23)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":48:14)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":48:18)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":48:9)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":51:16)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":51:22)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":51:28)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":51:35)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":51:41)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":51:52)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":51:9)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":51:53)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":52:23)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":52:14)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":52:18)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":52:9)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":53:19)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":53:9)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":54:9)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":54:14)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":137:1)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":141:1)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":139:5)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":139:14)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":140:5)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":140:14)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":63:1)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":63:29)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":72:19)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":67:1)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":83:1)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":68:1)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":69:5)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":81:5)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":69:8)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":70:5)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":73:5)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":75:5)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":72:9)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":77:24)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":77:31)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":77:35)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":77:46)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":77:47)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":77:9)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":78:9)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":78:37)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":78:13)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":78:21)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":78:27)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":78:28)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":78:34)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":78:33)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":79:16)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":79:22)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":79:27)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":79:31)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":79:9)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":79:32)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":80:23)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":80:9)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":80:14)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":80:18)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":80:19)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":82:12)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":82:5)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":85:1)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":102:1)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":92:9)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":92:22)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":87:5)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":87:12)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":88:12)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":88:5)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":89:22)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":89:5)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":90:27)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":90:12)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":90:5)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":90:31)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":91:5)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":101:5)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":93:16)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":93:22)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":93:27)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":93:31)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":93:9)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":93:32)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":94:23)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":94:14)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":94:18)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":94:9)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":97:16)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":97:22)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":97:28)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":97:35)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":97:41)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":97:52)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":97:9)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":97:53)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":98:23)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":98:14)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":98:18)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":98:9)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":99:19)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":99:9)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":100:9)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":100:14)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":64:1)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":64:29)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":105:1)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":116:1)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":106:1)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":107:5)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":114:5)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":107:8)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":108:5)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":110:24)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":110:31)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":110:35)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":110:46)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":110:47)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":110:9)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":111:9)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":111:37)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":111:13)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":111:21)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":111:27)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":111:28)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":111:34)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":111:33)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":112:16)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":112:22)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":112:27)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":112:31)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":112:9)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":112:32)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":113:23)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":113:9)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":113:14)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":113:18)
#loc216 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":113:19)
#loc217 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":115:12)
#loc218 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":115:5)
#loc219 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":118:1)
#loc220 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":135:1)
#loc221 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":125:9)
#loc222 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":125:22)
#loc223 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":120:5)
#loc224 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":120:12)
#loc225 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":121:12)
#loc226 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":121:5)
#loc227 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":122:22)
#loc228 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":122:5)
#loc229 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":123:27)
#loc230 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":123:12)
#loc231 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":123:5)
#loc232 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":123:31)
#loc233 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":124:5)
#loc234 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":134:5)
#loc235 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":126:16)
#loc236 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":126:22)
#loc237 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":126:27)
#loc238 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":126:31)
#loc239 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":126:9)
#loc240 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":126:32)
#loc241 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":127:23)
#loc242 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":127:14)
#loc243 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":127:18)
#loc244 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":127:9)
#loc245 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":130:16)
#loc246 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":130:22)
#loc247 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":130:28)
#loc248 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":130:35)
#loc249 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":130:41)
#loc250 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":130:52)
#loc251 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":130:9)
#loc252 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":130:53)
#loc253 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":131:23)
#loc254 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":131:14)
#loc255 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":131:18)
#loc256 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":131:9)
#loc257 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":132:19)
#loc258 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":132:9)
#loc259 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":133:9)
#loc260 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_21.c":133:14)
#loc261 = loc(fused[#loc1, #loc2])
#loc262 = loc(fused[#loc3, #loc4])
#loc263 = loc(fused[#loc5, #loc6])
#loc264 = loc(fused[#loc7, #loc8])
#loc266 = loc(fused[#loc12, #loc13])
#loc267 = loc(fused[#loc15, #loc13])
#loc268 = loc(fused[#loc18, #loc19])
#loc269 = loc(fused[#loc17, #loc19])
#loc270 = loc(fused[#loc16, #loc20])
#loc271 = loc(fused[#loc21, #loc20])
#loc272 = loc(fused[#loc22, #loc23])
#loc273 = loc(fused[#loc24, #loc25])
#loc274 = loc(fused[#loc26, #loc23])
#loc275 = loc(fused[#loc34, #loc35])
#loc276 = loc(fused[#loc37, #loc36])
#loc277 = loc(fused[#loc42, #loc41])
#loc278 = loc(fused[#loc43, #loc44])
#loc279 = loc(fused[#loc45, #loc46])
#loc280 = loc(fused[#loc47, #loc48])
#loc281 = loc(fused[#loc49, #loc50])
#loc282 = loc(fused[#loc51, #loc52])
#loc283 = loc(fused[#loc53, #loc54])
#loc284 = loc(fused[#loc56, #loc55])
#loc285 = loc(fused[#loc58, #loc57])
#loc286 = loc(fused[#loc61, #loc62])
#loc287 = loc(fused[#loc63, #loc64])
#loc288 = loc(fused[#loc69, #loc70])
#loc289 = loc(fused[#loc74, #loc71])
#loc290 = loc(fused[#loc79, #loc80])
#loc291 = loc(fused[#loc77, #loc80])
#loc292 = loc(fused[#loc81, #loc82])
#loc293 = loc(fused[#loc86, #loc83])
#loc294 = loc(fused[#loc91, #loc92])
#loc295 = loc(fused[#loc93, #loc94])
#loc296 = loc(fused[#loc95, #loc96])
#loc297 = loc(fused[#loc97, #loc98])
#loc298 = loc(fused[#loc100, #loc101])
#loc300 = loc(fused[#loc105, #loc106])
#loc301 = loc(fused[#loc108, #loc109, #loc110, #loc106])
#loc302 = loc(fused[#loc114, #loc115])
#loc303 = loc(fused[#loc113, #loc115])
#loc304 = loc(fused[#loc112, #loc116])
#loc305 = loc(fused[#loc117, #loc116])
#loc306 = loc(fused[#loc118, #loc119])
#loc307 = loc(fused[#loc120, #loc121])
#loc308 = loc(fused[#loc122, #loc119])
#loc309 = loc(fused[#loc130, #loc131])
#loc310 = loc(fused[#loc133, #loc132])
#loc311 = loc(fused[#loc138, #loc137])
#loc312 = loc(fused[#loc139, #loc140])
#loc313 = loc(fused[#loc141, #loc142])
#loc314 = loc(fused[#loc143, #loc144])
#loc315 = loc(fused[#loc146, #loc145])
#loc316 = loc(fused[#loc148, #loc147])
#loc317 = loc(fused[#loc151, #loc152])
#loc318 = loc(fused[#loc153, #loc154])
#loc319 = loc(fused[#loc159, #loc160])
#loc320 = loc(fused[#loc164, #loc161])
#loc321 = loc(fused[#loc169, #loc170])
#loc322 = loc(fused[#loc167, #loc170])
#loc323 = loc(fused[#loc171, #loc172])
#loc324 = loc(fused[#loc176, #loc173])
#loc325 = loc(fused[#loc181, #loc182])
#loc326 = loc(fused[#loc183, #loc184])
#loc328 = loc(fused[#loc188, #loc189])
#loc329 = loc(fused[#loc191, #loc189])
#loc330 = loc(fused[#loc194, #loc195])
#loc331 = loc(fused[#loc193, #loc195])
#loc332 = loc(fused[#loc192, #loc196])
#loc333 = loc(fused[#loc197, #loc196])
#loc334 = loc(fused[#loc198, #loc199])
#loc335 = loc(fused[#loc200, #loc201])
#loc336 = loc(fused[#loc202, #loc199])
#loc337 = loc(fused[#loc210, #loc211])
#loc338 = loc(fused[#loc213, #loc212])
#loc339 = loc(fused[#loc218, #loc217])
#loc340 = loc(fused[#loc219, #loc220])
#loc341 = loc(fused[#loc221, #loc222])
#loc342 = loc(fused[#loc223, #loc224])
#loc343 = loc(fused[#loc226, #loc225])
#loc344 = loc(fused[#loc228, #loc227])
#loc345 = loc(fused[#loc231, #loc232])
#loc346 = loc(fused[#loc233, #loc234])
#loc347 = loc(fused[#loc239, #loc240])
#loc348 = loc(fused[#loc244, #loc241])
#loc349 = loc(fused[#loc249, #loc250])
#loc350 = loc(fused[#loc247, #loc250])
#loc351 = loc(fused[#loc251, #loc252])
#loc352 = loc(fused[#loc256, #loc253])
