!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":36:66)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":36:73)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":55:70)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":55:77)
#loc55 = loc(fused[#loc10, #loc11])
#loc62 = loc(fused[#loc31, #loc32])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc51)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc52)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc53)
  cir.func  @CWE78_OS_Command_Injection__char_console_system_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc55)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc56)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc57)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc16)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    cir.scope {
      %7 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %8 = cir.call @system(%7) : (!cir.ptr<!s8i>) -> !s32i loc(#loc22)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc23)
      %10 = cir.cmp(ne, %8, %9) : !s32i, !s32i loc(#loc59)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc24)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc5)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc5)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc26)
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc28)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc60)
    } loc(#loc58)
    cir.return loc(#loc9)
  } loc(#loc54)
  cir.func  @CWE78_OS_Command_Injection__char_console_system_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc31, #loc32])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc62)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc63)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc64)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc37)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc34)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
    cir.scope {
      %7 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %8 = cir.call @system(%7) : (!cir.ptr<!s8i>) -> !s32i loc(#loc43)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %10 = cir.cmp(ne, %8, %9) : !s32i, !s32i loc(#loc66)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc45)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc47)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc49)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc50)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
      } loc(#loc67)
    } loc(#loc65)
    cir.return loc(#loc30)
  } loc(#loc61)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_64b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":923:1)
#loc2 = loc("/usr/include/stdlib.h":923:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":45:19)
#loc6 = loc("/usr/include/stdlib.h":756:1)
#loc7 = loc("/usr/include/stdlib.h":756:70)
#loc8 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":36:1)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":48:1)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":39:5)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":39:34)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":41:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":41:28)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":37:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":41:21)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":41:20)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":43:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":47:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":43:16)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":43:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":43:25)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":43:22)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":44:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":45:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":46:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":46:14)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":55:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":67:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":58:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":58:34)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":60:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":60:28)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":56:1)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":60:21)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":60:20)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":62:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":66:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":62:16)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":62:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":62:25)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":62:22)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":63:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":64:19)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":64:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":65:9)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_64b.c":65:14)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc6, #loc7])
#loc54 = loc(fused[#loc8, #loc9])
#loc56 = loc(fused[#loc12, #loc13])
#loc57 = loc(fused[#loc14, #loc15])
#loc58 = loc(fused[#loc19, #loc20])
#loc59 = loc(fused[#loc22, #loc23])
#loc60 = loc(fused[#loc25, #loc20])
#loc61 = loc(fused[#loc29, #loc30])
#loc63 = loc(fused[#loc33, #loc34])
#loc64 = loc(fused[#loc35, #loc36])
#loc65 = loc(fused[#loc40, #loc41])
#loc66 = loc(fused[#loc43, #loc44])
#loc67 = loc(fused[#loc46, #loc41])
