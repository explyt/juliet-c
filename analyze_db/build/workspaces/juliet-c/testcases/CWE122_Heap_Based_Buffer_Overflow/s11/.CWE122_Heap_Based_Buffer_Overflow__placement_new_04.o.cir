!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc70 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.record<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc301)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc302)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc303)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc304)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_043badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc306)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc307)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc308)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc309)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc20)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc310)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc311)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc308)
    cir.br ^bb1 loc(#loc312)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc313)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc314)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc30)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb3 loc(#loc24)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc315)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc316)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
    cir.br ^bb5 loc(#loc317)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc37)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc318)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc319)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc39)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc41)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc35)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc320)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc321)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.store %25, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
    cir.br ^bb11 loc(#loc43)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc43)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc323)
  ^bb13:  // pred: ^bb12
    %26 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc50)
    cir.brcond %27 ^bb14, ^bb17 loc(#loc324)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc325)
  ^bb15:  // pred: ^bb14
    %28 = cir.const #cir.int<8> : !u64i loc(#loc326)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc326)
    cir.call @_ZN12TwoIntsClassC2Ev(%31) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc13)
    cir.store %31, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc306)
    %32 = cir.const #cir.int<5> : !s32i loc(#loc56)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc57)
    %34 = cir.get_member %33[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %32, %34 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    %35 = cir.const #cir.int<10> : !s32i loc(#loc59)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
    %37 = cir.get_member %36[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc61)
    cir.store %35, %37 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc62)
    %39 = cir.get_member %38[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc58)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc64)
    %41 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc65)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
    cir.br ^bb16 loc(#loc53)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc49)
  ^bb17:  // 2 preds: ^bb13, ^bb16
    cir.br ^bb18 loc(#loc49)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc11)
  } loc(#loc305)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc329)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc69)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc70)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc70)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc70)
    cir.return loc(#loc70)
  } loc(#loc70)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_04L8goodB2G1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc331)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc332)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc333)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc334)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc81)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc335)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc81)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc336)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    cir.br ^bb1 loc(#loc337)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc87)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc338)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc339)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc89)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc91)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb3 loc(#loc85)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc340)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc341)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
    cir.br ^bb5 loc(#loc342)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc98)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc343)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc344)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc100)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc102)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
    cir.br ^bb7 loc(#loc96)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc96)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc345)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc346)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.store %25, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc347)
    cir.br ^bb11 loc(#loc104)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc104)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc348)
  ^bb13:  // pred: ^bb12
    %26 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc111)
    cir.brcond %27 ^bb14, ^bb15 loc(#loc349)
  ^bb14:  // pred: ^bb13
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb18 loc(#loc113)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc350)
  ^bb16:  // pred: ^bb15
    %30 = cir.const #cir.int<4> : !u64i loc(#loc351)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc351)
    cir.call @_ZN11OneIntClassC2Ev(%33) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr) loc(#loc74)
    cir.store %33, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc331)
    %34 = cir.const #cir.int<5> : !s32i loc(#loc120)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc121)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc122)
    cir.store %34, %36 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc123)
    %38 = cir.get_member %37[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc122)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc125)
    %40 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc126)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc126)
    cir.br ^bb17 loc(#loc117)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc110)
  ^bb18:  // 2 preds: ^bb14, ^bb17
    cir.br ^bb19 loc(#loc110)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc72)
  } loc(#loc330)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_04L8goodB2G2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc354)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc355)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc356)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc357)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc138)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc358)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc359)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
    cir.br ^bb1 loc(#loc360)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc144)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc361)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc362)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc146)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc148)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc146)
    cir.br ^bb3 loc(#loc142)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc142)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc363)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc364)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc357)
    cir.br ^bb5 loc(#loc365)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc155)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc366)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc367)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc157)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc159)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
    cir.br ^bb7 loc(#loc153)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc368)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc369)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    cir.store %25, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc370)
    cir.br ^bb11 loc(#loc161)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc161)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc371)
  ^bb13:  // pred: ^bb12
    %26 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc168)
    cir.brcond %27 ^bb14, ^bb17 loc(#loc372)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc373)
  ^bb15:  // pred: ^bb14
    %28 = cir.const #cir.int<4> : !u64i loc(#loc374)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc173)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc374)
    cir.call @_ZN11OneIntClassC2Ev(%31) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr) loc(#loc131)
    cir.store %31, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc354)
    %32 = cir.const #cir.int<5> : !s32i loc(#loc174)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc175)
    %34 = cir.get_member %33[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc122)
    cir.store %32, %34 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc176)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc122)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc178)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc179)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc180)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc179)
    cir.br ^bb16 loc(#loc171)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc167)
  ^bb17:  // 2 preds: ^bb13, ^bb16
    cir.br ^bb18 loc(#loc167)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc129)
  } loc(#loc353)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_04L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc377)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc378)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc379)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc380)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc191)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc381)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc191)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc382)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc379)
    cir.br ^bb1 loc(#loc383)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc197)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc384)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc385)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc199)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc201)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc199)
    cir.br ^bb3 loc(#loc195)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc195)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc386)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc204)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc387)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc380)
    cir.br ^bb5 loc(#loc388)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc208)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc389)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc390)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc210)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc212)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc210)
    cir.br ^bb7 loc(#loc206)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc206)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc391)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc215)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc215)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc392)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc219)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc219)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    cir.br ^bb12 loc(#loc217)
  ^bb11:  // pred: ^bb9
    %27 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
    cir.store %27, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc393)
    cir.br ^bb12 loc(#loc214)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc214)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc394)
  ^bb14:  // pred: ^bb13
    %28 = cir.const #cir.int<1> : !s32i loc(#loc225)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc225)
    cir.brcond %29 ^bb15, ^bb18 loc(#loc395)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc396)
  ^bb16:  // pred: ^bb15
    %30 = cir.const #cir.int<8> : !u64i loc(#loc397)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc230)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc397)
    cir.call @_ZN12TwoIntsClassC2Ev(%33) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc184)
    cir.store %33, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc377)
    %34 = cir.const #cir.int<5> : !s32i loc(#loc231)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc232)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %34, %36 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc233)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc234)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc61)
    cir.store %37, %39 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc235)
    %41 = cir.get_member %40[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc58)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc237)
    %43 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc238)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc239)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc238)
    cir.br ^bb17 loc(#loc228)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc224)
  ^bb18:  // 2 preds: ^bb14, ^bb17
    cir.br ^bb19 loc(#loc224)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc182)
  } loc(#loc376)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_04L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc401)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc402)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc403)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc404)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc250)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc405)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc250)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc406)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc403)
    cir.br ^bb1 loc(#loc407)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc255)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc256)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc408)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc409)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc258)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc259)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc260)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc258)
    cir.br ^bb3 loc(#loc254)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc254)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc410)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc263)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc411)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc404)
    cir.br ^bb5 loc(#loc412)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc267)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc413)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc414)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc269)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc270)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc271)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc269)
    cir.br ^bb7 loc(#loc265)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc265)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc415)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<1> : !s32i loc(#loc274)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc274)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc416)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc276)
    cir.store %25, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc417)
    cir.br ^bb11 loc(#loc273)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc273)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc418)
  ^bb13:  // pred: ^bb12
    %26 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc280)
    cir.brcond %27 ^bb14, ^bb17 loc(#loc419)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc420)
  ^bb15:  // pred: ^bb14
    %28 = cir.const #cir.int<8> : !u64i loc(#loc421)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc285)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc285)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc421)
    cir.call @_ZN12TwoIntsClassC2Ev(%31) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc243)
    cir.store %31, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc401)
    %32 = cir.const #cir.int<5> : !s32i loc(#loc286)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc287)
    %34 = cir.get_member %33[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %32, %34 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    %35 = cir.const #cir.int<10> : !s32i loc(#loc288)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc289)
    %37 = cir.get_member %36[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc61)
    cir.store %35, %37 : !s32i, !cir.ptr<!s32i> loc(#loc423)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc290)
    %39 = cir.get_member %38[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc58)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc292)
    %41 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc293)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc294)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc294)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc293)
    cir.br ^bb16 loc(#loc283)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc279)
  ^bb17:  // 2 preds: ^bb13, ^bb16
    cir.br ^bb18 loc(#loc279)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc241)
  } loc(#loc400)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_044goodEv() extra(#fn_attr2) {
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_04L8goodB2G1Ev() : () -> () loc(#loc297)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_04L8goodB2G2Ev() : () -> () loc(#loc298)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_04L8goodG2B1Ev() : () -> () loc(#loc299)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_04L8goodG2B2Ev() : () -> () loc(#loc300)
    cir.return loc(#loc296)
  } loc(#loc424)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":31:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":60:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":51:13)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":51:49)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":33:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":33:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":34:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":34:62)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":36:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":36:64)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":34:36)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":34:43)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":34:61)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":35:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":35:42)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":35:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":35:26)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":35:32)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":35:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":35:39)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":35:38)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":36:44)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":36:63)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":36:37)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":37:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":37:43)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":37:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":37:27)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":37:33)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":37:34)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":37:40)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":37:39)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":38:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":42:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":38:8)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":39:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":41:16)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":41:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":43:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":59:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":43:8)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":44:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":45:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":58:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":51:39)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":51:43)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":53:32)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":53:13)
#loc58 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":54:32)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":54:13)
#loc61 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":55:26)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":55:36)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":55:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":57:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":57:18)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc68 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":82:19)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":67:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":99:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":92:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":92:48)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":69:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":69:12)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":70:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":70:62)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":72:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":72:64)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":70:36)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":70:43)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":70:61)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":71:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":71:42)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":71:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":71:26)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":71:32)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":71:33)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":71:39)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":71:38)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":72:44)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":72:63)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":72:37)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":73:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":73:43)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":73:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":73:27)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":73:33)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":73:34)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":73:40)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":73:39)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":74:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":78:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":74:8)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":75:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":77:16)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":77:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":79:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":98:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":79:8)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":80:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":83:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":85:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":82:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":86:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":97:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":92:38)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":92:42)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":94:32)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":94:13)
#loc122 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":95:26)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":95:36)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":95:13)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":96:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":96:18)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":102:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":129:1)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":122:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":122:48)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":104:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":104:12)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":105:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":105:62)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":107:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":107:64)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":105:36)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":105:43)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":105:61)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":106:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":106:42)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":106:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":106:26)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":106:32)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":106:33)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":106:39)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":106:38)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":107:44)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":107:63)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":107:37)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":108:5)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":108:43)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":108:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":108:27)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":108:33)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":108:34)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":108:40)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":108:39)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":109:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":113:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":109:8)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":110:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":112:16)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":112:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":114:5)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":128:5)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":114:8)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":115:5)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":116:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":127:9)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":122:38)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":122:42)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":124:32)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":124:13)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":125:26)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":125:36)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":125:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":126:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":126:18)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":132:1)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":166:1)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":157:13)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":157:49)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":134:5)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":134:12)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":135:5)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":135:62)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":137:5)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":137:64)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":135:36)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":135:43)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":135:61)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":136:5)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":136:42)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":136:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":136:26)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":136:32)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":136:33)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":136:39)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":136:38)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":137:44)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":137:63)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":137:37)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":138:5)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":138:43)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":138:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":138:27)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":138:33)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":138:34)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":138:40)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":138:39)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":139:5)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":148:5)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":139:8)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":140:5)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":143:5)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":145:5)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":142:19)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":142:9)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":147:16)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":147:9)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":149:5)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":165:5)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":149:8)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":150:5)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":151:9)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":164:9)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":157:39)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":157:43)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":159:32)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":159:13)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":160:32)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":160:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":161:26)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":161:36)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":161:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":163:13)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":163:18)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":169:1)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":198:1)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":189:13)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":189:49)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":171:5)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":171:12)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":172:5)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":172:62)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":174:5)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":174:64)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":172:36)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":172:43)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":172:61)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":173:5)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":173:42)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":173:9)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":173:26)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":173:32)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":173:33)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":173:39)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":173:38)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":174:44)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":174:63)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":174:37)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":175:5)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":175:43)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":175:9)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":175:27)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":175:33)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":175:34)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":175:40)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":175:39)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":176:5)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":180:5)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":176:8)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":177:5)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":179:16)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":179:9)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":181:5)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":197:5)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":181:8)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":182:5)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":183:9)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":196:9)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":189:39)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":189:43)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":191:32)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":191:13)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":192:32)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":192:13)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":193:26)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":193:36)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":193:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":195:13)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":195:18)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":200:1)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":206:1)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":202:5)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":203:5)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":204:5)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_04.cpp":205:5)
#loc301 = loc(fused[#loc1, #loc2])
#loc302 = loc(fused[#loc3, #loc4])
#loc303 = loc(fused[#loc6, #loc7])
#loc304 = loc(fused[#loc8, #loc9])
#loc305 = loc(fused[#loc10, #loc11])
#loc306 = loc(fused[#loc12, #loc13])
#loc307 = loc(fused[#loc14, #loc15])
#loc308 = loc(fused[#loc16, #loc17])
#loc309 = loc(fused[#loc18, #loc19])
#loc310 = loc(fused[#loc21, #loc22])
#loc311 = loc(fused[#loc20, #loc17])
#loc312 = loc(fused[#loc23, #loc24])
#loc313 = loc(fused[#loc25, #loc26])
#loc314 = loc(fused[#loc27, #loc24])
#loc315 = loc(fused[#loc31, #loc32])
#loc316 = loc(fused[#loc33, #loc19])
#loc317 = loc(fused[#loc34, #loc35])
#loc318 = loc(fused[#loc36, #loc37])
#loc319 = loc(fused[#loc38, #loc35])
#loc320 = loc(fused[#loc42, #loc43])
#loc321 = loc(fused[#loc45, #loc43])
#loc322 = loc(fused[#loc47, #loc46])
#loc323 = loc(fused[#loc48, #loc49])
#loc324 = loc(fused[#loc51, #loc49])
#loc325 = loc(fused[#loc52, #loc53])
#loc326 = loc(fused[#loc54, #loc13])
#loc327 = loc(fused[#loc57, #loc56])
#loc328 = loc(fused[#loc60, #loc59])
#loc329 = loc(fused[#loc67, #loc68])
#loc330 = loc(fused[#loc71, #loc72])
#loc331 = loc(fused[#loc73, #loc74])
#loc332 = loc(fused[#loc75, #loc76])
#loc333 = loc(fused[#loc77, #loc78])
#loc334 = loc(fused[#loc79, #loc80])
#loc335 = loc(fused[#loc82, #loc83])
#loc336 = loc(fused[#loc81, #loc78])
#loc337 = loc(fused[#loc84, #loc85])
#loc338 = loc(fused[#loc86, #loc87])
#loc339 = loc(fused[#loc88, #loc85])
#loc340 = loc(fused[#loc92, #loc93])
#loc341 = loc(fused[#loc94, #loc80])
#loc342 = loc(fused[#loc95, #loc96])
#loc343 = loc(fused[#loc97, #loc98])
#loc344 = loc(fused[#loc99, #loc96])
#loc345 = loc(fused[#loc103, #loc104])
#loc346 = loc(fused[#loc106, #loc104])
#loc347 = loc(fused[#loc108, #loc107])
#loc348 = loc(fused[#loc109, #loc110])
#loc349 = loc(fused[#loc112, #loc113, #loc114, #loc110])
#loc350 = loc(fused[#loc116, #loc117])
#loc351 = loc(fused[#loc118, #loc74])
#loc352 = loc(fused[#loc121, #loc120])
#loc353 = loc(fused[#loc128, #loc129])
#loc354 = loc(fused[#loc130, #loc131])
#loc355 = loc(fused[#loc132, #loc133])
#loc356 = loc(fused[#loc134, #loc135])
#loc357 = loc(fused[#loc136, #loc137])
#loc358 = loc(fused[#loc139, #loc140])
#loc359 = loc(fused[#loc138, #loc135])
#loc360 = loc(fused[#loc141, #loc142])
#loc361 = loc(fused[#loc143, #loc144])
#loc362 = loc(fused[#loc145, #loc142])
#loc363 = loc(fused[#loc149, #loc150])
#loc364 = loc(fused[#loc151, #loc137])
#loc365 = loc(fused[#loc152, #loc153])
#loc366 = loc(fused[#loc154, #loc155])
#loc367 = loc(fused[#loc156, #loc153])
#loc368 = loc(fused[#loc160, #loc161])
#loc369 = loc(fused[#loc163, #loc161])
#loc370 = loc(fused[#loc165, #loc164])
#loc371 = loc(fused[#loc166, #loc167])
#loc372 = loc(fused[#loc169, #loc167])
#loc373 = loc(fused[#loc170, #loc171])
#loc374 = loc(fused[#loc172, #loc131])
#loc375 = loc(fused[#loc175, #loc174])
#loc376 = loc(fused[#loc181, #loc182])
#loc377 = loc(fused[#loc183, #loc184])
#loc378 = loc(fused[#loc185, #loc186])
#loc379 = loc(fused[#loc187, #loc188])
#loc380 = loc(fused[#loc189, #loc190])
#loc381 = loc(fused[#loc192, #loc193])
#loc382 = loc(fused[#loc191, #loc188])
#loc383 = loc(fused[#loc194, #loc195])
#loc384 = loc(fused[#loc196, #loc197])
#loc385 = loc(fused[#loc198, #loc195])
#loc386 = loc(fused[#loc202, #loc203])
#loc387 = loc(fused[#loc204, #loc190])
#loc388 = loc(fused[#loc205, #loc206])
#loc389 = loc(fused[#loc207, #loc208])
#loc390 = loc(fused[#loc209, #loc206])
#loc391 = loc(fused[#loc213, #loc214])
#loc392 = loc(fused[#loc216, #loc217, #loc218, #loc214])
#loc393 = loc(fused[#loc222, #loc221])
#loc394 = loc(fused[#loc223, #loc224])
#loc395 = loc(fused[#loc226, #loc224])
#loc396 = loc(fused[#loc227, #loc228])
#loc397 = loc(fused[#loc229, #loc184])
#loc398 = loc(fused[#loc232, #loc231])
#loc399 = loc(fused[#loc234, #loc233])
#loc400 = loc(fused[#loc240, #loc241])
#loc401 = loc(fused[#loc242, #loc243])
#loc402 = loc(fused[#loc244, #loc245])
#loc403 = loc(fused[#loc246, #loc247])
#loc404 = loc(fused[#loc248, #loc249])
#loc405 = loc(fused[#loc251, #loc252])
#loc406 = loc(fused[#loc250, #loc247])
#loc407 = loc(fused[#loc253, #loc254])
#loc408 = loc(fused[#loc255, #loc256])
#loc409 = loc(fused[#loc257, #loc254])
#loc410 = loc(fused[#loc261, #loc262])
#loc411 = loc(fused[#loc263, #loc249])
#loc412 = loc(fused[#loc264, #loc265])
#loc413 = loc(fused[#loc266, #loc267])
#loc414 = loc(fused[#loc268, #loc265])
#loc415 = loc(fused[#loc272, #loc273])
#loc416 = loc(fused[#loc275, #loc273])
#loc417 = loc(fused[#loc277, #loc276])
#loc418 = loc(fused[#loc278, #loc279])
#loc419 = loc(fused[#loc281, #loc279])
#loc420 = loc(fused[#loc282, #loc283])
#loc421 = loc(fused[#loc284, #loc243])
#loc422 = loc(fused[#loc287, #loc286])
#loc423 = loc(fused[#loc289, #loc288])
#loc424 = loc(fused[#loc295, #loc296])
