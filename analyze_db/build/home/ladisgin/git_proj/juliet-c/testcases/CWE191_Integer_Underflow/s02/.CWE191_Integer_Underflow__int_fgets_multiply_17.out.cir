!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":140:10)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":140:14)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":140:20)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":140:32)
#loc252 = loc(fused[#loc86, #loc87])
#loc253 = loc(fused[#loc88, #loc89])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc216)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc217)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc220)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc222)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc223)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc224)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc225)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc226)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc23)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc27)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb2 loc(#loc228)
  ^bb2:  // 2 preds: ^bb1, ^bb13
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc230)
    cir.brcond %9 ^bb3, ^bb14 loc(#loc31)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc231)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc232)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc222)
    cir.store %10, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc222)
    cir.br ^bb6 loc(#loc233)
  ^bb6:  // pred: ^bb5
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
    %12 = cir.const #cir.int<3> : !s32i loc(#loc38)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc38)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc38)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc38)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc38)
    %18 = cir.binop(add, %15, %17) : !u64i loc(#loc38)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc38)
    %20 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
    %22 = cir.call @fgets(%11, %19, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc234)
    cir.brcond %25 ^bb7, ^bb8 loc(#loc235)
  ^bb7:  // pred: ^bb6
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc45)
    %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
    cir.store %27, %4 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb9 loc(#loc43)
  ^bb8:  // pred: ^bb6
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb9 loc(#loc36)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc36)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc34)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc26)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc26)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc51)
    cir.store %31, %2 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.br ^bb2 loc(#loc228)
  ^bb14:  // pred: ^bb2
    cir.br ^bb15 loc(#loc26)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc238)
  ^bb16:  // pred: ^bb15
    %32 = cir.const #cir.int<0> : !s32i loc(#loc54)
    cir.store %32, %3 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    cir.br ^bb17 loc(#loc238)
  ^bb17:  // 2 preds: ^bb16, ^bb25
    %33 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %35 = cir.cmp(lt, %33, %34) : !s32i, !cir.bool loc(#loc240)
    cir.brcond %35 ^bb18, ^bb26 loc(#loc58)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc241)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc242)
  ^bb20:  // pred: ^bb19
    %36 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %38 = cir.cmp(lt, %36, %37) : !s32i, !cir.bool loc(#loc243)
    cir.brcond %38 ^bb21, ^bb22 loc(#loc244)
  ^bb21:  // pred: ^bb20
    %39 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %41 = cir.binop(mul, %39, %40) nsw : !s32i loc(#loc65)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc67)
    cir.br ^bb22 loc(#loc61)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc61)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc53)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc53)
  ^bb25:  // pred: ^bb24
    %43 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %44 = cir.unary(inc, %43) : !s32i, !s32i loc(#loc69)
    cir.store %44, %3 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.br ^bb17 loc(#loc238)
  ^bb26:  // pred: ^bb17
    cir.br ^bb27 loc(#loc53)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc13)
  } loc(#loc221)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc71)
  } loc(#loc246)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc249)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc83)
  cir.func @main(%arg0: !s32i loc(fused[#loc86, #loc87]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc88, #loc89])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc252)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc253)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc90)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc91)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc92)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc92)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc93)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_17_good() : () -> () loc(#loc95)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc81)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc82)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_17_bad() : () -> () loc(#loc99)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc83)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    cir.return %17 : !s32i loc(#loc256)
  } loc(#loc251)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc104)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc258)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc259)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc260)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc261)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc262)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.br ^bb1 loc(#loc264)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.br ^bb2 loc(#loc264)
  ^bb2:  // 2 preds: ^bb1, ^bb13
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc266)
    cir.brcond %9 ^bb3, ^bb14 loc(#loc124)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc267)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc268)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc258)
    cir.store %10, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc258)
    cir.br ^bb6 loc(#loc269)
  ^bb6:  // pred: ^bb5
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
    %12 = cir.const #cir.int<3> : !s32i loc(#loc131)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc131)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc131)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc131)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc131)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc131)
    %18 = cir.binop(add, %15, %17) : !u64i loc(#loc131)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc131)
    %20 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc132)
    %22 = cir.call @fgets(%11, %19, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc133)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
    %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc270)
    cir.brcond %25 ^bb7, ^bb8 loc(#loc271)
  ^bb7:  // pred: ^bb6
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
    %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc139)
    cir.store %27, %4 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb9 loc(#loc136)
  ^bb8:  // pred: ^bb6
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc142)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    cir.br ^bb9 loc(#loc129)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc129)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc127)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc119)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc119)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc145)
    cir.store %31, %2 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb2 loc(#loc264)
  ^bb14:  // pred: ^bb2
    cir.br ^bb15 loc(#loc119)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc274)
  ^bb16:  // pred: ^bb15
    %32 = cir.const #cir.int<0> : !s32i loc(#loc148)
    cir.store %32, %3 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb17 loc(#loc274)
  ^bb17:  // 2 preds: ^bb16, ^bb30
    %33 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %35 = cir.cmp(lt, %33, %34) : !s32i, !cir.bool loc(#loc276)
    cir.brcond %35 ^bb18, ^bb31 loc(#loc152)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc277)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc278)
  ^bb20:  // pred: ^bb19
    %36 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %38 = cir.cmp(lt, %36, %37) : !s32i, !cir.bool loc(#loc279)
    cir.brcond %38 ^bb21, ^bb27 loc(#loc280)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc281)
  ^bb22:  // pred: ^bb21
    %39 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %40 = cir.const #cir.int<2147483647> : !s32i loc(#loc162)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc162)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc162)
    %44 = cir.const #cir.int<2> : !s32i loc(#loc163)
    %45 = cir.binop(div, %43, %44) : !s32i loc(#loc282)
    %46 = cir.cmp(gt, %39, %45) : !s32i, !cir.bool loc(#loc283)
    cir.brcond %46 ^bb23, ^bb24 loc(#loc284)
  ^bb23:  // pred: ^bb22
    %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc110)
    %49 = cir.binop(mul, %47, %48) nsw : !s32i loc(#loc168)
    cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc170)
    cir.br ^bb25 loc(#loc166)
  ^bb24:  // pred: ^bb22
    %51 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc104)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    cir.br ^bb25 loc(#loc160)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc160)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc155)
  ^bb27:  // 2 preds: ^bb20, ^bb26
    cir.br ^bb28 loc(#loc155)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc147)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc147)
  ^bb30:  // pred: ^bb29
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %54 = cir.unary(inc, %53) : !s32i, !s32i loc(#loc173)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb17 loc(#loc274)
  ^bb31:  // pred: ^bb17
    cir.br ^bb32 loc(#loc147)
  ^bb32:  // pred: ^bb31
    cir.return loc(#loc106)
  } loc(#loc257)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc287)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc288)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc289)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc290)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc183)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb1 loc(#loc292)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc187)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb2 loc(#loc292)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc294)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc191)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc295)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<2> : !s32i loc(#loc193)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc194)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc186)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc197)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.br ^bb2 loc(#loc292)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc186)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc298)
  ^bb9:  // pred: ^bb8
    %13 = cir.const #cir.int<0> : !s32i loc(#loc200)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb10 loc(#loc298)
  ^bb10:  // 2 preds: ^bb9, ^bb18
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc300)
    cir.brcond %16 ^bb11, ^bb19 loc(#loc204)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc301)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc302)
  ^bb13:  // pred: ^bb12
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc303)
    cir.brcond %19 ^bb14, ^bb15 loc(#loc304)
  ^bb14:  // pred: ^bb13
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc177)
    %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc211)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc213)
    cir.br ^bb15 loc(#loc207)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc207)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc199)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc199)
  ^bb18:  // pred: ^bb17
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc215)
    cir.store %25, %2 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb10 loc(#loc298)
  ^bb19:  // pred: ^bb10
    cir.br ^bb20 loc(#loc199)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc175)
  } loc(#loc286)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":42:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":24:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":55:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":33:13)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":33:49)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":51:13)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":51:33)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":26:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":26:9)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":26:11)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":27:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":27:9)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":29:12)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":29:5)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:5)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":45:5)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:13)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:9)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:16)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:20)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:18)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":31:5)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":32:9)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":44:9)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:13)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":43:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:23)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:36)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:53)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:17)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:63)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":36:13)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":39:13)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":41:13)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":38:29)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":38:24)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":38:17)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":38:40)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":42:17)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:24)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:23)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:5)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":54:5)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:13)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:9)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:16)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:20)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:18)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":47:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":48:9)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":53:9)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":48:12)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":48:19)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":49:9)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":51:26)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":52:26)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":52:13)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:24)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:23)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":125:1)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":129:1)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":127:5)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":127:13)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":128:5)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":128:13)
#loc76 = loc("/usr/include/stdlib.h":575:1)
#loc77 = loc("/usr/include/stdlib.h":575:41)
#loc78 = loc("/usr/include/time.h":76:1)
#loc79 = loc("/usr/include/time.h":76:38)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":145:15)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":147:15)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":150:15)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":152:15)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":140:1)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":155:1)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":141:1)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":143:27)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":143:22)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":143:5)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":145:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":146:5)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":146:58)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":147:5)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":150:5)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":151:5)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":151:57)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":152:5)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":154:12)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":154:5)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":96:27)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":62:1)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":100:1)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":71:13)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":71:49)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":91:17)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":91:37)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":64:5)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":64:9)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":64:11)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":65:5)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":65:9)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":67:12)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":67:5)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:5)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":83:5)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:13)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:9)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:16)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:20)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:18)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":69:5)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":70:9)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":82:9)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:13)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":81:13)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:23)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:36)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:53)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:17)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:63)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":74:13)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":77:13)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":79:13)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":76:29)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":76:24)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":76:17)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":76:40)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":80:27)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":80:17)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:24)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:23)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:5)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":99:5)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:13)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:9)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:16)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:20)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:18)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":85:5)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":86:9)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":98:9)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":86:12)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":86:19)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":87:9)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:13)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":97:13)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:17)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:25)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:33)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:34)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":90:13)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":93:13)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":95:13)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":91:30)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":92:30)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":92:17)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":96:17)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:24)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:23)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":103:1)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":123:1)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":119:13)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":119:33)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":105:5)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":105:9)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":105:11)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":106:5)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":106:9)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":108:12)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":108:5)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:5)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":113:5)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:13)
#loc188 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:9)
#loc189 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:16)
#loc190 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:20)
#loc191 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:18)
#loc192 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":110:5)
#loc193 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":112:17)
#loc194 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":112:16)
#loc195 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":112:9)
#loc196 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:24)
#loc197 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:23)
#loc198 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:5)
#loc199 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":122:5)
#loc200 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:13)
#loc201 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:9)
#loc202 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:16)
#loc203 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:20)
#loc204 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:18)
#loc205 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":115:5)
#loc206 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":116:9)
#loc207 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":121:9)
#loc208 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":116:12)
#loc209 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":116:19)
#loc210 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":117:9)
#loc211 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":119:26)
#loc212 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":120:26)
#loc213 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":120:13)
#loc214 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:24)
#loc215 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:23)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc5, #loc6])
#loc219 = loc(fused[#loc7, #loc8])
#loc220 = loc(fused[#loc10, #loc11])
#loc221 = loc(fused[#loc12, #loc13])
#loc222 = loc(fused[#loc14, #loc15])
#loc223 = loc(fused[#loc16, #loc17])
#loc224 = loc(fused[#loc18, #loc19])
#loc225 = loc(fused[#loc18, #loc20])
#loc226 = loc(fused[#loc21, #loc22])
#loc227 = loc(fused[#loc24, #loc23])
#loc228 = loc(fused[#loc25, #loc26])
#loc229 = loc(fused[#loc28, #loc27])
#loc230 = loc(fused[#loc29, #loc30])
#loc231 = loc(fused[#loc32, #loc26])
#loc232 = loc(fused[#loc33, #loc34])
#loc233 = loc(fused[#loc35, #loc36])
#loc234 = loc(fused[#loc40, #loc41])
#loc235 = loc(fused[#loc42, #loc43, #loc44, #loc36])
#loc236 = loc(fused[#loc47, #loc48])
#loc237 = loc(fused[#loc51, #loc50])
#loc238 = loc(fused[#loc52, #loc53])
#loc239 = loc(fused[#loc55, #loc54])
#loc240 = loc(fused[#loc56, #loc57])
#loc241 = loc(fused[#loc59, #loc53])
#loc242 = loc(fused[#loc60, #loc61])
#loc243 = loc(fused[#loc62, #loc63])
#loc244 = loc(fused[#loc64, #loc61])
#loc245 = loc(fused[#loc69, #loc68])
#loc246 = loc(fused[#loc70, #loc71])
#loc247 = loc(fused[#loc72, #loc73])
#loc248 = loc(fused[#loc74, #loc75])
#loc249 = loc(fused[#loc76, #loc77])
#loc250 = loc(fused[#loc78, #loc79])
#loc251 = loc(fused[#loc84, #loc85])
#loc254 = loc(fused[#loc95, #loc96])
#loc255 = loc(fused[#loc99, #loc100])
#loc256 = loc(fused[#loc103, #loc102])
#loc257 = loc(fused[#loc105, #loc106])
#loc258 = loc(fused[#loc107, #loc108])
#loc259 = loc(fused[#loc109, #loc110])
#loc260 = loc(fused[#loc111, #loc112])
#loc261 = loc(fused[#loc111, #loc113])
#loc262 = loc(fused[#loc114, #loc115])
#loc263 = loc(fused[#loc117, #loc116])
#loc264 = loc(fused[#loc118, #loc119])
#loc265 = loc(fused[#loc121, #loc120])
#loc266 = loc(fused[#loc122, #loc123])
#loc267 = loc(fused[#loc125, #loc119])
#loc268 = loc(fused[#loc126, #loc127])
#loc269 = loc(fused[#loc128, #loc129])
#loc270 = loc(fused[#loc133, #loc134])
#loc271 = loc(fused[#loc135, #loc136, #loc137, #loc129])
#loc272 = loc(fused[#loc140, #loc141])
#loc273 = loc(fused[#loc145, #loc144])
#loc274 = loc(fused[#loc146, #loc147])
#loc275 = loc(fused[#loc149, #loc148])
#loc276 = loc(fused[#loc150, #loc151])
#loc277 = loc(fused[#loc153, #loc147])
#loc278 = loc(fused[#loc154, #loc155])
#loc279 = loc(fused[#loc156, #loc157])
#loc280 = loc(fused[#loc158, #loc155])
#loc281 = loc(fused[#loc159, #loc160])
#loc282 = loc(fused[#loc162, #loc163])
#loc283 = loc(fused[#loc161, #loc164])
#loc284 = loc(fused[#loc165, #loc166, #loc167, #loc160])
#loc285 = loc(fused[#loc173, #loc172])
#loc286 = loc(fused[#loc174, #loc175])
#loc287 = loc(fused[#loc176, #loc177])
#loc288 = loc(fused[#loc178, #loc179])
#loc289 = loc(fused[#loc178, #loc180])
#loc290 = loc(fused[#loc181, #loc182])
#loc291 = loc(fused[#loc184, #loc183])
#loc292 = loc(fused[#loc185, #loc186])
#loc293 = loc(fused[#loc188, #loc187])
#loc294 = loc(fused[#loc189, #loc190])
#loc295 = loc(fused[#loc192, #loc186])
#loc296 = loc(fused[#loc195, #loc193])
#loc297 = loc(fused[#loc197, #loc196])
#loc298 = loc(fused[#loc198, #loc199])
#loc299 = loc(fused[#loc201, #loc200])
#loc300 = loc(fused[#loc202, #loc203])
#loc301 = loc(fused[#loc205, #loc199])
#loc302 = loc(fused[#loc206, #loc207])
#loc303 = loc(fused[#loc208, #loc209])
#loc304 = loc(fused[#loc210, #loc207])
#loc305 = loc(fused[#loc215, #loc214])
