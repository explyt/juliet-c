!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":73:10)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":73:14)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":73:20)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":73:32)
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc116 = loc(fused[#loc49, #loc50])
#loc117 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc98)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc10)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc101)
        cir.condition(%4) loc(#loc14)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc104)
            %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
            cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc104)
            cir.scope {
              %4 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
              %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
              %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
              %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc106)
              %8 = cir.cast(bool_to_int, %7 : !cir.bool), !s32i loc(#loc106)
              %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
              %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
              %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc26)
              %12 = cir.const #cir.int<5> : !s32i loc(#loc27)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc107)
              %14 = cir.cast(bool_to_int, %13 : !cir.bool), !s32i loc(#loc107)
              %15 = cir.binop(and, %8, %14) : !s32i loc(#loc108)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc30)
              cir.if %16 {
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc32)
              } loc(#loc109)
            } loc(#loc105)
          } loc(#loc103)
        } loc(#loc102)
        cir.yield loc(#loc9)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc34)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
        cir.yield loc(#loc99)
      } loc(#loc99)
    } loc(#loc99)
    cir.return loc(#loc5)
  } loc(#loc97)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc112)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc111)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc113)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc56)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE476_NULL_Pointer_Dereference__binary_if_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call @CWE476_NULL_Pointer_Dereference__binary_if_17_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE476_NULL_Pointer_Dereference__binary_if_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call @CWE476_NULL_Pointer_Dereference__binary_if_17_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.return %17 : !s32i loc(#loc120)
  } loc(#loc115)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc122)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc73)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc125)
        cir.condition(%4) loc(#loc77)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc128)
            %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
            cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc128)
            cir.scope {
              %4 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
              %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
              %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
              %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc130)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
                %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
                %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                %12 = cir.const #cir.int<5> : !s32i loc(#loc90)
                %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc131)
                %14 = cir.ternary(%13, true {
                  %15 = cir.const #true loc(#loc87)
                  cir.yield %15 : !cir.bool loc(#loc87)
                }, false {
                  %15 = cir.const #false loc(#loc87)
                  cir.yield %15 : !cir.bool loc(#loc87)
                }) : (!cir.bool) -> !cir.bool loc(#loc87)
                cir.yield %14 : !cir.bool loc(#loc87)
              }, false {
                %9 = cir.const #false loc(#loc87)
                cir.yield %9 : !cir.bool loc(#loc87)
              }) : (!cir.bool) -> !cir.bool loc(#loc87)
              cir.if %8 {
                %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc92)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc92)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
              } loc(#loc132)
            } loc(#loc129)
          } loc(#loc127)
        } loc(#loc126)
        cir.yield loc(#loc72)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc95)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
        cir.yield loc(#loc123)
      } loc(#loc123)
    } loc(#loc123)
    cir.return loc(#loc68)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":31:27)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":20:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":35:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":22:5)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":22:9)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":34:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:13)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:9)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:16)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:20)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:18)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":24:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":25:9)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":33:9)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":26:13)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":26:51)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:13)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":32:13)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:18)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:42)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:51)
#loc25 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:73)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:83)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:17)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:84)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:48)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":30:13)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":31:17)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:24)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:23)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":59:1)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":62:1)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":61:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":61:11)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":78:15)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":80:15)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":83:15)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":85:15)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":73:1)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":88:1)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":74:1)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":76:27)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":76:22)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":76:5)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":78:5)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":79:5)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":79:56)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":80:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":83:5)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":84:5)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":84:55)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":85:5)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":87:12)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":87:5)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":42:1)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":57:1)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":44:5)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":44:9)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":56:5)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:13)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:9)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:16)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:20)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:18)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":46:5)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":47:9)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":55:9)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":48:13)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":48:51)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:13)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":54:13)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:18)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:42)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:48)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:52)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:74)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:84)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":52:13)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":53:27)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":53:17)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:24)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:23)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc4, #loc5])
#loc98 = loc(fused[#loc6, #loc7])
#loc99 = loc(fused[#loc8, #loc9])
#loc100 = loc(fused[#loc11, #loc10])
#loc101 = loc(fused[#loc12, #loc13])
#loc102 = loc(fused[#loc15, #loc9])
#loc103 = loc(fused[#loc16, #loc17])
#loc104 = loc(fused[#loc18, #loc19])
#loc105 = loc(fused[#loc20, #loc21])
#loc106 = loc(fused[#loc22, #loc23])
#loc107 = loc(fused[#loc24, #loc27])
#loc108 = loc(fused[#loc28, #loc29])
#loc109 = loc(fused[#loc31, #loc21])
#loc110 = loc(fused[#loc34, #loc33])
#loc111 = loc(fused[#loc35, #loc36])
#loc112 = loc(fused[#loc37, #loc38])
#loc113 = loc(fused[#loc39, #loc40])
#loc114 = loc(fused[#loc41, #loc42])
#loc115 = loc(fused[#loc47, #loc48])
#loc118 = loc(fused[#loc58, #loc59])
#loc119 = loc(fused[#loc62, #loc63])
#loc120 = loc(fused[#loc66, #loc65])
#loc121 = loc(fused[#loc67, #loc68])
#loc122 = loc(fused[#loc69, #loc70])
#loc123 = loc(fused[#loc71, #loc72])
#loc124 = loc(fused[#loc74, #loc73])
#loc125 = loc(fused[#loc75, #loc76])
#loc126 = loc(fused[#loc78, #loc72])
#loc127 = loc(fused[#loc79, #loc80])
#loc128 = loc(fused[#loc81, #loc82])
#loc129 = loc(fused[#loc83, #loc84])
#loc130 = loc(fused[#loc85, #loc86])
#loc131 = loc(fused[#loc88, #loc90])
#loc132 = loc(fused[#loc91, #loc84])
#loc133 = loc(fused[#loc95, #loc94])
