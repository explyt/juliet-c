!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_declare_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc99)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc15)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc105)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc19)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc20)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc106)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %17, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    cir.br ^bb2 loc(#loc12)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %19 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.store %18, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %20 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call %20() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc4)
  } loc(#loc100)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc30)
  } loc(#loc110)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc113)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc43)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc43)
    cir.return loc(#loc38)
  } loc(#loc114)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc117)
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_declare_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc118)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc58)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc62)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc63)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc124)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc125)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc62)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.br ^bb2 loc(#loc127)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc69)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc128)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc129)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc72)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc73)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc72)
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc67)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc75)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc76)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc76)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc130)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc80)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc82)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc82)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc84)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc131)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    cir.store %32, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // pred: ^bb5
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %34 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    cir.store %33, %34 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    %35 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %35() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc53)
  } loc(#loc119)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc97)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc97)
    cir.return loc(#loc92)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":21:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":21:15)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":34:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":47:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":40:9)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":40:28)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":36:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":36:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":37:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":37:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":38:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":44:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":41:16)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":41:28)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":41:33)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":41:37)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":41:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":41:38)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":42:29)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":42:20)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":42:24)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":42:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":43:16)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":43:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":45:68)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":45:5)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":46:5)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":46:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":82:1)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":85:1)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":84:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":84:13)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("/usr/include/stdlib.h":687:1)
#loc36 = loc("/usr/include/stdlib.h":687:32)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":26:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":32:1)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":28:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":28:19)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":29:15)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":29:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":31:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":31:10)
#loc45 = loc("/usr/include/stdlib.h":672:1)
#loc46 = loc("/usr/include/stdlib.h":672:45)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":71:23)
#loc48 = loc("/usr/include/stdlib.h":756:1)
#loc49 = loc("/usr/include/stdlib.h":756:70)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":22:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":22:15)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":62:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":80:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":68:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":68:60)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":64:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":64:12)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":65:12)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":65:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":66:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":77:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":68:37)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":68:44)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":68:48)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":68:59)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":69:9)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":73:9)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":69:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":69:27)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":70:9)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":71:13)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":72:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":72:18)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":74:16)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":74:28)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":74:33)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":74:37)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":74:9)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":74:38)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":75:29)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":75:9)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":75:20)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":75:24)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":75:25)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":76:16)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":76:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":78:72)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":78:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":79:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":79:17)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":54:1)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":60:1)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":56:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":56:19)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":57:15)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":57:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":59:5)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_45.c":59:10)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc10, #loc9])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc17, #loc18])
#loc106 = loc(fused[#loc22, #loc19])
#loc107 = loc(fused[#loc24, #loc23])
#loc108 = loc(fused[#loc26, #loc25])
#loc109 = loc(fused[#loc27, #loc28])
#loc110 = loc(fused[#loc29, #loc30])
#loc111 = loc(fused[#loc31, #loc32])
#loc112 = loc(fused[#loc33, #loc34])
#loc113 = loc(fused[#loc35, #loc36])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc39, #loc40])
#loc116 = loc(fused[#loc45, #loc46])
#loc117 = loc(fused[#loc48, #loc49])
#loc118 = loc(fused[#loc50, #loc51])
#loc119 = loc(fused[#loc52, #loc53])
#loc120 = loc(fused[#loc54, #loc55])
#loc121 = loc(fused[#loc56, #loc57])
#loc122 = loc(fused[#loc59, #loc58])
#loc123 = loc(fused[#loc60, #loc61])
#loc124 = loc(fused[#loc64, #loc65])
#loc125 = loc(fused[#loc63, #loc65])
#loc126 = loc(fused[#loc62, #loc55])
#loc127 = loc(fused[#loc66, #loc67])
#loc128 = loc(fused[#loc68, #loc69])
#loc129 = loc(fused[#loc70, #loc67])
#loc130 = loc(fused[#loc78, #loc79])
#loc131 = loc(fused[#loc81, #loc80])
#loc132 = loc(fused[#loc86, #loc85])
#loc133 = loc(fused[#loc88, #loc87])
#loc134 = loc(fused[#loc89, #loc90])
#loc135 = loc(fused[#loc91, #loc92])
#loc136 = loc(fused[#loc93, #loc94])
