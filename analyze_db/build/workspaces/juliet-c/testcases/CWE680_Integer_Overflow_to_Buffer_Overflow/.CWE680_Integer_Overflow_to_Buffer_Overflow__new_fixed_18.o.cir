!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc100)
  cir.func private @printIntLine(!s32i) loc(#loc101)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_183badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc104)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc105)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc106)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc15)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc19)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc20)
    %8 = cir.binop(div, %6, %7) : !s32i loc(#loc109)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc21)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc109)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc25)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc112)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc113)
    cir.store %14, %0 : !u64i, !cir.ptr<!u64i> loc(#loc114)
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc30)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc115)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc116)
    cir.br ^bb3 loc(#loc117)
  ^bb3:  // pred: ^bb2
    %19 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc36)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc118)
    cir.br ^bb4 loc(#loc117)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc39)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc119)
    cir.brcond %24 ^bb5, ^bb9 loc(#loc119)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc120)
  ^bb6:  // pred: ^bb5
    %25 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc44)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc35)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc46)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc122)
    cir.br ^bb4 loc(#loc117)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc35)
  ^bb10:  // pred: ^bb9
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc49)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc50)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    cir.delete.array %35 : <!s32i> loc(#loc51)
    cir.br ^bb11 loc(#loc24)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc6)
  } loc(#loc102)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc126)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc127)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc62)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<20> : !s32i loc(#loc66)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    cir.br ^bb2 loc(#loc131)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc70)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc132)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc133)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc134)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc75)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc135)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc135)
    cir.store %14, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc136)
    cir.br ^bb3 loc(#loc137)
  ^bb3:  // pred: ^bb2
    %15 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc81)
    cir.store %16, %1 : !u64i, !cir.ptr<!u64i> loc(#loc138)
    cir.br ^bb4 loc(#loc137)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc84)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc139)
    cir.brcond %20 ^bb5, ^bb9 loc(#loc139)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc140)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc89)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc80)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc91)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc142)
    cir.br ^bb4 loc(#loc137)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc80)
  ^bb10:  // pred: ^bb9
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc94)
    %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc95)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
    cir.delete.array %31 : <!s32i> loc(#loc96)
    cir.br ^bb11 loc(#loc69)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc53)
  } loc(#loc123)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_184goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18L7goodG2BEv() : () -> () loc(#loc99)
    cir.return loc(#loc98)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":24:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":48:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":36:9)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":36:16)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":36:26)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":37:9)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":37:14)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":26:5)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":26:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":28:13)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":28:12)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":28:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":29:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":29:10)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":32:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":32:22)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":32:26)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":32:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":35:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":47:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":39:21)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":39:28)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":39:38)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":39:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":40:37)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":24:6)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":40:28)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":40:46)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":40:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":44:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":42:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":43:29)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":43:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":43:24)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":43:25)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:40)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:39)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":45:22)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":45:33)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":45:34)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":45:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":46:19)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":55:1)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":77:1)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":65:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":65:16)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":65:26)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":66:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":66:14)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":57:5)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":57:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":59:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":59:12)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":59:5)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":60:5)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":60:10)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":63:12)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":63:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":64:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":76:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":68:21)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":68:28)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":68:38)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":68:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":69:37)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":55:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":69:28)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":69:46)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":69:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":73:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:18)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:14)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:21)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:33)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":71:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":72:29)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":72:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":72:24)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":72:25)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:40)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:39)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":74:22)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":74:33)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":74:34)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":74:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":75:19)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":79:1)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":82:1)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":81:5)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc5, #loc6])
#loc103 = loc(fused[#loc7, #loc8])
#loc104 = loc(fused[#loc7, #loc9])
#loc105 = loc(fused[#loc10, #loc11])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc16, #loc14])
#loc108 = loc(fused[#loc17, #loc18])
#loc109 = loc(fused[#loc19, #loc20])
#loc110 = loc(fused[#loc22, #loc21])
#loc111 = loc(fused[#loc23, #loc24])
#loc112 = loc(fused[#loc26, #loc27])
#loc113 = loc(fused[#loc25, #loc27])
#loc114 = loc(fused[#loc28, #loc27])
#loc115 = loc(fused[#loc31, #loc32])
#loc116 = loc(fused[#loc33, #loc32])
#loc117 = loc(fused[#loc34, #loc35])
#loc118 = loc(fused[#loc37, #loc36])
#loc119 = loc(fused[#loc38, #loc39])
#loc120 = loc(fused[#loc40, #loc35])
#loc121 = loc(fused[#loc42, #loc41])
#loc122 = loc(fused[#loc46, #loc45])
#loc123 = loc(fused[#loc52, #loc53])
#loc124 = loc(fused[#loc54, #loc55])
#loc125 = loc(fused[#loc54, #loc56])
#loc126 = loc(fused[#loc57, #loc58])
#loc127 = loc(fused[#loc59, #loc60])
#loc128 = loc(fused[#loc63, #loc61])
#loc129 = loc(fused[#loc64, #loc65])
#loc130 = loc(fused[#loc67, #loc66])
#loc131 = loc(fused[#loc68, #loc69])
#loc132 = loc(fused[#loc71, #loc72])
#loc133 = loc(fused[#loc70, #loc72])
#loc134 = loc(fused[#loc73, #loc72])
#loc135 = loc(fused[#loc76, #loc77])
#loc136 = loc(fused[#loc78, #loc77])
#loc137 = loc(fused[#loc79, #loc80])
#loc138 = loc(fused[#loc82, #loc81])
#loc139 = loc(fused[#loc83, #loc84])
#loc140 = loc(fused[#loc85, #loc80])
#loc141 = loc(fused[#loc87, #loc86])
#loc142 = loc(fused[#loc91, #loc90])
#loc143 = loc(fused[#loc97, #loc98])
