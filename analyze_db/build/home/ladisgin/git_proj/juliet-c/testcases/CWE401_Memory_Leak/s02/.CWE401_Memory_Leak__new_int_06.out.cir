!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc165 = loc("CWE401_Memory_Leak__new_int_06.cpp":170:10)
#loc166 = loc("CWE401_Memory_Leak__new_int_06.cpp":170:14)
#loc167 = loc("CWE401_Memory_Leak__new_int_06.cpp":170:20)
#loc168 = loc("CWE401_Memory_Leak__new_int_06.cpp":170:32)
#loc249 = loc(fused[#loc165, #loc166])
#loc250 = loc(fused[#loc167, #loc168])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc181)
  cir.func private @printIntLine(!s32i) loc(#loc182)
  cir.func @_ZN30CWE401_Memory_Leak__new_int_063badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc13)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc14)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc187)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc188)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<4> : !u64i loc(#loc189)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc18)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc189)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc20)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc25)
    cir.br ^bb3 loc(#loc12)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc192)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<5> : !s32i loc(#loc28)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc29)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc193)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc194)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc6)
  } loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc195)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_06L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc42)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc43)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc200)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc201)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<4> : !u64i loc(#loc202)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc47)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc202)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc203)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc49)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc54)
    cir.br ^bb3 loc(#loc41)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc205)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<5> : !s32i loc(#loc57)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc58)
    %14 = cir.cmp(ne, %12, %13) : !s32i, !cir.bool loc(#loc206)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc207)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb8 loc(#loc60)
  ^bb7:  // pred: ^bb5
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc63)
    cir.call @_ZdlPv(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc47)
    cir.br ^bb8 loc(#loc56)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc56)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc35)
  } loc(#loc196)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_06L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc68)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc72)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc73)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc212)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc213)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<4> : !u64i loc(#loc214)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc77)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc214)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc215)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc79)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc84)
    cir.br ^bb3 loc(#loc71)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc217)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<5> : !s32i loc(#loc87)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc88)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc218)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc219)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc90)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc77)
    cir.br ^bb7 loc(#loc86)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc86)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc65)
  } loc(#loc208)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_06L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc221)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc97)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc223)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc101)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc102)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc225)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc106)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.br ^bb4 loc(#loc104)
  ^bb3:  // pred: ^bb1
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc227)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc110)
    %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc115)
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc229)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #cir.int<5> : !s32i loc(#loc118)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc119)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc230)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc231)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc117)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc117)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc92)
  } loc(#loc220)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_06L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc127)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc131)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc132)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc238)
  ^bb2:  // pred: ^bb1
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc239)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc136)
    %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc137)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc141)
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc241)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<5> : !s32i loc(#loc144)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc145)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc242)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc243)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc143)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc143)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc122)
  } loc(#loc232)
  cir.func @_ZN30CWE401_Memory_Leak__new_int_064goodEv() extra(#fn_attr) {
    cir.call @_ZN30CWE401_Memory_Leak__new_int_06L8goodB2G1Ev() : () -> () loc(#loc149)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_06L8goodB2G2Ev() : () -> () loc(#loc150)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_06L8goodG2B1Ev() : () -> () loc(#loc151)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_06L8goodG2B2Ev() : () -> () loc(#loc152)
    cir.return loc(#loc148)
  } loc(#loc244)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc245)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc246)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc162)
  cir.func @main(%arg0: !s32i loc(fused[#loc165, #loc166]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc167, #loc168])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc249)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc250)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc164)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc169)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc170)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc171)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc171)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc172)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc159)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_064goodEv() : () -> () loc(#loc174)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc160)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc161)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_063badEv() : () -> () loc(#loc177)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc162)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc179)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    cir.return %15 : !s32i loc(#loc251)
  } loc(#loc248)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_06.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE401_Memory_Leak__new_int_06.cpp":34:1)
#loc6 = loc("CWE401_Memory_Leak__new_int_06.cpp":51:1)
#loc7 = loc("CWE401_Memory_Leak__new_int_06.cpp":36:5)
#loc8 = loc("CWE401_Memory_Leak__new_int_06.cpp":36:11)
#loc9 = loc("CWE401_Memory_Leak__new_int_06.cpp":37:12)
#loc10 = loc("CWE401_Memory_Leak__new_int_06.cpp":37:5)
#loc11 = loc("CWE401_Memory_Leak__new_int_06.cpp":38:5)
#loc12 = loc("CWE401_Memory_Leak__new_int_06.cpp":45:5)
#loc13 = loc("CWE401_Memory_Leak__new_int_06.cpp":38:8)
#loc14 = loc("CWE401_Memory_Leak__new_int_06.cpp":38:27)
#loc15 = loc("CWE401_Memory_Leak__new_int_06.cpp":39:5)
#loc16 = loc("CWE401_Memory_Leak__new_int_06.cpp":41:16)
#loc17 = loc("CWE401_Memory_Leak__new_int_06.cpp":41:20)
#loc18 = loc("CWE401_Memory_Leak__new_int_06.cpp":34:6)
#loc19 = loc("CWE401_Memory_Leak__new_int_06.cpp":41:9)
#loc20 = loc("CWE401_Memory_Leak__new_int_06.cpp":43:17)
#loc21 = loc("CWE401_Memory_Leak__new_int_06.cpp":43:10)
#loc22 = loc("CWE401_Memory_Leak__new_int_06.cpp":43:9)
#loc23 = loc("CWE401_Memory_Leak__new_int_06.cpp":44:23)
#loc24 = loc("CWE401_Memory_Leak__new_int_06.cpp":44:22)
#loc25 = loc("CWE401_Memory_Leak__new_int_06.cpp":44:9)
#loc26 = loc("CWE401_Memory_Leak__new_int_06.cpp":46:5)
#loc27 = loc("CWE401_Memory_Leak__new_int_06.cpp":50:5)
#loc28 = loc("CWE401_Memory_Leak__new_int_06.cpp":46:8)
#loc29 = loc("CWE401_Memory_Leak__new_int_06.cpp":46:27)
#loc30 = loc("CWE401_Memory_Leak__new_int_06.cpp":47:5)
#loc31 = loc("CWE401_Memory_Leak__new_int_06.cpp":73:19)
#loc32 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc33 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc34 = loc("CWE401_Memory_Leak__new_int_06.cpp":58:1)
#loc35 = loc("CWE401_Memory_Leak__new_int_06.cpp":80:1)
#loc36 = loc("CWE401_Memory_Leak__new_int_06.cpp":60:5)
#loc37 = loc("CWE401_Memory_Leak__new_int_06.cpp":60:11)
#loc38 = loc("CWE401_Memory_Leak__new_int_06.cpp":61:12)
#loc39 = loc("CWE401_Memory_Leak__new_int_06.cpp":61:5)
#loc40 = loc("CWE401_Memory_Leak__new_int_06.cpp":62:5)
#loc41 = loc("CWE401_Memory_Leak__new_int_06.cpp":69:5)
#loc42 = loc("CWE401_Memory_Leak__new_int_06.cpp":62:8)
#loc43 = loc("CWE401_Memory_Leak__new_int_06.cpp":62:27)
#loc44 = loc("CWE401_Memory_Leak__new_int_06.cpp":63:5)
#loc45 = loc("CWE401_Memory_Leak__new_int_06.cpp":65:16)
#loc46 = loc("CWE401_Memory_Leak__new_int_06.cpp":65:20)
#loc47 = loc("CWE401_Memory_Leak__new_int_06.cpp":58:13)
#loc48 = loc("CWE401_Memory_Leak__new_int_06.cpp":65:9)
#loc49 = loc("CWE401_Memory_Leak__new_int_06.cpp":67:17)
#loc50 = loc("CWE401_Memory_Leak__new_int_06.cpp":67:10)
#loc51 = loc("CWE401_Memory_Leak__new_int_06.cpp":67:9)
#loc52 = loc("CWE401_Memory_Leak__new_int_06.cpp":68:23)
#loc53 = loc("CWE401_Memory_Leak__new_int_06.cpp":68:22)
#loc54 = loc("CWE401_Memory_Leak__new_int_06.cpp":68:9)
#loc55 = loc("CWE401_Memory_Leak__new_int_06.cpp":70:5)
#loc56 = loc("CWE401_Memory_Leak__new_int_06.cpp":79:5)
#loc57 = loc("CWE401_Memory_Leak__new_int_06.cpp":70:8)
#loc58 = loc("CWE401_Memory_Leak__new_int_06.cpp":70:27)
#loc59 = loc("CWE401_Memory_Leak__new_int_06.cpp":71:5)
#loc60 = loc("CWE401_Memory_Leak__new_int_06.cpp":74:5)
#loc61 = loc("CWE401_Memory_Leak__new_int_06.cpp":76:5)
#loc62 = loc("CWE401_Memory_Leak__new_int_06.cpp":73:9)
#loc63 = loc("CWE401_Memory_Leak__new_int_06.cpp":78:16)
#loc64 = loc("CWE401_Memory_Leak__new_int_06.cpp":83:1)
#loc65 = loc("CWE401_Memory_Leak__new_int_06.cpp":100:1)
#loc66 = loc("CWE401_Memory_Leak__new_int_06.cpp":85:5)
#loc67 = loc("CWE401_Memory_Leak__new_int_06.cpp":85:11)
#loc68 = loc("CWE401_Memory_Leak__new_int_06.cpp":86:12)
#loc69 = loc("CWE401_Memory_Leak__new_int_06.cpp":86:5)
#loc70 = loc("CWE401_Memory_Leak__new_int_06.cpp":87:5)
#loc71 = loc("CWE401_Memory_Leak__new_int_06.cpp":94:5)
#loc72 = loc("CWE401_Memory_Leak__new_int_06.cpp":87:8)
#loc73 = loc("CWE401_Memory_Leak__new_int_06.cpp":87:27)
#loc74 = loc("CWE401_Memory_Leak__new_int_06.cpp":88:5)
#loc75 = loc("CWE401_Memory_Leak__new_int_06.cpp":90:16)
#loc76 = loc("CWE401_Memory_Leak__new_int_06.cpp":90:20)
#loc77 = loc("CWE401_Memory_Leak__new_int_06.cpp":83:13)
#loc78 = loc("CWE401_Memory_Leak__new_int_06.cpp":90:9)
#loc79 = loc("CWE401_Memory_Leak__new_int_06.cpp":92:17)
#loc80 = loc("CWE401_Memory_Leak__new_int_06.cpp":92:10)
#loc81 = loc("CWE401_Memory_Leak__new_int_06.cpp":92:9)
#loc82 = loc("CWE401_Memory_Leak__new_int_06.cpp":93:23)
#loc83 = loc("CWE401_Memory_Leak__new_int_06.cpp":93:22)
#loc84 = loc("CWE401_Memory_Leak__new_int_06.cpp":93:9)
#loc85 = loc("CWE401_Memory_Leak__new_int_06.cpp":95:5)
#loc86 = loc("CWE401_Memory_Leak__new_int_06.cpp":99:5)
#loc87 = loc("CWE401_Memory_Leak__new_int_06.cpp":95:8)
#loc88 = loc("CWE401_Memory_Leak__new_int_06.cpp":95:27)
#loc89 = loc("CWE401_Memory_Leak__new_int_06.cpp":96:5)
#loc90 = loc("CWE401_Memory_Leak__new_int_06.cpp":98:16)
#loc91 = loc("CWE401_Memory_Leak__new_int_06.cpp":103:1)
#loc92 = loc("CWE401_Memory_Leak__new_int_06.cpp":126:1)
#loc93 = loc("CWE401_Memory_Leak__new_int_06.cpp":115:9)
#loc94 = loc("CWE401_Memory_Leak__new_int_06.cpp":115:13)
#loc95 = loc("CWE401_Memory_Leak__new_int_06.cpp":105:5)
#loc96 = loc("CWE401_Memory_Leak__new_int_06.cpp":105:11)
#loc97 = loc("CWE401_Memory_Leak__new_int_06.cpp":106:12)
#loc98 = loc("CWE401_Memory_Leak__new_int_06.cpp":106:5)
#loc99 = loc("CWE401_Memory_Leak__new_int_06.cpp":107:5)
#loc100 = loc("CWE401_Memory_Leak__new_int_06.cpp":120:5)
#loc101 = loc("CWE401_Memory_Leak__new_int_06.cpp":107:8)
#loc102 = loc("CWE401_Memory_Leak__new_int_06.cpp":107:27)
#loc103 = loc("CWE401_Memory_Leak__new_int_06.cpp":108:5)
#loc104 = loc("CWE401_Memory_Leak__new_int_06.cpp":111:5)
#loc105 = loc("CWE401_Memory_Leak__new_int_06.cpp":113:5)
#loc106 = loc("CWE401_Memory_Leak__new_int_06.cpp":110:19)
#loc107 = loc("CWE401_Memory_Leak__new_int_06.cpp":110:9)
#loc108 = loc("CWE401_Memory_Leak__new_int_06.cpp":116:9)
#loc109 = loc("CWE401_Memory_Leak__new_int_06.cpp":116:17)
#loc110 = loc("CWE401_Memory_Leak__new_int_06.cpp":118:17)
#loc111 = loc("CWE401_Memory_Leak__new_int_06.cpp":118:10)
#loc112 = loc("CWE401_Memory_Leak__new_int_06.cpp":118:9)
#loc113 = loc("CWE401_Memory_Leak__new_int_06.cpp":119:23)
#loc114 = loc("CWE401_Memory_Leak__new_int_06.cpp":119:22)
#loc115 = loc("CWE401_Memory_Leak__new_int_06.cpp":119:9)
#loc116 = loc("CWE401_Memory_Leak__new_int_06.cpp":121:5)
#loc117 = loc("CWE401_Memory_Leak__new_int_06.cpp":125:5)
#loc118 = loc("CWE401_Memory_Leak__new_int_06.cpp":121:8)
#loc119 = loc("CWE401_Memory_Leak__new_int_06.cpp":121:27)
#loc120 = loc("CWE401_Memory_Leak__new_int_06.cpp":122:5)
#loc121 = loc("CWE401_Memory_Leak__new_int_06.cpp":129:1)
#loc122 = loc("CWE401_Memory_Leak__new_int_06.cpp":147:1)
#loc123 = loc("CWE401_Memory_Leak__new_int_06.cpp":136:9)
#loc124 = loc("CWE401_Memory_Leak__new_int_06.cpp":136:13)
#loc125 = loc("CWE401_Memory_Leak__new_int_06.cpp":131:5)
#loc126 = loc("CWE401_Memory_Leak__new_int_06.cpp":131:11)
#loc127 = loc("CWE401_Memory_Leak__new_int_06.cpp":132:12)
#loc128 = loc("CWE401_Memory_Leak__new_int_06.cpp":132:5)
#loc129 = loc("CWE401_Memory_Leak__new_int_06.cpp":133:5)
#loc130 = loc("CWE401_Memory_Leak__new_int_06.cpp":141:5)
#loc131 = loc("CWE401_Memory_Leak__new_int_06.cpp":133:8)
#loc132 = loc("CWE401_Memory_Leak__new_int_06.cpp":133:27)
#loc133 = loc("CWE401_Memory_Leak__new_int_06.cpp":134:5)
#loc134 = loc("CWE401_Memory_Leak__new_int_06.cpp":137:9)
#loc135 = loc("CWE401_Memory_Leak__new_int_06.cpp":137:17)
#loc136 = loc("CWE401_Memory_Leak__new_int_06.cpp":139:17)
#loc137 = loc("CWE401_Memory_Leak__new_int_06.cpp":139:10)
#loc138 = loc("CWE401_Memory_Leak__new_int_06.cpp":139:9)
#loc139 = loc("CWE401_Memory_Leak__new_int_06.cpp":140:23)
#loc140 = loc("CWE401_Memory_Leak__new_int_06.cpp":140:22)
#loc141 = loc("CWE401_Memory_Leak__new_int_06.cpp":140:9)
#loc142 = loc("CWE401_Memory_Leak__new_int_06.cpp":142:5)
#loc143 = loc("CWE401_Memory_Leak__new_int_06.cpp":146:5)
#loc144 = loc("CWE401_Memory_Leak__new_int_06.cpp":142:8)
#loc145 = loc("CWE401_Memory_Leak__new_int_06.cpp":142:27)
#loc146 = loc("CWE401_Memory_Leak__new_int_06.cpp":143:5)
#loc147 = loc("CWE401_Memory_Leak__new_int_06.cpp":149:1)
#loc148 = loc("CWE401_Memory_Leak__new_int_06.cpp":155:1)
#loc149 = loc("CWE401_Memory_Leak__new_int_06.cpp":151:5)
#loc150 = loc("CWE401_Memory_Leak__new_int_06.cpp":152:5)
#loc151 = loc("CWE401_Memory_Leak__new_int_06.cpp":153:5)
#loc152 = loc("CWE401_Memory_Leak__new_int_06.cpp":154:5)
#loc153 = loc("/usr/include/stdlib.h":575:1)
#loc154 = loc("/usr/include/stdlib.h":575:41)
#loc155 = loc("/usr/include/time.h":76:1)
#loc156 = loc("/usr/include/time.h":76:38)
#loc157 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc158 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc159 = loc("CWE401_Memory_Leak__new_int_06.cpp":175:15)
#loc160 = loc("CWE401_Memory_Leak__new_int_06.cpp":177:15)
#loc161 = loc("CWE401_Memory_Leak__new_int_06.cpp":180:15)
#loc162 = loc("CWE401_Memory_Leak__new_int_06.cpp":182:15)
#loc163 = loc("CWE401_Memory_Leak__new_int_06.cpp":170:1)
#loc164 = loc("CWE401_Memory_Leak__new_int_06.cpp":185:1)
#loc169 = loc("CWE401_Memory_Leak__new_int_06.cpp":171:1)
#loc170 = loc("CWE401_Memory_Leak__new_int_06.cpp":173:27)
#loc171 = loc("CWE401_Memory_Leak__new_int_06.cpp":173:22)
#loc172 = loc("CWE401_Memory_Leak__new_int_06.cpp":173:5)
#loc173 = loc("CWE401_Memory_Leak__new_int_06.cpp":175:5)
#loc174 = loc("CWE401_Memory_Leak__new_int_06.cpp":176:5)
#loc175 = loc("CWE401_Memory_Leak__new_int_06.cpp":177:5)
#loc176 = loc("CWE401_Memory_Leak__new_int_06.cpp":180:5)
#loc177 = loc("CWE401_Memory_Leak__new_int_06.cpp":181:5)
#loc178 = loc("CWE401_Memory_Leak__new_int_06.cpp":182:5)
#loc179 = loc("CWE401_Memory_Leak__new_int_06.cpp":184:12)
#loc180 = loc("CWE401_Memory_Leak__new_int_06.cpp":184:5)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc3, #loc4])
#loc183 = loc(fused[#loc5, #loc6])
#loc184 = loc(fused[#loc7, #loc8])
#loc185 = loc(fused[#loc10, #loc9])
#loc186 = loc(fused[#loc11, #loc12])
#loc187 = loc(fused[#loc13, #loc14])
#loc188 = loc(fused[#loc15, #loc12])
#loc189 = loc(fused[#loc16, #loc17])
#loc190 = loc(fused[#loc19, #loc17])
#loc191 = loc(fused[#loc22, #loc20])
#loc192 = loc(fused[#loc26, #loc27])
#loc193 = loc(fused[#loc28, #loc29])
#loc194 = loc(fused[#loc30, #loc27])
#loc195 = loc(fused[#loc32, #loc33])
#loc196 = loc(fused[#loc34, #loc35])
#loc197 = loc(fused[#loc36, #loc37])
#loc198 = loc(fused[#loc39, #loc38])
#loc199 = loc(fused[#loc40, #loc41])
#loc200 = loc(fused[#loc42, #loc43])
#loc201 = loc(fused[#loc44, #loc41])
#loc202 = loc(fused[#loc45, #loc46])
#loc203 = loc(fused[#loc48, #loc46])
#loc204 = loc(fused[#loc51, #loc49])
#loc205 = loc(fused[#loc55, #loc56])
#loc206 = loc(fused[#loc57, #loc58])
#loc207 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc208 = loc(fused[#loc64, #loc65])
#loc209 = loc(fused[#loc66, #loc67])
#loc210 = loc(fused[#loc69, #loc68])
#loc211 = loc(fused[#loc70, #loc71])
#loc212 = loc(fused[#loc72, #loc73])
#loc213 = loc(fused[#loc74, #loc71])
#loc214 = loc(fused[#loc75, #loc76])
#loc215 = loc(fused[#loc78, #loc76])
#loc216 = loc(fused[#loc81, #loc79])
#loc217 = loc(fused[#loc85, #loc86])
#loc218 = loc(fused[#loc87, #loc88])
#loc219 = loc(fused[#loc89, #loc86])
#loc220 = loc(fused[#loc91, #loc92])
#loc221 = loc(fused[#loc93, #loc94])
#loc222 = loc(fused[#loc95, #loc96])
#loc223 = loc(fused[#loc98, #loc97])
#loc224 = loc(fused[#loc99, #loc100])
#loc225 = loc(fused[#loc101, #loc102])
#loc226 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc227 = loc(fused[#loc108, #loc109])
#loc228 = loc(fused[#loc112, #loc110])
#loc229 = loc(fused[#loc116, #loc117])
#loc230 = loc(fused[#loc118, #loc119])
#loc231 = loc(fused[#loc120, #loc117])
#loc232 = loc(fused[#loc121, #loc122])
#loc233 = loc(fused[#loc123, #loc124])
#loc234 = loc(fused[#loc125, #loc126])
#loc235 = loc(fused[#loc128, #loc127])
#loc236 = loc(fused[#loc129, #loc130])
#loc237 = loc(fused[#loc131, #loc132])
#loc238 = loc(fused[#loc133, #loc130])
#loc239 = loc(fused[#loc134, #loc135])
#loc240 = loc(fused[#loc138, #loc136])
#loc241 = loc(fused[#loc142, #loc143])
#loc242 = loc(fused[#loc144, #loc145])
#loc243 = loc(fused[#loc146, #loc143])
#loc244 = loc(fused[#loc147, #loc148])
#loc245 = loc(fused[#loc153, #loc154])
#loc246 = loc(fused[#loc155, #loc156])
#loc247 = loc(fused[#loc157, #loc158])
#loc248 = loc(fused[#loc163, #loc164])
#loc251 = loc(fused[#loc180, #loc179])
