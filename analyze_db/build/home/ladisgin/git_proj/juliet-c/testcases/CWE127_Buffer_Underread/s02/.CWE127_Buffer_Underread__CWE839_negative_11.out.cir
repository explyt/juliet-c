!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc63 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":197:10)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":197:14)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":197:20)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":197:32)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:27)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:27)
#true = #cir.bool<true> : !cir.bool
#loc267 = loc(fused[#loc63, #loc64])
#loc268 = loc(fused[#loc65, #loc66])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc241)
  cir.func private @printIntLine(!s32i) loc(#loc242)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc245)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc246)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc15)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc249)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc249)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc250)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc23)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc252)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc253)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc253)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc27)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc27)
    cir.brcond %13 ^bb6, ^bb14 loc(#loc254)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc255)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc245)
    cir.store %14, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc245)
    cir.br ^bb8 loc(#loc256)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc35)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc257)
    cir.brcond %17 ^bb9, ^bb10 loc(#loc258)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc40)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc40)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc41)
    cir.br ^bb11 loc(#loc37)
  ^bb10:  // pred: ^bb8
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc7)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb11 loc(#loc33)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc33)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc31)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc26)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc26)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc9)
  } loc(#loc244)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc44)
  } loc(#loc259)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc264)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc268)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc70)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call @CWE127_Buffer_Underread__CWE839_negative_11_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call @CWE127_Buffer_Underread__CWE839_negative_11_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %17 : !s32i loc(#loc271)
  } loc(#loc266)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc84)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc274)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc275)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc92)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb1 loc(#loc277)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc278)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc278)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc96)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc96)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc279)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<5> : !s32i loc(#loc99)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc100)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.br ^bb3 loc(#loc95)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc95)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc281)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc282)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc282)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc104)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc104)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc283)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc83)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb23 loc(#loc107)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc284)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc274)
    cir.store %16, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc274)
    cir.br ^bb9 loc(#loc285)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %19 = cir.cmp(ge, %17, %18) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %19 ^bb10, ^bb15 loc(#loc116)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc118)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc287)
    cir.brcond %22 ^bb11, ^bb12 loc(#loc116)
  ^bb11:  // pred: ^bb10
    %23 = cir.const #true loc(#loc116)
    cir.br ^bb13(%23 : !cir.bool) loc(#loc116)
  ^bb12:  // pred: ^bb10
    %24 = cir.const #false loc(#loc116)
    cir.br ^bb13(%24 : !cir.bool) loc(#loc116)
  ^bb13(%25: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:27)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc116)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%25 : !cir.bool) loc(#loc116)
  ^bb15:  // pred: ^bb9
    %26 = cir.const #false loc(#loc116)
    cir.br ^bb16(%26 : !cir.bool) loc(#loc116)
  ^bb16(%27: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc116)
  ^bb17:  // pred: ^bb16
    cir.brcond %27 ^bb18, ^bb19 loc(#loc288)
  ^bb18:  // pred: ^bb17
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc124)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc124)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc125)
    cir.br ^bb20 loc(#loc121)
  ^bb19:  // pred: ^bb17
    %32 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc84)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.br ^bb20 loc(#loc113)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc113)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc111)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc103)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc103)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc86)
  } loc(#loc273)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc290)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc291)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc134)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.br ^bb1 loc(#loc293)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc294)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc294)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc138)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc138)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc295)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<5> : !s32i loc(#loc141)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc142)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb3 loc(#loc137)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc137)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc297)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc298)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc298)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc146)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc146)
    cir.brcond %13 ^bb6, ^bb22 loc(#loc299)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc300)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc290)
    cir.store %14, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc290)
    cir.br ^bb8 loc(#loc301)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc302)
    cir.brcond %17 ^bb9, ^bb14 loc(#loc155)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc157)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc303)
    cir.brcond %20 ^bb10, ^bb11 loc(#loc155)
  ^bb10:  // pred: ^bb9
    %21 = cir.const #true loc(#loc155)
    cir.br ^bb12(%21 : !cir.bool) loc(#loc155)
  ^bb11:  // pred: ^bb9
    %22 = cir.const #false loc(#loc155)
    cir.br ^bb12(%22 : !cir.bool) loc(#loc155)
  ^bb12(%23: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:27)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc155)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%23 : !cir.bool) loc(#loc155)
  ^bb14:  // pred: ^bb8
    %24 = cir.const #false loc(#loc155)
    cir.br ^bb15(%24 : !cir.bool) loc(#loc155)
  ^bb15(%25: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:27)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc155)
  ^bb16:  // pred: ^bb15
    cir.brcond %25 ^bb17, ^bb18 loc(#loc304)
  ^bb17:  // pred: ^bb16
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc163)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc163)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc164)
    cir.br ^bb19 loc(#loc160)
  ^bb18:  // pred: ^bb16
    %30 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc165)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.br ^bb19 loc(#loc152)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc152)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc150)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc145)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc145)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc128)
  } loc(#loc289)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc306)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc307)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc174)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.br ^bb1 loc(#loc309)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc310)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc310)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc178)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc178)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc311)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc183)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.br ^bb4 loc(#loc181)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<7> : !s32i loc(#loc185)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb4 loc(#loc177)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc313)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc314)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc314)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc189)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc189)
    cir.brcond %14 ^bb7, ^bb15 loc(#loc315)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc316)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc306)
    cir.store %15, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc306)
    cir.br ^bb9 loc(#loc317)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc197)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc318)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc319)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc202)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc202)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc203)
    cir.br ^bb12 loc(#loc199)
  ^bb11:  // pred: ^bb9
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc204)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    cir.br ^bb12 loc(#loc195)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc195)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc193)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc188)
  ^bb15:  // 2 preds: ^bb6, ^bb14
    cir.br ^bb16 loc(#loc188)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc168)
  } loc(#loc305)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc321)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc322)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc213)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb1 loc(#loc324)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc325)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc325)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc217)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc217)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc326)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<7> : !s32i loc(#loc220)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb3 loc(#loc216)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc216)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc328)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc329)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc329)
    %11 = cir.call %10() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc224)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc224)
    cir.brcond %12 ^bb6, ^bb14 loc(#loc330)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc331)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc321)
    cir.store %13, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc321)
    cir.br ^bb8 loc(#loc332)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc232)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %16 ^bb9, ^bb10 loc(#loc334)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc237)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc237)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc238)
    cir.br ^bb11 loc(#loc234)
  ^bb10:  // pred: ^bb8
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc239)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc239)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc240)
    cir.br ^bb11 loc(#loc230)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc230)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc228)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc223)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc223)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc207)
  } loc(#loc320)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":44:27)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":22:1)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":48:1)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":35:13)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":35:34)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":24:5)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":24:9)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":26:13)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":26:12)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":26:5)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":27:5)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":31:5)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":27:8)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":27:26)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":28:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":30:17)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":30:16)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":30:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":32:5)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":47:5)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":32:8)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":32:26)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":33:5)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":34:9)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":46:9)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":38:13)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":45:13)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":38:17)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":38:24)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":39:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":41:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":43:13)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":40:37)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":40:30)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":40:17)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":44:17)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":180:1)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":186:1)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":182:5)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":182:14)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":183:5)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":183:14)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":184:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":184:14)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":185:5)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":185:14)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":202:15)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":204:15)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":207:15)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":209:15)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":197:1)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":212:1)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":198:1)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":200:27)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":200:22)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":200:5)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":202:5)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":203:5)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":203:54)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":204:5)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":207:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":208:5)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":208:53)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":209:5)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":211:12)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":211:5)
#loc81 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc82 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":68:19)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":81:27)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":55:1)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":85:1)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":73:13)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":73:34)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":57:5)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":57:9)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":59:13)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":59:12)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":59:5)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":60:5)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":64:5)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":60:8)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":60:26)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":61:5)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":63:17)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":63:16)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":63:9)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":65:5)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":84:5)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":65:8)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":65:27)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":66:5)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":69:5)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":71:5)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":68:9)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":72:9)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":83:9)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:13)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":82:13)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:17)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:25)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:30)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:38)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:40)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":76:13)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":78:13)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":80:13)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":77:37)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":77:30)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":77:17)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":81:17)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":88:1)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":113:1)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":101:13)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":101:34)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":90:5)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":90:9)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":92:13)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":92:12)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":92:5)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":93:5)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":97:5)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":93:8)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":93:26)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":94:5)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":96:17)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":96:16)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":96:9)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":98:5)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":112:5)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":98:8)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":98:26)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":99:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":100:9)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":111:9)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:13)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":110:13)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:17)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:25)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:30)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:38)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:40)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":104:13)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":106:13)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":108:13)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":105:37)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":105:30)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":105:17)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":109:27)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":109:17)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":116:1)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":148:1)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":135:13)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":135:34)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":118:5)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":118:9)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":120:13)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":120:12)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":120:5)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":121:5)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":131:5)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":121:8)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":121:27)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":122:5)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":125:5)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":127:5)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":124:19)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":124:9)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":130:16)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":130:9)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":132:5)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":147:5)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":132:8)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":132:26)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":133:5)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":134:9)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":146:9)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":138:13)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":145:13)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":138:17)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":138:24)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":139:13)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":141:13)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":143:13)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":140:37)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":140:30)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":140:17)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":144:27)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":144:17)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":151:1)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":178:1)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":165:13)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":165:34)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":153:5)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":153:9)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":155:13)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":155:12)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":155:5)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":156:5)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":161:5)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":156:8)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":156:26)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":157:5)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":160:16)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":160:9)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":162:5)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":177:5)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":162:8)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":162:26)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":163:5)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":164:9)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":176:9)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":168:13)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":175:13)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":168:17)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":168:24)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":169:13)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":171:13)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":173:13)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":170:37)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":170:30)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":170:17)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":174:27)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":174:17)
#loc241 = loc(fused[#loc1, #loc2])
#loc242 = loc(fused[#loc3, #loc4])
#loc243 = loc(fused[#loc5, #loc6])
#loc244 = loc(fused[#loc8, #loc9])
#loc245 = loc(fused[#loc10, #loc11])
#loc246 = loc(fused[#loc12, #loc13])
#loc247 = loc(fused[#loc16, #loc14])
#loc248 = loc(fused[#loc17, #loc18])
#loc249 = loc(fused[#loc19, #loc20])
#loc250 = loc(fused[#loc21, #loc18])
#loc251 = loc(fused[#loc24, #loc22])
#loc252 = loc(fused[#loc25, #loc26])
#loc253 = loc(fused[#loc27, #loc28])
#loc254 = loc(fused[#loc29, #loc26])
#loc255 = loc(fused[#loc30, #loc31])
#loc256 = loc(fused[#loc32, #loc33])
#loc257 = loc(fused[#loc34, #loc35])
#loc258 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc259 = loc(fused[#loc43, #loc44])
#loc260 = loc(fused[#loc45, #loc46])
#loc261 = loc(fused[#loc47, #loc48])
#loc262 = loc(fused[#loc49, #loc50])
#loc263 = loc(fused[#loc51, #loc52])
#loc264 = loc(fused[#loc53, #loc54])
#loc265 = loc(fused[#loc55, #loc56])
#loc266 = loc(fused[#loc61, #loc62])
#loc269 = loc(fused[#loc72, #loc73])
#loc270 = loc(fused[#loc76, #loc77])
#loc271 = loc(fused[#loc80, #loc79])
#loc272 = loc(fused[#loc81, #loc82])
#loc273 = loc(fused[#loc85, #loc86])
#loc274 = loc(fused[#loc87, #loc88])
#loc275 = loc(fused[#loc89, #loc90])
#loc276 = loc(fused[#loc93, #loc91])
#loc277 = loc(fused[#loc94, #loc95])
#loc278 = loc(fused[#loc96, #loc97])
#loc279 = loc(fused[#loc98, #loc95])
#loc280 = loc(fused[#loc101, #loc99])
#loc281 = loc(fused[#loc102, #loc103])
#loc282 = loc(fused[#loc104, #loc105])
#loc283 = loc(fused[#loc106, #loc107, #loc108, #loc103])
#loc284 = loc(fused[#loc110, #loc111])
#loc285 = loc(fused[#loc112, #loc113])
#loc286 = loc(fused[#loc114, #loc115])
#loc287 = loc(fused[#loc117, #loc119])
#loc288 = loc(fused[#loc120, #loc121, #loc122, #loc113])
#loc289 = loc(fused[#loc127, #loc128])
#loc290 = loc(fused[#loc129, #loc130])
#loc291 = loc(fused[#loc131, #loc132])
#loc292 = loc(fused[#loc135, #loc133])
#loc293 = loc(fused[#loc136, #loc137])
#loc294 = loc(fused[#loc138, #loc139])
#loc295 = loc(fused[#loc140, #loc137])
#loc296 = loc(fused[#loc143, #loc141])
#loc297 = loc(fused[#loc144, #loc145])
#loc298 = loc(fused[#loc146, #loc147])
#loc299 = loc(fused[#loc148, #loc145])
#loc300 = loc(fused[#loc149, #loc150])
#loc301 = loc(fused[#loc151, #loc152])
#loc302 = loc(fused[#loc153, #loc154])
#loc303 = loc(fused[#loc156, #loc158])
#loc304 = loc(fused[#loc159, #loc160, #loc161, #loc152])
#loc305 = loc(fused[#loc167, #loc168])
#loc306 = loc(fused[#loc169, #loc170])
#loc307 = loc(fused[#loc171, #loc172])
#loc308 = loc(fused[#loc175, #loc173])
#loc309 = loc(fused[#loc176, #loc177])
#loc310 = loc(fused[#loc178, #loc179])
#loc311 = loc(fused[#loc180, #loc181, #loc182, #loc177])
#loc312 = loc(fused[#loc186, #loc185])
#loc313 = loc(fused[#loc187, #loc188])
#loc314 = loc(fused[#loc189, #loc190])
#loc315 = loc(fused[#loc191, #loc188])
#loc316 = loc(fused[#loc192, #loc193])
#loc317 = loc(fused[#loc194, #loc195])
#loc318 = loc(fused[#loc196, #loc197])
#loc319 = loc(fused[#loc198, #loc199, #loc200, #loc195])
#loc320 = loc(fused[#loc206, #loc207])
#loc321 = loc(fused[#loc208, #loc209])
#loc322 = loc(fused[#loc210, #loc211])
#loc323 = loc(fused[#loc214, #loc212])
#loc324 = loc(fused[#loc215, #loc216])
#loc325 = loc(fused[#loc217, #loc218])
#loc326 = loc(fused[#loc219, #loc216])
#loc327 = loc(fused[#loc221, #loc220])
#loc328 = loc(fused[#loc222, #loc223])
#loc329 = loc(fused[#loc224, #loc225])
#loc330 = loc(fused[#loc226, #loc223])
#loc331 = loc(fused[#loc227, #loc228])
#loc332 = loc(fused[#loc229, #loc230])
#loc333 = loc(fused[#loc231, #loc232])
#loc334 = loc(fused[#loc233, #loc234, #loc235, #loc230])
