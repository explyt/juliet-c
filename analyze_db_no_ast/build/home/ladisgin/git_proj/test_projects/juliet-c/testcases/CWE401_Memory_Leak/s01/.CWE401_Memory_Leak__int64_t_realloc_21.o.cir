!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":27:21)
#loc12 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":27:31)
#loc69 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":60:26)
#loc70 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":60:36)
#loc119 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":89:26)
#loc120 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":89:36)
#loc166 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":113:25)
#loc167 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":113:35)
#loc198 = loc(fused[#loc11, #loc12])
#loc221 = loc(fused[#loc69, #loc70])
#loc238 = loc(fused[#loc119, #loc120])
#loc255 = loc(fused[#loc166, #loc167])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc194)
  cir.func private  @printLongLongLine(!s64i) loc(#loc195)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc196)
  cir.func internal private  @badSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc198)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc13)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc196)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
      cir.if %3 {
      } loc(#loc200)
    } loc(#loc199)
    cir.return loc(#loc10)
  } loc(#loc197)
  cir.func no_proto  @CWE401_Memory_Leak__int64_t_realloc_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc22)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc203)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc24)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc25)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc26)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc204)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc205)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc206)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc207)
    cir.scope {
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
      %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc34)
      %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s64i>, !s32i loc(#loc209)
      %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc35)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc39)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
      } loc(#loc210)
    } loc(#loc208)
    %11 = cir.const #cir.int<5> : !s64i loc(#loc40)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc43)
    cir.store %11, %14 : !s64i, !cir.ptr<!s64i> loc(#loc211)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc44)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc46)
    %18 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc44)
    cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc47)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %20 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc196)
    cir.store %19, %20 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc50)
    cir.call @badSink(%21) : (!cir.ptr<!s64i>) -> () loc(#loc51)
    cir.return loc(#loc19)
  } loc(#loc201)
  cir.func no_proto  @CWE401_Memory_Leak__int64_t_realloc_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc53)
  } loc(#loc213)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc217)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc218)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc64)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc219)
  cir.func internal private  @goodB2G1Sink(%arg0: !cir.ptr<!s64i> loc(fused[#loc69, #loc70])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc221)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc71)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc217)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc74)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc78)
      } else {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc79)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc80)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc80)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
      } loc(#loc223)
    } loc(#loc222)
    cir.return loc(#loc68)
  } loc(#loc220)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc85)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc226)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc87)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc88)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc89)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc227)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc228)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc229)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc230)
    cir.scope {
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc96)
      %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc97)
      %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s64i>, !s32i loc(#loc232)
      %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc98)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc101)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc102)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
      } loc(#loc233)
    } loc(#loc231)
    %11 = cir.const #cir.int<5> : !s64i loc(#loc103)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc104)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc106)
    cir.store %11, %14 : !s64i, !cir.ptr<!s64i> loc(#loc234)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc107)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc109)
    %18 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc107)
    cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc110)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %20 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc217)
    cir.store %19, %20 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc113)
    cir.call @goodB2G1Sink(%21) : (!cir.ptr<!s64i>) -> () loc(#loc114)
    cir.return loc(#loc82)
  } loc(#loc224)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc236)
  cir.func internal private  @goodB2G2Sink(%arg0: !cir.ptr<!s64i> loc(fused[#loc119, #loc120])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc238)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc121)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc236)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc124)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc126)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc127)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc127)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc126)
      } loc(#loc240)
    } loc(#loc239)
    cir.return loc(#loc118)
  } loc(#loc237)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc132)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc243)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc134)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc135)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc135)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc136)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc244)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc245)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc246)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc247)
    cir.scope {
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc143)
      %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc144)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc144)
      %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s64i>, !s32i loc(#loc249)
      %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc145)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc148)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc149)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
      } loc(#loc250)
    } loc(#loc248)
    %11 = cir.const #cir.int<5> : !s64i loc(#loc150)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc151)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc153)
    cir.store %11, %14 : !s64i, !cir.ptr<!s64i> loc(#loc251)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc154)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc156)
    %18 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc154)
    cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc157)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %20 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc236)
    cir.store %19, %20 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc160)
    cir.call @goodB2G2Sink(%21) : (!cir.ptr<!s64i>) -> () loc(#loc161)
    cir.return loc(#loc129)
  } loc(#loc241)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc253)
  cir.func internal private  @goodG2BSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc166, #loc167])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc255)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc168)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc253)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc171)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc171)
      cir.if %3 {
      } loc(#loc257)
    } loc(#loc256)
    cir.return loc(#loc165)
  } loc(#loc254)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc259)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc177)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc260)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc179)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc179)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc179)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc179)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc179)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc179)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc179)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc261)
    %9 = cir.const #cir.int<5> : !s64i loc(#loc181)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc182)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s64i>, %11 : !s32i), !cir.ptr<!s64i> loc(#loc184)
    cir.store %9, %12 : !s64i, !cir.ptr<!s64i> loc(#loc262)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc185)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc186)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc187)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc185)
    cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc188)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %18 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc253)
    cir.store %17, %18 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc191)
    cir.call @goodG2BSink(%19) : (!cir.ptr<!s64i>) -> () loc(#loc192)
    cir.return loc(#loc174)
  } loc(#loc258)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":25:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":25:24)
#loc9 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":27:1)
#loc10 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":34:1)
#loc13 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":28:1)
#loc14 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":29:5)
#loc15 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":33:5)
#loc16 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":29:8)
#loc17 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":30:5)
#loc18 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":36:1)
#loc19 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":48:1)
#loc20 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":38:5)
#loc21 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":38:15)
#loc22 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":39:12)
#loc23 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":39:5)
#loc24 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":41:23)
#loc25 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":41:31)
#loc26 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":41:37)
#loc27 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":41:41)
#loc28 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":41:55)
#loc29 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":41:56)
#loc30 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":41:5)
#loc31 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":42:5)
#loc32 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":42:33)
#loc33 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":42:9)
#loc34 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":42:17)
#loc35 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":42:14)
#loc36 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":42:23)
#loc37 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":42:24)
#loc38 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":42:30)
#loc39 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":42:29)
#loc40 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":44:15)
#loc41 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":44:5)
#loc42 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":44:10)
#loc43 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":44:11)
#loc44 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":45:23)
#loc45 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":45:28)
#loc46 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":45:29)
#loc47 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":45:5)
#loc48 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":46:17)
#loc49 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":46:5)
#loc50 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":47:13)
#loc51 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":47:5)
#loc52 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":135:1)
#loc53 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":140:1)
#loc54 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":137:5)
#loc55 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":137:14)
#loc56 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":138:5)
#loc57 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":138:14)
#loc58 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":139:5)
#loc59 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":139:13)
#loc60 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":55:1)
#loc61 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":55:29)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc64 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":65:19)
#loc65 = loc("/usr/include/stdlib.h":687:1)
#loc66 = loc("/usr/include/stdlib.h":687:32)
#loc67 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":60:1)
#loc68 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":72:1)
#loc71 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":61:1)
#loc72 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":62:5)
#loc73 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":71:5)
#loc74 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":62:8)
#loc75 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":63:5)
#loc76 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":66:5)
#loc77 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":68:5)
#loc78 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":65:9)
#loc79 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":70:9)
#loc80 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":70:14)
#loc81 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":74:1)
#loc82 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":86:1)
#loc83 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":76:5)
#loc84 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":76:15)
#loc85 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":77:12)
#loc86 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":77:5)
#loc87 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":79:23)
#loc88 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":79:31)
#loc89 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":79:37)
#loc90 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":79:41)
#loc91 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":79:55)
#loc92 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":79:56)
#loc93 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":79:5)
#loc94 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":80:5)
#loc95 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":80:33)
#loc96 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":80:9)
#loc97 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":80:17)
#loc98 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":80:14)
#loc99 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":80:23)
#loc100 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":80:24)
#loc101 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":80:30)
#loc102 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":80:29)
#loc103 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":82:15)
#loc104 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":82:5)
#loc105 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":82:10)
#loc106 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":82:11)
#loc107 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":83:23)
#loc108 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":83:28)
#loc109 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":83:29)
#loc110 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":83:5)
#loc111 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":84:22)
#loc112 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":84:5)
#loc113 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":85:18)
#loc114 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":85:5)
#loc115 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":56:1)
#loc116 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":56:29)
#loc117 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":89:1)
#loc118 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":96:1)
#loc121 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":90:1)
#loc122 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":91:5)
#loc123 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":95:5)
#loc124 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":91:8)
#loc125 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":92:5)
#loc126 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":94:9)
#loc127 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":94:14)
#loc128 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":98:1)
#loc129 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":110:1)
#loc130 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":100:5)
#loc131 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":100:15)
#loc132 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":101:12)
#loc133 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":101:5)
#loc134 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":103:23)
#loc135 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":103:31)
#loc136 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":103:37)
#loc137 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":103:41)
#loc138 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":103:55)
#loc139 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":103:56)
#loc140 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":103:5)
#loc141 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":104:5)
#loc142 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":104:33)
#loc143 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":104:9)
#loc144 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":104:17)
#loc145 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":104:14)
#loc146 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":104:23)
#loc147 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":104:24)
#loc148 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":104:30)
#loc149 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":104:29)
#loc150 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":106:15)
#loc151 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":106:5)
#loc152 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":106:10)
#loc153 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":106:11)
#loc154 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":107:23)
#loc155 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":107:28)
#loc156 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":107:29)
#loc157 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":107:5)
#loc158 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":108:22)
#loc159 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":108:5)
#loc160 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":109:18)
#loc161 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":109:5)
#loc162 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":57:1)
#loc163 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":57:28)
#loc164 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":113:1)
#loc165 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":120:1)
#loc168 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":114:1)
#loc169 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":115:5)
#loc170 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":119:5)
#loc171 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":115:8)
#loc172 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":116:5)
#loc173 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":122:1)
#loc174 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":133:1)
#loc175 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":124:5)
#loc176 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":124:15)
#loc177 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":125:12)
#loc178 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":125:5)
#loc179 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":127:23)
#loc180 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":127:5)
#loc181 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":129:15)
#loc182 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":129:5)
#loc183 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":129:10)
#loc184 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":129:11)
#loc185 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":130:23)
#loc186 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":130:28)
#loc187 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":130:29)
#loc188 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":130:5)
#loc189 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":131:21)
#loc190 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":131:5)
#loc191 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":132:17)
#loc192 = loc("CWE401_Memory_Leak__int64_t_realloc_21.c":132:5)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc7, #loc8])
#loc197 = loc(fused[#loc9, #loc10])
#loc199 = loc(fused[#loc14, #loc15])
#loc200 = loc(fused[#loc17, #loc15])
#loc201 = loc(fused[#loc18, #loc19])
#loc202 = loc(fused[#loc20, #loc21])
#loc203 = loc(fused[#loc23, #loc22])
#loc204 = loc(fused[#loc27, #loc28])
#loc205 = loc(fused[#loc26, #loc28])
#loc206 = loc(fused[#loc24, #loc29])
#loc207 = loc(fused[#loc30, #loc29])
#loc208 = loc(fused[#loc31, #loc32])
#loc209 = loc(fused[#loc33, #loc34])
#loc210 = loc(fused[#loc36, #loc32])
#loc211 = loc(fused[#loc41, #loc40])
#loc212 = loc(fused[#loc49, #loc48])
#loc213 = loc(fused[#loc52, #loc53])
#loc214 = loc(fused[#loc54, #loc55])
#loc215 = loc(fused[#loc56, #loc57])
#loc216 = loc(fused[#loc58, #loc59])
#loc217 = loc(fused[#loc60, #loc61])
#loc218 = loc(fused[#loc62, #loc63])
#loc219 = loc(fused[#loc65, #loc66])
#loc220 = loc(fused[#loc67, #loc68])
#loc222 = loc(fused[#loc72, #loc73])
#loc223 = loc(fused[#loc75, #loc76, #loc77, #loc73])
#loc224 = loc(fused[#loc81, #loc82])
#loc225 = loc(fused[#loc83, #loc84])
#loc226 = loc(fused[#loc86, #loc85])
#loc227 = loc(fused[#loc90, #loc91])
#loc228 = loc(fused[#loc89, #loc91])
#loc229 = loc(fused[#loc87, #loc92])
#loc230 = loc(fused[#loc93, #loc92])
#loc231 = loc(fused[#loc94, #loc95])
#loc232 = loc(fused[#loc96, #loc97])
#loc233 = loc(fused[#loc99, #loc95])
#loc234 = loc(fused[#loc104, #loc103])
#loc235 = loc(fused[#loc112, #loc111])
#loc236 = loc(fused[#loc115, #loc116])
#loc237 = loc(fused[#loc117, #loc118])
#loc239 = loc(fused[#loc122, #loc123])
#loc240 = loc(fused[#loc125, #loc123])
#loc241 = loc(fused[#loc128, #loc129])
#loc242 = loc(fused[#loc130, #loc131])
#loc243 = loc(fused[#loc133, #loc132])
#loc244 = loc(fused[#loc137, #loc138])
#loc245 = loc(fused[#loc136, #loc138])
#loc246 = loc(fused[#loc134, #loc139])
#loc247 = loc(fused[#loc140, #loc139])
#loc248 = loc(fused[#loc141, #loc142])
#loc249 = loc(fused[#loc143, #loc144])
#loc250 = loc(fused[#loc146, #loc142])
#loc251 = loc(fused[#loc151, #loc150])
#loc252 = loc(fused[#loc159, #loc158])
#loc253 = loc(fused[#loc162, #loc163])
#loc254 = loc(fused[#loc164, #loc165])
#loc256 = loc(fused[#loc169, #loc170])
#loc257 = loc(fused[#loc172, #loc170])
#loc258 = loc(fused[#loc173, #loc174])
#loc259 = loc(fused[#loc175, #loc176])
#loc260 = loc(fused[#loc178, #loc177])
#loc261 = loc(fused[#loc180, #loc179])
#loc262 = loc(fused[#loc182, #loc181])
#loc263 = loc(fused[#loc190, #loc189])
