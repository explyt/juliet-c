!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":24:67)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":24:74)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":24:78)
#loc49 = loc(fused[#loc8, #loc9])
!ty_anon_struct = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct2 = !cir.record<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_base = !cir.record<class "CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81::CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>} #cir.record.decl.ast>
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad = !cir.record<class "CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81::CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad" {!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_base} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc46)
  cir.func private @printIntLine(!s32i) loc(#loc47)
  cir.func @_ZNK55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8159CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad6actionEi(%arg0: !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad> loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":24:67), %arg1: !s32i loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc50)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc51)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc52)
    %3 = cir.alloca !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %3 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad>> loc(#loc15)
    cir.store %arg1, %4 : !s32i, !cir.ptr<!s32i> loc(#loc15)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_813A3ACWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad> loc(#loc7)
    cir.br ^bb1 loc(#loc53)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc18)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc54)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc55)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc56)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc7)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc57)
    cir.store %13, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc58)
    cir.br ^bb2 loc(#loc59)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc28)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc60)
    cir.br ^bb3 loc(#loc59)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc31)
    %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc61)
    cir.brcond %19 ^bb4, ^bb8 loc(#loc61)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc62)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc36)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc38)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc64)
    cir.br ^bb3 loc(#loc59)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc41)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc42)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    cir.delete.array %30 : <!s32i> loc(#loc43)
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc48)
  cir.global external dsolocal @_ZTVN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8159CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_badE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8159CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZNK55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8159CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad6actionEi> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct2 {alignment = 8 : i64} loc(#loc65)
  cir.global "private" external @_ZTVN10__cxxabiv120__si_class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc44)
  cir.global external @_ZTSN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8159CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_badE = #cir.const_array<"N55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8159CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_badE" : !cir.array<!s8i x 120>> : !cir.array<!s8i x 120> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc44)
  cir.global linkonce_odr comdat @_ZTSN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8160CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_baseE = #cir.const_array<"N55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8160CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_baseE" : !cir.array<!s8i x 121>> : !cir.array<!s8i x 121> {alignment = 1 : i64} loc(#loc44)
  cir.global constant external @_ZTIN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8160CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8160CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc44)
  cir.global constant external @_ZTIN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8159CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_badE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv120__si_class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8159CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_8160CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc44)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":24:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":39:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":27:9)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":27:16)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":27:26)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":28:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":28:14)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":25:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":26:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":38:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":30:21)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":30:28)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":30:38)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":30:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":31:37)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":31:28)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":31:46)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":31:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":32:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":35:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":32:18)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":32:14)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":32:21)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":32:33)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":33:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":34:29)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":34:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":34:24)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":34:25)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":32:40)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":32:39)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":36:22)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":36:33)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":36:34)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":36:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81_bad.cpp":37:19)
#loc44 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81.h":31:1)
#loc45 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_81.h":35:1)
#loc46 = loc(fused[#loc1, #loc2])
#loc47 = loc(fused[#loc3, #loc4])
#loc48 = loc(fused[#loc5, #loc6])
#loc50 = loc(fused[#loc10, #loc11])
#loc51 = loc(fused[#loc10, #loc12])
#loc52 = loc(fused[#loc13, #loc14])
#loc53 = loc(fused[#loc16, #loc17])
#loc54 = loc(fused[#loc19, #loc20])
#loc55 = loc(fused[#loc18, #loc20])
#loc56 = loc(fused[#loc21, #loc20])
#loc57 = loc(fused[#loc23, #loc24])
#loc58 = loc(fused[#loc25, #loc24])
#loc59 = loc(fused[#loc26, #loc27])
#loc60 = loc(fused[#loc29, #loc28])
#loc61 = loc(fused[#loc30, #loc31])
#loc62 = loc(fused[#loc32, #loc27])
#loc63 = loc(fused[#loc34, #loc33])
#loc64 = loc(fused[#loc38, #loc37])
#loc65 = loc(fused[#loc44, #loc45])
