!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45_badData = #cir.ptr<null> : !cir.ptr<!s64i> {alignment = 8 : i64} loc(#loc77)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc80)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc81)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc8)
    cir.store %9, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc80)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc10)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc10)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc10)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc10)
    cir.store %16, %7 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc81)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc11)
    cir.store %17, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc82)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc13)
    %19 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45_badData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc77)
    cir.store %18, %19 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc83)
    %20 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %20() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc15)
    cir.return loc(#loc4)
  } loc(#loc78)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc18)
  } loc(#loc85)
  cir.func private @printLongLongLine(!s64i) loc(#loc87)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc89)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45_badData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc77)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc89)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc91)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc91)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc91)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc31)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc32)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc32)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc33)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc33)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc92)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc93)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc94)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc39)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc40)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc38)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc41)
    } loc(#loc90)
    cir.return loc(#loc24)
  } loc(#loc88)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s64i> {alignment = 8 : i64} loc(#loc95)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc98)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc49)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc49)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc49)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc49)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc49)
    %7 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc99)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc49)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc49)
    cir.store %9, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc98)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc51)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc51)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc51)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc51)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc51)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc51)
    cir.store %16, %7 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc99)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
    cir.store %17, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc100)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc54)
    %19 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45_goodG2BData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc95)
    cir.store %18, %19 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc101)
    %20 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc102)
    cir.call %20() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc45)
  } loc(#loc96)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45_goodG2BData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc95)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc61)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc104)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc106)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc106)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc106)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc66)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc66)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc67)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc67)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc68)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc68)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc107)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc108)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc109)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc73)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc74)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc75)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc73)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc76)
    } loc(#loc105)
    cir.return loc(#loc59)
  } loc(#loc103)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":19:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":19:18)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":35:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":45:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":37:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":37:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":38:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":38:42)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":39:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":39:43)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":42:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":42:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":43:83)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":43:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":44:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":44:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":74:1)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":77:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":76:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":76:13)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":24:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":33:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":26:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":26:22)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":27:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":32:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":28:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":28:33)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":30:16)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":30:22)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":30:30)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":30:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":30:48)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":30:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":30:49)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":31:27)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":31:32)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":31:33)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":31:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":20:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":20:18)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":63:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":72:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":65:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":65:15)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":66:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":66:42)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":67:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":67:43)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":69:12)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":69:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":70:87)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":70:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":71:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":71:17)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":52:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":61:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":54:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":54:22)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":55:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":60:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":56:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":56:33)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":58:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":58:22)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":58:30)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":58:34)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":58:48)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":58:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":58:49)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":59:27)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":59:32)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":59:33)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_45.c":59:9)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc12, #loc11])
#loc83 = loc(fused[#loc14, #loc13])
#loc84 = loc(fused[#loc15, #loc16])
#loc85 = loc(fused[#loc17, #loc18])
#loc86 = loc(fused[#loc19, #loc20])
#loc87 = loc(fused[#loc21, #loc22])
#loc88 = loc(fused[#loc23, #loc24])
#loc89 = loc(fused[#loc25, #loc26])
#loc90 = loc(fused[#loc27, #loc28])
#loc91 = loc(fused[#loc29, #loc30])
#loc92 = loc(fused[#loc34, #loc35])
#loc93 = loc(fused[#loc33, #loc35])
#loc94 = loc(fused[#loc36, #loc37])
#loc95 = loc(fused[#loc42, #loc43])
#loc96 = loc(fused[#loc44, #loc45])
#loc97 = loc(fused[#loc46, #loc47])
#loc98 = loc(fused[#loc48, #loc49])
#loc99 = loc(fused[#loc50, #loc51])
#loc100 = loc(fused[#loc53, #loc52])
#loc101 = loc(fused[#loc55, #loc54])
#loc102 = loc(fused[#loc56, #loc57])
#loc103 = loc(fused[#loc58, #loc59])
#loc104 = loc(fused[#loc60, #loc61])
#loc105 = loc(fused[#loc62, #loc63])
#loc106 = loc(fused[#loc64, #loc65])
#loc107 = loc(fused[#loc69, #loc70])
#loc108 = loc(fused[#loc68, #loc70])
#loc109 = loc(fused[#loc71, #loc72])
