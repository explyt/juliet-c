!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc150)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc152)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc153)
  cir.func private @printIntLine(!s32i) loc(#loc154)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc155)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc158)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc159)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc160)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc161)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc162)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc163)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc162)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc163)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc31)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc17)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %11 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc36)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc151)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %16 = cir.call @__isoc99_fscanf(%13, %15, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc36)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    cir.store %17, %18 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb2 loc(#loc34)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc167)
  ^bb3:  // pred: ^bb2
    %19 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb4 loc(#loc168)
  ^bb4:  // pred: ^bb3
    %21 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc46)
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc47)
    %24 = cir.const #cir.int<4> : !u64i loc(#loc169)
    %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc170)
    %26 = cir.call @malloc(%25) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc171)
    cir.store %27, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc172)
    cir.br ^bb5 loc(#loc173)
  ^bb5:  // pred: ^bb4
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc55)
    %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s32i>, !cir.bool loc(#loc174)
    cir.brcond %31 ^bb6, ^bb7 loc(#loc175)
  ^bb6:  // pred: ^bb5
    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc57)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc59)
    cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc57)
    cir.br ^bb7 loc(#loc53)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc53)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc176)
  ^bb9:  // pred: ^bb8
    %35 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc62)
    cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.br ^bb10 loc(#loc176)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %37 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc65)
    %40 = cir.cmp(lt, %37, %39) : !u64i, !cir.bool loc(#loc178)
    cir.brcond %40 ^bb11, ^bb15 loc(#loc66)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc179)
  ^bb12:  // pred: ^bb11
    %41 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %42 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %43 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !u64i), !cir.ptr<!s32i> loc(#loc71)
    cir.store %41, %44 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb13 loc(#loc61)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc61)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %46 = cir.unary(inc, %45) : !u64i, !u64i loc(#loc73)
    cir.store %46, %2 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb10 loc(#loc176)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc61)
  ^bb16:  // pred: ^bb15
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc76)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc77)
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc78)
    cir.call @free(%52) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
    cir.br ^bb17 loc(#loc45)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc42)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc15)
  } loc(#loc156)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    cir.return loc(#loc81)
  } loc(#loc182)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc186)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc187)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc188)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc190)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc191)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc101)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %11 = cir.const #cir.int<20> : !s32i loc(#loc106)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb2 loc(#loc104)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc196)
  ^bb3:  // pred: ^bb2
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.br ^bb4 loc(#loc197)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc116)
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc117)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc198)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc199)
    %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc200)
    cir.store %22, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc201)
    cir.br ^bb5 loc(#loc202)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc124)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc125)
    %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc203)
    cir.brcond %26 ^bb6, ^bb7 loc(#loc204)
  ^bb6:  // pred: ^bb5
    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc127)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc129)
    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc127)
    cir.br ^bb7 loc(#loc123)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc205)
  ^bb9:  // pred: ^bb8
    %30 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc132)
    cir.store %31, %2 : !u64i, !cir.ptr<!u64i> loc(#loc206)
    cir.br ^bb10 loc(#loc205)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc135)
    %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc207)
    cir.brcond %35 ^bb11, ^bb15 loc(#loc136)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc208)
  ^bb12:  // pred: ^bb11
    %36 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !u64i), !cir.ptr<!s32i> loc(#loc141)
    cir.store %36, %39 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.br ^bb13 loc(#loc131)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc131)
  ^bb14:  // pred: ^bb13
    %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc142)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc143)
    cir.store %41, %2 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.br ^bb10 loc(#loc205)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc131)
  ^bb16:  // pred: ^bb15
    %42 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc146)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc147)
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc148)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
    cir.br ^bb17 loc(#loc115)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc112)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc85)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":31:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":21:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":51:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":29:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":29:21)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":35:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":35:21)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":37:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":37:20)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":38:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":38:18)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":23:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":23:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":24:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":24:22)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":25:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":25:22)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":27:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":27:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":27:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":28:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":33:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":29:20)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":31:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":31:16)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":32:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":32:10)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":32:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":34:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":50:5)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":35:20)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":36:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":49:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":41:32)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":41:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":41:46)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":41:56)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":41:57)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":41:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":42:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":42:47)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":42:17)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":42:31)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":42:37)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":42:38)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":42:44)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":42:43)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":43:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":46:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":43:22)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":43:18)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":43:25)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":43:37)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":43:27)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":44:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":45:33)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":45:17)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":45:28)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":45:29)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":43:44)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":43:43)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":47:26)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":47:37)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":47:38)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":47:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":48:18)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":48:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":90:1)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":93:1)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":92:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":92:13)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":58:1)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":88:1)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":66:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":66:21)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":72:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":72:21)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":74:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":74:20)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":75:13)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":75:18)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":60:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":60:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":61:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":61:22)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":62:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":62:22)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":64:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":64:12)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":64:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":65:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":70:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":66:20)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":68:16)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":68:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":69:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":69:10)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":69:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":71:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":87:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":72:20)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":73:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":86:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":78:32)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":78:39)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":78:46)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":78:56)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":78:57)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":78:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":79:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":79:47)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":79:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":79:31)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":79:37)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":79:38)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":79:44)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":79:43)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":80:13)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":83:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":80:22)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":80:18)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":80:25)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":80:37)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":80:27)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":81:13)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":82:33)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":82:17)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":82:28)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":82:29)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":80:44)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":80:43)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":84:26)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":84:37)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":84:38)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":84:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":85:18)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_32.c":85:13)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc3, #loc4])
#loc152 = loc(fused[#loc6, #loc7])
#loc153 = loc(fused[#loc8, #loc9])
#loc154 = loc(fused[#loc10, #loc11])
#loc155 = loc(fused[#loc12, #loc13])
#loc156 = loc(fused[#loc14, #loc15])
#loc157 = loc(fused[#loc16, #loc17])
#loc158 = loc(fused[#loc18, #loc19])
#loc159 = loc(fused[#loc20, #loc21])
#loc160 = loc(fused[#loc22, #loc23])
#loc161 = loc(fused[#loc24, #loc25])
#loc162 = loc(fused[#loc26, #loc27])
#loc163 = loc(fused[#loc28, #loc29])
#loc164 = loc(fused[#loc32, #loc30])
#loc165 = loc(fused[#loc33, #loc34])
#loc166 = loc(fused[#loc40, #loc38])
#loc167 = loc(fused[#loc41, #loc42])
#loc168 = loc(fused[#loc44, #loc45])
#loc169 = loc(fused[#loc48, #loc49])
#loc170 = loc(fused[#loc47, #loc49])
#loc171 = loc(fused[#loc46, #loc50])
#loc172 = loc(fused[#loc51, #loc50])
#loc173 = loc(fused[#loc52, #loc53])
#loc174 = loc(fused[#loc54, #loc55])
#loc175 = loc(fused[#loc56, #loc53])
#loc176 = loc(fused[#loc60, #loc61])
#loc177 = loc(fused[#loc63, #loc62])
#loc178 = loc(fused[#loc64, #loc65])
#loc179 = loc(fused[#loc67, #loc61])
#loc180 = loc(fused[#loc69, #loc68])
#loc181 = loc(fused[#loc73, #loc72])
#loc182 = loc(fused[#loc80, #loc81])
#loc183 = loc(fused[#loc82, #loc83])
#loc184 = loc(fused[#loc84, #loc85])
#loc185 = loc(fused[#loc86, #loc87])
#loc186 = loc(fused[#loc88, #loc89])
#loc187 = loc(fused[#loc90, #loc91])
#loc188 = loc(fused[#loc92, #loc93])
#loc189 = loc(fused[#loc94, #loc95])
#loc190 = loc(fused[#loc96, #loc97])
#loc191 = loc(fused[#loc98, #loc99])
#loc192 = loc(fused[#loc102, #loc100])
#loc193 = loc(fused[#loc103, #loc104])
#loc194 = loc(fused[#loc107, #loc106])
#loc195 = loc(fused[#loc110, #loc108])
#loc196 = loc(fused[#loc111, #loc112])
#loc197 = loc(fused[#loc114, #loc115])
#loc198 = loc(fused[#loc118, #loc119])
#loc199 = loc(fused[#loc117, #loc119])
#loc200 = loc(fused[#loc116, #loc120])
#loc201 = loc(fused[#loc121, #loc120])
#loc202 = loc(fused[#loc122, #loc123])
#loc203 = loc(fused[#loc124, #loc125])
#loc204 = loc(fused[#loc126, #loc123])
#loc205 = loc(fused[#loc130, #loc131])
#loc206 = loc(fused[#loc133, #loc132])
#loc207 = loc(fused[#loc134, #loc135])
#loc208 = loc(fused[#loc137, #loc131])
#loc209 = loc(fused[#loc139, #loc138])
#loc210 = loc(fused[#loc143, #loc142])
