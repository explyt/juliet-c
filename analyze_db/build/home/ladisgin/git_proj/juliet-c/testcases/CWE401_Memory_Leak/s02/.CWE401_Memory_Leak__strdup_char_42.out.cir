!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE401_Memory_Leak__strdup_char_42.c":24:25)
#loc10 = loc("CWE401_Memory_Leak__strdup_char_42.c":24:32)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_42.c":108:10)
#loc51 = loc("CWE401_Memory_Leak__strdup_char_42.c":108:14)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_42.c":108:20)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_42.c":108:32)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_42.c":72:29)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_42.c":72:36)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_42.c":51:29)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_42.c":51:36)
#loc127 = loc(fused[#loc9, #loc10])
#loc142 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc70, #loc71])
#loc159 = loc(fused[#loc102, #loc103])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodB2GSource.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc123)
  cir.global "private" constant cir_private @__const.badSource.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc124)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.badSource.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc124)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc124)
    %4 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc14)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc15)
    %6 = cir.call @strdup(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc14)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc19)
    cir.br ^bb2 loc(#loc13)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.store %8, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    cir.return %9 : !cir.ptr<!s8i> loc(#loc130)
  } loc(#loc126)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc29)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.return loc(#loc23)
  } loc(#loc131)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc138)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc139)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc57)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE401_Memory_Leak__strdup_char_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE401_Memory_Leak__strdup_char_42_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE401_Memory_Leak__strdup_char_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call @CWE401_Memory_Leak__strdup_char_42_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.return %17 : !s32i loc(#loc146)
  } loc(#loc141)
  cir.func internal private @goodB2GSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc70, #loc71])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc69)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.goodB2GSource.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc123)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc123)
    %4 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc75)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc76)
    %6 = cir.call @strdup(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc75)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb2 loc(#loc74)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.store %8, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    cir.return %9 : !cir.ptr<!s8i> loc(#loc151)
  } loc(#loc147)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc152)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc89)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %3 = cir.call @goodB2GSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc92)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc95)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    cir.return loc(#loc86)
  } loc(#loc153)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc99)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc102, #loc103])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc101)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc105)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc105)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc105)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc105)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc105)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc107)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc99)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc99)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    cir.return %16 : !cir.ptr<!s8i> loc(#loc161)
  } loc(#loc158)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc117)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc120)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.return loc(#loc114)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_42.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_42.c":75:9)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_42.c":75:27)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_42.c":27:9)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_42.c":27:27)
#loc5 = loc("/usr/include/string.h":187:1)
#loc6 = loc("/usr/include/string.h":188:35)
#loc7 = loc("CWE401_Memory_Leak__strdup_char_42.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__strdup_char_42.c":34:1)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_42.c":25:1)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_42.c":26:5)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_42.c":32:5)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_42.c":29:16)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_42.c":29:23)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_42.c":29:9)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_42.c":29:31)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_42.c":31:19)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_42.c":31:9)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_42.c":33:12)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_42.c":33:5)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_42.c":36:1)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_42.c":44:1)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_42.c":38:5)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_42.c":38:12)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_42.c":39:12)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_42.c":39:5)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_42.c":40:22)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_42.c":40:12)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_42.c":40:5)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_42.c":40:26)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_42.c":93:1)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_42.c":97:1)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_42.c":95:5)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_42.c":95:13)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_42.c":96:5)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_42.c":96:13)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_42.c":113:15)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_42.c":115:15)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_42.c":118:15)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_42.c":120:15)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_42.c":108:1)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_42.c":123:1)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_42.c":109:1)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_42.c":111:27)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_42.c":111:22)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_42.c":111:5)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_42.c":113:5)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_42.c":114:5)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_42.c":114:45)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_42.c":115:5)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_42.c":118:5)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_42.c":119:5)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_42.c":119:44)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_42.c":120:5)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_42.c":122:12)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_42.c":122:5)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_42.c":72:1)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_42.c":82:1)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_42.c":73:1)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_42.c":74:5)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_42.c":80:5)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_42.c":77:16)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_42.c":77:23)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_42.c":77:9)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_42.c":77:31)
#loc79 = loc("CWE401_Memory_Leak__strdup_char_42.c":79:19)
#loc80 = loc("CWE401_Memory_Leak__strdup_char_42.c":79:9)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_42.c":81:12)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_42.c":81:5)
#loc83 = loc("/usr/include/stdlib.h":687:1)
#loc84 = loc("/usr/include/stdlib.h":687:32)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_42.c":84:1)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_42.c":91:1)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_42.c":86:5)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_42.c":86:12)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_42.c":87:12)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_42.c":87:5)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_42.c":88:26)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_42.c":88:12)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_42.c":88:5)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_42.c":88:30)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_42.c":90:5)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_42.c":90:10)
#loc97 = loc("/usr/include/string.h":141:1)
#loc98 = loc("/usr/include/string.h":142:14)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_42.c":56:18)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_42.c":51:1)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_42.c":59:1)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_42.c":52:1)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_42.c":54:20)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_42.c":54:5)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_42.c":56:5)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_42.c":56:12)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_42.c":57:15)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_42.c":57:5)
#loc111 = loc("CWE401_Memory_Leak__strdup_char_42.c":58:12)
#loc112 = loc("CWE401_Memory_Leak__strdup_char_42.c":58:5)
#loc113 = loc("CWE401_Memory_Leak__strdup_char_42.c":61:1)
#loc114 = loc("CWE401_Memory_Leak__strdup_char_42.c":69:1)
#loc115 = loc("CWE401_Memory_Leak__strdup_char_42.c":63:5)
#loc116 = loc("CWE401_Memory_Leak__strdup_char_42.c":63:12)
#loc117 = loc("CWE401_Memory_Leak__strdup_char_42.c":64:12)
#loc118 = loc("CWE401_Memory_Leak__strdup_char_42.c":64:5)
#loc119 = loc("CWE401_Memory_Leak__strdup_char_42.c":65:26)
#loc120 = loc("CWE401_Memory_Leak__strdup_char_42.c":65:12)
#loc121 = loc("CWE401_Memory_Leak__strdup_char_42.c":65:5)
#loc122 = loc("CWE401_Memory_Leak__strdup_char_42.c":65:30)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc12, #loc13])
#loc129 = loc(fused[#loc16, #loc17])
#loc130 = loc(fused[#loc21, #loc20])
#loc131 = loc(fused[#loc22, #loc23])
#loc132 = loc(fused[#loc24, #loc25])
#loc133 = loc(fused[#loc27, #loc26])
#loc134 = loc(fused[#loc30, #loc31])
#loc135 = loc(fused[#loc32, #loc33])
#loc136 = loc(fused[#loc34, #loc35])
#loc137 = loc(fused[#loc36, #loc37])
#loc138 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc40, #loc41])
#loc140 = loc(fused[#loc42, #loc43])
#loc141 = loc(fused[#loc48, #loc49])
#loc144 = loc(fused[#loc59, #loc60])
#loc145 = loc(fused[#loc63, #loc64])
#loc146 = loc(fused[#loc67, #loc66])
#loc147 = loc(fused[#loc68, #loc69])
#loc149 = loc(fused[#loc73, #loc74])
#loc150 = loc(fused[#loc77, #loc78])
#loc151 = loc(fused[#loc82, #loc81])
#loc152 = loc(fused[#loc83, #loc84])
#loc153 = loc(fused[#loc85, #loc86])
#loc154 = loc(fused[#loc87, #loc88])
#loc155 = loc(fused[#loc90, #loc89])
#loc156 = loc(fused[#loc93, #loc94])
#loc157 = loc(fused[#loc97, #loc98])
#loc158 = loc(fused[#loc100, #loc101])
#loc160 = loc(fused[#loc106, #loc105])
#loc161 = loc(fused[#loc112, #loc111])
#loc162 = loc(fused[#loc113, #loc114])
#loc163 = loc(fused[#loc115, #loc116])
#loc164 = loc(fused[#loc118, #loc117])
#loc165 = loc(fused[#loc121, #loc122])
