!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:24)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN44CWE190_Integer_Overflow__int_fgets_square_629badSourceERi(!cir.ptr<!s32i>) loc(#loc71)
  cir.func private @printIntLine(!s32i) loc(#loc72)
  cir.func @_ZN44CWE190_Integer_Overflow__int_fgets_square_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc74)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc75)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_629badSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc13)
    cir.br ^bb1 loc(#loc77)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) nsw : !s32i loc(#loc16)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc18)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc73)
  cir.func private @_ZN44CWE190_Integer_Overflow__int_fgets_square_6213goodG2BSourceERi(!cir.ptr<!s32i>) loc(#loc78)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__int_fgets_square_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc80)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc81)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc27)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_6213goodG2BSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc29)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %5 = cir.binop(mul, %3, %4) nsw : !s32i loc(#loc32)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc34)
    cir.br ^bb2 loc(#loc31)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc22)
  } loc(#loc79)
  cir.func private @_ZN44CWE190_Integer_Overflow__int_fgets_square_6213goodB2GSourceERi(!cir.ptr<!s32i>) loc(#loc84)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc37)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc40)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__int_fgets_square_62L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc87)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc88)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_6213goodB2GSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc49)
    cir.br ^bb1 loc(#loc90)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc53)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc53)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc53)
    %8 = cir.cmp(gt, %3, %7) : !s32i, !cir.bool loc(#loc91)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc54)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %10 = cir.abs %9 poison : !s32i loc(#loc56)
    %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc56)
    %12 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc57)
    %13 = cir.const #cir.int<2147483647> : !s32i loc(#loc58)
    %14 = cir.cast(int_to_float, %13 : !s32i), !cir.double loc(#loc58)
    %15 = cir.call @sqrt(%14) : (!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc57)
    %16 = cir.cast(float_to_int, %15 : !cir.double), !s64i loc(#loc57)
    %17 = cir.cmp(lt, %11, %16) : !s64i, !cir.bool loc(#loc92)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc54)
  ^bb3:  // pred: ^bb2
    %18 = cir.const #true loc(#loc54)
    cir.br ^bb5(%18 : !cir.bool) loc(#loc54)
  ^bb4:  // pred: ^bb2
    %19 = cir.const #false loc(#loc54)
    cir.br ^bb5(%19 : !cir.bool) loc(#loc54)
  ^bb5(%20: !cir.bool loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:24)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8(%20 : !cir.bool) loc(#loc54)
  ^bb7:  // pred: ^bb1
    %21 = cir.const #false loc(#loc54)
    cir.br ^bb8(%21 : !cir.bool) loc(#loc54)
  ^bb8(%22: !cir.bool loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:24)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc54)
  ^bb9:  // pred: ^bb8
    cir.brcond %22 ^bb10, ^bb11 loc(#loc93)
  ^bb10:  // pred: ^bb9
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %25 = cir.binop(mul, %23, %24) nsw : !s32i loc(#loc63)
    cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc65)
    cir.br ^bb12 loc(#loc61)
  ^bb11:  // pred: ^bb9
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc40)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb12 loc(#loc51)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc51)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc42)
  } loc(#loc86)
  cir.func @_ZN44CWE190_Integer_Overflow__int_fgets_square_624goodEv() extra(#fn_attr) {
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_62L7goodG2BEv() : () -> () loc(#loc69)
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_62L7goodB2GEv() : () -> () loc(#loc70)
    cir.return loc(#loc68)
  } loc(#loc94)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_62a.cpp":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":28:1)
#loc2 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":28:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":30:1)
#loc6 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":41:1)
#loc7 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":38:9)
#loc8 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":38:29)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":32:5)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":32:9)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":34:12)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":34:5)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":35:5)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":36:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":40:5)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":38:22)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":39:22)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":39:9)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":48:1)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":48:29)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":50:1)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":61:1)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":58:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":58:29)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":52:5)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":52:9)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":54:12)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":54:5)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":55:5)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":56:5)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":60:5)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":58:22)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":59:22)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":59:9)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":64:1)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":64:29)
#loc37 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":80:19)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":66:1)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":82:1)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":75:9)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":75:29)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":68:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":68:9)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":70:12)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":70:5)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":71:5)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:5)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":81:5)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:9)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:16)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:31)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:27)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:45)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:58)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":73:65)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":74:5)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":77:5)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":79:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":75:22)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":76:22)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":76:9)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":80:9)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":84:1)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":88:1)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":86:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_square_62a.cpp":87:5)
#loc71 = loc(fused[#loc1, #loc2])
#loc72 = loc(fused[#loc3, #loc4])
#loc73 = loc(fused[#loc5, #loc6])
#loc74 = loc(fused[#loc7, #loc8])
#loc75 = loc(fused[#loc9, #loc10])
#loc76 = loc(fused[#loc12, #loc11])
#loc77 = loc(fused[#loc14, #loc15])
#loc78 = loc(fused[#loc19, #loc20])
#loc79 = loc(fused[#loc21, #loc22])
#loc80 = loc(fused[#loc23, #loc24])
#loc81 = loc(fused[#loc25, #loc26])
#loc82 = loc(fused[#loc28, #loc27])
#loc83 = loc(fused[#loc30, #loc31])
#loc84 = loc(fused[#loc35, #loc36])
#loc85 = loc(fused[#loc38, #loc39])
#loc86 = loc(fused[#loc41, #loc42])
#loc87 = loc(fused[#loc43, #loc44])
#loc88 = loc(fused[#loc45, #loc46])
#loc89 = loc(fused[#loc48, #loc47])
#loc90 = loc(fused[#loc50, #loc51])
#loc91 = loc(fused[#loc52, #loc53])
#loc92 = loc(fused[#loc56, #loc59])
#loc93 = loc(fused[#loc60, #loc61, #loc62, #loc51])
#loc94 = loc(fused[#loc67, #loc68])
