!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc103)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc109)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc110)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc114)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc30)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc115)
    } loc(#loc113)
    %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc31)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc117)
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      cir.store %19, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
      %20 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    } loc(#loc116)
    cir.return loc(#loc11)
  } loc(#loc106)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc120)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc121)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc119)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc51)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc53)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc53)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc53)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc53)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc53)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc55)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc57)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc55)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc127)
      %16 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
      cir.store %17, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
      %18 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      cir.store %18, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    } loc(#loc126)
    cir.return loc(#loc48)
  } loc(#loc122)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc129)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc74)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc76)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc133)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc134)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc74)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc84)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc138)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc86)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc88)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc86)
      } loc(#loc139)
    } loc(#loc137)
    %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc89)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc91)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc91)
    %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc141)
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      cir.store %19, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
      %20 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
      %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc100)
      %22 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
      cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc100)
    } loc(#loc140)
    cir.return loc(#loc69)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_realloc_31.c":32:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_realloc_31.c":24:1)
#loc11 = loc("CWE401_Memory_Leak__char_realloc_31.c":40:1)
#loc12 = loc("CWE401_Memory_Leak__char_realloc_31.c":26:5)
#loc13 = loc("CWE401_Memory_Leak__char_realloc_31.c":26:12)
#loc14 = loc("CWE401_Memory_Leak__char_realloc_31.c":27:12)
#loc15 = loc("CWE401_Memory_Leak__char_realloc_31.c":27:5)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_31.c":29:20)
#loc17 = loc("CWE401_Memory_Leak__char_realloc_31.c":29:28)
#loc18 = loc("CWE401_Memory_Leak__char_realloc_31.c":29:34)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_31.c":29:38)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_31.c":29:49)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_31.c":29:50)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_31.c":29:5)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_31.c":30:5)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_31.c":30:33)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_31.c":30:9)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_31.c":30:17)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_31.c":30:23)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_31.c":30:24)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_31.c":30:30)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_31.c":30:29)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_31.c":32:5)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_31.c":32:12)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_31.c":33:15)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_31.c":33:5)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_31.c":34:5)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_31.c":39:5)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_31.c":35:9)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_31.c":35:27)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_31.c":36:9)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_31.c":36:23)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_31.c":83:1)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_31.c":87:1)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_31.c":85:5)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_31.c":85:13)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_31.c":86:5)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_31.c":86:13)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_31.c":47:1)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_31.c":62:1)
#loc49 = loc("CWE401_Memory_Leak__char_realloc_31.c":49:5)
#loc50 = loc("CWE401_Memory_Leak__char_realloc_31.c":49:12)
#loc51 = loc("CWE401_Memory_Leak__char_realloc_31.c":50:12)
#loc52 = loc("CWE401_Memory_Leak__char_realloc_31.c":50:5)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_31.c":52:20)
#loc54 = loc("CWE401_Memory_Leak__char_realloc_31.c":52:5)
#loc55 = loc("CWE401_Memory_Leak__char_realloc_31.c":54:5)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_31.c":54:12)
#loc57 = loc("CWE401_Memory_Leak__char_realloc_31.c":54:18)
#loc58 = loc("CWE401_Memory_Leak__char_realloc_31.c":55:15)
#loc59 = loc("CWE401_Memory_Leak__char_realloc_31.c":55:5)
#loc60 = loc("CWE401_Memory_Leak__char_realloc_31.c":56:5)
#loc61 = loc("CWE401_Memory_Leak__char_realloc_31.c":61:5)
#loc62 = loc("CWE401_Memory_Leak__char_realloc_31.c":57:9)
#loc63 = loc("CWE401_Memory_Leak__char_realloc_31.c":57:27)
#loc64 = loc("CWE401_Memory_Leak__char_realloc_31.c":58:9)
#loc65 = loc("CWE401_Memory_Leak__char_realloc_31.c":58:23)
#loc66 = loc("/usr/include/stdlib.h":687:1)
#loc67 = loc("/usr/include/stdlib.h":687:32)
#loc68 = loc("CWE401_Memory_Leak__char_realloc_31.c":65:1)
#loc69 = loc("CWE401_Memory_Leak__char_realloc_31.c":81:1)
#loc70 = loc("CWE401_Memory_Leak__char_realloc_31.c":67:5)
#loc71 = loc("CWE401_Memory_Leak__char_realloc_31.c":67:12)
#loc72 = loc("CWE401_Memory_Leak__char_realloc_31.c":68:12)
#loc73 = loc("CWE401_Memory_Leak__char_realloc_31.c":68:5)
#loc74 = loc("CWE401_Memory_Leak__char_realloc_31.c":70:20)
#loc75 = loc("CWE401_Memory_Leak__char_realloc_31.c":70:28)
#loc76 = loc("CWE401_Memory_Leak__char_realloc_31.c":70:34)
#loc77 = loc("CWE401_Memory_Leak__char_realloc_31.c":70:38)
#loc78 = loc("CWE401_Memory_Leak__char_realloc_31.c":70:49)
#loc79 = loc("CWE401_Memory_Leak__char_realloc_31.c":70:50)
#loc80 = loc("CWE401_Memory_Leak__char_realloc_31.c":70:5)
#loc81 = loc("CWE401_Memory_Leak__char_realloc_31.c":71:5)
#loc82 = loc("CWE401_Memory_Leak__char_realloc_31.c":71:33)
#loc83 = loc("CWE401_Memory_Leak__char_realloc_31.c":71:9)
#loc84 = loc("CWE401_Memory_Leak__char_realloc_31.c":71:17)
#loc85 = loc("CWE401_Memory_Leak__char_realloc_31.c":71:23)
#loc86 = loc("CWE401_Memory_Leak__char_realloc_31.c":71:24)
#loc87 = loc("CWE401_Memory_Leak__char_realloc_31.c":71:30)
#loc88 = loc("CWE401_Memory_Leak__char_realloc_31.c":71:29)
#loc89 = loc("CWE401_Memory_Leak__char_realloc_31.c":73:5)
#loc90 = loc("CWE401_Memory_Leak__char_realloc_31.c":73:12)
#loc91 = loc("CWE401_Memory_Leak__char_realloc_31.c":73:18)
#loc92 = loc("CWE401_Memory_Leak__char_realloc_31.c":74:15)
#loc93 = loc("CWE401_Memory_Leak__char_realloc_31.c":74:5)
#loc94 = loc("CWE401_Memory_Leak__char_realloc_31.c":75:5)
#loc95 = loc("CWE401_Memory_Leak__char_realloc_31.c":80:5)
#loc96 = loc("CWE401_Memory_Leak__char_realloc_31.c":76:9)
#loc97 = loc("CWE401_Memory_Leak__char_realloc_31.c":76:27)
#loc98 = loc("CWE401_Memory_Leak__char_realloc_31.c":77:9)
#loc99 = loc("CWE401_Memory_Leak__char_realloc_31.c":77:23)
#loc100 = loc("CWE401_Memory_Leak__char_realloc_31.c":79:9)
#loc101 = loc("CWE401_Memory_Leak__char_realloc_31.c":79:14)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc8, #loc9])
#loc106 = loc(fused[#loc10, #loc11])
#loc107 = loc(fused[#loc12, #loc13])
#loc108 = loc(fused[#loc15, #loc14])
#loc109 = loc(fused[#loc19, #loc20])
#loc110 = loc(fused[#loc18, #loc20])
#loc111 = loc(fused[#loc16, #loc21])
#loc112 = loc(fused[#loc22, #loc21])
#loc113 = loc(fused[#loc23, #loc24])
#loc114 = loc(fused[#loc25, #loc26])
#loc115 = loc(fused[#loc27, #loc24])
#loc116 = loc(fused[#loc35, #loc36])
#loc117 = loc(fused[#loc37, #loc38])
#loc118 = loc(fused[#loc39, #loc40])
#loc119 = loc(fused[#loc41, #loc42])
#loc120 = loc(fused[#loc43, #loc44])
#loc121 = loc(fused[#loc45, #loc46])
#loc122 = loc(fused[#loc47, #loc48])
#loc123 = loc(fused[#loc49, #loc50])
#loc124 = loc(fused[#loc52, #loc51])
#loc125 = loc(fused[#loc54, #loc53])
#loc126 = loc(fused[#loc60, #loc61])
#loc127 = loc(fused[#loc62, #loc63])
#loc128 = loc(fused[#loc64, #loc65])
#loc129 = loc(fused[#loc66, #loc67])
#loc130 = loc(fused[#loc68, #loc69])
#loc131 = loc(fused[#loc70, #loc71])
#loc132 = loc(fused[#loc73, #loc72])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc76, #loc78])
#loc135 = loc(fused[#loc74, #loc79])
#loc136 = loc(fused[#loc80, #loc79])
#loc137 = loc(fused[#loc81, #loc82])
#loc138 = loc(fused[#loc83, #loc84])
#loc139 = loc(fused[#loc85, #loc82])
#loc140 = loc(fused[#loc94, #loc95])
#loc141 = loc(fused[#loc96, #loc97])
#loc142 = loc(fused[#loc98, #loc99])
