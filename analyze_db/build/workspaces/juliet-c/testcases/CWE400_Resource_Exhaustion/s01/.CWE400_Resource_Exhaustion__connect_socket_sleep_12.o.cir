!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc418)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc419)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc420)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc421)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc422)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc423)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc424)
  cir.func private @close(!s32i) -> !s32i loc(#loc425)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc426)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc427)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc22)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc23)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc24)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc429)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc30)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc432)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc432)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc34)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc34)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc435)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc436)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc437)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc438)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc46)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc437)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc53)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc54)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc55)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc441)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc62)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc62)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc443)
                  cir.if %58 {
                    cir.break loc(#loc64)
                  } loc(#loc444)
                } loc(#loc442)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc445)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc67)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc446)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc447)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc72)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc72)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc448)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc449)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc80)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc450)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc452)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc453)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc453)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc93)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc454)
                  cir.if %62 {
                    cir.break loc(#loc95)
                  } loc(#loc455)
                } loc(#loc451)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc98)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc98)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc98)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc98)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc98)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc98)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc98)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc99)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc99)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc456)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc100)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc101)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc101)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc457)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc107)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc107)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc459)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc108)
                    cir.yield %60 : !cir.bool loc(#loc108)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc110)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc460)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc108)
                      cir.yield %64 : !cir.bool loc(#loc108)
                    }, false {
                      %64 = cir.const #false loc(#loc108)
                      cir.yield %64 : !cir.bool loc(#loc108)
                    }) : (!cir.bool) -> !cir.bool loc(#loc108)
                    cir.yield %63 : !cir.bool loc(#loc108)
                  }) : (!cir.bool) -> !cir.bool loc(#loc108)
                  cir.if %59 {
                    cir.break loc(#loc112)
                  } loc(#loc461)
                } loc(#loc458)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc113)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc113)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc115)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc462)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc117)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc463)
              } loc(#loc440)
              cir.yield loc(#loc50)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc120)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc120)
              cir.condition(%14) loc(#loc120)
            } loc(#loc439)
          } loc(#loc439)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc124)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc465)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc126)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc127)
            } loc(#loc466)
          } loc(#loc464)
        } loc(#loc434)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc128)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc467)
      } loc(#loc433)
    } loc(#loc431)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc469)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc469)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc132)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc132)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc137)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc138)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc22)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc22)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc139)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc143)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc472)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc146)
            %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc473)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc144)
              cir.yield %15 : !cir.bool loc(#loc144)
            }, false {
              %15 = cir.const #false loc(#loc144)
              cir.yield %15 : !cir.bool loc(#loc144)
            }) : (!cir.bool) -> !cir.bool loc(#loc144)
            cir.yield %14 : !cir.bool loc(#loc144)
          }, false {
            %11 = cir.const #false loc(#loc144)
            cir.yield %11 : !cir.bool loc(#loc144)
          }) : (!cir.bool) -> !cir.bool loc(#loc144)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc150)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc151)
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc23)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc23)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc152)
          } else {
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc24)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc24)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc153)
          } loc(#loc474)
        } loc(#loc471)
      } loc(#loc470)
    } loc(#loc468)
    cir.return loc(#loc26)
  } loc(#loc428)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc476)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc156)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc477)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc158)
    cir.return loc(#loc155)
  } loc(#loc475)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc479)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc165)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc482)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc482)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc169)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc169)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc485)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc486)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc487)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc488)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc181)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc181)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc487)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc188)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc189)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc190)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc191)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc491)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc196)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc197)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc197)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc493)
                  cir.if %58 {
                    cir.break loc(#loc199)
                  } loc(#loc494)
                } loc(#loc492)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc495)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc202)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc496)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc497)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc207)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc207)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc498)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc209)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc209)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc210)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc499)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc213)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc213)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc214)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc500)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc219)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc502)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc503)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc503)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc224)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc225)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc225)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc504)
                  cir.if %62 {
                    cir.break loc(#loc227)
                  } loc(#loc505)
                } loc(#loc501)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc229)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc229)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc230)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc230)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc230)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc230)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc230)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc230)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc230)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc231)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc231)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc506)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc232)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc233)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc233)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc507)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc239)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc239)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc509)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc240)
                    cir.yield %60 : !cir.bool loc(#loc240)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc242)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc510)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc240)
                      cir.yield %64 : !cir.bool loc(#loc240)
                    }, false {
                      %64 = cir.const #false loc(#loc240)
                      cir.yield %64 : !cir.bool loc(#loc240)
                    }) : (!cir.bool) -> !cir.bool loc(#loc240)
                    cir.yield %63 : !cir.bool loc(#loc240)
                  }) : (!cir.bool) -> !cir.bool loc(#loc240)
                  cir.if %59 {
                    cir.break loc(#loc244)
                  } loc(#loc511)
                } loc(#loc508)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc245)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc245)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc247)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc247)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc512)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc248)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc249)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc513)
              } loc(#loc490)
              cir.yield loc(#loc185)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc252)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc252)
              cir.condition(%14) loc(#loc252)
            } loc(#loc489)
          } loc(#loc489)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc255)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc256)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc256)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc515)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc258)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc259)
            } loc(#loc516)
          } loc(#loc514)
        } loc(#loc484)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc518)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc519)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc520)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc521)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc267)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc267)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc520)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc274)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc275)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc276)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc277)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc524)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc282)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc283)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc283)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc526)
                  cir.if %58 {
                    cir.break loc(#loc285)
                  } loc(#loc527)
                } loc(#loc525)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc528)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc288)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc529)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc530)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc293)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc293)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc531)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc295)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc295)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc296)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc532)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc299)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc299)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc300)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc533)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc305)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc535)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc536)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc536)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc310)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc311)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc311)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc537)
                  cir.if %62 {
                    cir.break loc(#loc313)
                  } loc(#loc538)
                } loc(#loc534)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc314)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc315)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc315)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc316)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc316)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc316)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc316)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc316)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc316)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc316)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc317)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc317)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc539)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc318)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc319)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc319)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc540)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc325)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc325)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc542)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc326)
                    cir.yield %60 : !cir.bool loc(#loc326)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc328)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc543)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc326)
                      cir.yield %64 : !cir.bool loc(#loc326)
                    }, false {
                      %64 = cir.const #false loc(#loc326)
                      cir.yield %64 : !cir.bool loc(#loc326)
                    }) : (!cir.bool) -> !cir.bool loc(#loc326)
                    cir.yield %63 : !cir.bool loc(#loc326)
                  }) : (!cir.bool) -> !cir.bool loc(#loc326)
                  cir.if %59 {
                    cir.break loc(#loc330)
                  } loc(#loc544)
                } loc(#loc541)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc331)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc331)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc332)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc333)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc333)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc545)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc334)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc335)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc546)
              } loc(#loc523)
              cir.yield loc(#loc271)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc338)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc338)
              cir.condition(%14) loc(#loc338)
            } loc(#loc522)
          } loc(#loc522)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc341)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc342)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc342)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc548)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc344)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc345)
            } loc(#loc549)
          } loc(#loc547)
        } loc(#loc517)
      } loc(#loc483)
    } loc(#loc481)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc551)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc551)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc348)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc348)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc355)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc356)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc554)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc358)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc359)
            %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc555)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc357)
              cir.yield %15 : !cir.bool loc(#loc357)
            }, false {
              %15 = cir.const #false loc(#loc357)
              cir.yield %15 : !cir.bool loc(#loc357)
            }) : (!cir.bool) -> !cir.bool loc(#loc357)
            cir.yield %14 : !cir.bool loc(#loc357)
          }, false {
            %11 = cir.const #false loc(#loc357)
            cir.yield %11 : !cir.bool loc(#loc357)
          }) : (!cir.bool) -> !cir.bool loc(#loc357)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc363)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc363)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc364)
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc365)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc365)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc366)
          } else {
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc367)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc367)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc368)
          } loc(#loc556)
        } loc(#loc553)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc371)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc372)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc558)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc374)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc375)
            %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc559)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc373)
              cir.yield %15 : !cir.bool loc(#loc373)
            }, false {
              %15 = cir.const #false loc(#loc373)
              cir.yield %15 : !cir.bool loc(#loc373)
            }) : (!cir.bool) -> !cir.bool loc(#loc373)
            cir.yield %14 : !cir.bool loc(#loc373)
          }, false {
            %11 = cir.const #false loc(#loc373)
            cir.yield %11 : !cir.bool loc(#loc373)
          }) : (!cir.bool) -> !cir.bool loc(#loc373)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc379)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc379)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc380)
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc381)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc381)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc382)
          } else {
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc383)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc383)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc384)
          } loc(#loc560)
        } loc(#loc557)
      } loc(#loc552)
    } loc(#loc550)
    cir.return loc(#loc161)
  } loc(#loc478)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc562)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc389)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc390)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc563)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc565)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc565)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc394)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc394)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc399)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc567)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc401)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc568)
      } loc(#loc566)
    } loc(#loc564)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc570)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc570)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc405)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc405)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc410)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc410)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc411)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc412)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc412)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc413)
      } else {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc414)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc414)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc415)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc416)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc416)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc417)
      } loc(#loc571)
    } loc(#loc569)
    cir.return loc(#loc386)
  } loc(#loc561)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":83:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/unistd.h":480:1)
#loc19 = loc("/usr/include/unistd.h":480:43)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":123:19)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":131:23)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":135:23)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":50:1)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":138:1)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":52:5)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":52:9)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":54:14)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":54:13)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":54:5)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":55:5)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":118:5)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":55:8)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":55:33)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":56:5)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":113:5)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":115:5)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":57:9)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":112:9)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":62:13)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":62:17)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":63:13)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":63:32)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":64:13)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":64:36)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":65:13)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":65:45)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":66:13)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":101:21)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":67:13)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":100:13)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":76:40)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":76:49)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":76:62)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":76:33)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":76:17)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":76:73)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":77:17)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":80:17)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":77:21)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":77:38)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":78:17)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":79:21)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":81:24)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":81:25)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":81:34)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":81:37)
#loc69 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":81:51)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":81:17)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":81:52)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":82:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":82:17)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":83:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":83:17)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":83:63)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":84:42)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":84:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":84:17)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":84:50)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":85:17)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":88:17)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":85:29)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":85:62)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":85:63)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":85:72)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":85:86)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":85:21)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":85:92)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":86:17)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":87:21)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":91:35)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":91:50)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":91:63)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":91:81)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":91:84)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":91:30)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":91:17)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":91:85)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":92:17)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":95:17)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":92:21)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":92:35)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":92:48)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":92:51)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":92:65)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":93:17)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":94:21)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":97:43)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":97:29)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":97:17)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":99:30)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":99:25)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":99:17)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":99:41)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":101:20)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":102:13)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":105:13)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":102:17)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":102:34)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":103:13)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":104:30)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":104:17)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":117:17)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":117:9)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":119:5)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":137:5)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":119:8)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":119:33)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":120:5)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":124:5)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":126:5)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":122:15)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":122:9)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":123:9)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":128:9)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":136:9)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":128:13)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":128:21)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":128:23)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":128:26)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":128:35)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":129:9)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":132:9)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":134:9)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":130:19)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":130:13)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":131:13)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":135:13)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":330:1)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":334:1)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":332:5)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":332:13)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":333:5)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":333:13)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":147:1)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":296:1)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":149:5)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":149:9)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":151:14)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":151:13)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":151:5)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":152:5)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":269:5)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":152:8)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":152:33)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":153:5)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":210:5)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":212:5)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":154:9)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":209:9)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":159:13)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":159:17)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":160:13)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":160:32)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":161:13)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":161:36)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":162:13)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":162:45)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":163:13)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":198:21)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":164:13)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":197:13)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":173:40)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":173:49)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":173:62)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":173:33)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":173:17)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":173:73)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":174:17)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":177:17)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":174:21)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":174:38)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":175:17)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":176:21)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":178:24)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":178:25)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":178:34)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":178:37)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":178:51)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":178:17)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":178:52)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":179:38)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":179:17)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":180:53)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":180:43)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":180:17)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":180:63)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":181:42)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":181:36)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":181:17)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":181:50)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":182:17)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":185:17)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":182:29)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":182:62)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":182:63)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":182:72)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":182:86)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":182:21)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":182:92)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":183:17)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":184:21)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":188:35)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":188:50)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":188:63)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":188:81)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":188:84)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":188:30)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":188:17)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":188:85)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":189:17)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":192:17)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":189:21)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":189:35)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":189:48)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":189:51)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":189:65)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":190:17)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":191:21)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":194:43)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":194:29)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":194:17)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":196:30)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":196:25)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":196:17)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":196:41)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":198:20)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":199:13)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":202:13)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":199:17)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":199:34)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":200:13)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":201:30)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":201:17)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":213:9)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":268:9)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":218:13)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":218:17)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":219:13)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":219:32)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":220:13)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":220:36)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":221:13)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":221:45)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":222:13)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":257:21)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":223:13)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":256:13)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":232:40)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":232:49)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":232:62)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":232:33)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":232:17)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":232:73)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":233:17)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":236:17)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":233:21)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":233:38)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":234:17)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":235:21)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":237:24)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":237:25)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":237:34)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":237:37)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":237:51)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":237:17)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":237:52)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":238:38)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":238:17)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":239:53)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":239:43)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":239:17)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":239:63)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":240:42)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":240:36)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":240:17)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":240:50)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":241:17)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":244:17)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":241:29)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":241:62)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":241:63)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":241:72)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":241:86)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":241:21)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":241:92)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":242:17)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":243:21)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":247:35)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":247:50)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":247:63)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":247:81)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":247:84)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":247:30)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":247:17)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":247:85)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":248:17)
#loc323 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":251:17)
#loc324 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":248:21)
#loc325 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":248:35)
#loc326 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":248:48)
#loc327 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":248:51)
#loc328 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":248:65)
#loc329 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":249:17)
#loc330 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":250:21)
#loc331 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":253:43)
#loc332 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":253:29)
#loc333 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":253:17)
#loc334 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":255:30)
#loc335 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":255:25)
#loc336 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":255:17)
#loc337 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":255:41)
#loc338 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":257:20)
#loc339 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":258:13)
#loc340 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":261:13)
#loc341 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":258:17)
#loc342 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":258:34)
#loc343 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":259:13)
#loc344 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":260:30)
#loc345 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":260:17)
#loc346 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":270:5)
#loc347 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":295:5)
#loc348 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":270:8)
#loc349 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":270:33)
#loc350 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":271:5)
#loc351 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":282:5)
#loc352 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":284:5)
#loc353 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":273:9)
#loc354 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":281:9)
#loc355 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":273:13)
#loc356 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":273:21)
#loc357 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":273:23)
#loc358 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":273:26)
#loc359 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":273:35)
#loc360 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":274:9)
#loc361 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":277:9)
#loc362 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":279:9)
#loc363 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":275:19)
#loc364 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":275:13)
#loc365 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":276:23)
#loc366 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":276:13)
#loc367 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":280:23)
#loc368 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":280:13)
#loc369 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":286:9)
#loc370 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":294:9)
#loc371 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":286:13)
#loc372 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":286:21)
#loc373 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":286:23)
#loc374 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":286:26)
#loc375 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":286:35)
#loc376 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":287:9)
#loc377 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":290:9)
#loc378 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":292:9)
#loc379 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":288:19)
#loc380 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":288:13)
#loc381 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":289:23)
#loc382 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":289:13)
#loc383 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":293:23)
#loc384 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":293:13)
#loc385 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":301:1)
#loc386 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":328:1)
#loc387 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":303:5)
#loc388 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":303:9)
#loc389 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":305:14)
#loc390 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":305:13)
#loc391 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":305:5)
#loc392 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":306:5)
#loc393 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":315:5)
#loc394 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":306:8)
#loc395 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":306:33)
#loc396 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":307:5)
#loc397 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":310:5)
#loc398 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":312:5)
#loc399 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":309:17)
#loc400 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":309:9)
#loc401 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":314:17)
#loc402 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":314:9)
#loc403 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":316:5)
#loc404 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":327:5)
#loc405 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":316:8)
#loc406 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":316:33)
#loc407 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":317:5)
#loc408 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":321:5)
#loc409 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":323:5)
#loc410 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":319:15)
#loc411 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":319:9)
#loc412 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":320:19)
#loc413 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":320:9)
#loc414 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":325:15)
#loc415 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":325:9)
#loc416 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":326:19)
#loc417 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_12.c":326:9)
#loc418 = loc(fused[#loc1, #loc2])
#loc419 = loc(fused[#loc3, #loc4])
#loc420 = loc(fused[#loc5, #loc6])
#loc421 = loc(fused[#loc8, #loc9])
#loc422 = loc(fused[#loc10, #loc11])
#loc423 = loc(fused[#loc12, #loc13])
#loc424 = loc(fused[#loc14, #loc15])
#loc425 = loc(fused[#loc16, #loc17])
#loc426 = loc(fused[#loc18, #loc19])
#loc427 = loc(fused[#loc20, #loc21])
#loc428 = loc(fused[#loc25, #loc26])
#loc429 = loc(fused[#loc27, #loc28])
#loc430 = loc(fused[#loc31, #loc29])
#loc431 = loc(fused[#loc32, #loc33])
#loc432 = loc(fused[#loc34, #loc35])
#loc433 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc434 = loc(fused[#loc39, #loc40])
#loc435 = loc(fused[#loc41, #loc42])
#loc436 = loc(fused[#loc43, #loc44])
#loc437 = loc(fused[#loc45, #loc46])
#loc438 = loc(fused[#loc47, #loc48])
#loc439 = loc(fused[#loc49, #loc50])
#loc440 = loc(fused[#loc51, #loc52])
#loc441 = loc(fused[#loc57, #loc58])
#loc442 = loc(fused[#loc59, #loc60])
#loc443 = loc(fused[#loc61, #loc62])
#loc444 = loc(fused[#loc63, #loc60])
#loc445 = loc(fused[#loc65, #loc66])
#loc446 = loc(fused[#loc68, #loc69])
#loc447 = loc(fused[#loc70, #loc71])
#loc448 = loc(fused[#loc74, #loc72])
#loc449 = loc(fused[#loc78, #loc79])
#loc450 = loc(fused[#loc83, #loc84])
#loc451 = loc(fused[#loc85, #loc86])
#loc452 = loc(fused[#loc88, #loc89])
#loc453 = loc(fused[#loc90, #loc91])
#loc454 = loc(fused[#loc92, #loc93])
#loc455 = loc(fused[#loc94, #loc86])
#loc456 = loc(fused[#loc98, #loc99])
#loc457 = loc(fused[#loc102, #loc103])
#loc458 = loc(fused[#loc104, #loc105])
#loc459 = loc(fused[#loc106, #loc107])
#loc460 = loc(fused[#loc109, #loc110])
#loc461 = loc(fused[#loc111, #loc105])
#loc462 = loc(fused[#loc115, #loc113])
#loc463 = loc(fused[#loc118, #loc119])
#loc464 = loc(fused[#loc121, #loc122])
#loc465 = loc(fused[#loc123, #loc124])
#loc466 = loc(fused[#loc125, #loc122])
#loc467 = loc(fused[#loc129, #loc128])
#loc468 = loc(fused[#loc130, #loc131])
#loc469 = loc(fused[#loc132, #loc133])
#loc470 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc471 = loc(fused[#loc140, #loc141])
#loc472 = loc(fused[#loc142, #loc143])
#loc473 = loc(fused[#loc145, #loc146])
#loc474 = loc(fused[#loc147, #loc148, #loc149, #loc141])
#loc475 = loc(fused[#loc154, #loc155])
#loc476 = loc(fused[#loc156, #loc157])
#loc477 = loc(fused[#loc158, #loc159])
#loc478 = loc(fused[#loc160, #loc161])
#loc479 = loc(fused[#loc162, #loc163])
#loc480 = loc(fused[#loc166, #loc164])
#loc481 = loc(fused[#loc167, #loc168])
#loc482 = loc(fused[#loc169, #loc170])
#loc483 = loc(fused[#loc171, #loc172, #loc173, #loc168])
#loc484 = loc(fused[#loc174, #loc175])
#loc485 = loc(fused[#loc176, #loc177])
#loc486 = loc(fused[#loc178, #loc179])
#loc487 = loc(fused[#loc180, #loc181])
#loc488 = loc(fused[#loc182, #loc183])
#loc489 = loc(fused[#loc184, #loc185])
#loc490 = loc(fused[#loc186, #loc187])
#loc491 = loc(fused[#loc192, #loc193])
#loc492 = loc(fused[#loc194, #loc195])
#loc493 = loc(fused[#loc196, #loc197])
#loc494 = loc(fused[#loc198, #loc195])
#loc495 = loc(fused[#loc200, #loc201])
#loc496 = loc(fused[#loc203, #loc204])
#loc497 = loc(fused[#loc205, #loc206])
#loc498 = loc(fused[#loc208, #loc207])
#loc499 = loc(fused[#loc211, #loc212])
#loc500 = loc(fused[#loc215, #loc216])
#loc501 = loc(fused[#loc217, #loc218])
#loc502 = loc(fused[#loc220, #loc221])
#loc503 = loc(fused[#loc222, #loc223])
#loc504 = loc(fused[#loc224, #loc225])
#loc505 = loc(fused[#loc226, #loc218])
#loc506 = loc(fused[#loc230, #loc231])
#loc507 = loc(fused[#loc234, #loc235])
#loc508 = loc(fused[#loc236, #loc237])
#loc509 = loc(fused[#loc238, #loc239])
#loc510 = loc(fused[#loc241, #loc242])
#loc511 = loc(fused[#loc243, #loc237])
#loc512 = loc(fused[#loc247, #loc245])
#loc513 = loc(fused[#loc250, #loc251])
#loc514 = loc(fused[#loc253, #loc254])
#loc515 = loc(fused[#loc255, #loc256])
#loc516 = loc(fused[#loc257, #loc254])
#loc517 = loc(fused[#loc260, #loc261])
#loc518 = loc(fused[#loc262, #loc263])
#loc519 = loc(fused[#loc264, #loc265])
#loc520 = loc(fused[#loc266, #loc267])
#loc521 = loc(fused[#loc268, #loc269])
#loc522 = loc(fused[#loc270, #loc271])
#loc523 = loc(fused[#loc272, #loc273])
#loc524 = loc(fused[#loc278, #loc279])
#loc525 = loc(fused[#loc280, #loc281])
#loc526 = loc(fused[#loc282, #loc283])
#loc527 = loc(fused[#loc284, #loc281])
#loc528 = loc(fused[#loc286, #loc287])
#loc529 = loc(fused[#loc289, #loc290])
#loc530 = loc(fused[#loc291, #loc292])
#loc531 = loc(fused[#loc294, #loc293])
#loc532 = loc(fused[#loc297, #loc298])
#loc533 = loc(fused[#loc301, #loc302])
#loc534 = loc(fused[#loc303, #loc304])
#loc535 = loc(fused[#loc306, #loc307])
#loc536 = loc(fused[#loc308, #loc309])
#loc537 = loc(fused[#loc310, #loc311])
#loc538 = loc(fused[#loc312, #loc304])
#loc539 = loc(fused[#loc316, #loc317])
#loc540 = loc(fused[#loc320, #loc321])
#loc541 = loc(fused[#loc322, #loc323])
#loc542 = loc(fused[#loc324, #loc325])
#loc543 = loc(fused[#loc327, #loc328])
#loc544 = loc(fused[#loc329, #loc323])
#loc545 = loc(fused[#loc333, #loc331])
#loc546 = loc(fused[#loc336, #loc337])
#loc547 = loc(fused[#loc339, #loc340])
#loc548 = loc(fused[#loc341, #loc342])
#loc549 = loc(fused[#loc343, #loc340])
#loc550 = loc(fused[#loc346, #loc347])
#loc551 = loc(fused[#loc348, #loc349])
#loc552 = loc(fused[#loc350, #loc351, #loc352, #loc347])
#loc553 = loc(fused[#loc353, #loc354])
#loc554 = loc(fused[#loc355, #loc356])
#loc555 = loc(fused[#loc358, #loc359])
#loc556 = loc(fused[#loc360, #loc361, #loc362, #loc354])
#loc557 = loc(fused[#loc369, #loc370])
#loc558 = loc(fused[#loc371, #loc372])
#loc559 = loc(fused[#loc374, #loc375])
#loc560 = loc(fused[#loc376, #loc377, #loc378, #loc370])
#loc561 = loc(fused[#loc385, #loc386])
#loc562 = loc(fused[#loc387, #loc388])
#loc563 = loc(fused[#loc391, #loc389])
#loc564 = loc(fused[#loc392, #loc393])
#loc565 = loc(fused[#loc394, #loc395])
#loc566 = loc(fused[#loc396, #loc397, #loc398, #loc393])
#loc567 = loc(fused[#loc400, #loc399])
#loc568 = loc(fused[#loc402, #loc401])
#loc569 = loc(fused[#loc403, #loc404])
#loc570 = loc(fused[#loc405, #loc406])
#loc571 = loc(fused[#loc407, #loc408, #loc409, #loc404])
