!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":49:21)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":49:28)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":291:10)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":291:14)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":291:20)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":291:32)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":150:25)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":150:32)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":180:25)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":180:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc452 = loc(fused[#loc8, #loc9])
#loc534 = loc(fused[#loc209, #loc210])
#loc535 = loc(fused[#loc211, #loc212])
#loc540 = loc(fused[#loc229, #loc230])
#loc562 = loc(fused[#loc280, #loc281])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc449)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc450)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc452)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc454)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc455)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc456)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc19)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc19)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc458)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc23)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc460)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc462)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc463)
              cir.condition(%16) loc(#loc31)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
                %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc34)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc465)
              } loc(#loc464)
              cir.yield loc(#loc26)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc36)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc466)
              cir.yield loc(#loc461)
            } loc(#loc461)
          } loc(#loc461)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc37)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc38)
        } loc(#loc459)
      } loc(#loc457)
    } loc(#loc453)
    cir.return loc(#loc7)
  } loc(#loc451)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc467)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc468)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc469)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc45)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc470)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc471)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc472)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc473)
  cir.func private @close(!s32i) -> !s32i loc(#loc474)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc476)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc477)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc478)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc61)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc477)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc478)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc478)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc479)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc481)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc482)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc483)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc484)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc485)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc75)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc75)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc484)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc78)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc78)
      cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc485)
      cir.scope {
        cir.do {
          %18 = cir.const #cir.int<2> : !s32i loc(#loc82)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %20 = cir.const #cir.int<6> : !s32i loc(#loc84)
          %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc85)
          cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc487)
          cir.scope {
            %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc91)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc489)
            cir.if %75 {
              cir.break loc(#loc93)
            } loc(#loc490)
          } loc(#loc488)
          %22 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc491)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc96)
          %24 = cir.const #cir.int<16> : !u64i loc(#loc492)
          cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc493)
          %25 = cir.const #cir.int<2> : !s32i loc(#loc101)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc101)
          %27 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc494)
          %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc45)
          %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc45)
          %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc104)
          %31 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc105)
          %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc106)
          cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc495)
          %33 = cir.const #cir.int<27015> : !s32i loc(#loc109)
          %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc109)
          %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc110)
          %36 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc111)
          cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc496)
          cir.scope {
            %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %73 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc498)
            %74 = cir.const #cir.int<16> : !u64i loc(#loc499)
            %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc499)
            %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc121)
            %77 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc122)
            %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc500)
            cir.if %79 {
              cir.break loc(#loc124)
            } loc(#loc501)
          } loc(#loc497)
          %37 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc125)
          %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          %39 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc127)
          %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc128)
          %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc502)
          %42 = cir.const #cir.int<1> : !u64i loc(#loc503)
          %43 = cir.const #cir.int<100> : !s32i loc(#loc133)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc133)
          %45 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc134)
          %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc504)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc135)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc135)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc505)
          %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc506)
          %51 = cir.const #cir.int<0> : !s32i loc(#loc137)
          %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
          %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc138)
          cir.store %53, %8 : !s32i, !cir.ptr<!s32i> loc(#loc507)
          cir.scope {
            %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc144)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc144)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc509)
            %76 = cir.ternary(%75, true {
              %77 = cir.const #true loc(#loc145)
              cir.yield %77 : !cir.bool loc(#loc145)
            }, false {
              %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %78 = cir.const #cir.int<0> : !s32i loc(#loc147)
              %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc510)
              %80 = cir.ternary(%79, true {
                %81 = cir.const #true loc(#loc145)
                cir.yield %81 : !cir.bool loc(#loc145)
              }, false {
                %81 = cir.const #false loc(#loc145)
                cir.yield %81 : !cir.bool loc(#loc145)
              }) : (!cir.bool) -> !cir.bool loc(#loc145)
              cir.yield %80 : !cir.bool loc(#loc145)
            }) : (!cir.bool) -> !cir.bool loc(#loc145)
            cir.if %76 {
              cir.break loc(#loc149)
            } loc(#loc511)
          } loc(#loc508)
          %54 = cir.const #cir.int<0> : !s32i loc(#loc150)
          %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc150)
          %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
          %57 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc152)
          %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc153)
          %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc153)
          %60 = cir.const #cir.int<1> : !u64i loc(#loc512)
          %61 = cir.binop(div, %59, %60) : !u64i loc(#loc513)
          %62 = cir.binop(add, %57, %61) : !u64i loc(#loc514)
          %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc156)
          cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc515)
          %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc157)
          %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
          %66 = cir.const #cir.int<13> : !s32i loc(#loc159)
          %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
          cir.store %67, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc516)
          cir.scope {
            %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
            %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
            cir.if %73 {
              %74 = cir.const #cir.int<0> : !s32i loc(#loc166)
              %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc166)
              %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
              cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc519)
            } loc(#loc518)
          } loc(#loc517)
          %68 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc169)
          %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
          %70 = cir.const #cir.int<10> : !s32i loc(#loc171)
          %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
          cir.store %71, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc520)
          cir.scope {
            %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
            %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc176)
            cir.if %73 {
              %74 = cir.const #cir.int<0> : !s32i loc(#loc178)
              %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc178)
              %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
              cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc523)
            } loc(#loc522)
          } loc(#loc521)
          cir.yield loc(#loc81)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc181)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc181)
          cir.condition(%19) loc(#loc181)
        } loc(#loc486)
      } loc(#loc486)
      cir.scope {
        %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc184)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc185)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc185)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc525)
        cir.if %21 {
          %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc187)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc188)
        } loc(#loc526)
      } loc(#loc524)
    } loc(#loc480)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc189)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc189)
    cir.return loc(#loc57)
  } loc(#loc475)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc528)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc193)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc529)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc195)
    cir.return loc(#loc192)
  } loc(#loc527)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc530)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc531)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc532)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc206)
  cir.func @main(%arg0: !s32i loc(fused[#loc209, #loc210]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc211, #loc212])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc534)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc535)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc208)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc213)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc214)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc215)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc215)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc216)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc203)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc536)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_44_good() : () -> () loc(#loc218)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc204)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc205)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc537)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_44_bad() : () -> () loc(#loc222)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc206)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc225)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc538)
    cir.return %17 : !s32i loc(#loc538)
  } loc(#loc533)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc229, #loc230])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc540)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc542)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc543)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc544)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc240)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc241)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc242)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc242)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc240)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc243)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc546)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc245)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc548)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc249)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc550)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc251)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc252)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc551)
              cir.condition(%16) loc(#loc253)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc255)
                %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc256)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc553)
              } loc(#loc552)
              cir.yield loc(#loc248)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc257)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc258)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc554)
              cir.yield loc(#loc549)
            } loc(#loc549)
          } loc(#loc549)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc259)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc260)
        } loc(#loc547)
      } loc(#loc545)
    } loc(#loc541)
    cir.return loc(#loc228)
  } loc(#loc539)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc555)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc263)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc557)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc558)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc559)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc269)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc558)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc559)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc559)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc272)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc560)
    %6 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc274)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc275)
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc263)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc263)
    %10 = cir.call @strcpy(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc274)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc276)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc277)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc276)
    cir.return loc(#loc265)
  } loc(#loc556)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc280, #loc281])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc562)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc564)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc565)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc566)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc291)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc292)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc293)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc293)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc291)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc294)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc568)
        cir.if %10 {
          cir.scope {
            %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc298)
            %12 = cir.const #cir.int<10000> : !s32i loc(#loc299)
            %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc571)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc301)
              cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc573)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc305)
                cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc575)
                cir.for : cond {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                  %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc576)
                  cir.condition(%19) loc(#loc309)
                } body {
                  cir.scope {
                    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc311)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc312)
                    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc578)
                  } loc(#loc577)
                  cir.yield loc(#loc304)
                } step {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc313)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc314)
                  cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc579)
                  cir.yield loc(#loc574)
                } loc(#loc574)
              } loc(#loc574)
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc315)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc316)
            } loc(#loc572)
          } loc(#loc570)
        } loc(#loc569)
      } loc(#loc567)
    } loc(#loc563)
    cir.return loc(#loc279)
  } loc(#loc561)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc581)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc582)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc583)
    %3 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc322)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc582)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc583)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc583)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc325)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc584)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc586)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc587)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc588)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc589)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc590)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc336)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc336)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc589)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc339)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc340)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc339)
      cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc590)
      cir.scope {
        cir.do {
          %18 = cir.const #cir.int<2> : !s32i loc(#loc343)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc344)
          %20 = cir.const #cir.int<6> : !s32i loc(#loc345)
          %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc346)
          cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc592)
          cir.scope {
            %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc351)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc352)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc352)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc594)
            cir.if %75 {
              cir.break loc(#loc354)
            } loc(#loc595)
          } loc(#loc593)
          %22 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc596)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc357)
          %24 = cir.const #cir.int<16> : !u64i loc(#loc597)
          cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc598)
          %25 = cir.const #cir.int<2> : !s32i loc(#loc362)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc362)
          %27 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc599)
          %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc364)
          %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc364)
          %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc365)
          %31 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc105)
          %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc106)
          cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc600)
          %33 = cir.const #cir.int<27015> : !s32i loc(#loc368)
          %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc368)
          %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc369)
          %36 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc111)
          cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc601)
          cir.scope {
            %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc374)
            %73 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc603)
            %74 = cir.const #cir.int<16> : !u64i loc(#loc604)
            %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc604)
            %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc379)
            %77 = cir.const #cir.int<1> : !s32i loc(#loc380)
            %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc380)
            %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc605)
            cir.if %79 {
              cir.break loc(#loc382)
            } loc(#loc606)
          } loc(#loc602)
          %37 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc383)
          %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc384)
          %39 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc385)
          %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc386)
          %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc607)
          %42 = cir.const #cir.int<1> : !u64i loc(#loc608)
          %43 = cir.const #cir.int<100> : !s32i loc(#loc391)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc391)
          %45 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc392)
          %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc609)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc393)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc393)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc610)
          %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc611)
          %51 = cir.const #cir.int<0> : !s32i loc(#loc395)
          %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc396)
          %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc396)
          cir.store %53, %8 : !s32i, !cir.ptr<!s32i> loc(#loc612)
          cir.scope {
            %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc401)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc402)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc402)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc614)
            %76 = cir.ternary(%75, true {
              %77 = cir.const #true loc(#loc403)
              cir.yield %77 : !cir.bool loc(#loc403)
            }, false {
              %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc404)
              %78 = cir.const #cir.int<0> : !s32i loc(#loc405)
              %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc615)
              %80 = cir.ternary(%79, true {
                %81 = cir.const #true loc(#loc403)
                cir.yield %81 : !cir.bool loc(#loc403)
              }, false {
                %81 = cir.const #false loc(#loc403)
                cir.yield %81 : !cir.bool loc(#loc403)
              }) : (!cir.bool) -> !cir.bool loc(#loc403)
              cir.yield %80 : !cir.bool loc(#loc403)
            }) : (!cir.bool) -> !cir.bool loc(#loc403)
            cir.if %76 {
              cir.break loc(#loc407)
            } loc(#loc616)
          } loc(#loc613)
          %54 = cir.const #cir.int<0> : !s32i loc(#loc408)
          %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc408)
          %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc409)
          %57 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc410)
          %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc411)
          %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc411)
          %60 = cir.const #cir.int<1> : !u64i loc(#loc617)
          %61 = cir.binop(div, %59, %60) : !u64i loc(#loc618)
          %62 = cir.binop(add, %57, %61) : !u64i loc(#loc619)
          %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc414)
          cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc620)
          %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc415)
          %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc416)
          %66 = cir.const #cir.int<13> : !s32i loc(#loc417)
          %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc415)
          cir.store %67, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc621)
          cir.scope {
            %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc422)
            %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc422)
            cir.if %73 {
              %74 = cir.const #cir.int<0> : !s32i loc(#loc424)
              %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc424)
              %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc425)
              cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc624)
            } loc(#loc623)
          } loc(#loc622)
          %68 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc427)
          %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc428)
          %70 = cir.const #cir.int<10> : !s32i loc(#loc429)
          %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc427)
          cir.store %71, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc625)
          cir.scope {
            %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc434)
            %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc434)
            cir.if %73 {
              %74 = cir.const #cir.int<0> : !s32i loc(#loc436)
              %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc436)
              %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc437)
              cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc628)
            } loc(#loc627)
          } loc(#loc626)
          cir.yield loc(#loc342)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc439)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc439)
          cir.condition(%19) loc(#loc439)
        } loc(#loc591)
      } loc(#loc591)
      cir.scope {
        %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc442)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc443)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc443)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc630)
        cir.if %21 {
          %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc445)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc446)
        } loc(#loc631)
      } loc(#loc629)
    } loc(#loc585)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc447)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc448)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc447)
    cir.return loc(#loc318)
  } loc(#loc580)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:26)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":49:1)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":65:1)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":50:1)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":51:5)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":64:5)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":52:9)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":52:13)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":52:16)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":52:19)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:9)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":63:9)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:13)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:20)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:39)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":54:9)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":56:27)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":56:13)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:13)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":61:13)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:22)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:18)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:25)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:29)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:27)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":58:13)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":60:28)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":60:17)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:33)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:32)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":62:26)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":62:13)
#loc39 = loc("/usr/include/string.h":407:1)
#loc40 = loc("/usr/include/string.h":408:33)
#loc41 = loc("/usr/include/sys/socket.h":102:1)
#loc42 = loc("/usr/include/sys/socket.h":102:62)
#loc43 = loc("/usr/include/arpa/inet.h":34:1)
#loc44 = loc("/usr/include/arpa/inet.h":34:47)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":101:49)
#loc46 = loc("/usr/include/netinet/in.h":404:1)
#loc47 = loc("/usr/include/netinet/in.h":405:40)
#loc48 = loc("/usr/include/sys/socket.h":126:1)
#loc49 = loc("/usr/include/sys/socket.h":126:75)
#loc50 = loc("/usr/include/sys/socket.h":145:1)
#loc51 = loc("/usr/include/sys/socket.h":145:68)
#loc52 = loc("/usr/include/string.h":246:1)
#loc53 = loc("/usr/include/string.h":247:33)
#loc54 = loc("/usr/include/unistd.h":358:1)
#loc55 = loc("/usr/include/unistd.h":358:27)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":67:1)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":143:1)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":69:5)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":69:12)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":71:5)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":71:32)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":72:5)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":72:28)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":73:12)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":73:5)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":74:5)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":140:5)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":79:9)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":79:13)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":80:9)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":80:28)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":81:9)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":81:15)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":82:9)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":82:32)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":83:9)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":83:37)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":83:26)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":83:33)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":84:9)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":129:17)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:36)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:45)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:58)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:29)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:69)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":95:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":98:13)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":95:17)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":95:34)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":96:13)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":97:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:20)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:21)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:30)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:33)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:47)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:13)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:48)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":100:34)
#loc102 = loc("/usr/include/netinet/in.h":249:5)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":100:13)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":101:39)
#loc105 = loc("/usr/include/netinet/in.h":251:20)
#loc106 = loc("/usr/include/netinet/in.h":33:15)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":101:13)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":101:59)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":102:38)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":102:32)
#loc111 = loc("/usr/include/netinet/in.h":250:15)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":102:13)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":102:46)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:13)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":106:13)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:25)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:58)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:59)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:68)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:82)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:17)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:88)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":104:13)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":105:17)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:31)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:55)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:62)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:60)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:46)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:69)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:72)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:83)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:88)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:94)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:104)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:105)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:108)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:26)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:109)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:13)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":114:13)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:17)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:31)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:44)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:47)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:61)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":112:13)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":113:17)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:57)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:13)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:18)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:28)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:41)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:52)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:53)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:23)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:30)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:36)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:13)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:40)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":119:13)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":122:13)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":119:17)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":120:13)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":121:28)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":121:18)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":121:17)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:23)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:30)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:36)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:13)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:40)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":124:13)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":127:13)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":124:17)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":125:13)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":126:28)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":126:18)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":126:17)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":129:16)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":130:9)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":133:9)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":130:13)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":130:30)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":131:9)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":132:26)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":132:13)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":142:5)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":142:13)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":277:1)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":281:1)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":279:5)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":279:13)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":280:5)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":280:13)
#loc197 = loc("/usr/include/stdlib.h":575:1)
#loc198 = loc("/usr/include/stdlib.h":575:41)
#loc199 = loc("/usr/include/time.h":76:1)
#loc200 = loc("/usr/include/time.h":76:38)
#loc201 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc202 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":296:15)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":298:15)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":301:15)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":303:15)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":291:1)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":306:1)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":292:1)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":294:27)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":294:22)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":294:5)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":296:5)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":297:5)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":297:66)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":298:5)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":301:5)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":302:5)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":302:65)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":303:5)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":305:12)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":305:5)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":150:1)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":166:1)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":151:1)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":152:5)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":165:5)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":153:9)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":153:13)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":153:16)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":153:19)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:9)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":164:9)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:13)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:20)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:26)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:39)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":155:9)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":157:27)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":157:13)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:13)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":162:13)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:22)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:18)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:25)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:29)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:27)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":159:13)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":161:28)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":161:17)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:33)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:32)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":163:26)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":163:13)
#loc261 = loc("/usr/include/string.h":141:1)
#loc262 = loc("/usr/include/string.h":142:14)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":175:18)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":168:1)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":177:1)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":170:5)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":170:12)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":171:5)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":171:32)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":172:5)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":172:28)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":173:12)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":173:5)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":175:5)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":175:12)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":176:5)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":176:13)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":180:1)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":199:1)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":181:1)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":182:5)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":198:5)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":183:9)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":183:13)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":183:16)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":183:19)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:9)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":197:9)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:13)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:20)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:26)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:39)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":185:9)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":187:13)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":196:13)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":187:17)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":187:21)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":188:13)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":189:31)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":189:17)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:17)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":194:17)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:26)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:22)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:29)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:33)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:31)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":191:17)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":193:32)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":193:21)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:37)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:36)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":195:30)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":195:17)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":201:1)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":275:1)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":203:5)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":203:12)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":204:5)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":204:32)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":205:5)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":205:28)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":206:12)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":206:5)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":207:5)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":273:5)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":212:9)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":212:13)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":213:9)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":213:28)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":214:9)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":214:15)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":215:9)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":215:32)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":216:9)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":216:37)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":216:26)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":216:33)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":217:9)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":262:17)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:36)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:45)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:58)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:29)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:13)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:69)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":228:13)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":231:13)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":228:17)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":228:34)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":229:13)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":230:17)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:20)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:21)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:30)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:33)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:47)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:13)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:48)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":233:34)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":233:13)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":234:49)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":234:39)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":234:13)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":234:59)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":235:38)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":235:32)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":235:13)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":235:46)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:13)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":239:13)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:25)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:58)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:59)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:68)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:82)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:17)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:88)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":237:13)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":238:17)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:31)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:55)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:62)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:60)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:46)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:69)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:72)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:83)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:88)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:94)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:104)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:105)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:108)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:26)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:13)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:109)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:13)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":247:13)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:17)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:31)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:44)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:47)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:61)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":245:13)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":246:17)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:57)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:13)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:18)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:28)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:41)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:52)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:53)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:23)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:30)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:36)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:13)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:40)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":252:13)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":255:13)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":252:17)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":253:13)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":254:28)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":254:18)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":254:17)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:23)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:30)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:36)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:13)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:40)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":257:13)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":260:13)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":257:17)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":258:13)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":259:28)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":259:18)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":259:17)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":262:16)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":263:9)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":266:9)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":263:13)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":263:30)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":264:9)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":265:26)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":265:13)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":274:5)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":274:13)
#loc449 = loc(fused[#loc1, #loc2])
#loc450 = loc(fused[#loc4, #loc5])
#loc451 = loc(fused[#loc6, #loc7])
#loc453 = loc(fused[#loc11, #loc12])
#loc454 = loc(fused[#loc13, #loc14])
#loc455 = loc(fused[#loc13, #loc15])
#loc456 = loc(fused[#loc13, #loc16])
#loc457 = loc(fused[#loc17, #loc18])
#loc458 = loc(fused[#loc19, #loc21])
#loc459 = loc(fused[#loc22, #loc18])
#loc460 = loc(fused[#loc24, #loc23])
#loc461 = loc(fused[#loc25, #loc26])
#loc462 = loc(fused[#loc28, #loc27])
#loc463 = loc(fused[#loc29, #loc30])
#loc464 = loc(fused[#loc32, #loc26])
#loc465 = loc(fused[#loc34, #loc33])
#loc466 = loc(fused[#loc36, #loc35])
#loc467 = loc(fused[#loc39, #loc40])
#loc468 = loc(fused[#loc41, #loc42])
#loc469 = loc(fused[#loc43, #loc44])
#loc470 = loc(fused[#loc46, #loc47])
#loc471 = loc(fused[#loc48, #loc49])
#loc472 = loc(fused[#loc50, #loc51])
#loc473 = loc(fused[#loc52, #loc53])
#loc474 = loc(fused[#loc54, #loc55])
#loc475 = loc(fused[#loc56, #loc57])
#loc476 = loc(fused[#loc58, #loc59])
#loc477 = loc(fused[#loc60, #loc61])
#loc478 = loc(fused[#loc62, #loc63])
#loc479 = loc(fused[#loc65, #loc64])
#loc480 = loc(fused[#loc66, #loc67])
#loc481 = loc(fused[#loc68, #loc69])
#loc482 = loc(fused[#loc70, #loc71])
#loc483 = loc(fused[#loc72, #loc73])
#loc484 = loc(fused[#loc74, #loc75])
#loc485 = loc(fused[#loc76, #loc77])
#loc486 = loc(fused[#loc80, #loc81])
#loc487 = loc(fused[#loc86, #loc87])
#loc488 = loc(fused[#loc88, #loc89])
#loc489 = loc(fused[#loc90, #loc91])
#loc490 = loc(fused[#loc92, #loc89])
#loc491 = loc(fused[#loc94, #loc95])
#loc492 = loc(fused[#loc97, #loc98])
#loc493 = loc(fused[#loc99, #loc100])
#loc494 = loc(fused[#loc103, #loc101])
#loc495 = loc(fused[#loc107, #loc108])
#loc496 = loc(fused[#loc112, #loc113])
#loc497 = loc(fused[#loc114, #loc115])
#loc498 = loc(fused[#loc117, #loc118])
#loc499 = loc(fused[#loc119, #loc120])
#loc500 = loc(fused[#loc121, #loc122])
#loc501 = loc(fused[#loc123, #loc115])
#loc502 = loc(fused[#loc129, #loc130])
#loc503 = loc(fused[#loc131, #loc132])
#loc504 = loc(fused[#loc133, #loc134])
#loc505 = loc(fused[#loc133, #loc135])
#loc506 = loc(fused[#loc131, #loc136])
#loc507 = loc(fused[#loc139, #loc140])
#loc508 = loc(fused[#loc141, #loc142])
#loc509 = loc(fused[#loc143, #loc144])
#loc510 = loc(fused[#loc146, #loc147])
#loc511 = loc(fused[#loc148, #loc142])
#loc512 = loc(fused[#loc154, #loc155])
#loc513 = loc(fused[#loc153, #loc155])
#loc514 = loc(fused[#loc152, #loc155])
#loc515 = loc(fused[#loc151, #loc150])
#loc516 = loc(fused[#loc160, #loc161])
#loc517 = loc(fused[#loc162, #loc163])
#loc518 = loc(fused[#loc165, #loc163])
#loc519 = loc(fused[#loc168, #loc166])
#loc520 = loc(fused[#loc172, #loc173])
#loc521 = loc(fused[#loc174, #loc175])
#loc522 = loc(fused[#loc177, #loc175])
#loc523 = loc(fused[#loc180, #loc178])
#loc524 = loc(fused[#loc182, #loc183])
#loc525 = loc(fused[#loc184, #loc185])
#loc526 = loc(fused[#loc186, #loc183])
#loc527 = loc(fused[#loc191, #loc192])
#loc528 = loc(fused[#loc193, #loc194])
#loc529 = loc(fused[#loc195, #loc196])
#loc530 = loc(fused[#loc197, #loc198])
#loc531 = loc(fused[#loc199, #loc200])
#loc532 = loc(fused[#loc201, #loc202])
#loc533 = loc(fused[#loc207, #loc208])
#loc536 = loc(fused[#loc218, #loc219])
#loc537 = loc(fused[#loc222, #loc223])
#loc538 = loc(fused[#loc226, #loc225])
#loc539 = loc(fused[#loc227, #loc228])
#loc541 = loc(fused[#loc232, #loc233])
#loc542 = loc(fused[#loc234, #loc235])
#loc543 = loc(fused[#loc234, #loc236])
#loc544 = loc(fused[#loc234, #loc237])
#loc545 = loc(fused[#loc238, #loc239])
#loc546 = loc(fused[#loc240, #loc243])
#loc547 = loc(fused[#loc244, #loc239])
#loc548 = loc(fused[#loc246, #loc245])
#loc549 = loc(fused[#loc247, #loc248])
#loc550 = loc(fused[#loc250, #loc249])
#loc551 = loc(fused[#loc251, #loc252])
#loc552 = loc(fused[#loc254, #loc248])
#loc553 = loc(fused[#loc256, #loc255])
#loc554 = loc(fused[#loc258, #loc257])
#loc555 = loc(fused[#loc261, #loc262])
#loc556 = loc(fused[#loc264, #loc265])
#loc557 = loc(fused[#loc266, #loc267])
#loc558 = loc(fused[#loc268, #loc269])
#loc559 = loc(fused[#loc270, #loc271])
#loc560 = loc(fused[#loc273, #loc272])
#loc561 = loc(fused[#loc278, #loc279])
#loc563 = loc(fused[#loc283, #loc284])
#loc564 = loc(fused[#loc285, #loc286])
#loc565 = loc(fused[#loc285, #loc287])
#loc566 = loc(fused[#loc285, #loc288])
#loc567 = loc(fused[#loc289, #loc290])
#loc568 = loc(fused[#loc291, #loc294])
#loc569 = loc(fused[#loc295, #loc290])
#loc570 = loc(fused[#loc296, #loc297])
#loc571 = loc(fused[#loc298, #loc299])
#loc572 = loc(fused[#loc300, #loc297])
#loc573 = loc(fused[#loc302, #loc301])
#loc574 = loc(fused[#loc303, #loc304])
#loc575 = loc(fused[#loc306, #loc305])
#loc576 = loc(fused[#loc307, #loc308])
#loc577 = loc(fused[#loc310, #loc304])
#loc578 = loc(fused[#loc312, #loc311])
#loc579 = loc(fused[#loc314, #loc313])
#loc580 = loc(fused[#loc317, #loc318])
#loc581 = loc(fused[#loc319, #loc320])
#loc582 = loc(fused[#loc321, #loc322])
#loc583 = loc(fused[#loc323, #loc324])
#loc584 = loc(fused[#loc326, #loc325])
#loc585 = loc(fused[#loc327, #loc328])
#loc586 = loc(fused[#loc329, #loc330])
#loc587 = loc(fused[#loc331, #loc332])
#loc588 = loc(fused[#loc333, #loc334])
#loc589 = loc(fused[#loc335, #loc336])
#loc590 = loc(fused[#loc337, #loc338])
#loc591 = loc(fused[#loc341, #loc342])
#loc592 = loc(fused[#loc347, #loc348])
#loc593 = loc(fused[#loc349, #loc350])
#loc594 = loc(fused[#loc351, #loc352])
#loc595 = loc(fused[#loc353, #loc350])
#loc596 = loc(fused[#loc355, #loc356])
#loc597 = loc(fused[#loc358, #loc359])
#loc598 = loc(fused[#loc360, #loc361])
#loc599 = loc(fused[#loc363, #loc362])
#loc600 = loc(fused[#loc366, #loc367])
#loc601 = loc(fused[#loc370, #loc371])
#loc602 = loc(fused[#loc372, #loc373])
#loc603 = loc(fused[#loc375, #loc376])
#loc604 = loc(fused[#loc377, #loc378])
#loc605 = loc(fused[#loc379, #loc380])
#loc606 = loc(fused[#loc381, #loc373])
#loc607 = loc(fused[#loc387, #loc388])
#loc608 = loc(fused[#loc389, #loc390])
#loc609 = loc(fused[#loc391, #loc392])
#loc610 = loc(fused[#loc391, #loc393])
#loc611 = loc(fused[#loc389, #loc394])
#loc612 = loc(fused[#loc397, #loc398])
#loc613 = loc(fused[#loc399, #loc400])
#loc614 = loc(fused[#loc401, #loc402])
#loc615 = loc(fused[#loc404, #loc405])
#loc616 = loc(fused[#loc406, #loc400])
#loc617 = loc(fused[#loc412, #loc413])
#loc618 = loc(fused[#loc411, #loc413])
#loc619 = loc(fused[#loc410, #loc413])
#loc620 = loc(fused[#loc409, #loc408])
#loc621 = loc(fused[#loc418, #loc419])
#loc622 = loc(fused[#loc420, #loc421])
#loc623 = loc(fused[#loc423, #loc421])
#loc624 = loc(fused[#loc426, #loc424])
#loc625 = loc(fused[#loc430, #loc431])
#loc626 = loc(fused[#loc432, #loc433])
#loc627 = loc(fused[#loc435, #loc433])
#loc628 = loc(fused[#loc438, #loc436])
#loc629 = loc(fused[#loc440, #loc441])
#loc630 = loc(fused[#loc442, #loc443])
#loc631 = loc(fused[#loc444, #loc441])
