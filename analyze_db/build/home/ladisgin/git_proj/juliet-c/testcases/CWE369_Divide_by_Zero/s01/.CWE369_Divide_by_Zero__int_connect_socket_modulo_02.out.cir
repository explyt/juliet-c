!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc145 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":340:10)
#loc146 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":340:14)
#loc147 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":340:20)
#loc148 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":340:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc490 = loc(fused[#loc145, #loc146])
#loc491 = loc(fused[#loc147, #loc148])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc433)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc434)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc435)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc436)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc437)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc438)
  cir.func private @close(!s32i) -> !s32i loc(#loc439)
  cir.func private @printIntLine(!s32i) loc(#loc440)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_modulo_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc442)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc443)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc27)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc447)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc448)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc449)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc450)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc36)
          %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc36)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc449)
          cir.scope {
            cir.do {
              %11 = cir.const #cir.int<2> : !s32i loc(#loc41)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc42)
              %13 = cir.const #cir.int<6> : !s32i loc(#loc43)
              %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc44)
              cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc452)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc49)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc50)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc50)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc454)
                cir.if %56 {
                  cir.break loc(#loc52)
                } loc(#loc455)
              } loc(#loc453)
              %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc456)
              %16 = cir.const #cir.int<0> : !s32i loc(#loc55)
              %17 = cir.const #cir.int<16> : !u64i loc(#loc457)
              cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc458)
              %18 = cir.const #cir.int<2> : !s32i loc(#loc60)
              %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc60)
              %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
              cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc459)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc63)
              %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc460)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc68)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc68)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc69)
              %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc461)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc463)
                %55 = cir.const #cir.int<16> : !u64i loc(#loc464)
                %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc464)
                %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc80)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc81)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc81)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc465)
                cir.if %60 {
                  cir.break loc(#loc83)
                } loc(#loc466)
              } loc(#loc462)
              %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc84)
              %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc85)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
              %33 = cir.const #cir.int<3> : !s32i loc(#loc86)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc86)
              %35 = cir.const #cir.int<4> : !u64i loc(#loc86)
              %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc86)
              %37 = cir.const #cir.int<2> : !s32i loc(#loc86)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc86)
              %39 = cir.binop(add, %36, %38) : !u64i loc(#loc86)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc87)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc87)
              %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc467)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc88)
              %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc89)
              %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc89)
              cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc468)
              cir.scope {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc95)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc95)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc470)
                %57 = cir.ternary(%56, true {
                  %58 = cir.const #true loc(#loc96)
                  cir.yield %58 : !cir.bool loc(#loc96)
                }, false {
                  %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %59 = cir.const #cir.int<0> : !s32i loc(#loc98)
                  %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc471)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc96)
                    cir.yield %62 : !cir.bool loc(#loc96)
                  }, false {
                    %62 = cir.const #false loc(#loc96)
                    cir.yield %62 : !cir.bool loc(#loc96)
                  }) : (!cir.bool) -> !cir.bool loc(#loc96)
                  cir.yield %61 : !cir.bool loc(#loc96)
                }) : (!cir.bool) -> !cir.bool loc(#loc96)
                cir.if %57 {
                  cir.break loc(#loc100)
                } loc(#loc472)
              } loc(#loc469)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc101)
              %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc101)
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
              %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc103)
              cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc473)
              %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
              %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc105)
              cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc474)
              cir.yield loc(#loc40)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc108)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc108)
              cir.condition(%12) loc(#loc108)
            } loc(#loc451)
          } loc(#loc451)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc112)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc476)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc115)
            } loc(#loc477)
          } loc(#loc475)
        } loc(#loc446)
      } loc(#loc445)
    } loc(#loc444)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc118)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc118)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc120)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
        %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc480)
        cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc122)
      } loc(#loc479)
    } loc(#loc478)
    cir.return loc(#loc19)
  } loc(#loc441)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_modulo_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc482)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc125)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc483)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc127)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc484)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc129)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc485)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc131)
    cir.return loc(#loc124)
  } loc(#loc481)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc486)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc487)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc488)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc142)
  cir.func @main(%arg0: !s32i loc(fused[#loc145, #loc146]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc147, #loc148])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc490)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc491)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc144)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc149)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc150)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc151)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc151)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc152)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc139)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_modulo_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc492)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_modulo_02_good() : () -> () loc(#loc154)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc140)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc141)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc157)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_modulo_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc493)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_modulo_02_bad() : () -> () loc(#loc158)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc142)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc161)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc494)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc494)
    cir.return %17 : !s32i loc(#loc494)
  } loc(#loc489)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc164)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc496)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc170)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc174)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc174)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc501)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc502)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc503)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc504)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc183)
          %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc183)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc503)
          cir.scope {
            cir.do {
              %11 = cir.const #cir.int<2> : !s32i loc(#loc188)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc189)
              %13 = cir.const #cir.int<6> : !s32i loc(#loc190)
              %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc191)
              cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc506)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc196)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc197)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc197)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc508)
                cir.if %56 {
                  cir.break loc(#loc199)
                } loc(#loc509)
              } loc(#loc507)
              %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc510)
              %16 = cir.const #cir.int<0> : !s32i loc(#loc202)
              %17 = cir.const #cir.int<16> : !u64i loc(#loc511)
              cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc512)
              %18 = cir.const #cir.int<2> : !s32i loc(#loc207)
              %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc207)
              %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
              cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc513)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc209)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc209)
              %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc210)
              %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc514)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc213)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc213)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc214)
              %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc515)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc219)
                %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc517)
                %55 = cir.const #cir.int<16> : !u64i loc(#loc518)
                %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc518)
                %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc224)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc225)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc225)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc519)
                cir.if %60 {
                  cir.break loc(#loc227)
                } loc(#loc520)
              } loc(#loc516)
              %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc229)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc229)
              %33 = cir.const #cir.int<3> : !s32i loc(#loc230)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc230)
              %35 = cir.const #cir.int<4> : !u64i loc(#loc230)
              %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc230)
              %37 = cir.const #cir.int<2> : !s32i loc(#loc230)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc230)
              %39 = cir.binop(add, %36, %38) : !u64i loc(#loc230)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc231)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc231)
              %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc521)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc232)
              %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc233)
              %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc233)
              cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc522)
              cir.scope {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc239)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc239)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc524)
                %57 = cir.ternary(%56, true {
                  %58 = cir.const #true loc(#loc240)
                  cir.yield %58 : !cir.bool loc(#loc240)
                }, false {
                  %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                  %59 = cir.const #cir.int<0> : !s32i loc(#loc242)
                  %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc525)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc240)
                    cir.yield %62 : !cir.bool loc(#loc240)
                  }, false {
                    %62 = cir.const #false loc(#loc240)
                    cir.yield %62 : !cir.bool loc(#loc240)
                  }) : (!cir.bool) -> !cir.bool loc(#loc240)
                  cir.yield %61 : !cir.bool loc(#loc240)
                }) : (!cir.bool) -> !cir.bool loc(#loc240)
                cir.if %57 {
                  cir.break loc(#loc244)
                } loc(#loc526)
              } loc(#loc523)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc245)
              %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc245)
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc246)
              %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc247)
              %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc247)
              cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc527)
              %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc248)
              %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc249)
              cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc528)
              cir.yield loc(#loc187)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc252)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc252)
              cir.condition(%12) loc(#loc252)
            } loc(#loc505)
          } loc(#loc505)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc255)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc256)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc256)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc530)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc258)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc259)
            } loc(#loc531)
          } loc(#loc529)
        } loc(#loc500)
      } loc(#loc499)
    } loc(#loc498)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc262)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc262)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc163)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc163)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc266)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc270)
          %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc535)
          cir.if %7 {
            %8 = cir.const #cir.int<100> : !s32i loc(#loc274)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc275)
            %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc537)
            cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc276)
          } else {
            %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc164)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc164)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc277)
          } loc(#loc536)
        } loc(#loc534)
      } loc(#loc533)
    } loc(#loc532)
    cir.return loc(#loc166)
  } loc(#loc495)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc539)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc282)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc283)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc540)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc287)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc287)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc544)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc545)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc546)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc547)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc296)
          %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc296)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc546)
          cir.scope {
            cir.do {
              %11 = cir.const #cir.int<2> : !s32i loc(#loc301)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc302)
              %13 = cir.const #cir.int<6> : !s32i loc(#loc303)
              %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc304)
              cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc549)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc309)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc310)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc310)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc551)
                cir.if %56 {
                  cir.break loc(#loc312)
                } loc(#loc552)
              } loc(#loc550)
              %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc553)
              %16 = cir.const #cir.int<0> : !s32i loc(#loc315)
              %17 = cir.const #cir.int<16> : !u64i loc(#loc554)
              cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc555)
              %18 = cir.const #cir.int<2> : !s32i loc(#loc320)
              %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc320)
              %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
              cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc556)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc322)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc322)
              %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc323)
              %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc557)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc326)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc326)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc327)
              %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc558)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc332)
                %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc560)
                %55 = cir.const #cir.int<16> : !u64i loc(#loc561)
                %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc561)
                %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc337)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc338)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc338)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc562)
                cir.if %60 {
                  cir.break loc(#loc340)
                } loc(#loc563)
              } loc(#loc559)
              %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc341)
              %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc342)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc342)
              %33 = cir.const #cir.int<3> : !s32i loc(#loc343)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc343)
              %35 = cir.const #cir.int<4> : !u64i loc(#loc343)
              %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc343)
              %37 = cir.const #cir.int<2> : !s32i loc(#loc343)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc343)
              %39 = cir.binop(add, %36, %38) : !u64i loc(#loc343)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc344)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc344)
              %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc564)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc345)
              %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc346)
              %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc346)
              cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc565)
              cir.scope {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc351)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc352)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc352)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc567)
                %57 = cir.ternary(%56, true {
                  %58 = cir.const #true loc(#loc353)
                  cir.yield %58 : !cir.bool loc(#loc353)
                }, false {
                  %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc354)
                  %59 = cir.const #cir.int<0> : !s32i loc(#loc355)
                  %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc568)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc353)
                    cir.yield %62 : !cir.bool loc(#loc353)
                  }, false {
                    %62 = cir.const #false loc(#loc353)
                    cir.yield %62 : !cir.bool loc(#loc353)
                  }) : (!cir.bool) -> !cir.bool loc(#loc353)
                  cir.yield %61 : !cir.bool loc(#loc353)
                }) : (!cir.bool) -> !cir.bool loc(#loc353)
                cir.if %57 {
                  cir.break loc(#loc357)
                } loc(#loc569)
              } loc(#loc566)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc358)
              %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc358)
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc359)
              %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc360)
              %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc360)
              cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc570)
              %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc361)
              %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc362)
              cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc571)
              cir.yield loc(#loc300)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc365)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc365)
              cir.condition(%12) loc(#loc365)
            } loc(#loc548)
          } loc(#loc548)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc368)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc369)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc369)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc573)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc371)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc372)
            } loc(#loc574)
          } loc(#loc572)
        } loc(#loc543)
      } loc(#loc542)
    } loc(#loc541)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc375)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc375)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc379)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc380)
          %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc578)
          cir.if %7 {
            %8 = cir.const #cir.int<100> : !s32i loc(#loc384)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc385)
            %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc580)
            cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc386)
          } else {
            %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc387)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc387)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc388)
          } loc(#loc579)
        } loc(#loc577)
      } loc(#loc576)
    } loc(#loc575)
    cir.return loc(#loc279)
  } loc(#loc538)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc582)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc393)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc394)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc583)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc398)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc398)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc402)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc402)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc403)
      } else {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc404)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc586)
      } loc(#loc585)
    } loc(#loc584)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc408)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc408)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc410)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc411)
        %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc589)
        cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc412)
      } loc(#loc588)
    } loc(#loc587)
    cir.return loc(#loc390)
  } loc(#loc581)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc591)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc417)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc418)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc592)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc422)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc422)
      cir.if %4 {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc424)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc595)
      } loc(#loc594)
    } loc(#loc593)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc428)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc428)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc430)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc431)
        %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc598)
        cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc432)
      } loc(#loc597)
    } loc(#loc596)
    cir.return loc(#loc414)
  } loc(#loc590)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":77:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":44:1)
#loc19 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":113:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":46:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":46:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":48:13)
#loc23 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":48:12)
#loc24 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":48:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":49:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":107:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":49:8)
#loc28 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":50:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":51:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":106:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":56:13)
#loc32 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":56:17)
#loc33 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":57:13)
#loc34 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":57:32)
#loc35 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":58:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":58:36)
#loc37 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":59:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":59:45)
#loc39 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":60:13)
#loc40 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":95:21)
#loc41 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":70:40)
#loc42 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":70:49)
#loc43 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":70:62)
#loc44 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":70:33)
#loc45 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":70:17)
#loc46 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":70:73)
#loc47 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":71:17)
#loc48 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":74:17)
#loc49 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":71:21)
#loc50 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":71:38)
#loc51 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":72:17)
#loc52 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":73:21)
#loc53 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":75:24)
#loc54 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":75:25)
#loc55 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":75:34)
#loc56 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":75:37)
#loc57 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":75:51)
#loc58 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":75:17)
#loc59 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":75:52)
#loc60 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":76:38)
#loc61 = loc("/usr/include/netinet/in.h":249:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":76:17)
#loc63 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":77:43)
#loc64 = loc("/usr/include/netinet/in.h":251:20)
#loc65 = loc("/usr/include/netinet/in.h":33:15)
#loc66 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":77:17)
#loc67 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":77:63)
#loc68 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":78:42)
#loc69 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":78:36)
#loc70 = loc("/usr/include/netinet/in.h":250:15)
#loc71 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":78:17)
#loc72 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":78:50)
#loc73 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":79:17)
#loc74 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":82:17)
#loc75 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":79:29)
#loc76 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":79:62)
#loc77 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":79:63)
#loc78 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":79:72)
#loc79 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":79:86)
#loc80 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":79:21)
#loc81 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":79:92)
#loc82 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":80:17)
#loc83 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":81:21)
#loc84 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":85:35)
#loc85 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":85:50)
#loc86 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":85:63)
#loc87 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":85:81)
#loc88 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":85:84)
#loc89 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":85:30)
#loc90 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":85:17)
#loc91 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":85:85)
#loc92 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":86:17)
#loc93 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":89:17)
#loc94 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":86:21)
#loc95 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":86:35)
#loc96 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":86:48)
#loc97 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":86:51)
#loc98 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":86:65)
#loc99 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":87:17)
#loc100 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":88:21)
#loc101 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":91:43)
#loc102 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":91:29)
#loc103 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":91:17)
#loc104 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":93:29)
#loc105 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":93:24)
#loc106 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":93:17)
#loc107 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":93:40)
#loc108 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":95:20)
#loc109 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":96:13)
#loc110 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":99:13)
#loc111 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":96:17)
#loc112 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":96:34)
#loc113 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":97:13)
#loc114 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":98:30)
#loc115 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":98:17)
#loc116 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":108:5)
#loc117 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":112:5)
#loc118 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":108:8)
#loc119 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":109:5)
#loc120 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":111:22)
#loc121 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":111:28)
#loc122 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":111:9)
#loc123 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":323:1)
#loc124 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":329:1)
#loc125 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":325:5)
#loc126 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":325:14)
#loc127 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":326:5)
#loc128 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":326:14)
#loc129 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":327:5)
#loc130 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":327:14)
#loc131 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":328:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":328:14)
#loc133 = loc("/usr/include/stdlib.h":575:1)
#loc134 = loc("/usr/include/stdlib.h":575:41)
#loc135 = loc("/usr/include/time.h":76:1)
#loc136 = loc("/usr/include/time.h":76:38)
#loc137 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc138 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc139 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":345:15)
#loc140 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":347:15)
#loc141 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":350:15)
#loc142 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":352:15)
#loc143 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":340:1)
#loc144 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":355:1)
#loc149 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":341:1)
#loc150 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":343:27)
#loc151 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":343:22)
#loc152 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":343:5)
#loc153 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":345:5)
#loc154 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":346:5)
#loc155 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":346:62)
#loc156 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":347:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":350:5)
#loc158 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":351:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":351:61)
#loc160 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":352:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":354:12)
#loc162 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":354:5)
#loc163 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":187:19)
#loc164 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":198:23)
#loc165 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":120:1)
#loc166 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":201:1)
#loc167 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":122:5)
#loc168 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":122:9)
#loc169 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":124:13)
#loc170 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":124:12)
#loc171 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":124:5)
#loc172 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":125:5)
#loc173 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":183:5)
#loc174 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":125:8)
#loc175 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":126:5)
#loc176 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":127:9)
#loc177 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":182:9)
#loc178 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":132:13)
#loc179 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":132:17)
#loc180 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":133:13)
#loc181 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":133:32)
#loc182 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":134:13)
#loc183 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":134:36)
#loc184 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":135:13)
#loc185 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":135:45)
#loc186 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":136:13)
#loc187 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":171:21)
#loc188 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":146:40)
#loc189 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":146:49)
#loc190 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":146:62)
#loc191 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":146:33)
#loc192 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":146:17)
#loc193 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":146:73)
#loc194 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":147:17)
#loc195 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":150:17)
#loc196 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":147:21)
#loc197 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":147:38)
#loc198 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":148:17)
#loc199 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":149:21)
#loc200 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":151:24)
#loc201 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":151:25)
#loc202 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":151:34)
#loc203 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":151:37)
#loc204 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":151:51)
#loc205 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":151:17)
#loc206 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":151:52)
#loc207 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":152:38)
#loc208 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":152:17)
#loc209 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":153:53)
#loc210 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":153:43)
#loc211 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":153:17)
#loc212 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":153:63)
#loc213 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":154:42)
#loc214 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":154:36)
#loc215 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":154:17)
#loc216 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":154:50)
#loc217 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":155:17)
#loc218 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":158:17)
#loc219 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":155:29)
#loc220 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":155:62)
#loc221 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":155:63)
#loc222 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":155:72)
#loc223 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":155:86)
#loc224 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":155:21)
#loc225 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":155:92)
#loc226 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":156:17)
#loc227 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":157:21)
#loc228 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":161:35)
#loc229 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":161:50)
#loc230 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":161:63)
#loc231 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":161:81)
#loc232 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":161:84)
#loc233 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":161:30)
#loc234 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":161:17)
#loc235 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":161:85)
#loc236 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":162:17)
#loc237 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":165:17)
#loc238 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":162:21)
#loc239 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":162:35)
#loc240 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":162:48)
#loc241 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":162:51)
#loc242 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":162:65)
#loc243 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":163:17)
#loc244 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":164:21)
#loc245 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":167:43)
#loc246 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":167:29)
#loc247 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":167:17)
#loc248 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":169:29)
#loc249 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":169:24)
#loc250 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":169:17)
#loc251 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":169:40)
#loc252 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":171:20)
#loc253 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":172:13)
#loc254 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":175:13)
#loc255 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":172:17)
#loc256 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":172:34)
#loc257 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":173:13)
#loc258 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":174:30)
#loc259 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":174:17)
#loc260 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":184:5)
#loc261 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":200:5)
#loc262 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":184:8)
#loc263 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":185:5)
#loc264 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":188:5)
#loc265 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":190:5)
#loc266 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":187:9)
#loc267 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":192:9)
#loc268 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":199:9)
#loc269 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":192:13)
#loc270 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":192:21)
#loc271 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":193:9)
#loc272 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":195:9)
#loc273 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":197:9)
#loc274 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":194:26)
#loc275 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":194:32)
#loc276 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":194:13)
#loc277 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":198:13)
#loc278 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":204:1)
#loc279 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":280:1)
#loc280 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":206:5)
#loc281 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":206:9)
#loc282 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":208:13)
#loc283 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":208:12)
#loc284 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":208:5)
#loc285 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":209:5)
#loc286 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":267:5)
#loc287 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":209:8)
#loc288 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":210:5)
#loc289 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":211:9)
#loc290 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":266:9)
#loc291 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":216:13)
#loc292 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":216:17)
#loc293 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":217:13)
#loc294 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":217:32)
#loc295 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":218:13)
#loc296 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":218:36)
#loc297 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":219:13)
#loc298 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":219:45)
#loc299 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":220:13)
#loc300 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":255:21)
#loc301 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":230:40)
#loc302 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":230:49)
#loc303 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":230:62)
#loc304 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":230:33)
#loc305 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":230:17)
#loc306 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":230:73)
#loc307 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":231:17)
#loc308 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":234:17)
#loc309 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":231:21)
#loc310 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":231:38)
#loc311 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":232:17)
#loc312 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":233:21)
#loc313 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":235:24)
#loc314 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":235:25)
#loc315 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":235:34)
#loc316 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":235:37)
#loc317 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":235:51)
#loc318 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":235:17)
#loc319 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":235:52)
#loc320 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":236:38)
#loc321 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":236:17)
#loc322 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":237:53)
#loc323 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":237:43)
#loc324 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":237:17)
#loc325 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":237:63)
#loc326 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":238:42)
#loc327 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":238:36)
#loc328 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":238:17)
#loc329 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":238:50)
#loc330 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":239:17)
#loc331 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":242:17)
#loc332 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":239:29)
#loc333 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":239:62)
#loc334 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":239:63)
#loc335 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":239:72)
#loc336 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":239:86)
#loc337 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":239:21)
#loc338 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":239:92)
#loc339 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":240:17)
#loc340 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":241:21)
#loc341 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":245:35)
#loc342 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":245:50)
#loc343 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":245:63)
#loc344 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":245:81)
#loc345 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":245:84)
#loc346 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":245:30)
#loc347 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":245:17)
#loc348 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":245:85)
#loc349 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":246:17)
#loc350 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":249:17)
#loc351 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":246:21)
#loc352 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":246:35)
#loc353 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":246:48)
#loc354 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":246:51)
#loc355 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":246:65)
#loc356 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":247:17)
#loc357 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":248:21)
#loc358 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":251:43)
#loc359 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":251:29)
#loc360 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":251:17)
#loc361 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":253:29)
#loc362 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":253:24)
#loc363 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":253:17)
#loc364 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":253:40)
#loc365 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":255:20)
#loc366 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":256:13)
#loc367 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":259:13)
#loc368 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":256:17)
#loc369 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":256:34)
#loc370 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":257:13)
#loc371 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":258:30)
#loc372 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":258:17)
#loc373 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":268:5)
#loc374 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":279:5)
#loc375 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":268:8)
#loc376 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":269:5)
#loc377 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":271:9)
#loc378 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":278:9)
#loc379 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":271:13)
#loc380 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":271:21)
#loc381 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":272:9)
#loc382 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":274:9)
#loc383 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":276:9)
#loc384 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":273:26)
#loc385 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":273:32)
#loc386 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":273:13)
#loc387 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":277:23)
#loc388 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":277:13)
#loc389 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":283:1)
#loc390 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":303:1)
#loc391 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":285:5)
#loc392 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":285:9)
#loc393 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":287:13)
#loc394 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":287:12)
#loc395 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":287:5)
#loc396 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":288:5)
#loc397 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":297:5)
#loc398 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":288:8)
#loc399 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":289:5)
#loc400 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":292:5)
#loc401 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":294:5)
#loc402 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":291:19)
#loc403 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":291:9)
#loc404 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":296:16)
#loc405 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":296:9)
#loc406 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":298:5)
#loc407 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":302:5)
#loc408 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":298:8)
#loc409 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":299:5)
#loc410 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":301:22)
#loc411 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":301:28)
#loc412 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":301:9)
#loc413 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":306:1)
#loc414 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":321:1)
#loc415 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":308:5)
#loc416 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":308:9)
#loc417 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":310:13)
#loc418 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":310:12)
#loc419 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":310:5)
#loc420 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":311:5)
#loc421 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":315:5)
#loc422 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":311:8)
#loc423 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":312:5)
#loc424 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":314:16)
#loc425 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":314:9)
#loc426 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":316:5)
#loc427 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":320:5)
#loc428 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":316:8)
#loc429 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":317:5)
#loc430 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":319:22)
#loc431 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":319:28)
#loc432 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_02.c":319:9)
#loc433 = loc(fused[#loc1, #loc2])
#loc434 = loc(fused[#loc3, #loc4])
#loc435 = loc(fused[#loc6, #loc7])
#loc436 = loc(fused[#loc8, #loc9])
#loc437 = loc(fused[#loc10, #loc11])
#loc438 = loc(fused[#loc12, #loc13])
#loc439 = loc(fused[#loc14, #loc15])
#loc440 = loc(fused[#loc16, #loc17])
#loc441 = loc(fused[#loc18, #loc19])
#loc442 = loc(fused[#loc20, #loc21])
#loc443 = loc(fused[#loc24, #loc22])
#loc444 = loc(fused[#loc25, #loc26])
#loc445 = loc(fused[#loc28, #loc26])
#loc446 = loc(fused[#loc29, #loc30])
#loc447 = loc(fused[#loc31, #loc32])
#loc448 = loc(fused[#loc33, #loc34])
#loc449 = loc(fused[#loc35, #loc36])
#loc450 = loc(fused[#loc37, #loc38])
#loc451 = loc(fused[#loc39, #loc40])
#loc452 = loc(fused[#loc45, #loc46])
#loc453 = loc(fused[#loc47, #loc48])
#loc454 = loc(fused[#loc49, #loc50])
#loc455 = loc(fused[#loc51, #loc48])
#loc456 = loc(fused[#loc53, #loc54])
#loc457 = loc(fused[#loc56, #loc57])
#loc458 = loc(fused[#loc58, #loc59])
#loc459 = loc(fused[#loc62, #loc60])
#loc460 = loc(fused[#loc66, #loc67])
#loc461 = loc(fused[#loc71, #loc72])
#loc462 = loc(fused[#loc73, #loc74])
#loc463 = loc(fused[#loc76, #loc77])
#loc464 = loc(fused[#loc78, #loc79])
#loc465 = loc(fused[#loc80, #loc81])
#loc466 = loc(fused[#loc82, #loc74])
#loc467 = loc(fused[#loc86, #loc87])
#loc468 = loc(fused[#loc90, #loc91])
#loc469 = loc(fused[#loc92, #loc93])
#loc470 = loc(fused[#loc94, #loc95])
#loc471 = loc(fused[#loc97, #loc98])
#loc472 = loc(fused[#loc99, #loc93])
#loc473 = loc(fused[#loc103, #loc101])
#loc474 = loc(fused[#loc106, #loc107])
#loc475 = loc(fused[#loc109, #loc110])
#loc476 = loc(fused[#loc111, #loc112])
#loc477 = loc(fused[#loc113, #loc110])
#loc478 = loc(fused[#loc116, #loc117])
#loc479 = loc(fused[#loc119, #loc117])
#loc480 = loc(fused[#loc120, #loc121])
#loc481 = loc(fused[#loc123, #loc124])
#loc482 = loc(fused[#loc125, #loc126])
#loc483 = loc(fused[#loc127, #loc128])
#loc484 = loc(fused[#loc129, #loc130])
#loc485 = loc(fused[#loc131, #loc132])
#loc486 = loc(fused[#loc133, #loc134])
#loc487 = loc(fused[#loc135, #loc136])
#loc488 = loc(fused[#loc137, #loc138])
#loc489 = loc(fused[#loc143, #loc144])
#loc492 = loc(fused[#loc154, #loc155])
#loc493 = loc(fused[#loc158, #loc159])
#loc494 = loc(fused[#loc162, #loc161])
#loc495 = loc(fused[#loc165, #loc166])
#loc496 = loc(fused[#loc167, #loc168])
#loc497 = loc(fused[#loc171, #loc169])
#loc498 = loc(fused[#loc172, #loc173])
#loc499 = loc(fused[#loc175, #loc173])
#loc500 = loc(fused[#loc176, #loc177])
#loc501 = loc(fused[#loc178, #loc179])
#loc502 = loc(fused[#loc180, #loc181])
#loc503 = loc(fused[#loc182, #loc183])
#loc504 = loc(fused[#loc184, #loc185])
#loc505 = loc(fused[#loc186, #loc187])
#loc506 = loc(fused[#loc192, #loc193])
#loc507 = loc(fused[#loc194, #loc195])
#loc508 = loc(fused[#loc196, #loc197])
#loc509 = loc(fused[#loc198, #loc195])
#loc510 = loc(fused[#loc200, #loc201])
#loc511 = loc(fused[#loc203, #loc204])
#loc512 = loc(fused[#loc205, #loc206])
#loc513 = loc(fused[#loc208, #loc207])
#loc514 = loc(fused[#loc211, #loc212])
#loc515 = loc(fused[#loc215, #loc216])
#loc516 = loc(fused[#loc217, #loc218])
#loc517 = loc(fused[#loc220, #loc221])
#loc518 = loc(fused[#loc222, #loc223])
#loc519 = loc(fused[#loc224, #loc225])
#loc520 = loc(fused[#loc226, #loc218])
#loc521 = loc(fused[#loc230, #loc231])
#loc522 = loc(fused[#loc234, #loc235])
#loc523 = loc(fused[#loc236, #loc237])
#loc524 = loc(fused[#loc238, #loc239])
#loc525 = loc(fused[#loc241, #loc242])
#loc526 = loc(fused[#loc243, #loc237])
#loc527 = loc(fused[#loc247, #loc245])
#loc528 = loc(fused[#loc250, #loc251])
#loc529 = loc(fused[#loc253, #loc254])
#loc530 = loc(fused[#loc255, #loc256])
#loc531 = loc(fused[#loc257, #loc254])
#loc532 = loc(fused[#loc260, #loc261])
#loc533 = loc(fused[#loc263, #loc264, #loc265, #loc261])
#loc534 = loc(fused[#loc267, #loc268])
#loc535 = loc(fused[#loc269, #loc270])
#loc536 = loc(fused[#loc271, #loc272, #loc273, #loc268])
#loc537 = loc(fused[#loc274, #loc275])
#loc538 = loc(fused[#loc278, #loc279])
#loc539 = loc(fused[#loc280, #loc281])
#loc540 = loc(fused[#loc284, #loc282])
#loc541 = loc(fused[#loc285, #loc286])
#loc542 = loc(fused[#loc288, #loc286])
#loc543 = loc(fused[#loc289, #loc290])
#loc544 = loc(fused[#loc291, #loc292])
#loc545 = loc(fused[#loc293, #loc294])
#loc546 = loc(fused[#loc295, #loc296])
#loc547 = loc(fused[#loc297, #loc298])
#loc548 = loc(fused[#loc299, #loc300])
#loc549 = loc(fused[#loc305, #loc306])
#loc550 = loc(fused[#loc307, #loc308])
#loc551 = loc(fused[#loc309, #loc310])
#loc552 = loc(fused[#loc311, #loc308])
#loc553 = loc(fused[#loc313, #loc314])
#loc554 = loc(fused[#loc316, #loc317])
#loc555 = loc(fused[#loc318, #loc319])
#loc556 = loc(fused[#loc321, #loc320])
#loc557 = loc(fused[#loc324, #loc325])
#loc558 = loc(fused[#loc328, #loc329])
#loc559 = loc(fused[#loc330, #loc331])
#loc560 = loc(fused[#loc333, #loc334])
#loc561 = loc(fused[#loc335, #loc336])
#loc562 = loc(fused[#loc337, #loc338])
#loc563 = loc(fused[#loc339, #loc331])
#loc564 = loc(fused[#loc343, #loc344])
#loc565 = loc(fused[#loc347, #loc348])
#loc566 = loc(fused[#loc349, #loc350])
#loc567 = loc(fused[#loc351, #loc352])
#loc568 = loc(fused[#loc354, #loc355])
#loc569 = loc(fused[#loc356, #loc350])
#loc570 = loc(fused[#loc360, #loc358])
#loc571 = loc(fused[#loc363, #loc364])
#loc572 = loc(fused[#loc366, #loc367])
#loc573 = loc(fused[#loc368, #loc369])
#loc574 = loc(fused[#loc370, #loc367])
#loc575 = loc(fused[#loc373, #loc374])
#loc576 = loc(fused[#loc376, #loc374])
#loc577 = loc(fused[#loc377, #loc378])
#loc578 = loc(fused[#loc379, #loc380])
#loc579 = loc(fused[#loc381, #loc382, #loc383, #loc378])
#loc580 = loc(fused[#loc384, #loc385])
#loc581 = loc(fused[#loc389, #loc390])
#loc582 = loc(fused[#loc391, #loc392])
#loc583 = loc(fused[#loc395, #loc393])
#loc584 = loc(fused[#loc396, #loc397])
#loc585 = loc(fused[#loc399, #loc400, #loc401, #loc397])
#loc586 = loc(fused[#loc405, #loc404])
#loc587 = loc(fused[#loc406, #loc407])
#loc588 = loc(fused[#loc409, #loc407])
#loc589 = loc(fused[#loc410, #loc411])
#loc590 = loc(fused[#loc413, #loc414])
#loc591 = loc(fused[#loc415, #loc416])
#loc592 = loc(fused[#loc419, #loc417])
#loc593 = loc(fused[#loc420, #loc421])
#loc594 = loc(fused[#loc423, #loc421])
#loc595 = loc(fused[#loc425, #loc424])
#loc596 = loc(fused[#loc426, #loc427])
#loc597 = loc(fused[#loc429, #loc427])
#loc598 = loc(fused[#loc430, #loc431])
