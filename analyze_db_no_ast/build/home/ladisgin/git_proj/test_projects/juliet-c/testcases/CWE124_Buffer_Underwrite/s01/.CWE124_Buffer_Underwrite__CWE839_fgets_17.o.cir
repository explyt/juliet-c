!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc252)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc253)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc254)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc255)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc256)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc259)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc260)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc21)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc25)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc264)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc29)
        cir.condition(%9) loc(#loc29)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc267)
            %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc267)
            cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc267)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
              %9 = cir.const #cir.int<3> : !s32i loc(#loc38)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc38)
              %11 = cir.const #cir.int<4> : !u64i loc(#loc38)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc38)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc38)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc38)
              %15 = cir.binop(add, %12, %14) : !u64i loc(#loc38)
              %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc38)
              %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
              %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
              %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc269)
              %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc42)
              cir.if %23 {
                %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc46)
                %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc47)
                cir.store %25, %2 : !s32i, !cir.ptr<!s32i> loc(#loc271)
              } else {
                %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc50)
              } loc(#loc270)
            } loc(#loc268)
          } loc(#loc266)
        } loc(#loc265)
        cir.yield loc(#loc24)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc52)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
        cir.yield loc(#loc262)
      } loc(#loc262)
    } loc(#loc262)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc55)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc274)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc275)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc59)
        cir.condition(%9) loc(#loc59)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc278)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc279)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc279)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc279)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc70)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc281)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc71)
              cir.if %12 {
                %13 = cir.const #cir.int<1> : !s32i loc(#loc75)
                %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc77)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc77)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc283)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc80)
                  cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc285)
                  cir.for : cond {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                    %19 = cir.const #cir.int<10> : !s32i loc(#loc83)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc286)
                    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc84)
                    cir.condition(%21) loc(#loc84)
                  } body {
                    cir.scope {
                      %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                      %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc87)
                      %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc87)
                      %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                      cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc88)
                    } loc(#loc287)
                    cir.yield loc(#loc79)
                  } step {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc90)
                    cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc288)
                    cir.yield loc(#loc284)
                  } loc(#loc284)
                } loc(#loc284)
              } else {
                %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc91)
              } loc(#loc282)
            } loc(#loc280)
          } loc(#loc277)
        } loc(#loc276)
        cir.yield loc(#loc54)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc93)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc289)
        cir.yield loc(#loc273)
      } loc(#loc273)
    } loc(#loc273)
    cir.return loc(#loc14)
  } loc(#loc257)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc291)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc292)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    cir.return loc(#loc95)
  } loc(#loc290)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc294)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc295)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc296)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc109)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc113)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc300)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc117)
        cir.condition(%9) loc(#loc117)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc303)
            %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc303)
            cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc303)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
              %9 = cir.const #cir.int<3> : !s32i loc(#loc126)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc126)
              %11 = cir.const #cir.int<4> : !u64i loc(#loc126)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc126)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc126)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc126)
              %15 = cir.binop(add, %12, %14) : !u64i loc(#loc126)
              %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc126)
              %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc127)
              %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc128)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc129)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc129)
              %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc305)
              %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc130)
              cir.if %23 {
                %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
                %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc135)
                cir.store %25, %2 : !s32i, !cir.ptr<!s32i> loc(#loc307)
              } else {
                %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc138)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc138)
                cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc139)
              } loc(#loc306)
            } loc(#loc304)
          } loc(#loc302)
        } loc(#loc301)
        cir.yield loc(#loc112)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc141)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc308)
        cir.yield loc(#loc298)
      } loc(#loc298)
    } loc(#loc298)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc144)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc310)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc146)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc147)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc311)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc148)
        cir.condition(%9) loc(#loc148)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc314)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc315)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc315)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc315)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %10 = cir.const #cir.int<0> : !s32i loc(#loc159)
              %11 = cir.cmp(ge, %9, %10) : !s32i, !s32i loc(#loc317)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc160)
              %13 = cir.ternary(%12, true {
                %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
                %15 = cir.const #cir.int<10> : !s32i loc(#loc163)
                %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc318)
                %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc165)
                %18 = cir.ternary(%17, true {
                  %19 = cir.const #true loc(#loc161)
                  cir.yield %19 : !cir.bool loc(#loc161)
                }, false {
                  %19 = cir.const #false loc(#loc161)
                  cir.yield %19 : !cir.bool loc(#loc161)
                }) : (!cir.bool) -> !cir.bool loc(#loc161)
                cir.yield %18 : !cir.bool loc(#loc161)
              }, false {
                %14 = cir.const #false loc(#loc161)
                cir.yield %14 : !cir.bool loc(#loc161)
              }) : (!cir.bool) -> !cir.bool loc(#loc161)
              cir.if %13 {
                %14 = cir.const #cir.int<1> : !s32i loc(#loc169)
                %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc170)
                %16 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc171)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc171)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc320)
                cir.scope {
                  %18 = cir.const #cir.int<0> : !s32i loc(#loc174)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc322)
                  cir.for : cond {
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc176)
                    %20 = cir.const #cir.int<10> : !s32i loc(#loc177)
                    %21 = cir.cmp(lt, %19, %20) : !s32i, !s32i loc(#loc323)
                    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc178)
                    cir.condition(%22) loc(#loc178)
                  } body {
                    cir.scope {
                      %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc180)
                      %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc181)
                      %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc181)
                      %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                      cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc182)
                    } loc(#loc324)
                    cir.yield loc(#loc173)
                  } step {
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc184)
                    cir.store %20, %6 : !s32i, !cir.ptr<!s32i> loc(#loc325)
                    cir.yield loc(#loc321)
                  } loc(#loc321)
                } loc(#loc321)
              } else {
                %14 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc100)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc100)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc185)
              } loc(#loc319)
            } loc(#loc316)
          } loc(#loc313)
        } loc(#loc312)
        cir.yield loc(#loc143)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc187)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc326)
        cir.yield loc(#loc309)
      } loc(#loc309)
    } loc(#loc309)
    cir.return loc(#loc102)
  } loc(#loc293)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc328)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc329)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc330)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc196)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc200)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc203)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc334)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc204)
        cir.condition(%9) loc(#loc204)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<7> : !s32i loc(#loc206)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc336)
        } loc(#loc335)
        cir.yield loc(#loc199)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc209)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
        cir.yield loc(#loc332)
      } loc(#loc332)
    } loc(#loc332)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc212)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc339)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc214)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc215)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc340)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc216)
        cir.condition(%9) loc(#loc216)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc343)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc344)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc344)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc344)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc226)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc227)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc346)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc228)
              cir.if %12 {
                %13 = cir.const #cir.int<1> : !s32i loc(#loc232)
                %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc234)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc234)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc348)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc237)
                  cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc350)
                  cir.for : cond {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                    %19 = cir.const #cir.int<10> : !s32i loc(#loc240)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc351)
                    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc241)
                    cir.condition(%21) loc(#loc241)
                  } body {
                    cir.scope {
                      %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                      %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc244)
                      %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc244)
                      %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                      cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc245)
                    } loc(#loc352)
                    cir.yield loc(#loc236)
                  } step {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc247)
                    cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc353)
                    cir.yield loc(#loc349)
                  } loc(#loc349)
                } loc(#loc349)
              } else {
                %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc248)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc248)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc249)
              } loc(#loc347)
            } loc(#loc345)
          } loc(#loc342)
        } loc(#loc341)
        cir.yield loc(#loc211)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc250)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc251)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc354)
        cir.yield loc(#loc338)
      } loc(#loc338)
    } loc(#loc338)
    cir.return loc(#loc189)
  } loc(#loc327)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":42:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":64:27)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":24:1)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":68:1)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":26:5)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":26:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":26:11)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":27:5)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":27:9)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":29:13)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":29:12)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":29:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":45:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:13)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:9)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:16)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:20)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:18)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":31:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":32:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":44:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":33:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":33:49)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":43:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:23)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:36)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:53)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:17)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:63)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:60)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":36:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":39:13)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":41:13)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":38:29)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":38:24)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":38:17)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":38:40)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":42:17)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:24)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:23)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:5)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":67:5)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:13)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:9)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:16)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:20)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:18)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":47:5)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":48:9)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":66:9)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":49:13)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":49:17)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":50:13)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":50:34)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":53:13)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":65:13)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":53:17)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":53:24)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":53:22)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":54:13)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":61:13)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":63:13)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":55:32)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":55:24)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":55:17)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":60:17)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:25)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:21)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:28)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:32)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:30)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":58:17)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":59:41)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":59:34)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":59:21)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:37)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:36)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":64:17)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:24)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:23)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":157:1)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":161:1)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":159:5)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":159:13)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":160:5)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":160:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":114:27)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":75:1)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":118:1)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":77:5)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":77:9)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":77:11)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":78:5)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":78:9)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":80:13)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":80:12)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":80:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:5)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":96:5)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:9)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:16)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:20)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:18)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":82:5)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":83:9)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":95:9)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":84:13)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":84:49)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":94:13)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:23)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:36)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:53)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:17)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:63)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:60)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":87:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":90:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":92:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":89:29)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":89:24)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":89:17)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":89:40)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":93:27)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":93:17)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:24)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:23)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:5)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":117:5)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:13)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:9)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:16)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:20)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:18)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":98:5)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":99:9)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":116:9)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":100:13)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":100:17)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":101:13)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":101:34)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:13)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":115:13)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:17)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:25)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:22)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:27)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:30)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:38)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:40)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:35)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":104:13)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":111:13)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":113:13)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":105:32)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":105:24)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":105:17)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:17)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":110:17)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:25)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:21)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:28)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:32)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:30)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":108:17)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":109:41)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":109:34)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":109:21)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:37)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:36)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":114:17)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:24)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:23)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":121:1)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":155:1)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":123:5)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":123:9)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":123:11)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":124:5)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":124:9)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":126:13)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":126:12)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":126:5)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:5)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":132:5)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:13)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:9)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:16)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:20)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:18)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":128:5)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":131:16)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":131:9)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:24)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:23)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:5)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":154:5)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:13)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:9)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:16)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:20)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:18)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":134:5)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":135:9)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":153:9)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":136:13)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":136:17)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":137:13)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":137:34)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":140:13)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":152:13)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":140:17)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":140:24)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":140:22)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":141:13)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":148:13)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":150:13)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":142:32)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":142:24)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":142:17)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:17)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":147:17)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:25)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:21)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:28)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:32)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:30)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":145:17)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":146:41)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":146:34)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":146:21)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:37)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:36)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":151:27)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":151:17)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:24)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:23)
#loc252 = loc(fused[#loc1, #loc2])
#loc253 = loc(fused[#loc3, #loc4])
#loc254 = loc(fused[#loc5, #loc6])
#loc255 = loc(fused[#loc7, #loc8])
#loc256 = loc(fused[#loc10, #loc11])
#loc257 = loc(fused[#loc13, #loc14])
#loc258 = loc(fused[#loc15, #loc16])
#loc259 = loc(fused[#loc15, #loc17])
#loc260 = loc(fused[#loc18, #loc19])
#loc261 = loc(fused[#loc22, #loc20])
#loc262 = loc(fused[#loc23, #loc24])
#loc263 = loc(fused[#loc26, #loc25])
#loc264 = loc(fused[#loc27, #loc28])
#loc265 = loc(fused[#loc30, #loc24])
#loc266 = loc(fused[#loc31, #loc32])
#loc267 = loc(fused[#loc33, #loc34])
#loc268 = loc(fused[#loc35, #loc36])
#loc269 = loc(fused[#loc40, #loc41])
#loc270 = loc(fused[#loc43, #loc44, #loc45, #loc36])
#loc271 = loc(fused[#loc48, #loc49])
#loc272 = loc(fused[#loc52, #loc51])
#loc273 = loc(fused[#loc53, #loc54])
#loc274 = loc(fused[#loc56, #loc55])
#loc275 = loc(fused[#loc57, #loc58])
#loc276 = loc(fused[#loc60, #loc54])
#loc277 = loc(fused[#loc61, #loc62])
#loc278 = loc(fused[#loc63, #loc64])
#loc279 = loc(fused[#loc65, #loc66])
#loc280 = loc(fused[#loc67, #loc68])
#loc281 = loc(fused[#loc69, #loc70])
#loc282 = loc(fused[#loc72, #loc73, #loc74, #loc68])
#loc283 = loc(fused[#loc77, #loc75])
#loc284 = loc(fused[#loc78, #loc79])
#loc285 = loc(fused[#loc81, #loc80])
#loc286 = loc(fused[#loc82, #loc83])
#loc287 = loc(fused[#loc85, #loc79])
#loc288 = loc(fused[#loc90, #loc89])
#loc289 = loc(fused[#loc93, #loc92])
#loc290 = loc(fused[#loc94, #loc95])
#loc291 = loc(fused[#loc96, #loc97])
#loc292 = loc(fused[#loc98, #loc99])
#loc293 = loc(fused[#loc101, #loc102])
#loc294 = loc(fused[#loc103, #loc104])
#loc295 = loc(fused[#loc103, #loc105])
#loc296 = loc(fused[#loc106, #loc107])
#loc297 = loc(fused[#loc110, #loc108])
#loc298 = loc(fused[#loc111, #loc112])
#loc299 = loc(fused[#loc114, #loc113])
#loc300 = loc(fused[#loc115, #loc116])
#loc301 = loc(fused[#loc118, #loc112])
#loc302 = loc(fused[#loc119, #loc120])
#loc303 = loc(fused[#loc121, #loc122])
#loc304 = loc(fused[#loc123, #loc124])
#loc305 = loc(fused[#loc128, #loc129])
#loc306 = loc(fused[#loc131, #loc132, #loc133, #loc124])
#loc307 = loc(fused[#loc136, #loc137])
#loc308 = loc(fused[#loc141, #loc140])
#loc309 = loc(fused[#loc142, #loc143])
#loc310 = loc(fused[#loc145, #loc144])
#loc311 = loc(fused[#loc146, #loc147])
#loc312 = loc(fused[#loc149, #loc143])
#loc313 = loc(fused[#loc150, #loc151])
#loc314 = loc(fused[#loc152, #loc153])
#loc315 = loc(fused[#loc154, #loc155])
#loc316 = loc(fused[#loc156, #loc157])
#loc317 = loc(fused[#loc158, #loc159])
#loc318 = loc(fused[#loc162, #loc164])
#loc319 = loc(fused[#loc166, #loc167, #loc168, #loc157])
#loc320 = loc(fused[#loc171, #loc169])
#loc321 = loc(fused[#loc172, #loc173])
#loc322 = loc(fused[#loc175, #loc174])
#loc323 = loc(fused[#loc176, #loc177])
#loc324 = loc(fused[#loc179, #loc173])
#loc325 = loc(fused[#loc184, #loc183])
#loc326 = loc(fused[#loc187, #loc186])
#loc327 = loc(fused[#loc188, #loc189])
#loc328 = loc(fused[#loc190, #loc191])
#loc329 = loc(fused[#loc190, #loc192])
#loc330 = loc(fused[#loc193, #loc194])
#loc331 = loc(fused[#loc197, #loc195])
#loc332 = loc(fused[#loc198, #loc199])
#loc333 = loc(fused[#loc201, #loc200])
#loc334 = loc(fused[#loc202, #loc203])
#loc335 = loc(fused[#loc205, #loc199])
#loc336 = loc(fused[#loc207, #loc206])
#loc337 = loc(fused[#loc209, #loc208])
#loc338 = loc(fused[#loc210, #loc211])
#loc339 = loc(fused[#loc213, #loc212])
#loc340 = loc(fused[#loc214, #loc215])
#loc341 = loc(fused[#loc217, #loc211])
#loc342 = loc(fused[#loc218, #loc219])
#loc343 = loc(fused[#loc220, #loc221])
#loc344 = loc(fused[#loc222, #loc223])
#loc345 = loc(fused[#loc224, #loc225])
#loc346 = loc(fused[#loc226, #loc227])
#loc347 = loc(fused[#loc229, #loc230, #loc231, #loc225])
#loc348 = loc(fused[#loc234, #loc232])
#loc349 = loc(fused[#loc235, #loc236])
#loc350 = loc(fused[#loc238, #loc237])
#loc351 = loc(fused[#loc239, #loc240])
#loc352 = loc(fused[#loc242, #loc236])
#loc353 = loc(fused[#loc247, #loc246])
#loc354 = loc(fused[#loc251, #loc250])
