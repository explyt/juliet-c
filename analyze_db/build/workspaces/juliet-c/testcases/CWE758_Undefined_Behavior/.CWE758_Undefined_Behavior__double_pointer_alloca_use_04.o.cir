!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc113)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_04_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc118)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc12)
          %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
          %5 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc119)
          %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc12)
          cir.store %7, %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc118)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc14)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc15)
          cir.store %9, %5 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc119)
          %10 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc16)
          %11 = cir.load %10 : !cir.ptr<!cir.double>, !cir.double loc(#loc17)
          cir.call @printDoubleLine(%11) : (!cir.double) -> () loc(#loc18)
        } loc(#loc117)
      } loc(#loc116)
    } loc(#loc115)
    cir.return loc(#loc4)
  } loc(#loc114)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_04_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc122)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc120)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc124)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc125)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc36)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc36)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc130)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc131)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc46)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc46)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc46)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc46)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc131)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc47)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc132)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc47)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc133)
          cir.store %11, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc134)
          cir.scope {
            %16 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc54)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc55)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!cir.double>, !cir.bool loc(#loc136)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc57)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc59)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc57)
            } loc(#loc137)
          } loc(#loc135)
          %12 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc60)
          %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc61)
          cir.store %12, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc138)
          %14 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc63)
          %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc64)
          cir.store %14, %15 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc139)
          cir.scope {
            %16 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
            %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc69)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc70)
            cir.store %18, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc141)
            %19 = cir.load deref %16 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc71)
            %20 = cir.load %19 : !cir.ptr<!cir.double>, !cir.double loc(#loc72)
            cir.call @printDoubleLine(%20) : (!cir.double) -> () loc(#loc73)
          } loc(#loc140)
        } loc(#loc129)
      } loc(#loc128)
    } loc(#loc127)
    cir.return loc(#loc33)
  } loc(#loc126)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc78)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc78)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc146)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc147)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc85)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc85)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc85)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc85)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc147)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc86)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc148)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc86)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc149)
          cir.store %11, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc150)
          cir.scope {
            %16 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc93)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc94)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!cir.double>, !cir.bool loc(#loc152)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc97)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc98)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc96)
            } loc(#loc153)
          } loc(#loc151)
          %12 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc99)
          %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc100)
          cir.store %12, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc154)
          %14 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc102)
          %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc103)
          cir.store %14, %15 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc155)
          cir.scope {
            %16 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
            %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc108)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc109)
            cir.store %18, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc157)
            %19 = cir.load deref %16 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc110)
            %20 = cir.load %19 : !cir.ptr<!cir.double>, !cir.double loc(#loc111)
            cir.call @printDoubleLine(%20) : (!cir.double) -> () loc(#loc112)
          } loc(#loc156)
        } loc(#loc145)
      } loc(#loc144)
    } loc(#loc143)
    cir.return loc(#loc75)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":26:1)
#loc4 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":36:1)
#loc5 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":28:5)
#loc6 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":35:5)
#loc7 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":28:8)
#loc8 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":29:5)
#loc9 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":30:9)
#loc10 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":34:9)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":31:13)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":31:46)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":32:13)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":32:30)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":32:29)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":33:30)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":33:29)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":33:13)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":89:1)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":93:1)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":91:5)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":91:11)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":92:5)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":92:11)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":48:19)
#loc28 = loc("/usr/include/stdlib.h":672:1)
#loc29 = loc("/usr/include/stdlib.h":672:45)
#loc30 = loc("/usr/include/stdlib.h":756:1)
#loc31 = loc("/usr/include/stdlib.h":756:70)
#loc32 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":43:1)
#loc33 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":66:1)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":45:5)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":65:5)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":45:8)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":46:5)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":49:5)
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":51:5)
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":48:9)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":52:9)
#loc42 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":64:9)
#loc43 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":53:13)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":53:22)
#loc45 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":54:13)
#loc46 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":54:46)
#loc47 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":56:30)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":56:37)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":56:50)
#loc50 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":56:51)
#loc51 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":56:13)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":57:13)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":57:41)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":57:17)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":57:25)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":57:31)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":57:32)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":57:38)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":57:37)
#loc60 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":58:21)
#loc61 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":58:14)
#loc62 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":58:13)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":59:24)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":59:14)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":59:13)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":60:13)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":63:13)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":61:17)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":61:34)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":61:33)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":62:34)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":62:33)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":62:17)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":69:1)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":87:1)
#loc76 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":71:5)
#loc77 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":86:5)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":71:8)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":72:5)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":73:9)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":85:9)
#loc82 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":74:13)
#loc83 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":74:22)
#loc84 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":75:13)
#loc85 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":75:46)
#loc86 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":77:30)
#loc87 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":77:37)
#loc88 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":77:50)
#loc89 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":77:51)
#loc90 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":77:13)
#loc91 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":78:13)
#loc92 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":78:41)
#loc93 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":78:17)
#loc94 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":78:25)
#loc95 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":78:31)
#loc96 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":78:32)
#loc97 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":78:38)
#loc98 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":78:37)
#loc99 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":79:21)
#loc100 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":79:14)
#loc101 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":79:13)
#loc102 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":80:24)
#loc103 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":80:14)
#loc104 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":80:13)
#loc105 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":81:13)
#loc106 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":84:13)
#loc107 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":82:17)
#loc108 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":82:34)
#loc109 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":82:33)
#loc110 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":83:34)
#loc111 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":83:33)
#loc112 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_04.c":83:17)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc8, #loc6])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc19, #loc20])
#loc121 = loc(fused[#loc21, #loc22])
#loc122 = loc(fused[#loc23, #loc24])
#loc123 = loc(fused[#loc25, #loc26])
#loc124 = loc(fused[#loc28, #loc29])
#loc125 = loc(fused[#loc30, #loc31])
#loc126 = loc(fused[#loc32, #loc33])
#loc127 = loc(fused[#loc34, #loc35])
#loc128 = loc(fused[#loc37, #loc38, #loc39, #loc35])
#loc129 = loc(fused[#loc41, #loc42])
#loc130 = loc(fused[#loc43, #loc44])
#loc131 = loc(fused[#loc45, #loc46])
#loc132 = loc(fused[#loc48, #loc49])
#loc133 = loc(fused[#loc47, #loc50])
#loc134 = loc(fused[#loc51, #loc50])
#loc135 = loc(fused[#loc52, #loc53])
#loc136 = loc(fused[#loc54, #loc55])
#loc137 = loc(fused[#loc56, #loc53])
#loc138 = loc(fused[#loc62, #loc60])
#loc139 = loc(fused[#loc65, #loc63])
#loc140 = loc(fused[#loc66, #loc67])
#loc141 = loc(fused[#loc68, #loc69])
#loc142 = loc(fused[#loc74, #loc75])
#loc143 = loc(fused[#loc76, #loc77])
#loc144 = loc(fused[#loc79, #loc77])
#loc145 = loc(fused[#loc80, #loc81])
#loc146 = loc(fused[#loc82, #loc83])
#loc147 = loc(fused[#loc84, #loc85])
#loc148 = loc(fused[#loc87, #loc88])
#loc149 = loc(fused[#loc86, #loc89])
#loc150 = loc(fused[#loc90, #loc89])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc95, #loc92])
#loc154 = loc(fused[#loc101, #loc99])
#loc155 = loc(fused[#loc104, #loc102])
#loc156 = loc(fused[#loc105, #loc106])
#loc157 = loc(fused[#loc107, #loc108])
