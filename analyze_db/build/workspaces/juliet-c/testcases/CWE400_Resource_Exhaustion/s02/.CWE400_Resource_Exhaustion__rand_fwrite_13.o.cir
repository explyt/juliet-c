!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc397)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc398)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc5)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc399)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc400)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc401)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc402)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc404)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc26)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc407)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc28)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc28)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc28)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc28)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc28)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc28)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc28)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc28)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc28)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc28)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc28)
          cir.yield %24 : !u32i loc(#loc28)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc28)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc28)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc28)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc28)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc28)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc28)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc28)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc28)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc28)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc28)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc28)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc28)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc28)
          cir.yield %28 : !u32i loc(#loc28)
        }) : (!cir.bool) -> !u32i loc(#loc28)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc28)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc409)
      } loc(#loc408)
    } loc(#loc406)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc33)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc411)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc414)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc415)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc416)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc38)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc38)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc414)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc40)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc415)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc5)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc5)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc416)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc42)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc42)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc417)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc49)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc419)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc51)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc52)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
            } loc(#loc420)
          } loc(#loc418)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc55)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc55)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc422)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc57)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc58)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc423)
              cir.condition(%25) loc(#loc59)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc426)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc65)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc427)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc428)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc65)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc429)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc73)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc74)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc73)
                  } loc(#loc430)
                } loc(#loc425)
              } loc(#loc424)
              cir.yield loc(#loc54)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc75)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc76)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc431)
              cir.yield loc(#loc421)
            } loc(#loc421)
          } loc(#loc421)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc79)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc82)
            } loc(#loc433)
          } loc(#loc432)
        } loc(#loc413)
      } loc(#loc412)
    } loc(#loc410)
    cir.return loc(#loc17)
  } loc(#loc403)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc435)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc85)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc436)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc437)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc89)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc438)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc91)
    cir.return loc(#loc84)
  } loc(#loc434)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc439)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc441)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc102)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc442)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc107)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc444)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc109)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc109)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc109)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc109)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc109)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc109)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc109)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc109)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc109)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc109)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc109)
          cir.yield %24 : !u32i loc(#loc109)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc109)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc109)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc109)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc109)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc109)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc109)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc109)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc109)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc109)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc109)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc109)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc109)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc109)
          cir.yield %28 : !u32i loc(#loc109)
        }) : (!cir.bool) -> !u32i loc(#loc109)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc109)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc446)
      } loc(#loc445)
    } loc(#loc443)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc114)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc448)
      cir.if %6 {
        %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc118)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc451)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc452)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc453)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc122)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc122)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc451)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc124)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc452)
          %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc96)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc96)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc453)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc129)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc455)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc132)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc456)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc130)
                cir.yield %23 : !cir.bool loc(#loc130)
              }, false {
                %23 = cir.const #false loc(#loc130)
                cir.yield %23 : !cir.bool loc(#loc130)
              }) : (!cir.bool) -> !cir.bool loc(#loc130)
              cir.yield %22 : !cir.bool loc(#loc130)
            }, false {
              %19 = cir.const #false loc(#loc130)
              cir.yield %19 : !cir.bool loc(#loc130)
            }) : (!cir.bool) -> !cir.bool loc(#loc130)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc134)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc136)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc136)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc134)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc458)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc142)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc460)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc144)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc145)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
                } loc(#loc461)
              } loc(#loc459)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc148)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc148)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc463)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc150)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc151)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc464)
                  cir.condition(%29) loc(#loc152)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc467)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc158)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc159)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc159)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc159)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc468)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc469)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc164)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc158)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc470)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc166)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc167)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc166)
                      } loc(#loc471)
                    } loc(#loc466)
                  } loc(#loc465)
                  cir.yield loc(#loc147)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc168)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc169)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc472)
                  cir.yield loc(#loc462)
                } loc(#loc462)
              } loc(#loc462)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc172)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc172)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc174)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc175)
                } loc(#loc474)
              } loc(#loc473)
            } loc(#loc457)
          } loc(#loc454)
        } loc(#loc450)
      } loc(#loc449)
    } loc(#loc447)
    cir.return loc(#loc98)
  } loc(#loc440)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc476)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc181)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc186)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc479)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc188)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc188)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc188)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc188)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc188)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc188)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc188)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc188)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc188)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc188)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc188)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc188)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc188)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc188)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc188)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc188)
          cir.yield %24 : !u32i loc(#loc188)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc188)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc188)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc188)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc188)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc188)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc188)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc188)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc188)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc188)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc188)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc188)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc188)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc188)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc188)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc188)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc188)
          cir.yield %28 : !u32i loc(#loc188)
        }) : (!cir.bool) -> !u32i loc(#loc188)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc188)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc481)
      } loc(#loc480)
    } loc(#loc478)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc192)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc193)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc483)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc486)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc487)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc488)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc198)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc198)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc486)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc200)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc487)
          %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc202)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc202)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc488)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc205)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc206)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc490)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc209)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc491)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc207)
                cir.yield %23 : !cir.bool loc(#loc207)
              }, false {
                %23 = cir.const #false loc(#loc207)
                cir.yield %23 : !cir.bool loc(#loc207)
              }) : (!cir.bool) -> !cir.bool loc(#loc207)
              cir.yield %22 : !cir.bool loc(#loc207)
            }, false {
              %19 = cir.const #false loc(#loc207)
              cir.yield %19 : !cir.bool loc(#loc207)
            }) : (!cir.bool) -> !cir.bool loc(#loc207)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc211)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc213)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc213)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc211)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc493)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc218)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc219)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc219)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc495)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc221)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc222)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc221)
                } loc(#loc496)
              } loc(#loc494)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc225)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc225)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc498)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc227)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc228)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc499)
                  cir.condition(%29) loc(#loc229)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc502)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc235)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc236)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc236)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc236)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc503)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc504)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc241)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc235)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc505)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc243)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc244)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc243)
                      } loc(#loc506)
                    } loc(#loc501)
                  } loc(#loc500)
                  cir.yield loc(#loc224)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc245)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc246)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc507)
                  cir.yield loc(#loc497)
                } loc(#loc497)
              } loc(#loc497)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc249)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc249)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc251)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc252)
                } loc(#loc509)
              } loc(#loc508)
            } loc(#loc492)
          } loc(#loc489)
        } loc(#loc485)
      } loc(#loc484)
    } loc(#loc482)
    cir.return loc(#loc177)
  } loc(#loc475)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc511)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc257)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc258)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc512)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc262)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc263)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc514)
      cir.if %6 {
        %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc267)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc267)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc268)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc269)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc516)
      } loc(#loc515)
    } loc(#loc513)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc273)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc274)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc518)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc521)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc522)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc523)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc279)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc279)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc521)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc281)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc522)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc283)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc283)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc523)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc284)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc285)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc286)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc286)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc284)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc524)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc291)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc292)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc292)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc526)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc294)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc295)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc294)
            } loc(#loc527)
          } loc(#loc525)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc298)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc298)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc529)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc300)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc301)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc301)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc530)
              cir.condition(%25) loc(#loc302)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc533)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc308)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc309)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc309)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc309)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc534)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc535)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc314)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc308)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc536)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc317)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc318)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc317)
                  } loc(#loc537)
                } loc(#loc532)
              } loc(#loc531)
              cir.yield loc(#loc297)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc319)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc320)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc538)
              cir.yield loc(#loc528)
            } loc(#loc528)
          } loc(#loc528)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc323)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc323)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc325)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc326)
            } loc(#loc540)
          } loc(#loc539)
        } loc(#loc520)
      } loc(#loc519)
    } loc(#loc517)
    cir.return loc(#loc254)
  } loc(#loc510)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc542)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc331)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc332)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc543)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc336)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc337)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc545)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc339)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc547)
      } loc(#loc546)
    } loc(#loc544)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc397)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc343)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc344)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc549)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc552)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc553)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc554)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc349)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc349)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc552)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc351)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc553)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc353)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc353)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc554)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc354)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc355)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc356)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc356)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc354)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc555)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc361)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc362)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc362)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc557)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc364)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc365)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc364)
            } loc(#loc558)
          } loc(#loc556)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc368)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc368)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc560)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc370)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc371)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc371)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc561)
              cir.condition(%25) loc(#loc372)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc564)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc378)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc379)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc379)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc379)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc565)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc566)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc384)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc378)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc567)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc387)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc388)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc387)
                  } loc(#loc568)
                } loc(#loc563)
              } loc(#loc562)
              cir.yield loc(#loc367)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc389)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc390)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc569)
              cir.yield loc(#loc559)
            } loc(#loc559)
          } loc(#loc559)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc393)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc393)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc395)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc396)
            } loc(#loc571)
          } loc(#loc570)
        } loc(#loc551)
      } loc(#loc550)
    } loc(#loc548)
    cir.return loc(#loc328)
  } loc(#loc541)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":39:36)
#loc6 = loc("/usr/include/stdio.h":264:1)
#loc7 = loc("/usr/include/stdio.h":266:3)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":40:37)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/stdio.h":745:1)
#loc12 = loc("/usr/include/stdio.h":746:43)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:48)
#loc14 = loc("/usr/include/stdio.h":184:1)
#loc15 = loc("/usr/include/stdio.h":184:36)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":24:1)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":60:1)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":26:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":26:9)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":28:14)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":28:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":28:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":29:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":33:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":29:8)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":29:27)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":30:5)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":32:17)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":32:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":34:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":59:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":34:8)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":34:27)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":35:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":36:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":58:9)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":37:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":37:24)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":38:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":38:27)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":39:13)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":40:21)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":40:27)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":40:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":40:41)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":41:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":44:13)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":41:17)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":41:26)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":42:13)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":43:17)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":43:22)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":47:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":53:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":47:22)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":47:18)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":47:25)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":47:37)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":47:27)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":48:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:17)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":52:17)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:21)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:36)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:41)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:58)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:69)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:72)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:87)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:90)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":49:95)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":50:17)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":51:21)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":51:26)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":47:45)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":47:44)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":54:13)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":57:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":54:17)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":55:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":56:24)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":56:17)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":230:1)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":236:1)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":232:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":232:14)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":233:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":233:14)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":234:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":234:14)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":235:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":235:14)
#loc93 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc94 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":80:19)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":87:36)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":67:1)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":107:1)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":69:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":69:9)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":71:14)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":71:13)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":71:5)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":72:5)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":76:5)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":72:8)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":72:27)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":73:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":75:17)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":75:9)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":77:5)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":106:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":77:8)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":77:27)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":78:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":81:5)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":83:5)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":80:9)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":84:9)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":105:9)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":85:13)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":85:24)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":86:13)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":86:27)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":87:13)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":89:13)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":104:13)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":89:17)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":89:25)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":89:27)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":89:30)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":89:39)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":90:13)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":91:25)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":91:31)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":91:41)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":91:17)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":91:45)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":92:17)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":95:17)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":92:21)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":92:30)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":93:17)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":94:21)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":94:26)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":96:17)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":99:17)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":96:26)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":96:22)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":96:29)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":96:41)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":96:31)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":97:17)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:21)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:108)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:25)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:40)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:45)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:52)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:62)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:73)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:76)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:91)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:94)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:99)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:102)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":98:107)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":96:49)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":96:48)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":100:17)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":103:17)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":100:21)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":101:17)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":102:28)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":102:21)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":110:1)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":145:1)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":112:5)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":112:9)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":114:14)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":114:13)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":114:5)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":115:5)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":119:5)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":115:8)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":115:27)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":116:5)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":118:17)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":118:9)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":120:5)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":144:5)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":120:8)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":120:27)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":121:5)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":122:9)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":143:9)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":123:13)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":123:24)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":124:13)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":124:27)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":125:13)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":125:36)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":127:13)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":142:13)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":127:17)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":127:25)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":127:27)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":127:30)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":127:39)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":128:13)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":129:25)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":129:31)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":129:41)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":129:17)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":129:45)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":130:17)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":133:17)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":130:21)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":130:30)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":131:17)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":132:21)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":132:26)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":134:17)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":137:17)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":134:26)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":134:22)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":134:29)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":134:41)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":134:31)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":135:17)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:21)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:108)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:25)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:40)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:45)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:52)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:62)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:73)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:76)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:91)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:94)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:99)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:102)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":136:107)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":134:49)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":134:48)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":138:17)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":141:17)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":138:21)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":139:17)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":140:28)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":140:21)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":148:1)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":189:1)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":150:5)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":150:9)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":152:14)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":152:13)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":152:5)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":153:5)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":162:5)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":153:8)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":153:27)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":154:5)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":157:5)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":159:5)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":156:19)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":156:9)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":161:17)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":161:9)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":163:5)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":188:5)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":163:8)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":163:27)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":164:5)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":165:9)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":187:9)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":166:13)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":166:24)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":167:13)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":167:27)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":168:13)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":168:36)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":169:21)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":169:27)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":169:37)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":169:13)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":169:41)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":170:13)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":173:13)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":170:17)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":170:26)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":171:13)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":172:17)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":172:22)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":176:13)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":182:13)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":176:22)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":176:18)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":176:25)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":176:37)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":176:27)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":177:13)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:17)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":181:17)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:21)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:36)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:41)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:48)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:58)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:69)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:72)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:87)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:90)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":178:95)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":179:17)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":180:21)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":180:26)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":176:45)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":176:44)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":183:13)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":186:13)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":183:17)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":184:13)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":185:24)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":185:17)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":192:1)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":228:1)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":194:5)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":194:9)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":196:14)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":196:13)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":196:5)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":197:5)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":201:5)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":197:8)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":197:27)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":198:5)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":200:17)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":200:9)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":202:5)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":227:5)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":202:8)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":202:27)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":203:5)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":204:9)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":226:9)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":205:13)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":205:24)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":206:13)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":206:27)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":207:13)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":207:36)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":208:21)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":208:27)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":208:37)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":208:13)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":208:41)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":209:13)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":212:13)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":209:17)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":209:26)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":210:13)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":211:17)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":211:22)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":215:13)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":221:13)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":215:22)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":215:18)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":215:25)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":215:37)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":215:27)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":216:13)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:17)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":220:17)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:21)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:36)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:41)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:48)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:58)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:69)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:72)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:87)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:90)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":217:95)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":218:17)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":219:21)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":219:26)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":215:45)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":215:44)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":222:13)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":225:13)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":222:17)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":223:13)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":224:24)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_13.c":224:17)
#loc397 = loc(fused[#loc1, #loc2])
#loc398 = loc(fused[#loc3, #loc4])
#loc399 = loc(fused[#loc6, #loc7])
#loc400 = loc(fused[#loc9, #loc10])
#loc401 = loc(fused[#loc11, #loc12])
#loc402 = loc(fused[#loc14, #loc15])
#loc403 = loc(fused[#loc16, #loc17])
#loc404 = loc(fused[#loc18, #loc19])
#loc405 = loc(fused[#loc22, #loc20])
#loc406 = loc(fused[#loc23, #loc24])
#loc407 = loc(fused[#loc25, #loc26])
#loc408 = loc(fused[#loc27, #loc24])
#loc409 = loc(fused[#loc29, #loc28])
#loc410 = loc(fused[#loc30, #loc31])
#loc411 = loc(fused[#loc32, #loc33])
#loc412 = loc(fused[#loc34, #loc31])
#loc413 = loc(fused[#loc35, #loc36])
#loc414 = loc(fused[#loc37, #loc38])
#loc415 = loc(fused[#loc39, #loc40])
#loc416 = loc(fused[#loc41, #loc5])
#loc417 = loc(fused[#loc44, #loc45])
#loc418 = loc(fused[#loc46, #loc47])
#loc419 = loc(fused[#loc48, #loc49])
#loc420 = loc(fused[#loc50, #loc47])
#loc421 = loc(fused[#loc53, #loc54])
#loc422 = loc(fused[#loc56, #loc55])
#loc423 = loc(fused[#loc57, #loc58])
#loc424 = loc(fused[#loc60, #loc54])
#loc425 = loc(fused[#loc61, #loc62])
#loc426 = loc(fused[#loc63, #loc64])
#loc427 = loc(fused[#loc66, #loc67])
#loc428 = loc(fused[#loc68, #loc69])
#loc429 = loc(fused[#loc63, #loc71])
#loc430 = loc(fused[#loc72, #loc62])
#loc431 = loc(fused[#loc76, #loc75])
#loc432 = loc(fused[#loc77, #loc78])
#loc433 = loc(fused[#loc80, #loc78])
#loc434 = loc(fused[#loc83, #loc84])
#loc435 = loc(fused[#loc85, #loc86])
#loc436 = loc(fused[#loc87, #loc88])
#loc437 = loc(fused[#loc89, #loc90])
#loc438 = loc(fused[#loc91, #loc92])
#loc439 = loc(fused[#loc93, #loc94])
#loc440 = loc(fused[#loc97, #loc98])
#loc441 = loc(fused[#loc99, #loc100])
#loc442 = loc(fused[#loc103, #loc101])
#loc443 = loc(fused[#loc104, #loc105])
#loc444 = loc(fused[#loc106, #loc107])
#loc445 = loc(fused[#loc108, #loc105])
#loc446 = loc(fused[#loc110, #loc109])
#loc447 = loc(fused[#loc111, #loc112])
#loc448 = loc(fused[#loc113, #loc114])
#loc449 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc450 = loc(fused[#loc119, #loc120])
#loc451 = loc(fused[#loc121, #loc122])
#loc452 = loc(fused[#loc123, #loc124])
#loc453 = loc(fused[#loc125, #loc96])
#loc454 = loc(fused[#loc126, #loc127])
#loc455 = loc(fused[#loc128, #loc129])
#loc456 = loc(fused[#loc131, #loc132])
#loc457 = loc(fused[#loc133, #loc127])
#loc458 = loc(fused[#loc137, #loc138])
#loc459 = loc(fused[#loc139, #loc140])
#loc460 = loc(fused[#loc141, #loc142])
#loc461 = loc(fused[#loc143, #loc140])
#loc462 = loc(fused[#loc146, #loc147])
#loc463 = loc(fused[#loc149, #loc148])
#loc464 = loc(fused[#loc150, #loc151])
#loc465 = loc(fused[#loc153, #loc147])
#loc466 = loc(fused[#loc154, #loc155])
#loc467 = loc(fused[#loc156, #loc157])
#loc468 = loc(fused[#loc160, #loc161])
#loc469 = loc(fused[#loc162, #loc163])
#loc470 = loc(fused[#loc156, #loc165])
#loc471 = loc(fused[#loc166, #loc155])
#loc472 = loc(fused[#loc169, #loc168])
#loc473 = loc(fused[#loc170, #loc171])
#loc474 = loc(fused[#loc173, #loc171])
#loc475 = loc(fused[#loc176, #loc177])
#loc476 = loc(fused[#loc178, #loc179])
#loc477 = loc(fused[#loc182, #loc180])
#loc478 = loc(fused[#loc183, #loc184])
#loc479 = loc(fused[#loc185, #loc186])
#loc480 = loc(fused[#loc187, #loc184])
#loc481 = loc(fused[#loc189, #loc188])
#loc482 = loc(fused[#loc190, #loc191])
#loc483 = loc(fused[#loc192, #loc193])
#loc484 = loc(fused[#loc194, #loc191])
#loc485 = loc(fused[#loc195, #loc196])
#loc486 = loc(fused[#loc197, #loc198])
#loc487 = loc(fused[#loc199, #loc200])
#loc488 = loc(fused[#loc201, #loc202])
#loc489 = loc(fused[#loc203, #loc204])
#loc490 = loc(fused[#loc205, #loc206])
#loc491 = loc(fused[#loc208, #loc209])
#loc492 = loc(fused[#loc210, #loc204])
#loc493 = loc(fused[#loc214, #loc215])
#loc494 = loc(fused[#loc216, #loc217])
#loc495 = loc(fused[#loc218, #loc219])
#loc496 = loc(fused[#loc220, #loc217])
#loc497 = loc(fused[#loc223, #loc224])
#loc498 = loc(fused[#loc226, #loc225])
#loc499 = loc(fused[#loc227, #loc228])
#loc500 = loc(fused[#loc230, #loc224])
#loc501 = loc(fused[#loc231, #loc232])
#loc502 = loc(fused[#loc233, #loc234])
#loc503 = loc(fused[#loc237, #loc238])
#loc504 = loc(fused[#loc239, #loc240])
#loc505 = loc(fused[#loc233, #loc242])
#loc506 = loc(fused[#loc243, #loc232])
#loc507 = loc(fused[#loc246, #loc245])
#loc508 = loc(fused[#loc247, #loc248])
#loc509 = loc(fused[#loc250, #loc248])
#loc510 = loc(fused[#loc253, #loc254])
#loc511 = loc(fused[#loc255, #loc256])
#loc512 = loc(fused[#loc259, #loc257])
#loc513 = loc(fused[#loc260, #loc261])
#loc514 = loc(fused[#loc262, #loc263])
#loc515 = loc(fused[#loc264, #loc265, #loc266, #loc261])
#loc516 = loc(fused[#loc270, #loc269])
#loc517 = loc(fused[#loc271, #loc272])
#loc518 = loc(fused[#loc273, #loc274])
#loc519 = loc(fused[#loc275, #loc272])
#loc520 = loc(fused[#loc276, #loc277])
#loc521 = loc(fused[#loc278, #loc279])
#loc522 = loc(fused[#loc280, #loc281])
#loc523 = loc(fused[#loc282, #loc283])
#loc524 = loc(fused[#loc287, #loc288])
#loc525 = loc(fused[#loc289, #loc290])
#loc526 = loc(fused[#loc291, #loc292])
#loc527 = loc(fused[#loc293, #loc290])
#loc528 = loc(fused[#loc296, #loc297])
#loc529 = loc(fused[#loc299, #loc298])
#loc530 = loc(fused[#loc300, #loc301])
#loc531 = loc(fused[#loc303, #loc297])
#loc532 = loc(fused[#loc304, #loc305])
#loc533 = loc(fused[#loc306, #loc307])
#loc534 = loc(fused[#loc310, #loc311])
#loc535 = loc(fused[#loc312, #loc313])
#loc536 = loc(fused[#loc306, #loc315])
#loc537 = loc(fused[#loc316, #loc305])
#loc538 = loc(fused[#loc320, #loc319])
#loc539 = loc(fused[#loc321, #loc322])
#loc540 = loc(fused[#loc324, #loc322])
#loc541 = loc(fused[#loc327, #loc328])
#loc542 = loc(fused[#loc329, #loc330])
#loc543 = loc(fused[#loc333, #loc331])
#loc544 = loc(fused[#loc334, #loc335])
#loc545 = loc(fused[#loc336, #loc337])
#loc546 = loc(fused[#loc338, #loc335])
#loc547 = loc(fused[#loc340, #loc339])
#loc548 = loc(fused[#loc341, #loc342])
#loc549 = loc(fused[#loc343, #loc344])
#loc550 = loc(fused[#loc345, #loc342])
#loc551 = loc(fused[#loc346, #loc347])
#loc552 = loc(fused[#loc348, #loc349])
#loc553 = loc(fused[#loc350, #loc351])
#loc554 = loc(fused[#loc352, #loc353])
#loc555 = loc(fused[#loc357, #loc358])
#loc556 = loc(fused[#loc359, #loc360])
#loc557 = loc(fused[#loc361, #loc362])
#loc558 = loc(fused[#loc363, #loc360])
#loc559 = loc(fused[#loc366, #loc367])
#loc560 = loc(fused[#loc369, #loc368])
#loc561 = loc(fused[#loc370, #loc371])
#loc562 = loc(fused[#loc373, #loc367])
#loc563 = loc(fused[#loc374, #loc375])
#loc564 = loc(fused[#loc376, #loc377])
#loc565 = loc(fused[#loc380, #loc381])
#loc566 = loc(fused[#loc382, #loc383])
#loc567 = loc(fused[#loc376, #loc385])
#loc568 = loc(fused[#loc386, #loc375])
#loc569 = loc(fused[#loc390, #loc389])
#loc570 = loc(fused[#loc391, #loc392])
#loc571 = loc(fused[#loc394, #loc392])
