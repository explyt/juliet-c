!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc72)
  cir.func private @printIntLine(!s32i) loc(#loc73)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc74)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_malloc_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc76)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc77)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc13)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc78)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc79)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc80)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc81)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc83)
      %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc84)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
      cir.store %11, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc83)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
      cir.store %12, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc84)
      %13 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %14 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc27)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc28)
      cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc85)
      %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc30)
      %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc31)
      %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc32)
      %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc33)
      %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc34)
      cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    } loc(#loc82)
    cir.return loc(#loc8)
  } loc(#loc75)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_malloc_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc87)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc86)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc89)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc90)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc45)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc46)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc91)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc92)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc45)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc93)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc94)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc96)
      %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc97)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
      cir.store %11, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc96)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
      cir.store %12, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc97)
      cir.scope {
        %13 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc60)
        %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc99)
        cir.if %16 {
          %17 = cir.const #cir.int<5> : !s32i loc(#loc62)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc65)
          cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc101)
          %21 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc67)
          %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc68)
          %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc66)
          cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc69)
          %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc70)
          %26 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc71)
          cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc70)
        } loc(#loc100)
      } loc(#loc98)
    } loc(#loc95)
    cir.return loc(#loc40)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":23:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":37:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":25:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":25:11)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":26:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":26:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":28:19)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":28:26)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":28:28)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":28:38)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":28:39)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":28:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":29:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":36:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":30:9)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":30:26)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":31:9)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":31:22)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":33:19)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":33:9)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":33:14)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":33:15)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":34:22)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":34:27)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":34:28)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":34:9)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":35:9)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":35:14)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":63:1)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":66:1)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":65:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":65:13)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":44:1)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":61:1)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":46:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":46:11)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":47:12)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":47:5)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":49:19)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":49:26)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":49:28)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":49:38)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":49:39)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":49:5)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":50:5)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":60:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":51:9)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":51:26)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":52:9)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":52:22)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":54:9)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":59:9)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":54:13)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":54:21)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":55:9)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":56:23)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":56:13)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":56:18)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":56:19)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":57:26)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":57:31)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":57:32)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":57:13)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":58:13)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int_malloc_31.c":58:18)
#loc72 = loc(fused[#loc1, #loc2])
#loc73 = loc(fused[#loc3, #loc4])
#loc74 = loc(fused[#loc5, #loc6])
#loc75 = loc(fused[#loc7, #loc8])
#loc76 = loc(fused[#loc9, #loc10])
#loc77 = loc(fused[#loc12, #loc11])
#loc78 = loc(fused[#loc15, #loc16])
#loc79 = loc(fused[#loc14, #loc16])
#loc80 = loc(fused[#loc13, #loc17])
#loc81 = loc(fused[#loc18, #loc17])
#loc82 = loc(fused[#loc19, #loc20])
#loc83 = loc(fused[#loc21, #loc22])
#loc84 = loc(fused[#loc23, #loc24])
#loc85 = loc(fused[#loc26, #loc25])
#loc86 = loc(fused[#loc35, #loc36])
#loc87 = loc(fused[#loc37, #loc38])
#loc88 = loc(fused[#loc39, #loc40])
#loc89 = loc(fused[#loc41, #loc42])
#loc90 = loc(fused[#loc44, #loc43])
#loc91 = loc(fused[#loc47, #loc48])
#loc92 = loc(fused[#loc46, #loc48])
#loc93 = loc(fused[#loc45, #loc49])
#loc94 = loc(fused[#loc50, #loc49])
#loc95 = loc(fused[#loc51, #loc52])
#loc96 = loc(fused[#loc53, #loc54])
#loc97 = loc(fused[#loc55, #loc56])
#loc98 = loc(fused[#loc57, #loc58])
#loc99 = loc(fused[#loc59, #loc60])
#loc100 = loc(fused[#loc61, #loc58])
#loc101 = loc(fused[#loc63, #loc62])
