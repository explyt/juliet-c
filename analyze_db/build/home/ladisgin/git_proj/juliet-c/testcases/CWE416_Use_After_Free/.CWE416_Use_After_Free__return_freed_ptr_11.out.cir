!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":18:25)
#loc14 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":18:32)
#loc107 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":143:10)
#loc108 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":143:14)
#loc109 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":143:20)
#loc110 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":143:32)
#loc130 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":43:26)
#loc131 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":43:33)
#loc228 = loc(fused[#loc13, #loc14])
#loc266 = loc(fused[#loc107, #loc108])
#loc267 = loc(fused[#loc109, #loc110])
#loc273 = loc(fused[#loc130, #loc131])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__return_freed_ptr_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc222)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc223)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc224)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc225)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc226)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!s8i> loc(fused[#loc13, #loc14])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["aString", init] {alignment = 8 : i64} loc(#loc228)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc12)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc229)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["j"] {alignment = 8 : i64} loc(#loc230)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc231)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc21)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc16)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc20)
    cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    cir.br ^bb1 loc(#loc232)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc233)
    cir.brcond %11 ^bb2, ^bb15 loc(#loc234)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc29)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc29)
    cir.store %14, %2 : !u64i, !cir.ptr<!u64i> loc(#loc235)
    %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
    %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc35)
    %19 = cir.binop(add, %16, %18) : !u64i loc(#loc236)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc237)
    cir.store %21, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.br ^bb3 loc(#loc239)
  ^bb3:  // pred: ^bb2
    %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc240)
    cir.brcond %25 ^bb4, ^bb5 loc(#loc241)
  ^bb4:  // pred: ^bb3
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc45)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc242)
  ^bb7:  // pred: ^bb6
    %29 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc48)
    cir.store %30, %3 : !u64i, !cir.ptr<!u64i> loc(#loc243)
    cir.br ^bb8 loc(#loc242)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %31 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %33 = cir.cmp(lt, %31, %32) : !u64i, !cir.bool loc(#loc244)
    cir.brcond %33 ^bb9, ^bb13 loc(#loc52)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc245)
  ^bb10:  // pred: ^bb9
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %37 = cir.binop(sub, %35, %36) : !u64i loc(#loc246)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc57)
    %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc247)
    %41 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc58)
    %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc54)
    %43 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %44 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc61)
    cir.store %42, %45 : !s8i, !cir.ptr<!s8i> loc(#loc248)
    cir.br ^bb11 loc(#loc47)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc47)
  ^bb12:  // pred: ^bb11
    %46 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %47 = cir.unary(inc, %46) : !u64i, !u64i loc(#loc63)
    cir.store %47, %3 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.br ^bb8 loc(#loc242)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc47)
  ^bb14:  // pred: ^bb13
    %48 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc64)
    %50 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc250)
    %53 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    cir.call @free(%54) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    %55 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.store %55, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
    %56 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc251)
    cir.return %56 : !cir.ptr<!s8i> loc(#loc251)
  ^bb15:  // pred: ^bb1
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
    cir.store %57, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc252)
    %58 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
    cir.return %58 : !cir.ptr<!s8i> loc(#loc252)
  ^bb16:  // no predecessors
    cir.br ^bb17 loc(#loc23)
  ^bb17:  // pred: ^bb16
    %59 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.return %59 : !cir.ptr<!s8i> loc(#loc12)
  } loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSink\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc74)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.func no_proto @CWE416_Use_After_Free__return_freed_ptr_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc255)
    cir.br ^bb1 loc(#loc256)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc257)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc257)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc83)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc258)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc259)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc74)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc74)
    %7 = cir.call @helperBad(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc88)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc82)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc82)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc78)
  } loc(#loc254)
  cir.func no_proto @CWE416_Use_After_Free__return_freed_ptr_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc92)
  } loc(#loc260)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc263)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc104)
  cir.func @main(%arg0: !s32i loc(fused[#loc107, #loc108]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc109, #loc110])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc266)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc267)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc106)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc111)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc112)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc113)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc113)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc114)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc101)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %8 = cir.get_global @CWE416_Use_After_Free__return_freed_ptr_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call @CWE416_Use_After_Free__return_freed_ptr_11_good() : () -> () loc(#loc116)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc102)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc103)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %13 = cir.get_global @CWE416_Use_After_Free__return_freed_ptr_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call @CWE416_Use_After_Free__return_freed_ptr_11_bad() : () -> () loc(#loc120)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc104)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.return %17 : !s32i loc(#loc270)
  } loc(#loc265)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc271)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc127)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!s8i> loc(fused[#loc130, #loc131])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["aString", init] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc274)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["j"] {alignment = 8 : i64} loc(#loc275)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc276)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc133)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc274)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc137)
    cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
    cir.br ^bb1 loc(#loc277)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc278)
    cir.brcond %11 ^bb2, ^bb15 loc(#loc279)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc146)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc146)
    cir.store %14, %2 : !u64i, !cir.ptr<!u64i> loc(#loc280)
    %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc150)
    %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc152)
    %19 = cir.binop(add, %16, %18) : !u64i loc(#loc281)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc282)
    cir.store %21, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
    cir.br ^bb3 loc(#loc284)
  ^bb3:  // pred: ^bb2
    %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc158)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc285)
    cir.brcond %25 ^bb4, ^bb5 loc(#loc286)
  ^bb4:  // pred: ^bb3
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc160)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc162)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc160)
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc156)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc287)
  ^bb7:  // pred: ^bb6
    %29 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc165)
    cir.store %30, %3 : !u64i, !cir.ptr<!u64i> loc(#loc288)
    cir.br ^bb8 loc(#loc287)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %31 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc167)
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc168)
    %33 = cir.cmp(lt, %31, %32) : !u64i, !cir.bool loc(#loc289)
    cir.brcond %33 ^bb9, ^bb13 loc(#loc169)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc290)
  ^bb10:  // pred: ^bb9
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    %37 = cir.binop(sub, %35, %36) : !u64i loc(#loc291)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc174)
    %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc292)
    %41 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc175)
    %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc171)
    %43 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %44 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc178)
    cir.store %42, %45 : !s8i, !cir.ptr<!s8i> loc(#loc293)
    cir.br ^bb11 loc(#loc164)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc164)
  ^bb12:  // pred: ^bb11
    %46 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc179)
    %47 = cir.unary(inc, %46) : !u64i, !u64i loc(#loc180)
    cir.store %47, %3 : !u64i, !cir.ptr<!u64i> loc(#loc294)
    cir.br ^bb8 loc(#loc287)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc164)
  ^bb14:  // pred: ^bb13
    %48 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc181)
    %50 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc183)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc184)
    cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc295)
    %53 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
    cir.store %53, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc296)
    cir.return %54 : !cir.ptr<!s8i> loc(#loc296)
  ^bb15:  // pred: ^bb1
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc187)
    cir.store %55, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
    %56 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc297)
    cir.return %56 : !cir.ptr<!s8i> loc(#loc297)
  ^bb16:  // no predecessors
    cir.br ^bb17 loc(#loc140)
  ^bb17:  // pred: ^bb16
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.return %57 : !cir.ptr<!s8i> loc(#loc129)
  } loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"GoodSink\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc189)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc299)
    cir.br ^bb1 loc(#loc300)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc301)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc301)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc196)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc196)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc302)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc127)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    cir.br ^bb6 loc(#loc199)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc303)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc189)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc189)
    %9 = cir.call @helperGood(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc204)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.br ^bb5 loc(#loc203)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc195)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc195)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc191)
  } loc(#loc298)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["reversedString", init] {alignment = 8 : i64} loc(#loc305)
    cir.br ^bb1 loc(#loc306)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc307)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc307)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc213)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc213)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc308)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc309)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc218)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc218)
    %7 = cir.call @helperGood(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc219)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    cir.br ^bb4 loc(#loc217)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc212)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc208)
  } loc(#loc304)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__return_freed_ptr_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":18:1)
#loc12 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":41:1)
#loc15 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":20:5)
#loc16 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":20:16)
#loc17 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":21:5)
#loc18 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":21:12)
#loc19 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":22:5)
#loc20 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":22:29)
#loc21 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":19:1)
#loc22 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":23:5)
#loc23 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":40:5)
#loc24 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":23:9)
#loc25 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":23:20)
#loc26 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":24:5)
#loc27 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":36:5)
#loc28 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":38:5)
#loc29 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":25:13)
#loc30 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":25:20)
#loc31 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":25:9)
#loc32 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":25:27)
#loc33 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":26:35)
#loc34 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":26:42)
#loc35 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":26:44)
#loc36 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":26:45)
#loc37 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":26:9)
#loc38 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":27:9)
#loc39 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":27:47)
#loc40 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":27:13)
#loc41 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":27:31)
#loc42 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":27:37)
#loc43 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":27:38)
#loc44 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":27:44)
#loc45 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":27:43)
#loc46 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":28:9)
#loc47 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":31:9)
#loc48 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":28:18)
#loc49 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":28:14)
#loc50 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":28:21)
#loc51 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":28:25)
#loc52 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":28:23)
#loc53 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":29:9)
#loc54 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":30:33)
#loc55 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":30:41)
#loc56 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":30:43)
#loc57 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":30:45)
#loc58 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":30:46)
#loc59 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":30:13)
#loc60 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":30:28)
#loc61 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":30:29)
#loc62 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":28:29)
#loc63 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":28:28)
#loc64 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":32:29)
#loc65 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":32:9)
#loc66 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":32:24)
#loc67 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":32:25)
#loc68 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":34:14)
#loc69 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":34:9)
#loc70 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":35:16)
#loc71 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":35:9)
#loc72 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":39:16)
#loc73 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":39:9)
#loc74 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":75:47)
#loc75 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc76 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc77 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":69:1)
#loc78 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":83:1)
#loc79 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":75:13)
#loc80 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":75:56)
#loc81 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":71:5)
#loc82 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":82:5)
#loc83 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":71:8)
#loc84 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":71:26)
#loc85 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":72:5)
#loc86 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":73:9)
#loc87 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":81:9)
#loc88 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":75:37)
#loc89 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":76:23)
#loc90 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":76:13)
#loc91 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":128:1)
#loc92 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":132:1)
#loc93 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":130:5)
#loc94 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":130:11)
#loc95 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":131:5)
#loc96 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":131:11)
#loc97 = loc("/usr/include/stdlib.h":575:1)
#loc98 = loc("/usr/include/stdlib.h":575:41)
#loc99 = loc("/usr/include/time.h":76:1)
#loc100 = loc("/usr/include/time.h":76:38)
#loc101 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":148:15)
#loc102 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":150:15)
#loc103 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":153:15)
#loc104 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":155:15)
#loc105 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":143:1)
#loc106 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":158:1)
#loc111 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":144:1)
#loc112 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":146:27)
#loc113 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":146:22)
#loc114 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":146:5)
#loc115 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":148:5)
#loc116 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":149:5)
#loc117 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":149:53)
#loc118 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":150:5)
#loc119 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":153:5)
#loc120 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":154:5)
#loc121 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":154:52)
#loc122 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":155:5)
#loc123 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":157:12)
#loc124 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":157:5)
#loc125 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc126 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc127 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":95:19)
#loc128 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":43:1)
#loc129 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":65:1)
#loc132 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":45:5)
#loc133 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":45:16)
#loc134 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":46:5)
#loc135 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":46:12)
#loc136 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":47:5)
#loc137 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":47:29)
#loc138 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":44:1)
#loc139 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":48:5)
#loc140 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":64:5)
#loc141 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":48:9)
#loc142 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":48:20)
#loc143 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":49:5)
#loc144 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":60:5)
#loc145 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":62:5)
#loc146 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":50:13)
#loc147 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":50:20)
#loc148 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":50:9)
#loc149 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":50:27)
#loc150 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":51:35)
#loc151 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":51:42)
#loc152 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":51:44)
#loc153 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":51:45)
#loc154 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":51:9)
#loc155 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":52:9)
#loc156 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":52:47)
#loc157 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":52:13)
#loc158 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":52:31)
#loc159 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":52:37)
#loc160 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":52:38)
#loc161 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":52:44)
#loc162 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":52:43)
#loc163 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":53:9)
#loc164 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":56:9)
#loc165 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":53:18)
#loc166 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":53:14)
#loc167 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":53:21)
#loc168 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":53:25)
#loc169 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":53:23)
#loc170 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":54:9)
#loc171 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":55:33)
#loc172 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":55:41)
#loc173 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":55:43)
#loc174 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":55:45)
#loc175 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":55:46)
#loc176 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":55:13)
#loc177 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":55:28)
#loc178 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":55:29)
#loc179 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":53:29)
#loc180 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":53:28)
#loc181 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":57:29)
#loc182 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":57:9)
#loc183 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":57:24)
#loc184 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":57:25)
#loc185 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":59:16)
#loc186 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":59:9)
#loc187 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":63:16)
#loc188 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":63:9)
#loc189 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":101:48)
#loc190 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":90:1)
#loc191 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":109:1)
#loc192 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":101:13)
#loc193 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":101:58)
#loc194 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":92:5)
#loc195 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":108:5)
#loc196 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":92:8)
#loc197 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":92:27)
#loc198 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":93:5)
#loc199 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":96:5)
#loc200 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":98:5)
#loc201 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":95:9)
#loc202 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":99:9)
#loc203 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":107:9)
#loc204 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":101:37)
#loc205 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":102:23)
#loc206 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":102:13)
#loc207 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":112:1)
#loc208 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":126:1)
#loc209 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":118:13)
#loc210 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":118:58)
#loc211 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":114:5)
#loc212 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":125:5)
#loc213 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":114:8)
#loc214 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":114:26)
#loc215 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":115:5)
#loc216 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":116:9)
#loc217 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":124:9)
#loc218 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":118:48)
#loc219 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":118:37)
#loc220 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":119:23)
#loc221 = loc("CWE416_Use_After_Free__return_freed_ptr_11.c":119:13)
#loc222 = loc(fused[#loc1, #loc2])
#loc223 = loc(fused[#loc3, #loc4])
#loc224 = loc(fused[#loc5, #loc6])
#loc225 = loc(fused[#loc7, #loc8])
#loc226 = loc(fused[#loc9, #loc10])
#loc227 = loc(fused[#loc11, #loc12])
#loc229 = loc(fused[#loc15, #loc16])
#loc230 = loc(fused[#loc17, #loc18])
#loc231 = loc(fused[#loc19, #loc20])
#loc232 = loc(fused[#loc22, #loc23])
#loc233 = loc(fused[#loc24, #loc25])
#loc234 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc235 = loc(fused[#loc31, #loc32])
#loc236 = loc(fused[#loc34, #loc35])
#loc237 = loc(fused[#loc33, #loc36])
#loc238 = loc(fused[#loc37, #loc36])
#loc239 = loc(fused[#loc38, #loc39])
#loc240 = loc(fused[#loc40, #loc41])
#loc241 = loc(fused[#loc42, #loc39])
#loc242 = loc(fused[#loc46, #loc47])
#loc243 = loc(fused[#loc49, #loc48])
#loc244 = loc(fused[#loc50, #loc51])
#loc245 = loc(fused[#loc53, #loc47])
#loc246 = loc(fused[#loc55, #loc56])
#loc247 = loc(fused[#loc55, #loc57])
#loc248 = loc(fused[#loc59, #loc58])
#loc249 = loc(fused[#loc63, #loc62])
#loc250 = loc(fused[#loc65, #loc64])
#loc251 = loc(fused[#loc71, #loc70])
#loc252 = loc(fused[#loc73, #loc72])
#loc253 = loc(fused[#loc75, #loc76])
#loc254 = loc(fused[#loc77, #loc78])
#loc255 = loc(fused[#loc79, #loc80])
#loc256 = loc(fused[#loc81, #loc82])
#loc257 = loc(fused[#loc83, #loc84])
#loc258 = loc(fused[#loc85, #loc82])
#loc259 = loc(fused[#loc86, #loc87])
#loc260 = loc(fused[#loc91, #loc92])
#loc261 = loc(fused[#loc93, #loc94])
#loc262 = loc(fused[#loc95, #loc96])
#loc263 = loc(fused[#loc97, #loc98])
#loc264 = loc(fused[#loc99, #loc100])
#loc265 = loc(fused[#loc105, #loc106])
#loc268 = loc(fused[#loc116, #loc117])
#loc269 = loc(fused[#loc120, #loc121])
#loc270 = loc(fused[#loc124, #loc123])
#loc271 = loc(fused[#loc125, #loc126])
#loc272 = loc(fused[#loc128, #loc129])
#loc274 = loc(fused[#loc132, #loc133])
#loc275 = loc(fused[#loc134, #loc135])
#loc276 = loc(fused[#loc136, #loc137])
#loc277 = loc(fused[#loc139, #loc140])
#loc278 = loc(fused[#loc141, #loc142])
#loc279 = loc(fused[#loc143, #loc144, #loc145, #loc140])
#loc280 = loc(fused[#loc148, #loc149])
#loc281 = loc(fused[#loc151, #loc152])
#loc282 = loc(fused[#loc150, #loc153])
#loc283 = loc(fused[#loc154, #loc153])
#loc284 = loc(fused[#loc155, #loc156])
#loc285 = loc(fused[#loc157, #loc158])
#loc286 = loc(fused[#loc159, #loc156])
#loc287 = loc(fused[#loc163, #loc164])
#loc288 = loc(fused[#loc166, #loc165])
#loc289 = loc(fused[#loc167, #loc168])
#loc290 = loc(fused[#loc170, #loc164])
#loc291 = loc(fused[#loc172, #loc173])
#loc292 = loc(fused[#loc172, #loc174])
#loc293 = loc(fused[#loc176, #loc175])
#loc294 = loc(fused[#loc180, #loc179])
#loc295 = loc(fused[#loc182, #loc181])
#loc296 = loc(fused[#loc186, #loc185])
#loc297 = loc(fused[#loc188, #loc187])
#loc298 = loc(fused[#loc190, #loc191])
#loc299 = loc(fused[#loc192, #loc193])
#loc300 = loc(fused[#loc194, #loc195])
#loc301 = loc(fused[#loc196, #loc197])
#loc302 = loc(fused[#loc198, #loc199, #loc200, #loc195])
#loc303 = loc(fused[#loc202, #loc203])
#loc304 = loc(fused[#loc207, #loc208])
#loc305 = loc(fused[#loc209, #loc210])
#loc306 = loc(fused[#loc211, #loc212])
#loc307 = loc(fused[#loc213, #loc214])
#loc308 = loc(fused[#loc215, #loc212])
#loc309 = loc(fused[#loc216, #loc217])
