!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_timespec = !cir.record<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.record<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc253)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc254)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc256)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc257)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc258)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc259)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc261)
  cir.func no_proto @CWE367_TOC_TOU__stat_03_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc26)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc264)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc267)
          %4 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc268)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc269)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc267)
          cir.store %6, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc267)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc36)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc269)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc40)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc254)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc271)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc45)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc46)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc46)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc47)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc48)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc273)
            } loc(#loc272)
          } loc(#loc270)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc51)
            %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc51)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc53)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc275)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc55)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc55)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc56)
              %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc56)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc58)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc277)
              %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc59)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc278)
            } loc(#loc276)
          } loc(#loc274)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
            %13 = cir.call @stat(%12, %4) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc63)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc64)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc65)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc280)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc68)
              cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
            } loc(#loc281)
          } loc(#loc279)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc70)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc71)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc282)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc76)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc77)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc78)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc284)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc80)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc81)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
            } loc(#loc285)
          } loc(#loc283)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
            %16 = cir.const #cir.int<11> : !u64i loc(#loc287)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc87)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc89)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc89)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc288)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc91)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc92)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
            } loc(#loc289)
          } loc(#loc286)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc97)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc291)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc100)
            } loc(#loc292)
          } loc(#loc290)
        } loc(#loc266)
      } loc(#loc265)
    } loc(#loc263)
    cir.return loc(#loc22)
  } loc(#loc262)
  cir.func no_proto @CWE367_TOC_TOU__stat_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc294)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc103)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc295)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc105)
    cir.return loc(#loc102)
  } loc(#loc293)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc108)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc113)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc114)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc298)
      cir.if %2 {
        %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc118)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc301)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc302)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc301)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc301)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc124)
          %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc125)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc302)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc129)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc254)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc131)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc304)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc134)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc134)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc135)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc136)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc136)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc137)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc138)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc306)
            } loc(#loc305)
          } loc(#loc303)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc141)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc141)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc143)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc143)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc308)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc145)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc145)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc146)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc146)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc148)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc148)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc310)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc149)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc311)
            } loc(#loc309)
          } loc(#loc307)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc151)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc152)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc312)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc158)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc159)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc314)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc161)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc162)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc161)
            } loc(#loc315)
          } loc(#loc313)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc165)
            %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc108)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc108)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc317)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc168)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc169)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc170)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc170)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc318)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc172)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc173)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc172)
            } loc(#loc319)
          } loc(#loc316)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc176)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc177)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc178)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc321)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc180)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc181)
            } loc(#loc322)
          } loc(#loc320)
        } loc(#loc300)
      } loc(#loc299)
    } loc(#loc297)
    cir.return loc(#loc110)
  } loc(#loc296)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc186)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc187)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc325)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc328)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc329)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc328)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc328)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc194)
          %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc195)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc329)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc198)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc199)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc254)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc200)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc201)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc202)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc202)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc331)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc204)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc204)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc205)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc206)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc206)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc207)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc208)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc208)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc333)
            } loc(#loc332)
          } loc(#loc330)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc211)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc212)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc211)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc213)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc213)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc335)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc215)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc215)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc216)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc217)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc216)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc218)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc218)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc337)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc219)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc338)
            } loc(#loc336)
          } loc(#loc334)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc220)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc221)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc222)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc339)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc227)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc228)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc229)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc341)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc231)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc232)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc231)
            } loc(#loc342)
          } loc(#loc340)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc235)
            %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc236)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc236)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc236)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc344)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc239)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc240)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc241)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc241)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc345)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc243)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc244)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc243)
            } loc(#loc346)
          } loc(#loc343)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc247)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc248)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc249)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc348)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc251)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc252)
            } loc(#loc349)
          } loc(#loc347)
        } loc(#loc327)
      } loc(#loc326)
    } loc(#loc324)
    cir.return loc(#loc183)
  } loc(#loc323)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__stat_03.c":47:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":205:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":206:43)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__stat_03.c":65:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__stat_03.c":37:1)
#loc22 = loc("CWE367_TOC_TOU__stat_03.c":75:1)
#loc23 = loc("CWE367_TOC_TOU__stat_03.c":39:5)
#loc24 = loc("CWE367_TOC_TOU__stat_03.c":74:5)
#loc25 = loc("CWE367_TOC_TOU__stat_03.c":39:8)
#loc26 = loc("CWE367_TOC_TOU__stat_03.c":39:11)
#loc27 = loc("CWE367_TOC_TOU__stat_03.c":40:5)
#loc28 = loc("CWE367_TOC_TOU__stat_03.c":41:9)
#loc29 = loc("CWE367_TOC_TOU__stat_03.c":73:9)
#loc30 = loc("CWE367_TOC_TOU__stat_03.c":42:13)
#loc31 = loc("CWE367_TOC_TOU__stat_03.c":42:34)
#loc32 = loc("CWE367_TOC_TOU__stat_03.c":43:13)
#loc33 = loc("CWE367_TOC_TOU__stat_03.c":43:25)
#loc34 = loc("CWE367_TOC_TOU__stat_03.c":44:13)
#loc35 = loc("CWE367_TOC_TOU__stat_03.c":44:29)
#loc36 = loc("CWE367_TOC_TOU__stat_03.c":44:28)
#loc37 = loc("CWE367_TOC_TOU__stat_03.c":45:13)
#loc38 = loc("CWE367_TOC_TOU__stat_03.c":50:13)
#loc39 = loc("CWE367_TOC_TOU__stat_03.c":45:23)
#loc40 = loc("CWE367_TOC_TOU__stat_03.c":45:33)
#loc41 = loc("CWE367_TOC_TOU__stat_03.c":45:38)
#loc42 = loc("CWE367_TOC_TOU__stat_03.c":45:17)
#loc43 = loc("CWE367_TOC_TOU__stat_03.c":45:48)
#loc44 = loc("CWE367_TOC_TOU__stat_03.c":46:13)
#loc45 = loc("CWE367_TOC_TOU__stat_03.c":47:17)
#loc46 = loc("CWE367_TOC_TOU__stat_03.c":49:31)
#loc47 = loc("CWE367_TOC_TOU__stat_03.c":49:26)
#loc48 = loc("CWE367_TOC_TOU__stat_03.c":49:17)
#loc49 = loc("CWE367_TOC_TOU__stat_03.c":51:13)
#loc50 = loc("CWE367_TOC_TOU__stat_03.c":54:13)
#loc51 = loc("CWE367_TOC_TOU__stat_03.c":51:17)
#loc52 = loc("CWE367_TOC_TOU__stat_03.c":51:24)
#loc53 = loc("CWE367_TOC_TOU__stat_03.c":51:36)
#loc54 = loc("CWE367_TOC_TOU__stat_03.c":52:13)
#loc55 = loc("CWE367_TOC_TOU__stat_03.c":53:48)
#loc56 = loc("CWE367_TOC_TOU__stat_03.c":53:26)
#loc57 = loc("CWE367_TOC_TOU__stat_03.c":53:33)
#loc58 = loc("CWE367_TOC_TOU__stat_03.c":53:43)
#loc59 = loc("CWE367_TOC_TOU__stat_03.c":53:17)
#loc60 = loc("CWE367_TOC_TOU__stat_03.c":56:13)
#loc61 = loc("CWE367_TOC_TOU__stat_03.c":59:13)
#loc62 = loc("CWE367_TOC_TOU__stat_03.c":56:22)
#loc63 = loc("CWE367_TOC_TOU__stat_03.c":56:17)
#loc64 = loc("CWE367_TOC_TOU__stat_03.c":56:49)
#loc65 = loc("CWE367_TOC_TOU__stat_03.c":56:48)
#loc66 = loc("CWE367_TOC_TOU__stat_03.c":57:13)
#loc67 = loc("CWE367_TOC_TOU__stat_03.c":58:17)
#loc68 = loc("CWE367_TOC_TOU__stat_03.c":58:22)
#loc69 = loc("CWE367_TOC_TOU__stat_03.c":60:30)
#loc70 = loc("CWE367_TOC_TOU__stat_03.c":60:40)
#loc71 = loc("CWE367_TOC_TOU__stat_03.c":60:25)
#loc72 = loc("CWE367_TOC_TOU__stat_03.c":60:13)
#loc73 = loc("CWE367_TOC_TOU__stat_03.c":60:46)
#loc74 = loc("CWE367_TOC_TOU__stat_03.c":61:13)
#loc75 = loc("CWE367_TOC_TOU__stat_03.c":64:13)
#loc76 = loc("CWE367_TOC_TOU__stat_03.c":61:17)
#loc77 = loc("CWE367_TOC_TOU__stat_03.c":61:30)
#loc78 = loc("CWE367_TOC_TOU__stat_03.c":61:29)
#loc79 = loc("CWE367_TOC_TOU__stat_03.c":62:13)
#loc80 = loc("CWE367_TOC_TOU__stat_03.c":63:17)
#loc81 = loc("CWE367_TOC_TOU__stat_03.c":63:22)
#loc82 = loc("CWE367_TOC_TOU__stat_03.c":65:13)
#loc83 = loc("CWE367_TOC_TOU__stat_03.c":68:13)
#loc84 = loc("CWE367_TOC_TOU__stat_03.c":65:23)
#loc85 = loc("CWE367_TOC_TOU__stat_03.c":65:50)
#loc86 = loc("CWE367_TOC_TOU__stat_03.c":65:72)
#loc87 = loc("CWE367_TOC_TOU__stat_03.c":65:17)
#loc88 = loc("CWE367_TOC_TOU__stat_03.c":65:79)
#loc89 = loc("CWE367_TOC_TOU__stat_03.c":65:78)
#loc90 = loc("CWE367_TOC_TOU__stat_03.c":66:13)
#loc91 = loc("CWE367_TOC_TOU__stat_03.c":67:17)
#loc92 = loc("CWE367_TOC_TOU__stat_03.c":67:22)
#loc93 = loc("CWE367_TOC_TOU__stat_03.c":69:13)
#loc94 = loc("CWE367_TOC_TOU__stat_03.c":72:13)
#loc95 = loc("CWE367_TOC_TOU__stat_03.c":69:17)
#loc96 = loc("CWE367_TOC_TOU__stat_03.c":69:30)
#loc97 = loc("CWE367_TOC_TOU__stat_03.c":69:29)
#loc98 = loc("CWE367_TOC_TOU__stat_03.c":70:13)
#loc99 = loc("CWE367_TOC_TOU__stat_03.c":71:23)
#loc100 = loc("CWE367_TOC_TOU__stat_03.c":71:17)
#loc101 = loc("CWE367_TOC_TOU__stat_03.c":158:1)
#loc102 = loc("CWE367_TOC_TOU__stat_03.c":162:1)
#loc103 = loc("CWE367_TOC_TOU__stat_03.c":160:5)
#loc104 = loc("CWE367_TOC_TOU__stat_03.c":160:11)
#loc105 = loc("CWE367_TOC_TOU__stat_03.c":161:5)
#loc106 = loc("CWE367_TOC_TOU__stat_03.c":161:11)
#loc107 = loc("CWE367_TOC_TOU__stat_03.c":87:19)
#loc108 = loc("CWE367_TOC_TOU__stat_03.c":110:33)
#loc109 = loc("CWE367_TOC_TOU__stat_03.c":82:1)
#loc110 = loc("CWE367_TOC_TOU__stat_03.c":120:1)
#loc111 = loc("CWE367_TOC_TOU__stat_03.c":84:5)
#loc112 = loc("CWE367_TOC_TOU__stat_03.c":119:5)
#loc113 = loc("CWE367_TOC_TOU__stat_03.c":84:8)
#loc114 = loc("CWE367_TOC_TOU__stat_03.c":84:11)
#loc115 = loc("CWE367_TOC_TOU__stat_03.c":85:5)
#loc116 = loc("CWE367_TOC_TOU__stat_03.c":88:5)
#loc117 = loc("CWE367_TOC_TOU__stat_03.c":90:5)
#loc118 = loc("CWE367_TOC_TOU__stat_03.c":87:9)
#loc119 = loc("CWE367_TOC_TOU__stat_03.c":91:9)
#loc120 = loc("CWE367_TOC_TOU__stat_03.c":118:9)
#loc121 = loc("CWE367_TOC_TOU__stat_03.c":92:13)
#loc122 = loc("CWE367_TOC_TOU__stat_03.c":92:34)
#loc123 = loc("CWE367_TOC_TOU__stat_03.c":93:13)
#loc124 = loc("CWE367_TOC_TOU__stat_03.c":93:29)
#loc125 = loc("CWE367_TOC_TOU__stat_03.c":93:28)
#loc126 = loc("CWE367_TOC_TOU__stat_03.c":94:13)
#loc127 = loc("CWE367_TOC_TOU__stat_03.c":99:13)
#loc128 = loc("CWE367_TOC_TOU__stat_03.c":94:23)
#loc129 = loc("CWE367_TOC_TOU__stat_03.c":94:33)
#loc130 = loc("CWE367_TOC_TOU__stat_03.c":94:38)
#loc131 = loc("CWE367_TOC_TOU__stat_03.c":94:17)
#loc132 = loc("CWE367_TOC_TOU__stat_03.c":94:48)
#loc133 = loc("CWE367_TOC_TOU__stat_03.c":95:13)
#loc134 = loc("CWE367_TOC_TOU__stat_03.c":96:27)
#loc135 = loc("CWE367_TOC_TOU__stat_03.c":96:17)
#loc136 = loc("CWE367_TOC_TOU__stat_03.c":98:31)
#loc137 = loc("CWE367_TOC_TOU__stat_03.c":98:26)
#loc138 = loc("CWE367_TOC_TOU__stat_03.c":98:17)
#loc139 = loc("CWE367_TOC_TOU__stat_03.c":100:13)
#loc140 = loc("CWE367_TOC_TOU__stat_03.c":103:13)
#loc141 = loc("CWE367_TOC_TOU__stat_03.c":100:17)
#loc142 = loc("CWE367_TOC_TOU__stat_03.c":100:24)
#loc143 = loc("CWE367_TOC_TOU__stat_03.c":100:36)
#loc144 = loc("CWE367_TOC_TOU__stat_03.c":101:13)
#loc145 = loc("CWE367_TOC_TOU__stat_03.c":102:48)
#loc146 = loc("CWE367_TOC_TOU__stat_03.c":102:26)
#loc147 = loc("CWE367_TOC_TOU__stat_03.c":102:33)
#loc148 = loc("CWE367_TOC_TOU__stat_03.c":102:43)
#loc149 = loc("CWE367_TOC_TOU__stat_03.c":102:17)
#loc150 = loc("CWE367_TOC_TOU__stat_03.c":105:30)
#loc151 = loc("CWE367_TOC_TOU__stat_03.c":105:40)
#loc152 = loc("CWE367_TOC_TOU__stat_03.c":105:25)
#loc153 = loc("CWE367_TOC_TOU__stat_03.c":105:13)
#loc154 = loc("CWE367_TOC_TOU__stat_03.c":105:46)
#loc155 = loc("CWE367_TOC_TOU__stat_03.c":106:13)
#loc156 = loc("CWE367_TOC_TOU__stat_03.c":109:13)
#loc157 = loc("CWE367_TOC_TOU__stat_03.c":106:17)
#loc158 = loc("CWE367_TOC_TOU__stat_03.c":106:30)
#loc159 = loc("CWE367_TOC_TOU__stat_03.c":106:29)
#loc160 = loc("CWE367_TOC_TOU__stat_03.c":107:13)
#loc161 = loc("CWE367_TOC_TOU__stat_03.c":108:17)
#loc162 = loc("CWE367_TOC_TOU__stat_03.c":108:22)
#loc163 = loc("CWE367_TOC_TOU__stat_03.c":110:13)
#loc164 = loc("CWE367_TOC_TOU__stat_03.c":113:13)
#loc165 = loc("CWE367_TOC_TOU__stat_03.c":110:23)
#loc166 = loc("CWE367_TOC_TOU__stat_03.c":110:51)
#loc167 = loc("CWE367_TOC_TOU__stat_03.c":110:74)
#loc168 = loc("CWE367_TOC_TOU__stat_03.c":110:17)
#loc169 = loc("CWE367_TOC_TOU__stat_03.c":110:81)
#loc170 = loc("CWE367_TOC_TOU__stat_03.c":110:80)
#loc171 = loc("CWE367_TOC_TOU__stat_03.c":111:13)
#loc172 = loc("CWE367_TOC_TOU__stat_03.c":112:17)
#loc173 = loc("CWE367_TOC_TOU__stat_03.c":112:22)
#loc174 = loc("CWE367_TOC_TOU__stat_03.c":114:13)
#loc175 = loc("CWE367_TOC_TOU__stat_03.c":117:13)
#loc176 = loc("CWE367_TOC_TOU__stat_03.c":114:17)
#loc177 = loc("CWE367_TOC_TOU__stat_03.c":114:30)
#loc178 = loc("CWE367_TOC_TOU__stat_03.c":114:29)
#loc179 = loc("CWE367_TOC_TOU__stat_03.c":115:13)
#loc180 = loc("CWE367_TOC_TOU__stat_03.c":116:23)
#loc181 = loc("CWE367_TOC_TOU__stat_03.c":116:17)
#loc182 = loc("CWE367_TOC_TOU__stat_03.c":123:1)
#loc183 = loc("CWE367_TOC_TOU__stat_03.c":156:1)
#loc184 = loc("CWE367_TOC_TOU__stat_03.c":125:5)
#loc185 = loc("CWE367_TOC_TOU__stat_03.c":155:5)
#loc186 = loc("CWE367_TOC_TOU__stat_03.c":125:8)
#loc187 = loc("CWE367_TOC_TOU__stat_03.c":125:11)
#loc188 = loc("CWE367_TOC_TOU__stat_03.c":126:5)
#loc189 = loc("CWE367_TOC_TOU__stat_03.c":127:9)
#loc190 = loc("CWE367_TOC_TOU__stat_03.c":154:9)
#loc191 = loc("CWE367_TOC_TOU__stat_03.c":128:13)
#loc192 = loc("CWE367_TOC_TOU__stat_03.c":128:34)
#loc193 = loc("CWE367_TOC_TOU__stat_03.c":129:13)
#loc194 = loc("CWE367_TOC_TOU__stat_03.c":129:29)
#loc195 = loc("CWE367_TOC_TOU__stat_03.c":129:28)
#loc196 = loc("CWE367_TOC_TOU__stat_03.c":130:13)
#loc197 = loc("CWE367_TOC_TOU__stat_03.c":135:13)
#loc198 = loc("CWE367_TOC_TOU__stat_03.c":130:23)
#loc199 = loc("CWE367_TOC_TOU__stat_03.c":130:33)
#loc200 = loc("CWE367_TOC_TOU__stat_03.c":130:38)
#loc201 = loc("CWE367_TOC_TOU__stat_03.c":130:17)
#loc202 = loc("CWE367_TOC_TOU__stat_03.c":130:48)
#loc203 = loc("CWE367_TOC_TOU__stat_03.c":131:13)
#loc204 = loc("CWE367_TOC_TOU__stat_03.c":132:27)
#loc205 = loc("CWE367_TOC_TOU__stat_03.c":132:17)
#loc206 = loc("CWE367_TOC_TOU__stat_03.c":134:31)
#loc207 = loc("CWE367_TOC_TOU__stat_03.c":134:26)
#loc208 = loc("CWE367_TOC_TOU__stat_03.c":134:17)
#loc209 = loc("CWE367_TOC_TOU__stat_03.c":136:13)
#loc210 = loc("CWE367_TOC_TOU__stat_03.c":139:13)
#loc211 = loc("CWE367_TOC_TOU__stat_03.c":136:17)
#loc212 = loc("CWE367_TOC_TOU__stat_03.c":136:24)
#loc213 = loc("CWE367_TOC_TOU__stat_03.c":136:36)
#loc214 = loc("CWE367_TOC_TOU__stat_03.c":137:13)
#loc215 = loc("CWE367_TOC_TOU__stat_03.c":138:48)
#loc216 = loc("CWE367_TOC_TOU__stat_03.c":138:26)
#loc217 = loc("CWE367_TOC_TOU__stat_03.c":138:33)
#loc218 = loc("CWE367_TOC_TOU__stat_03.c":138:43)
#loc219 = loc("CWE367_TOC_TOU__stat_03.c":138:17)
#loc220 = loc("CWE367_TOC_TOU__stat_03.c":141:30)
#loc221 = loc("CWE367_TOC_TOU__stat_03.c":141:40)
#loc222 = loc("CWE367_TOC_TOU__stat_03.c":141:25)
#loc223 = loc("CWE367_TOC_TOU__stat_03.c":141:13)
#loc224 = loc("CWE367_TOC_TOU__stat_03.c":141:46)
#loc225 = loc("CWE367_TOC_TOU__stat_03.c":142:13)
#loc226 = loc("CWE367_TOC_TOU__stat_03.c":145:13)
#loc227 = loc("CWE367_TOC_TOU__stat_03.c":142:17)
#loc228 = loc("CWE367_TOC_TOU__stat_03.c":142:30)
#loc229 = loc("CWE367_TOC_TOU__stat_03.c":142:29)
#loc230 = loc("CWE367_TOC_TOU__stat_03.c":143:13)
#loc231 = loc("CWE367_TOC_TOU__stat_03.c":144:17)
#loc232 = loc("CWE367_TOC_TOU__stat_03.c":144:22)
#loc233 = loc("CWE367_TOC_TOU__stat_03.c":146:13)
#loc234 = loc("CWE367_TOC_TOU__stat_03.c":149:13)
#loc235 = loc("CWE367_TOC_TOU__stat_03.c":146:23)
#loc236 = loc("CWE367_TOC_TOU__stat_03.c":146:33)
#loc237 = loc("CWE367_TOC_TOU__stat_03.c":146:51)
#loc238 = loc("CWE367_TOC_TOU__stat_03.c":146:74)
#loc239 = loc("CWE367_TOC_TOU__stat_03.c":146:17)
#loc240 = loc("CWE367_TOC_TOU__stat_03.c":146:81)
#loc241 = loc("CWE367_TOC_TOU__stat_03.c":146:80)
#loc242 = loc("CWE367_TOC_TOU__stat_03.c":147:13)
#loc243 = loc("CWE367_TOC_TOU__stat_03.c":148:17)
#loc244 = loc("CWE367_TOC_TOU__stat_03.c":148:22)
#loc245 = loc("CWE367_TOC_TOU__stat_03.c":150:13)
#loc246 = loc("CWE367_TOC_TOU__stat_03.c":153:13)
#loc247 = loc("CWE367_TOC_TOU__stat_03.c":150:17)
#loc248 = loc("CWE367_TOC_TOU__stat_03.c":150:30)
#loc249 = loc("CWE367_TOC_TOU__stat_03.c":150:29)
#loc250 = loc("CWE367_TOC_TOU__stat_03.c":151:13)
#loc251 = loc("CWE367_TOC_TOU__stat_03.c":152:23)
#loc252 = loc("CWE367_TOC_TOU__stat_03.c":152:17)
#loc253 = loc(fused[#loc1, #loc2])
#loc254 = loc(fused[#loc3, #loc4])
#loc255 = loc(fused[#loc5, #loc6])
#loc256 = loc(fused[#loc8, #loc9])
#loc257 = loc(fused[#loc10, #loc11])
#loc258 = loc(fused[#loc12, #loc13])
#loc259 = loc(fused[#loc14, #loc15])
#loc260 = loc(fused[#loc16, #loc17])
#loc261 = loc(fused[#loc19, #loc20])
#loc262 = loc(fused[#loc21, #loc22])
#loc263 = loc(fused[#loc23, #loc24])
#loc264 = loc(fused[#loc25, #loc26])
#loc265 = loc(fused[#loc27, #loc24])
#loc266 = loc(fused[#loc28, #loc29])
#loc267 = loc(fused[#loc30, #loc31])
#loc268 = loc(fused[#loc32, #loc33])
#loc269 = loc(fused[#loc34, #loc35])
#loc270 = loc(fused[#loc37, #loc38])
#loc271 = loc(fused[#loc42, #loc43])
#loc272 = loc(fused[#loc44, #loc38])
#loc273 = loc(fused[#loc48, #loc46])
#loc274 = loc(fused[#loc49, #loc50])
#loc275 = loc(fused[#loc51, #loc53])
#loc276 = loc(fused[#loc54, #loc50])
#loc277 = loc(fused[#loc56, #loc58])
#loc278 = loc(fused[#loc59, #loc55])
#loc279 = loc(fused[#loc60, #loc61])
#loc280 = loc(fused[#loc63, #loc64])
#loc281 = loc(fused[#loc66, #loc61])
#loc282 = loc(fused[#loc72, #loc73])
#loc283 = loc(fused[#loc74, #loc75])
#loc284 = loc(fused[#loc76, #loc77])
#loc285 = loc(fused[#loc79, #loc75])
#loc286 = loc(fused[#loc82, #loc83])
#loc287 = loc(fused[#loc85, #loc86])
#loc288 = loc(fused[#loc87, #loc88])
#loc289 = loc(fused[#loc90, #loc83])
#loc290 = loc(fused[#loc93, #loc94])
#loc291 = loc(fused[#loc95, #loc96])
#loc292 = loc(fused[#loc98, #loc94])
#loc293 = loc(fused[#loc101, #loc102])
#loc294 = loc(fused[#loc103, #loc104])
#loc295 = loc(fused[#loc105, #loc106])
#loc296 = loc(fused[#loc109, #loc110])
#loc297 = loc(fused[#loc111, #loc112])
#loc298 = loc(fused[#loc113, #loc114])
#loc299 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc300 = loc(fused[#loc119, #loc120])
#loc301 = loc(fused[#loc121, #loc122])
#loc302 = loc(fused[#loc123, #loc124])
#loc303 = loc(fused[#loc126, #loc127])
#loc304 = loc(fused[#loc131, #loc132])
#loc305 = loc(fused[#loc133, #loc127])
#loc306 = loc(fused[#loc138, #loc136])
#loc307 = loc(fused[#loc139, #loc140])
#loc308 = loc(fused[#loc141, #loc143])
#loc309 = loc(fused[#loc144, #loc140])
#loc310 = loc(fused[#loc146, #loc148])
#loc311 = loc(fused[#loc149, #loc145])
#loc312 = loc(fused[#loc153, #loc154])
#loc313 = loc(fused[#loc155, #loc156])
#loc314 = loc(fused[#loc157, #loc158])
#loc315 = loc(fused[#loc160, #loc156])
#loc316 = loc(fused[#loc163, #loc164])
#loc317 = loc(fused[#loc166, #loc167])
#loc318 = loc(fused[#loc168, #loc169])
#loc319 = loc(fused[#loc171, #loc164])
#loc320 = loc(fused[#loc174, #loc175])
#loc321 = loc(fused[#loc176, #loc177])
#loc322 = loc(fused[#loc179, #loc175])
#loc323 = loc(fused[#loc182, #loc183])
#loc324 = loc(fused[#loc184, #loc185])
#loc325 = loc(fused[#loc186, #loc187])
#loc326 = loc(fused[#loc188, #loc185])
#loc327 = loc(fused[#loc189, #loc190])
#loc328 = loc(fused[#loc191, #loc192])
#loc329 = loc(fused[#loc193, #loc194])
#loc330 = loc(fused[#loc196, #loc197])
#loc331 = loc(fused[#loc201, #loc202])
#loc332 = loc(fused[#loc203, #loc197])
#loc333 = loc(fused[#loc208, #loc206])
#loc334 = loc(fused[#loc209, #loc210])
#loc335 = loc(fused[#loc211, #loc213])
#loc336 = loc(fused[#loc214, #loc210])
#loc337 = loc(fused[#loc216, #loc218])
#loc338 = loc(fused[#loc219, #loc215])
#loc339 = loc(fused[#loc223, #loc224])
#loc340 = loc(fused[#loc225, #loc226])
#loc341 = loc(fused[#loc227, #loc228])
#loc342 = loc(fused[#loc230, #loc226])
#loc343 = loc(fused[#loc233, #loc234])
#loc344 = loc(fused[#loc237, #loc238])
#loc345 = loc(fused[#loc239, #loc240])
#loc346 = loc(fused[#loc242, #loc234])
#loc347 = loc(fused[#loc245, #loc246])
#loc348 = loc(fused[#loc247, #loc248])
#loc349 = loc(fused[#loc250, #loc246])
