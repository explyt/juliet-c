!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc440)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc441)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc442)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc443)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc444)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc445)
  cir.func private @close(!s32i) -> !s32i loc(#loc446)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc447)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc448)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc450)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc451)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc453)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc30)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc30)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc456)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc457)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc458)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc459)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc40)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc458)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc47)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc48)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc49)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc462)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc56)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc56)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc464)
                  cir.if %57 {
                    cir.break loc(#loc58)
                  } loc(#loc465)
                } loc(#loc463)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc466)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc61)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc467)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc468)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc66)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc66)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc469)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc470)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc74)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc74)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc471)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc473)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc474)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc474)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc87)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc87)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc475)
                  cir.if %61 {
                    cir.break loc(#loc89)
                  } loc(#loc476)
                } loc(#loc472)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc92)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc92)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc92)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc92)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc92)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc92)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc92)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc93)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc477)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc94)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc95)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc95)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc478)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc101)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc101)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc480)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc102)
                    cir.yield %59 : !cir.bool loc(#loc102)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc104)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc481)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc102)
                      cir.yield %63 : !cir.bool loc(#loc102)
                    }, false {
                      %63 = cir.const #false loc(#loc102)
                      cir.yield %63 : !cir.bool loc(#loc102)
                    }) : (!cir.bool) -> !cir.bool loc(#loc102)
                    cir.yield %62 : !cir.bool loc(#loc102)
                  }) : (!cir.bool) -> !cir.bool loc(#loc102)
                  cir.if %58 {
                    cir.break loc(#loc106)
                  } loc(#loc482)
                } loc(#loc479)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc107)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc107)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc109)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc483)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc111)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc484)
              } loc(#loc461)
              cir.yield loc(#loc44)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc114)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc114)
              cir.condition(%13) loc(#loc114)
            } loc(#loc460)
          } loc(#loc460)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc118)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc118)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc486)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc121)
            } loc(#loc487)
          } loc(#loc485)
        } loc(#loc455)
      } loc(#loc454)
    } loc(#loc452)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc489)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc124)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc124)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc127)
        %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc128)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc20)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc20)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc129)
      } loc(#loc490)
    } loc(#loc488)
    cir.return loc(#loc22)
  } loc(#loc449)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc492)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc132)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc493)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc134)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc494)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc136)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc495)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc138)
    cir.return loc(#loc131)
  } loc(#loc491)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc142)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc497)
    cir.return %2 : !s32i loc(#loc497)
  } loc(#loc496)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc146)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc499)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc152)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc500)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc502)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc156)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc156)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc505)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc506)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc507)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc508)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc166)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc166)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc507)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc173)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc174)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc175)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc176)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc511)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc182)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc182)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc513)
                  cir.if %57 {
                    cir.break loc(#loc184)
                  } loc(#loc514)
                } loc(#loc512)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc515)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc187)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc516)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc517)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc192)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc192)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc518)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc194)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc194)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc195)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc519)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc198)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc198)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc199)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc520)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc204)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc522)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc523)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc523)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc209)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc210)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc210)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc524)
                  cir.if %61 {
                    cir.break loc(#loc212)
                  } loc(#loc525)
                } loc(#loc521)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc213)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc214)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc214)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc215)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc215)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc215)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc215)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc215)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc215)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc215)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc216)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc216)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc526)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc217)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc218)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc218)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc527)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc223)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc224)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc224)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc529)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc225)
                    cir.yield %59 : !cir.bool loc(#loc225)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc227)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc530)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc225)
                      cir.yield %63 : !cir.bool loc(#loc225)
                    }, false {
                      %63 = cir.const #false loc(#loc225)
                      cir.yield %63 : !cir.bool loc(#loc225)
                    }) : (!cir.bool) -> !cir.bool loc(#loc225)
                    cir.yield %62 : !cir.bool loc(#loc225)
                  }) : (!cir.bool) -> !cir.bool loc(#loc225)
                  cir.if %58 {
                    cir.break loc(#loc229)
                  } loc(#loc531)
                } loc(#loc528)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc230)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc230)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc232)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc232)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc532)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc233)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc234)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc533)
              } loc(#loc510)
              cir.yield loc(#loc170)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc237)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc237)
              cir.condition(%13) loc(#loc237)
            } loc(#loc509)
          } loc(#loc509)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc240)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc241)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc241)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc535)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc243)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc244)
            } loc(#loc536)
          } loc(#loc534)
        } loc(#loc504)
      } loc(#loc503)
    } loc(#loc501)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc538)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc247)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc247)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc144)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc144)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc252)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc255)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc256)
          %8 = cir.cmp(gt, %6, %7) : !s32i, !cir.bool loc(#loc541)
          %9 = cir.ternary(%8, true {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
            %11 = cir.const #cir.int<2000> : !s32i loc(#loc259)
            %12 = cir.cmp(le, %10, %11) : !s32i, !cir.bool loc(#loc542)
            %13 = cir.ternary(%12, true {
              %14 = cir.const #true loc(#loc257)
              cir.yield %14 : !cir.bool loc(#loc257)
            }, false {
              %14 = cir.const #false loc(#loc257)
              cir.yield %14 : !cir.bool loc(#loc257)
            }) : (!cir.bool) -> !cir.bool loc(#loc257)
            cir.yield %13 : !cir.bool loc(#loc257)
          }, false {
            %10 = cir.const #false loc(#loc257)
            cir.yield %10 : !cir.bool loc(#loc257)
          }) : (!cir.bool) -> !cir.bool loc(#loc257)
          cir.if %9 {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc263)
            %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc264)
            %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc145)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc145)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc265)
          } else {
            %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc146)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc146)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc266)
          } loc(#loc543)
        } loc(#loc540)
      } loc(#loc539)
    } loc(#loc537)
    cir.return loc(#loc148)
  } loc(#loc498)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc269)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc545)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc545)
    cir.return %2 : !s32i loc(#loc545)
  } loc(#loc544)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc547)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc275)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc276)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc548)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc550)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc280)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc280)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc553)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc554)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc555)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc556)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc290)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc290)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc555)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc297)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc298)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc299)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc300)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc559)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc305)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc306)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc306)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc561)
                  cir.if %57 {
                    cir.break loc(#loc308)
                  } loc(#loc562)
                } loc(#loc560)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc563)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc311)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc564)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc565)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc316)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc316)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc566)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc318)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc318)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc319)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc567)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc322)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc322)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc323)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc568)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc328)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc570)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc571)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc571)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc333)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc334)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc334)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc572)
                  cir.if %61 {
                    cir.break loc(#loc336)
                  } loc(#loc573)
                } loc(#loc569)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc337)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc338)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc338)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc339)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc339)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc339)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc339)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc339)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc339)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc339)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc340)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc340)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc574)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc341)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc342)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc342)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc575)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc347)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc348)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc348)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc577)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc349)
                    cir.yield %59 : !cir.bool loc(#loc349)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc350)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc351)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc578)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc349)
                      cir.yield %63 : !cir.bool loc(#loc349)
                    }, false {
                      %63 = cir.const #false loc(#loc349)
                      cir.yield %63 : !cir.bool loc(#loc349)
                    }) : (!cir.bool) -> !cir.bool loc(#loc349)
                    cir.yield %62 : !cir.bool loc(#loc349)
                  }) : (!cir.bool) -> !cir.bool loc(#loc349)
                  cir.if %58 {
                    cir.break loc(#loc353)
                  } loc(#loc579)
                } loc(#loc576)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc354)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc354)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc355)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc356)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc356)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc580)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc357)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc358)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc581)
              } loc(#loc558)
              cir.yield loc(#loc294)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc361)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc361)
              cir.condition(%13) loc(#loc361)
            } loc(#loc557)
          } loc(#loc557)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc364)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc365)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc365)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc583)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc367)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc368)
            } loc(#loc584)
          } loc(#loc582)
        } loc(#loc552)
      } loc(#loc551)
    } loc(#loc549)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc586)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc371)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc371)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc376)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc377)
          %8 = cir.cmp(gt, %6, %7) : !s32i, !cir.bool loc(#loc589)
          %9 = cir.ternary(%8, true {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc379)
            %11 = cir.const #cir.int<2000> : !s32i loc(#loc380)
            %12 = cir.cmp(le, %10, %11) : !s32i, !cir.bool loc(#loc590)
            %13 = cir.ternary(%12, true {
              %14 = cir.const #true loc(#loc378)
              cir.yield %14 : !cir.bool loc(#loc378)
            }, false {
              %14 = cir.const #false loc(#loc378)
              cir.yield %14 : !cir.bool loc(#loc378)
            }) : (!cir.bool) -> !cir.bool loc(#loc378)
            cir.yield %13 : !cir.bool loc(#loc378)
          }, false {
            %10 = cir.const #false loc(#loc378)
            cir.yield %10 : !cir.bool loc(#loc378)
          }) : (!cir.bool) -> !cir.bool loc(#loc378)
          cir.if %9 {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc384)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc384)
            %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc385)
            %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc386)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc386)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc387)
          } else {
            %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc388)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc388)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc389)
          } loc(#loc591)
        } loc(#loc588)
      } loc(#loc587)
    } loc(#loc585)
    cir.return loc(#loc272)
  } loc(#loc546)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc593)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc394)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc395)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc596)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc399)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc399)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc404)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc404)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc405)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc406)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc598)
      } loc(#loc597)
    } loc(#loc595)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc600)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc410)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc410)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc413)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc413)
        %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc414)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc415)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc415)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc416)
      } loc(#loc601)
    } loc(#loc599)
    cir.return loc(#loc391)
  } loc(#loc592)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc603)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc421)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc422)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc604)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc606)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc426)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc426)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc429)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc608)
      } loc(#loc607)
    } loc(#loc605)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc610)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc433)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc433)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc436)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc436)
        %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc437)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc438)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc438)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc439)
      } loc(#loc611)
    } loc(#loc609)
    cir.return loc(#loc418)
  } loc(#loc602)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":96:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/unistd.h":480:1)
#loc17 = loc("/usr/include/unistd.h":480:43)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":131:19)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":63:1)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":133:1)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":65:5)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":65:9)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":67:14)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":67:13)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":67:5)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":68:5)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":126:5)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":68:8)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":68:26)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":69:5)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":70:9)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":125:9)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":75:13)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":75:17)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":76:13)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":76:32)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":77:13)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":77:36)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":78:13)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":78:45)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":79:13)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":114:21)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":80:13)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":113:13)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":89:40)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":89:49)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":89:62)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":89:33)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":89:17)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":89:73)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":90:17)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":93:17)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":90:21)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":90:38)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":91:17)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":92:21)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":94:24)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":94:25)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":94:34)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":94:37)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":94:51)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":94:17)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":94:52)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":95:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":95:17)
#loc69 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":96:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":96:17)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":96:63)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":97:42)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":97:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":97:17)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":97:50)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":98:17)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":101:17)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":98:29)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":98:62)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":98:63)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":98:72)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":98:86)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":98:21)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":98:92)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":99:17)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":100:21)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":104:35)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":104:50)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":104:63)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":104:81)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":104:84)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":104:30)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":104:17)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":104:85)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":105:17)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":108:17)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":105:21)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":105:35)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":105:48)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":105:51)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":105:65)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":106:17)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":107:21)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":110:43)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":110:29)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":110:17)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":112:30)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":112:25)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":112:17)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":112:41)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":114:20)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":115:13)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":118:13)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":115:17)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":115:34)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":116:13)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":117:30)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":117:17)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":127:5)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":132:5)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":127:8)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":127:26)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":128:5)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":130:15)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":130:9)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":131:9)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":347:1)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":353:1)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":349:5)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":349:14)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":350:5)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":350:14)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":351:5)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":351:14)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":352:5)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":352:14)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":51:1)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":54:1)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":53:12)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":53:5)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":207:19)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":215:23)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":219:23)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":140:1)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":222:1)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":142:5)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":142:9)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":144:14)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":144:13)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":144:5)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":145:5)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":203:5)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":145:8)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":145:26)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":146:5)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":147:9)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":202:9)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":152:13)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":152:17)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":153:13)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":153:32)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":154:13)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":154:36)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":155:13)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":155:45)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":156:13)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":191:21)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":157:13)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":190:13)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":166:40)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":166:49)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":166:62)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":166:33)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":166:17)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":166:73)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":167:17)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":170:17)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":167:21)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":167:38)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":168:17)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":169:21)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":171:24)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":171:25)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":171:34)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":171:37)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":171:51)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":171:17)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":171:52)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":172:38)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":172:17)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":173:53)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":173:43)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":173:17)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":173:63)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":174:42)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":174:36)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":174:17)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":174:50)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":175:17)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":178:17)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":175:29)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":175:62)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":175:63)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":175:72)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":175:86)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":175:21)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":175:92)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":176:17)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":177:21)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":181:35)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":181:50)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":181:63)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":181:81)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":181:84)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":181:30)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":181:17)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":181:85)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":182:17)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":185:17)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":182:21)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":182:35)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":182:48)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":182:51)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":182:65)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":183:17)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":184:21)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":187:43)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":187:29)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":187:17)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":189:30)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":189:25)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":189:17)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":189:41)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":191:20)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":192:13)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":195:13)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":192:17)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":192:34)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":193:13)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":194:30)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":194:17)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":204:5)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":221:5)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":204:8)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":204:27)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":205:5)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":208:5)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":210:5)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":207:9)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":212:9)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":220:9)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":212:13)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":212:21)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":212:23)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":212:26)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":212:35)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":213:9)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":216:9)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":218:9)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":214:19)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":214:13)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":215:13)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":219:13)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":56:1)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":59:1)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":58:12)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":58:5)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":225:1)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":302:1)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":227:5)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":227:9)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":229:14)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":229:13)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":229:5)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":230:5)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":288:5)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":230:8)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":230:26)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":231:5)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":232:9)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":287:9)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":237:13)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":237:17)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":238:13)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":238:32)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":239:13)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":239:36)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":240:13)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":240:45)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":241:13)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":276:21)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":242:13)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":275:13)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":251:40)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":251:49)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":251:62)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":251:33)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":251:17)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":251:73)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":252:17)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":255:17)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":252:21)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":252:38)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":253:17)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":254:21)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":256:24)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":256:25)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":256:34)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":256:37)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":256:51)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":256:17)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":256:52)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":257:38)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":257:17)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":258:53)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":258:43)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":258:17)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":258:63)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":259:42)
#loc323 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":259:36)
#loc324 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":259:17)
#loc325 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":259:50)
#loc326 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":260:17)
#loc327 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":263:17)
#loc328 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":260:29)
#loc329 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":260:62)
#loc330 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":260:63)
#loc331 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":260:72)
#loc332 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":260:86)
#loc333 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":260:21)
#loc334 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":260:92)
#loc335 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":261:17)
#loc336 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":262:21)
#loc337 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":266:35)
#loc338 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":266:50)
#loc339 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":266:63)
#loc340 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":266:81)
#loc341 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":266:84)
#loc342 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":266:30)
#loc343 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":266:17)
#loc344 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":266:85)
#loc345 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":267:17)
#loc346 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":270:17)
#loc347 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":267:21)
#loc348 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":267:35)
#loc349 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":267:48)
#loc350 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":267:51)
#loc351 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":267:65)
#loc352 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":268:17)
#loc353 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":269:21)
#loc354 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":272:43)
#loc355 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":272:29)
#loc356 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":272:17)
#loc357 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":274:30)
#loc358 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":274:25)
#loc359 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":274:17)
#loc360 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":274:41)
#loc361 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":276:20)
#loc362 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":277:13)
#loc363 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":280:13)
#loc364 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":277:17)
#loc365 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":277:34)
#loc366 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":278:13)
#loc367 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":279:30)
#loc368 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":279:17)
#loc369 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":289:5)
#loc370 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":301:5)
#loc371 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":289:8)
#loc372 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":289:26)
#loc373 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":290:5)
#loc374 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":292:9)
#loc375 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":300:9)
#loc376 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":292:13)
#loc377 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":292:21)
#loc378 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":292:23)
#loc379 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":292:26)
#loc380 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":292:35)
#loc381 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":293:9)
#loc382 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":296:9)
#loc383 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":298:9)
#loc384 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":294:19)
#loc385 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":294:13)
#loc386 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":295:23)
#loc387 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":295:13)
#loc388 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":299:23)
#loc389 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":299:13)
#loc390 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":305:1)
#loc391 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":326:1)
#loc392 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":307:5)
#loc393 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":307:9)
#loc394 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":309:14)
#loc395 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":309:13)
#loc396 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":309:5)
#loc397 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":310:5)
#loc398 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":319:5)
#loc399 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":310:8)
#loc400 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":310:27)
#loc401 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":311:5)
#loc402 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":314:5)
#loc403 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":316:5)
#loc404 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":313:19)
#loc405 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":313:9)
#loc406 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":318:17)
#loc407 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":318:9)
#loc408 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":320:5)
#loc409 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":325:5)
#loc410 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":320:8)
#loc411 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":320:26)
#loc412 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":321:5)
#loc413 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":323:15)
#loc414 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":323:9)
#loc415 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":324:19)
#loc416 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":324:9)
#loc417 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":329:1)
#loc418 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":345:1)
#loc419 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":331:5)
#loc420 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":331:9)
#loc421 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":333:14)
#loc422 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":333:13)
#loc423 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":333:5)
#loc424 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":334:5)
#loc425 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":338:5)
#loc426 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":334:8)
#loc427 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":334:26)
#loc428 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":335:5)
#loc429 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":337:17)
#loc430 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":337:9)
#loc431 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":339:5)
#loc432 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":344:5)
#loc433 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":339:8)
#loc434 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":339:26)
#loc435 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":340:5)
#loc436 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":342:15)
#loc437 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":342:9)
#loc438 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":343:19)
#loc439 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_08.c":343:9)
#loc440 = loc(fused[#loc1, #loc2])
#loc441 = loc(fused[#loc3, #loc4])
#loc442 = loc(fused[#loc6, #loc7])
#loc443 = loc(fused[#loc8, #loc9])
#loc444 = loc(fused[#loc10, #loc11])
#loc445 = loc(fused[#loc12, #loc13])
#loc446 = loc(fused[#loc14, #loc15])
#loc447 = loc(fused[#loc16, #loc17])
#loc448 = loc(fused[#loc18, #loc19])
#loc449 = loc(fused[#loc21, #loc22])
#loc450 = loc(fused[#loc23, #loc24])
#loc451 = loc(fused[#loc27, #loc25])
#loc452 = loc(fused[#loc28, #loc29])
#loc453 = loc(fused[#loc30, #loc31])
#loc454 = loc(fused[#loc32, #loc29])
#loc455 = loc(fused[#loc33, #loc34])
#loc456 = loc(fused[#loc35, #loc36])
#loc457 = loc(fused[#loc37, #loc38])
#loc458 = loc(fused[#loc39, #loc40])
#loc459 = loc(fused[#loc41, #loc42])
#loc460 = loc(fused[#loc43, #loc44])
#loc461 = loc(fused[#loc45, #loc46])
#loc462 = loc(fused[#loc51, #loc52])
#loc463 = loc(fused[#loc53, #loc54])
#loc464 = loc(fused[#loc55, #loc56])
#loc465 = loc(fused[#loc57, #loc54])
#loc466 = loc(fused[#loc59, #loc60])
#loc467 = loc(fused[#loc62, #loc63])
#loc468 = loc(fused[#loc64, #loc65])
#loc469 = loc(fused[#loc68, #loc66])
#loc470 = loc(fused[#loc72, #loc73])
#loc471 = loc(fused[#loc77, #loc78])
#loc472 = loc(fused[#loc79, #loc80])
#loc473 = loc(fused[#loc82, #loc83])
#loc474 = loc(fused[#loc84, #loc85])
#loc475 = loc(fused[#loc86, #loc87])
#loc476 = loc(fused[#loc88, #loc80])
#loc477 = loc(fused[#loc92, #loc93])
#loc478 = loc(fused[#loc96, #loc97])
#loc479 = loc(fused[#loc98, #loc99])
#loc480 = loc(fused[#loc100, #loc101])
#loc481 = loc(fused[#loc103, #loc104])
#loc482 = loc(fused[#loc105, #loc99])
#loc483 = loc(fused[#loc109, #loc107])
#loc484 = loc(fused[#loc112, #loc113])
#loc485 = loc(fused[#loc115, #loc116])
#loc486 = loc(fused[#loc117, #loc118])
#loc487 = loc(fused[#loc119, #loc116])
#loc488 = loc(fused[#loc122, #loc123])
#loc489 = loc(fused[#loc124, #loc125])
#loc490 = loc(fused[#loc126, #loc123])
#loc491 = loc(fused[#loc130, #loc131])
#loc492 = loc(fused[#loc132, #loc133])
#loc493 = loc(fused[#loc134, #loc135])
#loc494 = loc(fused[#loc136, #loc137])
#loc495 = loc(fused[#loc138, #loc139])
#loc496 = loc(fused[#loc140, #loc141])
#loc497 = loc(fused[#loc143, #loc142])
#loc498 = loc(fused[#loc147, #loc148])
#loc499 = loc(fused[#loc149, #loc150])
#loc500 = loc(fused[#loc153, #loc151])
#loc501 = loc(fused[#loc154, #loc155])
#loc502 = loc(fused[#loc156, #loc157])
#loc503 = loc(fused[#loc158, #loc155])
#loc504 = loc(fused[#loc159, #loc160])
#loc505 = loc(fused[#loc161, #loc162])
#loc506 = loc(fused[#loc163, #loc164])
#loc507 = loc(fused[#loc165, #loc166])
#loc508 = loc(fused[#loc167, #loc168])
#loc509 = loc(fused[#loc169, #loc170])
#loc510 = loc(fused[#loc171, #loc172])
#loc511 = loc(fused[#loc177, #loc178])
#loc512 = loc(fused[#loc179, #loc180])
#loc513 = loc(fused[#loc181, #loc182])
#loc514 = loc(fused[#loc183, #loc180])
#loc515 = loc(fused[#loc185, #loc186])
#loc516 = loc(fused[#loc188, #loc189])
#loc517 = loc(fused[#loc190, #loc191])
#loc518 = loc(fused[#loc193, #loc192])
#loc519 = loc(fused[#loc196, #loc197])
#loc520 = loc(fused[#loc200, #loc201])
#loc521 = loc(fused[#loc202, #loc203])
#loc522 = loc(fused[#loc205, #loc206])
#loc523 = loc(fused[#loc207, #loc208])
#loc524 = loc(fused[#loc209, #loc210])
#loc525 = loc(fused[#loc211, #loc203])
#loc526 = loc(fused[#loc215, #loc216])
#loc527 = loc(fused[#loc219, #loc220])
#loc528 = loc(fused[#loc221, #loc222])
#loc529 = loc(fused[#loc223, #loc224])
#loc530 = loc(fused[#loc226, #loc227])
#loc531 = loc(fused[#loc228, #loc222])
#loc532 = loc(fused[#loc232, #loc230])
#loc533 = loc(fused[#loc235, #loc236])
#loc534 = loc(fused[#loc238, #loc239])
#loc535 = loc(fused[#loc240, #loc241])
#loc536 = loc(fused[#loc242, #loc239])
#loc537 = loc(fused[#loc245, #loc246])
#loc538 = loc(fused[#loc247, #loc248])
#loc539 = loc(fused[#loc249, #loc250, #loc251, #loc246])
#loc540 = loc(fused[#loc253, #loc254])
#loc541 = loc(fused[#loc255, #loc256])
#loc542 = loc(fused[#loc258, #loc259])
#loc543 = loc(fused[#loc260, #loc261, #loc262, #loc254])
#loc544 = loc(fused[#loc267, #loc268])
#loc545 = loc(fused[#loc270, #loc269])
#loc546 = loc(fused[#loc271, #loc272])
#loc547 = loc(fused[#loc273, #loc274])
#loc548 = loc(fused[#loc277, #loc275])
#loc549 = loc(fused[#loc278, #loc279])
#loc550 = loc(fused[#loc280, #loc281])
#loc551 = loc(fused[#loc282, #loc279])
#loc552 = loc(fused[#loc283, #loc284])
#loc553 = loc(fused[#loc285, #loc286])
#loc554 = loc(fused[#loc287, #loc288])
#loc555 = loc(fused[#loc289, #loc290])
#loc556 = loc(fused[#loc291, #loc292])
#loc557 = loc(fused[#loc293, #loc294])
#loc558 = loc(fused[#loc295, #loc296])
#loc559 = loc(fused[#loc301, #loc302])
#loc560 = loc(fused[#loc303, #loc304])
#loc561 = loc(fused[#loc305, #loc306])
#loc562 = loc(fused[#loc307, #loc304])
#loc563 = loc(fused[#loc309, #loc310])
#loc564 = loc(fused[#loc312, #loc313])
#loc565 = loc(fused[#loc314, #loc315])
#loc566 = loc(fused[#loc317, #loc316])
#loc567 = loc(fused[#loc320, #loc321])
#loc568 = loc(fused[#loc324, #loc325])
#loc569 = loc(fused[#loc326, #loc327])
#loc570 = loc(fused[#loc329, #loc330])
#loc571 = loc(fused[#loc331, #loc332])
#loc572 = loc(fused[#loc333, #loc334])
#loc573 = loc(fused[#loc335, #loc327])
#loc574 = loc(fused[#loc339, #loc340])
#loc575 = loc(fused[#loc343, #loc344])
#loc576 = loc(fused[#loc345, #loc346])
#loc577 = loc(fused[#loc347, #loc348])
#loc578 = loc(fused[#loc350, #loc351])
#loc579 = loc(fused[#loc352, #loc346])
#loc580 = loc(fused[#loc356, #loc354])
#loc581 = loc(fused[#loc359, #loc360])
#loc582 = loc(fused[#loc362, #loc363])
#loc583 = loc(fused[#loc364, #loc365])
#loc584 = loc(fused[#loc366, #loc363])
#loc585 = loc(fused[#loc369, #loc370])
#loc586 = loc(fused[#loc371, #loc372])
#loc587 = loc(fused[#loc373, #loc370])
#loc588 = loc(fused[#loc374, #loc375])
#loc589 = loc(fused[#loc376, #loc377])
#loc590 = loc(fused[#loc379, #loc380])
#loc591 = loc(fused[#loc381, #loc382, #loc383, #loc375])
#loc592 = loc(fused[#loc390, #loc391])
#loc593 = loc(fused[#loc392, #loc393])
#loc594 = loc(fused[#loc396, #loc394])
#loc595 = loc(fused[#loc397, #loc398])
#loc596 = loc(fused[#loc399, #loc400])
#loc597 = loc(fused[#loc401, #loc402, #loc403, #loc398])
#loc598 = loc(fused[#loc407, #loc406])
#loc599 = loc(fused[#loc408, #loc409])
#loc600 = loc(fused[#loc410, #loc411])
#loc601 = loc(fused[#loc412, #loc409])
#loc602 = loc(fused[#loc417, #loc418])
#loc603 = loc(fused[#loc419, #loc420])
#loc604 = loc(fused[#loc423, #loc421])
#loc605 = loc(fused[#loc424, #loc425])
#loc606 = loc(fused[#loc426, #loc427])
#loc607 = loc(fused[#loc428, #loc425])
#loc608 = loc(fused[#loc430, #loc429])
#loc609 = loc(fused[#loc431, #loc432])
#loc610 = loc(fused[#loc433, #loc434])
#loc611 = loc(fused[#loc435, #loc432])
