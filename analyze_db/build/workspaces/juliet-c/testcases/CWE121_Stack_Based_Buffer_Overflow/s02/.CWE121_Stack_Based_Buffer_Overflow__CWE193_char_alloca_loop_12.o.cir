!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc125)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc126)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc127)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc126)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc132)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc134)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc19)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc19)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc19)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc19)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc135)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc21)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc21)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc21)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc21)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc21)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc21)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    %22 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc137)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc137)
    %24 = cir.call %23() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc24)
    %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %25 ^bb2, ^bb3 loc(#loc138)
  ^bb2:  // pred: ^bb1
    %26 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    cir.store %26, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc31)
    %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %28, %31 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    cir.br ^bb4 loc(#loc27)
  ^bb3:  // pred: ^bb1
    %32 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %32, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc37)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc40)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc143)
  ^bb6:  // pred: ^bb5
    %38 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc126)
    cir.copy %38 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc126)
    %39 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc43)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc44)
    %41 = cir.call @strlen(%40) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc43)
    cir.store %41, %2 : !u64i, !cir.ptr<!u64i> loc(#loc144)
    cir.br ^bb7 loc(#loc145)
  ^bb7:  // pred: ^bb6
    %42 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc49)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc146)
    cir.br ^bb8 loc(#loc145)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %45 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc53)
    %48 = cir.binop(add, %45, %47) : !u64i loc(#loc147)
    %49 = cir.cmp(lt, %44, %48) : !u64i, !cir.bool loc(#loc148)
    cir.brcond %49 ^bb9, ^bb13 loc(#loc54)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc149)
  ^bb10:  // pred: ^bb9
    %50 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %51 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc57)
    %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc57)
    %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc57)
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %55 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc150)
    cir.br ^bb11 loc(#loc48)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc48)
  ^bb12:  // pred: ^bb11
    %57 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc63)
    cir.store %58, %1 : !u64i, !cir.ptr<!u64i> loc(#loc151)
    cir.br ^bb8 loc(#loc145)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc48)
  ^bb14:  // pred: ^bb13
    %59 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb15 loc(#loc42)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc12)
  } loc(#loc130)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc68)
    cir.return loc(#loc67)
  } loc(#loc152)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc125)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc156)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc158)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc78)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc78)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc78)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc78)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc78)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc159)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc78)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc78)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc80)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc80)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc80)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc80)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc80)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc80)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc80)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %22 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc161)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc161)
    %24 = cir.call %23() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc83)
    %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %25 ^bb2, ^bb3 loc(#loc162)
  ^bb2:  // pred: ^bb1
    %26 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %26, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc90)
    %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc93)
    cir.store %28, %31 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    cir.br ^bb4 loc(#loc86)
  ^bb3:  // pred: ^bb1
    %32 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    cir.store %32, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc96)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc99)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc82)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc167)
  ^bb6:  // pred: ^bb5
    %38 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc125)
    cir.copy %38 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc125)
    %39 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc102)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc103)
    %41 = cir.call @strlen(%40) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc102)
    cir.store %41, %2 : !u64i, !cir.ptr<!u64i> loc(#loc168)
    cir.br ^bb7 loc(#loc169)
  ^bb7:  // pred: ^bb6
    %42 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc108)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc170)
    cir.br ^bb8 loc(#loc169)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %45 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc112)
    %48 = cir.binop(add, %45, %47) : !u64i loc(#loc171)
    %49 = cir.cmp(lt, %44, %48) : !u64i, !cir.bool loc(#loc172)
    cir.brcond %49 ^bb9, ^bb13 loc(#loc113)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc173)
  ^bb10:  // pred: ^bb9
    %50 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %51 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc116)
    %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc116)
    %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc116)
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %55 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc119)
    cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    cir.br ^bb11 loc(#loc107)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc107)
  ^bb12:  // pred: ^bb11
    %57 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc122)
    cir.store %58, %1 : !u64i, !cir.ptr<!u64i> loc(#loc175)
    cir.br ^bb8 loc(#loc169)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc107)
  ^bb14:  // pred: ^bb13
    %59 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb15 loc(#loc101)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc71)
  } loc(#loc154)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":87:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":87:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":48:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":48:29)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":28:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":59:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":49:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":49:16)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":49:19)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":30:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":30:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":31:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":31:36)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":32:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":32:37)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":33:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":46:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":33:8)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":33:33)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":34:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":39:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":41:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":37:16)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":37:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":38:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":38:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":38:14)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":38:15)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":44:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":44:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":45:19)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":45:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":45:14)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":45:15)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":47:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":58:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":50:21)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":50:28)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":50:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":50:34)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":53:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":56:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":53:18)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":53:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":53:21)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":53:25)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":53:37)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":53:23)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":54:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":55:30)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":55:23)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":55:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":55:18)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":55:19)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":55:31)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":53:41)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":53:40)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":57:19)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":57:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":100:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":103:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":102:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":102:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":67:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":98:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":88:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":88:16)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":88:19)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":69:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":69:12)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":70:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":70:36)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":71:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":71:37)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":72:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":85:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":72:8)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":72:33)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":73:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":78:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":80:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":76:16)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":76:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":77:19)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":77:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":77:14)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":77:15)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":83:16)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":83:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":84:19)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":84:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":84:14)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":84:15)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":86:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":97:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":89:21)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":89:28)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":89:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":89:34)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":92:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":95:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":92:18)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":92:14)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":92:21)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":92:25)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":92:37)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":92:23)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":93:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":94:30)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":94:23)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":94:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":94:18)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":94:19)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":94:31)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":92:41)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":92:40)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":96:19)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12.c":96:9)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc13, #loc15])
#loc133 = loc(fused[#loc16, #loc17])
#loc134 = loc(fused[#loc18, #loc19])
#loc135 = loc(fused[#loc20, #loc21])
#loc136 = loc(fused[#loc22, #loc23])
#loc137 = loc(fused[#loc24, #loc25])
#loc138 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc139 = loc(fused[#loc30, #loc29])
#loc140 = loc(fused[#loc32, #loc31])
#loc141 = loc(fused[#loc36, #loc35])
#loc142 = loc(fused[#loc38, #loc37])
#loc143 = loc(fused[#loc41, #loc42])
#loc144 = loc(fused[#loc45, #loc46])
#loc145 = loc(fused[#loc47, #loc48])
#loc146 = loc(fused[#loc50, #loc49])
#loc147 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc51, #loc53])
#loc149 = loc(fused[#loc55, #loc48])
#loc150 = loc(fused[#loc58, #loc61])
#loc151 = loc(fused[#loc63, #loc62])
#loc152 = loc(fused[#loc66, #loc67])
#loc153 = loc(fused[#loc68, #loc69])
#loc154 = loc(fused[#loc70, #loc71])
#loc155 = loc(fused[#loc72, #loc73])
#loc156 = loc(fused[#loc72, #loc74])
#loc157 = loc(fused[#loc75, #loc76])
#loc158 = loc(fused[#loc77, #loc78])
#loc159 = loc(fused[#loc79, #loc80])
#loc160 = loc(fused[#loc81, #loc82])
#loc161 = loc(fused[#loc83, #loc84])
#loc162 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc163 = loc(fused[#loc89, #loc88])
#loc164 = loc(fused[#loc91, #loc90])
#loc165 = loc(fused[#loc95, #loc94])
#loc166 = loc(fused[#loc97, #loc96])
#loc167 = loc(fused[#loc100, #loc101])
#loc168 = loc(fused[#loc104, #loc105])
#loc169 = loc(fused[#loc106, #loc107])
#loc170 = loc(fused[#loc109, #loc108])
#loc171 = loc(fused[#loc111, #loc112])
#loc172 = loc(fused[#loc110, #loc112])
#loc173 = loc(fused[#loc114, #loc107])
#loc174 = loc(fused[#loc117, #loc120])
#loc175 = loc(fused[#loc122, #loc121])
