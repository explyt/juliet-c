!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":218:10)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":218:14)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":218:20)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":218:32)
#loc434 = loc(fused[#loc135, #loc136])
#loc435 = loc(fused[#loc137, #loc138])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc377)
  cir.func private @printIntLine(!s32i) loc(#loc378)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc380)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc9)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc9)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc9)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc9)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc9)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc9)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc381)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc383)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc383)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc13)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc13)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc386)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc24)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc388)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc26)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc27)
              %16 = cir.const #cir.int<2> : !s32i loc(#loc28)
              %17 = cir.binop(div, %15, %16) : !s32i loc(#loc389)
              %18 = cir.cmp(lt, %14, %17) : !s32i, !cir.bool loc(#loc390)
              cir.condition(%18) loc(#loc30)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc32)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
                %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc34)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc35)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc392)
              } loc(#loc391)
              cir.yield loc(#loc23)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc36)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc37)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc393)
              cir.yield loc(#loc387)
            } loc(#loc387)
          } loc(#loc387)
        } loc(#loc385)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc395)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc44)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc397)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc47)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc398)
              cir.condition(%16) loc(#loc48)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc50)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
                %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc52)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc53)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc400)
              } loc(#loc399)
              cir.yield loc(#loc43)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc54)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc55)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc401)
              cir.yield loc(#loc396)
            } loc(#loc396)
          } loc(#loc396)
        } loc(#loc394)
      } loc(#loc384)
    } loc(#loc382)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc403)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc403)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc58)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc58)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc406)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc69)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc408)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc71)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc72)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc409)
              cir.condition(%16) loc(#loc73)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc77)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc78)
              } loc(#loc410)
              cir.yield loc(#loc68)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc80)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc411)
              cir.yield loc(#loc407)
            } loc(#loc407)
          } loc(#loc407)
        } loc(#loc405)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc413)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc87)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc415)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc90)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc416)
              cir.condition(%16) loc(#loc91)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
                %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc96)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc418)
              } loc(#loc417)
              cir.yield loc(#loc86)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc98)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc419)
              cir.yield loc(#loc414)
            } loc(#loc414)
          } loc(#loc414)
        } loc(#loc412)
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc421)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc105)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc423)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc107)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc108)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc424)
              cir.condition(%16) loc(#loc109)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc113)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc114)
              } loc(#loc425)
              cir.yield loc(#loc104)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc116)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc426)
              cir.yield loc(#loc422)
            } loc(#loc422)
          } loc(#loc422)
        } loc(#loc420)
      } loc(#loc404)
    } loc(#loc402)
    cir.return loc(#loc6)
  } loc(#loc379)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc428)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc119)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc429)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc121)
    cir.return loc(#loc118)
  } loc(#loc427)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc430)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc431)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc132)
  cir.func @main(%arg0: !s32i loc(fused[#loc135, #loc136]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc137, #loc138])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc434)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc435)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc134)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc139)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc140)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc141)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc141)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc142)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc129)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc436)
    cir.call @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12_good() : () -> () loc(#loc144)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc130)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc131)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc437)
    cir.call @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12_bad() : () -> () loc(#loc148)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc132)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc151)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc438)
    cir.return %17 : !s32i loc(#loc438)
  } loc(#loc433)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc440)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc157)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc157)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc157)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc157)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc157)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc157)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc157)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc441)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc443)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc443)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc161)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc161)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc446)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc172)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc448)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc174)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc175)
              %16 = cir.const #cir.int<2> : !s32i loc(#loc176)
              %17 = cir.binop(div, %15, %16) : !s32i loc(#loc449)
              %18 = cir.cmp(lt, %14, %17) : !s32i, !cir.bool loc(#loc450)
              cir.condition(%18) loc(#loc178)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc180)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
                %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc183)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc452)
              } loc(#loc451)
              cir.yield loc(#loc171)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc185)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc453)
              cir.yield loc(#loc447)
            } loc(#loc447)
          } loc(#loc447)
        } loc(#loc445)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc455)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc192)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc457)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc194)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc195)
              %16 = cir.const #cir.int<2> : !s32i loc(#loc196)
              %17 = cir.binop(div, %15, %16) : !s32i loc(#loc458)
              %18 = cir.cmp(lt, %14, %17) : !s32i, !cir.bool loc(#loc459)
              cir.condition(%18) loc(#loc198)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc200)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc201)
                %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc202)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc203)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc461)
              } loc(#loc460)
              cir.yield loc(#loc191)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc204)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc205)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc462)
              cir.yield loc(#loc456)
            } loc(#loc456)
          } loc(#loc456)
        } loc(#loc454)
      } loc(#loc444)
    } loc(#loc442)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc464)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc464)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc208)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc208)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc467)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc219)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc469)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc222)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc470)
              cir.condition(%16) loc(#loc223)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc226)
                %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc228)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc472)
              } loc(#loc471)
              cir.yield loc(#loc218)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc229)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc230)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc473)
              cir.yield loc(#loc468)
            } loc(#loc468)
          } loc(#loc468)
        } loc(#loc466)
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc475)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc237)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc477)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc239)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc240)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc478)
              cir.condition(%16) loc(#loc241)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc243)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc245)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc246)
              } loc(#loc479)
              cir.yield loc(#loc236)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc247)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc248)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc480)
              cir.yield loc(#loc476)
            } loc(#loc476)
          } loc(#loc476)
        } loc(#loc474)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc482)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc255)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc484)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc257)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc258)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc485)
              cir.condition(%16) loc(#loc259)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc262)
                %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc263)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc264)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc487)
              } loc(#loc486)
              cir.yield loc(#loc254)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc265)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc266)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc488)
              cir.yield loc(#loc483)
            } loc(#loc483)
          } loc(#loc483)
        } loc(#loc481)
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc490)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc273)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc492)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc275)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc276)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc493)
              cir.condition(%16) loc(#loc277)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc279)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc280)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc281)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc282)
              } loc(#loc494)
              cir.yield loc(#loc272)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc283)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc284)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc495)
              cir.yield loc(#loc491)
            } loc(#loc491)
          } loc(#loc491)
        } loc(#loc489)
      } loc(#loc465)
    } loc(#loc463)
    cir.return loc(#loc154)
  } loc(#loc439)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc497)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc289)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc289)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc289)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc289)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc289)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc289)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc289)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc498)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc500)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc500)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc293)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc293)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc503)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc304)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc505)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc306)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc307)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc506)
              cir.condition(%16) loc(#loc308)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc310)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc311)
                %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc313)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc508)
              } loc(#loc507)
              cir.yield loc(#loc303)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc314)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc315)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc509)
              cir.yield loc(#loc504)
            } loc(#loc504)
          } loc(#loc504)
        } loc(#loc502)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc511)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc322)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc513)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc324)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc325)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc514)
              cir.condition(%16) loc(#loc326)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc328)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc329)
                %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc330)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc331)
                cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc516)
              } loc(#loc515)
              cir.yield loc(#loc321)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc332)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc333)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc517)
              cir.yield loc(#loc512)
            } loc(#loc512)
          } loc(#loc512)
        } loc(#loc510)
      } loc(#loc501)
    } loc(#loc499)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc519)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc519)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc336)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc336)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc522)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc347)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc524)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc349)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc350)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc525)
              cir.condition(%16) loc(#loc351)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc353)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc354)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc355)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc353)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc356)
              } loc(#loc526)
              cir.yield loc(#loc346)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc357)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc358)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc527)
              cir.yield loc(#loc523)
            } loc(#loc523)
          } loc(#loc523)
        } loc(#loc521)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc529)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc365)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc531)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc367)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc368)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc532)
              cir.condition(%16) loc(#loc369)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc371)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc372)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc373)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc371)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc374)
              } loc(#loc533)
              cir.yield loc(#loc364)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc375)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc376)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc534)
              cir.yield loc(#loc530)
            } loc(#loc530)
          } loc(#loc530)
        } loc(#loc528)
      } loc(#loc520)
    } loc(#loc518)
    cir.return loc(#loc286)
  } loc(#loc496)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":22:1)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":77:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":24:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":24:11)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":25:19)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":25:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":26:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":47:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":26:8)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":26:33)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":27:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":36:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":38:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":29:9)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":35:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":30:13)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":30:17)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:13)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":34:13)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:19)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:17)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:22)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:25)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:28)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:29)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:23)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":32:13)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":33:27)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":33:17)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":33:22)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":33:23)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:33)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":31:32)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":40:9)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":46:9)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":41:13)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":41:17)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":42:13)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":45:13)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":42:19)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":42:17)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":42:22)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":42:24)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":42:23)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":43:13)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":44:27)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":44:17)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":44:22)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":44:23)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":42:29)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":42:28)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":48:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":76:5)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":48:8)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":48:33)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":49:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":58:5)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":60:5)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":51:9)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":57:9)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":52:13)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":52:17)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":53:13)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":56:13)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":53:19)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":53:17)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":53:22)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":53:24)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":53:23)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":54:13)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":55:30)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":55:35)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":55:36)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":55:17)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":53:29)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":53:28)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":62:9)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":68:9)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":63:13)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":63:17)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":64:13)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":67:13)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":64:19)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":64:17)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":64:22)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":64:24)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":64:23)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":65:13)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":66:27)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":66:17)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":66:22)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":66:23)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":64:29)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":64:28)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":69:9)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":75:9)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":70:13)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":70:17)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":71:13)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":74:13)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":71:19)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":71:17)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":71:22)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":71:24)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":71:23)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":72:13)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":73:30)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":73:35)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":73:36)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":73:17)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":71:29)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":71:28)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":203:1)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":207:1)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":205:5)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":205:13)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":206:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":206:13)
#loc123 = loc("/usr/include/stdlib.h":575:1)
#loc124 = loc("/usr/include/stdlib.h":575:41)
#loc125 = loc("/usr/include/time.h":76:1)
#loc126 = loc("/usr/include/time.h":76:38)
#loc127 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc128 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":223:15)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":225:15)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":228:15)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":230:15)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":218:1)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":233:1)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":219:1)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":221:27)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":221:22)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":221:5)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":223:5)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":224:5)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":224:81)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":225:5)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":228:5)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":229:5)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":229:80)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":230:5)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":232:12)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":232:5)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":86:1)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":148:1)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":88:5)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":88:11)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":89:19)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":89:5)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":90:5)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":111:5)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":90:8)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":90:33)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":91:5)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":100:5)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":102:5)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":93:9)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":99:9)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":94:13)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":94:17)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:13)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":98:13)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:19)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:17)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:22)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:25)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:28)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:29)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:23)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":96:13)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":97:27)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":97:17)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":97:22)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":97:23)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:33)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":95:32)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":104:9)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":110:9)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":105:13)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":105:17)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:13)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":109:13)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:19)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:17)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:22)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:25)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:28)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:29)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:23)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":107:13)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":108:27)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":108:17)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":108:22)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":108:23)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:33)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":106:32)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":112:5)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":147:5)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":112:8)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":112:33)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":113:5)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":129:5)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":131:5)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":115:9)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":121:9)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":116:13)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":116:17)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":117:13)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":120:13)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":117:19)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":117:17)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":117:22)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":117:24)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":117:23)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":118:13)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":119:27)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":119:17)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":119:22)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":119:23)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":117:29)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":117:28)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":122:9)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":128:9)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":123:13)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":123:17)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":124:13)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":127:13)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":124:19)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":124:17)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":124:22)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":124:24)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":124:23)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":125:13)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":126:30)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":126:35)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":126:36)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":126:17)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":124:29)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":124:28)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":133:9)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":139:9)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":134:13)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":134:17)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":135:13)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":138:13)
#loc255 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":135:19)
#loc256 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":135:17)
#loc257 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":135:22)
#loc258 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":135:24)
#loc259 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":135:23)
#loc260 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":136:13)
#loc261 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":137:27)
#loc262 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":137:17)
#loc263 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":137:22)
#loc264 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":137:23)
#loc265 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":135:29)
#loc266 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":135:28)
#loc267 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":140:9)
#loc268 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":146:9)
#loc269 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":141:13)
#loc270 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":141:17)
#loc271 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":142:13)
#loc272 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":145:13)
#loc273 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":142:19)
#loc274 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":142:17)
#loc275 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":142:22)
#loc276 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":142:24)
#loc277 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":142:23)
#loc278 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":143:13)
#loc279 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":144:30)
#loc280 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":144:35)
#loc281 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":144:36)
#loc282 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":144:17)
#loc283 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":142:29)
#loc284 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":142:28)
#loc285 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":153:1)
#loc286 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":201:1)
#loc287 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":155:5)
#loc288 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":155:11)
#loc289 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":156:19)
#loc290 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":156:5)
#loc291 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":157:5)
#loc292 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":178:5)
#loc293 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":157:8)
#loc294 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":157:33)
#loc295 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":158:5)
#loc296 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":167:5)
#loc297 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":169:5)
#loc298 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":160:9)
#loc299 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":166:9)
#loc300 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":161:13)
#loc301 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":161:17)
#loc302 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":162:13)
#loc303 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":165:13)
#loc304 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":162:19)
#loc305 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":162:17)
#loc306 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":162:22)
#loc307 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":162:24)
#loc308 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":162:23)
#loc309 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":163:13)
#loc310 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":164:27)
#loc311 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":164:17)
#loc312 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":164:22)
#loc313 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":164:23)
#loc314 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":162:29)
#loc315 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":162:28)
#loc316 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":171:9)
#loc317 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":177:9)
#loc318 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":172:13)
#loc319 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":172:17)
#loc320 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":173:13)
#loc321 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":176:13)
#loc322 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":173:19)
#loc323 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":173:17)
#loc324 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":173:22)
#loc325 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":173:24)
#loc326 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":173:23)
#loc327 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":174:13)
#loc328 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":175:27)
#loc329 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":175:17)
#loc330 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":175:22)
#loc331 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":175:23)
#loc332 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":173:29)
#loc333 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":173:28)
#loc334 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":179:5)
#loc335 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":200:5)
#loc336 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":179:8)
#loc337 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":179:33)
#loc338 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":180:5)
#loc339 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":189:5)
#loc340 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":191:5)
#loc341 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":182:9)
#loc342 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":188:9)
#loc343 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":183:13)
#loc344 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":183:17)
#loc345 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":184:13)
#loc346 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":187:13)
#loc347 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":184:19)
#loc348 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":184:17)
#loc349 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":184:22)
#loc350 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":184:24)
#loc351 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":184:23)
#loc352 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":185:13)
#loc353 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":186:30)
#loc354 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":186:35)
#loc355 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":186:36)
#loc356 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":186:17)
#loc357 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":184:29)
#loc358 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":184:28)
#loc359 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":193:9)
#loc360 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":199:9)
#loc361 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":194:13)
#loc362 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":194:17)
#loc363 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":195:13)
#loc364 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":198:13)
#loc365 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":195:19)
#loc366 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":195:17)
#loc367 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":195:22)
#loc368 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":195:24)
#loc369 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":195:23)
#loc370 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":196:13)
#loc371 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":197:30)
#loc372 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":197:35)
#loc373 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":197:36)
#loc374 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":197:17)
#loc375 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":195:29)
#loc376 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_12.c":195:28)
#loc377 = loc(fused[#loc1, #loc2])
#loc378 = loc(fused[#loc3, #loc4])
#loc379 = loc(fused[#loc5, #loc6])
#loc380 = loc(fused[#loc7, #loc8])
#loc381 = loc(fused[#loc10, #loc9])
#loc382 = loc(fused[#loc11, #loc12])
#loc383 = loc(fused[#loc13, #loc14])
#loc384 = loc(fused[#loc15, #loc16, #loc17, #loc12])
#loc385 = loc(fused[#loc18, #loc19])
#loc386 = loc(fused[#loc20, #loc21])
#loc387 = loc(fused[#loc22, #loc23])
#loc388 = loc(fused[#loc25, #loc24])
#loc389 = loc(fused[#loc27, #loc28])
#loc390 = loc(fused[#loc26, #loc29])
#loc391 = loc(fused[#loc31, #loc23])
#loc392 = loc(fused[#loc33, #loc32])
#loc393 = loc(fused[#loc37, #loc36])
#loc394 = loc(fused[#loc38, #loc39])
#loc395 = loc(fused[#loc40, #loc41])
#loc396 = loc(fused[#loc42, #loc43])
#loc397 = loc(fused[#loc45, #loc44])
#loc398 = loc(fused[#loc46, #loc47])
#loc399 = loc(fused[#loc49, #loc43])
#loc400 = loc(fused[#loc51, #loc50])
#loc401 = loc(fused[#loc55, #loc54])
#loc402 = loc(fused[#loc56, #loc57])
#loc403 = loc(fused[#loc58, #loc59])
#loc404 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc405 = loc(fused[#loc63, #loc64])
#loc406 = loc(fused[#loc65, #loc66])
#loc407 = loc(fused[#loc67, #loc68])
#loc408 = loc(fused[#loc70, #loc69])
#loc409 = loc(fused[#loc71, #loc72])
#loc410 = loc(fused[#loc74, #loc68])
#loc411 = loc(fused[#loc80, #loc79])
#loc412 = loc(fused[#loc81, #loc82])
#loc413 = loc(fused[#loc83, #loc84])
#loc414 = loc(fused[#loc85, #loc86])
#loc415 = loc(fused[#loc88, #loc87])
#loc416 = loc(fused[#loc89, #loc90])
#loc417 = loc(fused[#loc92, #loc86])
#loc418 = loc(fused[#loc94, #loc93])
#loc419 = loc(fused[#loc98, #loc97])
#loc420 = loc(fused[#loc99, #loc100])
#loc421 = loc(fused[#loc101, #loc102])
#loc422 = loc(fused[#loc103, #loc104])
#loc423 = loc(fused[#loc106, #loc105])
#loc424 = loc(fused[#loc107, #loc108])
#loc425 = loc(fused[#loc110, #loc104])
#loc426 = loc(fused[#loc116, #loc115])
#loc427 = loc(fused[#loc117, #loc118])
#loc428 = loc(fused[#loc119, #loc120])
#loc429 = loc(fused[#loc121, #loc122])
#loc430 = loc(fused[#loc123, #loc124])
#loc431 = loc(fused[#loc125, #loc126])
#loc432 = loc(fused[#loc127, #loc128])
#loc433 = loc(fused[#loc133, #loc134])
#loc436 = loc(fused[#loc144, #loc145])
#loc437 = loc(fused[#loc148, #loc149])
#loc438 = loc(fused[#loc152, #loc151])
#loc439 = loc(fused[#loc153, #loc154])
#loc440 = loc(fused[#loc155, #loc156])
#loc441 = loc(fused[#loc158, #loc157])
#loc442 = loc(fused[#loc159, #loc160])
#loc443 = loc(fused[#loc161, #loc162])
#loc444 = loc(fused[#loc163, #loc164, #loc165, #loc160])
#loc445 = loc(fused[#loc166, #loc167])
#loc446 = loc(fused[#loc168, #loc169])
#loc447 = loc(fused[#loc170, #loc171])
#loc448 = loc(fused[#loc173, #loc172])
#loc449 = loc(fused[#loc175, #loc176])
#loc450 = loc(fused[#loc174, #loc177])
#loc451 = loc(fused[#loc179, #loc171])
#loc452 = loc(fused[#loc181, #loc180])
#loc453 = loc(fused[#loc185, #loc184])
#loc454 = loc(fused[#loc186, #loc187])
#loc455 = loc(fused[#loc188, #loc189])
#loc456 = loc(fused[#loc190, #loc191])
#loc457 = loc(fused[#loc193, #loc192])
#loc458 = loc(fused[#loc195, #loc196])
#loc459 = loc(fused[#loc194, #loc197])
#loc460 = loc(fused[#loc199, #loc191])
#loc461 = loc(fused[#loc201, #loc200])
#loc462 = loc(fused[#loc205, #loc204])
#loc463 = loc(fused[#loc206, #loc207])
#loc464 = loc(fused[#loc208, #loc209])
#loc465 = loc(fused[#loc210, #loc211, #loc212, #loc207])
#loc466 = loc(fused[#loc213, #loc214])
#loc467 = loc(fused[#loc215, #loc216])
#loc468 = loc(fused[#loc217, #loc218])
#loc469 = loc(fused[#loc220, #loc219])
#loc470 = loc(fused[#loc221, #loc222])
#loc471 = loc(fused[#loc224, #loc218])
#loc472 = loc(fused[#loc226, #loc225])
#loc473 = loc(fused[#loc230, #loc229])
#loc474 = loc(fused[#loc231, #loc232])
#loc475 = loc(fused[#loc233, #loc234])
#loc476 = loc(fused[#loc235, #loc236])
#loc477 = loc(fused[#loc238, #loc237])
#loc478 = loc(fused[#loc239, #loc240])
#loc479 = loc(fused[#loc242, #loc236])
#loc480 = loc(fused[#loc248, #loc247])
#loc481 = loc(fused[#loc249, #loc250])
#loc482 = loc(fused[#loc251, #loc252])
#loc483 = loc(fused[#loc253, #loc254])
#loc484 = loc(fused[#loc256, #loc255])
#loc485 = loc(fused[#loc257, #loc258])
#loc486 = loc(fused[#loc260, #loc254])
#loc487 = loc(fused[#loc262, #loc261])
#loc488 = loc(fused[#loc266, #loc265])
#loc489 = loc(fused[#loc267, #loc268])
#loc490 = loc(fused[#loc269, #loc270])
#loc491 = loc(fused[#loc271, #loc272])
#loc492 = loc(fused[#loc274, #loc273])
#loc493 = loc(fused[#loc275, #loc276])
#loc494 = loc(fused[#loc278, #loc272])
#loc495 = loc(fused[#loc284, #loc283])
#loc496 = loc(fused[#loc285, #loc286])
#loc497 = loc(fused[#loc287, #loc288])
#loc498 = loc(fused[#loc290, #loc289])
#loc499 = loc(fused[#loc291, #loc292])
#loc500 = loc(fused[#loc293, #loc294])
#loc501 = loc(fused[#loc295, #loc296, #loc297, #loc292])
#loc502 = loc(fused[#loc298, #loc299])
#loc503 = loc(fused[#loc300, #loc301])
#loc504 = loc(fused[#loc302, #loc303])
#loc505 = loc(fused[#loc305, #loc304])
#loc506 = loc(fused[#loc306, #loc307])
#loc507 = loc(fused[#loc309, #loc303])
#loc508 = loc(fused[#loc311, #loc310])
#loc509 = loc(fused[#loc315, #loc314])
#loc510 = loc(fused[#loc316, #loc317])
#loc511 = loc(fused[#loc318, #loc319])
#loc512 = loc(fused[#loc320, #loc321])
#loc513 = loc(fused[#loc323, #loc322])
#loc514 = loc(fused[#loc324, #loc325])
#loc515 = loc(fused[#loc327, #loc321])
#loc516 = loc(fused[#loc329, #loc328])
#loc517 = loc(fused[#loc333, #loc332])
#loc518 = loc(fused[#loc334, #loc335])
#loc519 = loc(fused[#loc336, #loc337])
#loc520 = loc(fused[#loc338, #loc339, #loc340, #loc335])
#loc521 = loc(fused[#loc341, #loc342])
#loc522 = loc(fused[#loc343, #loc344])
#loc523 = loc(fused[#loc345, #loc346])
#loc524 = loc(fused[#loc348, #loc347])
#loc525 = loc(fused[#loc349, #loc350])
#loc526 = loc(fused[#loc352, #loc346])
#loc527 = loc(fused[#loc358, #loc357])
#loc528 = loc(fused[#loc359, #loc360])
#loc529 = loc(fused[#loc361, #loc362])
#loc530 = loc(fused[#loc363, #loc364])
#loc531 = loc(fused[#loc366, #loc365])
#loc532 = loc(fused[#loc367, #loc368])
#loc533 = loc(fused[#loc370, #loc364])
#loc534 = loc(fused[#loc376, #loc375])
