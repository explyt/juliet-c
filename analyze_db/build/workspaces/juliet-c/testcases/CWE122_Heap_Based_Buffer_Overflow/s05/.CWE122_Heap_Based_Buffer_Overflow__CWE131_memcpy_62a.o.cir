!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_629badSourceERPi(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc60)
  cir.func private @printIntLine(!s32i) loc(#loc61)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc62)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc64)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc65)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_629badSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc13)
    cir.scope {
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc67)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc67)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc67)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc18)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc18)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc19)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc19)
      %8 = cir.const #cir.int<10> : !s32i loc(#loc20)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc68)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc69)
      cir.libc.memcpy %11 bytes from %7 to %5 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc70)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc27)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc28)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc29)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc30)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc29)
    } loc(#loc66)
    cir.return loc(#loc8)
  } loc(#loc63)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_6213goodG2BSourceERPi(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc71)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc73)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc74)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_6213goodG2BSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc39)
    cir.scope {
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc76)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc76)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc76)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc44)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc45)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc45)
      %8 = cir.const #cir.int<10> : !s32i loc(#loc46)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc46)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc77)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc78)
      cir.libc.memcpy %11 bytes from %7 to %5 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc79)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc52)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc53)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc51)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc54)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc55)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc56)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    } loc(#loc75)
    cir.return loc(#loc34)
  } loc(#loc72)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62L7goodG2BEv() : () -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc80)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":25:27)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":27:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":39:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":29:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":29:11)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":30:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":30:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":31:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":32:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":38:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":33:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":33:28)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":35:16)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":35:22)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":35:30)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":35:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":35:43)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":35:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":35:44)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":36:22)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":36:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":36:28)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":36:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":37:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":37:14)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":46:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":46:31)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":48:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":60:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":50:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":50:11)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":51:12)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":51:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":52:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":53:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":59:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":54:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":54:28)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":56:16)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":56:22)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":56:30)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":56:33)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":56:43)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":56:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":56:44)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":57:22)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":57:27)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":57:28)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":57:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":58:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":58:14)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":62:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":65:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_62a.cpp":64:5)
#loc60 = loc(fused[#loc1, #loc2])
#loc61 = loc(fused[#loc3, #loc4])
#loc62 = loc(fused[#loc5, #loc6])
#loc63 = loc(fused[#loc7, #loc8])
#loc64 = loc(fused[#loc9, #loc10])
#loc65 = loc(fused[#loc12, #loc11])
#loc66 = loc(fused[#loc14, #loc15])
#loc67 = loc(fused[#loc16, #loc17])
#loc68 = loc(fused[#loc21, #loc22])
#loc69 = loc(fused[#loc20, #loc22])
#loc70 = loc(fused[#loc23, #loc24])
#loc71 = loc(fused[#loc31, #loc32])
#loc72 = loc(fused[#loc33, #loc34])
#loc73 = loc(fused[#loc35, #loc36])
#loc74 = loc(fused[#loc38, #loc37])
#loc75 = loc(fused[#loc40, #loc41])
#loc76 = loc(fused[#loc42, #loc43])
#loc77 = loc(fused[#loc47, #loc48])
#loc78 = loc(fused[#loc46, #loc48])
#loc79 = loc(fused[#loc49, #loc50])
#loc80 = loc(fused[#loc57, #loc58])
