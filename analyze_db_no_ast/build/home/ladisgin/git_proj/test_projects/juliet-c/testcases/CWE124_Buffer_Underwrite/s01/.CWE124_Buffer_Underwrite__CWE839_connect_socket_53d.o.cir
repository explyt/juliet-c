!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":44:66)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":44:70)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":72:70)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":72:74)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":96:70)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":96:74)
#true = #cir.bool<true> : !cir.bool
#loc124 = loc(fused[#loc8, #loc9])
#loc138 = loc(fused[#loc44, #loc45])
#loc152 = loc(fused[#loc82, #loc83])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc121)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc5)
  cir.func  @CWE124_Buffer_Underwrite__CWE839_connect_socket_53d_badSink(%arg0: !s32i loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc124)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc126)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc127)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc127)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc127)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %5 = cir.const #cir.int<10> : !s32i loc(#loc20)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !s32i loc(#loc129)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc21)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc27)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc27)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc131)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc30)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc133)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc33)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc134)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc34)
              cir.condition(%16) loc(#loc34)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc36)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc37)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc37)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc37)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc38)
              } loc(#loc135)
              cir.yield loc(#loc29)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc40)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc136)
              cir.yield loc(#loc132)
            } loc(#loc132)
          } loc(#loc132)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc5)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc41)
        } loc(#loc130)
      } loc(#loc128)
    } loc(#loc125)
    cir.return loc(#loc7)
  } loc(#loc123)
  cir.func  @CWE124_Buffer_Underwrite__CWE839_connect_socket_53d_goodG2BSink(%arg0: !s32i loc(fused[#loc44, #loc45])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc138)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc140)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc141)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc141)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc141)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
        %5 = cir.const #cir.int<10> : !s32i loc(#loc56)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !s32i loc(#loc143)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc57)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc61)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc63)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc63)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc145)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc66)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc147)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc68)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc69)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc148)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc70)
              cir.condition(%16) loc(#loc70)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc73)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc73)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc73)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc74)
              } loc(#loc149)
              cir.yield loc(#loc65)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc76)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc150)
              cir.yield loc(#loc146)
            } loc(#loc146)
          } loc(#loc146)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc77)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc77)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc78)
        } loc(#loc144)
      } loc(#loc142)
    } loc(#loc139)
    cir.return loc(#loc43)
  } loc(#loc137)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc79)
  cir.func  @CWE124_Buffer_Underwrite__CWE839_connect_socket_53d_goodB2GSink(%arg0: !s32i loc(fused[#loc82, #loc83])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc152)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc154)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc155)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc155)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc155)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc94)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !s32i loc(#loc157)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc95)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc98)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc158)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc100)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc96)
            cir.yield %14 : !cir.bool loc(#loc96)
          }, false {
            %14 = cir.const #false loc(#loc96)
            cir.yield %14 : !cir.bool loc(#loc96)
          }) : (!cir.bool) -> !cir.bool loc(#loc96)
          cir.yield %13 : !cir.bool loc(#loc96)
        }, false {
          %9 = cir.const #false loc(#loc96)
          cir.yield %9 : !cir.bool loc(#loc96)
        }) : (!cir.bool) -> !cir.bool loc(#loc96)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc104)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc106)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc106)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc160)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc109)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc162)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc112)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc163)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc113)
              cir.condition(%17) loc(#loc113)
            } body {
              cir.scope {
                %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc116)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc116)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc117)
              } loc(#loc164)
              cir.yield loc(#loc108)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc119)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc165)
              cir.yield loc(#loc161)
            } loc(#loc161)
          } loc(#loc161)
        } else {
          %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc79)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc79)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc120)
        } loc(#loc159)
      } loc(#loc156)
    } loc(#loc153)
    cir.return loc(#loc81)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":62:23)
#loc6 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":44:1)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":65:1)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":45:1)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":46:5)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":64:5)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":47:9)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":47:13)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":48:9)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":48:30)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":51:9)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":63:9)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":51:13)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":51:20)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":51:18)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":52:9)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":59:9)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":61:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":53:28)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":53:20)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":53:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":55:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":58:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":55:21)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":55:17)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":55:24)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":55:28)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":55:26)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":56:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":57:37)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":57:30)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":57:17)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":55:33)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":55:32)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":62:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":72:1)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":93:1)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":73:1)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":74:5)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":92:5)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":75:9)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":75:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":76:9)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":76:30)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":79:9)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":91:9)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":79:13)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":79:20)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":79:18)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":80:9)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":87:9)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":89:9)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":81:28)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":81:20)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":81:13)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":83:13)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":86:13)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":83:21)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":83:17)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":83:24)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":83:28)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":83:26)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":84:13)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":85:37)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":85:30)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":85:17)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":83:33)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":83:32)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":90:23)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":90:13)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":113:23)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":96:1)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":116:1)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":97:1)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":98:5)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":115:5)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":99:9)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":99:13)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":100:9)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":100:30)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":102:9)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":114:9)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":102:13)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":102:21)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":102:18)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":102:23)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":102:26)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":102:34)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":102:36)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":102:31)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":103:9)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":110:9)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":112:9)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":104:28)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":104:20)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":104:13)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":106:13)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":109:13)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":106:21)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":106:17)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":106:24)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":106:28)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":106:26)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":107:13)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":108:37)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":108:30)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":108:17)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":106:33)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":106:32)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_53d.c":113:13)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc6, #loc7])
#loc125 = loc(fused[#loc11, #loc12])
#loc126 = loc(fused[#loc13, #loc14])
#loc127 = loc(fused[#loc15, #loc16])
#loc128 = loc(fused[#loc17, #loc18])
#loc129 = loc(fused[#loc19, #loc20])
#loc130 = loc(fused[#loc22, #loc23, #loc24, #loc18])
#loc131 = loc(fused[#loc27, #loc25])
#loc132 = loc(fused[#loc28, #loc29])
#loc133 = loc(fused[#loc31, #loc30])
#loc134 = loc(fused[#loc32, #loc33])
#loc135 = loc(fused[#loc35, #loc29])
#loc136 = loc(fused[#loc40, #loc39])
#loc137 = loc(fused[#loc42, #loc43])
#loc139 = loc(fused[#loc47, #loc48])
#loc140 = loc(fused[#loc49, #loc50])
#loc141 = loc(fused[#loc51, #loc52])
#loc142 = loc(fused[#loc53, #loc54])
#loc143 = loc(fused[#loc55, #loc56])
#loc144 = loc(fused[#loc58, #loc59, #loc60, #loc54])
#loc145 = loc(fused[#loc63, #loc61])
#loc146 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc67, #loc66])
#loc148 = loc(fused[#loc68, #loc69])
#loc149 = loc(fused[#loc71, #loc65])
#loc150 = loc(fused[#loc76, #loc75])
#loc151 = loc(fused[#loc80, #loc81])
#loc153 = loc(fused[#loc85, #loc86])
#loc154 = loc(fused[#loc87, #loc88])
#loc155 = loc(fused[#loc89, #loc90])
#loc156 = loc(fused[#loc91, #loc92])
#loc157 = loc(fused[#loc93, #loc94])
#loc158 = loc(fused[#loc97, #loc99])
#loc159 = loc(fused[#loc101, #loc102, #loc103, #loc92])
#loc160 = loc(fused[#loc106, #loc104])
#loc161 = loc(fused[#loc107, #loc108])
#loc162 = loc(fused[#loc110, #loc109])
#loc163 = loc(fused[#loc111, #loc112])
#loc164 = loc(fused[#loc114, #loc108])
#loc165 = loc(fused[#loc119, #loc118])
