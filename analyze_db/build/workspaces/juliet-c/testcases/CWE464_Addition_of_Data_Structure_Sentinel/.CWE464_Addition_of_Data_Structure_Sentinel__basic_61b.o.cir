!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":21:70)
#loc10 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":21:75)
#loc32 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":39:74)
#loc33 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":39:79)
#loc43 = loc(fused[#loc9, #loc10])
#loc51 = loc(fused[#loc32, #loc33])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE464_Addition_of_Data_Structure_Sentinel/CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @getc(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc39)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc40)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
  cir.func @CWE464_Addition_of_Data_Structure_Sentinel__basic_61b_badSource(%arg0: !s8i loc(fused[#loc9, #loc10])) -> !s8i extra(#fn_attr1) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc43)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["__retval"] {alignment = 1 : i64} loc(#loc8)
    cir.store %arg0, %0 : !s8i, !cir.ptr<!s8i> loc(#loc11)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 2>, !cir.ptr<!cir.array<!s8i x 2>>, ["charArraySource"] {alignment = 1 : i64} loc(#loc45)
      %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc40)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc16)
      %7 = cir.call @getc(%6) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc17)
      %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc17)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc18)
      %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc19)
      %11 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc19)
      cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc46)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc21)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc21)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc23)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc23)
      cir.store %13, %16 : !s8i, !cir.ptr<!s8i> loc(#loc47)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc24)
      %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc25)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc25)
      cir.store %19, %0 : !s8i, !cir.ptr<!s8i> loc(#loc48)
    } loc(#loc44)
    %2 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc28)
    cir.store %2, %1 : !s8i, !cir.ptr<!s8i> loc(#loc49)
    %3 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc49)
    cir.return %3 : !s8i loc(#loc49)
  } loc(#loc42)
  cir.func @CWE464_Addition_of_Data_Structure_Sentinel__basic_61b_goodG2BSource(%arg0: !s8i loc(fused[#loc32, #loc33])) -> !s8i extra(#fn_attr1) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc51)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["__retval"] {alignment = 1 : i64} loc(#loc31)
    cir.store %arg0, %0 : !s8i, !cir.ptr<!s8i> loc(#loc34)
    %2 = cir.const #cir.int<97> : !s32i loc(#loc35)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc35)
    cir.store %3, %0 : !s8i, !cir.ptr<!s8i> loc(#loc52)
    %4 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc37)
    cir.store %4, %1 : !s8i, !cir.ptr<!s8i> loc(#loc53)
    %5 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc53)
    cir.return %5 : !s8i loc(#loc53)
  } loc(#loc50)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE464_Addition_of_Data_Structure_Sentinel/CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":576:1)
#loc2 = loc("/usr/include/stdio.h":576:34)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":21:1)
#loc8 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":32:1)
#loc11 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":22:1)
#loc12 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":23:5)
#loc13 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":30:5)
#loc14 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":24:9)
#loc15 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":24:31)
#loc16 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":25:41)
#loc17 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":25:36)
#loc18 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":25:25)
#loc19 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":25:9)
#loc20 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":25:46)
#loc21 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":26:30)
#loc22 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":26:25)
#loc23 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":26:9)
#loc24 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":29:27)
#loc25 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":29:22)
#loc26 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":29:9)
#loc27 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":29:42)
#loc28 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":31:12)
#loc29 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":31:5)
#loc30 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":39:1)
#loc31 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":44:1)
#loc34 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":40:1)
#loc35 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":42:12)
#loc36 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":42:5)
#loc37 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":43:12)
#loc38 = loc("CWE464_Addition_of_Data_Structure_Sentinel__basic_61b.c":43:5)
#loc39 = loc(fused[#loc1, #loc2])
#loc40 = loc(fused[#loc3, #loc4])
#loc41 = loc(fused[#loc5, #loc6])
#loc42 = loc(fused[#loc7, #loc8])
#loc44 = loc(fused[#loc12, #loc13])
#loc45 = loc(fused[#loc14, #loc15])
#loc46 = loc(fused[#loc19, #loc20])
#loc47 = loc(fused[#loc23, #loc21])
#loc48 = loc(fused[#loc26, #loc27])
#loc49 = loc(fused[#loc29, #loc28])
#loc50 = loc(fused[#loc30, #loc31])
#loc52 = loc(fused[#loc36, #loc35])
#loc53 = loc(fused[#loc38, #loc37])
