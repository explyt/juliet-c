!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_block_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello from bad()\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_block_16_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc31)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc31)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %0 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc8)
    cir.brcond %1 ^bb3, ^bb6 loc(#loc8)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc32)
  ^bb4:  // pred: ^bb3
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc3)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc10)
    cir.br ^bb6 loc(#loc11)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc7)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc7)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc5)
  } loc(#loc30)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_block_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc34)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc14)
    cir.return loc(#loc13)
  } loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Inside the block\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc16)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Hello from good()\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc36)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc36)
  ^bb2:  // 2 preds: ^bb1, ^bb7
    %0 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %1 ^bb3, ^bb8 loc(#loc22)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc37)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc38)
  ^bb5:  // pred: ^bb4
    %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc16)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc17)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb8 loc(#loc28)
  ^bb7:  // no predecessors
    cir.br ^bb2 loc(#loc21)
  ^bb8:  // 2 preds: ^bb2, ^bb6
    cir.br ^bb9 loc(#loc21)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc19)
  } loc(#loc35)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_block_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":27:19)
#loc4 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":20:1)
#loc5 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":30:1)
#loc6 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":22:5)
#loc7 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":29:5)
#loc8 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":22:11)
#loc9 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":23:5)
#loc10 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":27:9)
#loc11 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":28:9)
#loc12 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":50:1)
#loc13 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":53:1)
#loc14 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":52:5)
#loc15 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":52:11)
#loc16 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":43:23)
#loc17 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":45:19)
#loc18 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":37:1)
#loc19 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":48:1)
#loc20 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":39:5)
#loc21 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":47:5)
#loc22 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":39:11)
#loc23 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":40:5)
#loc24 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":42:9)
#loc25 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":44:9)
#loc26 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":43:13)
#loc27 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":45:9)
#loc28 = loc("CWE398_Poor_Code_Quality__empty_block_16.c":46:9)
#loc29 = loc(fused[#loc1, #loc2])
#loc30 = loc(fused[#loc4, #loc5])
#loc31 = loc(fused[#loc6, #loc7])
#loc32 = loc(fused[#loc9, #loc7])
#loc33 = loc(fused[#loc12, #loc13])
#loc34 = loc(fused[#loc14, #loc15])
#loc35 = loc(fused[#loc18, #loc19])
#loc36 = loc(fused[#loc20, #loc21])
#loc37 = loc(fused[#loc23, #loc21])
#loc38 = loc(fused[#loc24, #loc25])
