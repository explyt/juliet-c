!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc106)
  cir.func private @printIntLine(!s32i) loc(#loc107)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_163badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc110)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc111)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc112)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc15)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc114)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %7 ^bb3, ^bb6 loc(#loc19)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc21)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %10 = cir.binop(div, %8, %9) : !s32i loc(#loc116)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc23)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc116)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.br ^bb6 loc(#loc25)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc18)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc118)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc28)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc119)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc120)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc121)
    %17 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %18 = cir.call @_Znam(%17) : (!u64i) -> !cir.ptr<!void> loc(#loc33)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc122)
    cir.store %20, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc123)
    cir.br ^bb9 loc(#loc124)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc39)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc125)
    cir.br ^bb10 loc(#loc124)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc42)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc126)
    cir.brcond %26 ^bb11, ^bb15 loc(#loc126)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc127)
  ^bb12:  // pred: ^bb11
    %27 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc47)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.br ^bb13 loc(#loc38)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc38)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %32 = cir.unary(inc, %31) : !u64i, !u64i loc(#loc49)
    cir.store %32, %1 : !u64i, !cir.ptr<!u64i> loc(#loc129)
    cir.br ^bb10 loc(#loc124)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc38)
  ^bb16:  // pred: ^bb15
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc52)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc53)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    cir.delete.array %37 : <!s32i> loc(#loc54)
    cir.br ^bb17 loc(#loc27)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc6)
  } loc(#loc108)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc133)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc134)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc65)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc136)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %6 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %7 ^bb3, ^bb6 loc(#loc69)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc137)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<20> : !s32i loc(#loc71)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.br ^bb6 loc(#loc73)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc68)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc68)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc139)
  ^bb8:  // pred: ^bb7
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc76)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc140)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc141)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc142)
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc81)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc143)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    cir.br ^bb9 loc(#loc145)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc87)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc146)
    cir.br ^bb10 loc(#loc145)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc89)
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc90)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc147)
    cir.brcond %22 ^bb11, ^bb15 loc(#loc147)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc148)
  ^bb12:  // pred: ^bb11
    %23 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc94)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc95)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.br ^bb13 loc(#loc86)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc86)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc96)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc97)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc150)
    cir.br ^bb10 loc(#loc145)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc86)
  ^bb16:  // pred: ^bb15
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc100)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc101)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
    cir.delete.array %33 : <!s32i> loc(#loc102)
    cir.br ^bb17 loc(#loc75)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc56)
  } loc(#loc130)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_164goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16L7goodG2BEv() : () -> () loc(#loc105)
    cir.return loc(#loc104)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":24:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":50:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":38:9)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":38:16)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":38:26)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":39:9)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":39:14)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":26:5)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":26:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":28:13)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":28:12)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":28:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":29:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":36:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":29:11)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":30:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":32:16)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":32:26)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":32:30)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":32:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":35:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":37:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":49:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":41:21)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":41:28)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":41:38)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":41:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":42:37)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":24:6)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":42:28)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":42:46)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":42:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":43:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":46:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":43:18)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":43:14)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":43:21)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":43:33)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":44:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":45:29)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":45:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":45:24)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":45:25)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":43:40)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":43:39)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":47:22)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":47:33)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":47:34)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":47:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":48:19)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":57:1)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":81:1)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":69:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":69:16)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":69:26)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":70:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":70:14)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":59:5)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":59:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":61:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":61:12)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":61:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":62:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":67:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":62:11)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":63:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":65:16)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":65:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":66:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":68:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":80:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":72:21)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":72:28)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":72:38)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":72:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":73:37)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":57:13)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":73:28)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":73:46)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":73:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":74:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":77:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":74:18)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":74:14)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":74:21)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":74:33)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":75:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":76:29)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":76:13)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":76:24)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":76:25)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":74:40)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":74:39)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":78:22)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":78:33)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":78:34)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":78:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":79:19)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":83:1)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":86:1)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_16.cpp":85:5)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc7, #loc8])
#loc110 = loc(fused[#loc7, #loc9])
#loc111 = loc(fused[#loc10, #loc11])
#loc112 = loc(fused[#loc12, #loc13])
#loc113 = loc(fused[#loc16, #loc14])
#loc114 = loc(fused[#loc17, #loc18])
#loc115 = loc(fused[#loc20, #loc18])
#loc116 = loc(fused[#loc21, #loc22])
#loc117 = loc(fused[#loc24, #loc23])
#loc118 = loc(fused[#loc26, #loc27])
#loc119 = loc(fused[#loc29, #loc30])
#loc120 = loc(fused[#loc28, #loc30])
#loc121 = loc(fused[#loc31, #loc30])
#loc122 = loc(fused[#loc34, #loc35])
#loc123 = loc(fused[#loc36, #loc35])
#loc124 = loc(fused[#loc37, #loc38])
#loc125 = loc(fused[#loc40, #loc39])
#loc126 = loc(fused[#loc41, #loc42])
#loc127 = loc(fused[#loc43, #loc38])
#loc128 = loc(fused[#loc45, #loc44])
#loc129 = loc(fused[#loc49, #loc48])
#loc130 = loc(fused[#loc55, #loc56])
#loc131 = loc(fused[#loc57, #loc58])
#loc132 = loc(fused[#loc57, #loc59])
#loc133 = loc(fused[#loc60, #loc61])
#loc134 = loc(fused[#loc62, #loc63])
#loc135 = loc(fused[#loc66, #loc64])
#loc136 = loc(fused[#loc67, #loc68])
#loc137 = loc(fused[#loc70, #loc68])
#loc138 = loc(fused[#loc72, #loc71])
#loc139 = loc(fused[#loc74, #loc75])
#loc140 = loc(fused[#loc77, #loc78])
#loc141 = loc(fused[#loc76, #loc78])
#loc142 = loc(fused[#loc79, #loc78])
#loc143 = loc(fused[#loc82, #loc83])
#loc144 = loc(fused[#loc84, #loc83])
#loc145 = loc(fused[#loc85, #loc86])
#loc146 = loc(fused[#loc88, #loc87])
#loc147 = loc(fused[#loc89, #loc90])
#loc148 = loc(fused[#loc91, #loc86])
#loc149 = loc(fused[#loc93, #loc92])
#loc150 = loc(fused[#loc97, #loc96])
#loc151 = loc(fused[#loc103, #loc104])
