!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":148:10)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":148:14)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":148:20)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":148:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc265 = loc(fused[#loc85, #loc86])
#loc266 = loc(fused[#loc87, #loc88])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc231)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc234)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc235)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc237)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
        cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc239)
      } loc(#loc238)
    } loc(#loc236)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc241)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc243)
        cir.scope {
          %5 = cir.const #cir.int<0> : !s32i loc(#loc28)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc28)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc245)
          cir.for : cond {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc31)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
            %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc246)
            cir.condition(%10) loc(#loc32)
          } body {
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc34)
              %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc35)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %8 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
              %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
              cir.store %7, %11 : !s32i, !cir.ptr<!s32i> loc(#loc248)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc38)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc39)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
              %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
              cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc249)
            } loc(#loc247)
            cir.yield loc(#loc27)
          } step {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %8 = cir.unary(inc, %7) : !u64i, !u64i loc(#loc43)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc250)
            cir.yield loc(#loc244)
          } loc(#loc244)
        } loc(#loc244)
      } loc(#loc242)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc252)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc50)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc50)
          cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc254)
          cir.for : cond {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc52)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc53)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc53)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc255)
            cir.condition(%13) loc(#loc54)
          } body {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
              %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc57)
              %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc59)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
              cir.copy %15 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
            } loc(#loc256)
            cir.yield loc(#loc49)
          } step {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc61)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc62)
            cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc257)
            cir.yield loc(#loc253)
          } loc(#loc253)
        } loc(#loc253)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!ty__twoIntsStruct>, %6 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
        cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc66)
      } loc(#loc251)
    } loc(#loc240)
    cir.return loc(#loc4)
  } loc(#loc232)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc259)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc258)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc261)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc262)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc266)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc92)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    cir.return %17 : !s32i loc(#loc269)
  } loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc103)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc271)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc272)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc273)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc114)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc115)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc275)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc119)
      } else {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
        cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc277)
      } loc(#loc276)
    } loc(#loc274)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc279)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc281)
        cir.scope {
          %5 = cir.const #cir.int<0> : !s32i loc(#loc132)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc132)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc283)
          cir.for : cond {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc134)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc135)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc135)
            %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc284)
            cir.condition(%10) loc(#loc136)
          } body {
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc138)
              %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc139)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %8 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
              %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
              cir.store %7, %11 : !s32i, !cir.ptr<!s32i> loc(#loc286)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc141)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc142)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
              %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
              cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc287)
            } loc(#loc285)
            cir.yield loc(#loc131)
          } step {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc144)
            %8 = cir.unary(inc, %7) : !u64i, !u64i loc(#loc145)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc288)
            cir.yield loc(#loc282)
          } loc(#loc282)
        } loc(#loc282)
      } loc(#loc280)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc290)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc152)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc152)
          cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc292)
          cir.for : cond {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc154)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc155)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc155)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc293)
            cir.condition(%13) loc(#loc156)
          } body {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
              %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc159)
              %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc161)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
              cir.copy %15 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
            } loc(#loc294)
            cir.yield loc(#loc151)
          } step {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc163)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc164)
            cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc295)
            cir.yield loc(#loc291)
          } loc(#loc291)
        } loc(#loc291)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc166)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!ty__twoIntsStruct>, %6 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
        cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc168)
      } loc(#loc289)
    } loc(#loc278)
    cir.return loc(#loc105)
  } loc(#loc270)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc297)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc298)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc299)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc179)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc180)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc301)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
        cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc303)
      } loc(#loc302)
    } loc(#loc300)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc305)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc307)
        cir.scope {
          %5 = cir.const #cir.int<0> : !s32i loc(#loc194)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc194)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc309)
          cir.for : cond {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc196)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc197)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc197)
            %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc310)
            cir.condition(%10) loc(#loc198)
          } body {
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc200)
              %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc201)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc202)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %8 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc202)
              %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
              cir.store %7, %11 : !s32i, !cir.ptr<!s32i> loc(#loc312)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc203)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc204)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc205)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc205)
              %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
              cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc313)
            } loc(#loc311)
            cir.yield loc(#loc193)
          } step {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc206)
            %8 = cir.unary(inc, %7) : !u64i, !u64i loc(#loc207)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc314)
            cir.yield loc(#loc308)
          } loc(#loc308)
        } loc(#loc308)
      } loc(#loc306)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc316)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc214)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc214)
          cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc318)
          cir.for : cond {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc216)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc217)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc217)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc319)
            cir.condition(%13) loc(#loc218)
          } body {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc220)
              %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc221)
              %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc222)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc223)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc224)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc224)
              cir.copy %15 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc222)
            } loc(#loc320)
            cir.yield loc(#loc213)
          } step {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc225)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc226)
            cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc321)
            cir.yield loc(#loc317)
          } loc(#loc317)
        } loc(#loc317)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc227)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc228)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!ty__twoIntsStruct>, %6 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc229)
        cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc230)
      } loc(#loc315)
    } loc(#loc304)
    cir.return loc(#loc170)
  } loc(#loc296)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":53:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":23:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":24:35)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":25:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":31:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":26:8)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":26:11)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":27:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":30:16)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":30:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":52:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":33:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":33:33)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":34:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":42:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":35:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":35:20)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":37:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":41:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":37:22)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":37:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":37:25)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":37:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":37:27)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":38:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":39:36)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":39:24)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":39:17)
#loc37 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":40:36)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":40:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":40:17)
#loc41 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":37:35)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":37:34)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":43:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":51:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":44:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":44:20)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":46:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":49:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":46:22)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":46:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":46:25)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":46:29)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":46:27)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":47:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":48:17)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":48:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":48:23)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":48:34)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":48:27)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":46:35)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":46:34)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":50:30)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":50:35)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":50:36)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":50:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":132:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":136:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":134:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":134:14)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":135:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":135:14)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc78 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":153:15)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":155:15)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":158:15)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":160:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":148:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":163:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":149:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":151:27)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":151:22)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":151:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":153:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":154:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":154:76)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":155:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":158:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":159:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":159:75)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":160:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":162:12)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":162:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":68:19)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":60:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":96:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":62:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":62:21)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":63:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":63:35)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":64:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":64:37)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":65:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":74:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":65:8)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":65:11)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":66:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":69:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":71:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":68:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":73:16)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":73:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":75:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":95:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":76:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":76:33)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":77:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":85:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":78:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":78:20)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":80:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":84:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":80:22)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":80:18)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":80:25)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":80:29)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":80:27)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":81:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":82:36)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":82:24)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":82:17)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":83:36)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":83:24)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":83:17)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":80:35)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":80:34)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":86:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":94:9)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":87:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":87:20)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":89:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":92:13)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":89:22)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":89:18)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":89:25)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":89:29)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":89:27)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":90:13)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":91:17)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":91:22)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":91:23)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":91:34)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":91:27)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":89:35)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":89:34)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":93:30)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":93:35)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":93:36)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":93:13)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":99:1)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":130:1)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":101:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":101:21)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":102:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":102:35)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":103:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":103:37)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":104:5)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":108:5)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":104:8)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":104:11)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":105:5)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":107:16)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":107:9)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":109:5)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":129:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":110:9)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":110:33)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":111:9)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":119:9)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":112:13)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":112:20)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":114:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":118:13)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":114:22)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":114:18)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":114:25)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":114:29)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":114:27)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":115:13)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":116:36)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":116:24)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":116:17)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":117:36)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":117:24)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":117:17)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":114:35)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":114:34)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":120:9)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":128:9)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":121:13)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":121:20)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":123:13)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":126:13)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":123:22)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":123:18)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":123:25)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":123:29)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":123:27)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":124:13)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":125:17)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":125:22)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":125:23)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":125:34)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":125:27)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":123:35)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":123:34)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":127:30)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":127:35)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":127:36)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_03.c":127:13)
#loc231 = loc(fused[#loc1, #loc2])
#loc232 = loc(fused[#loc3, #loc4])
#loc233 = loc(fused[#loc5, #loc6])
#loc234 = loc(fused[#loc7, #loc8])
#loc235 = loc(fused[#loc9, #loc10])
#loc236 = loc(fused[#loc11, #loc12])
#loc237 = loc(fused[#loc13, #loc14])
#loc238 = loc(fused[#loc15, #loc12])
#loc239 = loc(fused[#loc17, #loc16])
#loc240 = loc(fused[#loc18, #loc19])
#loc241 = loc(fused[#loc20, #loc21])
#loc242 = loc(fused[#loc22, #loc23])
#loc243 = loc(fused[#loc24, #loc25])
#loc244 = loc(fused[#loc26, #loc27])
#loc245 = loc(fused[#loc29, #loc28])
#loc246 = loc(fused[#loc30, #loc31])
#loc247 = loc(fused[#loc33, #loc27])
#loc248 = loc(fused[#loc36, #loc34])
#loc249 = loc(fused[#loc40, #loc38])
#loc250 = loc(fused[#loc43, #loc42])
#loc251 = loc(fused[#loc44, #loc45])
#loc252 = loc(fused[#loc46, #loc47])
#loc253 = loc(fused[#loc48, #loc49])
#loc254 = loc(fused[#loc51, #loc50])
#loc255 = loc(fused[#loc52, #loc53])
#loc256 = loc(fused[#loc55, #loc49])
#loc257 = loc(fused[#loc62, #loc61])
#loc258 = loc(fused[#loc67, #loc68])
#loc259 = loc(fused[#loc69, #loc70])
#loc260 = loc(fused[#loc71, #loc72])
#loc261 = loc(fused[#loc73, #loc74])
#loc262 = loc(fused[#loc75, #loc76])
#loc263 = loc(fused[#loc77, #loc78])
#loc264 = loc(fused[#loc83, #loc84])
#loc267 = loc(fused[#loc94, #loc95])
#loc268 = loc(fused[#loc98, #loc99])
#loc269 = loc(fused[#loc102, #loc101])
#loc270 = loc(fused[#loc104, #loc105])
#loc271 = loc(fused[#loc106, #loc107])
#loc272 = loc(fused[#loc108, #loc109])
#loc273 = loc(fused[#loc110, #loc111])
#loc274 = loc(fused[#loc112, #loc113])
#loc275 = loc(fused[#loc114, #loc115])
#loc276 = loc(fused[#loc116, #loc117, #loc118, #loc113])
#loc277 = loc(fused[#loc121, #loc120])
#loc278 = loc(fused[#loc122, #loc123])
#loc279 = loc(fused[#loc124, #loc125])
#loc280 = loc(fused[#loc126, #loc127])
#loc281 = loc(fused[#loc128, #loc129])
#loc282 = loc(fused[#loc130, #loc131])
#loc283 = loc(fused[#loc133, #loc132])
#loc284 = loc(fused[#loc134, #loc135])
#loc285 = loc(fused[#loc137, #loc131])
#loc286 = loc(fused[#loc140, #loc138])
#loc287 = loc(fused[#loc143, #loc141])
#loc288 = loc(fused[#loc145, #loc144])
#loc289 = loc(fused[#loc146, #loc147])
#loc290 = loc(fused[#loc148, #loc149])
#loc291 = loc(fused[#loc150, #loc151])
#loc292 = loc(fused[#loc153, #loc152])
#loc293 = loc(fused[#loc154, #loc155])
#loc294 = loc(fused[#loc157, #loc151])
#loc295 = loc(fused[#loc164, #loc163])
#loc296 = loc(fused[#loc169, #loc170])
#loc297 = loc(fused[#loc171, #loc172])
#loc298 = loc(fused[#loc173, #loc174])
#loc299 = loc(fused[#loc175, #loc176])
#loc300 = loc(fused[#loc177, #loc178])
#loc301 = loc(fused[#loc179, #loc180])
#loc302 = loc(fused[#loc181, #loc178])
#loc303 = loc(fused[#loc183, #loc182])
#loc304 = loc(fused[#loc184, #loc185])
#loc305 = loc(fused[#loc186, #loc187])
#loc306 = loc(fused[#loc188, #loc189])
#loc307 = loc(fused[#loc190, #loc191])
#loc308 = loc(fused[#loc192, #loc193])
#loc309 = loc(fused[#loc195, #loc194])
#loc310 = loc(fused[#loc196, #loc197])
#loc311 = loc(fused[#loc199, #loc193])
#loc312 = loc(fused[#loc202, #loc200])
#loc313 = loc(fused[#loc205, #loc203])
#loc314 = loc(fused[#loc207, #loc206])
#loc315 = loc(fused[#loc208, #loc209])
#loc316 = loc(fused[#loc210, #loc211])
#loc317 = loc(fused[#loc212, #loc213])
#loc318 = loc(fused[#loc215, #loc214])
#loc319 = loc(fused[#loc216, #loc217])
#loc320 = loc(fused[#loc219, #loc213])
#loc321 = loc(fused[#loc226, #loc225])
