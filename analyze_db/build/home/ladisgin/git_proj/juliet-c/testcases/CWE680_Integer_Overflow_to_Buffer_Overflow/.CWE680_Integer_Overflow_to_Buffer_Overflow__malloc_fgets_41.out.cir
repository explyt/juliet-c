!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":23:74)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":23:78)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":66:78)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":66:82)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":110:10)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":110:14)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":110:20)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":110:32)
#loc184 = loc(fused[#loc11, #loc12])
#loc215 = loc(fused[#loc93, #loc94])
#loc237 = loc(fused[#loc150, #loc151])
#loc238 = loc(fused[#loc152, #loc153])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc179)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc180)
  cir.func private @printIntLine(!s32i) loc(#loc181)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc182)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc184)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc186)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc187)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc188)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc189)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc190)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc193)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc33)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
        } loc(#loc194)
      } loc(#loc192)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc196)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc197)
          cir.condition(%22) loc(#loc40)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc45)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc199)
          } loc(#loc198)
          cir.yield loc(#loc35)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc47)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc200)
          cir.yield loc(#loc195)
        } loc(#loc195)
      } loc(#loc195)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc50)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc51)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc53)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    } loc(#loc185)
    cir.return loc(#loc10)
  } loc(#loc183)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc201)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc202)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc203)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc68)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc209)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc209)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc209)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc76)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc77)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc77)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc77)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc77)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc77)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc77)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc77)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc77)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc202)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc79)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc80)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc211)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc88)
        } loc(#loc212)
      } loc(#loc210)
    } loc(#loc208)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_badSink(%3) : (!s32i) -> () loc(#loc90)
    cir.return loc(#loc64)
  } loc(#loc205)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_goodG2BSink(%arg0: !s32i loc(fused[#loc93, #loc94])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc215)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc217)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc218)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc102)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc103)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc219)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc220)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc221)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc222)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc111)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc224)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc113)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc114)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc115)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
        } loc(#loc225)
      } loc(#loc223)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc118)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc118)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc227)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc120)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc121)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc228)
          cir.condition(%22) loc(#loc122)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc124)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc127)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc230)
          } loc(#loc229)
          cir.yield loc(#loc117)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc128)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc129)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc231)
          cir.yield loc(#loc226)
        } loc(#loc226)
      } loc(#loc226)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc131)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc132)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc130)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc133)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc134)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc135)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc134)
    } loc(#loc216)
    cir.return loc(#loc92)
  } loc(#loc214)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc138)
    cir.return loc(#loc137)
  } loc(#loc232)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc234)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc147)
  cir.func @main(%arg0: !s32i loc(fused[#loc150, #loc151]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc152, #loc153])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc238)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc149)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc154)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc155)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc156)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc156)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc157)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc144)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_good() : () -> () loc(#loc159)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc145)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc146)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc240)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_bad() : () -> () loc(#loc163)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc147)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc166)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    cir.return %17 : !s32i loc(#loc241)
  } loc(#loc236)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc173)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc175)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_goodG2BSink(%4) : (!s32i) -> () loc(#loc178)
    cir.return loc(#loc169)
  } loc(#loc242)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":23:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":39:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":24:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":25:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":38:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":26:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":26:16)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":27:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":27:14)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:35)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:42)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:52)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:53)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:43)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:27)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:34)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:40)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":35:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":33:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":34:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":34:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":34:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":34:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":36:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":36:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":36:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":36:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":37:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":37:14)
#loc54 = loc("/usr/include/stdio.h":654:1)
#loc55 = loc("/usr/include/stdio.h":655:59)
#loc56 = loc("/usr/include/stdio.h":149:1)
#loc57 = loc("/usr/include/stdio.h":149:14)
#loc58 = loc("/usr/include/stdlib.h":105:1)
#loc59 = loc("/usr/include/stdlib.h":106:33)
#loc60 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc61 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":56:23)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":41:1)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":60:1)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":43:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":43:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":45:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":45:12)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":45:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":46:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":58:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":47:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":47:45)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":57:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:19)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:32)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:49)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:59)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":50:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":53:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":55:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":52:25)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":52:20)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":52:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":52:36)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":56:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":59:73)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":59:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":66:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":82:1)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":67:1)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":68:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":81:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":69:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":69:16)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":70:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":70:14)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:28)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:35)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:42)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:52)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:53)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:43)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:27)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:33)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:34)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:40)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:39)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":78:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:18)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:14)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:21)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:33)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:23)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":76:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":77:29)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":77:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":77:24)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":77:25)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:40)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:39)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":79:22)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":79:33)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":79:34)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":79:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":80:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":80:14)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":95:1)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":98:1)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":97:5)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":97:13)
#loc140 = loc("/usr/include/stdlib.h":575:1)
#loc141 = loc("/usr/include/stdlib.h":575:41)
#loc142 = loc("/usr/include/time.h":76:1)
#loc143 = loc("/usr/include/time.h":76:38)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":115:15)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":117:15)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":120:15)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":122:15)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":110:1)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":125:1)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":111:1)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":113:27)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":113:22)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":113:5)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":115:5)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":116:5)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":116:70)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":117:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":120:5)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":121:5)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":121:69)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":122:5)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":124:12)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":124:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":85:1)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":93:1)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":87:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":87:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":89:13)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":89:12)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":89:5)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":91:12)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":91:5)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":92:77)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":92:5)
#loc179 = loc(fused[#loc1, #loc2])
#loc180 = loc(fused[#loc3, #loc4])
#loc181 = loc(fused[#loc5, #loc6])
#loc182 = loc(fused[#loc7, #loc8])
#loc183 = loc(fused[#loc9, #loc10])
#loc185 = loc(fused[#loc14, #loc15])
#loc186 = loc(fused[#loc16, #loc17])
#loc187 = loc(fused[#loc18, #loc19])
#loc188 = loc(fused[#loc22, #loc23])
#loc189 = loc(fused[#loc21, #loc23])
#loc190 = loc(fused[#loc20, #loc24])
#loc191 = loc(fused[#loc25, #loc24])
#loc192 = loc(fused[#loc26, #loc27])
#loc193 = loc(fused[#loc28, #loc29])
#loc194 = loc(fused[#loc30, #loc27])
#loc195 = loc(fused[#loc34, #loc35])
#loc196 = loc(fused[#loc37, #loc36])
#loc197 = loc(fused[#loc38, #loc39])
#loc198 = loc(fused[#loc41, #loc35])
#loc199 = loc(fused[#loc43, #loc42])
#loc200 = loc(fused[#loc47, #loc46])
#loc201 = loc(fused[#loc54, #loc55])
#loc202 = loc(fused[#loc56, #loc57])
#loc203 = loc(fused[#loc58, #loc59])
#loc204 = loc(fused[#loc60, #loc61])
#loc205 = loc(fused[#loc63, #loc64])
#loc206 = loc(fused[#loc65, #loc66])
#loc207 = loc(fused[#loc69, #loc67])
#loc208 = loc(fused[#loc70, #loc71])
#loc209 = loc(fused[#loc72, #loc73])
#loc210 = loc(fused[#loc74, #loc75])
#loc211 = loc(fused[#loc79, #loc80])
#loc212 = loc(fused[#loc81, #loc82, #loc83, #loc75])
#loc213 = loc(fused[#loc86, #loc87])
#loc214 = loc(fused[#loc91, #loc92])
#loc216 = loc(fused[#loc96, #loc97])
#loc217 = loc(fused[#loc98, #loc99])
#loc218 = loc(fused[#loc100, #loc101])
#loc219 = loc(fused[#loc104, #loc105])
#loc220 = loc(fused[#loc103, #loc105])
#loc221 = loc(fused[#loc102, #loc106])
#loc222 = loc(fused[#loc107, #loc106])
#loc223 = loc(fused[#loc108, #loc109])
#loc224 = loc(fused[#loc110, #loc111])
#loc225 = loc(fused[#loc112, #loc109])
#loc226 = loc(fused[#loc116, #loc117])
#loc227 = loc(fused[#loc119, #loc118])
#loc228 = loc(fused[#loc120, #loc121])
#loc229 = loc(fused[#loc123, #loc117])
#loc230 = loc(fused[#loc125, #loc124])
#loc231 = loc(fused[#loc129, #loc128])
#loc232 = loc(fused[#loc136, #loc137])
#loc233 = loc(fused[#loc138, #loc139])
#loc234 = loc(fused[#loc140, #loc141])
#loc235 = loc(fused[#loc142, #loc143])
#loc236 = loc(fused[#loc148, #loc149])
#loc239 = loc(fused[#loc159, #loc160])
#loc240 = loc(fused[#loc163, #loc164])
#loc241 = loc(fused[#loc167, #loc166])
#loc242 = loc(fused[#loc168, #loc169])
#loc243 = loc(fused[#loc170, #loc171])
#loc244 = loc(fused[#loc174, #loc172])
#loc245 = loc(fused[#loc176, #loc175])
