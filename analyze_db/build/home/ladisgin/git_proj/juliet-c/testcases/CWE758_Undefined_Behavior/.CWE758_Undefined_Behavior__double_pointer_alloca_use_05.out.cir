!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":104:10)
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":104:14)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":104:20)
#loc42 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":104:32)
#loc160 = loc(fused[#loc39, #loc40])
#loc161 = loc(fused[#loc41, #loc42])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc145)
  cir.func private @printDoubleLine(!cir.double) loc(#loc146)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_05_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc145)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc9)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc151)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc14)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
          %6 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
          %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc14)
          cir.store %8, %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc151)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc16)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc17)
          cir.store %10, %6 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc152)
          %11 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc18)
          %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc19)
          cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc20)
        } loc(#loc150)
      } loc(#loc149)
    } loc(#loc148)
    cir.return loc(#loc6)
  } loc(#loc147)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_05_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc153)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc156)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc36)
  cir.func @main(%arg0: !s32i loc(fused[#loc39, #loc40]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc41, #loc42])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc38)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc43)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc43)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc44)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc45)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc45)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc46)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc33)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %8 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_alloca_use_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call @CWE758_Undefined_Behavior__double_pointer_alloca_use_05_good() : () -> () loc(#loc48)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc34)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc35)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %13 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_alloca_use_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call @CWE758_Undefined_Behavior__double_pointer_alloca_use_05_bad() : () -> () loc(#loc52)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc36)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc55)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    cir.return %17 : !s32i loc(#loc164)
  } loc(#loc159)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc59)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc166)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc167)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc165)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc68)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc172)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc173)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc78)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc78)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc78)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc78)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc173)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc79)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc174)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc79)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc175)
          cir.store %12, %3 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc176)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc86)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc87)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!cir.double>, !cir.bool loc(#loc178)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc89)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc90)
              %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc91)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr1) loc(#loc89)
            } loc(#loc179)
          } loc(#loc177)
          %13 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc92)
          %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc93)
          cir.store %13, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc180)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc95)
          %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc96)
          cir.store %15, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc181)
          cir.scope {
            %17 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc183)
            %18 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc101)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc102)
            cir.store %19, %17 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc183)
            %20 = cir.load deref %17 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc103)
            %21 = cir.load %20 : !cir.ptr<!cir.double>, !cir.double loc(#loc104)
            cir.call @printDoubleLine(%21) : (!cir.double) -> () loc(#loc105)
          } loc(#loc182)
        } loc(#loc171)
      } loc(#loc170)
    } loc(#loc169)
    cir.return loc(#loc65)
  } loc(#loc168)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc145)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc110)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc188)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc189)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc117)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc117)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc117)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc117)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc189)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc118)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc190)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc118)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc191)
          cir.store %12, %3 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc192)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc125)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc126)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!cir.double>, !cir.bool loc(#loc194)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc129)
              %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc130)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr1) loc(#loc128)
            } loc(#loc195)
          } loc(#loc193)
          %13 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc131)
          %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc132)
          cir.store %13, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc196)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc134)
          %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc135)
          cir.store %15, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc197)
          cir.scope {
            %17 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
            %18 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc140)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc141)
            cir.store %19, %17 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc199)
            %20 = cir.load deref %17 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc142)
            %21 = cir.load %20 : !cir.ptr<!cir.double>, !cir.double loc(#loc143)
            cir.call @printDoubleLine(%21) : (!cir.double) -> () loc(#loc144)
          } loc(#loc198)
        } loc(#loc187)
      } loc(#loc186)
    } loc(#loc185)
    cir.return loc(#loc107)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":0:0)
#loc1 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":21:1)
#loc2 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":21:25)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc5 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":26:1)
#loc6 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":36:1)
#loc7 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":28:5)
#loc8 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":35:5)
#loc9 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":28:8)
#loc10 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":29:5)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":30:9)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":34:9)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":31:13)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":31:46)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":32:13)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":32:30)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":32:29)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":33:30)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":33:29)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":33:13)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":89:1)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":93:1)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":91:5)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":91:11)
#loc25 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":92:5)
#loc26 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":92:11)
#loc27 = loc("/usr/include/stdlib.h":575:1)
#loc28 = loc("/usr/include/stdlib.h":575:41)
#loc29 = loc("/usr/include/time.h":76:1)
#loc30 = loc("/usr/include/time.h":76:38)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":109:15)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":111:15)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":114:15)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":116:15)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":104:1)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":119:1)
#loc43 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":105:1)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":107:27)
#loc45 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":107:22)
#loc46 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":107:5)
#loc47 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":109:5)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":110:5)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":110:66)
#loc50 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":111:5)
#loc51 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":114:5)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":115:5)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":115:65)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":116:5)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":118:12)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":118:5)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":22:1)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":22:26)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":48:19)
#loc60 = loc("/usr/include/stdlib.h":672:1)
#loc61 = loc("/usr/include/stdlib.h":672:45)
#loc62 = loc("/usr/include/stdlib.h":756:1)
#loc63 = loc("/usr/include/stdlib.h":756:70)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":43:1)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":66:1)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":45:5)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":65:5)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":45:8)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":46:5)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":49:5)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":51:5)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":48:9)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":52:9)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":64:9)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":53:13)
#loc76 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":53:22)
#loc77 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":54:13)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":54:46)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":56:30)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":56:37)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":56:50)
#loc82 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":56:51)
#loc83 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":56:13)
#loc84 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":57:13)
#loc85 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":57:41)
#loc86 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":57:17)
#loc87 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":57:25)
#loc88 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":57:31)
#loc89 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":57:32)
#loc90 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":57:38)
#loc91 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":57:37)
#loc92 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":58:21)
#loc93 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":58:14)
#loc94 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":58:13)
#loc95 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":59:24)
#loc96 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":59:14)
#loc97 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":59:13)
#loc98 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":60:13)
#loc99 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":63:13)
#loc100 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":61:17)
#loc101 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":61:34)
#loc102 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":61:33)
#loc103 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":62:34)
#loc104 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":62:33)
#loc105 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":62:17)
#loc106 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":69:1)
#loc107 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":87:1)
#loc108 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":71:5)
#loc109 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":86:5)
#loc110 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":71:8)
#loc111 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":72:5)
#loc112 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":73:9)
#loc113 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":85:9)
#loc114 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":74:13)
#loc115 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":74:22)
#loc116 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":75:13)
#loc117 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":75:46)
#loc118 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":77:30)
#loc119 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":77:37)
#loc120 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":77:50)
#loc121 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":77:51)
#loc122 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":77:13)
#loc123 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":78:13)
#loc124 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":78:41)
#loc125 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":78:17)
#loc126 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":78:25)
#loc127 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":78:31)
#loc128 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":78:32)
#loc129 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":78:38)
#loc130 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":78:37)
#loc131 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":79:21)
#loc132 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":79:14)
#loc133 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":79:13)
#loc134 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":80:24)
#loc135 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":80:14)
#loc136 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":80:13)
#loc137 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":81:13)
#loc138 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":84:13)
#loc139 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":82:17)
#loc140 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":82:34)
#loc141 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":82:33)
#loc142 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":83:34)
#loc143 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":83:33)
#loc144 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_05.c":83:17)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc10, #loc8])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc15, #loc16])
#loc153 = loc(fused[#loc21, #loc22])
#loc154 = loc(fused[#loc23, #loc24])
#loc155 = loc(fused[#loc25, #loc26])
#loc156 = loc(fused[#loc27, #loc28])
#loc157 = loc(fused[#loc29, #loc30])
#loc158 = loc(fused[#loc31, #loc32])
#loc159 = loc(fused[#loc37, #loc38])
#loc162 = loc(fused[#loc48, #loc49])
#loc163 = loc(fused[#loc52, #loc53])
#loc164 = loc(fused[#loc56, #loc55])
#loc165 = loc(fused[#loc57, #loc58])
#loc166 = loc(fused[#loc60, #loc61])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc64, #loc65])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc69, #loc70, #loc71, #loc67])
#loc171 = loc(fused[#loc73, #loc74])
#loc172 = loc(fused[#loc75, #loc76])
#loc173 = loc(fused[#loc77, #loc78])
#loc174 = loc(fused[#loc80, #loc81])
#loc175 = loc(fused[#loc79, #loc82])
#loc176 = loc(fused[#loc83, #loc82])
#loc177 = loc(fused[#loc84, #loc85])
#loc178 = loc(fused[#loc86, #loc87])
#loc179 = loc(fused[#loc88, #loc85])
#loc180 = loc(fused[#loc94, #loc92])
#loc181 = loc(fused[#loc97, #loc95])
#loc182 = loc(fused[#loc98, #loc99])
#loc183 = loc(fused[#loc100, #loc101])
#loc184 = loc(fused[#loc106, #loc107])
#loc185 = loc(fused[#loc108, #loc109])
#loc186 = loc(fused[#loc111, #loc109])
#loc187 = loc(fused[#loc112, #loc113])
#loc188 = loc(fused[#loc114, #loc115])
#loc189 = loc(fused[#loc116, #loc117])
#loc190 = loc(fused[#loc119, #loc120])
#loc191 = loc(fused[#loc118, #loc121])
#loc192 = loc(fused[#loc122, #loc121])
#loc193 = loc(fused[#loc123, #loc124])
#loc194 = loc(fused[#loc125, #loc126])
#loc195 = loc(fused[#loc127, #loc124])
#loc196 = loc(fused[#loc133, #loc131])
#loc197 = loc(fused[#loc136, #loc134])
#loc198 = loc(fused[#loc137, #loc138])
#loc199 = loc(fused[#loc139, #loc140])
