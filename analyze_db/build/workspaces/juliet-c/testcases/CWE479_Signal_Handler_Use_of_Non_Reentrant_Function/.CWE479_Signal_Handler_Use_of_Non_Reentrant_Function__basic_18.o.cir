!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":20:23)
#loc12 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":20:27)
#loc44 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":35:24)
#loc45 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":35:28)
#loc62 = loc(fused[#loc11, #loc12])
#loc73 = loc(fused[#loc44, #loc45])
module @"/workspaces/juliet-c/testcases/CWE479_Signal_Handler_Use_of_Non_Reentrant_Function/CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc57)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc59)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc60)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc62)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["voidPointer", init] {alignment = 8 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc15)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    cir.store %5, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc63)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc20)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!void>, !cir.bool loc(#loc65)
      cir.if %10 {
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc23)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc25)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc66)
    } loc(#loc64)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc26)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc27)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc26)
    cir.return loc(#loc10)
  } loc(#loc61)
  cir.func no_proto @CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18_bad() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc68)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc32)
    %0 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %1 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
    %2 = cir.call @signal(%0, %1) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc35)
    cir.return loc(#loc29)
  } loc(#loc67)
  cir.func no_proto @CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc70)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc37)
  } loc(#loc69)
  cir.global "private" internal dsolocal @volatileSigAtomic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc71)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc44, #loc45])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %2 = cir.get_global @volatileSigAtomic : !cir.ptr<!s32i> loc(#loc71)
    cir.store volatile %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.return loc(#loc43)
  } loc(#loc72)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc76)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc53)
    %0 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %1 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc55)
    %2 = cir.call @signal(%0, %1) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc56)
    cir.return loc(#loc50)
  } loc(#loc75)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE479_Signal_Handler_Use_of_Non_Reentrant_Function/CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":0:0)
#loc1 = loc("/usr/include/signal.h":88:1)
#loc2 = loc("/usr/include/signal.h":89:6)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":20:1)
#loc10 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":31:1)
#loc13 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":28:5)
#loc14 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":28:34)
#loc15 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":21:1)
#loc16 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":28:25)
#loc17 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":28:32)
#loc18 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":29:5)
#loc19 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":29:40)
#loc20 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":29:9)
#loc21 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":29:24)
#loc22 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":29:30)
#loc23 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":29:31)
#loc24 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":29:37)
#loc25 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":29:36)
#loc26 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":30:5)
#loc27 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":30:10)
#loc28 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":46:1)
#loc29 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":51:1)
#loc30 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":48:5)
#loc31 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":48:10)
#loc32 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":49:1)
#loc33 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":50:12)
#loc34 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":50:20)
#loc35 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":50:5)
#loc36 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":65:1)
#loc37 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":68:1)
#loc38 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":67:5)
#loc39 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":67:11)
#loc40 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":33:1)
#loc41 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":33:50)
#loc42 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":35:1)
#loc43 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":42:1)
#loc46 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":36:1)
#loc47 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":41:25)
#loc48 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":41:5)
#loc49 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":58:1)
#loc50 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":63:1)
#loc51 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":60:5)
#loc52 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":60:10)
#loc53 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":61:1)
#loc54 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":62:12)
#loc55 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":62:20)
#loc56 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_18.c":62:5)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc59 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc7, #loc8])
#loc61 = loc(fused[#loc9, #loc10])
#loc63 = loc(fused[#loc13, #loc14])
#loc64 = loc(fused[#loc18, #loc19])
#loc65 = loc(fused[#loc20, #loc21])
#loc66 = loc(fused[#loc22, #loc19])
#loc67 = loc(fused[#loc28, #loc29])
#loc68 = loc(fused[#loc30, #loc31])
#loc69 = loc(fused[#loc36, #loc37])
#loc70 = loc(fused[#loc38, #loc39])
#loc71 = loc(fused[#loc40, #loc41])
#loc72 = loc(fused[#loc42, #loc43])
#loc74 = loc(fused[#loc48, #loc47])
#loc75 = loc(fused[#loc49, #loc50])
#loc76 = loc(fused[#loc51, #loc52])
