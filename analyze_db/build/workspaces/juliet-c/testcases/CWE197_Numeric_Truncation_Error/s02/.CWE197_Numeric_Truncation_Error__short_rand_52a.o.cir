!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":30:19)
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_52a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc34)
  cir.func private @CWE197_Numeric_Truncation_Error__short_rand_52b_badSink(!s16i) loc(#loc35)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_rand_52_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc37)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc10)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc38)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc12)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc12)
    cir.brcond %7 ^bb1, ^bb2 loc(#loc12)
  ^bb1:  // pred: ^bb0
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc12)
    %10 = cir.const #cir.int<30> : !s32i loc(#loc12)
    %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc12)
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc12)
    %14 = cir.const #cir.int<15> : !s32i loc(#loc12)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc12)
    %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc12)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc12)
    %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc12)
    cir.br ^bb3(%19 : !u32i) loc(#loc12)
  ^bb2:  // pred: ^bb0
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc12)
    %22 = cir.const #cir.int<30> : !s32i loc(#loc12)
    %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc12)
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc12)
    %26 = cir.const #cir.int<15> : !s32i loc(#loc12)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc12)
    %28 = cir.binop(xor, %23, %27) : !u32i loc(#loc12)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc12)
    %31 = cir.binop(xor, %28, %30) : !u32i loc(#loc12)
    %32 = cir.unary(minus, %31) : !u32i, !u32i loc(#loc12)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc12)
    %35 = cir.binop(sub, %32, %34) : !u32i loc(#loc12)
    cir.br ^bb3(%35 : !u32i) loc(#loc12)
  ^bb3(%36: !u32i loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":30:19)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // pred: ^bb3
    %37 = cir.cast(integral, %36 : !u32i), !s32i loc(#loc12)
    %38 = cir.cast(integral, %37 : !s32i), !s16i loc(#loc12)
    cir.store %38, %0 : !s16i, !cir.ptr<!s16i> loc(#loc39)
    %39 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc14)
    cir.call @CWE197_Numeric_Truncation_Error__short_rand_52b_badSink(%39) : (!s16i) -> () loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc36)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_rand_52_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc41)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc18)
    cir.return loc(#loc17)
  } loc(#loc40)
  cir.func private @CWE197_Numeric_Truncation_Error__short_rand_52b_goodG2BSink(!s16i) loc(#loc42)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc44)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc27)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc27)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc45)
    %4 = cir.const #cir.int<127> : !s32i loc(#loc29)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc30)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc29)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc29)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc46)
    %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc32)
    cir.call @CWE197_Numeric_Truncation_Error__short_rand_52b_goodG2BSink(%8) : (!s16i) -> () loc(#loc33)
    cir.return loc(#loc23)
  } loc(#loc43)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_52a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":22:1)
#loc4 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":22:72)
#loc5 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":24:1)
#loc6 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":32:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":26:5)
#loc8 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":26:11)
#loc9 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":28:13)
#loc10 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":28:12)
#loc11 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":28:5)
#loc13 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":30:5)
#loc14 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":31:61)
#loc15 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":31:5)
#loc16 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":52:1)
#loc17 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":55:1)
#loc18 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":54:5)
#loc19 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":54:13)
#loc20 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":39:1)
#loc21 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":39:76)
#loc22 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":42:1)
#loc23 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":50:1)
#loc24 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":44:5)
#loc25 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":44:11)
#loc26 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":46:13)
#loc27 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":46:12)
#loc28 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":46:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":48:12)
#loc30 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":48:21)
#loc31 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":48:5)
#loc32 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":49:65)
#loc33 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":49:5)
#loc34 = loc(fused[#loc1, #loc2])
#loc35 = loc(fused[#loc3, #loc4])
#loc36 = loc(fused[#loc5, #loc6])
#loc37 = loc(fused[#loc7, #loc8])
#loc38 = loc(fused[#loc11, #loc9])
#loc39 = loc(fused[#loc13, #loc12])
#loc40 = loc(fused[#loc16, #loc17])
#loc41 = loc(fused[#loc18, #loc19])
#loc42 = loc(fused[#loc20, #loc21])
#loc43 = loc(fused[#loc22, #loc23])
#loc44 = loc(fused[#loc24, #loc25])
#loc45 = loc(fused[#loc28, #loc26])
#loc46 = loc(fused[#loc31, #loc30])
