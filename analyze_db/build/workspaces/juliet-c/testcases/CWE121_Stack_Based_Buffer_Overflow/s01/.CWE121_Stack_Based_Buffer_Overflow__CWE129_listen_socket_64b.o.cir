!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":44:75)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":44:82)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":76:79)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":76:86)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":104:79)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":104:86)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":114:23)
#true = #cir.bool<true> : !cir.bool
#loc138 = loc(fused[#loc8, #loc9])
#loc154 = loc(fused[#loc49, #loc50])
#loc170 = loc(fused[#loc92, #loc93])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc5)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc140)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc138)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc141)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc142)
    cir.store %arg0, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc18)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc15)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc15)
    cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc140)
    cir.store %9, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc140)
    cir.br ^bb2 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc145)
    cir.brcond %12 ^bb3, ^bb12 loc(#loc146)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc32)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc32)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb4 loc(#loc148)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<0> : !s32i loc(#loc35)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc38)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc150)
    cir.brcond %20 ^bb6, ^bb10 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc151)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc42)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc43)
    cir.br ^bb8 loc(#loc34)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc34)
  ^bb9:  // pred: ^bb8
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %26 = cir.unary(inc, %25) nsw : !s32i, !s32i loc(#loc45)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb5 loc(#loc148)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc34)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc28)
  ^bb12:  // pred: ^bb2
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc5)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb13 loc(#loc24)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc24)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc22)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc7)
  } loc(#loc137)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc49, #loc50])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc156)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc154)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc157)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc158)
    cir.store %arg0, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc59)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc56)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc56)
    cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc156)
    cir.store %9, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc156)
    cir.br ^bb2 loc(#loc160)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc161)
    cir.brcond %12 ^bb3, ^bb12 loc(#loc162)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc73)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc73)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.br ^bb5 loc(#loc164)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc79)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc166)
    cir.brcond %20 ^bb6, ^bb10 loc(#loc80)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc167)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc83)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc83)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc84)
    cir.br ^bb8 loc(#loc75)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc75)
  ^bb9:  // pred: ^bb8
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %26 = cir.unary(inc, %25) nsw : !s32i, !s32i loc(#loc86)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.br ^bb5 loc(#loc164)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc75)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc69)
  ^bb12:  // pred: ^bb2
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc87)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb13 loc(#loc65)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc65)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc63)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc48)
  } loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc89)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b_goodB2GSink(%arg0: !cir.ptr<!void> loc(fused[#loc92, #loc93])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc172)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc170)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc173)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc174)
    cir.store %arg0, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc102)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc99)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc99)
    cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc173)
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc172)
    cir.store %9, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc172)
    cir.br ^bb2 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc177)
    cir.brcond %12 ^bb3, ^bb8 loc(#loc111)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %14 = cir.const #cir.int<10> : !s32i loc(#loc113)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc178)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc111)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #true loc(#loc111)
    cir.br ^bb6(%16 : !cir.bool) loc(#loc111)
  ^bb5:  // pred: ^bb3
    %17 = cir.const #false loc(#loc111)
    cir.br ^bb6(%17 : !cir.bool) loc(#loc111)
  ^bb6(%18: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":114:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc111)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%18 : !cir.bool) loc(#loc111)
  ^bb8:  // pred: ^bb2
    %19 = cir.const #false loc(#loc111)
    cir.br ^bb9(%19 : !cir.bool) loc(#loc111)
  ^bb9(%20: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":114:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc111)
  ^bb10:  // pred: ^bb9
    cir.brcond %20 ^bb11, ^bb20 loc(#loc179)
  ^bb11:  // pred: ^bb10
    %21 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %22 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc120)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc120)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb12 loc(#loc181)
  ^bb12:  // pred: ^bb11
    %25 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.br ^bb13 loc(#loc181)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc126)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc183)
    cir.brcond %28 ^bb14, ^bb18 loc(#loc127)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc184)
  ^bb15:  // pred: ^bb14
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc130)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc130)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc131)
    cir.br ^bb16 loc(#loc122)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc122)
  ^bb17:  // pred: ^bb16
    %33 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %34 = cir.unary(inc, %33) nsw : !s32i, !s32i loc(#loc133)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.br ^bb13 loc(#loc181)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc122)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc116)
  ^bb20:  // pred: ^bb10
    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc89)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.br ^bb21 loc(#loc108)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc108)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc106)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc91)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":66:23)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":44:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":69:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":51:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":51:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":52:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":52:30)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":47:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":47:28)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":49:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":49:25)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":45:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":49:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":49:17)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":50:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":68:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":55:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":67:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":55:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":55:21)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":56:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":63:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":65:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":57:28)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":57:20)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":57:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":59:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":62:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":59:21)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":59:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":59:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":59:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":59:26)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":60:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":61:37)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":61:30)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":61:17)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":59:33)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":59:32)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":66:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":76:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":101:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":83:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":83:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":84:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":84:30)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":79:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":79:28)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":81:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":81:25)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":77:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":81:18)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":81:17)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":82:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":100:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":87:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":99:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":87:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":87:21)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":88:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":95:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":97:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":89:28)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":89:20)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":89:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":91:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":94:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":91:21)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":91:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":91:24)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":91:28)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":91:26)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":92:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":93:37)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":93:30)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":93:17)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":91:33)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":91:32)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":98:23)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":98:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":125:23)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":104:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":128:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":111:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":111:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":112:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":112:30)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":107:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":107:28)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":109:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":109:25)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":105:1)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":109:18)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":109:17)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":110:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":127:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":114:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":126:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":114:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":114:21)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":114:26)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":114:34)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":114:36)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":115:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":122:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":124:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":116:28)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":116:20)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":116:13)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":118:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":121:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":118:21)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":118:17)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":118:24)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":118:28)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":118:26)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":119:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":120:37)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":120:30)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":120:17)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":118:33)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":118:32)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64b.c":125:13)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc6, #loc7])
#loc139 = loc(fused[#loc10, #loc11])
#loc140 = loc(fused[#loc12, #loc13])
#loc141 = loc(fused[#loc14, #loc15])
#loc142 = loc(fused[#loc16, #loc17])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc147 = loc(fused[#loc32, #loc30])
#loc148 = loc(fused[#loc33, #loc34])
#loc149 = loc(fused[#loc36, #loc35])
#loc150 = loc(fused[#loc37, #loc38])
#loc151 = loc(fused[#loc40, #loc34])
#loc152 = loc(fused[#loc45, #loc44])
#loc153 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc53, #loc54])
#loc157 = loc(fused[#loc55, #loc56])
#loc158 = loc(fused[#loc57, #loc58])
#loc159 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc64, #loc65])
#loc161 = loc(fused[#loc66, #loc67])
#loc162 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc163 = loc(fused[#loc73, #loc71])
#loc164 = loc(fused[#loc74, #loc75])
#loc165 = loc(fused[#loc77, #loc76])
#loc166 = loc(fused[#loc78, #loc79])
#loc167 = loc(fused[#loc81, #loc75])
#loc168 = loc(fused[#loc86, #loc85])
#loc169 = loc(fused[#loc90, #loc91])
#loc171 = loc(fused[#loc94, #loc95])
#loc172 = loc(fused[#loc96, #loc97])
#loc173 = loc(fused[#loc98, #loc99])
#loc174 = loc(fused[#loc100, #loc101])
#loc175 = loc(fused[#loc105, #loc106])
#loc176 = loc(fused[#loc107, #loc108])
#loc177 = loc(fused[#loc109, #loc110])
#loc178 = loc(fused[#loc112, #loc114])
#loc179 = loc(fused[#loc115, #loc116, #loc117, #loc108])
#loc180 = loc(fused[#loc120, #loc118])
#loc181 = loc(fused[#loc121, #loc122])
#loc182 = loc(fused[#loc124, #loc123])
#loc183 = loc(fused[#loc125, #loc126])
#loc184 = loc(fused[#loc128, #loc122])
#loc185 = loc(fused[#loc133, #loc132])
