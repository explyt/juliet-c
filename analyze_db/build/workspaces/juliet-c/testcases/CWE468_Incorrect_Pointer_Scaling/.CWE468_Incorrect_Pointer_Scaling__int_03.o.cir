!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good2.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc80)
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc81)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__int_03_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc82)
  cir.func private @printIntLine(!s32i) loc(#loc83)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_03_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc86)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc82)
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc89)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc90)
          %6 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__int_03_bad.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc82)
          cir.copy %6 to %3 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc82)
          %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc19)
          cir.store %7, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc89)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc23)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc23)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc91)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc92)
          %13 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %12 : !u64i), !cir.ptr<!s32i> loc(#loc26)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc27)
          cir.store %14, %5 : !s32i, !cir.ptr<!s32i> loc(#loc90)
          %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc28)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc29)
        } loc(#loc88)
      } loc(#loc87)
    } loc(#loc85)
    cir.return loc(#loc10)
  } loc(#loc84)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_03_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc95)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc93)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc43)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc44)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc99)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc81)
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc102)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc103)
          %6 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc81)
          cir.copy %6 to %3 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc81)
          %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc52)
          cir.store %7, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc102)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc56)
          %10 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc57)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc58)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc103)
          %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc59)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc60)
        } loc(#loc101)
      } loc(#loc100)
    } loc(#loc98)
    cir.return loc(#loc40)
  } loc(#loc97)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc65)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc66)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc106)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc80)
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc109)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc110)
          %6 = cir.get_global @__const.good2.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc80)
          cir.copy %6 to %3 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc80)
          %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc71)
          cir.store %7, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc109)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc75)
          %10 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc76)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc77)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc110)
          %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc78)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc79)
        } loc(#loc108)
      } loc(#loc107)
    } loc(#loc105)
    cir.return loc(#loc62)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_03.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":66:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":66:64)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":50:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":50:64)
#loc5 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":25:13)
#loc6 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":25:64)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":20:1)
#loc10 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":33:1)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":22:5)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":32:5)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":22:8)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":22:11)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":23:5)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":24:9)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":31:9)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":26:13)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":26:31)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":29:13)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":29:55)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":29:29)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":29:41)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":29:43)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":29:53)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":29:39)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":29:27)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":30:26)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":30:13)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":76:1)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":80:1)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":78:5)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":78:11)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":79:5)
#loc35 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":79:11)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":45:19)
#loc39 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":40:1)
#loc40 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":58:1)
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":42:5)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":57:5)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":42:8)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":42:11)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":43:5)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":46:5)
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":48:5)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":45:9)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":49:9)
#loc50 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":56:9)
#loc51 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":51:13)
#loc52 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":51:31)
#loc53 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":54:13)
#loc54 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":54:41)
#loc55 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":54:29)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":54:40)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":54:39)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":54:27)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":55:26)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":55:13)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":61:1)
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":74:1)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":63:5)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":73:5)
#loc65 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":63:8)
#loc66 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":63:11)
#loc67 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":64:5)
#loc68 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":65:9)
#loc69 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":72:9)
#loc70 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":67:13)
#loc71 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":67:31)
#loc72 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":70:13)
#loc73 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":70:41)
#loc74 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":70:29)
#loc75 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":70:40)
#loc76 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":70:39)
#loc77 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":70:27)
#loc78 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":71:26)
#loc79 = loc("CWE468_Incorrect_Pointer_Scaling__int_03.c":71:13)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc7, #loc8])
#loc84 = loc(fused[#loc9, #loc10])
#loc85 = loc(fused[#loc11, #loc12])
#loc86 = loc(fused[#loc13, #loc14])
#loc87 = loc(fused[#loc15, #loc12])
#loc88 = loc(fused[#loc16, #loc17])
#loc89 = loc(fused[#loc18, #loc19])
#loc90 = loc(fused[#loc20, #loc21])
#loc91 = loc(fused[#loc24, #loc25])
#loc92 = loc(fused[#loc23, #loc25])
#loc93 = loc(fused[#loc30, #loc31])
#loc94 = loc(fused[#loc32, #loc33])
#loc95 = loc(fused[#loc34, #loc35])
#loc96 = loc(fused[#loc36, #loc37])
#loc97 = loc(fused[#loc39, #loc40])
#loc98 = loc(fused[#loc41, #loc42])
#loc99 = loc(fused[#loc43, #loc44])
#loc100 = loc(fused[#loc45, #loc46, #loc47, #loc42])
#loc101 = loc(fused[#loc49, #loc50])
#loc102 = loc(fused[#loc51, #loc52])
#loc103 = loc(fused[#loc53, #loc54])
#loc104 = loc(fused[#loc61, #loc62])
#loc105 = loc(fused[#loc63, #loc64])
#loc106 = loc(fused[#loc65, #loc66])
#loc107 = loc(fused[#loc67, #loc64])
#loc108 = loc(fused[#loc68, #loc69])
#loc109 = loc(fused[#loc70, #loc71])
#loc110 = loc(fused[#loc72, #loc73])
