!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc359)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc360)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc361)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc362)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc363)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc365)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc368)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc371)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc371)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc371)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc32)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc32)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc32)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc32)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc32)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc360)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc373)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc36)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc375)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc44)
            } loc(#loc374)
          } loc(#loc372)
        } loc(#loc370)
      } loc(#loc369)
    } loc(#loc367)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc377)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc47)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc47)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc380)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc381)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc381)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc381)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc59)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !s32i loc(#loc383)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc60)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc64)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc66)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc66)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc385)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc69)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc387)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc72)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc388)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc73)
                  cir.condition(%21) loc(#loc73)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc76)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc76)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc77)
                  } loc(#loc389)
                  cir.yield loc(#loc68)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc79)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc390)
                  cir.yield loc(#loc386)
                } loc(#loc386)
              } loc(#loc386)
            } else {
              %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc80)
            } loc(#loc384)
          } loc(#loc382)
        } loc(#loc379)
      } loc(#loc378)
    } loc(#loc376)
    cir.return loc(#loc14)
  } loc(#loc364)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc392)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc393)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc394)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc395)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc82)
  } loc(#loc391)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc92)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc93)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc397)
    cir.return %2 : !s32i loc(#loc397)
  } loc(#loc396)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc95)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc399)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc102)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc402)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc106)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc106)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc405)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc405)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc405)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc116)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc116)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc116)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc116)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc116)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc116)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc116)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc116)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc360)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc117)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc118)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc407)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc120)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc125)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc409)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc128)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc128)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc129)
            } loc(#loc408)
          } loc(#loc406)
        } loc(#loc404)
      } loc(#loc403)
    } loc(#loc401)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc411)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc132)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc132)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc137)
      } else {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc414)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc415)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc415)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc415)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc147)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !s32i loc(#loc417)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc148)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc151)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc418)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc153)
              %18 = cir.ternary(%17, true {
                %19 = cir.const #true loc(#loc149)
                cir.yield %19 : !cir.bool loc(#loc149)
              }, false {
                %19 = cir.const #false loc(#loc149)
                cir.yield %19 : !cir.bool loc(#loc149)
              }) : (!cir.bool) -> !cir.bool loc(#loc149)
              cir.yield %18 : !cir.bool loc(#loc149)
            }, false {
              %14 = cir.const #false loc(#loc149)
              cir.yield %14 : !cir.bool loc(#loc149)
            }) : (!cir.bool) -> !cir.bool loc(#loc149)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc157)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %16 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc159)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc159)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc420)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc162)
                cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc422)
                cir.for : cond {
                  %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc165)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !s32i loc(#loc423)
                  %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc166)
                  cir.condition(%22) loc(#loc166)
                } body {
                  cir.scope {
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc168)
                    %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc169)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc169)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc169)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc170)
                  } loc(#loc424)
                  cir.yield loc(#loc161)
                } step {
                  %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc171)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc172)
                  cir.store %20, %6 : !s32i, !cir.ptr<!s32i> loc(#loc425)
                  cir.yield loc(#loc421)
                } loc(#loc421)
              } loc(#loc421)
            } else {
              %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc96)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc96)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc173)
            } loc(#loc419)
          } loc(#loc416)
        } loc(#loc413)
      } loc(#loc412)
    } loc(#loc410)
    cir.return loc(#loc98)
  } loc(#loc398)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc176)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc427)
    cir.return %2 : !s32i loc(#loc427)
  } loc(#loc426)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc429)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc183)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc432)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc187)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc187)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc435)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc435)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc435)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc196)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc197)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc197)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc197)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc197)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc197)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc197)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc197)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc197)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc360)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc198)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc199)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc200)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc437)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc201)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc205)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc206)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc209)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc209)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc210)
            } loc(#loc438)
          } loc(#loc436)
        } loc(#loc434)
      } loc(#loc433)
    } loc(#loc431)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc441)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc213)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc213)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc444)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc445)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc445)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc445)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc224)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc225)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !s32i loc(#loc447)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc226)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc229)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc448)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc231)
              %18 = cir.ternary(%17, true {
                %19 = cir.const #true loc(#loc227)
                cir.yield %19 : !cir.bool loc(#loc227)
              }, false {
                %19 = cir.const #false loc(#loc227)
                cir.yield %19 : !cir.bool loc(#loc227)
              }) : (!cir.bool) -> !cir.bool loc(#loc227)
              cir.yield %18 : !cir.bool loc(#loc227)
            }, false {
              %14 = cir.const #false loc(#loc227)
              cir.yield %14 : !cir.bool loc(#loc227)
            }) : (!cir.bool) -> !cir.bool loc(#loc227)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc235)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc236)
              %16 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc237)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc237)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc450)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc240)
                cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc452)
                cir.for : cond {
                  %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc242)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc243)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !s32i loc(#loc453)
                  %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc244)
                  cir.condition(%22) loc(#loc244)
                } body {
                  cir.scope {
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                    %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc247)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc247)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc248)
                  } loc(#loc454)
                  cir.yield loc(#loc239)
                } step {
                  %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc250)
                  cir.store %20, %6 : !s32i, !cir.ptr<!s32i> loc(#loc455)
                  cir.yield loc(#loc451)
                } loc(#loc451)
              } loc(#loc451)
            } else {
              %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc251)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc251)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc252)
            } loc(#loc449)
          } loc(#loc446)
        } loc(#loc443)
      } loc(#loc442)
    } loc(#loc440)
    cir.return loc(#loc179)
  } loc(#loc428)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc457)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc257)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc258)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc458)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc460)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc262)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc262)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc267)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc267)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc268)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc269)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc462)
      } loc(#loc461)
    } loc(#loc459)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc464)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc273)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc273)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc467)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc468)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc468)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc468)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc284)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc285)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !s32i loc(#loc470)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc286)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc290)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc291)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc292)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc292)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc472)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc295)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc474)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc298)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc475)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc299)
                  cir.condition(%21) loc(#loc299)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc301)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc302)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc302)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc303)
                  } loc(#loc476)
                  cir.yield loc(#loc294)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc305)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc477)
                  cir.yield loc(#loc473)
                } loc(#loc473)
              } loc(#loc473)
            } else {
              %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc306)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc306)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc307)
            } loc(#loc471)
          } loc(#loc469)
        } loc(#loc466)
      } loc(#loc465)
    } loc(#loc463)
    cir.return loc(#loc254)
  } loc(#loc456)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc479)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc312)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc313)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc482)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc317)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc317)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc320)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc484)
      } loc(#loc483)
    } loc(#loc481)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc486)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc324)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc324)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc489)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc490)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc490)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc490)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc335)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc336)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !s32i loc(#loc492)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc337)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc341)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc342)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc343)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc343)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc494)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc346)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc496)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc348)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc349)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc497)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc350)
                  cir.condition(%21) loc(#loc350)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc352)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc353)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc353)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc353)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc354)
                  } loc(#loc498)
                  cir.yield loc(#loc345)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc355)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc356)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc499)
                  cir.yield loc(#loc495)
                } loc(#loc495)
              } loc(#loc495)
            } else {
              %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc357)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc357)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc358)
            } loc(#loc493)
          } loc(#loc491)
        } loc(#loc488)
      } loc(#loc487)
    } loc(#loc485)
    cir.return loc(#loc309)
  } loc(#loc478)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":54:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":76:27)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":37:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":80:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":39:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":39:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":41:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":41:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":41:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":42:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":57:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":42:8)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":42:26)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":43:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":44:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":56:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":45:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":45:49)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":47:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":55:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":47:23)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":47:36)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":47:53)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":47:17)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":47:63)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":47:60)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":48:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":51:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":53:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":50:29)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":50:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":50:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":50:40)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":54:17)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":58:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":79:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":58:8)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":58:26)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":59:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":60:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":78:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":61:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":61:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":62:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":62:34)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":65:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":77:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":65:17)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":65:25)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":65:22)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":66:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":73:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":75:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":67:32)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":67:24)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":67:17)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":69:17)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":72:17)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":69:25)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":69:21)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":69:28)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":69:32)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":69:30)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":70:17)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":71:41)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":71:34)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":71:21)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":69:37)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":69:36)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":76:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":258:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":264:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":260:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":260:14)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":261:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":261:14)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":262:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":262:14)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":263:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":263:14)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":25:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":28:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":27:12)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":27:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":111:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":130:27)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":87:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":134:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":89:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":89:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":91:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":91:12)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":91:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":92:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":107:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":92:8)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":92:26)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":93:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":94:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":106:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":95:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":95:49)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":97:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":105:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":97:23)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":97:36)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":97:53)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":97:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":97:63)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":97:60)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":98:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":101:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":103:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":100:29)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":100:24)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":100:17)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":100:40)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":104:27)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":104:17)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":108:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":133:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":108:8)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":108:27)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":109:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":112:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":114:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":111:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":115:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":132:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":116:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":116:17)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":117:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":117:34)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":119:13)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":131:13)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":119:17)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":119:25)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":119:22)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":119:27)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":119:30)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":119:38)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":119:40)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":119:35)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":120:13)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":127:13)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":129:13)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":121:32)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":121:24)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":121:17)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":123:17)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":126:17)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":123:25)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":123:21)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":123:28)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":123:32)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":123:30)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":124:17)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":125:41)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":125:34)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":125:21)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":123:37)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":123:36)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":130:17)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":30:1)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":33:1)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":32:12)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":32:5)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":137:1)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":179:1)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":139:5)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":139:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":141:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":141:12)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":141:5)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":142:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":157:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":142:8)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":142:26)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":143:5)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":144:9)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":156:9)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":145:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":145:49)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":147:13)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":155:13)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":147:23)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":147:36)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":147:53)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":147:17)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":147:63)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":147:60)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":148:13)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":151:13)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":153:13)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":150:29)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":150:24)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":150:17)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":150:40)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":154:27)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":154:17)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":158:5)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":178:5)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":158:8)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":158:26)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":159:5)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":160:9)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":177:9)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":161:13)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":161:17)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":162:13)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":162:34)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":164:13)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":176:13)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":164:17)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":164:25)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":164:22)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":164:27)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":164:30)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":164:38)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":164:40)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":164:35)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":165:13)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":172:13)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":174:13)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":166:32)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":166:24)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":166:17)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":168:17)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":171:17)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":168:25)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":168:21)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":168:28)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":168:32)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":168:30)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":169:17)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":170:41)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":170:34)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":170:21)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":168:37)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":168:36)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":175:27)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":175:17)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":182:1)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":220:1)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":184:5)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":184:9)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":186:13)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":186:12)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":186:5)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":187:5)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":197:5)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":187:8)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":187:27)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":188:5)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":191:5)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":193:5)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":190:19)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":190:9)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":196:16)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":196:9)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":198:5)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":219:5)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":198:8)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":198:26)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":199:5)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":200:9)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":218:9)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":201:13)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":201:17)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":202:13)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":202:34)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":205:13)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":217:13)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":205:17)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":205:25)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":205:22)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":206:13)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":213:13)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":215:13)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":207:32)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":207:24)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":207:17)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":209:17)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":212:17)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":209:25)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":209:21)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":209:28)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":209:32)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":209:30)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":210:17)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":211:41)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":211:34)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":211:21)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":209:37)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":209:36)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":216:27)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":216:17)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":223:1)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":256:1)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":225:5)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":225:9)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":227:13)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":227:12)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":227:5)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":228:5)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":233:5)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":228:8)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":228:26)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":229:5)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":232:16)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":232:9)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":234:5)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":255:5)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":234:8)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":234:26)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":235:5)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":236:9)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":254:9)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":237:13)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":237:17)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":238:13)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":238:34)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":241:13)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":253:13)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":241:17)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":241:25)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":241:22)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":242:13)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":249:13)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":251:13)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":243:32)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":243:24)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":243:17)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":245:17)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":248:17)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":245:25)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":245:21)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":245:28)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":245:32)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":245:30)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":246:17)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":247:41)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":247:34)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":247:21)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":245:37)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":245:36)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":252:27)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c":252:17)
#loc359 = loc(fused[#loc1, #loc2])
#loc360 = loc(fused[#loc3, #loc4])
#loc361 = loc(fused[#loc5, #loc6])
#loc362 = loc(fused[#loc7, #loc8])
#loc363 = loc(fused[#loc10, #loc11])
#loc364 = loc(fused[#loc13, #loc14])
#loc365 = loc(fused[#loc15, #loc16])
#loc366 = loc(fused[#loc19, #loc17])
#loc367 = loc(fused[#loc20, #loc21])
#loc368 = loc(fused[#loc22, #loc23])
#loc369 = loc(fused[#loc24, #loc21])
#loc370 = loc(fused[#loc25, #loc26])
#loc371 = loc(fused[#loc27, #loc28])
#loc372 = loc(fused[#loc29, #loc30])
#loc373 = loc(fused[#loc34, #loc35])
#loc374 = loc(fused[#loc37, #loc38, #loc39, #loc30])
#loc375 = loc(fused[#loc42, #loc43])
#loc376 = loc(fused[#loc45, #loc46])
#loc377 = loc(fused[#loc47, #loc48])
#loc378 = loc(fused[#loc49, #loc46])
#loc379 = loc(fused[#loc50, #loc51])
#loc380 = loc(fused[#loc52, #loc53])
#loc381 = loc(fused[#loc54, #loc55])
#loc382 = loc(fused[#loc56, #loc57])
#loc383 = loc(fused[#loc58, #loc59])
#loc384 = loc(fused[#loc61, #loc62, #loc63, #loc57])
#loc385 = loc(fused[#loc66, #loc64])
#loc386 = loc(fused[#loc67, #loc68])
#loc387 = loc(fused[#loc70, #loc69])
#loc388 = loc(fused[#loc71, #loc72])
#loc389 = loc(fused[#loc74, #loc68])
#loc390 = loc(fused[#loc79, #loc78])
#loc391 = loc(fused[#loc81, #loc82])
#loc392 = loc(fused[#loc83, #loc84])
#loc393 = loc(fused[#loc85, #loc86])
#loc394 = loc(fused[#loc87, #loc88])
#loc395 = loc(fused[#loc89, #loc90])
#loc396 = loc(fused[#loc91, #loc92])
#loc397 = loc(fused[#loc94, #loc93])
#loc398 = loc(fused[#loc97, #loc98])
#loc399 = loc(fused[#loc99, #loc100])
#loc400 = loc(fused[#loc103, #loc101])
#loc401 = loc(fused[#loc104, #loc105])
#loc402 = loc(fused[#loc106, #loc107])
#loc403 = loc(fused[#loc108, #loc105])
#loc404 = loc(fused[#loc109, #loc110])
#loc405 = loc(fused[#loc111, #loc112])
#loc406 = loc(fused[#loc113, #loc114])
#loc407 = loc(fused[#loc118, #loc119])
#loc408 = loc(fused[#loc121, #loc122, #loc123, #loc114])
#loc409 = loc(fused[#loc126, #loc127])
#loc410 = loc(fused[#loc130, #loc131])
#loc411 = loc(fused[#loc132, #loc133])
#loc412 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc413 = loc(fused[#loc138, #loc139])
#loc414 = loc(fused[#loc140, #loc141])
#loc415 = loc(fused[#loc142, #loc143])
#loc416 = loc(fused[#loc144, #loc145])
#loc417 = loc(fused[#loc146, #loc147])
#loc418 = loc(fused[#loc150, #loc152])
#loc419 = loc(fused[#loc154, #loc155, #loc156, #loc145])
#loc420 = loc(fused[#loc159, #loc157])
#loc421 = loc(fused[#loc160, #loc161])
#loc422 = loc(fused[#loc163, #loc162])
#loc423 = loc(fused[#loc164, #loc165])
#loc424 = loc(fused[#loc167, #loc161])
#loc425 = loc(fused[#loc172, #loc171])
#loc426 = loc(fused[#loc174, #loc175])
#loc427 = loc(fused[#loc177, #loc176])
#loc428 = loc(fused[#loc178, #loc179])
#loc429 = loc(fused[#loc180, #loc181])
#loc430 = loc(fused[#loc184, #loc182])
#loc431 = loc(fused[#loc185, #loc186])
#loc432 = loc(fused[#loc187, #loc188])
#loc433 = loc(fused[#loc189, #loc186])
#loc434 = loc(fused[#loc190, #loc191])
#loc435 = loc(fused[#loc192, #loc193])
#loc436 = loc(fused[#loc194, #loc195])
#loc437 = loc(fused[#loc199, #loc200])
#loc438 = loc(fused[#loc202, #loc203, #loc204, #loc195])
#loc439 = loc(fused[#loc207, #loc208])
#loc440 = loc(fused[#loc211, #loc212])
#loc441 = loc(fused[#loc213, #loc214])
#loc442 = loc(fused[#loc215, #loc212])
#loc443 = loc(fused[#loc216, #loc217])
#loc444 = loc(fused[#loc218, #loc219])
#loc445 = loc(fused[#loc220, #loc221])
#loc446 = loc(fused[#loc222, #loc223])
#loc447 = loc(fused[#loc224, #loc225])
#loc448 = loc(fused[#loc228, #loc230])
#loc449 = loc(fused[#loc232, #loc233, #loc234, #loc223])
#loc450 = loc(fused[#loc237, #loc235])
#loc451 = loc(fused[#loc238, #loc239])
#loc452 = loc(fused[#loc241, #loc240])
#loc453 = loc(fused[#loc242, #loc243])
#loc454 = loc(fused[#loc245, #loc239])
#loc455 = loc(fused[#loc250, #loc249])
#loc456 = loc(fused[#loc253, #loc254])
#loc457 = loc(fused[#loc255, #loc256])
#loc458 = loc(fused[#loc259, #loc257])
#loc459 = loc(fused[#loc260, #loc261])
#loc460 = loc(fused[#loc262, #loc263])
#loc461 = loc(fused[#loc264, #loc265, #loc266, #loc261])
#loc462 = loc(fused[#loc270, #loc269])
#loc463 = loc(fused[#loc271, #loc272])
#loc464 = loc(fused[#loc273, #loc274])
#loc465 = loc(fused[#loc275, #loc272])
#loc466 = loc(fused[#loc276, #loc277])
#loc467 = loc(fused[#loc278, #loc279])
#loc468 = loc(fused[#loc280, #loc281])
#loc469 = loc(fused[#loc282, #loc283])
#loc470 = loc(fused[#loc284, #loc285])
#loc471 = loc(fused[#loc287, #loc288, #loc289, #loc283])
#loc472 = loc(fused[#loc292, #loc290])
#loc473 = loc(fused[#loc293, #loc294])
#loc474 = loc(fused[#loc296, #loc295])
#loc475 = loc(fused[#loc297, #loc298])
#loc476 = loc(fused[#loc300, #loc294])
#loc477 = loc(fused[#loc305, #loc304])
#loc478 = loc(fused[#loc308, #loc309])
#loc479 = loc(fused[#loc310, #loc311])
#loc480 = loc(fused[#loc314, #loc312])
#loc481 = loc(fused[#loc315, #loc316])
#loc482 = loc(fused[#loc317, #loc318])
#loc483 = loc(fused[#loc319, #loc316])
#loc484 = loc(fused[#loc321, #loc320])
#loc485 = loc(fused[#loc322, #loc323])
#loc486 = loc(fused[#loc324, #loc325])
#loc487 = loc(fused[#loc326, #loc323])
#loc488 = loc(fused[#loc327, #loc328])
#loc489 = loc(fused[#loc329, #loc330])
#loc490 = loc(fused[#loc331, #loc332])
#loc491 = loc(fused[#loc333, #loc334])
#loc492 = loc(fused[#loc335, #loc336])
#loc493 = loc(fused[#loc338, #loc339, #loc340, #loc334])
#loc494 = loc(fused[#loc343, #loc341])
#loc495 = loc(fused[#loc344, #loc345])
#loc496 = loc(fused[#loc347, #loc346])
#loc497 = loc(fused[#loc348, #loc349])
#loc498 = loc(fused[#loc351, #loc345])
#loc499 = loc(fused[#loc356, #loc355])
