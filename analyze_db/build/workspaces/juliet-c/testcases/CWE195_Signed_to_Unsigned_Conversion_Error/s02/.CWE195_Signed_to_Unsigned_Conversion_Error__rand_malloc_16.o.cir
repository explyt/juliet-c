!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":29:16)
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc108)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc110)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc115)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc18)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc117)
  ^bb2:  // 2 preds: ^bb1, ^bb9
    %4 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %5 ^bb3, ^bb10 loc(#loc22)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc118)
  ^bb4:  // pred: ^bb3
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc24)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc24)
  ^bb5:  // pred: ^bb4
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc24)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc24)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc24)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc24)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc24)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc24)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc24)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc24)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc24)
    cir.br ^bb7(%21 : !u32i) loc(#loc24)
  ^bb6:  // pred: ^bb4
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc24)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc24)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc24)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc24)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc24)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc24)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc24)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc24)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc24)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc24)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc24)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc24)
    cir.br ^bb7(%37 : !u32i) loc(#loc24)
  ^bb7(%38: !u32i loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":29:16)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc24)
    cir.store %39, %1 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.br ^bb10 loc(#loc26)
  ^bb9:  // no predecessors
    cir.br ^bb2 loc(#loc21)
  ^bb10:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb11 loc(#loc21)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc120)
  ^bb12:  // pred: ^bb11
    %40 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %42 = cir.cmp(lt, %40, %41) : !s32i, !cir.bool loc(#loc121)
    cir.brcond %42 ^bb13, ^bb18 loc(#loc122)
  ^bb13:  // pred: ^bb12
    %43 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc32)
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc33)
    %46 = cir.call @malloc(%45) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc32)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
    cir.store %47, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    cir.br ^bb14 loc(#loc124)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %49 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
    %51 = cir.cmp(eq, %48, %50) : !cir.ptr<!s8i>, !cir.bool loc(#loc125)
    cir.brcond %51 ^bb15, ^bb16 loc(#loc126)
  ^bb15:  // pred: ^bb14
    %52 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc39)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc41)
    cir.call @exit(%54) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb16 loc(#loc35)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc35)
  ^bb17:  // pred: ^bb16
    %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
    %57 = cir.const #cir.int<65> : !s32i loc(#loc43)
    %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %60 = cir.binop(sub, %58, %59) nsw : !s32i loc(#loc44)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc44)
    cir.libc.memset %61 bytes from %56 set to %57 : !cir.ptr<!void>, !s32i, !u64i loc(#loc127)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %63 = cir.cast(integral, %62 : !s32i), !s8i loc(#loc48)
    %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %65 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %67 = cir.binop(sub, %65, %66) nsw : !s32i loc(#loc50)
    %68 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %67 : !s32i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %63, %68 : !s8i, !cir.ptr<!s8i> loc(#loc128)
    %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%69) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %71 = cir.cast(bitcast, %70 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
    cir.call @free(%71) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
    cir.br ^bb18 loc(#loc28)
  ^bb18:  // 2 preds: ^bb12, ^bb17
    cir.br ^bb19 loc(#loc28)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc12)
  } loc(#loc113)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc129)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc133)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc68)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc135)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %4 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %5 ^bb3, ^bb6 loc(#loc72)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc74)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.br ^bb6 loc(#loc77)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc71)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc138)
  ^bb8:  // pred: ^bb7
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc139)
    cir.brcond %11 ^bb9, ^bb14 loc(#loc140)
  ^bb9:  // pred: ^bb8
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc83)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc84)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
    cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.br ^bb10 loc(#loc142)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc88)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc143)
    cir.brcond %20 ^bb11, ^bb12 loc(#loc144)
  ^bb11:  // pred: ^bb10
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc90)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc92)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb12 loc(#loc86)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc86)
  ^bb13:  // pred: ^bb12
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
    %26 = cir.const #cir.int<65> : !s32i loc(#loc94)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc95)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc95)
    cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc145)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc99)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc101)
    %37 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc103)
    cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb14 loc(#loc79)
  ^bb14:  // 2 preds: ^bb8, ^bb13
    cir.br ^bb15 loc(#loc79)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc62)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":21:1)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":45:1)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":37:9)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":37:48)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":23:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":23:9)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":25:13)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":25:12)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":25:5)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":26:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":31:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":26:11)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":27:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":29:9)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":30:9)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":33:5)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":44:5)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":33:9)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":33:16)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":34:5)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":37:37)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":37:44)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":38:9)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":38:43)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":38:13)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":38:27)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":38:33)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":38:34)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":38:40)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":38:39)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":40:16)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":40:28)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":40:33)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":40:38)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":40:9)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":40:39)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":41:30)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":41:9)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":41:20)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":41:25)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":41:26)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":42:19)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":42:9)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":43:14)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":43:9)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":78:1)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":81:1)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":80:5)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":80:13)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":52:1)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":76:1)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":68:9)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":68:48)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":54:5)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":54:9)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":56:13)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":56:12)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":56:5)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":57:5)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":62:5)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":57:11)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":58:5)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":60:16)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":60:20)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":60:9)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":61:9)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":64:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":75:5)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":64:9)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":64:16)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":65:5)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":68:37)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":68:44)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":69:9)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":69:43)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":69:13)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":69:27)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":69:33)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":69:34)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":69:40)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":69:39)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":71:16)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":71:28)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":71:33)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":71:38)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":71:9)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":71:39)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":72:30)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":72:9)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":72:20)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":72:25)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":72:26)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":73:19)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":73:9)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":74:14)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_16.c":74:9)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc13, #loc14])
#loc115 = loc(fused[#loc15, #loc16])
#loc116 = loc(fused[#loc19, #loc17])
#loc117 = loc(fused[#loc20, #loc21])
#loc118 = loc(fused[#loc23, #loc21])
#loc119 = loc(fused[#loc25, #loc24])
#loc120 = loc(fused[#loc27, #loc28])
#loc121 = loc(fused[#loc29, #loc30])
#loc122 = loc(fused[#loc31, #loc28])
#loc123 = loc(fused[#loc32, #loc14])
#loc124 = loc(fused[#loc34, #loc35])
#loc125 = loc(fused[#loc36, #loc37])
#loc126 = loc(fused[#loc38, #loc35])
#loc127 = loc(fused[#loc46, #loc47])
#loc128 = loc(fused[#loc49, #loc48])
#loc129 = loc(fused[#loc57, #loc58])
#loc130 = loc(fused[#loc59, #loc60])
#loc131 = loc(fused[#loc61, #loc62])
#loc132 = loc(fused[#loc63, #loc64])
#loc133 = loc(fused[#loc65, #loc66])
#loc134 = loc(fused[#loc69, #loc67])
#loc135 = loc(fused[#loc70, #loc71])
#loc136 = loc(fused[#loc73, #loc71])
#loc137 = loc(fused[#loc76, #loc75])
#loc138 = loc(fused[#loc78, #loc79])
#loc139 = loc(fused[#loc80, #loc81])
#loc140 = loc(fused[#loc82, #loc79])
#loc141 = loc(fused[#loc83, #loc64])
#loc142 = loc(fused[#loc85, #loc86])
#loc143 = loc(fused[#loc87, #loc88])
#loc144 = loc(fused[#loc89, #loc86])
#loc145 = loc(fused[#loc97, #loc98])
#loc146 = loc(fused[#loc100, #loc99])
