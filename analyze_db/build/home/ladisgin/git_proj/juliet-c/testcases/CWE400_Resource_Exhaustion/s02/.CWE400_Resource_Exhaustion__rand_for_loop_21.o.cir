!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":25:21)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":25:25)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":46:13)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":61:26)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":61:30)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":73:27)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":90:13)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":96:26)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":96:30)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":103:27)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":120:13)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":126:25)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":126:29)
#true = #cir.bool<true> : !cir.bool
#loc197 = loc(fused[#loc10, #loc11])
#loc218 = loc(fused[#loc58, #loc59])
#loc239 = loc(fused[#loc109, #loc110])
#loc260 = loc(fused[#loc157, #loc158])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc193)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc194)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc197)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc14)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc194)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %4 ^bb2, ^bb13 loc(#loc200)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc201)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc13)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc198)
    cir.br ^bb4 loc(#loc202)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc23)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb5 loc(#loc202)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc25)
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc26)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc204)
    cir.brcond %12 ^bb6, ^bb10 loc(#loc27)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc205)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc31)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc206)
    cir.br ^bb5 loc(#loc202)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc22)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc20)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc16)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc16)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc9)
  } loc(#loc196)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc37)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc39)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc39)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc39)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc39)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc39)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc39)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc39)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc39)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc39)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc39)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc39)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc39)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc39)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc39)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc39)
    cir.br ^bb3(%18 : !u32i) loc(#loc39)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc39)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc39)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc39)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc39)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc39)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc39)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc39)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc39)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc39)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc39)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc39)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc39)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc39)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc39)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc39)
    cir.br ^bb3(%34 : !u32i) loc(#loc39)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":46:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc39)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc39)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %38 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc194)
    cir.store %37, %38 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.call @badSink(%39) : (!s32i) -> () loc(#loc44)
    cir.return loc(#loc33)
  } loc(#loc207)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc46)
  } loc(#loc212)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc58, #loc59])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc218)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.br ^bb1 loc(#loc220)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc216)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc221)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb26 loc(#loc67)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc222)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc61)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc219)
    cir.br ^bb5 loc(#loc223)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %11 = cir.cmp(gt, %9, %10) : !s32i, !cir.bool loc(#loc224)
    cir.brcond %11 ^bb6, ^bb11 loc(#loc76)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %13 = cir.const #cir.int<20> : !s32i loc(#loc78)
    %14 = cir.cmp(le, %12, %13) : !s32i, !cir.bool loc(#loc225)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc76)
  ^bb7:  // pred: ^bb6
    %15 = cir.const #true loc(#loc76)
    cir.br ^bb9(%15 : !cir.bool) loc(#loc76)
  ^bb8:  // pred: ^bb6
    %16 = cir.const #false loc(#loc76)
    cir.br ^bb9(%16 : !cir.bool) loc(#loc76)
  ^bb9(%17: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":73:27)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc76)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12(%17 : !cir.bool) loc(#loc76)
  ^bb11:  // pred: ^bb5
    %18 = cir.const #false loc(#loc76)
    cir.br ^bb12(%18 : !cir.bool) loc(#loc76)
  ^bb12(%19: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":73:27)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc76)
  ^bb13:  // pred: ^bb12
    cir.brcond %19 ^bb14, ^bb23 loc(#loc226)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc227)
  ^bb15:  // pred: ^bb14
    %20 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc82)
    cir.store %21, %0 : !u64i, !cir.ptr<!u64i> loc(#loc228)
    cir.br ^bb16 loc(#loc227)
  ^bb16:  // 2 preds: ^bb15, ^bb20
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc84)
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc85)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc229)
    cir.brcond %25 ^bb17, ^bb21 loc(#loc86)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc230)
  ^bb18:  // pred: ^bb17
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc88)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb19 loc(#loc81)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc81)
  ^bb20:  // pred: ^bb19
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc91)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc231)
    cir.br ^bb16 loc(#loc227)
  ^bb21:  // pred: ^bb16
    cir.br ^bb22 loc(#loc81)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc73)
  ^bb23:  // 2 preds: ^bb13, ^bb22
    cir.br ^bb24 loc(#loc73)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc71)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc64)
  ^bb26:  // 2 preds: ^bb2, ^bb25
    cir.br ^bb27 loc(#loc64)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc57)
  } loc(#loc217)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc97)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc99)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc99)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc99)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc99)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc99)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc99)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc99)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc99)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc99)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc99)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc99)
    cir.br ^bb3(%18 : !u32i) loc(#loc99)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc99)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc99)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc99)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc99)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc99)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc99)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc99)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc99)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc99)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc99)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc99)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc99)
    cir.br ^bb3(%34 : !u32i) loc(#loc99)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":90:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc99)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %38 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc216)
    cir.store %37, %38 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.call @goodB2G1Sink(%39) : (!s32i) -> () loc(#loc104)
    cir.return loc(#loc93)
  } loc(#loc232)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc237)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc109, #loc110])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc240)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc239)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.br ^bb1 loc(#loc241)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc237)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc116)
    cir.brcond %4 ^bb2, ^bb25 loc(#loc242)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc243)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc112)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc240)
    cir.br ^bb4 loc(#loc244)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc245)
    cir.brcond %9 ^bb5, ^bb10 loc(#loc124)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %11 = cir.const #cir.int<20> : !s32i loc(#loc126)
    %12 = cir.cmp(le, %10, %11) : !s32i, !cir.bool loc(#loc246)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc124)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #true loc(#loc124)
    cir.br ^bb8(%13 : !cir.bool) loc(#loc124)
  ^bb7:  // pred: ^bb5
    %14 = cir.const #false loc(#loc124)
    cir.br ^bb8(%14 : !cir.bool) loc(#loc124)
  ^bb8(%15: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":103:27)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc124)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11(%15 : !cir.bool) loc(#loc124)
  ^bb10:  // pred: ^bb4
    %16 = cir.const #false loc(#loc124)
    cir.br ^bb11(%16 : !cir.bool) loc(#loc124)
  ^bb11(%17: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":103:27)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc124)
  ^bb12:  // pred: ^bb11
    cir.brcond %17 ^bb13, ^bb22 loc(#loc247)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc248)
  ^bb14:  // pred: ^bb13
    %18 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc130)
    cir.store %19, %0 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.br ^bb15 loc(#loc248)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc133)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc250)
    cir.brcond %23 ^bb16, ^bb20 loc(#loc134)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc251)
  ^bb17:  // pred: ^bb16
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc136)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    cir.br ^bb18 loc(#loc129)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc129)
  ^bb19:  // pred: ^bb18
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc138)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc139)
    cir.store %27, %0 : !u64i, !cir.ptr<!u64i> loc(#loc252)
    cir.br ^bb15 loc(#loc248)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc129)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc121)
  ^bb22:  // 2 preds: ^bb12, ^bb21
    cir.br ^bb23 loc(#loc121)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc119)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc115)
  ^bb25:  // 2 preds: ^bb1, ^bb24
    cir.br ^bb26 loc(#loc115)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc108)
  } loc(#loc238)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc145)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc147)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc147)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc147)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc147)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc147)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc147)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc147)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc147)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc147)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc147)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc147)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc147)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc147)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc147)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc147)
    cir.br ^bb3(%18 : !u32i) loc(#loc147)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc147)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc147)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc147)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc147)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc147)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc147)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc147)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc147)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc147)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc147)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc147)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc147)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc147)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc147)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc147)
    cir.br ^bb3(%34 : !u32i) loc(#loc147)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":120:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc147)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %38 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc237)
    cir.store %37, %38 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.call @goodB2G2Sink(%39) : (!s32i) -> () loc(#loc152)
    cir.return loc(#loc141)
  } loc(#loc253)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc258)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc157, #loc158])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc261)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc260)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb1 loc(#loc262)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc258)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc164)
    cir.brcond %4 ^bb2, ^bb13 loc(#loc263)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc264)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc160)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc261)
    cir.br ^bb4 loc(#loc265)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc170)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc266)
    cir.br ^bb5 loc(#loc265)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc173)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc267)
    cir.brcond %12 ^bb6, ^bb10 loc(#loc174)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc268)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc176)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.br ^bb8 loc(#loc169)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc169)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc178)
    %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc179)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc269)
    cir.br ^bb5 loc(#loc265)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc169)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc167)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc163)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc163)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc156)
  } loc(#loc259)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc271)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc185)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc187)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc258)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc192)
    cir.return loc(#loc181)
  } loc(#loc270)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":23:1)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":23:24)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":34:27)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":25:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":38:1)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":30:13)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":30:24)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":26:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":27:5)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":37:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":27:8)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":28:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":29:9)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":36:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":32:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":35:13)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":32:22)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":32:18)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":32:25)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":32:37)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":32:27)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":33:13)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":34:17)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":32:45)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":32:44)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":40:1)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":49:1)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":42:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":42:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":44:14)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":44:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":44:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":46:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":47:17)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":47:5)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":48:13)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":48:5)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":152:1)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":157:1)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":154:5)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":154:14)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":155:5)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":155:14)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":156:5)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":156:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":56:1)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":56:29)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":66:19)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":61:1)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":82:1)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":71:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":71:24)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":62:1)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":63:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":81:5)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":63:8)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":64:5)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":67:5)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":69:5)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":66:9)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":70:9)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":80:9)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":73:13)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":79:13)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":73:17)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":73:25)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":73:30)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":73:39)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":74:13)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":75:17)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":78:17)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":75:26)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":75:22)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":75:29)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":75:41)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":75:31)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":76:17)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":77:31)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":77:21)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":75:49)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":75:48)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":84:1)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":93:1)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":86:5)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":86:9)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":88:14)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":88:13)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":88:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":90:5)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":91:22)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":91:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":92:18)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":92:5)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":57:1)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":57:29)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":96:1)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":112:1)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":101:13)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":101:24)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":97:1)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":98:5)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":111:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":98:8)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":99:5)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":100:9)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":110:9)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":103:13)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":109:13)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":103:17)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":103:25)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":103:30)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":103:39)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":104:13)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":105:17)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":108:17)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":105:26)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":105:22)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":105:29)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":105:41)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":105:31)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":106:17)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":107:31)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":107:21)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":105:49)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":105:48)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":114:1)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":123:1)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":116:5)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":116:9)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":118:14)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":118:13)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":118:5)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":120:5)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":121:22)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":121:5)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":122:18)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":122:5)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":58:1)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":58:28)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":126:1)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":139:1)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":131:13)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":131:24)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":127:1)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":128:5)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":138:5)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":128:8)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":129:5)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":130:9)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":137:9)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":133:13)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":136:13)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":133:22)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":133:18)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":133:25)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":133:37)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":133:27)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":134:13)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":135:27)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":135:17)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":133:45)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":133:44)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":141:1)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":150:1)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":143:5)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":143:9)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":145:14)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":145:13)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":145:5)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":147:13)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":147:5)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":148:21)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":148:5)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":149:17)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_for_loop_21.c":149:5)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc8, #loc9])
#loc198 = loc(fused[#loc12, #loc13])
#loc199 = loc(fused[#loc15, #loc16])
#loc200 = loc(fused[#loc18, #loc16])
#loc201 = loc(fused[#loc19, #loc20])
#loc202 = loc(fused[#loc21, #loc22])
#loc203 = loc(fused[#loc24, #loc23])
#loc204 = loc(fused[#loc25, #loc26])
#loc205 = loc(fused[#loc28, #loc22])
#loc206 = loc(fused[#loc31, #loc30])
#loc207 = loc(fused[#loc32, #loc33])
#loc208 = loc(fused[#loc34, #loc35])
#loc209 = loc(fused[#loc38, #loc36])
#loc210 = loc(fused[#loc40, #loc39])
#loc211 = loc(fused[#loc42, #loc41])
#loc212 = loc(fused[#loc45, #loc46])
#loc213 = loc(fused[#loc47, #loc48])
#loc214 = loc(fused[#loc49, #loc50])
#loc215 = loc(fused[#loc51, #loc52])
#loc216 = loc(fused[#loc53, #loc54])
#loc217 = loc(fused[#loc56, #loc57])
#loc219 = loc(fused[#loc60, #loc61])
#loc220 = loc(fused[#loc63, #loc64])
#loc221 = loc(fused[#loc66, #loc67, #loc68, #loc64])
#loc222 = loc(fused[#loc70, #loc71])
#loc223 = loc(fused[#loc72, #loc73])
#loc224 = loc(fused[#loc74, #loc75])
#loc225 = loc(fused[#loc77, #loc78])
#loc226 = loc(fused[#loc79, #loc73])
#loc227 = loc(fused[#loc80, #loc81])
#loc228 = loc(fused[#loc83, #loc82])
#loc229 = loc(fused[#loc84, #loc85])
#loc230 = loc(fused[#loc87, #loc81])
#loc231 = loc(fused[#loc91, #loc90])
#loc232 = loc(fused[#loc92, #loc93])
#loc233 = loc(fused[#loc94, #loc95])
#loc234 = loc(fused[#loc98, #loc96])
#loc235 = loc(fused[#loc100, #loc99])
#loc236 = loc(fused[#loc102, #loc101])
#loc237 = loc(fused[#loc105, #loc106])
#loc238 = loc(fused[#loc107, #loc108])
#loc240 = loc(fused[#loc111, #loc112])
#loc241 = loc(fused[#loc114, #loc115])
#loc242 = loc(fused[#loc117, #loc115])
#loc243 = loc(fused[#loc118, #loc119])
#loc244 = loc(fused[#loc120, #loc121])
#loc245 = loc(fused[#loc122, #loc123])
#loc246 = loc(fused[#loc125, #loc126])
#loc247 = loc(fused[#loc127, #loc121])
#loc248 = loc(fused[#loc128, #loc129])
#loc249 = loc(fused[#loc131, #loc130])
#loc250 = loc(fused[#loc132, #loc133])
#loc251 = loc(fused[#loc135, #loc129])
#loc252 = loc(fused[#loc139, #loc138])
#loc253 = loc(fused[#loc140, #loc141])
#loc254 = loc(fused[#loc142, #loc143])
#loc255 = loc(fused[#loc146, #loc144])
#loc256 = loc(fused[#loc148, #loc147])
#loc257 = loc(fused[#loc150, #loc149])
#loc258 = loc(fused[#loc153, #loc154])
#loc259 = loc(fused[#loc155, #loc156])
#loc261 = loc(fused[#loc159, #loc160])
#loc262 = loc(fused[#loc162, #loc163])
#loc263 = loc(fused[#loc165, #loc163])
#loc264 = loc(fused[#loc166, #loc167])
#loc265 = loc(fused[#loc168, #loc169])
#loc266 = loc(fused[#loc171, #loc170])
#loc267 = loc(fused[#loc172, #loc173])
#loc268 = loc(fused[#loc175, #loc169])
#loc269 = loc(fused[#loc179, #loc178])
#loc270 = loc(fused[#loc180, #loc181])
#loc271 = loc(fused[#loc182, #loc183])
#loc272 = loc(fused[#loc186, #loc184])
#loc273 = loc(fused[#loc188, #loc187])
#loc274 = loc(fused[#loc190, #loc189])
