!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":100:10)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":100:14)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":100:20)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":100:32)
#loc163 = loc(fused[#loc54, #loc55])
#loc164 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc143)
  cir.func private @printLongLongLine(!s64i) loc(#loc144)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc145)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int64_t_calloc_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc148)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc149)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc150)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc151)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc153)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc153)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc23)
      cir.if %11 {
        %12 = cir.const #cir.int<5> : !s64i loc(#loc26)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc29)
        cir.store %12, %15 : !s64i, !cir.ptr<!s64i> loc(#loc155)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc32)
        %19 = cir.load %18 : !cir.ptr<!s64i>, !s64i loc(#loc30)
        cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc33)
        %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc34)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc35)
        cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
      } loc(#loc154)
    } loc(#loc152)
    cir.return loc(#loc10)
  } loc(#loc146)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int64_t_calloc_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc156)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__int64_t_calloc_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE690_NULL_Deref_From_Return__int64_t_calloc_11_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__int64_t_calloc_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call @CWE690_NULL_Deref_From_Return__int64_t_calloc_11_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.return %17 : !s32i loc(#loc167)
  } loc(#loc162)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc74)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc171)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc81)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc82)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc172)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc81)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc173)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc174)
    cir.scope {
      %8 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc176)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc176)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc89)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc89)
      cir.if %11 {
        %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc94)
      } else {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc97)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc98)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc179)
          cir.if %15 {
            %16 = cir.const #cir.int<5> : !s64i loc(#loc100)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc101)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc103)
            cir.store %16, %19 : !s64i, !cir.ptr<!s64i> loc(#loc181)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc104)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc105)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s64i>, %21 : !s32i), !cir.ptr<!s64i> loc(#loc106)
            %23 = cir.load %22 : !cir.ptr<!s64i>, !s64i loc(#loc104)
            cir.call @printLongLongLine(%23) : (!s64i) -> () loc(#loc107)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc108)
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc109)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc108)
          } loc(#loc180)
        } loc(#loc178)
      } loc(#loc177)
    } loc(#loc175)
    cir.return loc(#loc76)
  } loc(#loc169)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc114)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc184)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc116)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc117)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc185)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc186)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc187)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc189)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc189)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc124)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc124)
      cir.if %11 {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc129)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc130)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc130)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc192)
          cir.if %15 {
            %16 = cir.const #cir.int<5> : !s64i loc(#loc132)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc133)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc134)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc135)
            cir.store %16, %19 : !s64i, !cir.ptr<!s64i> loc(#loc194)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc136)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc137)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s64i>, %21 : !s32i), !cir.ptr<!s64i> loc(#loc138)
            %23 = cir.load %22 : !cir.ptr<!s64i>, !s64i loc(#loc136)
            cir.call @printLongLongLine(%23) : (!s64i) -> () loc(#loc139)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc140)
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc141)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc141)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc140)
          } loc(#loc193)
        } loc(#loc191)
      } loc(#loc190)
    } loc(#loc188)
    cir.return loc(#loc111)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":23:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":36:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":25:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":25:15)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":26:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":26:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":28:23)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":28:30)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":28:33)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":28:47)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":28:48)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":28:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":29:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":35:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":29:8)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":29:26)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":30:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":32:19)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":32:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":32:14)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":32:15)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":33:27)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":33:32)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":33:33)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":33:9)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":34:9)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":34:14)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":85:1)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":89:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":87:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":87:14)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":88:5)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":88:14)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":105:15)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":107:15)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":110:15)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":112:15)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":100:1)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":115:1)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":101:1)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":103:27)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":103:22)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":103:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":105:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":106:5)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":106:59)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":107:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":110:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":111:5)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":111:58)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":112:5)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":114:12)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":114:5)
#loc72 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":52:19)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":43:1)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":64:1)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":45:5)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":45:15)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":46:12)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":46:5)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":48:23)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":48:30)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":48:33)
#loc84 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":48:47)
#loc85 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":48:48)
#loc86 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":48:5)
#loc87 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":49:5)
#loc88 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":63:5)
#loc89 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":49:8)
#loc90 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":49:27)
#loc91 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":50:5)
#loc92 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":53:5)
#loc93 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":55:5)
#loc94 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":52:9)
#loc95 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":57:9)
#loc96 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":62:9)
#loc97 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":57:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":57:21)
#loc99 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":58:9)
#loc100 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":59:23)
#loc101 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":59:13)
#loc102 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":59:18)
#loc103 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":59:19)
#loc104 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":60:31)
#loc105 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":60:36)
#loc106 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":60:37)
#loc107 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":60:13)
#loc108 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":61:13)
#loc109 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":61:18)
#loc110 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":67:1)
#loc111 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":83:1)
#loc112 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":69:5)
#loc113 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":69:15)
#loc114 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":70:12)
#loc115 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":70:5)
#loc116 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":72:23)
#loc117 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":72:30)
#loc118 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":72:33)
#loc119 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":72:47)
#loc120 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":72:48)
#loc121 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":72:5)
#loc122 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":73:5)
#loc123 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":82:5)
#loc124 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":73:8)
#loc125 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":73:26)
#loc126 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":74:5)
#loc127 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":76:9)
#loc128 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":81:9)
#loc129 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":76:13)
#loc130 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":76:21)
#loc131 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":77:9)
#loc132 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":78:23)
#loc133 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":78:13)
#loc134 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":78:18)
#loc135 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":78:19)
#loc136 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":79:31)
#loc137 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":79:36)
#loc138 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":79:37)
#loc139 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":79:13)
#loc140 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":80:13)
#loc141 = loc("CWE690_NULL_Deref_From_Return__int64_t_calloc_11.c":80:18)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc10])
#loc147 = loc(fused[#loc11, #loc12])
#loc148 = loc(fused[#loc14, #loc13])
#loc149 = loc(fused[#loc17, #loc18])
#loc150 = loc(fused[#loc15, #loc19])
#loc151 = loc(fused[#loc20, #loc19])
#loc152 = loc(fused[#loc21, #loc22])
#loc153 = loc(fused[#loc23, #loc24])
#loc154 = loc(fused[#loc25, #loc22])
#loc155 = loc(fused[#loc27, #loc26])
#loc156 = loc(fused[#loc36, #loc37])
#loc157 = loc(fused[#loc38, #loc39])
#loc158 = loc(fused[#loc40, #loc41])
#loc159 = loc(fused[#loc42, #loc43])
#loc160 = loc(fused[#loc44, #loc45])
#loc161 = loc(fused[#loc46, #loc47])
#loc162 = loc(fused[#loc52, #loc53])
#loc165 = loc(fused[#loc63, #loc64])
#loc166 = loc(fused[#loc67, #loc68])
#loc167 = loc(fused[#loc71, #loc70])
#loc168 = loc(fused[#loc72, #loc73])
#loc169 = loc(fused[#loc75, #loc76])
#loc170 = loc(fused[#loc77, #loc78])
#loc171 = loc(fused[#loc80, #loc79])
#loc172 = loc(fused[#loc83, #loc84])
#loc173 = loc(fused[#loc81, #loc85])
#loc174 = loc(fused[#loc86, #loc85])
#loc175 = loc(fused[#loc87, #loc88])
#loc176 = loc(fused[#loc89, #loc90])
#loc177 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc178 = loc(fused[#loc95, #loc96])
#loc179 = loc(fused[#loc97, #loc98])
#loc180 = loc(fused[#loc99, #loc96])
#loc181 = loc(fused[#loc101, #loc100])
#loc182 = loc(fused[#loc110, #loc111])
#loc183 = loc(fused[#loc112, #loc113])
#loc184 = loc(fused[#loc115, #loc114])
#loc185 = loc(fused[#loc118, #loc119])
#loc186 = loc(fused[#loc116, #loc120])
#loc187 = loc(fused[#loc121, #loc120])
#loc188 = loc(fused[#loc122, #loc123])
#loc189 = loc(fused[#loc124, #loc125])
#loc190 = loc(fused[#loc126, #loc123])
#loc191 = loc(fused[#loc127, #loc128])
#loc192 = loc(fused[#loc129, #loc130])
#loc193 = loc(fused[#loc131, #loc128])
#loc194 = loc(fused[#loc133, #loc132])
