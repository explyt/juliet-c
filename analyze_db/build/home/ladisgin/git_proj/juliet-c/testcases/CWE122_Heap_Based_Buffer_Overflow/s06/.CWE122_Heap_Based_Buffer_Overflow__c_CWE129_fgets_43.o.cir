!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":27:23)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":27:28)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":83:27)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":83:32)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":125:27)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":125:32)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:23)
#true = #cir.bool<true> : !cir.bool
#loc281 = loc(fused[#loc10, #loc11])
#loc319 = loc(fused[#loc109, #loc110])
#loc347 = loc(fused[#loc181, #loc182])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc277)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc278)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc282)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc281)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    cir.br ^bb1 loc(#loc283)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc282)
    cir.store %2, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc282)
    cir.br ^bb2 loc(#loc284)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc19)
    %4 = cir.const #cir.int<3> : !s32i loc(#loc20)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc20)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc20)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc20)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc20)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
    %10 = cir.binop(add, %7, %9) : !u64i loc(#loc20)
    %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc20)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc278)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc22)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc285)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc286)
  ^bb3:  // pred: ^bb2
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
    %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb5 loc(#loc25)
  ^bb4:  // pred: ^bb2
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb5 loc(#loc18)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc16)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc9)
  } loc(#loc280)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc288)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc289)
  cir.func private @printIntLine(!s32i) loc(#loc290)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc40)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc292)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc294)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc295)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc296)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc52)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L9badSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc54)
    cir.br ^bb1 loc(#loc298)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc57)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc58)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc58)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc299)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc300)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc301)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc295)
    cir.br ^bb2 loc(#loc302)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc64)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc303)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc304)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc68)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc62)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc305)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb7 loc(#loc305)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc74)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc307)
    cir.brcond %21 ^bb8, ^bb10 loc(#loc307)
  ^bb8:  // pred: ^bb7
    %22 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.br ^bb9 loc(#loc70)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc80)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.br ^bb7 loc(#loc305)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc70)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc310)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %30 = cir.cmp(ge, %28, %29) : !s32i, !cir.bool loc(#loc311)
    cir.brcond %30 ^bb13, ^bb20 loc(#loc312)
  ^bb13:  // pred: ^bb12
    %31 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc91)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.br ^bb14 loc(#loc314)
  ^bb14:  // pred: ^bb13
    %35 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb15 loc(#loc314)
  ^bb15:  // 2 preds: ^bb14, ^bb17
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc97)
    %38 = cir.cmp(lt, %36, %37) : !s32i, !cir.bool loc(#loc316)
    cir.brcond %38 ^bb16, ^bb18 loc(#loc316)
  ^bb16:  // pred: ^bb15
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    %40 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc100)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc101)
    cir.br ^bb17 loc(#loc93)
  ^bb17:  // pred: ^bb16
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %44 = cir.unary(inc, %43) : !s32i, !s32i loc(#loc103)
    cir.store %44, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb15 loc(#loc314)
  ^bb18:  // pred: ^bb15
    cir.br ^bb19 loc(#loc93)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc86)
  ^bb20:  // pred: ^bb12
    %45 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc40)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb21 loc(#loc82)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc82)
  ^bb22:  // pred: ^bb21
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc105)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb23 loc(#loc56)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc44)
  } loc(#loc293)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc109, #loc110])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc319)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc111)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc112)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.return loc(#loc108)
  } loc(#loc318)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc322)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc323)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc324)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc123)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L13goodG2BSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc125)
    cir.br ^bb1 loc(#loc326)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc128)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc129)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc129)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc327)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc328)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc329)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc323)
    cir.br ^bb2 loc(#loc330)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc135)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc331)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc332)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc139)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc333)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc142)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb7 loc(#loc333)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc145)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc335)
    cir.brcond %21 ^bb8, ^bb10 loc(#loc335)
  ^bb8:  // pred: ^bb7
    %22 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc149)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb9 loc(#loc141)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc151)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb7 loc(#loc333)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc141)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc338)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %30 = cir.cmp(ge, %28, %29) : !s32i, !cir.bool loc(#loc339)
    cir.brcond %30 ^bb13, ^bb20 loc(#loc340)
  ^bb13:  // pred: ^bb12
    %31 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc162)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.br ^bb14 loc(#loc342)
  ^bb14:  // pred: ^bb13
    %35 = cir.const #cir.int<0> : !s32i loc(#loc165)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb15 loc(#loc342)
  ^bb15:  // 2 preds: ^bb14, ^bb17
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc168)
    %38 = cir.cmp(lt, %36, %37) : !s32i, !cir.bool loc(#loc344)
    cir.brcond %38 ^bb16, ^bb18 loc(#loc344)
  ^bb16:  // pred: ^bb15
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
    %40 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc171)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc172)
    cir.br ^bb17 loc(#loc164)
  ^bb17:  // pred: ^bb16
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %44 = cir.unary(inc, %43) : !s32i, !s32i loc(#loc174)
    cir.store %44, %0 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb15 loc(#loc342)
  ^bb18:  // pred: ^bb15
    cir.br ^bb19 loc(#loc164)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc157)
  ^bb20:  // pred: ^bb12
    %45 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc175)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    cir.br ^bb21 loc(#loc153)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc153)
  ^bb22:  // pred: ^bb21
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc177)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc177)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc178)
    cir.br ^bb23 loc(#loc127)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc115)
  } loc(#loc321)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc181, #loc182])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc348)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc347)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc185)
    cir.br ^bb1 loc(#loc349)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc348)
    cir.store %2, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc348)
    cir.br ^bb2 loc(#loc350)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc190)
    %4 = cir.const #cir.int<3> : !s32i loc(#loc191)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc191)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc191)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc191)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc191)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc191)
    %10 = cir.binop(add, %7, %9) : !u64i loc(#loc191)
    %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc191)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc278)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc192)
    %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc193)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc194)
    %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc351)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc352)
  ^bb3:  // pred: ^bb2
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc198)
    %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc199)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc200)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.br ^bb5 loc(#loc196)
  ^bb4:  // pred: ^bb2
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc202)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    cir.br ^bb5 loc(#loc189)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc189)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc187)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc180)
  } loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc204)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc355)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc356)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc357)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc214)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L13goodB2GSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc216)
    cir.br ^bb1 loc(#loc359)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc219)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc220)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc220)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc360)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc361)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc362)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc356)
    cir.br ^bb2 loc(#loc363)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc225)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc226)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc364)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc365)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc228)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc229)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc230)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc228)
    cir.br ^bb4 loc(#loc224)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc224)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc366)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc233)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    cir.br ^bb7 loc(#loc366)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc236)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc368)
    cir.brcond %21 ^bb8, ^bb10 loc(#loc368)
  ^bb8:  // pred: ^bb7
    %22 = cir.const #cir.int<0> : !s32i loc(#loc237)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc238)
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc240)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    cir.br ^bb9 loc(#loc232)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc242)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    cir.br ^bb7 loc(#loc366)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc232)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc371)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc246)
    %30 = cir.cmp(ge, %28, %29) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %30 ^bb13, ^bb18 loc(#loc247)
  ^bb13:  // pred: ^bb12
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    %32 = cir.const #cir.int<10> : !s32i loc(#loc249)
    %33 = cir.cmp(lt, %31, %32) : !s32i, !cir.bool loc(#loc373)
    cir.brcond %33 ^bb14, ^bb15 loc(#loc247)
  ^bb14:  // pred: ^bb13
    %34 = cir.const #true loc(#loc247)
    cir.br ^bb16(%34 : !cir.bool) loc(#loc247)
  ^bb15:  // pred: ^bb13
    %35 = cir.const #false loc(#loc247)
    cir.br ^bb16(%35 : !cir.bool) loc(#loc247)
  ^bb16(%36: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:23)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc247)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%36 : !cir.bool) loc(#loc247)
  ^bb18:  // pred: ^bb12
    %37 = cir.const #false loc(#loc247)
    cir.br ^bb19(%37 : !cir.bool) loc(#loc247)
  ^bb19(%38: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:23)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc247)
  ^bb20:  // pred: ^bb19
    cir.brcond %38 ^bb21, ^bb28 loc(#loc374)
  ^bb21:  // pred: ^bb20
    %39 = cir.const #cir.int<1> : !s32i loc(#loc254)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc255)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc257)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.br ^bb22 loc(#loc376)
  ^bb22:  // pred: ^bb21
    %43 = cir.const #cir.int<0> : !s32i loc(#loc260)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb23 loc(#loc376)
  ^bb23:  // 2 preds: ^bb22, ^bb25
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc263)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc378)
    cir.brcond %46 ^bb24, ^bb26 loc(#loc378)
  ^bb24:  // pred: ^bb23
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc264)
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc266)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc267)
    cir.br ^bb25 loc(#loc259)
  ^bb25:  // pred: ^bb24
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %52 = cir.unary(inc, %51) : !s32i, !s32i loc(#loc269)
    cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.br ^bb23 loc(#loc376)
  ^bb26:  // pred: ^bb23
    cir.br ^bb27 loc(#loc259)
  ^bb27:  // pred: ^bb26
    cir.br ^bb29 loc(#loc252)
  ^bb28:  // pred: ^bb20
    %53 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc204)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc270)
    cir.br ^bb29 loc(#loc244)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc244)
  ^bb30:  // pred: ^bb29
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc271)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc271)
    cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc272)
    cir.br ^bb31 loc(#loc218)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc206)
  } loc(#loc354)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L7goodG2BEv() : () -> () loc(#loc275)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L7goodB2GEv() : () -> () loc(#loc276)
    cir.return loc(#loc274)
  } loc(#loc380)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":39:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":27:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":42:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":30:9)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":30:45)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":28:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":29:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":41:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":40:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:19)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:32)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:49)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:59)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":33:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":36:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":38:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":35:25)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":35:20)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":35:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":35:36)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":39:13)
#loc32 = loc("/usr/include/stdlib.h":672:1)
#loc33 = loc("/usr/include/stdlib.h":672:45)
#loc34 = loc("/usr/include/stdlib.h":756:1)
#loc35 = loc("/usr/include/stdlib.h":756:70)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":72:23)
#loc41 = loc("/usr/include/stdlib.h":687:1)
#loc42 = loc("/usr/include/stdlib.h":687:32)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":44:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":76:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":51:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":51:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:54)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":46:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":46:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":48:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":48:12)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":48:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":49:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":50:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":75:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:31)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:38)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:43)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:53)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:39)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:23)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:29)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:30)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:36)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:35)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":58:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:18)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:14)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:21)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:25)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":57:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":57:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":57:20)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":57:21)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:30)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:29)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":61:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":73:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":61:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":61:21)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":62:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":69:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":71:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":63:28)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":63:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":63:20)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":63:24)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":68:13)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:21)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:17)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:24)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:28)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":67:30)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":67:37)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":67:38)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":67:17)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:33)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:32)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":72:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":74:14)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":74:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":83:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":88:1)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":84:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":87:12)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":87:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":90:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":122:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":97:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":97:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:54)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":92:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":92:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":94:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":94:12)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":94:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":95:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":96:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":121:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:31)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:38)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:43)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:53)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:39)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:23)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:29)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:30)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:36)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:35)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":104:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:18)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:14)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:21)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:25)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":103:25)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":103:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":103:20)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":103:21)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:30)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:29)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":107:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":119:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":107:13)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":107:21)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":108:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":115:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":117:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":109:28)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":109:13)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":109:20)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":109:24)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:13)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":114:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:21)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:17)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:24)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:28)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":113:30)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":113:37)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":113:38)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":113:17)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:33)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:32)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":118:23)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":118:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":120:14)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":120:9)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":125:1)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":140:1)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":128:9)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":128:45)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":126:1)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":127:5)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":139:5)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:9)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":138:9)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:19)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:32)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:49)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:59)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":131:9)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":134:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":136:9)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":133:25)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":133:20)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":133:13)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":133:36)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":137:23)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":137:13)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":169:23)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":142:1)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":173:1)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":149:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":149:13)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:9)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:54)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":144:5)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":144:9)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":146:13)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":146:12)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":146:5)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":147:5)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":148:5)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":172:5)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:31)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:38)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:43)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:53)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:9)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:39)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:13)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:23)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:29)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:30)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:36)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:35)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:9)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":156:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:18)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:14)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:21)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:25)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":155:25)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":155:13)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":155:20)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":155:21)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:30)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:29)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:9)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":170:9)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:21)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:26)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:34)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:36)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":159:9)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":166:9)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":168:9)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":160:28)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":160:13)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":160:20)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":160:24)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:13)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":165:13)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:21)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:17)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:24)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:28)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":164:30)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":164:37)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":164:38)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":164:17)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:33)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:32)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":169:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":171:14)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":171:9)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":175:1)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":179:1)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":177:5)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":178:5)
#loc277 = loc(fused[#loc1, #loc2])
#loc278 = loc(fused[#loc3, #loc4])
#loc279 = loc(fused[#loc5, #loc6])
#loc280 = loc(fused[#loc8, #loc9])
#loc282 = loc(fused[#loc12, #loc13])
#loc283 = loc(fused[#loc15, #loc16])
#loc284 = loc(fused[#loc17, #loc18])
#loc285 = loc(fused[#loc22, #loc23])
#loc286 = loc(fused[#loc24, #loc25, #loc26, #loc18])
#loc287 = loc(fused[#loc29, #loc30])
#loc288 = loc(fused[#loc32, #loc33])
#loc289 = loc(fused[#loc34, #loc35])
#loc290 = loc(fused[#loc36, #loc37])
#loc291 = loc(fused[#loc38, #loc39])
#loc292 = loc(fused[#loc41, #loc42])
#loc293 = loc(fused[#loc43, #loc44])
#loc294 = loc(fused[#loc45, #loc46])
#loc295 = loc(fused[#loc47, #loc48])
#loc296 = loc(fused[#loc49, #loc50])
#loc297 = loc(fused[#loc53, #loc51])
#loc298 = loc(fused[#loc55, #loc56])
#loc299 = loc(fused[#loc59, #loc60])
#loc300 = loc(fused[#loc58, #loc60])
#loc301 = loc(fused[#loc57, #loc48])
#loc302 = loc(fused[#loc61, #loc62])
#loc303 = loc(fused[#loc63, #loc64])
#loc304 = loc(fused[#loc65, #loc62])
#loc305 = loc(fused[#loc69, #loc70])
#loc306 = loc(fused[#loc72, #loc71])
#loc307 = loc(fused[#loc73, #loc74])
#loc308 = loc(fused[#loc76, #loc75])
#loc309 = loc(fused[#loc80, #loc79])
#loc310 = loc(fused[#loc81, #loc82])
#loc311 = loc(fused[#loc83, #loc84])
#loc312 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc313 = loc(fused[#loc89, #loc88])
#loc314 = loc(fused[#loc92, #loc93])
#loc315 = loc(fused[#loc95, #loc94])
#loc316 = loc(fused[#loc96, #loc97])
#loc317 = loc(fused[#loc103, #loc102])
#loc318 = loc(fused[#loc107, #loc108])
#loc320 = loc(fused[#loc113, #loc112])
#loc321 = loc(fused[#loc114, #loc115])
#loc322 = loc(fused[#loc116, #loc117])
#loc323 = loc(fused[#loc118, #loc119])
#loc324 = loc(fused[#loc120, #loc121])
#loc325 = loc(fused[#loc124, #loc122])
#loc326 = loc(fused[#loc126, #loc127])
#loc327 = loc(fused[#loc130, #loc131])
#loc328 = loc(fused[#loc129, #loc131])
#loc329 = loc(fused[#loc128, #loc119])
#loc330 = loc(fused[#loc132, #loc133])
#loc331 = loc(fused[#loc134, #loc135])
#loc332 = loc(fused[#loc136, #loc133])
#loc333 = loc(fused[#loc140, #loc141])
#loc334 = loc(fused[#loc143, #loc142])
#loc335 = loc(fused[#loc144, #loc145])
#loc336 = loc(fused[#loc147, #loc146])
#loc337 = loc(fused[#loc151, #loc150])
#loc338 = loc(fused[#loc152, #loc153])
#loc339 = loc(fused[#loc154, #loc155])
#loc340 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc341 = loc(fused[#loc160, #loc159])
#loc342 = loc(fused[#loc163, #loc164])
#loc343 = loc(fused[#loc166, #loc165])
#loc344 = loc(fused[#loc167, #loc168])
#loc345 = loc(fused[#loc174, #loc173])
#loc346 = loc(fused[#loc179, #loc180])
#loc348 = loc(fused[#loc183, #loc184])
#loc349 = loc(fused[#loc186, #loc187])
#loc350 = loc(fused[#loc188, #loc189])
#loc351 = loc(fused[#loc193, #loc194])
#loc352 = loc(fused[#loc195, #loc196, #loc197, #loc189])
#loc353 = loc(fused[#loc200, #loc201])
#loc354 = loc(fused[#loc205, #loc206])
#loc355 = loc(fused[#loc207, #loc208])
#loc356 = loc(fused[#loc209, #loc210])
#loc357 = loc(fused[#loc211, #loc212])
#loc358 = loc(fused[#loc215, #loc213])
#loc359 = loc(fused[#loc217, #loc218])
#loc360 = loc(fused[#loc221, #loc222])
#loc361 = loc(fused[#loc220, #loc222])
#loc362 = loc(fused[#loc219, #loc210])
#loc363 = loc(fused[#loc223, #loc224])
#loc364 = loc(fused[#loc225, #loc226])
#loc365 = loc(fused[#loc227, #loc224])
#loc366 = loc(fused[#loc231, #loc232])
#loc367 = loc(fused[#loc234, #loc233])
#loc368 = loc(fused[#loc235, #loc236])
#loc369 = loc(fused[#loc238, #loc237])
#loc370 = loc(fused[#loc242, #loc241])
#loc371 = loc(fused[#loc243, #loc244])
#loc372 = loc(fused[#loc245, #loc246])
#loc373 = loc(fused[#loc248, #loc250])
#loc374 = loc(fused[#loc251, #loc252, #loc253, #loc244])
#loc375 = loc(fused[#loc255, #loc254])
#loc376 = loc(fused[#loc258, #loc259])
#loc377 = loc(fused[#loc261, #loc260])
#loc378 = loc(fused[#loc262, #loc263])
#loc379 = loc(fused[#loc269, #loc268])
#loc380 = loc(fused[#loc273, #loc274])
