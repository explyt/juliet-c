!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":44:70)
#loc6 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":44:84)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":61:74)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":61:88)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":73:74)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":73:88)
#loc66 = loc(fused[#loc5, #loc6])
#loc72 = loc(fused[#loc22, #loc23])
#loc79 = loc(fused[#loc42, #loc43])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc64)
  cir.func  @CWE190_Integer_Overflow__int_connect_socket_postinc_66b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc10)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc8)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc69)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc17)
      cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc70)
      %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc69)
      %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc19)
    } loc(#loc68)
    cir.return loc(#loc4)
  } loc(#loc65)
  cir.func  @CWE190_Integer_Overflow__int_connect_socket_postinc_66b_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc22, #loc23])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc72)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc26)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc25)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc75)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc34)
      cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc76)
      %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc75)
      %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc36)
    } loc(#loc74)
    cir.return loc(#loc21)
  } loc(#loc71)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc77)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc39)
  cir.func  @CWE190_Integer_Overflow__int_connect_socket_postinc_66b_goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc42, #loc43])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc80)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc46)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc45)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.scope {
      %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
      %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc52)
      %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc82)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc53)
      cir.if %9 {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc84)
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc60)
        cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc85)
        %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
        cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc84)
        %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc61)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc62)
      } else {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc39)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } loc(#loc83)
    } loc(#loc81)
    cir.return loc(#loc41)
  } loc(#loc78)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":44:1)
#loc4 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":54:1)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":47:5)
#loc8 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":47:27)
#loc9 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":45:1)
#loc10 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":47:16)
#loc11 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":47:26)
#loc12 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":48:5)
#loc13 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":53:5)
#loc14 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":51:9)
#loc15 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":51:22)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":50:13)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":50:9)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":52:22)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":52:9)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":61:1)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":70:1)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":63:5)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":63:27)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":62:1)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":63:16)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":63:26)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":64:5)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":69:5)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":67:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":67:22)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":66:13)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":66:9)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":68:22)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":68:9)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":85:19)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":73:1)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":87:1)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":75:5)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":75:27)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":74:1)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":75:16)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":75:26)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":77:5)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":86:5)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":77:9)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":77:16)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":77:14)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":78:5)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":82:5)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":84:5)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":80:9)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":80:22)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":79:13)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":79:9)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":81:22)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":81:9)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_postinc_66b.c":85:9)
#loc64 = loc(fused[#loc1, #loc2])
#loc65 = loc(fused[#loc3, #loc4])
#loc67 = loc(fused[#loc7, #loc8])
#loc68 = loc(fused[#loc12, #loc13])
#loc69 = loc(fused[#loc14, #loc15])
#loc70 = loc(fused[#loc17, #loc16])
#loc71 = loc(fused[#loc20, #loc21])
#loc73 = loc(fused[#loc24, #loc25])
#loc74 = loc(fused[#loc29, #loc30])
#loc75 = loc(fused[#loc31, #loc32])
#loc76 = loc(fused[#loc34, #loc33])
#loc77 = loc(fused[#loc37, #loc38])
#loc78 = loc(fused[#loc40, #loc41])
#loc80 = loc(fused[#loc44, #loc45])
#loc81 = loc(fused[#loc49, #loc50])
#loc82 = loc(fused[#loc51, #loc52])
#loc83 = loc(fused[#loc54, #loc55, #loc56, #loc50])
#loc84 = loc(fused[#loc57, #loc58])
#loc85 = loc(fused[#loc60, #loc59])
