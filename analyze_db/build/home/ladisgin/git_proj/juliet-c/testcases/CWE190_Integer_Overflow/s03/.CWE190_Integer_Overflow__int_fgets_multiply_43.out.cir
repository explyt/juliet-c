!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":27:23)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":27:28)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":63:27)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":63:32)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":84:27)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":84:32)
#loc144 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":141:10)
#loc145 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":141:14)
#loc146 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":141:20)
#loc147 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":141:32)
#loc164 = loc(fused[#loc10, #loc11])
#loc180 = loc(fused[#loc53, #loc54])
#loc190 = loc(fused[#loc77, #loc78])
#loc213 = loc(fused[#loc144, #loc145])
#loc214 = loc(fused[#loc146, #loc147])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc160)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc161)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc164)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc166)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc166)
      cir.store %2, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc166)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc19)
        %4 = cir.const #cir.int<3> : !s32i loc(#loc20)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc20)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc20)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc20)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc20)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
        %10 = cir.binop(add, %7, %9) : !u64i loc(#loc20)
        %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc20)
        %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc161)
        %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc22)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
        %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
        cir.if %16 {
          %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
          %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
          cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc170)
        } else {
          %17 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        } loc(#loc169)
      } loc(#loc167)
    } loc(#loc165)
    cir.return loc(#loc9)
  } loc(#loc163)
  cir.func private @printIntLine(!s32i) loc(#loc171)
  cir.func @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc38)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc40)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc176)
      cir.if %4 {
        %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc178)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
        %7 = cir.const #cir.int<2> : !s32i loc(#loc47)
        %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc48)
        cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc178)
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc49)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc50)
      } loc(#loc177)
    } loc(#loc175)
    cir.return loc(#loc35)
  } loc(#loc172)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc53, #loc54])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc180)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc55)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc56)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.return loc(#loc52)
  } loc(#loc179)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc64)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc68)
      %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc186)
      cir.if %4 {
        %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc188)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
        %7 = cir.const #cir.int<2> : !s32i loc(#loc71)
        %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc72)
        cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc188)
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc73)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc74)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc59)
  } loc(#loc182)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc77, #loc78])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc190)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc79)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc192)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc192)
      cir.store %2, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc192)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc86)
        %4 = cir.const #cir.int<3> : !s32i loc(#loc87)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc87)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc87)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc87)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc87)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc87)
        %10 = cir.binop(add, %7, %9) : !u64i loc(#loc87)
        %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc87)
        %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc161)
        %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
        %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc89)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc90)
        %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc194)
        cir.if %16 {
          %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc94)
          %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc95)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
          cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc196)
        } else {
          %17 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc99)
        } loc(#loc195)
      } loc(#loc193)
    } loc(#loc191)
    cir.return loc(#loc76)
  } loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc100)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc107)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc111)
      %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc201)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc116)
          %7 = cir.const #cir.int<2> : !s32i loc(#loc117)
          %8 = cir.binop(div, %6, %7) : !s32i loc(#loc204)
          %9 = cir.cmp(lt, %5, %8) : !s32i, !cir.bool loc(#loc205)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc207)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc123)
            %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc124)
            cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc207)
            %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc126)
          } else {
            %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc100)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc100)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc127)
          } loc(#loc206)
        } loc(#loc203)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc102)
  } loc(#loc197)
  cir.func @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L7goodG2BEv() : () -> () loc(#loc130)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_43L7goodB2GEv() : () -> () loc(#loc131)
    cir.return loc(#loc129)
  } loc(#loc208)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc209)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc210)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc141)
  cir.func @main(%arg0: !s32i loc(fused[#loc144, #loc145]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc146, #loc147])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc214)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc143)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc148)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc149)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc150)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc150)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc151)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc138)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_434goodEv() : () -> () loc(#loc153)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc139)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc140)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_433badEv() : () -> () loc(#loc156)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc141)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc157)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc158)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %15 : !s32i loc(#loc215)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":39:23)
#loc8 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":27:1)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":42:1)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":28:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":29:5)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":41:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":30:9)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":30:45)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":32:9)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":40:9)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":32:19)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":32:32)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":32:49)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":32:13)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":32:59)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":33:9)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":36:9)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":38:9)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":35:25)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":35:20)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":35:13)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":35:36)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":39:13)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":44:1)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":56:1)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":46:5)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":46:9)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":48:12)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":48:5)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":49:5)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":50:5)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":55:5)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":50:8)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":50:15)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":51:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":53:9)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":53:29)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":53:22)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":54:22)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":54:9)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":63:1)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":67:1)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":64:1)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":66:12)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":66:5)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":69:1)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":81:1)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":71:5)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":71:9)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":73:12)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":73:5)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":74:5)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":75:5)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":80:5)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":75:8)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":75:15)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":76:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":78:9)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":78:29)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":78:22)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":79:22)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":79:9)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":84:1)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":99:1)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":85:1)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":86:5)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":98:5)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":87:9)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":87:45)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":89:9)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":97:9)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":89:19)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":89:32)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":89:49)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":89:13)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":89:59)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":90:9)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":93:9)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":95:9)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":92:25)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":92:20)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":92:13)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":92:36)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":96:23)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":96:13)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":117:23)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":101:1)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":120:1)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":103:5)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":103:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":105:12)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":105:5)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":106:5)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":107:5)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":119:5)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":107:8)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":107:15)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":108:5)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":110:9)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":118:9)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":110:13)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":110:21)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":110:29)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":110:30)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":111:9)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":114:9)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":116:9)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":112:13)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":112:33)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":112:26)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":113:26)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":113:13)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":117:13)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":122:1)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":126:1)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":124:5)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":125:5)
#loc132 = loc("/usr/include/stdlib.h":575:1)
#loc133 = loc("/usr/include/stdlib.h":575:41)
#loc134 = loc("/usr/include/time.h":76:1)
#loc135 = loc("/usr/include/time.h":76:38)
#loc136 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc137 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":146:15)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":148:15)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":151:15)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":153:15)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":141:1)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":156:1)
#loc148 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":142:1)
#loc149 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":144:27)
#loc150 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":144:22)
#loc151 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":144:5)
#loc152 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":146:5)
#loc153 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":147:5)
#loc154 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":148:5)
#loc155 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":151:5)
#loc156 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":152:5)
#loc157 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":153:5)
#loc158 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":155:12)
#loc159 = loc("CWE190_Integer_Overflow__int_fgets_multiply_43.cpp":155:5)
#loc160 = loc(fused[#loc1, #loc2])
#loc161 = loc(fused[#loc3, #loc4])
#loc162 = loc(fused[#loc5, #loc6])
#loc163 = loc(fused[#loc8, #loc9])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc17, #loc18])
#loc168 = loc(fused[#loc22, #loc23])
#loc169 = loc(fused[#loc24, #loc25, #loc26, #loc18])
#loc170 = loc(fused[#loc29, #loc30])
#loc171 = loc(fused[#loc32, #loc33])
#loc172 = loc(fused[#loc34, #loc35])
#loc173 = loc(fused[#loc36, #loc37])
#loc174 = loc(fused[#loc39, #loc38])
#loc175 = loc(fused[#loc41, #loc42])
#loc176 = loc(fused[#loc43, #loc44])
#loc177 = loc(fused[#loc45, #loc42])
#loc178 = loc(fused[#loc46, #loc47])
#loc179 = loc(fused[#loc51, #loc52])
#loc181 = loc(fused[#loc57, #loc56])
#loc182 = loc(fused[#loc58, #loc59])
#loc183 = loc(fused[#loc60, #loc61])
#loc184 = loc(fused[#loc63, #loc62])
#loc185 = loc(fused[#loc65, #loc66])
#loc186 = loc(fused[#loc67, #loc68])
#loc187 = loc(fused[#loc69, #loc66])
#loc188 = loc(fused[#loc70, #loc71])
#loc189 = loc(fused[#loc75, #loc76])
#loc191 = loc(fused[#loc80, #loc81])
#loc192 = loc(fused[#loc82, #loc83])
#loc193 = loc(fused[#loc84, #loc85])
#loc194 = loc(fused[#loc89, #loc90])
#loc195 = loc(fused[#loc91, #loc92, #loc93, #loc85])
#loc196 = loc(fused[#loc96, #loc97])
#loc197 = loc(fused[#loc101, #loc102])
#loc198 = loc(fused[#loc103, #loc104])
#loc199 = loc(fused[#loc106, #loc105])
#loc200 = loc(fused[#loc108, #loc109])
#loc201 = loc(fused[#loc110, #loc111])
#loc202 = loc(fused[#loc112, #loc109])
#loc203 = loc(fused[#loc113, #loc114])
#loc204 = loc(fused[#loc116, #loc117])
#loc205 = loc(fused[#loc115, #loc118])
#loc206 = loc(fused[#loc119, #loc120, #loc121, #loc114])
#loc207 = loc(fused[#loc122, #loc123])
#loc208 = loc(fused[#loc128, #loc129])
#loc209 = loc(fused[#loc132, #loc133])
#loc210 = loc(fused[#loc134, #loc135])
#loc211 = loc(fused[#loc136, #loc137])
#loc212 = loc(fused[#loc142, #loc143])
#loc215 = loc(fused[#loc159, #loc158])
