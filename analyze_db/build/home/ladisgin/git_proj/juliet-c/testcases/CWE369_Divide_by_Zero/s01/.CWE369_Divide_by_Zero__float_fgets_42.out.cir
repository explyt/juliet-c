!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":26:24)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":26:30)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":134:10)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":134:14)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":134:20)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":134:32)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":83:28)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":83:34)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":62:28)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":62:34)
#loc174 = loc(fused[#loc10, #loc11])
#loc197 = loc(fused[#loc72, #loc73])
#loc198 = loc(fused[#loc74, #loc75])
#loc203 = loc(fused[#loc92, #loc93])
#loc221 = loc(fused[#loc145, #loc146])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc170)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc171)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @badSource(%arg0: !cir.float loc(fused[#loc10, #loc11])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc9)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc12)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc176)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc19)
        %6 = cir.const #cir.int<20> : !s32i loc(#loc20)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc171)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc22)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc23)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc178)
        cir.if %12 {
          %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc27)
          %14 = cir.call @atof(%13) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc28)
          %15 = cir.cast(floating, %14 : !cir.double), !cir.float loc(#loc28)
          cir.store %15, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc180)
        } else {
          %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        } loc(#loc179)
      } loc(#loc177)
    } loc(#loc175)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc32)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc181)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc181)
    cir.return %3 : !cir.float loc(#loc181)
  } loc(#loc173)
  cir.func private @printIntLine(!s32i) loc(#loc182)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc40)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc185)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc42)
    %3 = cir.call @badSource(%2) : (!cir.float) -> !cir.float loc(#loc43)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc186)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc188)
      %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc50)
      %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc51)
      %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc51)
      %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc189)
      %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc189)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc188)
      %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc52)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc53)
    } loc(#loc187)
    cir.return loc(#loc37)
  } loc(#loc183)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc190)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc193)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc194)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call @CWE369_Divide_by_Zero__float_fgets_42_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE369_Divide_by_Zero__float_fgets_42_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    cir.return %17 : !s32i loc(#loc201)
  } loc(#loc196)
  cir.func internal private @goodB2GSource(%arg0: !cir.float loc(fused[#loc92, #loc93])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc94)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc205)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc101)
        %6 = cir.const #cir.int<20> : !s32i loc(#loc102)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc171)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
        %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc104)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc207)
        cir.if %12 {
          %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc109)
          %14 = cir.call @atof(%13) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc110)
          %15 = cir.cast(floating, %14 : !cir.double), !cir.float loc(#loc110)
          cir.store %15, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc209)
        } else {
          %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc113)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        } loc(#loc208)
      } loc(#loc206)
    } loc(#loc204)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc115)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc210)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc210)
    cir.return %3 : !cir.float loc(#loc210)
  } loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc117)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc212)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc122)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc213)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc124)
    %3 = cir.call @goodB2GSource(%2) : (!cir.float) -> !cir.float loc(#loc125)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc214)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc130)
      %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc130)
      %6 = cir.fabs %5 : !cir.double loc(#loc130)
      %7 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc131)
      %8 = cir.cmp(gt, %6, %7) : !cir.double, !cir.bool loc(#loc216)
      cir.if %8 {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc218)
        %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc138)
        %11 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc139)
        %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc139)
        %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc219)
        %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc219)
        cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc218)
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc141)
      } else {
        %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc117)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc117)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc142)
      } loc(#loc217)
    } loc(#loc215)
    cir.return loc(#loc119)
  } loc(#loc211)
  cir.func internal private @goodG2BSource(%arg0: !cir.float loc(fused[#loc145, #loc146])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc221)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc144)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc147)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc148)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc222)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc150)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc223)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc223)
    cir.return %4 : !cir.float loc(#loc223)
  } loc(#loc220)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc156)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc226)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc158)
    %3 = cir.call @goodG2BSource(%2) : (!cir.float) -> !cir.float loc(#loc159)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc227)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc229)
      %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc166)
      %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc167)
      %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc167)
      %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc230)
      %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc230)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc229)
      %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc168)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc169)
    } loc(#loc228)
    cir.return loc(#loc153)
  } loc(#loc224)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":38:23)
#loc8 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":26:1)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":42:1)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":27:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":28:5)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":40:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":29:9)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":29:41)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:9)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":39:9)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:19)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:32)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:49)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:13)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:59)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":32:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":35:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":37:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":34:32)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":34:27)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":34:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":34:43)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":38:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":41:12)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":41:5)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":44:1)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":55:1)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":46:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":46:11)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":48:12)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":48:5)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":49:22)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":49:12)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":49:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":49:26)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":50:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":54:5)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":52:9)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":52:40)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":52:28)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":52:36)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":53:22)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":53:9)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":119:1)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":123:1)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":121:5)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":121:13)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":122:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":122:13)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":139:15)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":141:15)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":144:15)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":146:15)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":134:1)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":149:1)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":135:1)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":137:27)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":137:22)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":137:5)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":139:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":140:5)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":140:48)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":141:5)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":144:5)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":145:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":145:47)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":146:5)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":148:12)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":148:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":83:1)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":99:1)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":84:1)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":85:5)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":97:5)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":86:9)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":86:41)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:9)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":96:9)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:19)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:32)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:49)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:13)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:59)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":89:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":92:9)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":94:9)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":91:32)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":91:27)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":91:13)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":91:43)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":95:23)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":95:13)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":98:12)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":98:5)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":115:19)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":101:1)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":117:1)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":103:5)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":103:11)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":105:12)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":105:5)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":106:26)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":106:12)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":106:5)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":106:30)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":108:5)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":116:5)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":108:13)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":108:21)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":108:8)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":109:5)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":112:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":114:5)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":110:9)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":110:40)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":110:28)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":110:36)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":111:22)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":111:9)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":115:9)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":62:1)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":67:1)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":63:1)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":65:12)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":65:5)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":66:12)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":66:5)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":69:1)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":80:1)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":71:5)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":71:11)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":73:12)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":73:5)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":74:26)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":74:12)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":74:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":74:30)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":75:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":79:5)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":77:9)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":77:40)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":77:28)
#loc167 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":77:36)
#loc168 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":78:22)
#loc169 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":78:9)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc8, #loc9])
#loc175 = loc(fused[#loc13, #loc14])
#loc176 = loc(fused[#loc15, #loc16])
#loc177 = loc(fused[#loc17, #loc18])
#loc178 = loc(fused[#loc22, #loc23])
#loc179 = loc(fused[#loc24, #loc25, #loc26, #loc18])
#loc180 = loc(fused[#loc29, #loc30])
#loc181 = loc(fused[#loc33, #loc32])
#loc182 = loc(fused[#loc34, #loc35])
#loc183 = loc(fused[#loc36, #loc37])
#loc184 = loc(fused[#loc38, #loc39])
#loc185 = loc(fused[#loc41, #loc40])
#loc186 = loc(fused[#loc44, #loc45])
#loc187 = loc(fused[#loc46, #loc47])
#loc188 = loc(fused[#loc48, #loc49])
#loc189 = loc(fused[#loc50, #loc51])
#loc190 = loc(fused[#loc54, #loc55])
#loc191 = loc(fused[#loc56, #loc57])
#loc192 = loc(fused[#loc58, #loc59])
#loc193 = loc(fused[#loc60, #loc61])
#loc194 = loc(fused[#loc62, #loc63])
#loc195 = loc(fused[#loc64, #loc65])
#loc196 = loc(fused[#loc70, #loc71])
#loc199 = loc(fused[#loc81, #loc82])
#loc200 = loc(fused[#loc85, #loc86])
#loc201 = loc(fused[#loc89, #loc88])
#loc202 = loc(fused[#loc90, #loc91])
#loc204 = loc(fused[#loc95, #loc96])
#loc205 = loc(fused[#loc97, #loc98])
#loc206 = loc(fused[#loc99, #loc100])
#loc207 = loc(fused[#loc104, #loc105])
#loc208 = loc(fused[#loc106, #loc107, #loc108, #loc100])
#loc209 = loc(fused[#loc111, #loc112])
#loc210 = loc(fused[#loc116, #loc115])
#loc211 = loc(fused[#loc118, #loc119])
#loc212 = loc(fused[#loc120, #loc121])
#loc213 = loc(fused[#loc123, #loc122])
#loc214 = loc(fused[#loc126, #loc127])
#loc215 = loc(fused[#loc128, #loc129])
#loc216 = loc(fused[#loc132, #loc131])
#loc217 = loc(fused[#loc133, #loc134, #loc135, #loc129])
#loc218 = loc(fused[#loc136, #loc137])
#loc219 = loc(fused[#loc138, #loc139])
#loc220 = loc(fused[#loc143, #loc144])
#loc222 = loc(fused[#loc149, #loc148])
#loc223 = loc(fused[#loc151, #loc150])
#loc224 = loc(fused[#loc152, #loc153])
#loc225 = loc(fused[#loc154, #loc155])
#loc226 = loc(fused[#loc157, #loc156])
#loc227 = loc(fused[#loc160, #loc161])
#loc228 = loc(fused[#loc162, #loc163])
#loc229 = loc(fused[#loc164, #loc165])
#loc230 = loc(fused[#loc166, #loc167])
