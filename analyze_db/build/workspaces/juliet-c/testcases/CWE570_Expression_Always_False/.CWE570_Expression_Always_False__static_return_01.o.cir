!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE570_Expression_Always_False/CWE570_Expression_Always_False__static_return_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Never prints\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE570_Expression_Always_False__static_return_01_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc36)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc8)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc8)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc3)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc3)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc11)
      } loc(#loc37)
    } loc(#loc35)
    cir.return loc(#loc5)
  } loc(#loc34)
  cir.func no_proto @CWE570_Expression_Always_False__static_return_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc39)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc14)
    cir.return loc(#loc13)
  } loc(#loc38)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc17)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc18)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.return %2 : !s32i loc(#loc41)
  } loc(#loc40)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sometimes prints\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc45)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc45)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc27)
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc46)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc29)
      %5 = cir.cmp(eq, %2, %4) : !s32i, !cir.bool loc(#loc47)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc22)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc22)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc32)
      } loc(#loc48)
    } loc(#loc44)
    cir.return loc(#loc24)
  } loc(#loc43)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE570_Expression_Always_False/CWE570_Expression_Always_False__static_return_01.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE570_Expression_Always_False__static_return_01.c":20:19)
#loc4 = loc("CWE570_Expression_Always_False__static_return_01.c":15:1)
#loc5 = loc("CWE570_Expression_Always_False__static_return_01.c":22:1)
#loc6 = loc("CWE570_Expression_Always_False__static_return_01.c":18:5)
#loc7 = loc("CWE570_Expression_Always_False__static_return_01.c":21:5)
#loc8 = loc("CWE570_Expression_Always_False__static_return_01.c":18:9)
#loc9 = loc("CWE570_Expression_Always_False__static_return_01.c":18:28)
#loc10 = loc("CWE570_Expression_Always_False__static_return_01.c":19:5)
#loc11 = loc("CWE570_Expression_Always_False__static_return_01.c":20:9)
#loc12 = loc("CWE570_Expression_Always_False__static_return_01.c":38:1)
#loc13 = loc("CWE570_Expression_Always_False__static_return_01.c":41:1)
#loc14 = loc("CWE570_Expression_Always_False__static_return_01.c":40:5)
#loc15 = loc("CWE570_Expression_Always_False__static_return_01.c":40:11)
#loc16 = loc("CWE570_Expression_Always_False__static_return_01.c":8:1)
#loc17 = loc("CWE570_Expression_Always_False__static_return_01.c":11:1)
#loc18 = loc("CWE570_Expression_Always_False__static_return_01.c":10:12)
#loc19 = loc("CWE570_Expression_Always_False__static_return_01.c":10:5)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc22 = loc("CWE570_Expression_Always_False__static_return_01.c":34:19)
#loc23 = loc("CWE570_Expression_Always_False__static_return_01.c":29:1)
#loc24 = loc("CWE570_Expression_Always_False__static_return_01.c":36:1)
#loc25 = loc("CWE570_Expression_Always_False__static_return_01.c":32:5)
#loc26 = loc("CWE570_Expression_Always_False__static_return_01.c":35:5)
#loc27 = loc("CWE570_Expression_Always_False__static_return_01.c":32:9)
#loc28 = loc("CWE570_Expression_Always_False__static_return_01.c":32:34)
#loc29 = loc("CWE570_Expression_Always_False__static_return_01.c":32:39)
#loc30 = loc("CWE570_Expression_Always_False__static_return_01.c":32:58)
#loc31 = loc("CWE570_Expression_Always_False__static_return_01.c":33:5)
#loc32 = loc("CWE570_Expression_Always_False__static_return_01.c":34:9)
#loc33 = loc(fused[#loc1, #loc2])
#loc34 = loc(fused[#loc4, #loc5])
#loc35 = loc(fused[#loc6, #loc7])
#loc36 = loc(fused[#loc8, #loc9])
#loc37 = loc(fused[#loc10, #loc7])
#loc38 = loc(fused[#loc12, #loc13])
#loc39 = loc(fused[#loc14, #loc15])
#loc40 = loc(fused[#loc16, #loc17])
#loc41 = loc(fused[#loc19, #loc18])
#loc42 = loc(fused[#loc20, #loc21])
#loc43 = loc(fused[#loc23, #loc24])
#loc44 = loc(fused[#loc25, #loc26])
#loc45 = loc(fused[#loc27, #loc28])
#loc46 = loc(fused[#loc29, #loc30])
#loc47 = loc(fused[#loc27, #loc30])
#loc48 = loc(fused[#loc31, #loc26])
