!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc125)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc126)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%f\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc127)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fscanf_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc131)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc130)
    cir.store %0, %2 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc131)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc16)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc132)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc134)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc21)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc22)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc134)
      %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
      %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc126)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
      %12 = cir.call @__isoc99_fscanf(%9, %11, %4) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc23)
      %13 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc25)
      %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc26)
      cir.store %13, %14 : !cir.float, !cir.ptr<!cir.float> loc(#loc135)
    } loc(#loc133)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc137)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc31)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc32)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc137)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc139)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc37)
        %9 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc38)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc38)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc140)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc140)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc139)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc40)
      } loc(#loc138)
    } loc(#loc136)
    cir.return loc(#loc9)
  } loc(#loc128)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fscanf_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc141)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc146)
    %2 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc147)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc146)
    cir.store %0, %2 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc147)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc55)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc148)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc150)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc60)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc61)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc150)
      %7 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc62)
      cir.store %7, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc151)
      %8 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc64)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc65)
      cir.store %8, %9 : !cir.float, !cir.ptr<!cir.float> loc(#loc152)
    } loc(#loc149)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc154)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc70)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc71)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc154)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc156)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc76)
        %9 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc77)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc77)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc157)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc157)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc156)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc78)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc79)
      } loc(#loc155)
    } loc(#loc153)
    cir.return loc(#loc48)
  } loc(#loc144)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc82)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc162)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc161)
    cir.store %0, %2 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc162)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc91)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc163)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc165)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc96)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc97)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc165)
      %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc98)
      %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc126)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc100)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc100)
      %12 = cir.call @__isoc99_fscanf(%9, %11, %4) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc98)
      %13 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc101)
      %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc102)
      cir.store %13, %14 : !cir.float, !cir.ptr<!cir.float> loc(#loc166)
    } loc(#loc164)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc168)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc107)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc108)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc168)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc111)
        %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc111)
        %9 = cir.fabs %8 : !cir.double loc(#loc111)
        %10 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc112)
        %11 = cir.cmp(gt, %9, %10) : !cir.double, !s32i loc(#loc170)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc114)
        cir.if %12 {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc172)
          %14 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc120)
          %15 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc121)
          %16 = cir.cast(floating, %15 : !cir.float), !cir.double loc(#loc121)
          %17 = cir.binop(div, %14, %16) : !cir.double loc(#loc173)
          %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc173)
          cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc172)
          %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc122)
          cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc123)
        } else {
          %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc82)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc82)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc124)
        } loc(#loc171)
      } loc(#loc169)
    } loc(#loc167)
    cir.return loc(#loc84)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":34:24)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":24:1)
#loc9 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":45:1)
#loc10 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":26:5)
#loc11 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":26:11)
#loc12 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":27:5)
#loc13 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":27:24)
#loc14 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":28:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":28:24)
#loc16 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":30:12)
#loc17 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":30:5)
#loc18 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":31:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":36:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":32:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":32:23)
#loc22 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":32:22)
#loc23 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":34:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":34:17)
#loc25 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":35:21)
#loc26 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":35:10)
#loc27 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":35:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":37:5)
#loc29 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":44:5)
#loc30 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":38:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":38:23)
#loc32 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":38:22)
#loc33 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":39:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":43:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":41:13)
#loc36 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":41:44)
#loc37 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":41:32)
#loc38 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":41:40)
#loc39 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":42:26)
#loc40 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":42:13)
#loc41 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":104:1)
#loc42 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":108:1)
#loc43 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":106:5)
#loc44 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":106:13)
#loc45 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":107:5)
#loc46 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":107:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":52:1)
#loc48 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":73:1)
#loc49 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":54:5)
#loc50 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":54:11)
#loc51 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":55:5)
#loc52 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":55:24)
#loc53 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":56:5)
#loc54 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":56:24)
#loc55 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":58:12)
#loc56 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":58:5)
#loc57 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":59:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":64:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":60:9)
#loc60 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":60:23)
#loc61 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":60:22)
#loc62 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":62:16)
#loc63 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":62:9)
#loc64 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":63:21)
#loc65 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":63:10)
#loc66 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":63:9)
#loc67 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":65:5)
#loc68 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":72:5)
#loc69 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":66:9)
#loc70 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":66:23)
#loc71 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":66:22)
#loc72 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":67:9)
#loc73 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":71:9)
#loc74 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":69:13)
#loc75 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":69:44)
#loc76 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":69:32)
#loc77 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":69:40)
#loc78 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":70:26)
#loc79 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":70:13)
#loc80 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc81 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc82 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":99:23)
#loc83 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":76:1)
#loc84 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":102:1)
#loc85 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":78:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":78:11)
#loc87 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":79:5)
#loc88 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":79:24)
#loc89 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":80:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":80:24)
#loc91 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":82:12)
#loc92 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":82:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":83:5)
#loc94 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":88:5)
#loc95 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":84:9)
#loc96 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":84:23)
#loc97 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":84:22)
#loc98 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":86:9)
#loc99 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":86:17)
#loc100 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":86:24)
#loc101 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":87:21)
#loc102 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":87:10)
#loc103 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":87:9)
#loc104 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":89:5)
#loc105 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":101:5)
#loc106 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":90:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":90:23)
#loc108 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":90:22)
#loc109 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":92:9)
#loc110 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":100:9)
#loc111 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":92:17)
#loc112 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":92:25)
#loc113 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":92:12)
#loc114 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":92:23)
#loc115 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":93:9)
#loc116 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":96:9)
#loc117 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":98:9)
#loc118 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":94:13)
#loc119 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":94:44)
#loc120 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":94:32)
#loc121 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":94:40)
#loc122 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":95:26)
#loc123 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":95:13)
#loc124 = loc("CWE369_Divide_by_Zero__float_fscanf_32.c":99:13)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc6, #loc7])
#loc128 = loc(fused[#loc8, #loc9])
#loc129 = loc(fused[#loc10, #loc11])
#loc130 = loc(fused[#loc12, #loc13])
#loc131 = loc(fused[#loc14, #loc15])
#loc132 = loc(fused[#loc17, #loc16])
#loc133 = loc(fused[#loc18, #loc19])
#loc134 = loc(fused[#loc20, #loc21])
#loc135 = loc(fused[#loc27, #loc25])
#loc136 = loc(fused[#loc28, #loc29])
#loc137 = loc(fused[#loc30, #loc31])
#loc138 = loc(fused[#loc33, #loc34])
#loc139 = loc(fused[#loc35, #loc36])
#loc140 = loc(fused[#loc37, #loc38])
#loc141 = loc(fused[#loc41, #loc42])
#loc142 = loc(fused[#loc43, #loc44])
#loc143 = loc(fused[#loc45, #loc46])
#loc144 = loc(fused[#loc47, #loc48])
#loc145 = loc(fused[#loc49, #loc50])
#loc146 = loc(fused[#loc51, #loc52])
#loc147 = loc(fused[#loc53, #loc54])
#loc148 = loc(fused[#loc56, #loc55])
#loc149 = loc(fused[#loc57, #loc58])
#loc150 = loc(fused[#loc59, #loc60])
#loc151 = loc(fused[#loc63, #loc62])
#loc152 = loc(fused[#loc66, #loc64])
#loc153 = loc(fused[#loc67, #loc68])
#loc154 = loc(fused[#loc69, #loc70])
#loc155 = loc(fused[#loc72, #loc73])
#loc156 = loc(fused[#loc74, #loc75])
#loc157 = loc(fused[#loc76, #loc77])
#loc158 = loc(fused[#loc80, #loc81])
#loc159 = loc(fused[#loc83, #loc84])
#loc160 = loc(fused[#loc85, #loc86])
#loc161 = loc(fused[#loc87, #loc88])
#loc162 = loc(fused[#loc89, #loc90])
#loc163 = loc(fused[#loc92, #loc91])
#loc164 = loc(fused[#loc93, #loc94])
#loc165 = loc(fused[#loc95, #loc96])
#loc166 = loc(fused[#loc103, #loc101])
#loc167 = loc(fused[#loc104, #loc105])
#loc168 = loc(fused[#loc106, #loc107])
#loc169 = loc(fused[#loc109, #loc110])
#loc170 = loc(fused[#loc113, #loc112])
#loc171 = loc(fused[#loc115, #loc116, #loc117, #loc110])
#loc172 = loc(fused[#loc118, #loc119])
#loc173 = loc(fused[#loc120, #loc121])
