!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc154)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc158)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc160)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    cir.store %4, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc22)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc22)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc163)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc164)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc166)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc168)
    cir.brcond %15 ^bb2, ^bb3 loc(#loc169)
  ^bb2:  // pred: ^bb1
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb3 loc(#loc28)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc170)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc171)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc172)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc41)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    cir.br ^bb8 loc(#loc172)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc44)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc174)
    cir.brcond %24 ^bb9, ^bb13 loc(#loc45)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc175)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %29 = cir.get_member %28[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc50)
    cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %34 = cir.get_member %33[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb11 loc(#loc40)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc40)
  ^bb12:  // pred: ^bb11
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc56)
    cir.store %36, %1 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb8 loc(#loc172)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc40)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc38)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc179)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc180)
  ^bb17:  // pred: ^bb16
    %37 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc61)
    cir.store %38, %2 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb18 loc(#loc180)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc64)
    %42 = cir.cmp(lt, %39, %41) : !u64i, !cir.bool loc(#loc182)
    cir.brcond %42 ^bb19, ^bb23 loc(#loc65)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc183)
  ^bb20:  // pred: ^bb19
    %43 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    %44 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!ty__twoIntsStruct>, %44 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!ty__twoIntsStruct>, %46 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    cir.copy %48 to %45 : !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.br ^bb21 loc(#loc60)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc60)
  ^bb22:  // pred: ^bb21
    %49 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %50 = cir.unary(inc, %49) : !u64i, !u64i loc(#loc73)
    cir.store %50, %2 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb18 loc(#loc180)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc60)
  ^bb24:  // pred: ^bb23
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %52 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!ty__twoIntsStruct>, %52 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    cir.call @printStructLine(%53) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc77)
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc78)
    cir.call @free(%55) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
    cir.br ^bb25 loc(#loc58)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc36)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc10)
  } loc(#loc157)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    cir.return loc(#loc81)
  } loc(#loc185)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc188)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc190)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    cir.store %4, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc192)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc96)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc97)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc193)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc194)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc195)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc196)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc198)
    cir.brcond %15 ^bb2, ^bb3 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc109)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb3 loc(#loc103)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc200)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc201)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc202)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc116)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb8 loc(#loc202)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc119)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc204)
    cir.brcond %24 ^bb9, ^bb13 loc(#loc120)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc205)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
    %29 = cir.get_member %28[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc50)
    cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
    %34 = cir.get_member %33[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.br ^bb11 loc(#loc115)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc115)
  ^bb12:  // pred: ^bb11
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc129)
    cir.store %36, %1 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    cir.br ^bb8 loc(#loc202)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc115)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc113)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc209)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc210)
  ^bb17:  // pred: ^bb16
    %37 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc134)
    cir.store %38, %2 : !u64i, !cir.ptr<!u64i> loc(#loc211)
    cir.br ^bb18 loc(#loc210)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc137)
    %42 = cir.cmp(lt, %39, %41) : !u64i, !cir.bool loc(#loc212)
    cir.brcond %42 ^bb19, ^bb23 loc(#loc138)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc213)
  ^bb20:  // pred: ^bb19
    %43 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
    %44 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc141)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!ty__twoIntsStruct>, %44 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc143)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!ty__twoIntsStruct>, %46 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
    cir.copy %48 to %45 : !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    cir.br ^bb21 loc(#loc133)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc133)
  ^bb22:  // pred: ^bb21
    %49 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %50 = cir.unary(inc, %49) : !u64i, !u64i loc(#loc146)
    cir.store %50, %2 : !u64i, !cir.ptr<!u64i> loc(#loc214)
    cir.br ^bb18 loc(#loc210)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc133)
  ^bb24:  // pred: ^bb23
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    %52 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!ty__twoIntsStruct>, %52 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
    cir.call @printStructLine(%53) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc150)
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc151)
    cir.call @free(%55) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
    cir.br ^bb25 loc(#loc131)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc111)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc85)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":21:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":50:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":29:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":29:33)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":31:13)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":31:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":40:13)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":40:20)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":23:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":23:21)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":24:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":24:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":26:29)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":26:36)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":26:39)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":26:59)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":26:60)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":26:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":27:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":27:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":27:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":27:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":27:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":27:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":27:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":27:29)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":28:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":49:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":30:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":38:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":33:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":37:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":33:22)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":33:18)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":33:25)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":33:29)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":33:27)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":34:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":35:36)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":35:24)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":35:17)
#loc50 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":36:36)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":36:24)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":36:17)
#loc54 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":33:35)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":33:34)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":39:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":48:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":42:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":45:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":42:22)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":42:18)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":42:25)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":42:29)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":42:27)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":43:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":44:17)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":44:22)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":44:23)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":44:34)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":44:27)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":42:35)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":42:34)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":46:30)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":46:35)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":46:36)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":46:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":47:18)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":47:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":88:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":91:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":90:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":90:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":57:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":86:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":65:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":65:33)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":67:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":67:20)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":76:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":76:20)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":59:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":59:21)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":60:12)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":60:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":62:29)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":62:36)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":62:40)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":62:60)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":62:61)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":62:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":63:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":63:33)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":63:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":63:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":63:23)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":63:24)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":63:30)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":63:29)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":64:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":85:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":66:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":74:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":69:13)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":73:13)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":69:22)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":69:18)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":69:25)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":69:29)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":69:27)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":70:13)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":71:36)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":71:24)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":71:17)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":72:36)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":72:24)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":72:17)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":69:35)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":69:34)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":75:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":84:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":78:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":81:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":78:22)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":78:18)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":78:25)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":78:29)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":78:27)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":79:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":80:17)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":80:22)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":80:23)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":80:34)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":80:27)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":78:35)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":78:34)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":82:30)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":82:35)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":82:36)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":82:13)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":83:18)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_01.c":83:13)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc3, #loc4])
#loc155 = loc(fused[#loc5, #loc6])
#loc156 = loc(fused[#loc7, #loc8])
#loc157 = loc(fused[#loc9, #loc10])
#loc158 = loc(fused[#loc11, #loc12])
#loc159 = loc(fused[#loc13, #loc14])
#loc160 = loc(fused[#loc15, #loc16])
#loc161 = loc(fused[#loc17, #loc18])
#loc162 = loc(fused[#loc20, #loc19])
#loc163 = loc(fused[#loc23, #loc24])
#loc164 = loc(fused[#loc22, #loc24])
#loc165 = loc(fused[#loc21, #loc25])
#loc166 = loc(fused[#loc26, #loc25])
#loc167 = loc(fused[#loc27, #loc28])
#loc168 = loc(fused[#loc29, #loc30])
#loc169 = loc(fused[#loc31, #loc28])
#loc170 = loc(fused[#loc35, #loc36])
#loc171 = loc(fused[#loc37, #loc38])
#loc172 = loc(fused[#loc39, #loc40])
#loc173 = loc(fused[#loc42, #loc41])
#loc174 = loc(fused[#loc43, #loc44])
#loc175 = loc(fused[#loc46, #loc40])
#loc176 = loc(fused[#loc49, #loc47])
#loc177 = loc(fused[#loc53, #loc51])
#loc178 = loc(fused[#loc56, #loc55])
#loc179 = loc(fused[#loc57, #loc58])
#loc180 = loc(fused[#loc59, #loc60])
#loc181 = loc(fused[#loc62, #loc61])
#loc182 = loc(fused[#loc63, #loc64])
#loc183 = loc(fused[#loc66, #loc60])
#loc184 = loc(fused[#loc73, #loc72])
#loc185 = loc(fused[#loc80, #loc81])
#loc186 = loc(fused[#loc82, #loc83])
#loc187 = loc(fused[#loc84, #loc85])
#loc188 = loc(fused[#loc86, #loc87])
#loc189 = loc(fused[#loc88, #loc89])
#loc190 = loc(fused[#loc90, #loc91])
#loc191 = loc(fused[#loc92, #loc93])
#loc192 = loc(fused[#loc95, #loc94])
#loc193 = loc(fused[#loc98, #loc99])
#loc194 = loc(fused[#loc97, #loc99])
#loc195 = loc(fused[#loc96, #loc100])
#loc196 = loc(fused[#loc101, #loc100])
#loc197 = loc(fused[#loc102, #loc103])
#loc198 = loc(fused[#loc104, #loc105])
#loc199 = loc(fused[#loc106, #loc103])
#loc200 = loc(fused[#loc110, #loc111])
#loc201 = loc(fused[#loc112, #loc113])
#loc202 = loc(fused[#loc114, #loc115])
#loc203 = loc(fused[#loc117, #loc116])
#loc204 = loc(fused[#loc118, #loc119])
#loc205 = loc(fused[#loc121, #loc115])
#loc206 = loc(fused[#loc124, #loc122])
#loc207 = loc(fused[#loc127, #loc125])
#loc208 = loc(fused[#loc129, #loc128])
#loc209 = loc(fused[#loc130, #loc131])
#loc210 = loc(fused[#loc132, #loc133])
#loc211 = loc(fused[#loc135, #loc134])
#loc212 = loc(fused[#loc136, #loc137])
#loc213 = loc(fused[#loc139, #loc133])
#loc214 = loc(fused[#loc146, #loc145])
