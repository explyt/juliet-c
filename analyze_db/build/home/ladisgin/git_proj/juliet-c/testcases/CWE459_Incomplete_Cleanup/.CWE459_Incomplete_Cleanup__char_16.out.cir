!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE459_Incomplete_Cleanup__char_16.c":107:10)
#loc65 = loc("CWE459_Incomplete_Cleanup__char_16.c":107:14)
#loc66 = loc("CWE459_Incomplete_Cleanup__char_16.c":107:20)
#loc67 = loc("CWE459_Incomplete_Cleanup__char_16.c":107:32)
#loc145 = loc(fused[#loc64, #loc65])
#loc146 = loc(fused[#loc66, #loc67])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"goodXXXXXX\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc121)
  cir.global "private" constant cir_private @__const.CWE459_Incomplete_Cleanup__char_16_bad.filename = #cir.const_array<"badXXXXXX\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> loc(#loc122)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc123)
  cir.func private @fdopen(!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc9)
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Temporary file\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc126)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["filename"] {alignment = 1 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %4 ^bb3, ^bb14 loc(#loc23)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc131)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @__const.CWE459_Incomplete_Cleanup__char_16_bad.filename : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc122)
    cir.copy %5 to %0 : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc122)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc26)
    %7 = cir.call @mkstemp(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc27)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.br ^bb5 loc(#loc132)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc32)
    %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc133)
    cir.brcond %11 ^bb6, ^bb11 loc(#loc134)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc9)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc9)
    %15 = cir.call @fdopen(%12, %14) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc35)
    cir.store %15, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
    cir.br ^bb7 loc(#loc136)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc137)
    cir.brcond %19 ^bb8, ^bb9 loc(#loc138)
  ^bb8:  // pred: ^bb7
    %20 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc43)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
    %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc12)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc12)
    %24 = cir.call @fprintf(%21, %23) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc43)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
    %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc46)
    cir.br ^bb9 loc(#loc39)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc29)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc29)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc25)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc47)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc22)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc16)
  } loc(#loc127)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc139)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc141)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc146)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE459_Incomplete_Cleanup__char_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call @CWE459_Incomplete_Cleanup__char_16_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE459_Incomplete_Cleanup__char_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE459_Incomplete_Cleanup__char_16_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.return %17 : !s32i loc(#loc149)
  } loc(#loc144)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc150)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["filename"] {alignment = 1 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc92)
    cir.brcond %4 ^bb3, ^bb14 loc(#loc92)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc155)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc121)
    cir.copy %5 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc121)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc95)
    %7 = cir.call @mkstemp(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc96)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc101)
    %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc157)
    cir.brcond %11 ^bb6, ^bb11 loc(#loc158)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc104)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc104)
    %15 = cir.call @fdopen(%12, %14) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc105)
    cir.store %15, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc159)
    cir.br ^bb7 loc(#loc160)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc110)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc111)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc161)
    cir.brcond %19 ^bb8, ^bb9 loc(#loc162)
  ^bb8:  // pred: ^bb7
    %20 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc113)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc114)
    %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc115)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc115)
    %24 = cir.call @fprintf(%21, %23) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc113)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
    %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc117)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc118)
    %28 = cir.call @unlink(%27) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
    cir.br ^bb9 loc(#loc109)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc109)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc98)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc98)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc94)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc120)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc91)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc85)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_16.c":0:0)
#loc1 = loc("CWE459_Incomplete_Cleanup__char_16.c":73:13)
#loc2 = loc("CWE459_Incomplete_Cleanup__char_16.c":73:31)
#loc3 = loc("CWE459_Incomplete_Cleanup__char_16.c":44:13)
#loc4 = loc("CWE459_Incomplete_Cleanup__char_16.c":44:31)
#loc5 = loc("/usr/include/stdlib.h":827:1)
#loc6 = loc("/usr/include/stdlib.h":827:39)
#loc7 = loc("/usr/include/stdio.h":299:1)
#loc8 = loc("/usr/include/stdio.h":300:3)
#loc9 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:42)
#loc10 = loc("/usr/include/stdio.h":357:1)
#loc11 = loc("/usr/include/stdio.h":358:45)
#loc12 = loc("CWE459_Incomplete_Cleanup__char_16.c":53:36)
#loc13 = loc("/usr/include/stdio.h":184:1)
#loc14 = loc("/usr/include/stdio.h":184:36)
#loc15 = loc("CWE459_Incomplete_Cleanup__char_16.c":39:1)
#loc16 = loc("CWE459_Incomplete_Cleanup__char_16.c":61:1)
#loc17 = loc("CWE459_Incomplete_Cleanup__char_16.c":45:13)
#loc18 = loc("CWE459_Incomplete_Cleanup__char_16.c":45:19)
#loc19 = loc("CWE459_Incomplete_Cleanup__char_16.c":47:13)
#loc20 = loc("CWE459_Incomplete_Cleanup__char_16.c":47:44)
#loc21 = loc("CWE459_Incomplete_Cleanup__char_16.c":41:5)
#loc22 = loc("CWE459_Incomplete_Cleanup__char_16.c":60:5)
#loc23 = loc("CWE459_Incomplete_Cleanup__char_16.c":41:11)
#loc24 = loc("CWE459_Incomplete_Cleanup__char_16.c":43:9)
#loc25 = loc("CWE459_Incomplete_Cleanup__char_16.c":58:9)
#loc26 = loc("CWE459_Incomplete_Cleanup__char_16.c":47:36)
#loc27 = loc("CWE459_Incomplete_Cleanup__char_16.c":47:28)
#loc28 = loc("CWE459_Incomplete_Cleanup__char_16.c":48:13)
#loc29 = loc("CWE459_Incomplete_Cleanup__char_16.c":57:13)
#loc30 = loc("CWE459_Incomplete_Cleanup__char_16.c":48:17)
#loc31 = loc("CWE459_Incomplete_Cleanup__char_16.c":48:30)
#loc32 = loc("CWE459_Incomplete_Cleanup__char_16.c":48:29)
#loc33 = loc("CWE459_Incomplete_Cleanup__char_16.c":49:13)
#loc34 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:32)
#loc35 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:25)
#loc36 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:17)
#loc37 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:45)
#loc38 = loc("CWE459_Incomplete_Cleanup__char_16.c":51:17)
#loc39 = loc("CWE459_Incomplete_Cleanup__char_16.c":56:17)
#loc40 = loc("CWE459_Incomplete_Cleanup__char_16.c":51:21)
#loc41 = loc("CWE459_Incomplete_Cleanup__char_16.c":51:30)
#loc42 = loc("CWE459_Incomplete_Cleanup__char_16.c":52:17)
#loc43 = loc("CWE459_Incomplete_Cleanup__char_16.c":53:21)
#loc44 = loc("CWE459_Incomplete_Cleanup__char_16.c":53:29)
#loc45 = loc("CWE459_Incomplete_Cleanup__char_16.c":54:28)
#loc46 = loc("CWE459_Incomplete_Cleanup__char_16.c":54:21)
#loc47 = loc("CWE459_Incomplete_Cleanup__char_16.c":59:9)
#loc48 = loc("CWE459_Incomplete_Cleanup__char_16.c":93:1)
#loc49 = loc("CWE459_Incomplete_Cleanup__char_16.c":96:1)
#loc50 = loc("CWE459_Incomplete_Cleanup__char_16.c":95:5)
#loc51 = loc("CWE459_Incomplete_Cleanup__char_16.c":95:11)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE459_Incomplete_Cleanup__char_16.c":112:15)
#loc59 = loc("CWE459_Incomplete_Cleanup__char_16.c":114:15)
#loc60 = loc("CWE459_Incomplete_Cleanup__char_16.c":117:15)
#loc61 = loc("CWE459_Incomplete_Cleanup__char_16.c":119:15)
#loc62 = loc("CWE459_Incomplete_Cleanup__char_16.c":107:1)
#loc63 = loc("CWE459_Incomplete_Cleanup__char_16.c":122:1)
#loc68 = loc("CWE459_Incomplete_Cleanup__char_16.c":108:1)
#loc69 = loc("CWE459_Incomplete_Cleanup__char_16.c":110:27)
#loc70 = loc("CWE459_Incomplete_Cleanup__char_16.c":110:22)
#loc71 = loc("CWE459_Incomplete_Cleanup__char_16.c":110:5)
#loc72 = loc("CWE459_Incomplete_Cleanup__char_16.c":112:5)
#loc73 = loc("CWE459_Incomplete_Cleanup__char_16.c":113:5)
#loc74 = loc("CWE459_Incomplete_Cleanup__char_16.c":113:45)
#loc75 = loc("CWE459_Incomplete_Cleanup__char_16.c":114:5)
#loc76 = loc("CWE459_Incomplete_Cleanup__char_16.c":117:5)
#loc77 = loc("CWE459_Incomplete_Cleanup__char_16.c":118:5)
#loc78 = loc("CWE459_Incomplete_Cleanup__char_16.c":118:44)
#loc79 = loc("CWE459_Incomplete_Cleanup__char_16.c":119:5)
#loc80 = loc("CWE459_Incomplete_Cleanup__char_16.c":121:12)
#loc81 = loc("CWE459_Incomplete_Cleanup__char_16.c":121:5)
#loc82 = loc("/usr/include/unistd.h":858:1)
#loc83 = loc("/usr/include/unistd.h":858:48)
#loc84 = loc("CWE459_Incomplete_Cleanup__char_16.c":68:1)
#loc85 = loc("CWE459_Incomplete_Cleanup__char_16.c":91:1)
#loc86 = loc("CWE459_Incomplete_Cleanup__char_16.c":74:13)
#loc87 = loc("CWE459_Incomplete_Cleanup__char_16.c":74:19)
#loc88 = loc("CWE459_Incomplete_Cleanup__char_16.c":76:13)
#loc89 = loc("CWE459_Incomplete_Cleanup__char_16.c":76:44)
#loc90 = loc("CWE459_Incomplete_Cleanup__char_16.c":70:5)
#loc91 = loc("CWE459_Incomplete_Cleanup__char_16.c":90:5)
#loc92 = loc("CWE459_Incomplete_Cleanup__char_16.c":70:11)
#loc93 = loc("CWE459_Incomplete_Cleanup__char_16.c":72:9)
#loc94 = loc("CWE459_Incomplete_Cleanup__char_16.c":88:9)
#loc95 = loc("CWE459_Incomplete_Cleanup__char_16.c":76:36)
#loc96 = loc("CWE459_Incomplete_Cleanup__char_16.c":76:28)
#loc97 = loc("CWE459_Incomplete_Cleanup__char_16.c":77:13)
#loc98 = loc("CWE459_Incomplete_Cleanup__char_16.c":87:13)
#loc99 = loc("CWE459_Incomplete_Cleanup__char_16.c":77:17)
#loc100 = loc("CWE459_Incomplete_Cleanup__char_16.c":77:30)
#loc101 = loc("CWE459_Incomplete_Cleanup__char_16.c":77:29)
#loc102 = loc("CWE459_Incomplete_Cleanup__char_16.c":78:13)
#loc103 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:32)
#loc104 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:42)
#loc105 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:25)
#loc106 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:17)
#loc107 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:45)
#loc108 = loc("CWE459_Incomplete_Cleanup__char_16.c":80:17)
#loc109 = loc("CWE459_Incomplete_Cleanup__char_16.c":86:17)
#loc110 = loc("CWE459_Incomplete_Cleanup__char_16.c":80:21)
#loc111 = loc("CWE459_Incomplete_Cleanup__char_16.c":80:30)
#loc112 = loc("CWE459_Incomplete_Cleanup__char_16.c":81:17)
#loc113 = loc("CWE459_Incomplete_Cleanup__char_16.c":82:21)
#loc114 = loc("CWE459_Incomplete_Cleanup__char_16.c":82:29)
#loc115 = loc("CWE459_Incomplete_Cleanup__char_16.c":82:36)
#loc116 = loc("CWE459_Incomplete_Cleanup__char_16.c":83:28)
#loc117 = loc("CWE459_Incomplete_Cleanup__char_16.c":83:21)
#loc118 = loc("CWE459_Incomplete_Cleanup__char_16.c":85:28)
#loc119 = loc("CWE459_Incomplete_Cleanup__char_16.c":85:21)
#loc120 = loc("CWE459_Incomplete_Cleanup__char_16.c":89:9)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc10, #loc11])
#loc126 = loc(fused[#loc13, #loc14])
#loc127 = loc(fused[#loc15, #loc16])
#loc128 = loc(fused[#loc17, #loc18])
#loc129 = loc(fused[#loc19, #loc20])
#loc130 = loc(fused[#loc21, #loc22])
#loc131 = loc(fused[#loc24, #loc25])
#loc132 = loc(fused[#loc28, #loc29])
#loc133 = loc(fused[#loc30, #loc31])
#loc134 = loc(fused[#loc33, #loc29])
#loc135 = loc(fused[#loc36, #loc37])
#loc136 = loc(fused[#loc38, #loc39])
#loc137 = loc(fused[#loc40, #loc41])
#loc138 = loc(fused[#loc42, #loc39])
#loc139 = loc(fused[#loc48, #loc49])
#loc140 = loc(fused[#loc50, #loc51])
#loc141 = loc(fused[#loc52, #loc53])
#loc142 = loc(fused[#loc54, #loc55])
#loc143 = loc(fused[#loc56, #loc57])
#loc144 = loc(fused[#loc62, #loc63])
#loc147 = loc(fused[#loc73, #loc74])
#loc148 = loc(fused[#loc77, #loc78])
#loc149 = loc(fused[#loc81, #loc80])
#loc150 = loc(fused[#loc82, #loc83])
#loc151 = loc(fused[#loc84, #loc85])
#loc152 = loc(fused[#loc86, #loc87])
#loc153 = loc(fused[#loc88, #loc89])
#loc154 = loc(fused[#loc90, #loc91])
#loc155 = loc(fused[#loc93, #loc94])
#loc156 = loc(fused[#loc97, #loc98])
#loc157 = loc(fused[#loc99, #loc100])
#loc158 = loc(fused[#loc102, #loc98])
#loc159 = loc(fused[#loc106, #loc107])
#loc160 = loc(fused[#loc108, #loc109])
#loc161 = loc(fused[#loc110, #loc111])
#loc162 = loc(fused[#loc112, #loc109])
