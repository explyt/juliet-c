!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_657badSinkEi(!s32i) loc(#loc94)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc95)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc96)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc97)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_653badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc100)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc101)
    %2 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc102)
    %3 = cir.get_global @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_657badSinkEi : !cir.ptr<!cir.func<(!s32i)>> loc(#loc19)
    cir.store %3, %2 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc102)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc21)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc100)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc100)
    cir.br ^bb2 loc(#loc105)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc28)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc28)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc28)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc28)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc28)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc28)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc28)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
    %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc106)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc107)
  ^bb3:  // pred: ^bb2
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc36)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.br ^bb5 loc(#loc33)
  ^bb4:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb5 loc(#loc26)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc40)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.call %25(%26) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc99)
  cir.func private @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_6511goodG2BSinkEi(!s32i) loc(#loc109)
  cir.func internal private @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.get_global @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_6511goodG2BSinkEi : !cir.ptr<!cir.func<(!s32i)>> loc(#loc49)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc112)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc51)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc53)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc55)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc55)
    cir.return loc(#loc45)
  } loc(#loc110)
  cir.func private @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_6511goodB2GSinkEi(!s32i) loc(#loc115)
  cir.func internal private @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc117)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc118)
    %2 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc119)
    %3 = cir.get_global @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_6511goodB2GSinkEi : !cir.ptr<!cir.func<(!s32i)>> loc(#loc66)
    cir.store %3, %2 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc119)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc68)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc117)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc117)
    cir.br ^bb2 loc(#loc122)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc74)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc75)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc75)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc75)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc75)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc75)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc75)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc75)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc75)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc77)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc123)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc124)
  ^bb3:  // pred: ^bb2
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc82)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc83)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.br ^bb5 loc(#loc80)
  ^bb4:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc88)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.call %25(%26) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc88)
    cir.return loc(#loc60)
  } loc(#loc116)
  cir.func @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_654goodEv() extra(#fn_attr1) {
    cir.call @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65L7goodG2BEv() : () -> () loc(#loc92)
    cir.call @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65L7goodB2GEv() : () -> () loc(#loc93)
    cir.return loc(#loc91)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":28:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":28:22)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":47:23)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":30:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":52:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":38:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":38:45)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":32:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":32:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":34:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":34:29)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":36:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":36:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":36:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":37:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":49:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":40:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":48:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":40:19)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":40:32)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":40:49)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":40:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":40:59)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":41:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":44:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":46:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":43:25)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":43:20)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":43:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":43:36)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":47:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":51:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":51:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":59:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":59:26)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":61:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":71:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":63:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":63:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":64:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":64:29)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":66:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":66:12)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":66:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":69:12)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":69:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":70:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":70:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":74:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":74:26)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":76:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":96:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":83:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":83:45)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":78:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":78:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":79:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":79:29)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":81:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":81:12)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":81:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":82:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":94:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":85:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":93:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":85:19)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":85:32)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":85:49)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":85:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":85:59)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":86:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":89:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":91:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":88:25)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":88:20)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":88:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":88:36)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":92:23)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":92:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":95:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":95:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":98:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":102:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":100:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fgets_65a.cpp":101:5)
#loc94 = loc(fused[#loc1, #loc2])
#loc95 = loc(fused[#loc3, #loc4])
#loc96 = loc(fused[#loc5, #loc6])
#loc97 = loc(fused[#loc7, #loc8])
#loc98 = loc(fused[#loc9, #loc10])
#loc99 = loc(fused[#loc12, #loc13])
#loc100 = loc(fused[#loc14, #loc15])
#loc101 = loc(fused[#loc16, #loc17])
#loc102 = loc(fused[#loc18, #loc19])
#loc103 = loc(fused[#loc22, #loc20])
#loc104 = loc(fused[#loc23, #loc24])
#loc105 = loc(fused[#loc25, #loc26])
#loc106 = loc(fused[#loc30, #loc31])
#loc107 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc108 = loc(fused[#loc37, #loc38])
#loc109 = loc(fused[#loc42, #loc43])
#loc110 = loc(fused[#loc44, #loc45])
#loc111 = loc(fused[#loc46, #loc47])
#loc112 = loc(fused[#loc48, #loc49])
#loc113 = loc(fused[#loc52, #loc50])
#loc114 = loc(fused[#loc54, #loc53])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc59, #loc60])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc63, #loc64])
#loc119 = loc(fused[#loc65, #loc66])
#loc120 = loc(fused[#loc69, #loc67])
#loc121 = loc(fused[#loc70, #loc71])
#loc122 = loc(fused[#loc72, #loc73])
#loc123 = loc(fused[#loc77, #loc78])
#loc124 = loc(fused[#loc79, #loc80, #loc81, #loc73])
#loc125 = loc(fused[#loc84, #loc85])
#loc126 = loc(fused[#loc90, #loc91])
