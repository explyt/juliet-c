!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc490)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc491)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc492)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc493)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc494)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc495)
  cir.func private @close(!s32i) -> !s32i loc(#loc496)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc497)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc18)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc499)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc24)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc500)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc502)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc28)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc28)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc505)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc506)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc507)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc508)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc38)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc507)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc45)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc46)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc47)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc511)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc54)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc54)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc513)
                  cir.if %57 {
                    cir.break loc(#loc56)
                  } loc(#loc514)
                } loc(#loc512)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc515)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc59)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc516)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc517)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc64)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc64)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc518)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc519)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc72)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc72)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc73)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc520)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc522)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc523)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc523)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc85)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc85)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc524)
                  cir.if %61 {
                    cir.break loc(#loc87)
                  } loc(#loc525)
                } loc(#loc521)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc90)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc90)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc90)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc90)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc90)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc90)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc90)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc91)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc91)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc526)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc93)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc527)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc99)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc529)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc100)
                    cir.yield %59 : !cir.bool loc(#loc100)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc102)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc530)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc100)
                      cir.yield %63 : !cir.bool loc(#loc100)
                    }, false {
                      %63 = cir.const #false loc(#loc100)
                      cir.yield %63 : !cir.bool loc(#loc100)
                    }) : (!cir.bool) -> !cir.bool loc(#loc100)
                    cir.yield %62 : !cir.bool loc(#loc100)
                  }) : (!cir.bool) -> !cir.bool loc(#loc100)
                  cir.if %58 {
                    cir.break loc(#loc104)
                  } loc(#loc531)
                } loc(#loc528)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc105)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc105)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc107)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc532)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc109)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc533)
              } loc(#loc510)
              cir.yield loc(#loc42)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc112)
              cir.condition(%13) loc(#loc112)
            } loc(#loc509)
          } loc(#loc509)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc116)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc535)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc119)
            } loc(#loc536)
          } loc(#loc534)
        } loc(#loc504)
      } loc(#loc503)
    } loc(#loc501)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc538)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc122)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc122)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc541)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc128)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc128)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc541)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc131)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc131)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc543)
            cir.for : cond {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc133)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc134)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc544)
              cir.condition(%14) loc(#loc135)
            } body {
              cir.scope {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc18)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc18)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc137)
              } loc(#loc545)
              cir.yield loc(#loc130)
            } step {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc138)
              %12 = cir.unary(inc, %11) : !u64i, !u64i loc(#loc139)
              cir.store %12, %6 : !u64i, !cir.ptr<!u64i> loc(#loc546)
              cir.yield loc(#loc542)
            } loc(#loc542)
          } loc(#loc542)
        } loc(#loc540)
      } loc(#loc539)
    } loc(#loc537)
    cir.return loc(#loc20)
  } loc(#loc498)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc548)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc142)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc549)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc144)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc550)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc146)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc551)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc148)
    cir.return loc(#loc141)
  } loc(#loc547)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc152)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc553)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc553)
    cir.return %2 : !s32i loc(#loc553)
  } loc(#loc552)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc154)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc555)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc160)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc556)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc558)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc164)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc164)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc561)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc562)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc563)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc564)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc174)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc174)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc563)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc181)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc182)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc183)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc184)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc567)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc189)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc190)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc190)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc569)
                  cir.if %57 {
                    cir.break loc(#loc192)
                  } loc(#loc570)
                } loc(#loc568)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc571)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc195)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc572)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc573)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc200)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc200)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc574)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc202)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc202)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc203)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc575)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc206)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc206)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc207)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc576)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc212)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc578)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc579)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc579)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc217)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc218)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc218)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc580)
                  cir.if %61 {
                    cir.break loc(#loc220)
                  } loc(#loc581)
                } loc(#loc577)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc221)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc222)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc222)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc223)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc223)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc223)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc223)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc223)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc223)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc223)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc224)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc224)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc582)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc225)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc226)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc226)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc583)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc232)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc232)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc585)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc233)
                    cir.yield %59 : !cir.bool loc(#loc233)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc234)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc235)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc586)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc233)
                      cir.yield %63 : !cir.bool loc(#loc233)
                    }, false {
                      %63 = cir.const #false loc(#loc233)
                      cir.yield %63 : !cir.bool loc(#loc233)
                    }) : (!cir.bool) -> !cir.bool loc(#loc233)
                    cir.yield %62 : !cir.bool loc(#loc233)
                  }) : (!cir.bool) -> !cir.bool loc(#loc233)
                  cir.if %58 {
                    cir.break loc(#loc237)
                  } loc(#loc587)
                } loc(#loc584)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc238)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc238)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc240)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc240)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc588)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc241)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc242)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc589)
              } loc(#loc566)
              cir.yield loc(#loc178)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc245)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc245)
              cir.condition(%13) loc(#loc245)
            } loc(#loc565)
          } loc(#loc565)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc248)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc249)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc249)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc591)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc251)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc252)
            } loc(#loc592)
          } loc(#loc590)
        } loc(#loc560)
      } loc(#loc559)
    } loc(#loc557)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc594)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc255)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc255)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc154)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc154)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc260)
      } else {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc597)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc264)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc264)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc597)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc267)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc268)
            %11 = cir.cmp(gt, %9, %10) : !s32i, !cir.bool loc(#loc599)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc270)
              %14 = cir.const #cir.int<20> : !s32i loc(#loc271)
              %15 = cir.cmp(le, %13, %14) : !s32i, !cir.bool loc(#loc600)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc269)
                cir.yield %17 : !cir.bool loc(#loc269)
              }, false {
                %17 = cir.const #false loc(#loc269)
                cir.yield %17 : !cir.bool loc(#loc269)
              }) : (!cir.bool) -> !cir.bool loc(#loc269)
              cir.yield %16 : !cir.bool loc(#loc269)
            }, false {
              %13 = cir.const #false loc(#loc269)
              cir.yield %13 : !cir.bool loc(#loc269)
            }) : (!cir.bool) -> !cir.bool loc(#loc269)
            cir.if %12 {
              cir.scope {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc275)
                %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc275)
                cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc603)
                cir.for : cond {
                  %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc277)
                  %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
                  %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc278)
                  %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc604)
                  cir.condition(%18) loc(#loc279)
                } body {
                  cir.scope {
                    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc281)
                    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc281)
                    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc282)
                  } loc(#loc605)
                  cir.yield loc(#loc274)
                } step {
                  %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc283)
                  %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc284)
                  cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc606)
                  cir.yield loc(#loc602)
                } loc(#loc602)
              } loc(#loc602)
            } loc(#loc601)
          } loc(#loc598)
        } loc(#loc596)
      } loc(#loc595)
    } loc(#loc593)
    cir.return loc(#loc156)
  } loc(#loc554)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc286)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc287)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc608)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc608)
    cir.return %2 : !s32i loc(#loc608)
  } loc(#loc607)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc610)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc294)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc611)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc613)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc298)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc298)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc616)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc617)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc618)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc619)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc308)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc308)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc618)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc315)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc316)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc317)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc318)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc622)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc323)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc324)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc324)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc624)
                  cir.if %57 {
                    cir.break loc(#loc326)
                  } loc(#loc625)
                } loc(#loc623)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc626)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc329)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc627)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc628)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc334)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc334)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc629)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc336)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc336)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc337)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc630)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc340)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc340)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc341)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc631)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc633)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc634)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc634)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc351)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc352)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc352)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc635)
                  cir.if %61 {
                    cir.break loc(#loc354)
                  } loc(#loc636)
                } loc(#loc632)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc355)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc356)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc356)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc357)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc357)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc357)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc357)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc357)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc357)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc357)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc358)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc358)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc637)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc359)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc360)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc360)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc638)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc365)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc366)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc366)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc640)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc367)
                    cir.yield %59 : !cir.bool loc(#loc367)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc369)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc641)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc367)
                      cir.yield %63 : !cir.bool loc(#loc367)
                    }, false {
                      %63 = cir.const #false loc(#loc367)
                      cir.yield %63 : !cir.bool loc(#loc367)
                    }) : (!cir.bool) -> !cir.bool loc(#loc367)
                    cir.yield %62 : !cir.bool loc(#loc367)
                  }) : (!cir.bool) -> !cir.bool loc(#loc367)
                  cir.if %58 {
                    cir.break loc(#loc371)
                  } loc(#loc642)
                } loc(#loc639)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc372)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc372)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc373)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc374)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc374)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc643)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc375)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc376)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc644)
              } loc(#loc621)
              cir.yield loc(#loc312)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc379)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc379)
              cir.condition(%13) loc(#loc379)
            } loc(#loc620)
          } loc(#loc620)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc382)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc383)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc383)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc646)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc385)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc386)
            } loc(#loc647)
          } loc(#loc645)
        } loc(#loc615)
      } loc(#loc614)
    } loc(#loc612)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc649)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc389)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc389)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc652)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc395)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc395)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc652)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc398)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc399)
            %11 = cir.cmp(gt, %9, %10) : !s32i, !cir.bool loc(#loc654)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc401)
              %14 = cir.const #cir.int<20> : !s32i loc(#loc402)
              %15 = cir.cmp(le, %13, %14) : !s32i, !cir.bool loc(#loc655)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc400)
                cir.yield %17 : !cir.bool loc(#loc400)
              }, false {
                %17 = cir.const #false loc(#loc400)
                cir.yield %17 : !cir.bool loc(#loc400)
              }) : (!cir.bool) -> !cir.bool loc(#loc400)
              cir.yield %16 : !cir.bool loc(#loc400)
            }, false {
              %13 = cir.const #false loc(#loc400)
              cir.yield %13 : !cir.bool loc(#loc400)
            }) : (!cir.bool) -> !cir.bool loc(#loc400)
            cir.if %12 {
              cir.scope {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc406)
                %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc406)
                cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc658)
                cir.for : cond {
                  %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc408)
                  %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc409)
                  %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc409)
                  %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc659)
                  cir.condition(%18) loc(#loc410)
                } body {
                  cir.scope {
                    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc412)
                    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc412)
                    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc413)
                  } loc(#loc660)
                  cir.yield loc(#loc405)
                } step {
                  %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc414)
                  %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc415)
                  cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc661)
                  cir.yield loc(#loc657)
                } loc(#loc657)
              } loc(#loc657)
            } loc(#loc656)
          } loc(#loc653)
        } loc(#loc651)
      } loc(#loc650)
    } loc(#loc648)
    cir.return loc(#loc290)
  } loc(#loc609)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc663)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc420)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc421)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc664)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc666)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc425)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc425)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc430)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc430)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc431)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc432)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc668)
      } loc(#loc667)
    } loc(#loc665)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc670)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc436)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc436)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc673)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc442)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc442)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc673)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc445)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc445)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc675)
            cir.for : cond {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc447)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc448)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc448)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc676)
              cir.condition(%14) loc(#loc449)
            } body {
              cir.scope {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc451)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc451)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc452)
              } loc(#loc677)
              cir.yield loc(#loc444)
            } step {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc453)
              %12 = cir.unary(inc, %11) : !u64i, !u64i loc(#loc454)
              cir.store %12, %6 : !u64i, !cir.ptr<!u64i> loc(#loc678)
              cir.yield loc(#loc674)
            } loc(#loc674)
          } loc(#loc674)
        } loc(#loc672)
      } loc(#loc671)
    } loc(#loc669)
    cir.return loc(#loc417)
  } loc(#loc662)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc680)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc459)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc460)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc681)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc683)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc464)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc464)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc467)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc685)
      } loc(#loc684)
    } loc(#loc682)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc687)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc471)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc471)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc690)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc477)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc477)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc690)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc480)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc480)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc692)
            cir.for : cond {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc482)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc483)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc483)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc693)
              cir.condition(%14) loc(#loc484)
            } body {
              cir.scope {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc486)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc486)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc487)
              } loc(#loc694)
              cir.yield loc(#loc479)
            } step {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc488)
              %12 = cir.unary(inc, %11) : !u64i, !u64i loc(#loc489)
              cir.store %12, %6 : !u64i, !cir.ptr<!u64i> loc(#loc695)
              cir.yield loc(#loc691)
            } loc(#loc691)
          } loc(#loc691)
        } loc(#loc689)
      } loc(#loc688)
    } loc(#loc686)
    cir.return loc(#loc456)
  } loc(#loc679)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":90:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":128:27)
#loc19 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":57:1)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":132:1)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":59:5)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":59:9)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":61:14)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":61:13)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":61:5)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":62:5)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":120:5)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":62:8)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":62:26)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":63:5)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":64:9)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":119:9)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":69:13)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":69:17)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":70:13)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":70:32)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":71:13)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":71:36)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":72:13)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":72:45)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":73:13)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":108:21)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":74:13)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":107:13)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":83:40)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":83:49)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":83:62)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":83:33)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":83:17)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":83:73)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":84:17)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":87:17)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":84:21)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":84:38)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":85:17)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":86:21)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":88:24)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":88:25)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":88:34)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":88:37)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":88:51)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":88:17)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":88:52)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":89:38)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":89:17)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":90:43)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":90:17)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":90:63)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":91:42)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":91:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":91:17)
#loc76 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":91:50)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":92:17)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":95:17)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":92:29)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":92:62)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":92:63)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":92:72)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":92:86)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":92:21)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":92:92)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":93:17)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":94:21)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":98:35)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":98:50)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":98:63)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":98:81)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":98:84)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":98:30)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":98:17)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":98:85)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":99:17)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":102:17)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":99:21)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":99:35)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":99:48)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":99:51)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":99:65)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":100:17)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":101:21)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":104:43)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":104:29)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":104:17)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":106:30)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":106:25)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":106:17)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":106:41)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":108:20)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":109:13)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":112:13)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":109:17)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":109:34)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":110:13)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":111:30)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":111:17)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":121:5)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":131:5)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":121:8)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":121:26)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":122:5)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":123:9)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":130:9)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":124:13)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":124:24)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":126:13)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":129:13)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":126:22)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":126:18)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":126:25)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":126:37)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":126:27)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":127:13)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":128:17)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":126:45)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":126:44)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":358:1)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":364:1)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":360:5)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":360:14)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":361:5)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":361:14)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":362:5)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":362:14)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":363:5)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":363:14)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":45:1)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":48:1)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":47:12)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":47:5)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":206:19)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":139:1)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":222:1)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":141:5)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":141:9)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":143:14)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":143:13)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":143:5)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":144:5)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":202:5)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":144:8)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":144:26)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":145:5)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":146:9)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":201:9)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":151:13)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":151:17)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":152:13)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":152:32)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":153:13)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":153:36)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":154:13)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":154:45)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":155:13)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":190:21)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":156:13)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":189:13)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":165:40)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":165:49)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":165:62)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":165:33)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":165:17)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":165:73)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":166:17)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":169:17)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":166:21)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":166:38)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":167:17)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":168:21)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":170:24)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":170:25)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":170:34)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":170:37)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":170:51)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":170:17)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":170:52)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":171:38)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":171:17)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":172:53)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":172:43)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":172:17)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":172:63)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":173:42)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":173:36)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":173:17)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":173:50)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":174:17)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":177:17)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":174:29)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":174:62)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":174:63)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":174:72)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":174:86)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":174:21)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":174:92)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":175:17)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":176:21)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":180:35)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":180:50)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":180:63)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":180:81)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":180:84)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":180:30)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":180:17)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":180:85)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":181:17)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":184:17)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":181:21)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":181:35)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":181:48)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":181:51)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":181:65)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":182:17)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":183:21)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":186:43)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":186:29)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":186:17)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":188:30)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":188:25)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":188:17)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":188:41)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":190:20)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":191:13)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":194:13)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":191:17)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":191:34)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":192:13)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":193:30)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":193:17)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":203:5)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":221:5)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":203:8)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":203:27)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":204:5)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":207:5)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":209:5)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":206:9)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":210:9)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":220:9)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":211:13)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":211:24)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":213:13)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":219:13)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":213:17)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":213:25)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":213:27)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":213:30)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":213:39)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":214:13)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":215:17)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":218:17)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":215:26)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":215:22)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":215:29)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":215:41)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":215:31)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":216:17)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":217:31)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":217:21)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":215:49)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":215:48)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":50:1)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":53:1)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":52:12)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":52:5)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":225:1)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":303:1)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":227:5)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":227:9)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":229:14)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":229:13)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":229:5)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":230:5)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":288:5)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":230:8)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":230:26)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":231:5)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":232:9)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":287:9)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":237:13)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":237:17)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":238:13)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":238:32)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":239:13)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":239:36)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":240:13)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":240:45)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":241:13)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":276:21)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":242:13)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":275:13)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":251:40)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":251:49)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":251:62)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":251:33)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":251:17)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":251:73)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":252:17)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":255:17)
#loc323 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":252:21)
#loc324 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":252:38)
#loc325 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":253:17)
#loc326 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":254:21)
#loc327 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":256:24)
#loc328 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":256:25)
#loc329 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":256:34)
#loc330 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":256:37)
#loc331 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":256:51)
#loc332 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":256:17)
#loc333 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":256:52)
#loc334 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":257:38)
#loc335 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":257:17)
#loc336 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":258:53)
#loc337 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":258:43)
#loc338 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":258:17)
#loc339 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":258:63)
#loc340 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":259:42)
#loc341 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":259:36)
#loc342 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":259:17)
#loc343 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":259:50)
#loc344 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":260:17)
#loc345 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":263:17)
#loc346 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":260:29)
#loc347 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":260:62)
#loc348 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":260:63)
#loc349 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":260:72)
#loc350 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":260:86)
#loc351 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":260:21)
#loc352 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":260:92)
#loc353 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":261:17)
#loc354 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":262:21)
#loc355 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":266:35)
#loc356 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":266:50)
#loc357 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":266:63)
#loc358 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":266:81)
#loc359 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":266:84)
#loc360 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":266:30)
#loc361 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":266:17)
#loc362 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":266:85)
#loc363 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":267:17)
#loc364 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":270:17)
#loc365 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":267:21)
#loc366 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":267:35)
#loc367 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":267:48)
#loc368 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":267:51)
#loc369 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":267:65)
#loc370 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":268:17)
#loc371 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":269:21)
#loc372 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":272:43)
#loc373 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":272:29)
#loc374 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":272:17)
#loc375 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":274:30)
#loc376 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":274:25)
#loc377 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":274:17)
#loc378 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":274:41)
#loc379 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":276:20)
#loc380 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":277:13)
#loc381 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":280:13)
#loc382 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":277:17)
#loc383 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":277:34)
#loc384 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":278:13)
#loc385 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":279:30)
#loc386 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":279:17)
#loc387 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":289:5)
#loc388 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":302:5)
#loc389 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":289:8)
#loc390 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":289:26)
#loc391 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":290:5)
#loc392 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":291:9)
#loc393 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":301:9)
#loc394 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":292:13)
#loc395 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":292:24)
#loc396 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":294:13)
#loc397 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":300:13)
#loc398 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":294:17)
#loc399 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":294:25)
#loc400 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":294:27)
#loc401 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":294:30)
#loc402 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":294:39)
#loc403 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":295:13)
#loc404 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":296:17)
#loc405 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":299:17)
#loc406 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":296:26)
#loc407 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":296:22)
#loc408 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":296:29)
#loc409 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":296:41)
#loc410 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":296:31)
#loc411 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":297:17)
#loc412 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":298:31)
#loc413 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":298:21)
#loc414 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":296:49)
#loc415 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":296:48)
#loc416 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":306:1)
#loc417 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":332:1)
#loc418 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":308:5)
#loc419 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":308:9)
#loc420 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":310:14)
#loc421 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":310:13)
#loc422 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":310:5)
#loc423 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":311:5)
#loc424 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":320:5)
#loc425 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":311:8)
#loc426 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":311:27)
#loc427 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":312:5)
#loc428 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":315:5)
#loc429 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":317:5)
#loc430 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":314:19)
#loc431 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":314:9)
#loc432 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":319:17)
#loc433 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":319:9)
#loc434 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":321:5)
#loc435 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":331:5)
#loc436 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":321:8)
#loc437 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":321:26)
#loc438 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":322:5)
#loc439 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":323:9)
#loc440 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":330:9)
#loc441 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":324:13)
#loc442 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":324:24)
#loc443 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":326:13)
#loc444 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":329:13)
#loc445 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":326:22)
#loc446 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":326:18)
#loc447 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":326:25)
#loc448 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":326:37)
#loc449 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":326:27)
#loc450 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":327:13)
#loc451 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":328:27)
#loc452 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":328:17)
#loc453 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":326:45)
#loc454 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":326:44)
#loc455 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":335:1)
#loc456 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":356:1)
#loc457 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":337:5)
#loc458 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":337:9)
#loc459 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":339:14)
#loc460 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":339:13)
#loc461 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":339:5)
#loc462 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":340:5)
#loc463 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":344:5)
#loc464 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":340:8)
#loc465 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":340:26)
#loc466 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":341:5)
#loc467 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":343:17)
#loc468 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":343:9)
#loc469 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":345:5)
#loc470 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":355:5)
#loc471 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":345:8)
#loc472 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":345:26)
#loc473 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":346:5)
#loc474 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":347:9)
#loc475 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":354:9)
#loc476 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":348:13)
#loc477 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":348:24)
#loc478 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":350:13)
#loc479 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":353:13)
#loc480 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":350:22)
#loc481 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":350:18)
#loc482 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":350:25)
#loc483 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":350:37)
#loc484 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":350:27)
#loc485 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":351:13)
#loc486 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":352:27)
#loc487 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":352:17)
#loc488 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":350:45)
#loc489 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_08.c":350:44)
#loc490 = loc(fused[#loc1, #loc2])
#loc491 = loc(fused[#loc3, #loc4])
#loc492 = loc(fused[#loc6, #loc7])
#loc493 = loc(fused[#loc8, #loc9])
#loc494 = loc(fused[#loc10, #loc11])
#loc495 = loc(fused[#loc12, #loc13])
#loc496 = loc(fused[#loc14, #loc15])
#loc497 = loc(fused[#loc16, #loc17])
#loc498 = loc(fused[#loc19, #loc20])
#loc499 = loc(fused[#loc21, #loc22])
#loc500 = loc(fused[#loc25, #loc23])
#loc501 = loc(fused[#loc26, #loc27])
#loc502 = loc(fused[#loc28, #loc29])
#loc503 = loc(fused[#loc30, #loc27])
#loc504 = loc(fused[#loc31, #loc32])
#loc505 = loc(fused[#loc33, #loc34])
#loc506 = loc(fused[#loc35, #loc36])
#loc507 = loc(fused[#loc37, #loc38])
#loc508 = loc(fused[#loc39, #loc40])
#loc509 = loc(fused[#loc41, #loc42])
#loc510 = loc(fused[#loc43, #loc44])
#loc511 = loc(fused[#loc49, #loc50])
#loc512 = loc(fused[#loc51, #loc52])
#loc513 = loc(fused[#loc53, #loc54])
#loc514 = loc(fused[#loc55, #loc52])
#loc515 = loc(fused[#loc57, #loc58])
#loc516 = loc(fused[#loc60, #loc61])
#loc517 = loc(fused[#loc62, #loc63])
#loc518 = loc(fused[#loc66, #loc64])
#loc519 = loc(fused[#loc70, #loc71])
#loc520 = loc(fused[#loc75, #loc76])
#loc521 = loc(fused[#loc77, #loc78])
#loc522 = loc(fused[#loc80, #loc81])
#loc523 = loc(fused[#loc82, #loc83])
#loc524 = loc(fused[#loc84, #loc85])
#loc525 = loc(fused[#loc86, #loc78])
#loc526 = loc(fused[#loc90, #loc91])
#loc527 = loc(fused[#loc94, #loc95])
#loc528 = loc(fused[#loc96, #loc97])
#loc529 = loc(fused[#loc98, #loc99])
#loc530 = loc(fused[#loc101, #loc102])
#loc531 = loc(fused[#loc103, #loc97])
#loc532 = loc(fused[#loc107, #loc105])
#loc533 = loc(fused[#loc110, #loc111])
#loc534 = loc(fused[#loc113, #loc114])
#loc535 = loc(fused[#loc115, #loc116])
#loc536 = loc(fused[#loc117, #loc114])
#loc537 = loc(fused[#loc120, #loc121])
#loc538 = loc(fused[#loc122, #loc123])
#loc539 = loc(fused[#loc124, #loc121])
#loc540 = loc(fused[#loc125, #loc126])
#loc541 = loc(fused[#loc127, #loc128])
#loc542 = loc(fused[#loc129, #loc130])
#loc543 = loc(fused[#loc132, #loc131])
#loc544 = loc(fused[#loc133, #loc134])
#loc545 = loc(fused[#loc136, #loc130])
#loc546 = loc(fused[#loc139, #loc138])
#loc547 = loc(fused[#loc140, #loc141])
#loc548 = loc(fused[#loc142, #loc143])
#loc549 = loc(fused[#loc144, #loc145])
#loc550 = loc(fused[#loc146, #loc147])
#loc551 = loc(fused[#loc148, #loc149])
#loc552 = loc(fused[#loc150, #loc151])
#loc553 = loc(fused[#loc153, #loc152])
#loc554 = loc(fused[#loc155, #loc156])
#loc555 = loc(fused[#loc157, #loc158])
#loc556 = loc(fused[#loc161, #loc159])
#loc557 = loc(fused[#loc162, #loc163])
#loc558 = loc(fused[#loc164, #loc165])
#loc559 = loc(fused[#loc166, #loc163])
#loc560 = loc(fused[#loc167, #loc168])
#loc561 = loc(fused[#loc169, #loc170])
#loc562 = loc(fused[#loc171, #loc172])
#loc563 = loc(fused[#loc173, #loc174])
#loc564 = loc(fused[#loc175, #loc176])
#loc565 = loc(fused[#loc177, #loc178])
#loc566 = loc(fused[#loc179, #loc180])
#loc567 = loc(fused[#loc185, #loc186])
#loc568 = loc(fused[#loc187, #loc188])
#loc569 = loc(fused[#loc189, #loc190])
#loc570 = loc(fused[#loc191, #loc188])
#loc571 = loc(fused[#loc193, #loc194])
#loc572 = loc(fused[#loc196, #loc197])
#loc573 = loc(fused[#loc198, #loc199])
#loc574 = loc(fused[#loc201, #loc200])
#loc575 = loc(fused[#loc204, #loc205])
#loc576 = loc(fused[#loc208, #loc209])
#loc577 = loc(fused[#loc210, #loc211])
#loc578 = loc(fused[#loc213, #loc214])
#loc579 = loc(fused[#loc215, #loc216])
#loc580 = loc(fused[#loc217, #loc218])
#loc581 = loc(fused[#loc219, #loc211])
#loc582 = loc(fused[#loc223, #loc224])
#loc583 = loc(fused[#loc227, #loc228])
#loc584 = loc(fused[#loc229, #loc230])
#loc585 = loc(fused[#loc231, #loc232])
#loc586 = loc(fused[#loc234, #loc235])
#loc587 = loc(fused[#loc236, #loc230])
#loc588 = loc(fused[#loc240, #loc238])
#loc589 = loc(fused[#loc243, #loc244])
#loc590 = loc(fused[#loc246, #loc247])
#loc591 = loc(fused[#loc248, #loc249])
#loc592 = loc(fused[#loc250, #loc247])
#loc593 = loc(fused[#loc253, #loc254])
#loc594 = loc(fused[#loc255, #loc256])
#loc595 = loc(fused[#loc257, #loc258, #loc259, #loc254])
#loc596 = loc(fused[#loc261, #loc262])
#loc597 = loc(fused[#loc263, #loc264])
#loc598 = loc(fused[#loc265, #loc266])
#loc599 = loc(fused[#loc267, #loc268])
#loc600 = loc(fused[#loc270, #loc271])
#loc601 = loc(fused[#loc272, #loc266])
#loc602 = loc(fused[#loc273, #loc274])
#loc603 = loc(fused[#loc276, #loc275])
#loc604 = loc(fused[#loc277, #loc278])
#loc605 = loc(fused[#loc280, #loc274])
#loc606 = loc(fused[#loc284, #loc283])
#loc607 = loc(fused[#loc285, #loc286])
#loc608 = loc(fused[#loc288, #loc287])
#loc609 = loc(fused[#loc289, #loc290])
#loc610 = loc(fused[#loc291, #loc292])
#loc611 = loc(fused[#loc295, #loc293])
#loc612 = loc(fused[#loc296, #loc297])
#loc613 = loc(fused[#loc298, #loc299])
#loc614 = loc(fused[#loc300, #loc297])
#loc615 = loc(fused[#loc301, #loc302])
#loc616 = loc(fused[#loc303, #loc304])
#loc617 = loc(fused[#loc305, #loc306])
#loc618 = loc(fused[#loc307, #loc308])
#loc619 = loc(fused[#loc309, #loc310])
#loc620 = loc(fused[#loc311, #loc312])
#loc621 = loc(fused[#loc313, #loc314])
#loc622 = loc(fused[#loc319, #loc320])
#loc623 = loc(fused[#loc321, #loc322])
#loc624 = loc(fused[#loc323, #loc324])
#loc625 = loc(fused[#loc325, #loc322])
#loc626 = loc(fused[#loc327, #loc328])
#loc627 = loc(fused[#loc330, #loc331])
#loc628 = loc(fused[#loc332, #loc333])
#loc629 = loc(fused[#loc335, #loc334])
#loc630 = loc(fused[#loc338, #loc339])
#loc631 = loc(fused[#loc342, #loc343])
#loc632 = loc(fused[#loc344, #loc345])
#loc633 = loc(fused[#loc347, #loc348])
#loc634 = loc(fused[#loc349, #loc350])
#loc635 = loc(fused[#loc351, #loc352])
#loc636 = loc(fused[#loc353, #loc345])
#loc637 = loc(fused[#loc357, #loc358])
#loc638 = loc(fused[#loc361, #loc362])
#loc639 = loc(fused[#loc363, #loc364])
#loc640 = loc(fused[#loc365, #loc366])
#loc641 = loc(fused[#loc368, #loc369])
#loc642 = loc(fused[#loc370, #loc364])
#loc643 = loc(fused[#loc374, #loc372])
#loc644 = loc(fused[#loc377, #loc378])
#loc645 = loc(fused[#loc380, #loc381])
#loc646 = loc(fused[#loc382, #loc383])
#loc647 = loc(fused[#loc384, #loc381])
#loc648 = loc(fused[#loc387, #loc388])
#loc649 = loc(fused[#loc389, #loc390])
#loc650 = loc(fused[#loc391, #loc388])
#loc651 = loc(fused[#loc392, #loc393])
#loc652 = loc(fused[#loc394, #loc395])
#loc653 = loc(fused[#loc396, #loc397])
#loc654 = loc(fused[#loc398, #loc399])
#loc655 = loc(fused[#loc401, #loc402])
#loc656 = loc(fused[#loc403, #loc397])
#loc657 = loc(fused[#loc404, #loc405])
#loc658 = loc(fused[#loc407, #loc406])
#loc659 = loc(fused[#loc408, #loc409])
#loc660 = loc(fused[#loc411, #loc405])
#loc661 = loc(fused[#loc415, #loc414])
#loc662 = loc(fused[#loc416, #loc417])
#loc663 = loc(fused[#loc418, #loc419])
#loc664 = loc(fused[#loc422, #loc420])
#loc665 = loc(fused[#loc423, #loc424])
#loc666 = loc(fused[#loc425, #loc426])
#loc667 = loc(fused[#loc427, #loc428, #loc429, #loc424])
#loc668 = loc(fused[#loc433, #loc432])
#loc669 = loc(fused[#loc434, #loc435])
#loc670 = loc(fused[#loc436, #loc437])
#loc671 = loc(fused[#loc438, #loc435])
#loc672 = loc(fused[#loc439, #loc440])
#loc673 = loc(fused[#loc441, #loc442])
#loc674 = loc(fused[#loc443, #loc444])
#loc675 = loc(fused[#loc446, #loc445])
#loc676 = loc(fused[#loc447, #loc448])
#loc677 = loc(fused[#loc450, #loc444])
#loc678 = loc(fused[#loc454, #loc453])
#loc679 = loc(fused[#loc455, #loc456])
#loc680 = loc(fused[#loc457, #loc458])
#loc681 = loc(fused[#loc461, #loc459])
#loc682 = loc(fused[#loc462, #loc463])
#loc683 = loc(fused[#loc464, #loc465])
#loc684 = loc(fused[#loc466, #loc463])
#loc685 = loc(fused[#loc468, #loc467])
#loc686 = loc(fused[#loc469, #loc470])
#loc687 = loc(fused[#loc471, #loc472])
#loc688 = loc(fused[#loc473, #loc470])
#loc689 = loc(fused[#loc474, #loc475])
#loc690 = loc(fused[#loc476, #loc477])
#loc691 = loc(fused[#loc478, #loc479])
#loc692 = loc(fused[#loc481, #loc480])
#loc693 = loc(fused[#loc482, #loc483])
#loc694 = loc(fused[#loc485, #loc479])
#loc695 = loc(fused[#loc489, #loc488])
