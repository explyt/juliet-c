!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @globalReturnsTrue() -> !s32i loc(#loc168)
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc169)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc171)
  cir.func private @printIntLine(!s32i) loc(#loc172)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_113badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc176)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc22)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %6 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc26)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc180)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc181)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc29)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %13 = cir.call @__isoc23_fscanf(%10, %12, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
    cir.br ^bb3 loc(#loc25)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc182)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc33)
    %16 = cir.const #cir.int<4> : !u64i loc(#loc183)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc184)
    cir.store %17, %0 : !u64i, !cir.ptr<!u64i> loc(#loc185)
    %18 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %19 = cir.call @_Znam(%18) : (!u64i) -> !cir.ptr<!void> loc(#loc38)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc186)
    cir.store %21, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc187)
    cir.br ^bb6 loc(#loc188)
  ^bb6:  // pred: ^bb5
    %22 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc44)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb7 loc(#loc188)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc47)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc190)
    cir.brcond %27 ^bb8, ^bb12 loc(#loc190)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc191)
  ^bb9:  // pred: ^bb8
    %28 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc52)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.br ^bb10 loc(#loc43)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc43)
  ^bb11:  // pred: ^bb10
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc54)
    cir.store %33, %1 : !u64i, !cir.ptr<!u64i> loc(#loc193)
    cir.br ^bb7 loc(#loc188)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc43)
  ^bb13:  // pred: ^bb12
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc57)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc58)
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
    cir.delete.array %38 : <!s32i> loc(#loc59)
    cir.br ^bb14 loc(#loc32)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc13)
  } loc(#loc173)
  cir.func private @globalReturnsFalse() -> !s32i loc(#loc194)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc64)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc199)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc200)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc75)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %6 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc79)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc203)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb4 loc(#loc82)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc85)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb4 loc(#loc78)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc78)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc206)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc89)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc207)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc208)
    cir.store %14, %0 : !u64i, !cir.ptr<!u64i> loc(#loc209)
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc94)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc210)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc211)
    cir.br ^bb7 loc(#loc212)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc100)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc213)
    cir.br ^bb8 loc(#loc212)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc103)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc214)
    cir.brcond %24 ^bb9, ^bb13 loc(#loc214)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc215)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc108)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.br ^bb11 loc(#loc99)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc99)
  ^bb12:  // pred: ^bb11
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc110)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    cir.br ^bb8 loc(#loc212)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc99)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc113)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc114)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
    cir.delete.array %35 : <!s32i> loc(#loc115)
    cir.br ^bb15 loc(#loc88)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc66)
  } loc(#loc196)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc220)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc221)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc222)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc126)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %6 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc130)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc225)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc133)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb3 loc(#loc129)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc129)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc228)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc137)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc229)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc230)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc231)
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
    %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc142)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc232)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc233)
    cir.br ^bb6 loc(#loc234)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc148)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc235)
    cir.br ^bb7 loc(#loc234)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc151)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc236)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc236)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc237)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc156)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.br ^bb10 loc(#loc147)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc147)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc157)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc158)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    cir.br ^bb7 loc(#loc234)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc147)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc161)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc162)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
    cir.delete.array %33 : <!s32i> loc(#loc163)
    cir.br ^bb14 loc(#loc136)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc117)
  } loc(#loc218)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_114goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11L8goodG2B1Ev() : () -> () loc(#loc166)
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11L8goodG2B2Ev() : () -> () loc(#loc167)
    cir.return loc(#loc165)
  } loc(#loc240)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":442:1)
#loc4 = loc("/usr/include/stdio.h":444:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":32:23)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":24:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":47:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":35:9)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":35:16)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":35:26)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":36:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":36:14)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":26:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":26:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":28:13)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":28:12)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":28:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":29:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":33:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":29:8)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":29:26)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":30:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":32:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":32:16)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":34:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":46:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":38:21)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":38:28)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":38:38)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":38:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":39:37)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":24:6)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":39:28)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":39:46)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":39:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":40:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":43:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":40:18)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":40:14)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":40:21)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":40:33)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":41:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":42:29)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":42:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":42:24)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":42:25)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":40:40)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":40:39)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":44:22)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":44:33)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":44:34)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":44:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":45:19)
#loc60 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc61 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc62 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc63 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":62:19)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":54:1)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":82:1)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":70:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":70:16)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":70:26)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":71:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":71:14)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":56:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":56:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":58:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":58:12)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":58:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":59:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":68:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":59:8)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":59:27)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":60:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":63:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":65:5)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":62:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":67:16)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":67:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":69:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":81:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":73:21)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":73:28)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":73:38)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":73:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":74:37)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":54:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":74:28)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":74:46)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":74:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":75:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":78:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":75:18)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":75:14)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":75:21)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":75:33)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":76:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":77:29)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":77:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":77:24)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":77:25)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":75:40)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":75:39)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":79:22)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":79:33)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":79:34)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":79:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":80:19)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":85:1)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":108:1)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":96:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":96:16)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":96:26)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":97:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":97:14)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":87:5)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":87:9)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":89:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":89:12)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":89:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":90:5)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":94:5)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":90:8)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":90:26)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":91:5)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":93:16)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":93:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":95:5)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":107:5)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":99:21)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":99:28)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":99:38)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":99:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":100:37)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":85:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":100:28)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":100:46)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":100:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":101:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":104:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":101:18)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":101:14)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":101:21)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":101:33)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":102:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":103:29)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":103:13)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":103:24)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":103:25)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":101:40)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":101:39)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":105:22)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":105:33)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":105:34)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":105:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":106:19)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":110:1)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":114:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":112:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_11.cpp":113:5)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc8, #loc9])
#loc172 = loc(fused[#loc10, #loc11])
#loc173 = loc(fused[#loc12, #loc13])
#loc174 = loc(fused[#loc14, #loc15])
#loc175 = loc(fused[#loc14, #loc16])
#loc176 = loc(fused[#loc17, #loc18])
#loc177 = loc(fused[#loc19, #loc20])
#loc178 = loc(fused[#loc23, #loc21])
#loc179 = loc(fused[#loc24, #loc25])
#loc180 = loc(fused[#loc26, #loc27])
#loc181 = loc(fused[#loc28, #loc25])
#loc182 = loc(fused[#loc31, #loc32])
#loc183 = loc(fused[#loc34, #loc35])
#loc184 = loc(fused[#loc33, #loc35])
#loc185 = loc(fused[#loc36, #loc35])
#loc186 = loc(fused[#loc39, #loc40])
#loc187 = loc(fused[#loc41, #loc40])
#loc188 = loc(fused[#loc42, #loc43])
#loc189 = loc(fused[#loc45, #loc44])
#loc190 = loc(fused[#loc46, #loc47])
#loc191 = loc(fused[#loc48, #loc43])
#loc192 = loc(fused[#loc50, #loc49])
#loc193 = loc(fused[#loc54, #loc53])
#loc194 = loc(fused[#loc60, #loc61])
#loc195 = loc(fused[#loc62, #loc63])
#loc196 = loc(fused[#loc65, #loc66])
#loc197 = loc(fused[#loc67, #loc68])
#loc198 = loc(fused[#loc67, #loc69])
#loc199 = loc(fused[#loc70, #loc71])
#loc200 = loc(fused[#loc72, #loc73])
#loc201 = loc(fused[#loc76, #loc74])
#loc202 = loc(fused[#loc77, #loc78])
#loc203 = loc(fused[#loc79, #loc80])
#loc204 = loc(fused[#loc81, #loc82, #loc83, #loc78])
#loc205 = loc(fused[#loc86, #loc85])
#loc206 = loc(fused[#loc87, #loc88])
#loc207 = loc(fused[#loc90, #loc91])
#loc208 = loc(fused[#loc89, #loc91])
#loc209 = loc(fused[#loc92, #loc91])
#loc210 = loc(fused[#loc95, #loc96])
#loc211 = loc(fused[#loc97, #loc96])
#loc212 = loc(fused[#loc98, #loc99])
#loc213 = loc(fused[#loc101, #loc100])
#loc214 = loc(fused[#loc102, #loc103])
#loc215 = loc(fused[#loc104, #loc99])
#loc216 = loc(fused[#loc106, #loc105])
#loc217 = loc(fused[#loc110, #loc109])
#loc218 = loc(fused[#loc116, #loc117])
#loc219 = loc(fused[#loc118, #loc119])
#loc220 = loc(fused[#loc118, #loc120])
#loc221 = loc(fused[#loc121, #loc122])
#loc222 = loc(fused[#loc123, #loc124])
#loc223 = loc(fused[#loc127, #loc125])
#loc224 = loc(fused[#loc128, #loc129])
#loc225 = loc(fused[#loc130, #loc131])
#loc226 = loc(fused[#loc132, #loc129])
#loc227 = loc(fused[#loc134, #loc133])
#loc228 = loc(fused[#loc135, #loc136])
#loc229 = loc(fused[#loc138, #loc139])
#loc230 = loc(fused[#loc137, #loc139])
#loc231 = loc(fused[#loc140, #loc139])
#loc232 = loc(fused[#loc143, #loc144])
#loc233 = loc(fused[#loc145, #loc144])
#loc234 = loc(fused[#loc146, #loc147])
#loc235 = loc(fused[#loc149, #loc148])
#loc236 = loc(fused[#loc150, #loc151])
#loc237 = loc(fused[#loc152, #loc147])
#loc238 = loc(fused[#loc154, #loc153])
#loc239 = loc(fused[#loc158, #loc157])
#loc240 = loc(fused[#loc164, #loc165])
