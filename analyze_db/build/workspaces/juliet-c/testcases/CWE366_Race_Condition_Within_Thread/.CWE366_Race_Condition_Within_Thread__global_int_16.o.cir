!s32i = !cir.int<s, 32>
!ty__stdThread = !cir.record<struct "_stdThread" incomplete>
!ty__stdThreadLock = !cir.record<struct "_stdThreadLock" incomplete>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":26:23)
#loc8 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":26:29)
#loc64 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:25)
#loc73 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:25)
#loc96 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":44:24)
#loc97 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":44:30)
#loc158 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:25)
#loc167 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:25)
#true = #cir.bool<true> : !cir.bool
#loc181 = loc(fused[#loc7, #loc8])
#loc216 = loc(fused[#loc96, #loc97])
module @"/workspaces/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__global_int_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @gBadInt = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc178)
  cir.func private @stdThreadCreate(!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc179)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!void> loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc182)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb2 loc(#loc183)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.const #cir.int<1000000> : !s32i loc(#loc17)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc185)
    cir.brcond %5 ^bb3, ^bb7 loc(#loc18)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc178)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc20)
    %10 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc178)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc24)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.br ^bb2 loc(#loc183)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc6)
  } loc(#loc180)
  cir.func private @stdThreadJoin(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc189)
  cir.func private @stdThreadDestroy(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc190)
  cir.func private @printIntLine(!s32i) loc(#loc191)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__global_int_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc195)
  ^bb2:  // 2 preds: ^bb1, ^bb39
    %2 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %3 ^bb3, ^bb40 loc(#loc39)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc196)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc197)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc34)
    cir.store %4, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc193)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc36)
    cir.store %5, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc194)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %7 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc178)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb6 loc(#loc199)
  ^bb6:  // pred: ^bb5
    %8 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc47)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
    %10 = cir.call @stdThreadCreate(%8, %9, %0) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc49)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc49)
    %12 = cir.unary(not, %11) : !cir.bool, !cir.bool loc(#loc49)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc200)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc51)
    cir.store %13, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc201)
    cir.br ^bb8 loc(#loc46)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc46)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc202)
  ^bb10:  // pred: ^bb9
    %14 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc55)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %16 = cir.call @stdThreadCreate(%14, %15, %1) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc57)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc57)
    %18 = cir.unary(not, %17) : !cir.bool, !cir.bool loc(#loc57)
    cir.brcond %18 ^bb11, ^bb12 loc(#loc203)
  ^bb11:  // pred: ^bb10
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc59)
    cir.store %19, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc204)
    cir.br ^bb12 loc(#loc54)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc54)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc205)
  ^bb14:  // pred: ^bb13
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc63)
    %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc63)
    cir.brcond %21 ^bb15, ^bb20 loc(#loc64)
  ^bb15:  // pred: ^bb14
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc65)
    %23 = cir.call @stdThreadJoin(%22) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc66)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %24 ^bb16, ^bb17 loc(#loc64)
  ^bb16:  // pred: ^bb15
    %25 = cir.const #true loc(#loc64)
    cir.br ^bb18(%25 : !cir.bool) loc(#loc64)
  ^bb17:  // pred: ^bb15
    %26 = cir.const #false loc(#loc64)
    cir.br ^bb18(%26 : !cir.bool) loc(#loc64)
  ^bb18(%27: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:25)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc64)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%27 : !cir.bool) loc(#loc64)
  ^bb20:  // pred: ^bb14
    %28 = cir.const #false loc(#loc64)
    cir.br ^bb21(%28 : !cir.bool) loc(#loc64)
  ^bb21(%29: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:25)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc64)
  ^bb22:  // pred: ^bb21
    cir.brcond %29 ^bb23, ^bb24 loc(#loc206)
  ^bb23:  // pred: ^bb22
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc68)
    %31 = cir.call @stdThreadDestroy(%30) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc69)
    cir.br ^bb24 loc(#loc62)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc62)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc207)
  ^bb26:  // pred: ^bb25
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc72)
    %33 = cir.cast(ptr_to_bool, %32 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc72)
    cir.brcond %33 ^bb27, ^bb32 loc(#loc73)
  ^bb27:  // pred: ^bb26
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc74)
    %35 = cir.call @stdThreadJoin(%34) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc75)
    %36 = cir.cast(int_to_bool, %35 : !s32i), !cir.bool loc(#loc75)
    cir.brcond %36 ^bb28, ^bb29 loc(#loc73)
  ^bb28:  // pred: ^bb27
    %37 = cir.const #true loc(#loc73)
    cir.br ^bb30(%37 : !cir.bool) loc(#loc73)
  ^bb29:  // pred: ^bb27
    %38 = cir.const #false loc(#loc73)
    cir.br ^bb30(%38 : !cir.bool) loc(#loc73)
  ^bb30(%39: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:25)):  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc73)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33(%39 : !cir.bool) loc(#loc73)
  ^bb32:  // pred: ^bb26
    %40 = cir.const #false loc(#loc73)
    cir.br ^bb33(%40 : !cir.bool) loc(#loc73)
  ^bb33(%41: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:25)):  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc73)
  ^bb34:  // pred: ^bb33
    cir.brcond %41 ^bb35, ^bb36 loc(#loc208)
  ^bb35:  // pred: ^bb34
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc77)
    %43 = cir.call @stdThreadDestroy(%42) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc78)
    cir.br ^bb36 loc(#loc71)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc71)
  ^bb37:  // pred: ^bb36
    %44 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc178)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc80)
    cir.br ^bb38 loc(#loc42)
  ^bb38:  // pred: ^bb37
    cir.br ^bb40 loc(#loc81)
  ^bb39:  // no predecessors
    cir.br ^bb2 loc(#loc38)
  ^bb40:  // 2 preds: ^bb2, ^bb38
    cir.br ^bb41 loc(#loc38)
  ^bb41:  // pred: ^bb40
    cir.return loc(#loc32)
  } loc(#loc192)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__global_int_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc210)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc84)
    cir.return loc(#loc83)
  } loc(#loc209)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc211)
  cir.global "private" internal dsolocal @gGoodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc212)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc213)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc214)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!void> loc(fused[#loc96, #loc97])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc217)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc100)
    %2 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc212)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc101)
    cir.call @stdThreadLockAcquire(%3) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc102)
    cir.br ^bb1 loc(#loc218)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb2 loc(#loc218)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %6 = cir.const #cir.int<1000000> : !s32i loc(#loc108)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc220)
    cir.brcond %7 ^bb3, ^bb7 loc(#loc109)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc221)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc222)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc113)
    %12 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc222)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc104)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc117)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb2 loc(#loc218)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc104)
  ^bb8:  // pred: ^bb7
    %15 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc212)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc118)
    cir.call @stdThreadLockRelease(%16) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc119)
    cir.return loc(#loc95)
  } loc(#loc215)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc225)
  cir.global "private" internal dsolocal @gGoodInt = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc222)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc227)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc228)
    cir.br ^bb1 loc(#loc229)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc229)
  ^bb2:  // 2 preds: ^bb1, ^bb43
    %2 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc130)
    cir.brcond %3 ^bb3, ^bb44 loc(#loc130)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc230)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc231)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc125)
    cir.store %4, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc227)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc127)
    cir.store %5, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc228)
    cir.br ^bb6 loc(#loc232)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc212)
    %7 = cir.call @stdThreadLockCreate(%6) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc136)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc136)
    %9 = cir.unary(not, %8) : !cir.bool, !cir.bool loc(#loc136)
    cir.brcond %9 ^bb7, ^bb8 loc(#loc233)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc138)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc135)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc234)
  ^bb10:  // pred: ^bb9
    %10 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc141)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
    %12 = cir.call @stdThreadCreate(%10, %11, %0) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc143)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc143)
    %14 = cir.unary(not, %13) : !cir.bool, !cir.bool loc(#loc143)
    cir.brcond %14 ^bb11, ^bb12 loc(#loc235)
  ^bb11:  // pred: ^bb10
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc145)
    cir.store %15, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc236)
    cir.br ^bb12 loc(#loc140)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc140)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc237)
  ^bb14:  // pred: ^bb13
    %16 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc149)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
    %18 = cir.call @stdThreadCreate(%16, %17, %1) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc151)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc151)
    %20 = cir.unary(not, %19) : !cir.bool, !cir.bool loc(#loc151)
    cir.brcond %20 ^bb15, ^bb16 loc(#loc238)
  ^bb15:  // pred: ^bb14
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc153)
    cir.store %21, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc239)
    cir.br ^bb16 loc(#loc148)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc148)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc240)
  ^bb18:  // pred: ^bb17
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc157)
    %23 = cir.cast(ptr_to_bool, %22 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc157)
    cir.brcond %23 ^bb19, ^bb24 loc(#loc158)
  ^bb19:  // pred: ^bb18
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc159)
    %25 = cir.call @stdThreadJoin(%24) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc160)
    %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc160)
    cir.brcond %26 ^bb20, ^bb21 loc(#loc158)
  ^bb20:  // pred: ^bb19
    %27 = cir.const #true loc(#loc158)
    cir.br ^bb22(%27 : !cir.bool) loc(#loc158)
  ^bb21:  // pred: ^bb19
    %28 = cir.const #false loc(#loc158)
    cir.br ^bb22(%28 : !cir.bool) loc(#loc158)
  ^bb22(%29: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:25)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc158)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25(%29 : !cir.bool) loc(#loc158)
  ^bb24:  // pred: ^bb18
    %30 = cir.const #false loc(#loc158)
    cir.br ^bb25(%30 : !cir.bool) loc(#loc158)
  ^bb25(%31: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:25)):  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc158)
  ^bb26:  // pred: ^bb25
    cir.brcond %31 ^bb27, ^bb28 loc(#loc241)
  ^bb27:  // pred: ^bb26
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc162)
    %33 = cir.call @stdThreadDestroy(%32) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc163)
    cir.br ^bb28 loc(#loc156)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc156)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc242)
  ^bb30:  // pred: ^bb29
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc166)
    %35 = cir.cast(ptr_to_bool, %34 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc166)
    cir.brcond %35 ^bb31, ^bb36 loc(#loc167)
  ^bb31:  // pred: ^bb30
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc168)
    %37 = cir.call @stdThreadJoin(%36) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc169)
    %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc169)
    cir.brcond %38 ^bb32, ^bb33 loc(#loc167)
  ^bb32:  // pred: ^bb31
    %39 = cir.const #true loc(#loc167)
    cir.br ^bb34(%39 : !cir.bool) loc(#loc167)
  ^bb33:  // pred: ^bb31
    %40 = cir.const #false loc(#loc167)
    cir.br ^bb34(%40 : !cir.bool) loc(#loc167)
  ^bb34(%41: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:25)):  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc167)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37(%41 : !cir.bool) loc(#loc167)
  ^bb36:  // pred: ^bb30
    %42 = cir.const #false loc(#loc167)
    cir.br ^bb37(%42 : !cir.bool) loc(#loc167)
  ^bb37(%43: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:25)):  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc167)
  ^bb38:  // pred: ^bb37
    cir.brcond %43 ^bb39, ^bb40 loc(#loc243)
  ^bb39:  // pred: ^bb38
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc171)
    %45 = cir.call @stdThreadDestroy(%44) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc172)
    cir.br ^bb40 loc(#loc165)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc165)
  ^bb41:  // pred: ^bb40
    %46 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc212)
    %47 = cir.load %46 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc173)
    cir.call @stdThreadLockDestroy(%47) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc174)
    %48 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc222)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc176)
    cir.br ^bb42 loc(#loc133)
  ^bb42:  // pred: ^bb41
    cir.br ^bb44 loc(#loc177)
  ^bb43:  // no predecessors
    cir.br ^bb2 loc(#loc129)
  ^bb44:  // 2 preds: ^bb2, ^bb42
    cir.br ^bb45 loc(#loc129)
  ^bb45:  // pred: ^bb44
    cir.return loc(#loc123)
  } loc(#loc226)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__global_int_16.c":0:0)
#loc1 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":22:1)
#loc2 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":22:22)
#loc3 = loc("../../testcasesupport/std_thread.h":14:1)
#loc4 = loc("../../testcasesupport/std_thread.h":14:74)
#loc5 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":26:1)
#loc6 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":42:1)
#loc9 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":28:5)
#loc10 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":28:9)
#loc11 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":27:1)
#loc12 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:5)
#loc13 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":41:5)
#loc14 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:14)
#loc15 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:10)
#loc16 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:17)
#loc17 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:21)
#loc18 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:19)
#loc19 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":39:5)
#loc20 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":40:19)
#loc21 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":40:29)
#loc22 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":40:9)
#loc23 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:31)
#loc24 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:30)
#loc25 = loc("../../testcasesupport/std_thread.h":15:1)
#loc26 = loc("../../testcasesupport/std_thread.h":15:35)
#loc27 = loc("../../testcasesupport/std_thread.h":16:1)
#loc28 = loc("../../testcasesupport/std_thread.h":16:38)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc31 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":59:1)
#loc32 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":87:1)
#loc33 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":64:13)
#loc34 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":64:33)
#loc35 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":65:13)
#loc36 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":65:33)
#loc37 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":61:5)
#loc38 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":86:5)
#loc39 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":61:11)
#loc40 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":62:5)
#loc41 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":63:9)
#loc42 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":84:9)
#loc43 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":66:23)
#loc44 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":66:13)
#loc45 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":67:13)
#loc46 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":70:13)
#loc47 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":67:34)
#loc48 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":67:45)
#loc49 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":67:18)
#loc50 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":68:13)
#loc51 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":69:27)
#loc52 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":69:17)
#loc53 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":71:13)
#loc54 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":74:13)
#loc55 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":71:34)
#loc56 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":71:45)
#loc57 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":71:18)
#loc58 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":72:13)
#loc59 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":73:27)
#loc60 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":73:17)
#loc61 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:13)
#loc62 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":78:13)
#loc63 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:17)
#loc65 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:42)
#loc66 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:28)
#loc67 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":76:13)
#loc68 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":77:34)
#loc69 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":77:17)
#loc70 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:13)
#loc71 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":82:13)
#loc72 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:17)
#loc74 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:42)
#loc75 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:28)
#loc76 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":80:13)
#loc77 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":81:34)
#loc78 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":81:17)
#loc79 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":83:26)
#loc80 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":83:13)
#loc81 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":85:9)
#loc82 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":128:1)
#loc83 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":131:1)
#loc84 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":130:5)
#loc85 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":130:11)
#loc86 = loc("../../testcasesupport/std_thread.h":18:1)
#loc87 = loc("../../testcasesupport/std_thread.h":18:44)
#loc88 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":24:1)
#loc89 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":24:34)
#loc90 = loc("../../testcasesupport/std_thread.h":19:1)
#loc91 = loc("../../testcasesupport/std_thread.h":19:45)
#loc92 = loc("../../testcasesupport/std_thread.h":20:1)
#loc93 = loc("../../testcasesupport/std_thread.h":20:45)
#loc94 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":44:1)
#loc95 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":55:1)
#loc98 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":46:5)
#loc99 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":46:9)
#loc100 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":45:1)
#loc101 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":49:26)
#loc102 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":49:5)
#loc103 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:5)
#loc104 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":53:5)
#loc105 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:14)
#loc106 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:10)
#loc107 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:17)
#loc108 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:21)
#loc109 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:19)
#loc110 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":51:5)
#loc111 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":23:1)
#loc112 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":23:23)
#loc113 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":52:20)
#loc114 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":52:31)
#loc115 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":52:9)
#loc116 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:31)
#loc117 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:30)
#loc118 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":54:26)
#loc119 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":54:5)
#loc120 = loc("../../testcasesupport/std_thread.h":21:1)
#loc121 = loc("../../testcasesupport/std_thread.h":21:45)
#loc122 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":94:1)
#loc123 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":126:1)
#loc124 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":99:13)
#loc125 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":99:33)
#loc126 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":100:13)
#loc127 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":100:33)
#loc128 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":96:5)
#loc129 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":125:5)
#loc130 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":96:11)
#loc131 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":97:5)
#loc132 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":98:9)
#loc133 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":123:9)
#loc134 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":101:13)
#loc135 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":104:13)
#loc136 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":101:18)
#loc137 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":102:13)
#loc138 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":103:17)
#loc139 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":105:13)
#loc140 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":108:13)
#loc141 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":105:34)
#loc142 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":105:46)
#loc143 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":105:18)
#loc144 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":106:13)
#loc145 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":107:27)
#loc146 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":107:17)
#loc147 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":109:13)
#loc148 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":112:13)
#loc149 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":109:34)
#loc150 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":109:46)
#loc151 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":109:18)
#loc152 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":110:13)
#loc153 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":111:27)
#loc154 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":111:17)
#loc155 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:13)
#loc156 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":116:13)
#loc157 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:17)
#loc159 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:42)
#loc160 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:28)
#loc161 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":114:13)
#loc162 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":115:34)
#loc163 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":115:17)
#loc164 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:13)
#loc165 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":120:13)
#loc166 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:17)
#loc168 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:42)
#loc169 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:28)
#loc170 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":118:13)
#loc171 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":119:34)
#loc172 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":119:17)
#loc173 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":121:34)
#loc174 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":121:13)
#loc175 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":122:26)
#loc176 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":122:13)
#loc177 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":124:9)
#loc178 = loc(fused[#loc1, #loc2])
#loc179 = loc(fused[#loc3, #loc4])
#loc180 = loc(fused[#loc5, #loc6])
#loc182 = loc(fused[#loc9, #loc10])
#loc183 = loc(fused[#loc12, #loc13])
#loc184 = loc(fused[#loc15, #loc14])
#loc185 = loc(fused[#loc16, #loc17])
#loc186 = loc(fused[#loc19, #loc13])
#loc187 = loc(fused[#loc22, #loc21])
#loc188 = loc(fused[#loc24, #loc23])
#loc189 = loc(fused[#loc25, #loc26])
#loc190 = loc(fused[#loc27, #loc28])
#loc191 = loc(fused[#loc29, #loc30])
#loc192 = loc(fused[#loc31, #loc32])
#loc193 = loc(fused[#loc33, #loc34])
#loc194 = loc(fused[#loc35, #loc36])
#loc195 = loc(fused[#loc37, #loc38])
#loc196 = loc(fused[#loc40, #loc38])
#loc197 = loc(fused[#loc41, #loc42])
#loc198 = loc(fused[#loc44, #loc43])
#loc199 = loc(fused[#loc45, #loc46])
#loc200 = loc(fused[#loc50, #loc46])
#loc201 = loc(fused[#loc52, #loc51])
#loc202 = loc(fused[#loc53, #loc54])
#loc203 = loc(fused[#loc58, #loc54])
#loc204 = loc(fused[#loc60, #loc59])
#loc205 = loc(fused[#loc61, #loc62])
#loc206 = loc(fused[#loc67, #loc62])
#loc207 = loc(fused[#loc70, #loc71])
#loc208 = loc(fused[#loc76, #loc71])
#loc209 = loc(fused[#loc82, #loc83])
#loc210 = loc(fused[#loc84, #loc85])
#loc211 = loc(fused[#loc86, #loc87])
#loc212 = loc(fused[#loc88, #loc89])
#loc213 = loc(fused[#loc90, #loc91])
#loc214 = loc(fused[#loc92, #loc93])
#loc215 = loc(fused[#loc94, #loc95])
#loc217 = loc(fused[#loc98, #loc99])
#loc218 = loc(fused[#loc103, #loc104])
#loc219 = loc(fused[#loc106, #loc105])
#loc220 = loc(fused[#loc107, #loc108])
#loc221 = loc(fused[#loc110, #loc104])
#loc222 = loc(fused[#loc111, #loc112])
#loc223 = loc(fused[#loc115, #loc114])
#loc224 = loc(fused[#loc117, #loc116])
#loc225 = loc(fused[#loc120, #loc121])
#loc226 = loc(fused[#loc122, #loc123])
#loc227 = loc(fused[#loc124, #loc125])
#loc228 = loc(fused[#loc126, #loc127])
#loc229 = loc(fused[#loc128, #loc129])
#loc230 = loc(fused[#loc131, #loc129])
#loc231 = loc(fused[#loc132, #loc133])
#loc232 = loc(fused[#loc134, #loc135])
#loc233 = loc(fused[#loc137, #loc135])
#loc234 = loc(fused[#loc139, #loc140])
#loc235 = loc(fused[#loc144, #loc140])
#loc236 = loc(fused[#loc146, #loc145])
#loc237 = loc(fused[#loc147, #loc148])
#loc238 = loc(fused[#loc152, #loc148])
#loc239 = loc(fused[#loc154, #loc153])
#loc240 = loc(fused[#loc155, #loc156])
#loc241 = loc(fused[#loc161, #loc156])
#loc242 = loc(fused[#loc164, #loc165])
#loc243 = loc(fused[#loc170, #loc165])
