!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc52 = loc("CWE390_Error_Without_Action__sqrt_15.c":118:10)
#loc53 = loc("CWE390_Error_Without_Action__sqrt_15.c":118:14)
#loc54 = loc("CWE390_Error_Without_Action__sqrt_15.c":118:20)
#loc55 = loc("CWE390_Error_Without_Action__sqrt_15.c":118:32)
#loc154 = loc(fused[#loc52, #loc53])
#loc155 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE390_Error_Without_Action/CWE390_Error_Without_Action__sqrt_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__errno_location() -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc136)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc3)
  cir.func private @printDoubleLine(!cir.double) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE390_Error_Without_Action__sqrt_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber"] {alignment = 8 : i64} loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc15)
    cir.br ^bb2 loc(#loc13)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc13)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %3 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc20)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %4 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc21)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc23)
    %7 = cir.cast(int_to_float, %6 : !s32i), !cir.double loc(#loc23)
    %8 = cir.call @sqrt(%7) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc21)
    cir.store %8, %0 : !cir.double, !cir.ptr<!cir.double> loc(#loc144)
    cir.br ^bb6 loc(#loc145)
  ^bb6:  // pred: ^bb5
    %9 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc28)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %11 = cir.const #cir.int<33> : !s32i loc(#loc29)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc146)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc147)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    %13 = cir.load %0 : !cir.ptr<!cir.double>, !cir.double loc(#loc31)
    cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc32)
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc33)
  ^bb11:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.br ^bb12 loc(#loc35)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc14)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc10)
  } loc(#loc139)
  cir.func no_proto @CWE390_Error_Without_Action__sqrt_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc148)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc151)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc59)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE390_Error_Without_Action__sqrt_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call @CWE390_Error_Without_Action__sqrt_15_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE390_Error_Without_Action__sqrt_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE390_Error_Without_Action__sqrt_15_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.return %17 : !s32i loc(#loc158)
  } loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"sqrt() failed\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc70)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc159)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber"] {alignment = 8 : i64} loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc79)
    cir.br ^bb2 loc(#loc77)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc77)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc80)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc81)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb12 loc(#loc83)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc163)
  ^bb6:  // pred: ^bb5
    %4 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %5 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc87)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %6 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc88)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc90)
    %9 = cir.cast(int_to_float, %8 : !s32i), !cir.double loc(#loc90)
    %10 = cir.call @sqrt(%9) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc88)
    cir.store %10, %0 : !cir.double, !cir.ptr<!cir.double> loc(#loc165)
    cir.br ^bb7 loc(#loc166)
  ^bb7:  // pred: ^bb6
    %11 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc95)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %13 = cir.const #cir.int<33> : !s32i loc(#loc96)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc167)
    cir.brcond %14 ^bb8, ^bb9 loc(#loc168)
  ^bb8:  // pred: ^bb7
    %15 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc70)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc99)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc100)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
    cir.br ^bb9 loc(#loc94)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc94)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %0 : !cir.ptr<!cir.double>, !cir.double loc(#loc101)
    cir.call @printDoubleLine(%19) : (!cir.double) -> () loc(#loc102)
    cir.br ^bb11 loc(#loc85)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc103)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc78)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc74)
  } loc(#loc160)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber"] {alignment = 8 : i64} loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc110)
    cir.br ^bb2 loc(#loc108)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc108)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc172)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %3 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc115)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %4 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc116)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc118)
    %7 = cir.cast(int_to_float, %6 : !s32i), !cir.double loc(#loc118)
    %8 = cir.call @sqrt(%7) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc116)
    cir.store %8, %0 : !cir.double, !cir.ptr<!cir.double> loc(#loc174)
    cir.br ^bb6 loc(#loc175)
  ^bb6:  // pred: ^bb5
    %9 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc123)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %11 = cir.const #cir.int<33> : !s32i loc(#loc124)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc176)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc177)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc126)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc129)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
    cir.br ^bb8 loc(#loc122)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc122)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %0 : !cir.ptr<!cir.double>, !cir.double loc(#loc130)
    cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc131)
    cir.br ^bb10 loc(#loc113)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc132)
  ^bb11:  // pred: ^bb2
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc133)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.br ^bb12 loc(#loc135)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc109)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc105)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE390_Error_Without_Action/CWE390_Error_Without_Action__sqrt_15.c":0:0)
#loc1 = loc("/usr/include/errno.h":37:1)
#loc2 = loc("/usr/include/errno.h":37:45)
#loc3 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE390_Error_Without_Action__sqrt_15.c":42:19)
#loc9 = loc("CWE390_Error_Without_Action__sqrt_15.c":23:1)
#loc10 = loc("CWE390_Error_Without_Action__sqrt_15.c":45:1)
#loc11 = loc("CWE390_Error_Without_Action__sqrt_15.c":29:9)
#loc12 = loc("CWE390_Error_Without_Action__sqrt_15.c":29:16)
#loc13 = loc("CWE390_Error_Without_Action__sqrt_15.c":25:5)
#loc14 = loc("CWE390_Error_Without_Action__sqrt_15.c":44:5)
#loc15 = loc("CWE390_Error_Without_Action__sqrt_15.c":25:12)
#loc16 = loc("CWE390_Error_Without_Action__sqrt_15.c":27:5)
#loc17 = loc("CWE390_Error_Without_Action__sqrt_15.c":28:5)
#loc18 = loc("CWE390_Error_Without_Action__sqrt_15.c":38:5)
#loc19 = loc("CWE390_Error_Without_Action__sqrt_15.c":30:17)
#loc20 = loc("CWE390_Error_Without_Action__sqrt_15.c":30:9)
#loc21 = loc("CWE390_Error_Without_Action__sqrt_15.c":31:32)
#loc22 = loc("CWE390_Error_Without_Action__sqrt_15.c":31:46)
#loc23 = loc("CWE390_Error_Without_Action__sqrt_15.c":31:45)
#loc24 = loc("CWE390_Error_Without_Action__sqrt_15.c":31:9)
#loc25 = loc("CWE390_Error_Without_Action__sqrt_15.c":31:47)
#loc26 = loc("CWE390_Error_Without_Action__sqrt_15.c":33:9)
#loc27 = loc("CWE390_Error_Without_Action__sqrt_15.c":36:9)
#loc28 = loc("CWE390_Error_Without_Action__sqrt_15.c":33:13)
#loc29 = loc("CWE390_Error_Without_Action__sqrt_15.c":33:22)
#loc30 = loc("CWE390_Error_Without_Action__sqrt_15.c":34:9)
#loc31 = loc("CWE390_Error_Without_Action__sqrt_15.c":37:25)
#loc32 = loc("CWE390_Error_Without_Action__sqrt_15.c":37:9)
#loc33 = loc("CWE390_Error_Without_Action__sqrt_15.c":39:5)
#loc34 = loc("CWE390_Error_Without_Action__sqrt_15.c":42:9)
#loc35 = loc("CWE390_Error_Without_Action__sqrt_15.c":43:9)
#loc36 = loc("CWE390_Error_Without_Action__sqrt_15.c":103:1)
#loc37 = loc("CWE390_Error_Without_Action__sqrt_15.c":107:1)
#loc38 = loc("CWE390_Error_Without_Action__sqrt_15.c":105:5)
#loc39 = loc("CWE390_Error_Without_Action__sqrt_15.c":105:11)
#loc40 = loc("CWE390_Error_Without_Action__sqrt_15.c":106:5)
#loc41 = loc("CWE390_Error_Without_Action__sqrt_15.c":106:11)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("CWE390_Error_Without_Action__sqrt_15.c":123:15)
#loc47 = loc("CWE390_Error_Without_Action__sqrt_15.c":125:15)
#loc48 = loc("CWE390_Error_Without_Action__sqrt_15.c":128:15)
#loc49 = loc("CWE390_Error_Without_Action__sqrt_15.c":130:15)
#loc50 = loc("CWE390_Error_Without_Action__sqrt_15.c":118:1)
#loc51 = loc("CWE390_Error_Without_Action__sqrt_15.c":133:1)
#loc56 = loc("CWE390_Error_Without_Action__sqrt_15.c":119:1)
#loc57 = loc("CWE390_Error_Without_Action__sqrt_15.c":121:27)
#loc58 = loc("CWE390_Error_Without_Action__sqrt_15.c":121:22)
#loc59 = loc("CWE390_Error_Without_Action__sqrt_15.c":121:5)
#loc60 = loc("CWE390_Error_Without_Action__sqrt_15.c":123:5)
#loc61 = loc("CWE390_Error_Without_Action__sqrt_15.c":124:5)
#loc62 = loc("CWE390_Error_Without_Action__sqrt_15.c":124:47)
#loc63 = loc("CWE390_Error_Without_Action__sqrt_15.c":125:5)
#loc64 = loc("CWE390_Error_Without_Action__sqrt_15.c":128:5)
#loc65 = loc("CWE390_Error_Without_Action__sqrt_15.c":129:5)
#loc66 = loc("CWE390_Error_Without_Action__sqrt_15.c":129:46)
#loc67 = loc("CWE390_Error_Without_Action__sqrt_15.c":130:5)
#loc68 = loc("CWE390_Error_Without_Action__sqrt_15.c":132:12)
#loc69 = loc("CWE390_Error_Without_Action__sqrt_15.c":132:5)
#loc70 = loc("CWE390_Error_Without_Action__sqrt_15.c":68:23)
#loc71 = loc("/usr/include/stdlib.h":756:1)
#loc72 = loc("/usr/include/stdlib.h":756:70)
#loc73 = loc("CWE390_Error_Without_Action__sqrt_15.c":52:1)
#loc74 = loc("CWE390_Error_Without_Action__sqrt_15.c":75:1)
#loc75 = loc("CWE390_Error_Without_Action__sqrt_15.c":62:9)
#loc76 = loc("CWE390_Error_Without_Action__sqrt_15.c":62:16)
#loc77 = loc("CWE390_Error_Without_Action__sqrt_15.c":54:5)
#loc78 = loc("CWE390_Error_Without_Action__sqrt_15.c":74:5)
#loc79 = loc("CWE390_Error_Without_Action__sqrt_15.c":54:12)
#loc80 = loc("CWE390_Error_Without_Action__sqrt_15.c":56:5)
#loc81 = loc("CWE390_Error_Without_Action__sqrt_15.c":58:19)
#loc82 = loc("CWE390_Error_Without_Action__sqrt_15.c":58:9)
#loc83 = loc("CWE390_Error_Without_Action__sqrt_15.c":59:9)
#loc84 = loc("CWE390_Error_Without_Action__sqrt_15.c":61:5)
#loc85 = loc("CWE390_Error_Without_Action__sqrt_15.c":72:5)
#loc86 = loc("CWE390_Error_Without_Action__sqrt_15.c":63:17)
#loc87 = loc("CWE390_Error_Without_Action__sqrt_15.c":63:9)
#loc88 = loc("CWE390_Error_Without_Action__sqrt_15.c":64:32)
#loc89 = loc("CWE390_Error_Without_Action__sqrt_15.c":64:46)
#loc90 = loc("CWE390_Error_Without_Action__sqrt_15.c":64:45)
#loc91 = loc("CWE390_Error_Without_Action__sqrt_15.c":64:9)
#loc92 = loc("CWE390_Error_Without_Action__sqrt_15.c":64:47)
#loc93 = loc("CWE390_Error_Without_Action__sqrt_15.c":66:9)
#loc94 = loc("CWE390_Error_Without_Action__sqrt_15.c":70:9)
#loc95 = loc("CWE390_Error_Without_Action__sqrt_15.c":66:13)
#loc96 = loc("CWE390_Error_Without_Action__sqrt_15.c":66:22)
#loc97 = loc("CWE390_Error_Without_Action__sqrt_15.c":67:9)
#loc98 = loc("CWE390_Error_Without_Action__sqrt_15.c":68:13)
#loc99 = loc("CWE390_Error_Without_Action__sqrt_15.c":69:13)
#loc100 = loc("CWE390_Error_Without_Action__sqrt_15.c":69:18)
#loc101 = loc("CWE390_Error_Without_Action__sqrt_15.c":71:25)
#loc102 = loc("CWE390_Error_Without_Action__sqrt_15.c":71:9)
#loc103 = loc("CWE390_Error_Without_Action__sqrt_15.c":73:5)
#loc104 = loc("CWE390_Error_Without_Action__sqrt_15.c":78:1)
#loc105 = loc("CWE390_Error_Without_Action__sqrt_15.c":101:1)
#loc106 = loc("CWE390_Error_Without_Action__sqrt_15.c":84:9)
#loc107 = loc("CWE390_Error_Without_Action__sqrt_15.c":84:16)
#loc108 = loc("CWE390_Error_Without_Action__sqrt_15.c":80:5)
#loc109 = loc("CWE390_Error_Without_Action__sqrt_15.c":100:5)
#loc110 = loc("CWE390_Error_Without_Action__sqrt_15.c":80:12)
#loc111 = loc("CWE390_Error_Without_Action__sqrt_15.c":82:5)
#loc112 = loc("CWE390_Error_Without_Action__sqrt_15.c":83:5)
#loc113 = loc("CWE390_Error_Without_Action__sqrt_15.c":94:5)
#loc114 = loc("CWE390_Error_Without_Action__sqrt_15.c":85:17)
#loc115 = loc("CWE390_Error_Without_Action__sqrt_15.c":85:9)
#loc116 = loc("CWE390_Error_Without_Action__sqrt_15.c":86:32)
#loc117 = loc("CWE390_Error_Without_Action__sqrt_15.c":86:46)
#loc118 = loc("CWE390_Error_Without_Action__sqrt_15.c":86:45)
#loc119 = loc("CWE390_Error_Without_Action__sqrt_15.c":86:9)
#loc120 = loc("CWE390_Error_Without_Action__sqrt_15.c":86:47)
#loc121 = loc("CWE390_Error_Without_Action__sqrt_15.c":88:9)
#loc122 = loc("CWE390_Error_Without_Action__sqrt_15.c":92:9)
#loc123 = loc("CWE390_Error_Without_Action__sqrt_15.c":88:13)
#loc124 = loc("CWE390_Error_Without_Action__sqrt_15.c":88:22)
#loc125 = loc("CWE390_Error_Without_Action__sqrt_15.c":89:9)
#loc126 = loc("CWE390_Error_Without_Action__sqrt_15.c":90:23)
#loc127 = loc("CWE390_Error_Without_Action__sqrt_15.c":90:13)
#loc128 = loc("CWE390_Error_Without_Action__sqrt_15.c":91:13)
#loc129 = loc("CWE390_Error_Without_Action__sqrt_15.c":91:18)
#loc130 = loc("CWE390_Error_Without_Action__sqrt_15.c":93:25)
#loc131 = loc("CWE390_Error_Without_Action__sqrt_15.c":93:9)
#loc132 = loc("CWE390_Error_Without_Action__sqrt_15.c":95:5)
#loc133 = loc("CWE390_Error_Without_Action__sqrt_15.c":98:19)
#loc134 = loc("CWE390_Error_Without_Action__sqrt_15.c":98:9)
#loc135 = loc("CWE390_Error_Without_Action__sqrt_15.c":99:9)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc4, #loc5])
#loc138 = loc(fused[#loc6, #loc7])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc17, #loc18])
#loc143 = loc(fused[#loc20, #loc19])
#loc144 = loc(fused[#loc24, #loc25])
#loc145 = loc(fused[#loc26, #loc27])
#loc146 = loc(fused[#loc28, #loc29])
#loc147 = loc(fused[#loc30, #loc27])
#loc148 = loc(fused[#loc36, #loc37])
#loc149 = loc(fused[#loc38, #loc39])
#loc150 = loc(fused[#loc40, #loc41])
#loc151 = loc(fused[#loc42, #loc43])
#loc152 = loc(fused[#loc44, #loc45])
#loc153 = loc(fused[#loc50, #loc51])
#loc156 = loc(fused[#loc61, #loc62])
#loc157 = loc(fused[#loc65, #loc66])
#loc158 = loc(fused[#loc69, #loc68])
#loc159 = loc(fused[#loc71, #loc72])
#loc160 = loc(fused[#loc73, #loc74])
#loc161 = loc(fused[#loc75, #loc76])
#loc162 = loc(fused[#loc77, #loc78])
#loc163 = loc(fused[#loc84, #loc85])
#loc164 = loc(fused[#loc87, #loc86])
#loc165 = loc(fused[#loc91, #loc92])
#loc166 = loc(fused[#loc93, #loc94])
#loc167 = loc(fused[#loc95, #loc96])
#loc168 = loc(fused[#loc97, #loc94])
#loc169 = loc(fused[#loc104, #loc105])
#loc170 = loc(fused[#loc106, #loc107])
#loc171 = loc(fused[#loc108, #loc109])
#loc172 = loc(fused[#loc112, #loc113])
#loc173 = loc(fused[#loc115, #loc114])
#loc174 = loc(fused[#loc119, #loc120])
#loc175 = loc(fused[#loc121, #loc122])
#loc176 = loc(fused[#loc123, #loc124])
#loc177 = loc(fused[#loc125, #loc122])
