!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE587_Assignment_of_Fixed_Address_to_Pointer/CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc61)
  cir.func no_proto @CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc7)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc8)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc64)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc67)
          %4 = cir.const #cir.int<4194304> : !s32i loc(#loc13)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc13)
          %6 = cir.cast(int_to_ptr, %5 : !u64i), !cir.ptr<!s8i> loc(#loc13)
          cir.store %6, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc67)
          %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
          %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc15)
          cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc16)
        } loc(#loc66)
      } loc(#loc65)
    } loc(#loc63)
    cir.return loc(#loc4)
  } loc(#loc62)
  cir.func no_proto @CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc69)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc70)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc68)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc25)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc30)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc31)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc74)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc25)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc25)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc35)
      } else {
        cir.scope {
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charStack", init] {alignment = 1 : i64} loc(#loc77)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc78)
          %5 = cir.const #cir.int<97> : !s32i loc(#loc39)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc39)
          cir.store %6, %3 : !s8i, !cir.ptr<!s8i> loc(#loc77)
          cir.store %3, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc78)
          %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc43)
          cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc44)
        } loc(#loc76)
      } loc(#loc75)
    } loc(#loc73)
    cir.return loc(#loc27)
  } loc(#loc72)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc49)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc50)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc81)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charStack", init] {alignment = 1 : i64} loc(#loc84)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc85)
          %5 = cir.const #cir.int<97> : !s32i loc(#loc55)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc55)
          cir.store %6, %3 : !s8i, !cir.ptr<!s8i> loc(#loc84)
          cir.store %3, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
          %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
          %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc59)
          cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc60)
        } loc(#loc83)
      } loc(#loc82)
    } loc(#loc80)
    cir.return loc(#loc46)
  } loc(#loc79)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE587_Assignment_of_Fixed_Address_to_Pointer/CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":25:1)
#loc4 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":35:1)
#loc5 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":27:5)
#loc6 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":34:5)
#loc7 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":27:8)
#loc8 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":27:27)
#loc9 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":28:5)
#loc10 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":29:9)
#loc11 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":33:9)
#loc12 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":31:13)
#loc13 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":31:40)
#loc14 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":32:31)
#loc15 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":32:30)
#loc16 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":32:13)
#loc17 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":74:1)
#loc18 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":78:1)
#loc19 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":76:5)
#loc20 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":76:11)
#loc21 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":77:5)
#loc22 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":77:11)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":47:19)
#loc26 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":42:1)
#loc27 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":58:1)
#loc28 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":44:5)
#loc29 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":57:5)
#loc30 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":44:8)
#loc31 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":44:27)
#loc32 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":45:5)
#loc33 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":48:5)
#loc34 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":50:5)
#loc35 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":47:9)
#loc36 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":51:9)
#loc37 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":56:9)
#loc38 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":53:13)
#loc39 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":53:30)
#loc40 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":54:13)
#loc41 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":54:34)
#loc42 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":55:31)
#loc43 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":55:30)
#loc44 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":55:13)
#loc45 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":61:1)
#loc46 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":72:1)
#loc47 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":63:5)
#loc48 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":71:5)
#loc49 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":63:8)
#loc50 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":63:27)
#loc51 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":64:5)
#loc52 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":65:9)
#loc53 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":70:9)
#loc54 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":67:13)
#loc55 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":67:30)
#loc56 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":68:13)
#loc57 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":68:34)
#loc58 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":69:31)
#loc59 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":69:30)
#loc60 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_06.c":69:13)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc3, #loc4])
#loc63 = loc(fused[#loc5, #loc6])
#loc64 = loc(fused[#loc7, #loc8])
#loc65 = loc(fused[#loc9, #loc6])
#loc66 = loc(fused[#loc10, #loc11])
#loc67 = loc(fused[#loc12, #loc13])
#loc68 = loc(fused[#loc17, #loc18])
#loc69 = loc(fused[#loc19, #loc20])
#loc70 = loc(fused[#loc21, #loc22])
#loc71 = loc(fused[#loc23, #loc24])
#loc72 = loc(fused[#loc26, #loc27])
#loc73 = loc(fused[#loc28, #loc29])
#loc74 = loc(fused[#loc30, #loc31])
#loc75 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc76 = loc(fused[#loc36, #loc37])
#loc77 = loc(fused[#loc38, #loc39])
#loc78 = loc(fused[#loc40, #loc41])
#loc79 = loc(fused[#loc45, #loc46])
#loc80 = loc(fused[#loc47, #loc48])
#loc81 = loc(fused[#loc49, #loc50])
#loc82 = loc(fused[#loc51, #loc48])
#loc83 = loc(fused[#loc52, #loc53])
#loc84 = loc(fused[#loc54, #loc55])
#loc85 = loc(fused[#loc56, #loc57])
