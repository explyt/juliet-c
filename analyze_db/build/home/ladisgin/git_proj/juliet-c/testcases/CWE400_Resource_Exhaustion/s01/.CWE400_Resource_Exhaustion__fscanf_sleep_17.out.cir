!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":115:10)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":115:14)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":115:20)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":115:32)
#true = #cir.bool<true> : !cir.bool
#loc190 = loc(fused[#loc62, #loc63])
#loc191 = loc(fused[#loc64, #loc65])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc165)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc171)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc172)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc19)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc23)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc176)
        cir.condition(%8) loc(#loc27)
      } body {
        cir.scope {
          %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %11 = cir.call @__isoc99_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
        } loc(#loc177)
        cir.yield loc(#loc22)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc32)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
        cir.yield loc(#loc174)
      } loc(#loc174)
    } loc(#loc174)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc35)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc180)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc181)
        cir.condition(%8) loc(#loc39)
      } body {
        cir.scope {
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc41)
          %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc41)
          %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc42)
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc10)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc43)
        } loc(#loc182)
        cir.yield loc(#loc34)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc45)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc183)
        cir.yield loc(#loc179)
      } loc(#loc179)
    } loc(#loc179)
    cir.return loc(#loc12)
  } loc(#loc169)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc184)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc59)
  cir.func @main(%arg0: !s32i loc(fused[#loc62, #loc63]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc64, #loc65])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc67)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc68)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc68)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc69)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc56)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_17_good() : () -> () loc(#loc71)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc57)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc58)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_17_bad() : () -> () loc(#loc75)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc59)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.return %17 : !s32i loc(#loc194)
  } loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc81)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc197)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc198)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc90)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc94)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc202)
        cir.condition(%8) loc(#loc98)
      } body {
        cir.scope {
          %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc100)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc102)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc102)
          %11 = cir.call @__isoc99_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc100)
        } loc(#loc203)
        cir.yield loc(#loc93)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc104)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
        cir.yield loc(#loc200)
      } loc(#loc200)
    } loc(#loc200)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc107)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc206)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc207)
        cir.condition(%8) loc(#loc111)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc116)
            %8 = cir.cmp(gt, %6, %7) : !s32i, !cir.bool loc(#loc210)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %11 = cir.const #cir.int<2000> : !s32i loc(#loc119)
              %12 = cir.cmp(le, %10, %11) : !s32i, !cir.bool loc(#loc211)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc117)
                cir.yield %14 : !cir.bool loc(#loc117)
              }, false {
                %14 = cir.const #false loc(#loc117)
                cir.yield %14 : !cir.bool loc(#loc117)
              }) : (!cir.bool) -> !cir.bool loc(#loc117)
              cir.yield %13 : !cir.bool loc(#loc117)
            }, false {
              %10 = cir.const #false loc(#loc117)
              cir.yield %10 : !cir.bool loc(#loc117)
            }) : (!cir.bool) -> !cir.bool loc(#loc117)
            cir.if %9 {
              %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc123)
              %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc124)
              %13 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc80)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc80)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc125)
            } else {
              %10 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc81)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc81)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc126)
            } loc(#loc212)
          } loc(#loc209)
        } loc(#loc208)
        cir.yield loc(#loc106)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc128)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc213)
        cir.yield loc(#loc205)
      } loc(#loc205)
    } loc(#loc205)
    cir.return loc(#loc83)
  } loc(#loc195)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc215)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc216)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc217)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc137)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc141)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc144)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc221)
        cir.condition(%8) loc(#loc145)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<20> : !s32i loc(#loc147)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc223)
        } loc(#loc222)
        cir.yield loc(#loc140)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc150)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
        cir.yield loc(#loc219)
      } loc(#loc219)
    } loc(#loc219)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc153)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc226)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc156)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc227)
        cir.condition(%8) loc(#loc157)
      } body {
        cir.scope {
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
          %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc159)
          %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc160)
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc161)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc161)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc162)
        } loc(#loc228)
        cir.yield loc(#loc152)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc164)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc229)
        cir.yield loc(#loc225)
      } loc(#loc225)
    } loc(#loc225)
    cir.return loc(#loc130)
  } loc(#loc214)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":39:23)
#loc6 = loc("/usr/include/unistd.h":480:1)
#loc7 = loc("/usr/include/unistd.h":480:43)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":45:19)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":30:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":47:1)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":32:5)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":32:9)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":32:11)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":33:5)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":33:9)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":35:14)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":35:13)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":35:5)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":40:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:13)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:9)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:16)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:20)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:18)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":37:5)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":39:9)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":39:16)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:24)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:23)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":46:5)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:13)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:9)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:16)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:20)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:18)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":42:5)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":44:15)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":44:9)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":45:9)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:24)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:23)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":100:1)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":104:1)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":102:5)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":102:13)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":103:5)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":103:13)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":120:15)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":122:15)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":125:15)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":127:15)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":115:1)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":130:1)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":116:1)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":118:27)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":118:22)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":118:5)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":120:5)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":121:5)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":121:54)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":122:5)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":125:5)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":126:5)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":126:53)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":127:5)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":129:12)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":129:5)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":71:23)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":75:23)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":54:1)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":78:1)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":56:5)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":56:9)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":56:11)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":57:5)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":57:9)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":59:14)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":59:13)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":59:5)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:5)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":64:5)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:13)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:9)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:16)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:20)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:18)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":61:5)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":63:9)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":63:16)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":63:23)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:24)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:23)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:5)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":77:5)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:13)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:9)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:16)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:20)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:18)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":66:5)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:9)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":76:9)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:13)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:21)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:23)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:26)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:35)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":69:9)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":72:9)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":74:9)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":70:19)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":70:13)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":71:13)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":75:13)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:24)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:23)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":81:1)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":98:1)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":83:5)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":83:9)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":83:11)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":84:5)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":84:9)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":86:14)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":86:13)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":86:5)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:5)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":91:5)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:13)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:9)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:16)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:20)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:18)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":88:5)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":90:17)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":90:9)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:24)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:23)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:5)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":97:5)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:13)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:9)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:16)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:20)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:18)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":93:5)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":95:15)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":95:9)
#loc161 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":96:19)
#loc162 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":96:9)
#loc163 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:24)
#loc164 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:23)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc3, #loc4])
#loc167 = loc(fused[#loc6, #loc7])
#loc168 = loc(fused[#loc8, #loc9])
#loc169 = loc(fused[#loc11, #loc12])
#loc170 = loc(fused[#loc13, #loc14])
#loc171 = loc(fused[#loc13, #loc15])
#loc172 = loc(fused[#loc16, #loc17])
#loc173 = loc(fused[#loc20, #loc18])
#loc174 = loc(fused[#loc21, #loc22])
#loc175 = loc(fused[#loc24, #loc23])
#loc176 = loc(fused[#loc25, #loc26])
#loc177 = loc(fused[#loc28, #loc22])
#loc178 = loc(fused[#loc32, #loc31])
#loc179 = loc(fused[#loc33, #loc34])
#loc180 = loc(fused[#loc36, #loc35])
#loc181 = loc(fused[#loc37, #loc38])
#loc182 = loc(fused[#loc40, #loc34])
#loc183 = loc(fused[#loc45, #loc44])
#loc184 = loc(fused[#loc46, #loc47])
#loc185 = loc(fused[#loc48, #loc49])
#loc186 = loc(fused[#loc50, #loc51])
#loc187 = loc(fused[#loc52, #loc53])
#loc188 = loc(fused[#loc54, #loc55])
#loc189 = loc(fused[#loc60, #loc61])
#loc192 = loc(fused[#loc71, #loc72])
#loc193 = loc(fused[#loc75, #loc76])
#loc194 = loc(fused[#loc79, #loc78])
#loc195 = loc(fused[#loc82, #loc83])
#loc196 = loc(fused[#loc84, #loc85])
#loc197 = loc(fused[#loc84, #loc86])
#loc198 = loc(fused[#loc87, #loc88])
#loc199 = loc(fused[#loc91, #loc89])
#loc200 = loc(fused[#loc92, #loc93])
#loc201 = loc(fused[#loc95, #loc94])
#loc202 = loc(fused[#loc96, #loc97])
#loc203 = loc(fused[#loc99, #loc93])
#loc204 = loc(fused[#loc104, #loc103])
#loc205 = loc(fused[#loc105, #loc106])
#loc206 = loc(fused[#loc108, #loc107])
#loc207 = loc(fused[#loc109, #loc110])
#loc208 = loc(fused[#loc112, #loc106])
#loc209 = loc(fused[#loc113, #loc114])
#loc210 = loc(fused[#loc115, #loc116])
#loc211 = loc(fused[#loc118, #loc119])
#loc212 = loc(fused[#loc120, #loc121, #loc122, #loc114])
#loc213 = loc(fused[#loc128, #loc127])
#loc214 = loc(fused[#loc129, #loc130])
#loc215 = loc(fused[#loc131, #loc132])
#loc216 = loc(fused[#loc131, #loc133])
#loc217 = loc(fused[#loc134, #loc135])
#loc218 = loc(fused[#loc138, #loc136])
#loc219 = loc(fused[#loc139, #loc140])
#loc220 = loc(fused[#loc142, #loc141])
#loc221 = loc(fused[#loc143, #loc144])
#loc222 = loc(fused[#loc146, #loc140])
#loc223 = loc(fused[#loc148, #loc147])
#loc224 = loc(fused[#loc150, #loc149])
#loc225 = loc(fused[#loc151, #loc152])
#loc226 = loc(fused[#loc154, #loc153])
#loc227 = loc(fused[#loc155, #loc156])
#loc228 = loc(fused[#loc158, #loc152])
#loc229 = loc(fused[#loc164, #loc163])
