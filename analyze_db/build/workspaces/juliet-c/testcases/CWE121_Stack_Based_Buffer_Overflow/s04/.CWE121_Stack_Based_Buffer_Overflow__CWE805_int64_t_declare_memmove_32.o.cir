!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printLongLongLine(!s64i) loc(#loc91)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc95)
    %3 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc97)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc98)
    %6 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc99)
    %7 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc100)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc97)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc98)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc6)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc93)
    %10 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s64i x 50>>), !cir.ptr<!s64i> loc(#loc24)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc102)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc27)
    cir.store %11, %12 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc103)
    cir.br ^bb2 loc(#loc22)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc104)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc8)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
    cir.store %14, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc94)
    cir.br ^bb4 loc(#loc105)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc95)
    cir.store %15, %2 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc95)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc34)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc34)
    %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc35)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc35)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc36)
    %22 = cir.const #cir.int<8> : !u64i loc(#loc106)
    %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc107)
    cir.libc.memmove %23 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc108)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s64i>, %25 : !s32i), !cir.ptr<!s64i> loc(#loc43)
    %27 = cir.load %26 : !cir.ptr<!s64i>, !s64i loc(#loc41)
    cir.call @printLongLongLine(%27) : (!s64i) -> () loc(#loc44)
    cir.br ^bb5 loc(#loc33)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc92)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc110)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc109)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc114)
    %3 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc116)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc117)
    %6 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc118)
    %7 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc119)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc116)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc117)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc52)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc69)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc112)
    %10 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc70)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc121)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc72)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc73)
    cir.store %11, %12 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc122)
    cir.br ^bb2 loc(#loc68)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc123)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc54)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc77)
    cir.store %14, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc113)
    cir.br ^bb4 loc(#loc124)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc114)
    cir.store %15, %2 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc114)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc80)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc80)
    %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc81)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc81)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc82)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc82)
    %22 = cir.const #cir.int<8> : !u64i loc(#loc125)
    %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc126)
    cir.libc.memmove %23 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc127)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc87)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s64i>, %25 : !s32i), !cir.ptr<!s64i> loc(#loc89)
    %27 = cir.load %26 : !cir.ptr<!s64i>, !s64i loc(#loc87)
    cir.call @printLongLongLine(%27) : (!s64i) -> () loc(#loc90)
    cir.br ^bb5 loc(#loc79)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc76)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc50)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":44:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":29:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":29:27)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":36:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":36:27)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":38:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":38:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":23:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":23:15)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":24:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":24:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":25:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":25:28)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":26:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":26:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":27:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":27:31)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":28:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":34:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":29:26)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":32:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":32:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":33:21)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":33:10)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":33:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":35:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":43:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":36:26)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":37:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":42:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":40:21)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":40:27)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":40:35)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":40:39)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":40:53)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":40:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":40:54)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":41:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":41:36)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":41:37)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":41:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":75:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":78:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":77:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":77:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":51:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":73:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":59:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":59:27)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":65:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":65:27)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":67:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":67:37)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":53:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":53:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":54:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":54:28)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":55:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":55:28)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":56:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":56:29)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":57:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":57:31)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":58:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":63:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":59:26)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":61:16)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":61:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":62:21)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":62:10)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":62:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":64:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":72:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":65:26)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":66:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":71:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":69:21)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":69:27)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":69:35)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":69:39)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":69:53)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":69:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":69:54)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":70:31)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":70:36)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":70:37)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_32.c":70:13)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc11, #loc12])
#loc97 = loc(fused[#loc13, #loc14])
#loc98 = loc(fused[#loc15, #loc16])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc21, #loc22])
#loc102 = loc(fused[#loc25, #loc24])
#loc103 = loc(fused[#loc28, #loc26])
#loc104 = loc(fused[#loc29, #loc30])
#loc105 = loc(fused[#loc32, #loc33])
#loc106 = loc(fused[#loc37, #loc38])
#loc107 = loc(fused[#loc36, #loc38])
#loc108 = loc(fused[#loc39, #loc40])
#loc109 = loc(fused[#loc45, #loc46])
#loc110 = loc(fused[#loc47, #loc48])
#loc111 = loc(fused[#loc49, #loc50])
#loc112 = loc(fused[#loc51, #loc52])
#loc113 = loc(fused[#loc53, #loc54])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc59, #loc60])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc63, #loc64])
#loc119 = loc(fused[#loc65, #loc66])
#loc120 = loc(fused[#loc67, #loc68])
#loc121 = loc(fused[#loc71, #loc70])
#loc122 = loc(fused[#loc74, #loc72])
#loc123 = loc(fused[#loc75, #loc76])
#loc124 = loc(fused[#loc78, #loc79])
#loc125 = loc(fused[#loc83, #loc84])
#loc126 = loc(fused[#loc82, #loc84])
#loc127 = loc(fused[#loc85, #loc86])
