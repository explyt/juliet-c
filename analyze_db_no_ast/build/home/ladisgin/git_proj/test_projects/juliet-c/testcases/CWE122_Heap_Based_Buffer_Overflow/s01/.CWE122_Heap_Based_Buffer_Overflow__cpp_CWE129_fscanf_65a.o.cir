!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_657badSinkEi(!s32i) loc(#loc56)
  cir.func private  @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc57)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc58)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func  @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_653badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc60)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc61)
    %2 = cir.get_global @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_657badSinkEi : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc13)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc61)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc15)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc17)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc58)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %10 = cir.call @__isoc23_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc17)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc19)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc19)
    cir.return loc(#loc9)
  } loc(#loc59)
  cir.func private  @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_6511goodG2BSinkEi(!s32i) loc(#loc63)
  cir.func internal private  @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc66)
    %2 = cir.get_global @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_6511goodG2BSinkEi : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc66)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc30)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc32)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc34)
    cir.return loc(#loc24)
  } loc(#loc64)
  cir.func private  @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_6511goodB2GSinkEi(!s32i) loc(#loc69)
  cir.func internal private  @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc71)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc72)
    %2 = cir.get_global @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_6511goodB2GSinkEi : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc72)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc45)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc47)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc58)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc49)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc49)
    %10 = cir.call @__isoc23_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc47)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc50)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc50)
    cir.return loc(#loc39)
  } loc(#loc70)
  cir.func  @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_654goodEv() extra(#fn_attr) {
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65L7goodG2BEv() : () -> () loc(#loc54)
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65L7goodB2GEv() : () -> () loc(#loc55)
    cir.return loc(#loc53)
  } loc(#loc74)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":26:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":26:22)
#loc3 = loc("/usr/include/stdio.h":442:1)
#loc4 = loc("/usr/include/stdio.h":444:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":36:19)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":28:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":39:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":30:5)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":30:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":32:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":32:29)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":34:13)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":34:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":34:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":36:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":36:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":38:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":38:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":46:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":46:26)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":48:1)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":58:1)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":50:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":50:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":51:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":51:29)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":53:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":53:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":53:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":56:12)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":56:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":57:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":57:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":61:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":61:26)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":63:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":72:1)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":65:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":65:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":66:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":66:29)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":68:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":68:12)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":68:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":70:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":70:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":70:19)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":71:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":71:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":74:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":78:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":76:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_65a.cpp":77:5)
#loc56 = loc(fused[#loc1, #loc2])
#loc57 = loc(fused[#loc3, #loc4])
#loc58 = loc(fused[#loc5, #loc6])
#loc59 = loc(fused[#loc8, #loc9])
#loc60 = loc(fused[#loc10, #loc11])
#loc61 = loc(fused[#loc12, #loc13])
#loc62 = loc(fused[#loc16, #loc14])
#loc63 = loc(fused[#loc21, #loc22])
#loc64 = loc(fused[#loc23, #loc24])
#loc65 = loc(fused[#loc25, #loc26])
#loc66 = loc(fused[#loc27, #loc28])
#loc67 = loc(fused[#loc31, #loc29])
#loc68 = loc(fused[#loc33, #loc32])
#loc69 = loc(fused[#loc36, #loc37])
#loc70 = loc(fused[#loc38, #loc39])
#loc71 = loc(fused[#loc40, #loc41])
#loc72 = loc(fused[#loc42, #loc43])
#loc73 = loc(fused[#loc46, #loc44])
#loc74 = loc(fused[#loc52, #loc53])
