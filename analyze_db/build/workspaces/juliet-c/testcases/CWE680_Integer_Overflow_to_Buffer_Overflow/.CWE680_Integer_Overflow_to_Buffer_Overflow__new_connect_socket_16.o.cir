!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":88:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc206)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc208)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc209)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc210)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc211)
  cir.func private @close(!s32i) -> !s32i loc(#loc212)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc213)
  cir.func private @printIntLine(!s32i) loc(#loc214)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc217)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc218)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc219)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc220)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc221)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc222)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc223)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc38)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc225)
  ^bb2:  // 2 preds: ^bb1, ^bb38
    %10 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %11 ^bb3, ^bb39 loc(#loc42)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc226)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc227)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc27)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.br ^bb6 loc(#loc228)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc228)
  ^bb7:  // pred: ^bb30
    %14 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc48)
    cir.brcond %15 ^bb8, ^bb31 loc(#loc48)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc229)
  ^bb9:  // pred: ^bb8
    %16 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc52)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc52)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc53)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc53)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.br ^bb10 loc(#loc231)
  ^bb10:  // pred: ^bb9
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc60)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc232)
    cir.brcond %25 ^bb11, ^bb12 loc(#loc233)
  ^bb11:  // pred: ^bb10
    cir.br ^bb31 loc(#loc62)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc58)
  ^bb13:  // pred: ^bb12
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc234)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc235)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc236)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc70)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc237)
    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %34 = cir.call @inet_addr(%33) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc238)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc78)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc78)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc239)
    cir.br ^bb14 loc(#loc240)
  ^bb14:  // pred: ^bb13
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc241)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc242)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc242)
    %45 = cir.call @connect(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc91)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc243)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc244)
  ^bb15:  // pred: ^bb14
    cir.br ^bb31 loc(#loc93)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc84)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %50 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %52 = cir.const #cir.int<3> : !s32i loc(#loc96)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc96)
    %54 = cir.const #cir.int<4> : !u64i loc(#loc96)
    %55 = cir.binop(mul, %53, %54) : !u64i loc(#loc96)
    %56 = cir.const #cir.int<2> : !s32i loc(#loc96)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc96)
    %58 = cir.binop(add, %55, %57) : !u64i loc(#loc96)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc97)
    %61 = cir.binop(sub, %58, %60) : !u64i loc(#loc245)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %63 = cir.call @recv(%49, %51, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
    %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc99)
    cir.store %64, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.br ^bb18 loc(#loc247)
  ^bb18:  // pred: ^bb17
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc105)
    %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc248)
    cir.brcond %68 ^bb19, ^bb20 loc(#loc106)
  ^bb19:  // pred: ^bb18
    %69 = cir.const #true loc(#loc106)
    cir.br ^bb25(%69 : !cir.bool) loc(#loc106)
  ^bb20:  // pred: ^bb18
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %72 = cir.cmp(eq, %70, %71) : !s32i, !cir.bool loc(#loc249)
    cir.brcond %72 ^bb21, ^bb22 loc(#loc106)
  ^bb21:  // pred: ^bb20
    %73 = cir.const #true loc(#loc106)
    cir.br ^bb23(%73 : !cir.bool) loc(#loc106)
  ^bb22:  // pred: ^bb20
    %74 = cir.const #false loc(#loc106)
    cir.br ^bb23(%74 : !cir.bool) loc(#loc106)
  ^bb23(%75: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":88:48)):  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc106)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25(%75 : !cir.bool) loc(#loc106)
  ^bb25(%76: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":88:48)):  // 2 preds: ^bb19, ^bb24
    cir.br ^bb26 loc(#loc106)
  ^bb26:  // pred: ^bb25
    cir.brcond %76 ^bb27, ^bb28 loc(#loc250)
  ^bb27:  // pred: ^bb26
    cir.br ^bb31 loc(#loc110)
  ^bb28:  // pred: ^bb26
    cir.br ^bb29 loc(#loc103)
  ^bb29:  // pred: ^bb28
    %77 = cir.const #cir.int<0> : !s8i loc(#loc111)
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %77, %80 : !s8i, !cir.ptr<!s8i> loc(#loc251)
    %81 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
    %82 = cir.call @atoi(%81) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc115)
    cir.store %82, %7 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.br ^bb30 loc(#loc50)
  ^bb30:  // pred: ^bb29
    cir.br ^bb7 loc(#loc47)
  ^bb31:  // 4 preds: ^bb7, ^bb11, ^bb15, ^bb27
    cir.br ^bb32 loc(#loc47)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc253)
  ^bb33:  // pred: ^bb32
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %84 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc121)
    %86 = cir.cmp(ne, %83, %85) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %86 ^bb34, ^bb35 loc(#loc255)
  ^bb34:  // pred: ^bb33
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %88 = cir.call @close(%87) : (!s32i) -> !s32i loc(#loc124)
    cir.br ^bb35 loc(#loc119)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc119)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc45)
  ^bb37:  // pred: ^bb36
    cir.br ^bb39 loc(#loc125)
  ^bb38:  // no predecessors
    cir.br ^bb2 loc(#loc41)
  ^bb39:  // 2 preds: ^bb2, ^bb37
    cir.br ^bb40 loc(#loc41)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc256)
  ^bb41:  // pred: ^bb40
    %89 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %90 = cir.cast(integral, %89 : !s32i), !u64i loc(#loc128)
    %91 = cir.const #cir.int<4> : !u64i loc(#loc257)
    %92 = cir.binop(mul, %90, %91) : !u64i loc(#loc258)
    cir.store %92, %4 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    %93 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %94 = cir.call @_Znam(%93) : (!u64i) -> !cir.ptr<!void> loc(#loc133)
    %95 = cir.cast(bitcast, %94 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc260)
    %96 = cir.cast(bitcast, %95 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc260)
    cir.store %96, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc261)
    cir.br ^bb42 loc(#loc262)
  ^bb42:  // pred: ^bb41
    %97 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %98 = cir.cast(integral, %97 : !s32i), !u64i loc(#loc139)
    cir.store %98, %5 : !u64i, !cir.ptr<!u64i> loc(#loc263)
    cir.br ^bb43 loc(#loc262)
  ^bb43:  // 2 preds: ^bb42, ^bb47
    %99 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc141)
    %100 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %101 = cir.cast(integral, %100 : !s32i), !u64i loc(#loc142)
    %102 = cir.cmp(lt, %99, %101) : !u64i, !cir.bool loc(#loc264)
    cir.brcond %102 ^bb44, ^bb48 loc(#loc264)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc265)
  ^bb45:  // pred: ^bb44
    %103 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %104 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
    %105 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc146)
    %106 = cir.ptr_stride(%104 : !cir.ptr<!s32i>, %105 : !u64i), !cir.ptr<!s32i> loc(#loc147)
    cir.store %103, %106 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.br ^bb46 loc(#loc138)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc138)
  ^bb47:  // pred: ^bb46
    %107 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %108 = cir.unary(inc, %107) : !u64i, !u64i loc(#loc149)
    cir.store %108, %5 : !u64i, !cir.ptr<!u64i> loc(#loc267)
    cir.br ^bb43 loc(#loc262)
  ^bb48:  // pred: ^bb43
    cir.br ^bb49 loc(#loc138)
  ^bb49:  // pred: ^bb48
    %109 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
    %110 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %111 = cir.ptr_stride(%109 : !cir.ptr<!s32i>, %110 : !s32i), !cir.ptr<!s32i> loc(#loc152)
    %112 = cir.load %111 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.call @printIntLine(%112) : (!s32i) -> () loc(#loc153)
    %113 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
    cir.delete.array %113 : <!s32i> loc(#loc154)
    cir.br ^bb50 loc(#loc127)
  ^bb50:  // pred: ^bb49
    cir.return loc(#loc21)
  } loc(#loc215)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc269)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc270)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc271)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc272)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc165)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb1 loc(#loc274)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc274)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %6 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc169)
    cir.brcond %7 ^bb3, ^bb6 loc(#loc169)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc275)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<20> : !s32i loc(#loc171)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb6 loc(#loc173)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc168)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc168)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc277)
  ^bb8:  // pred: ^bb7
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc176)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc278)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc279)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc280)
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc181)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc281)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc281)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc282)
    cir.br ^bb9 loc(#loc283)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc187)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc284)
    cir.br ^bb10 loc(#loc283)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc189)
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc190)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc285)
    cir.brcond %22 ^bb11, ^bb15 loc(#loc285)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc286)
  ^bb12:  // pred: ^bb11
    %23 = cir.const #cir.int<0> : !s32i loc(#loc192)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc194)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc195)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb13 loc(#loc186)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc186)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc196)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc197)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc288)
    cir.br ^bb10 loc(#loc283)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc186)
  ^bb16:  // pred: ^bb15
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc198)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc199)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc200)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc201)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc202)
    cir.delete.array %33 : <!s32i> loc(#loc202)
    cir.br ^bb17 loc(#loc175)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc156)
  } loc(#loc268)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16L7goodG2BEv() : () -> () loc(#loc205)
    cir.return loc(#loc204)
  } loc(#loc289)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":79:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":46:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":124:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":58:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":58:17)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":59:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":59:32)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":60:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":60:36)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":61:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":61:45)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":112:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":112:16)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":112:26)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":113:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":113:14)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":48:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":48:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":50:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":50:12)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":50:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":51:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":110:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":51:11)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":52:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":53:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":108:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":62:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":97:21)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":97:20)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":63:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":96:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":72:40)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":72:49)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":72:62)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":72:33)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":72:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":72:73)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":73:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":76:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":73:21)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":73:38)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":74:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":75:21)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":77:24)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":77:25)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":77:34)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":77:37)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":77:51)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":77:17)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":77:52)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":78:38)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":78:17)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":79:43)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":79:17)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":79:63)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":80:42)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":80:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":80:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":80:50)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":81:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":84:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":81:29)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":81:62)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":81:63)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":81:72)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":81:86)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":81:21)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":81:92)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":82:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":83:21)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":87:35)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":87:50)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":87:63)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":87:81)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":87:84)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":87:30)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":87:17)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":87:85)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":88:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":91:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":88:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":88:35)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":88:51)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":88:65)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":89:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":90:21)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":93:43)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":93:29)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":93:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":95:29)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":95:24)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":95:17)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":95:40)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":98:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":101:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":98:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":98:34)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":99:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":100:30)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":100:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":109:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":111:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":123:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":115:21)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":115:28)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":115:38)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":115:9)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":116:37)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":46:6)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":116:28)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":116:46)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":116:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":117:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":120:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":117:18)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":117:14)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":117:21)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":117:33)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":118:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":119:29)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":119:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":119:24)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":119:25)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":117:40)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":117:39)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":121:22)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":121:33)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":121:34)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":121:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":122:19)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":131:1)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":155:1)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":143:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":143:16)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":143:26)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":144:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":144:14)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":133:5)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":133:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":135:13)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":135:12)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":135:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":136:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":141:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":136:11)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":137:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":139:16)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":139:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":140:9)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":142:5)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":154:5)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":146:21)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":146:28)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":146:38)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":146:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":147:37)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":131:13)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":147:28)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":147:46)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":147:9)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":148:9)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":151:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":148:18)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":148:14)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":148:21)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":148:33)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":149:9)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":150:29)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":150:13)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":150:24)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":150:25)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":148:40)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":148:39)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":152:22)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":152:33)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":152:34)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":152:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":153:19)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":157:1)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":160:1)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_16.cpp":159:5)
#loc206 = loc(fused[#loc1, #loc2])
#loc207 = loc(fused[#loc3, #loc4])
#loc208 = loc(fused[#loc6, #loc7])
#loc209 = loc(fused[#loc8, #loc9])
#loc210 = loc(fused[#loc10, #loc11])
#loc211 = loc(fused[#loc12, #loc13])
#loc212 = loc(fused[#loc14, #loc15])
#loc213 = loc(fused[#loc16, #loc17])
#loc214 = loc(fused[#loc18, #loc19])
#loc215 = loc(fused[#loc20, #loc21])
#loc216 = loc(fused[#loc22, #loc23])
#loc217 = loc(fused[#loc24, #loc25])
#loc218 = loc(fused[#loc26, #loc27])
#loc219 = loc(fused[#loc28, #loc29])
#loc220 = loc(fused[#loc30, #loc31])
#loc221 = loc(fused[#loc30, #loc32])
#loc222 = loc(fused[#loc33, #loc34])
#loc223 = loc(fused[#loc35, #loc36])
#loc224 = loc(fused[#loc39, #loc37])
#loc225 = loc(fused[#loc40, #loc41])
#loc226 = loc(fused[#loc43, #loc41])
#loc227 = loc(fused[#loc44, #loc45])
#loc228 = loc(fused[#loc46, #loc47])
#loc229 = loc(fused[#loc49, #loc50])
#loc230 = loc(fused[#loc55, #loc56])
#loc231 = loc(fused[#loc57, #loc58])
#loc232 = loc(fused[#loc59, #loc60])
#loc233 = loc(fused[#loc61, #loc58])
#loc234 = loc(fused[#loc63, #loc64])
#loc235 = loc(fused[#loc66, #loc67])
#loc236 = loc(fused[#loc68, #loc69])
#loc237 = loc(fused[#loc72, #loc70])
#loc238 = loc(fused[#loc76, #loc77])
#loc239 = loc(fused[#loc81, #loc82])
#loc240 = loc(fused[#loc83, #loc84])
#loc241 = loc(fused[#loc86, #loc87])
#loc242 = loc(fused[#loc88, #loc89])
#loc243 = loc(fused[#loc90, #loc91])
#loc244 = loc(fused[#loc92, #loc84])
#loc245 = loc(fused[#loc96, #loc97])
#loc246 = loc(fused[#loc100, #loc101])
#loc247 = loc(fused[#loc102, #loc103])
#loc248 = loc(fused[#loc104, #loc105])
#loc249 = loc(fused[#loc107, #loc108])
#loc250 = loc(fused[#loc109, #loc103])
#loc251 = loc(fused[#loc113, #loc111])
#loc252 = loc(fused[#loc116, #loc117])
#loc253 = loc(fused[#loc118, #loc119])
#loc254 = loc(fused[#loc120, #loc121])
#loc255 = loc(fused[#loc122, #loc119])
#loc256 = loc(fused[#loc126, #loc127])
#loc257 = loc(fused[#loc129, #loc130])
#loc258 = loc(fused[#loc128, #loc130])
#loc259 = loc(fused[#loc131, #loc130])
#loc260 = loc(fused[#loc134, #loc135])
#loc261 = loc(fused[#loc136, #loc135])
#loc262 = loc(fused[#loc137, #loc138])
#loc263 = loc(fused[#loc140, #loc139])
#loc264 = loc(fused[#loc141, #loc142])
#loc265 = loc(fused[#loc143, #loc138])
#loc266 = loc(fused[#loc145, #loc144])
#loc267 = loc(fused[#loc149, #loc148])
#loc268 = loc(fused[#loc155, #loc156])
#loc269 = loc(fused[#loc157, #loc158])
#loc270 = loc(fused[#loc157, #loc159])
#loc271 = loc(fused[#loc160, #loc161])
#loc272 = loc(fused[#loc162, #loc163])
#loc273 = loc(fused[#loc166, #loc164])
#loc274 = loc(fused[#loc167, #loc168])
#loc275 = loc(fused[#loc170, #loc168])
#loc276 = loc(fused[#loc172, #loc171])
#loc277 = loc(fused[#loc174, #loc175])
#loc278 = loc(fused[#loc177, #loc178])
#loc279 = loc(fused[#loc176, #loc178])
#loc280 = loc(fused[#loc179, #loc178])
#loc281 = loc(fused[#loc182, #loc183])
#loc282 = loc(fused[#loc184, #loc183])
#loc283 = loc(fused[#loc185, #loc186])
#loc284 = loc(fused[#loc188, #loc187])
#loc285 = loc(fused[#loc189, #loc190])
#loc286 = loc(fused[#loc191, #loc186])
#loc287 = loc(fused[#loc193, #loc192])
#loc288 = loc(fused[#loc197, #loc196])
#loc289 = loc(fused[#loc203, #loc204])
