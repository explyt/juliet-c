!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc143 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":237:10)
#loc144 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":237:14)
#loc145 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":237:20)
#loc146 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":237:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc356 = loc(fused[#loc143, #loc144])
#loc357 = loc(fused[#loc145, #loc146])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_multiply_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc301)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc303)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc304)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc305)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc306)
  cir.func private @close(!s32i) -> !s32i loc(#loc307)
  cir.func private @printIntLine(!s32i) loc(#loc308)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_multiply_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc310)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc311)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc312)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc313)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc314)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc30)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.goto "source" loc(#loc316)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc34)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc27)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.scope {
      cir.do {
        %8 = cir.const #cir.int<2> : !s32i loc(#loc37)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %10 = cir.const #cir.int<6> : !s32i loc(#loc39)
        %11 = cir.call @socket(%8, %9, %10) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc40)
        cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc318)
        cir.scope {
          %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc45)
          %51 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc46)
          %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc320)
          cir.if %53 {
            cir.break loc(#loc48)
          } loc(#loc321)
        } loc(#loc319)
        %12 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc322)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc51)
        %14 = cir.const #cir.int<16> : !u64i loc(#loc323)
        cir.libc.memset %14 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc324)
        %15 = cir.const #cir.int<2> : !s32i loc(#loc56)
        %16 = cir.cast(integral, %15 : !s32i), !u16i loc(#loc56)
        %17 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc57)
        cir.store %16, %17 : !u16i, !cir.ptr<!u16i> loc(#loc325)
        %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
        %20 = cir.call @inet_addr(%19) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc59)
        %21 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc60)
        %22 = cir.get_member %21[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc61)
        cir.store %20, %22 : !u32i, !cir.ptr<!u32i> loc(#loc326)
        %23 = cir.const #cir.int<27015> : !s32i loc(#loc64)
        %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc64)
        %25 = cir.call @htons(%24) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc65)
        %26 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
        cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc327)
        cir.scope {
          %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc71)
          %51 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc329)
          %52 = cir.const #cir.int<16> : !u64i loc(#loc330)
          %53 = cir.cast(integral, %52 : !u64i), !u32i loc(#loc330)
          %54 = cir.call @connect(%50, %51, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc76)
          %55 = cir.const #cir.int<1> : !s32i loc(#loc77)
          %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc77)
          %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc331)
          cir.if %57 {
            cir.break loc(#loc79)
          } loc(#loc332)
        } loc(#loc328)
        %27 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc80)
        %28 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc81)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
        %30 = cir.const #cir.int<3> : !s32i loc(#loc82)
        %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc82)
        %32 = cir.const #cir.int<4> : !u64i loc(#loc82)
        %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc82)
        %34 = cir.const #cir.int<2> : !s32i loc(#loc82)
        %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc82)
        %36 = cir.binop(add, %33, %35) : !u64i loc(#loc82)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc83)
        %39 = cir.binop(sub, %36, %38) : !u64i loc(#loc333)
        %40 = cir.const #cir.int<0> : !s32i loc(#loc84)
        %41 = cir.call @recv(%27, %29, %39, %40) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc85)
        %42 = cir.cast(integral, %41 : !s64i), !s32i loc(#loc85)
        cir.store %42, %1 : !s32i, !cir.ptr<!s32i> loc(#loc334)
        cir.scope {
          %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %51 = cir.const #cir.int<1> : !s32i loc(#loc91)
          %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc91)
          %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc336)
          %54 = cir.ternary(%53, true {
            %55 = cir.const #true loc(#loc92)
            cir.yield %55 : !cir.bool loc(#loc92)
          }, false {
            %55 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            %56 = cir.const #cir.int<0> : !s32i loc(#loc94)
            %57 = cir.cmp(eq, %55, %56) : !s32i, !cir.bool loc(#loc337)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc92)
              cir.yield %59 : !cir.bool loc(#loc92)
            }, false {
              %59 = cir.const #false loc(#loc92)
              cir.yield %59 : !cir.bool loc(#loc92)
            }) : (!cir.bool) -> !cir.bool loc(#loc92)
            cir.yield %58 : !cir.bool loc(#loc92)
          }) : (!cir.bool) -> !cir.bool loc(#loc92)
          cir.if %54 {
            cir.break loc(#loc96)
          } loc(#loc338)
        } loc(#loc335)
        %43 = cir.const #cir.int<0> : !s32i loc(#loc97)
        %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc97)
        %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc98)
        %46 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
        %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc99)
        cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc339)
        %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
        %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc101)
        cir.store %49, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
        cir.yield loc(#loc36)
      } while {
        %8 = cir.const #cir.int<0> : !s32i loc(#loc104)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc104)
        cir.condition(%9) loc(#loc104)
      } loc(#loc317)
    } loc(#loc317)
    cir.scope {
      %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc108)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc108)
      %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc342)
      cir.if %11 {
        %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
        %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc111)
      } loc(#loc343)
    } loc(#loc341)
    cir.goto "sink" loc(#loc344)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc114)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc118)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc346)
      cir.if %10 {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc348)
        %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc121)
        %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc122)
        cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc348)
        %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc124)
      } loc(#loc347)
    } loc(#loc345)
    cir.return loc(#loc19)
  } loc(#loc309)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_multiply_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc350)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc127)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc351)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc129)
    cir.return loc(#loc126)
  } loc(#loc349)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc352)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc353)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc354)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc140)
  cir.func @main(%arg0: !s32i loc(fused[#loc143, #loc144]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc145, #loc146])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc356)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc357)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc142)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc147)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc148)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc149)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc149)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc150)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc137)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_multiply_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc358)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_multiply_18_good() : () -> () loc(#loc152)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc138)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc139)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_multiply_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc359)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_multiply_18_bad() : () -> () loc(#loc156)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc140)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc360)
    cir.return %17 : !s32i loc(#loc360)
  } loc(#loc355)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc161)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc362)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc363)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc364)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc365)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc366)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc174)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    cir.goto "source" loc(#loc368)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc178)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc171)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.scope {
      cir.do {
        %8 = cir.const #cir.int<2> : !s32i loc(#loc181)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc182)
        %10 = cir.const #cir.int<6> : !s32i loc(#loc183)
        %11 = cir.call @socket(%8, %9, %10) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc184)
        cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc370)
        cir.scope {
          %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc189)
          %51 = cir.const #cir.int<1> : !s32i loc(#loc190)
          %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc190)
          %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc372)
          cir.if %53 {
            cir.break loc(#loc192)
          } loc(#loc373)
        } loc(#loc371)
        %12 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc374)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc195)
        %14 = cir.const #cir.int<16> : !u64i loc(#loc375)
        cir.libc.memset %14 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc376)
        %15 = cir.const #cir.int<2> : !s32i loc(#loc200)
        %16 = cir.cast(integral, %15 : !s32i), !u16i loc(#loc200)
        %17 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc57)
        cir.store %16, %17 : !u16i, !cir.ptr<!u16i> loc(#loc377)
        %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc202)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc202)
        %20 = cir.call @inet_addr(%19) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc203)
        %21 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc60)
        %22 = cir.get_member %21[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc61)
        cir.store %20, %22 : !u32i, !cir.ptr<!u32i> loc(#loc378)
        %23 = cir.const #cir.int<27015> : !s32i loc(#loc206)
        %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc206)
        %25 = cir.call @htons(%24) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc207)
        %26 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
        cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc379)
        cir.scope {
          %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc212)
          %51 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc381)
          %52 = cir.const #cir.int<16> : !u64i loc(#loc382)
          %53 = cir.cast(integral, %52 : !u64i), !u32i loc(#loc382)
          %54 = cir.call @connect(%50, %51, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc217)
          %55 = cir.const #cir.int<1> : !s32i loc(#loc218)
          %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc218)
          %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc383)
          cir.if %57 {
            cir.break loc(#loc220)
          } loc(#loc384)
        } loc(#loc380)
        %27 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc221)
        %28 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc222)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc222)
        %30 = cir.const #cir.int<3> : !s32i loc(#loc223)
        %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc223)
        %32 = cir.const #cir.int<4> : !u64i loc(#loc223)
        %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc223)
        %34 = cir.const #cir.int<2> : !s32i loc(#loc223)
        %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc223)
        %36 = cir.binop(add, %33, %35) : !u64i loc(#loc223)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc224)
        %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc224)
        %39 = cir.binop(sub, %36, %38) : !u64i loc(#loc385)
        %40 = cir.const #cir.int<0> : !s32i loc(#loc225)
        %41 = cir.call @recv(%27, %29, %39, %40) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc226)
        %42 = cir.cast(integral, %41 : !s64i), !s32i loc(#loc226)
        cir.store %42, %1 : !s32i, !cir.ptr<!s32i> loc(#loc386)
        cir.scope {
          %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc231)
          %51 = cir.const #cir.int<1> : !s32i loc(#loc232)
          %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc232)
          %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc388)
          %54 = cir.ternary(%53, true {
            %55 = cir.const #true loc(#loc233)
            cir.yield %55 : !cir.bool loc(#loc233)
          }, false {
            %55 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc234)
            %56 = cir.const #cir.int<0> : !s32i loc(#loc235)
            %57 = cir.cmp(eq, %55, %56) : !s32i, !cir.bool loc(#loc389)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc233)
              cir.yield %59 : !cir.bool loc(#loc233)
            }, false {
              %59 = cir.const #false loc(#loc233)
              cir.yield %59 : !cir.bool loc(#loc233)
            }) : (!cir.bool) -> !cir.bool loc(#loc233)
            cir.yield %58 : !cir.bool loc(#loc233)
          }) : (!cir.bool) -> !cir.bool loc(#loc233)
          cir.if %54 {
            cir.break loc(#loc237)
          } loc(#loc390)
        } loc(#loc387)
        %43 = cir.const #cir.int<0> : !s32i loc(#loc238)
        %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc238)
        %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc239)
        %46 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc240)
        %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc240)
        cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc391)
        %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc241)
        %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc242)
        cir.store %49, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
        cir.yield loc(#loc180)
      } while {
        %8 = cir.const #cir.int<0> : !s32i loc(#loc245)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc245)
        cir.condition(%9) loc(#loc245)
      } loc(#loc369)
    } loc(#loc369)
    cir.scope {
      %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc248)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc249)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc249)
      %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc394)
      cir.if %11 {
        %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc251)
        %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc252)
      } loc(#loc395)
    } loc(#loc393)
    cir.goto "sink" loc(#loc396)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc255)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc259)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc398)
      cir.if %10 {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
          %12 = cir.const #cir.int<2147483647> : !s32i loc(#loc264)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc264)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc264)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc264)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc265)
          %17 = cir.binop(div, %15, %16) : !s32i loc(#loc401)
          %18 = cir.cmp(gt, %11, %17) : !s32i, !cir.bool loc(#loc402)
          cir.if %18 {
            %19 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc404)
            %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc271)
            %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc272)
            cir.store %22, %19 : !s32i, !cir.ptr<!s32i> loc(#loc404)
            %23 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc273)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc274)
          } else {
            %19 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc161)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc161)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc275)
          } loc(#loc403)
        } loc(#loc400)
      } loc(#loc399)
    } loc(#loc397)
    cir.return loc(#loc163)
  } loc(#loc361)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc406)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc280)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc407)
    cir.goto "source" loc(#loc408)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc284)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc285)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc286)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    cir.goto "sink" loc(#loc410)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc290)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc294)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc412)
      cir.if %6 {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc414)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc298)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc297)
        %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc298)
        cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc414)
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc299)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc300)
      } loc(#loc413)
    } loc(#loc411)
    cir.return loc(#loc277)
  } loc(#loc405)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":77:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":44:1)
#loc19 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":115:1)
#loc20 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":46:5)
#loc21 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":46:9)
#loc22 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":56:9)
#loc23 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":56:13)
#loc24 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":57:9)
#loc25 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":57:28)
#loc26 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":58:9)
#loc27 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":58:32)
#loc28 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":59:9)
#loc29 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":59:41)
#loc30 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":48:12)
#loc31 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":48:5)
#loc32 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":49:5)
#loc33 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":49:10)
#loc34 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":50:1)
#loc35 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":60:9)
#loc36 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":95:17)
#loc37 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":70:36)
#loc38 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":70:45)
#loc39 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":70:58)
#loc40 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":70:29)
#loc41 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":70:13)
#loc42 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":70:69)
#loc43 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":71:13)
#loc44 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":74:13)
#loc45 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":71:17)
#loc46 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":71:34)
#loc47 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":72:13)
#loc48 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":73:17)
#loc49 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":75:20)
#loc50 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":75:21)
#loc51 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":75:30)
#loc52 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":75:33)
#loc53 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":75:47)
#loc54 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":75:13)
#loc55 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":75:48)
#loc56 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":76:34)
#loc57 = loc("/usr/include/netinet/in.h":249:5)
#loc58 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":76:13)
#loc59 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":77:39)
#loc60 = loc("/usr/include/netinet/in.h":251:20)
#loc61 = loc("/usr/include/netinet/in.h":33:15)
#loc62 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":77:13)
#loc63 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":77:59)
#loc64 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":78:38)
#loc65 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":78:32)
#loc66 = loc("/usr/include/netinet/in.h":250:15)
#loc67 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":78:13)
#loc68 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":78:46)
#loc69 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":79:13)
#loc70 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":82:13)
#loc71 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":79:25)
#loc72 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":79:58)
#loc73 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":79:59)
#loc74 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":79:68)
#loc75 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":79:82)
#loc76 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":79:17)
#loc77 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":79:88)
#loc78 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":80:13)
#loc79 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":81:17)
#loc80 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":85:31)
#loc81 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":85:46)
#loc82 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":85:59)
#loc83 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":85:77)
#loc84 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":85:80)
#loc85 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":85:26)
#loc86 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":85:13)
#loc87 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":85:81)
#loc88 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":86:13)
#loc89 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":89:13)
#loc90 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":86:17)
#loc91 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":86:31)
#loc92 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":86:44)
#loc93 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":86:47)
#loc94 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":86:61)
#loc95 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":87:13)
#loc96 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":88:17)
#loc97 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":91:39)
#loc98 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":91:25)
#loc99 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":91:13)
#loc100 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":93:25)
#loc101 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":93:20)
#loc102 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":93:13)
#loc103 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":93:36)
#loc104 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":95:16)
#loc105 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":96:9)
#loc106 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":99:9)
#loc107 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":96:13)
#loc108 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":96:30)
#loc109 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":97:9)
#loc110 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":98:26)
#loc111 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":98:13)
#loc112 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":107:5)
#loc113 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":107:10)
#loc114 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":108:1)
#loc115 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":109:5)
#loc116 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":114:5)
#loc117 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":109:8)
#loc118 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":109:15)
#loc119 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":110:5)
#loc120 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":112:9)
#loc121 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":112:29)
#loc122 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":112:22)
#loc123 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":113:22)
#loc124 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":113:9)
#loc125 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":222:1)
#loc126 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":226:1)
#loc127 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":224:5)
#loc128 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":224:13)
#loc129 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":225:5)
#loc130 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":225:13)
#loc131 = loc("/usr/include/stdlib.h":575:1)
#loc132 = loc("/usr/include/stdlib.h":575:41)
#loc133 = loc("/usr/include/time.h":76:1)
#loc134 = loc("/usr/include/time.h":76:38)
#loc135 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc136 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc137 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":242:15)
#loc138 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":244:15)
#loc139 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":247:15)
#loc140 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":249:15)
#loc141 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":237:1)
#loc142 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":252:1)
#loc147 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":238:1)
#loc148 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":240:27)
#loc149 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":240:22)
#loc150 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":240:5)
#loc151 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":242:5)
#loc152 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":243:5)
#loc153 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":243:67)
#loc154 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":244:5)
#loc155 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":247:5)
#loc156 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":248:5)
#loc157 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":248:66)
#loc158 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":249:5)
#loc159 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":251:12)
#loc160 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":251:5)
#loc161 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":197:23)
#loc162 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":122:1)
#loc163 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":200:1)
#loc164 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":124:5)
#loc165 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":124:9)
#loc166 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":134:9)
#loc167 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":134:13)
#loc168 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":135:9)
#loc169 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":135:28)
#loc170 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":136:9)
#loc171 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":136:32)
#loc172 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":137:9)
#loc173 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":137:41)
#loc174 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":126:12)
#loc175 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":126:5)
#loc176 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":127:5)
#loc177 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":127:10)
#loc178 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":128:1)
#loc179 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":138:9)
#loc180 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":173:17)
#loc181 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":148:36)
#loc182 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":148:45)
#loc183 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":148:58)
#loc184 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":148:29)
#loc185 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":148:13)
#loc186 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":148:69)
#loc187 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":149:13)
#loc188 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":152:13)
#loc189 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":149:17)
#loc190 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":149:34)
#loc191 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":150:13)
#loc192 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":151:17)
#loc193 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":153:20)
#loc194 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":153:21)
#loc195 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":153:30)
#loc196 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":153:33)
#loc197 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":153:47)
#loc198 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":153:13)
#loc199 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":153:48)
#loc200 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":154:34)
#loc201 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":154:13)
#loc202 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":155:49)
#loc203 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":155:39)
#loc204 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":155:13)
#loc205 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":155:59)
#loc206 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":156:38)
#loc207 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":156:32)
#loc208 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":156:13)
#loc209 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":156:46)
#loc210 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":157:13)
#loc211 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":160:13)
#loc212 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":157:25)
#loc213 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":157:58)
#loc214 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":157:59)
#loc215 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":157:68)
#loc216 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":157:82)
#loc217 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":157:17)
#loc218 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":157:88)
#loc219 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":158:13)
#loc220 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":159:17)
#loc221 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":163:31)
#loc222 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":163:46)
#loc223 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":163:59)
#loc224 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":163:77)
#loc225 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":163:80)
#loc226 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":163:26)
#loc227 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":163:13)
#loc228 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":163:81)
#loc229 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":164:13)
#loc230 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":167:13)
#loc231 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":164:17)
#loc232 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":164:31)
#loc233 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":164:44)
#loc234 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":164:47)
#loc235 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":164:61)
#loc236 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":165:13)
#loc237 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":166:17)
#loc238 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":169:39)
#loc239 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":169:25)
#loc240 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":169:13)
#loc241 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":171:25)
#loc242 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":171:20)
#loc243 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":171:13)
#loc244 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":171:36)
#loc245 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":173:16)
#loc246 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":174:9)
#loc247 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":177:9)
#loc248 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":174:13)
#loc249 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":174:30)
#loc250 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":175:9)
#loc251 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":176:26)
#loc252 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":176:13)
#loc253 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":185:5)
#loc254 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":185:10)
#loc255 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":186:1)
#loc256 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":187:5)
#loc257 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":199:5)
#loc258 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":187:8)
#loc259 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":187:15)
#loc260 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":188:5)
#loc261 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":190:9)
#loc262 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":198:9)
#loc263 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":190:13)
#loc264 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":190:21)
#loc265 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":190:29)
#loc266 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":190:30)
#loc267 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":191:9)
#loc268 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":194:9)
#loc269 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":196:9)
#loc270 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":192:13)
#loc271 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":192:33)
#loc272 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":192:26)
#loc273 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":193:26)
#loc274 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":193:13)
#loc275 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":197:13)
#loc276 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":203:1)
#loc277 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":220:1)
#loc278 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":205:5)
#loc279 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":205:9)
#loc280 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":207:12)
#loc281 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":207:5)
#loc282 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":208:5)
#loc283 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":208:10)
#loc284 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":209:1)
#loc285 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":211:13)
#loc286 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":211:12)
#loc287 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":211:5)
#loc288 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":212:5)
#loc289 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":212:10)
#loc290 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":213:1)
#loc291 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":214:5)
#loc292 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":219:5)
#loc293 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":214:8)
#loc294 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":214:15)
#loc295 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":215:5)
#loc296 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":217:9)
#loc297 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":217:29)
#loc298 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":217:22)
#loc299 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":218:22)
#loc300 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_18.c":218:9)
#loc301 = loc(fused[#loc1, #loc2])
#loc302 = loc(fused[#loc3, #loc4])
#loc303 = loc(fused[#loc6, #loc7])
#loc304 = loc(fused[#loc8, #loc9])
#loc305 = loc(fused[#loc10, #loc11])
#loc306 = loc(fused[#loc12, #loc13])
#loc307 = loc(fused[#loc14, #loc15])
#loc308 = loc(fused[#loc16, #loc17])
#loc309 = loc(fused[#loc18, #loc19])
#loc310 = loc(fused[#loc20, #loc21])
#loc311 = loc(fused[#loc22, #loc23])
#loc312 = loc(fused[#loc24, #loc25])
#loc313 = loc(fused[#loc26, #loc27])
#loc314 = loc(fused[#loc28, #loc29])
#loc315 = loc(fused[#loc31, #loc30])
#loc316 = loc(fused[#loc32, #loc33])
#loc317 = loc(fused[#loc35, #loc36])
#loc318 = loc(fused[#loc41, #loc42])
#loc319 = loc(fused[#loc43, #loc44])
#loc320 = loc(fused[#loc45, #loc46])
#loc321 = loc(fused[#loc47, #loc44])
#loc322 = loc(fused[#loc49, #loc50])
#loc323 = loc(fused[#loc52, #loc53])
#loc324 = loc(fused[#loc54, #loc55])
#loc325 = loc(fused[#loc58, #loc56])
#loc326 = loc(fused[#loc62, #loc63])
#loc327 = loc(fused[#loc67, #loc68])
#loc328 = loc(fused[#loc69, #loc70])
#loc329 = loc(fused[#loc72, #loc73])
#loc330 = loc(fused[#loc74, #loc75])
#loc331 = loc(fused[#loc76, #loc77])
#loc332 = loc(fused[#loc78, #loc70])
#loc333 = loc(fused[#loc82, #loc83])
#loc334 = loc(fused[#loc86, #loc87])
#loc335 = loc(fused[#loc88, #loc89])
#loc336 = loc(fused[#loc90, #loc91])
#loc337 = loc(fused[#loc93, #loc94])
#loc338 = loc(fused[#loc95, #loc89])
#loc339 = loc(fused[#loc99, #loc97])
#loc340 = loc(fused[#loc102, #loc103])
#loc341 = loc(fused[#loc105, #loc106])
#loc342 = loc(fused[#loc107, #loc108])
#loc343 = loc(fused[#loc109, #loc106])
#loc344 = loc(fused[#loc112, #loc113])
#loc345 = loc(fused[#loc115, #loc116])
#loc346 = loc(fused[#loc117, #loc118])
#loc347 = loc(fused[#loc119, #loc116])
#loc348 = loc(fused[#loc120, #loc121])
#loc349 = loc(fused[#loc125, #loc126])
#loc350 = loc(fused[#loc127, #loc128])
#loc351 = loc(fused[#loc129, #loc130])
#loc352 = loc(fused[#loc131, #loc132])
#loc353 = loc(fused[#loc133, #loc134])
#loc354 = loc(fused[#loc135, #loc136])
#loc355 = loc(fused[#loc141, #loc142])
#loc358 = loc(fused[#loc152, #loc153])
#loc359 = loc(fused[#loc156, #loc157])
#loc360 = loc(fused[#loc160, #loc159])
#loc361 = loc(fused[#loc162, #loc163])
#loc362 = loc(fused[#loc164, #loc165])
#loc363 = loc(fused[#loc166, #loc167])
#loc364 = loc(fused[#loc168, #loc169])
#loc365 = loc(fused[#loc170, #loc171])
#loc366 = loc(fused[#loc172, #loc173])
#loc367 = loc(fused[#loc175, #loc174])
#loc368 = loc(fused[#loc176, #loc177])
#loc369 = loc(fused[#loc179, #loc180])
#loc370 = loc(fused[#loc185, #loc186])
#loc371 = loc(fused[#loc187, #loc188])
#loc372 = loc(fused[#loc189, #loc190])
#loc373 = loc(fused[#loc191, #loc188])
#loc374 = loc(fused[#loc193, #loc194])
#loc375 = loc(fused[#loc196, #loc197])
#loc376 = loc(fused[#loc198, #loc199])
#loc377 = loc(fused[#loc201, #loc200])
#loc378 = loc(fused[#loc204, #loc205])
#loc379 = loc(fused[#loc208, #loc209])
#loc380 = loc(fused[#loc210, #loc211])
#loc381 = loc(fused[#loc213, #loc214])
#loc382 = loc(fused[#loc215, #loc216])
#loc383 = loc(fused[#loc217, #loc218])
#loc384 = loc(fused[#loc219, #loc211])
#loc385 = loc(fused[#loc223, #loc224])
#loc386 = loc(fused[#loc227, #loc228])
#loc387 = loc(fused[#loc229, #loc230])
#loc388 = loc(fused[#loc231, #loc232])
#loc389 = loc(fused[#loc234, #loc235])
#loc390 = loc(fused[#loc236, #loc230])
#loc391 = loc(fused[#loc240, #loc238])
#loc392 = loc(fused[#loc243, #loc244])
#loc393 = loc(fused[#loc246, #loc247])
#loc394 = loc(fused[#loc248, #loc249])
#loc395 = loc(fused[#loc250, #loc247])
#loc396 = loc(fused[#loc253, #loc254])
#loc397 = loc(fused[#loc256, #loc257])
#loc398 = loc(fused[#loc258, #loc259])
#loc399 = loc(fused[#loc260, #loc257])
#loc400 = loc(fused[#loc261, #loc262])
#loc401 = loc(fused[#loc264, #loc265])
#loc402 = loc(fused[#loc263, #loc266])
#loc403 = loc(fused[#loc267, #loc268, #loc269, #loc262])
#loc404 = loc(fused[#loc270, #loc271])
#loc405 = loc(fused[#loc276, #loc277])
#loc406 = loc(fused[#loc278, #loc279])
#loc407 = loc(fused[#loc281, #loc280])
#loc408 = loc(fused[#loc282, #loc283])
#loc409 = loc(fused[#loc287, #loc285])
#loc410 = loc(fused[#loc288, #loc289])
#loc411 = loc(fused[#loc291, #loc292])
#loc412 = loc(fused[#loc293, #loc294])
#loc413 = loc(fused[#loc295, #loc292])
#loc414 = loc(fused[#loc296, #loc297])
