!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fscanf_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc82)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc83)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fscanf_14_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc86)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc87)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc82)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc17)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc89)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc90)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc91)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc86)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc21)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %14 = cir.call @__isoc99_fscanf(%10, %12, %13) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc21)
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc15)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc9)
  } loc(#loc85)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fscanf_14_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc93)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc92)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc82)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc43)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc100)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc101)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc32)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.br ^bb10 loc(#loc45)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc97)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc97)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.br ^bb5 loc(#loc103)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc52)
    %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc54)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc54)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %16 = cir.call @__isoc99_fscanf(%12, %14, %15) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc52)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc56)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc104)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc105)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc33)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb7 loc(#loc51)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc51)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc49)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc41)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc41)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc35)
  } loc(#loc96)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc107)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc82)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc68)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc110)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc111)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc112)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc107)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc107)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc74)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc76)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc76)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %14 = cir.call @__isoc99_fscanf(%10, %12, %13) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc74)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc78)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc114)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc71)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc66)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc66)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc60)
  } loc(#loc106)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fscanf_14.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":34:27)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":24:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":37:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":31:13)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":31:36)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":32:13)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":32:27)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":26:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":36:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":26:8)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":26:20)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":27:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":28:9)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":35:9)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":34:13)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":34:20)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":34:37)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":86:1)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":90:1)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":88:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":88:11)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":89:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":89:11)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":49:19)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":61:27)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":44:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":65:1)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":56:13)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":56:36)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":57:13)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":57:27)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":46:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":64:5)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":46:8)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":46:20)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":47:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":50:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":52:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":49:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":53:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":63:9)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":59:13)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":62:13)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":59:17)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":59:24)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":59:31)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":59:41)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":59:50)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":60:13)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":61:17)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":68:1)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":84:1)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":75:13)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":75:36)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":76:13)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":76:27)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":70:5)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":83:5)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":70:8)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":70:20)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":71:5)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":72:9)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":82:9)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":78:13)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":81:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":78:17)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":78:24)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":78:31)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":78:41)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":78:50)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":79:13)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":80:27)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fscanf_14.c":80:17)
#loc82 = loc(fused[#loc1, #loc2])
#loc83 = loc(fused[#loc3, #loc4])
#loc84 = loc(fused[#loc5, #loc6])
#loc85 = loc(fused[#loc8, #loc9])
#loc86 = loc(fused[#loc10, #loc11])
#loc87 = loc(fused[#loc12, #loc13])
#loc88 = loc(fused[#loc14, #loc15])
#loc89 = loc(fused[#loc16, #loc17])
#loc90 = loc(fused[#loc18, #loc15])
#loc91 = loc(fused[#loc19, #loc20])
#loc92 = loc(fused[#loc24, #loc25])
#loc93 = loc(fused[#loc26, #loc27])
#loc94 = loc(fused[#loc28, #loc29])
#loc95 = loc(fused[#loc30, #loc31])
#loc96 = loc(fused[#loc34, #loc35])
#loc97 = loc(fused[#loc36, #loc37])
#loc98 = loc(fused[#loc38, #loc39])
#loc99 = loc(fused[#loc40, #loc41])
#loc100 = loc(fused[#loc42, #loc43])
#loc101 = loc(fused[#loc44, #loc45, #loc46, #loc41])
#loc102 = loc(fused[#loc48, #loc49])
#loc103 = loc(fused[#loc50, #loc51])
#loc104 = loc(fused[#loc52, #loc56])
#loc105 = loc(fused[#loc57, #loc51])
#loc106 = loc(fused[#loc59, #loc60])
#loc107 = loc(fused[#loc61, #loc62])
#loc108 = loc(fused[#loc63, #loc64])
#loc109 = loc(fused[#loc65, #loc66])
#loc110 = loc(fused[#loc67, #loc68])
#loc111 = loc(fused[#loc69, #loc66])
#loc112 = loc(fused[#loc70, #loc71])
#loc113 = loc(fused[#loc72, #loc73])
#loc114 = loc(fused[#loc74, #loc78])
#loc115 = loc(fused[#loc79, #loc73])
