!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":43:13)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":83:13)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:23)
#true = #cir.bool<true> : !cir.bool
!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType = !cir.record<union "CWE400_Resource_Exhaustion__rand_sleep_34_unionType" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc90)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc91)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc94)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc95)
    %2 = cir.alloca !ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc96)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc17)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc19)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc19)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc19)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc19)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc19)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc19)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc19)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc19)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc19)
    cir.br ^bb3(%20 : !u32i) loc(#loc19)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc19)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc19)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc19)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc19)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc19)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc19)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc19)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc19)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc19)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc19)
    cir.br ^bb3(%36 : !u32i) loc(#loc19)
  ^bb3(%37: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":43:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc19)
    cir.store %38, %1 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %40 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %39, %40 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // pred: ^bb4
    %41 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %42, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %44 = cir.cast(integral, %43 : !s32i), !u32i loc(#loc27)
    %45 = cir.call @usleep(%44) : (!u32i) -> !s32i loc(#loc28)
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc7)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc9)
  } loc(#loc93)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc102)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc103)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc101)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc106)
    %2 = cir.alloca !ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc107)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc45)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc47)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %7 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc53)
    %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc54)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc55)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb2 loc(#loc52)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc37)
  } loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc58)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc113)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc114)
    %2 = cir.alloca !ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc115)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc68)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc70)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc70)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc70)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc70)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc70)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc70)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc70)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc70)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc70)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc70)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc70)
    cir.br ^bb3(%20 : !u32i) loc(#loc70)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc70)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc70)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc70)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc70)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc70)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc70)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc70)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc70)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc70)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc70)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc70)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc70)
    cir.br ^bb3(%36 : !u32i) loc(#loc70)
  ^bb3(%37: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":83:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc70)
    cir.store %38, %1 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %40 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %39, %40 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.br ^bb5 loc(#loc119)
  ^bb5:  // pred: ^bb4
    %41 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    cir.store %42, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.br ^bb6 loc(#loc120)
  ^bb6:  // pred: ^bb5
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %45 = cir.cmp(gt, %43, %44) : !s32i, !cir.bool loc(#loc121)
    cir.brcond %45 ^bb7, ^bb12 loc(#loc80)
  ^bb7:  // pred: ^bb6
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %47 = cir.const #cir.int<2000> : !s32i loc(#loc82)
    %48 = cir.cmp(le, %46, %47) : !s32i, !cir.bool loc(#loc122)
    cir.brcond %48 ^bb8, ^bb9 loc(#loc80)
  ^bb8:  // pred: ^bb7
    %49 = cir.const #true loc(#loc80)
    cir.br ^bb10(%49 : !cir.bool) loc(#loc80)
  ^bb9:  // pred: ^bb7
    %50 = cir.const #false loc(#loc80)
    cir.br ^bb10(%50 : !cir.bool) loc(#loc80)
  ^bb10(%51: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:23)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc80)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%51 : !cir.bool) loc(#loc80)
  ^bb12:  // pred: ^bb6
    %52 = cir.const #false loc(#loc80)
    cir.br ^bb13(%52 : !cir.bool) loc(#loc80)
  ^bb13(%53: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:23)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc80)
  ^bb14:  // pred: ^bb13
    cir.brcond %53 ^bb15, ^bb16 loc(#loc123)
  ^bb15:  // pred: ^bb14
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %55 = cir.cast(integral, %54 : !s32i), !u32i loc(#loc86)
    %56 = cir.call @usleep(%55) : (!u32i) -> !s32i loc(#loc87)
    %57 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc57)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb17 loc(#loc84)
  ^bb16:  // pred: ^bb14
    %59 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc58)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb17 loc(#loc77)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc77)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc75)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc60)
  } loc(#loc112)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/unistd.h":480:1)
#loc4 = loc("/usr/include/unistd.h":480:43)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":49:19)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":36:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":51:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":46:9)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":46:29)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":38:5)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":38:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":39:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":39:57)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":41:14)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":41:13)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":41:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":43:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":44:26)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":30:9)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":44:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":45:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":50:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":31:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":48:15)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":48:9)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":49:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":100:1)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":104:1)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":102:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":102:13)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":103:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":103:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":58:1)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":73:1)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":68:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":68:29)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":60:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":60:9)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":61:5)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":61:57)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":63:14)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":63:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":63:5)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":65:13)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":65:5)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":66:26)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":66:5)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":67:5)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":72:5)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":70:15)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":70:9)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":71:19)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":71:9)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":91:23)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":95:23)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":76:1)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":98:1)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":86:9)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":86:29)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":78:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":78:9)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":79:5)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":79:57)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":81:14)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":81:13)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":81:5)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":83:5)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":84:26)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":84:5)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":85:5)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":97:5)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:9)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":96:9)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:21)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:26)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:35)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":89:9)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":92:9)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":94:9)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":90:19)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":90:13)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":91:13)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":95:13)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc8, #loc9])
#loc94 = loc(fused[#loc10, #loc11])
#loc95 = loc(fused[#loc12, #loc13])
#loc96 = loc(fused[#loc14, #loc15])
#loc97 = loc(fused[#loc18, #loc16])
#loc98 = loc(fused[#loc20, #loc19])
#loc99 = loc(fused[#loc23, #loc21])
#loc100 = loc(fused[#loc24, #loc25])
#loc101 = loc(fused[#loc30, #loc31])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc34, #loc35])
#loc104 = loc(fused[#loc36, #loc37])
#loc105 = loc(fused[#loc38, #loc39])
#loc106 = loc(fused[#loc40, #loc41])
#loc107 = loc(fused[#loc42, #loc43])
#loc108 = loc(fused[#loc46, #loc44])
#loc109 = loc(fused[#loc48, #loc47])
#loc110 = loc(fused[#loc50, #loc49])
#loc111 = loc(fused[#loc51, #loc52])
#loc112 = loc(fused[#loc59, #loc60])
#loc113 = loc(fused[#loc61, #loc62])
#loc114 = loc(fused[#loc63, #loc64])
#loc115 = loc(fused[#loc65, #loc66])
#loc116 = loc(fused[#loc69, #loc67])
#loc117 = loc(fused[#loc71, #loc70])
#loc118 = loc(fused[#loc73, #loc72])
#loc119 = loc(fused[#loc74, #loc75])
#loc120 = loc(fused[#loc76, #loc77])
#loc121 = loc(fused[#loc78, #loc79])
#loc122 = loc(fused[#loc81, #loc82])
#loc123 = loc(fused[#loc83, #loc84, #loc85, #loc77])
