!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc129)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc131)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc132)
    %6 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc133)
    %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc134)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc131)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc132)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc6)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %10 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc26)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %12, %15 : !s8i, !cir.ptr<!s8i> loc(#loc137)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    cir.store %16, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb2 loc(#loc22)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc139)
  ^bb3:  // pred: ^bb2
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // pred: ^bb3
    %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    %22 = cir.const #cir.int<67> : !s32i loc(#loc39)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc40)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc40)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc141)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc44)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc45)
    %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
    %36 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc50)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc143)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc144)
    cir.libc.memmove %41 bytes from %37 to %35 : !cir.ptr<!void>, !u64i loc(#loc145)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc55)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc57)
    %48 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc59)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc126)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc152)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc154)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc155)
    %6 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc156)
    %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc157)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc154)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc155)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %10 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc89)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc92)
    cir.store %12, %15 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    cir.store %16, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.br ^bb2 loc(#loc85)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc162)
  ^bb3:  // pred: ^bb2
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // pred: ^bb3
    %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
    %22 = cir.const #cir.int<67> : !s32i loc(#loc102)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc103)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc103)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc107)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc108)
    %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %36 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc113)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc167)
    cir.libc.memmove %41 bytes from %37 to %35 : !cir.ptr<!void>, !u64i loc(#loc168)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc118)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc120)
    %48 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc169)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc97)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc67)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":50:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":31:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":31:24)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":39:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":39:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":41:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":41:28)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":25:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":25:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":26:25)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":27:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":27:25)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":28:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":28:26)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":29:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":29:28)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":30:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":37:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":31:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":34:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":34:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":35:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":35:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":35:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":35:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":36:21)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":36:10)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":36:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":38:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":49:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":39:23)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":40:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":48:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":42:20)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":42:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":42:33)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":42:37)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":42:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":42:38)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":43:29)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":43:20)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":43:24)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":43:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":45:21)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":45:27)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":45:35)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":45:39)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":45:50)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":45:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":45:51)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":46:27)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":46:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":46:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":46:22)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":46:23)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":47:23)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":47:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":85:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":88:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":87:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":87:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":57:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":83:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":65:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":65:24)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":72:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":72:24)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":74:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":74:28)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":59:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":59:12)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":60:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":60:25)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":61:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":61:25)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":62:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":62:26)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":63:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":63:28)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":64:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":70:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":65:23)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":67:16)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":67:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":68:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":68:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":68:14)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":68:15)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":69:21)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":69:10)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":69:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":71:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":82:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":72:23)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":73:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":81:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":75:20)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":75:28)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":75:33)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":75:37)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":75:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":75:38)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":76:29)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":76:20)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":76:24)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":76:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":78:21)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":78:27)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":78:35)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":78:39)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":78:50)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":78:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":78:51)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":79:27)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":79:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":79:18)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":79:22)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":79:23)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":80:23)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_32.c":80:13)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc15, #loc16])
#loc133 = loc(fused[#loc17, #loc18])
#loc134 = loc(fused[#loc19, #loc20])
#loc135 = loc(fused[#loc21, #loc22])
#loc136 = loc(fused[#loc25, #loc24])
#loc137 = loc(fused[#loc27, #loc26])
#loc138 = loc(fused[#loc32, #loc30])
#loc139 = loc(fused[#loc33, #loc34])
#loc140 = loc(fused[#loc36, #loc37])
#loc141 = loc(fused[#loc42, #loc43])
#loc142 = loc(fused[#loc47, #loc44])
#loc143 = loc(fused[#loc51, #loc52])
#loc144 = loc(fused[#loc50, #loc52])
#loc145 = loc(fused[#loc53, #loc54])
#loc146 = loc(fused[#loc56, #loc55])
#loc147 = loc(fused[#loc62, #loc63])
#loc148 = loc(fused[#loc64, #loc65])
#loc149 = loc(fused[#loc66, #loc67])
#loc150 = loc(fused[#loc68, #loc69])
#loc151 = loc(fused[#loc70, #loc71])
#loc152 = loc(fused[#loc72, #loc73])
#loc153 = loc(fused[#loc74, #loc75])
#loc154 = loc(fused[#loc76, #loc77])
#loc155 = loc(fused[#loc78, #loc79])
#loc156 = loc(fused[#loc80, #loc81])
#loc157 = loc(fused[#loc82, #loc83])
#loc158 = loc(fused[#loc84, #loc85])
#loc159 = loc(fused[#loc88, #loc87])
#loc160 = loc(fused[#loc90, #loc89])
#loc161 = loc(fused[#loc95, #loc93])
#loc162 = loc(fused[#loc96, #loc97])
#loc163 = loc(fused[#loc99, #loc100])
#loc164 = loc(fused[#loc105, #loc106])
#loc165 = loc(fused[#loc110, #loc107])
#loc166 = loc(fused[#loc114, #loc115])
#loc167 = loc(fused[#loc113, #loc115])
#loc168 = loc(fused[#loc116, #loc117])
#loc169 = loc(fused[#loc119, #loc118])
