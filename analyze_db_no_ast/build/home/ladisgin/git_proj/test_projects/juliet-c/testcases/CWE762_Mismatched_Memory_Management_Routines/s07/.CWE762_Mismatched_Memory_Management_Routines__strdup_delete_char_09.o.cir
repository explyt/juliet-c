!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc139)
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc140)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc141)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_093badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc148)
          %6 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc148)
          cir.store %6, %5 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc148)
          %7 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc21)
          %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc22)
          %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc21)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
        } loc(#loc147)
      } loc(#loc146)
    } loc(#loc145)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc27)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc30)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc151)
    } loc(#loc150)
    cir.return loc(#loc8)
  } loc(#loc142)
  cir.global "private"  constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc152)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc154)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc46)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc161)
          %6 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc161)
          cir.store %6, %5 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc161)
          %7 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc52)
          %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc53)
          %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
        } loc(#loc160)
      } loc(#loc159)
    } loc(#loc158)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc152)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc58)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc62)
      } else {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
      } loc(#loc164)
    } loc(#loc163)
    cir.return loc(#loc39)
  } loc(#loc155)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc69)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc73)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc73)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc171)
          %6 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc171)
          cir.store %6, %5 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc171)
          %7 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc79)
          %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc80)
          %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc79)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
        } loc(#loc170)
      } loc(#loc169)
    } loc(#loc168)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc85)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc87)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
      } loc(#loc174)
    } loc(#loc173)
    cir.return loc(#loc66)
  } loc(#loc165)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc175)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc95)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc152)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc99)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc104)
      } else {
        %5 = cir.const #cir.int<1> : !u64i loc(#loc181)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc107)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc181)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
      } loc(#loc180)
    } loc(#loc179)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc111)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc111)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc107)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc107)
      } loc(#loc184)
    } loc(#loc183)
    cir.return loc(#loc92)
  } loc(#loc176)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc118)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc122)
      cir.if %4 {
        %5 = cir.const #cir.int<1> : !u64i loc(#loc190)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc126)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
      } loc(#loc189)
    } loc(#loc188)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc130)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc126)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc126)
      } loc(#loc193)
    } loc(#loc192)
    cir.return loc(#loc115)
  } loc(#loc185)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_094goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09L8goodB2G1Ev() : () -> () loc(#loc135)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09L8goodB2G2Ev() : () -> () loc(#loc136)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09L8goodG2B1Ev() : () -> () loc(#loc137)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09L8goodG2B2Ev() : () -> () loc(#loc138)
    cir.return loc(#loc134)
  } loc(#loc194)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/string.h":187:1)
#loc4 = loc("/usr/include/string.h":188:35)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":27:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":46:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":29:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":29:12)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":31:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":31:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":32:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":39:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":32:8)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":33:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":34:9)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":38:9)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":35:13)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":35:31)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":37:20)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":37:27)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":37:13)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":37:35)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":40:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":45:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":40:8)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":41:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":44:16)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":27:6)
#loc31 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc32 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":69:19)
#loc36 = loc("/usr/include/stdlib.h":687:1)
#loc37 = loc("/usr/include/stdlib.h":687:32)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":53:1)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":76:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":55:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":55:12)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":57:12)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":57:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":58:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":65:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":58:8)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":59:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":60:9)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":64:9)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":61:13)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":61:31)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":63:20)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":63:27)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":63:13)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":63:35)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":66:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":75:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":66:8)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":67:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":70:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":72:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":69:9)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":74:9)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":74:14)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":79:1)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":97:1)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":81:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":81:12)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":83:12)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":83:5)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":84:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":91:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":84:8)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":85:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":86:9)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":90:9)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":87:13)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":87:31)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":89:20)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":89:27)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":89:13)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":89:35)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":92:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":96:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":92:8)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":93:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":95:9)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":95:14)
#loc89 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc90 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":100:1)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":121:1)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":102:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":102:12)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":104:12)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":104:5)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":105:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":114:5)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":105:8)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":106:5)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":109:5)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":111:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":108:19)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":108:9)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":113:16)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":113:20)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":100:13)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":113:9)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":115:5)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":120:5)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":115:8)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":116:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":119:16)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":124:1)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":140:1)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":126:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":126:12)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":128:12)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":128:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":129:5)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":133:5)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":129:8)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":130:5)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":132:16)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":132:20)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":124:13)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":132:9)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":134:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":139:5)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":134:8)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":135:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":138:16)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":142:1)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":148:1)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":144:5)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":145:5)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":146:5)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_09.cpp":147:5)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc12, #loc11])
#loc145 = loc(fused[#loc13, #loc14])
#loc146 = loc(fused[#loc16, #loc14])
#loc147 = loc(fused[#loc17, #loc18])
#loc148 = loc(fused[#loc19, #loc20])
#loc149 = loc(fused[#loc23, #loc24])
#loc150 = loc(fused[#loc25, #loc26])
#loc151 = loc(fused[#loc28, #loc26])
#loc152 = loc(fused[#loc31, #loc32])
#loc153 = loc(fused[#loc33, #loc34])
#loc154 = loc(fused[#loc36, #loc37])
#loc155 = loc(fused[#loc38, #loc39])
#loc156 = loc(fused[#loc40, #loc41])
#loc157 = loc(fused[#loc43, #loc42])
#loc158 = loc(fused[#loc44, #loc45])
#loc159 = loc(fused[#loc47, #loc45])
#loc160 = loc(fused[#loc48, #loc49])
#loc161 = loc(fused[#loc50, #loc51])
#loc162 = loc(fused[#loc54, #loc55])
#loc163 = loc(fused[#loc56, #loc57])
#loc164 = loc(fused[#loc59, #loc60, #loc61, #loc57])
#loc165 = loc(fused[#loc65, #loc66])
#loc166 = loc(fused[#loc67, #loc68])
#loc167 = loc(fused[#loc70, #loc69])
#loc168 = loc(fused[#loc71, #loc72])
#loc169 = loc(fused[#loc74, #loc72])
#loc170 = loc(fused[#loc75, #loc76])
#loc171 = loc(fused[#loc77, #loc78])
#loc172 = loc(fused[#loc81, #loc82])
#loc173 = loc(fused[#loc83, #loc84])
#loc174 = loc(fused[#loc86, #loc84])
#loc175 = loc(fused[#loc89, #loc90])
#loc176 = loc(fused[#loc91, #loc92])
#loc177 = loc(fused[#loc93, #loc94])
#loc178 = loc(fused[#loc96, #loc95])
#loc179 = loc(fused[#loc97, #loc98])
#loc180 = loc(fused[#loc100, #loc101, #loc102, #loc98])
#loc181 = loc(fused[#loc105, #loc106])
#loc182 = loc(fused[#loc108, #loc106])
#loc183 = loc(fused[#loc109, #loc110])
#loc184 = loc(fused[#loc112, #loc110])
#loc185 = loc(fused[#loc114, #loc115])
#loc186 = loc(fused[#loc116, #loc117])
#loc187 = loc(fused[#loc119, #loc118])
#loc188 = loc(fused[#loc120, #loc121])
#loc189 = loc(fused[#loc123, #loc121])
#loc190 = loc(fused[#loc124, #loc125])
#loc191 = loc(fused[#loc127, #loc125])
#loc192 = loc(fused[#loc128, #loc129])
#loc193 = loc(fused[#loc131, #loc129])
#loc194 = loc(fused[#loc133, #loc134])
