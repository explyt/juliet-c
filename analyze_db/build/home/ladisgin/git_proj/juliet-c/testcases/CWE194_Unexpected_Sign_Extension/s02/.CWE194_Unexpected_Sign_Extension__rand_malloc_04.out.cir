!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":130:10)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":130:14)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":130:20)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":130:32)
#loc210 = loc(fused[#loc71, #loc72])
#loc211 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc183)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc185)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc186)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc187)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc189)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc15)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc190)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
      cir.if %4 {
        %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %7 = cir.binop(and, %5, %6) : !s32i loc(#loc21)
        %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc21)
        %9 = cir.ternary(%8, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc21)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc21)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc21)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc21)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc21)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc21)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc21)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc21)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc21)
          cir.yield %23 : !u32i loc(#loc21)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc21)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc21)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc21)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc21)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc21)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc21)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc21)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc21)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc21)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc21)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc21)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc21)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc21)
          cir.yield %27 : !u32i loc(#loc21)
        }) : (!cir.bool) -> !u32i loc(#loc21)
        %10 = cir.cast(integral, %9 : !u32i), !s32i loc(#loc21)
        %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc21)
        cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc193)
      } loc(#loc192)
    } loc(#loc191)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc25)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc25)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc195)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc197)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc31)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc31)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc200)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc39)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
          } loc(#loc201)
        } loc(#loc199)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc41)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc42)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc42)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc42)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc42)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc202)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc46)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc48)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc48)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc48)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc50)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc203)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc52)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc53)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
      } loc(#loc196)
    } loc(#loc194)
    cir.return loc(#loc12)
  } loc(#loc188)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc204)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc207)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_04_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_04_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    cir.return %17 : !s32i loc(#loc214)
  } loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc89)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc216)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc94)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc217)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc98)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc98)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc89)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc89)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } else {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc103)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc103)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc103)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc220)
      } loc(#loc219)
    } loc(#loc218)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc108)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc108)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc109)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc222)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc224)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc113)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc114)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc114)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc113)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc227)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc121)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc122)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
          } loc(#loc228)
        } loc(#loc226)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc124)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc125)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc125)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc125)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc125)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc229)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc129)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc129)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc131)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc131)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc132)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc131)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc133)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc230)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc135)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc136)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc136)
      } loc(#loc223)
    } loc(#loc221)
    cir.return loc(#loc91)
  } loc(#loc215)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc232)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc142)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc233)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc146)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc146)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc148)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc149)
        %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc148)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc148)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc236)
      } loc(#loc235)
    } loc(#loc234)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc153)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc153)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc154)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc238)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc240)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc158)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc159)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc159)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc158)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc241)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc243)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc166)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc167)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc165)
          } loc(#loc244)
        } loc(#loc242)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc168)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc169)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc170)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc170)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc171)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc170)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc170)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc245)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc174)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc174)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc176)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc176)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc176)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc178)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc246)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc180)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc181)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc182)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc181)
      } loc(#loc239)
    } loc(#loc237)
    cir.return loc(#loc139)
  } loc(#loc231)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":28:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":51:1)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":30:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":30:11)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":32:12)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":32:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":33:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":37:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":33:8)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":34:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":36:23)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":36:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":39:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":50:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":39:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":39:16)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":40:5)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":43:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":43:48)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":43:37)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":43:44)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:43)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:13)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:27)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:33)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:34)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:40)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:39)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:16)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:28)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:33)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:38)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:9)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:39)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:30)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:9)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:20)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:25)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:26)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":48:19)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":48:9)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":49:9)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":49:14)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":114:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":118:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":116:5)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":116:14)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":117:5)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":117:14)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":135:15)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":137:15)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":140:15)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":142:15)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":130:1)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":145:1)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":131:1)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":133:27)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":133:22)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":133:5)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":135:5)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":136:5)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":136:59)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":137:5)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":140:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":141:5)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":141:58)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":142:5)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":144:12)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":144:5)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":66:19)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":58:1)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":86:1)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":60:5)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":60:11)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":62:12)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":62:5)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":63:5)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":72:5)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":63:8)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":64:5)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":67:5)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":69:5)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":66:9)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":71:16)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":71:20)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":71:9)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":74:5)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":85:5)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":74:9)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":74:16)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":75:5)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":78:9)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":78:48)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":78:37)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":78:44)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:9)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:43)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:13)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:27)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:33)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:34)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:40)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:39)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:16)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:28)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:33)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:38)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:9)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:39)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:30)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:9)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:20)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:25)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:26)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":83:19)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":83:9)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":84:9)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":84:14)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":89:1)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":112:1)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":91:5)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":91:11)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":93:12)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":93:5)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":94:5)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":98:5)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":94:8)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":95:5)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":97:16)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":97:20)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":97:9)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":100:5)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":111:5)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":100:9)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":100:16)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":101:5)
#loc156 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":104:9)
#loc157 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":104:48)
#loc158 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":104:37)
#loc159 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":104:44)
#loc160 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:9)
#loc161 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:43)
#loc162 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:13)
#loc163 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:27)
#loc164 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:33)
#loc165 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:34)
#loc166 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:40)
#loc167 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:39)
#loc168 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:16)
#loc169 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:28)
#loc170 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:33)
#loc171 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:38)
#loc172 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:9)
#loc173 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:39)
#loc174 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:30)
#loc175 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:9)
#loc176 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:20)
#loc177 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:25)
#loc178 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:26)
#loc179 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":109:19)
#loc180 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":109:9)
#loc181 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":110:9)
#loc182 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":110:14)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc9, #loc10])
#loc188 = loc(fused[#loc11, #loc12])
#loc189 = loc(fused[#loc13, #loc14])
#loc190 = loc(fused[#loc16, #loc15])
#loc191 = loc(fused[#loc17, #loc18])
#loc192 = loc(fused[#loc20, #loc18])
#loc193 = loc(fused[#loc22, #loc21])
#loc194 = loc(fused[#loc23, #loc24])
#loc195 = loc(fused[#loc25, #loc26])
#loc196 = loc(fused[#loc27, #loc24])
#loc197 = loc(fused[#loc28, #loc29])
#loc198 = loc(fused[#loc30, #loc29])
#loc199 = loc(fused[#loc32, #loc33])
#loc200 = loc(fused[#loc34, #loc35])
#loc201 = loc(fused[#loc36, #loc33])
#loc202 = loc(fused[#loc44, #loc45])
#loc203 = loc(fused[#loc47, #loc46])
#loc204 = loc(fused[#loc55, #loc56])
#loc205 = loc(fused[#loc57, #loc58])
#loc206 = loc(fused[#loc59, #loc60])
#loc207 = loc(fused[#loc61, #loc62])
#loc208 = loc(fused[#loc63, #loc64])
#loc209 = loc(fused[#loc69, #loc70])
#loc212 = loc(fused[#loc80, #loc81])
#loc213 = loc(fused[#loc84, #loc85])
#loc214 = loc(fused[#loc88, #loc87])
#loc215 = loc(fused[#loc90, #loc91])
#loc216 = loc(fused[#loc92, #loc93])
#loc217 = loc(fused[#loc95, #loc94])
#loc218 = loc(fused[#loc96, #loc97])
#loc219 = loc(fused[#loc99, #loc100, #loc101, #loc97])
#loc220 = loc(fused[#loc105, #loc104])
#loc221 = loc(fused[#loc106, #loc107])
#loc222 = loc(fused[#loc108, #loc109])
#loc223 = loc(fused[#loc110, #loc107])
#loc224 = loc(fused[#loc111, #loc112])
#loc225 = loc(fused[#loc113, #loc112])
#loc226 = loc(fused[#loc115, #loc116])
#loc227 = loc(fused[#loc117, #loc118])
#loc228 = loc(fused[#loc119, #loc116])
#loc229 = loc(fused[#loc127, #loc128])
#loc230 = loc(fused[#loc130, #loc129])
#loc231 = loc(fused[#loc138, #loc139])
#loc232 = loc(fused[#loc140, #loc141])
#loc233 = loc(fused[#loc143, #loc142])
#loc234 = loc(fused[#loc144, #loc145])
#loc235 = loc(fused[#loc147, #loc145])
#loc236 = loc(fused[#loc150, #loc149])
#loc237 = loc(fused[#loc151, #loc152])
#loc238 = loc(fused[#loc153, #loc154])
#loc239 = loc(fused[#loc155, #loc152])
#loc240 = loc(fused[#loc156, #loc157])
#loc241 = loc(fused[#loc158, #loc157])
#loc242 = loc(fused[#loc160, #loc161])
#loc243 = loc(fused[#loc162, #loc163])
#loc244 = loc(fused[#loc164, #loc161])
#loc245 = loc(fused[#loc172, #loc173])
#loc246 = loc(fused[#loc175, #loc174])
