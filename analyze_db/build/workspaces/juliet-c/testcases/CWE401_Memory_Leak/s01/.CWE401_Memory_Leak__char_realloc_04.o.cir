!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc178)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc20)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc22)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc186)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc187)
    %11 = cir.call @realloc(%6, %10) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.br ^bb3 loc(#loc190)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc191)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc192)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc34)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc17)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc193)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %26 ^bb10, ^bb11 loc(#loc194)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc40)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc40)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc11)
  } loc(#loc181)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc196)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc197)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc198)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc199)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc44)
  } loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc200)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc205)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc66)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc68)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc206)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc207)
    %11 = cir.call @realloc(%6, %10) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.br ^bb3 loc(#loc210)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc211)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc212)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc78)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc80)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
    cir.br ^bb5 loc(#loc74)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc82)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc82)
    %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb7 loc(#loc63)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc63)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc213)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc88)
    cir.brcond %26 ^bb10, ^bb11 loc(#loc214)
  ^bb10:  // pred: ^bb9
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb12 loc(#loc90)
  ^bb11:  // pred: ^bb9
    %29 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc93)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
    cir.br ^bb12 loc(#loc87)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc87)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc57)
  } loc(#loc201)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc99)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    cir.br ^bb1 loc(#loc218)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc103)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc219)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc105)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc107)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc220)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc221)
    %11 = cir.call @realloc(%6, %10) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.br ^bb3 loc(#loc224)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc226)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc117)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc119)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc117)
    cir.br ^bb5 loc(#loc113)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc113)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc121)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc121)
    %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb7 loc(#loc102)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc102)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc227)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc127)
    cir.brcond %26 ^bb10, ^bb11 loc(#loc228)
  ^bb10:  // pred: ^bb9
    %27 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc129)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
    cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc129)
    cir.br ^bb11 loc(#loc126)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc126)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc96)
  } loc(#loc215)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc135)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    cir.br ^bb1 loc(#loc232)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc139)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc233)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc143)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.br ^bb4 loc(#loc141)
  ^bb3:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc145)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc145)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc145)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc145)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc145)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc147)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc149)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc149)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc235)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc236)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc153)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc132)
  } loc(#loc229)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc160)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc164)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc241)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<100> : !s32i loc(#loc166)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc166)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc166)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc166)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc166)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc168)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc170)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc170)
    %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc168)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.br ^bb3 loc(#loc163)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc243)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc175)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc244)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc174)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc174)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc157)
  } loc(#loc237)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_realloc_04.c":40:22)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_realloc_04.c":30:1)
#loc11 = loc("CWE401_Memory_Leak__char_realloc_04.c":48:1)
#loc12 = loc("CWE401_Memory_Leak__char_realloc_04.c":32:5)
#loc13 = loc("CWE401_Memory_Leak__char_realloc_04.c":32:12)
#loc14 = loc("CWE401_Memory_Leak__char_realloc_04.c":33:12)
#loc15 = loc("CWE401_Memory_Leak__char_realloc_04.c":33:5)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_04.c":34:5)
#loc17 = loc("CWE401_Memory_Leak__char_realloc_04.c":42:5)
#loc18 = loc("CWE401_Memory_Leak__char_realloc_04.c":34:8)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_04.c":35:5)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_04.c":37:24)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_04.c":37:32)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_04.c":37:38)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_04.c":37:42)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_04.c":37:53)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_04.c":37:54)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_04.c":37:9)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_04.c":38:9)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_04.c":38:37)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_04.c":38:13)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_04.c":38:21)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_04.c":38:27)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_04.c":38:28)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_04.c":38:34)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_04.c":38:33)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_04.c":40:16)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_04.c":40:9)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_04.c":41:19)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_04.c":41:9)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_04.c":43:5)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_04.c":47:5)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_04.c":43:8)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_04.c":44:5)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_04.c":146:1)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_04.c":152:1)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_04.c":148:5)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_04.c":148:14)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_04.c":149:5)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_04.c":149:14)
#loc49 = loc("CWE401_Memory_Leak__char_realloc_04.c":150:5)
#loc50 = loc("CWE401_Memory_Leak__char_realloc_04.c":150:14)
#loc51 = loc("CWE401_Memory_Leak__char_realloc_04.c":151:5)
#loc52 = loc("CWE401_Memory_Leak__char_realloc_04.c":151:14)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_04.c":71:19)
#loc54 = loc("/usr/include/stdlib.h":687:1)
#loc55 = loc("/usr/include/stdlib.h":687:32)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_04.c":55:1)
#loc57 = loc("CWE401_Memory_Leak__char_realloc_04.c":78:1)
#loc58 = loc("CWE401_Memory_Leak__char_realloc_04.c":57:5)
#loc59 = loc("CWE401_Memory_Leak__char_realloc_04.c":57:12)
#loc60 = loc("CWE401_Memory_Leak__char_realloc_04.c":58:12)
#loc61 = loc("CWE401_Memory_Leak__char_realloc_04.c":58:5)
#loc62 = loc("CWE401_Memory_Leak__char_realloc_04.c":59:5)
#loc63 = loc("CWE401_Memory_Leak__char_realloc_04.c":67:5)
#loc64 = loc("CWE401_Memory_Leak__char_realloc_04.c":59:8)
#loc65 = loc("CWE401_Memory_Leak__char_realloc_04.c":60:5)
#loc66 = loc("CWE401_Memory_Leak__char_realloc_04.c":62:24)
#loc67 = loc("CWE401_Memory_Leak__char_realloc_04.c":62:32)
#loc68 = loc("CWE401_Memory_Leak__char_realloc_04.c":62:38)
#loc69 = loc("CWE401_Memory_Leak__char_realloc_04.c":62:42)
#loc70 = loc("CWE401_Memory_Leak__char_realloc_04.c":62:53)
#loc71 = loc("CWE401_Memory_Leak__char_realloc_04.c":62:54)
#loc72 = loc("CWE401_Memory_Leak__char_realloc_04.c":62:9)
#loc73 = loc("CWE401_Memory_Leak__char_realloc_04.c":63:9)
#loc74 = loc("CWE401_Memory_Leak__char_realloc_04.c":63:37)
#loc75 = loc("CWE401_Memory_Leak__char_realloc_04.c":63:13)
#loc76 = loc("CWE401_Memory_Leak__char_realloc_04.c":63:21)
#loc77 = loc("CWE401_Memory_Leak__char_realloc_04.c":63:27)
#loc78 = loc("CWE401_Memory_Leak__char_realloc_04.c":63:28)
#loc79 = loc("CWE401_Memory_Leak__char_realloc_04.c":63:34)
#loc80 = loc("CWE401_Memory_Leak__char_realloc_04.c":63:33)
#loc81 = loc("CWE401_Memory_Leak__char_realloc_04.c":65:16)
#loc82 = loc("CWE401_Memory_Leak__char_realloc_04.c":65:22)
#loc83 = loc("CWE401_Memory_Leak__char_realloc_04.c":65:9)
#loc84 = loc("CWE401_Memory_Leak__char_realloc_04.c":66:19)
#loc85 = loc("CWE401_Memory_Leak__char_realloc_04.c":66:9)
#loc86 = loc("CWE401_Memory_Leak__char_realloc_04.c":68:5)
#loc87 = loc("CWE401_Memory_Leak__char_realloc_04.c":77:5)
#loc88 = loc("CWE401_Memory_Leak__char_realloc_04.c":68:8)
#loc89 = loc("CWE401_Memory_Leak__char_realloc_04.c":69:5)
#loc90 = loc("CWE401_Memory_Leak__char_realloc_04.c":72:5)
#loc91 = loc("CWE401_Memory_Leak__char_realloc_04.c":74:5)
#loc92 = loc("CWE401_Memory_Leak__char_realloc_04.c":71:9)
#loc93 = loc("CWE401_Memory_Leak__char_realloc_04.c":76:9)
#loc94 = loc("CWE401_Memory_Leak__char_realloc_04.c":76:14)
#loc95 = loc("CWE401_Memory_Leak__char_realloc_04.c":81:1)
#loc96 = loc("CWE401_Memory_Leak__char_realloc_04.c":99:1)
#loc97 = loc("CWE401_Memory_Leak__char_realloc_04.c":83:5)
#loc98 = loc("CWE401_Memory_Leak__char_realloc_04.c":83:12)
#loc99 = loc("CWE401_Memory_Leak__char_realloc_04.c":84:12)
#loc100 = loc("CWE401_Memory_Leak__char_realloc_04.c":84:5)
#loc101 = loc("CWE401_Memory_Leak__char_realloc_04.c":85:5)
#loc102 = loc("CWE401_Memory_Leak__char_realloc_04.c":93:5)
#loc103 = loc("CWE401_Memory_Leak__char_realloc_04.c":85:8)
#loc104 = loc("CWE401_Memory_Leak__char_realloc_04.c":86:5)
#loc105 = loc("CWE401_Memory_Leak__char_realloc_04.c":88:24)
#loc106 = loc("CWE401_Memory_Leak__char_realloc_04.c":88:32)
#loc107 = loc("CWE401_Memory_Leak__char_realloc_04.c":88:38)
#loc108 = loc("CWE401_Memory_Leak__char_realloc_04.c":88:42)
#loc109 = loc("CWE401_Memory_Leak__char_realloc_04.c":88:53)
#loc110 = loc("CWE401_Memory_Leak__char_realloc_04.c":88:54)
#loc111 = loc("CWE401_Memory_Leak__char_realloc_04.c":88:9)
#loc112 = loc("CWE401_Memory_Leak__char_realloc_04.c":89:9)
#loc113 = loc("CWE401_Memory_Leak__char_realloc_04.c":89:37)
#loc114 = loc("CWE401_Memory_Leak__char_realloc_04.c":89:13)
#loc115 = loc("CWE401_Memory_Leak__char_realloc_04.c":89:21)
#loc116 = loc("CWE401_Memory_Leak__char_realloc_04.c":89:27)
#loc117 = loc("CWE401_Memory_Leak__char_realloc_04.c":89:28)
#loc118 = loc("CWE401_Memory_Leak__char_realloc_04.c":89:34)
#loc119 = loc("CWE401_Memory_Leak__char_realloc_04.c":89:33)
#loc120 = loc("CWE401_Memory_Leak__char_realloc_04.c":91:16)
#loc121 = loc("CWE401_Memory_Leak__char_realloc_04.c":91:22)
#loc122 = loc("CWE401_Memory_Leak__char_realloc_04.c":91:9)
#loc123 = loc("CWE401_Memory_Leak__char_realloc_04.c":92:19)
#loc124 = loc("CWE401_Memory_Leak__char_realloc_04.c":92:9)
#loc125 = loc("CWE401_Memory_Leak__char_realloc_04.c":94:5)
#loc126 = loc("CWE401_Memory_Leak__char_realloc_04.c":98:5)
#loc127 = loc("CWE401_Memory_Leak__char_realloc_04.c":94:8)
#loc128 = loc("CWE401_Memory_Leak__char_realloc_04.c":95:5)
#loc129 = loc("CWE401_Memory_Leak__char_realloc_04.c":97:9)
#loc130 = loc("CWE401_Memory_Leak__char_realloc_04.c":97:14)
#loc131 = loc("CWE401_Memory_Leak__char_realloc_04.c":102:1)
#loc132 = loc("CWE401_Memory_Leak__char_realloc_04.c":124:1)
#loc133 = loc("CWE401_Memory_Leak__char_realloc_04.c":104:5)
#loc134 = loc("CWE401_Memory_Leak__char_realloc_04.c":104:12)
#loc135 = loc("CWE401_Memory_Leak__char_realloc_04.c":105:12)
#loc136 = loc("CWE401_Memory_Leak__char_realloc_04.c":105:5)
#loc137 = loc("CWE401_Memory_Leak__char_realloc_04.c":106:5)
#loc138 = loc("CWE401_Memory_Leak__char_realloc_04.c":118:5)
#loc139 = loc("CWE401_Memory_Leak__char_realloc_04.c":106:8)
#loc140 = loc("CWE401_Memory_Leak__char_realloc_04.c":107:5)
#loc141 = loc("CWE401_Memory_Leak__char_realloc_04.c":110:5)
#loc142 = loc("CWE401_Memory_Leak__char_realloc_04.c":112:5)
#loc143 = loc("CWE401_Memory_Leak__char_realloc_04.c":109:19)
#loc144 = loc("CWE401_Memory_Leak__char_realloc_04.c":109:9)
#loc145 = loc("CWE401_Memory_Leak__char_realloc_04.c":114:24)
#loc146 = loc("CWE401_Memory_Leak__char_realloc_04.c":114:9)
#loc147 = loc("CWE401_Memory_Leak__char_realloc_04.c":116:9)
#loc148 = loc("CWE401_Memory_Leak__char_realloc_04.c":116:16)
#loc149 = loc("CWE401_Memory_Leak__char_realloc_04.c":116:22)
#loc150 = loc("CWE401_Memory_Leak__char_realloc_04.c":117:19)
#loc151 = loc("CWE401_Memory_Leak__char_realloc_04.c":117:9)
#loc152 = loc("CWE401_Memory_Leak__char_realloc_04.c":119:5)
#loc153 = loc("CWE401_Memory_Leak__char_realloc_04.c":123:5)
#loc154 = loc("CWE401_Memory_Leak__char_realloc_04.c":119:8)
#loc155 = loc("CWE401_Memory_Leak__char_realloc_04.c":120:5)
#loc156 = loc("CWE401_Memory_Leak__char_realloc_04.c":127:1)
#loc157 = loc("CWE401_Memory_Leak__char_realloc_04.c":144:1)
#loc158 = loc("CWE401_Memory_Leak__char_realloc_04.c":129:5)
#loc159 = loc("CWE401_Memory_Leak__char_realloc_04.c":129:12)
#loc160 = loc("CWE401_Memory_Leak__char_realloc_04.c":130:12)
#loc161 = loc("CWE401_Memory_Leak__char_realloc_04.c":130:5)
#loc162 = loc("CWE401_Memory_Leak__char_realloc_04.c":131:5)
#loc163 = loc("CWE401_Memory_Leak__char_realloc_04.c":138:5)
#loc164 = loc("CWE401_Memory_Leak__char_realloc_04.c":131:8)
#loc165 = loc("CWE401_Memory_Leak__char_realloc_04.c":132:5)
#loc166 = loc("CWE401_Memory_Leak__char_realloc_04.c":134:24)
#loc167 = loc("CWE401_Memory_Leak__char_realloc_04.c":134:9)
#loc168 = loc("CWE401_Memory_Leak__char_realloc_04.c":136:9)
#loc169 = loc("CWE401_Memory_Leak__char_realloc_04.c":136:16)
#loc170 = loc("CWE401_Memory_Leak__char_realloc_04.c":136:22)
#loc171 = loc("CWE401_Memory_Leak__char_realloc_04.c":137:19)
#loc172 = loc("CWE401_Memory_Leak__char_realloc_04.c":137:9)
#loc173 = loc("CWE401_Memory_Leak__char_realloc_04.c":139:5)
#loc174 = loc("CWE401_Memory_Leak__char_realloc_04.c":143:5)
#loc175 = loc("CWE401_Memory_Leak__char_realloc_04.c":139:8)
#loc176 = loc("CWE401_Memory_Leak__char_realloc_04.c":140:5)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc5, #loc6])
#loc180 = loc(fused[#loc8, #loc9])
#loc181 = loc(fused[#loc10, #loc11])
#loc182 = loc(fused[#loc12, #loc13])
#loc183 = loc(fused[#loc15, #loc14])
#loc184 = loc(fused[#loc16, #loc17])
#loc185 = loc(fused[#loc19, #loc17])
#loc186 = loc(fused[#loc23, #loc24])
#loc187 = loc(fused[#loc22, #loc24])
#loc188 = loc(fused[#loc20, #loc25])
#loc189 = loc(fused[#loc26, #loc25])
#loc190 = loc(fused[#loc27, #loc28])
#loc191 = loc(fused[#loc29, #loc30])
#loc192 = loc(fused[#loc31, #loc28])
#loc193 = loc(fused[#loc39, #loc40])
#loc194 = loc(fused[#loc42, #loc40])
#loc195 = loc(fused[#loc43, #loc44])
#loc196 = loc(fused[#loc45, #loc46])
#loc197 = loc(fused[#loc47, #loc48])
#loc198 = loc(fused[#loc49, #loc50])
#loc199 = loc(fused[#loc51, #loc52])
#loc200 = loc(fused[#loc54, #loc55])
#loc201 = loc(fused[#loc56, #loc57])
#loc202 = loc(fused[#loc58, #loc59])
#loc203 = loc(fused[#loc61, #loc60])
#loc204 = loc(fused[#loc62, #loc63])
#loc205 = loc(fused[#loc65, #loc63])
#loc206 = loc(fused[#loc69, #loc70])
#loc207 = loc(fused[#loc68, #loc70])
#loc208 = loc(fused[#loc66, #loc71])
#loc209 = loc(fused[#loc72, #loc71])
#loc210 = loc(fused[#loc73, #loc74])
#loc211 = loc(fused[#loc75, #loc76])
#loc212 = loc(fused[#loc77, #loc74])
#loc213 = loc(fused[#loc86, #loc87])
#loc214 = loc(fused[#loc89, #loc90, #loc91, #loc87])
#loc215 = loc(fused[#loc95, #loc96])
#loc216 = loc(fused[#loc97, #loc98])
#loc217 = loc(fused[#loc100, #loc99])
#loc218 = loc(fused[#loc101, #loc102])
#loc219 = loc(fused[#loc104, #loc102])
#loc220 = loc(fused[#loc108, #loc109])
#loc221 = loc(fused[#loc107, #loc109])
#loc222 = loc(fused[#loc105, #loc110])
#loc223 = loc(fused[#loc111, #loc110])
#loc224 = loc(fused[#loc112, #loc113])
#loc225 = loc(fused[#loc114, #loc115])
#loc226 = loc(fused[#loc116, #loc113])
#loc227 = loc(fused[#loc125, #loc126])
#loc228 = loc(fused[#loc128, #loc126])
#loc229 = loc(fused[#loc131, #loc132])
#loc230 = loc(fused[#loc133, #loc134])
#loc231 = loc(fused[#loc136, #loc135])
#loc232 = loc(fused[#loc137, #loc138])
#loc233 = loc(fused[#loc140, #loc141, #loc142, #loc138])
#loc234 = loc(fused[#loc146, #loc145])
#loc235 = loc(fused[#loc152, #loc153])
#loc236 = loc(fused[#loc155, #loc153])
#loc237 = loc(fused[#loc156, #loc157])
#loc238 = loc(fused[#loc158, #loc159])
#loc239 = loc(fused[#loc161, #loc160])
#loc240 = loc(fused[#loc162, #loc163])
#loc241 = loc(fused[#loc165, #loc163])
#loc242 = loc(fused[#loc167, #loc166])
#loc243 = loc(fused[#loc173, #loc174])
#loc244 = loc(fused[#loc176, #loc174])
