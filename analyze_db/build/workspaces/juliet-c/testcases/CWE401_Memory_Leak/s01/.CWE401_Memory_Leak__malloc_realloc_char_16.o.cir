!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc118)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc12)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc122)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc19)
        cir.condition(%1) loc(#loc19)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
            %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc25)
            %2 = cir.const #cir.int<100> : !s32i loc(#loc26)
            %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc26)
            %4 = cir.const #cir.int<1> : !u64i loc(#loc128)
            %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc129)
            %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
            %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
            cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
            cir.scope {
              %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
              %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
              %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc132)
              cir.if %26 {
                %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
                %28 = cir.const #cir.int<1> : !s32i loc(#loc35)
                %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc36)
                cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
              } loc(#loc133)
            } loc(#loc131)
            %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc37)
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
            %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
            %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc40)
            %14 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc41)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
            %17 = cir.const #cir.int<130000> : !s32i loc(#loc43)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc43)
            %19 = cir.const #cir.int<1> : !u64i loc(#loc134)
            %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc135)
            %21 = cir.call @realloc(%16, %20) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc41)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
            cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
            cir.scope {
              %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
              %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
              %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc139)
              cir.if %26 {
                %27 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc54)
                %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
                %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc12)
                %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc12)
                %31 = cir.call @strcpy(%28, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc54)
                %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc57)
                %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc58)
                %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
                cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc58)
              } loc(#loc140)
            } loc(#loc138)
          } loc(#loc126)
          cir.break loc(#loc60)
        } loc(#loc125)
        cir.yield loc(#loc18)
      } loc(#loc124)
    } loc(#loc124)
    cir.return loc(#loc16)
  } loc(#loc123)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc141)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc69)
        cir.condition(%1) loc(#loc69)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc148)
            %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc77)
            %3 = cir.const #cir.int<100> : !s32i loc(#loc78)
            %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc78)
            %5 = cir.const #cir.int<1> : !u64i loc(#loc149)
            %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc150)
            %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
            %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
            cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
            cir.scope {
              %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc84)
              %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
              cir.if %30 {
                %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc86)
                %32 = cir.const #cir.int<1> : !s32i loc(#loc87)
                %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc88)
                cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc86)
              } loc(#loc154)
            } loc(#loc152)
            %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc89)
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
            %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc91)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc91)
            %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
            %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc93)
            %15 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc94)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
            %18 = cir.const #cir.int<130000> : !s32i loc(#loc96)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc96)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc155)
            %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc156)
            %22 = cir.call @realloc(%17, %21) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
            cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
            cir.scope {
              %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
              %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc160)
              cir.if %30 {
                %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
                cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
                %32 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc109)
                %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
                %34 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc111)
                %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc111)
                %36 = cir.call @strcpy(%33, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
                %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
                cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc113)
              } loc(#loc161)
            } loc(#loc159)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc114)
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc114)
          } loc(#loc146)
          cir.break loc(#loc116)
        } loc(#loc145)
        cir.yield loc(#loc68)
      } loc(#loc144)
    } loc(#loc144)
    cir.return loc(#loc66)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":32:26)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":683:1)
#loc11 = loc("/usr/include/stdlib.h":684:14)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":39:30)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":24:1)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":46:1)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":26:5)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":45:5)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":26:11)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":27:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":28:9)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":43:9)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:13)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:58)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:35)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:42)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:46)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:57)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:13)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:41)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:17)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:25)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:31)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:32)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:38)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:37)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":32:13)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":32:20)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":33:23)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":33:13)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:28)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:36)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:43)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:51)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:62)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:42)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:63)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:13)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":36:13)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":42:13)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":36:17)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":36:25)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":37:13)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":39:17)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":39:24)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":40:27)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":40:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":41:17)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":41:22)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":44:9)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":80:1)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":83:1)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":82:5)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":82:11)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":53:1)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":78:1)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":55:5)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":77:5)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":55:11)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":56:5)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":57:9)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":75:9)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:13)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:58)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":60:13)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":60:20)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:35)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:42)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:46)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:57)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:13)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:41)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:17)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:25)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:31)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:32)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:38)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:37)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":62:13)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":62:20)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":62:26)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":63:23)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":63:13)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:31)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:39)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:46)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:54)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:65)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:45)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:66)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:13)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":67:13)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":73:13)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":67:17)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":67:28)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":68:13)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":69:24)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":69:17)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":71:17)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":71:24)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":71:30)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":72:27)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":72:17)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":74:13)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":74:18)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":76:9)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc8, #loc9])
#loc121 = loc(fused[#loc10, #loc11])
#loc122 = loc(fused[#loc13, #loc14])
#loc123 = loc(fused[#loc15, #loc16])
#loc124 = loc(fused[#loc17, #loc18])
#loc125 = loc(fused[#loc20, #loc18])
#loc126 = loc(fused[#loc21, #loc22])
#loc127 = loc(fused[#loc23, #loc24])
#loc128 = loc(fused[#loc27, #loc28])
#loc129 = loc(fused[#loc26, #loc28])
#loc130 = loc(fused[#loc25, #loc24])
#loc131 = loc(fused[#loc29, #loc30])
#loc132 = loc(fused[#loc31, #loc32])
#loc133 = loc(fused[#loc33, #loc30])
#loc134 = loc(fused[#loc44, #loc45])
#loc135 = loc(fused[#loc46, #loc45])
#loc136 = loc(fused[#loc41, #loc47])
#loc137 = loc(fused[#loc48, #loc47])
#loc138 = loc(fused[#loc49, #loc50])
#loc139 = loc(fused[#loc51, #loc52])
#loc140 = loc(fused[#loc53, #loc50])
#loc141 = loc(fused[#loc61, #loc62])
#loc142 = loc(fused[#loc63, #loc64])
#loc143 = loc(fused[#loc65, #loc66])
#loc144 = loc(fused[#loc67, #loc68])
#loc145 = loc(fused[#loc70, #loc68])
#loc146 = loc(fused[#loc71, #loc72])
#loc147 = loc(fused[#loc73, #loc74])
#loc148 = loc(fused[#loc75, #loc76])
#loc149 = loc(fused[#loc79, #loc80])
#loc150 = loc(fused[#loc78, #loc80])
#loc151 = loc(fused[#loc77, #loc74])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc83, #loc84])
#loc154 = loc(fused[#loc85, #loc82])
#loc155 = loc(fused[#loc97, #loc98])
#loc156 = loc(fused[#loc99, #loc98])
#loc157 = loc(fused[#loc94, #loc100])
#loc158 = loc(fused[#loc101, #loc100])
#loc159 = loc(fused[#loc102, #loc103])
#loc160 = loc(fused[#loc104, #loc105])
#loc161 = loc(fused[#loc106, #loc103])
#loc162 = loc(fused[#loc108, #loc107])
