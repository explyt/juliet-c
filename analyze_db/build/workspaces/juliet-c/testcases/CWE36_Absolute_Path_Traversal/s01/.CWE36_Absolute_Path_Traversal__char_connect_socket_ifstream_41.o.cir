!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":52:14)
#loc12 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":52:21)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":141:18)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":141:25)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc212 = loc(fused[#loc11, #loc12])
#loc277 = loc(fused[#loc178, #loc179])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_istream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ifstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc207)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc208)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc209)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc210)
  cir.func @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_417badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc212)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc214)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc17)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %3 = cir.const #cir.int<8> : !s32i loc(#loc215)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%1, %2, %3) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc210)
          cir.yield loc(#loc22)
        } loc(#loc22)
        cir.yield loc(#loc21)
      } catch [#cir.unwind {
        cir.resume loc(#loc21)
      }] loc(#loc21)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc210)
          cir.yield loc(#loc23)
        } loc(#loc23)
        cir.yield loc(#loc21)
      } catch [#cir.unwind {
        cir.resume loc(#loc21)
      }] loc(#loc21)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc210)
    } loc(#loc213)
    cir.return loc(#loc10)
  } loc(#loc211)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc216)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc217)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc30)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc219)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc220)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc221)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc222)
  cir.func private @close(!s32i) -> !s32i loc(#loc223)
  cir.func @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_413badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc226)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc226)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc226)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc47)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc229)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc230)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc231)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc232)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc233)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc58)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc232)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc61)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc61)
      cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc233)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc67)
            %16 = cir.const #cir.int<1> : !u32i loc(#loc68)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc68)
            %18 = cir.const #cir.int<6> : !u32i loc(#loc69)
            %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc69)
            %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc70)
            cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc236)
            cir.scope {
              %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc75)
              %71 = cir.const #cir.int<1> : !s32i loc(#loc76)
              %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc76)
              %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc238)
              cir.if %73 {
                cir.break loc(#loc78)
              } loc(#loc239)
            } loc(#loc237)
            %21 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc240)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc81)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc241)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc242)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc86)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc86)
            %26 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc243)
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc30)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc30)
            %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc89)
            %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc90)
            %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc91)
            cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc244)
            %32 = cir.const #cir.int<27015> : !s32i loc(#loc94)
            %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc94)
            %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc95)
            %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc245)
            cir.scope {
              %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc101)
              %71 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc247)
              %72 = cir.const #cir.int<16> : !u64i loc(#loc248)
              %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc248)
              %74 = cir.call @connect(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc106)
              %75 = cir.const #cir.int<1> : !s32i loc(#loc107)
              %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc107)
              %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc249)
              cir.if %77 {
                cir.break loc(#loc109)
              } loc(#loc250)
            } loc(#loc246)
            %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
            %38 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc112)
            %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc113)
            %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
            %41 = cir.const #cir.int<1> : !u64i loc(#loc252)
            %42 = cir.const #cir.int<4096> : !s32i loc(#loc118)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc118)
            %44 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc119)
            %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc253)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc120)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc254)
            %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc255)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc123)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc123)
            cir.store %52, %5 : !s32i, !cir.ptr<!s32i> loc(#loc256)
            cir.scope {
              %70 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %71 = cir.const #cir.int<1> : !s32i loc(#loc129)
              %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc129)
              %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc258)
              %74 = cir.ternary(%73, true {
                %75 = cir.const #true loc(#loc130)
                cir.yield %75 : !cir.bool loc(#loc130)
              }, false {
                %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %76 = cir.const #cir.int<0> : !s32i loc(#loc132)
                %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc259)
                %78 = cir.ternary(%77, true {
                  %79 = cir.const #true loc(#loc130)
                  cir.yield %79 : !cir.bool loc(#loc130)
                }, false {
                  %79 = cir.const #false loc(#loc130)
                  cir.yield %79 : !cir.bool loc(#loc130)
                }) : (!cir.bool) -> !cir.bool loc(#loc130)
                cir.yield %78 : !cir.bool loc(#loc130)
              }) : (!cir.bool) -> !cir.bool loc(#loc130)
              cir.if %74 {
                cir.break loc(#loc134)
              } loc(#loc260)
            } loc(#loc257)
            %53 = cir.const #cir.int<0> : !s8i loc(#loc135)
            %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
            %55 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc137)
            %56 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc138)
            %58 = cir.const #cir.int<1> : !u64i loc(#loc261)
            %59 = cir.binop(div, %57, %58) : !u64i loc(#loc262)
            %60 = cir.binop(add, %55, %59) : !u64i loc(#loc263)
            %61 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc141)
            cir.store %53, %61 : !s8i, !cir.ptr<!s8i> loc(#loc264)
            %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
            %63 = cir.const #cir.int<13> : !s8i loc(#loc143)
            %64 = cir.cast(integral, %63 : !s8i), !s32i loc(#loc143)
            %65 = cir.call @strchr(%62, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc144)
            cir.store %65, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
            cir.scope {
              %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
              %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc149)
              cir.if %71 {
                %72 = cir.const #cir.int<0> : !s8i loc(#loc151)
                %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc268)
              } loc(#loc267)
            } loc(#loc266)
            %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
            %67 = cir.const #cir.int<10> : !s8i loc(#loc155)
            %68 = cir.cast(integral, %67 : !s8i), !s32i loc(#loc155)
            %69 = cir.call @strchr(%66, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc156)
            cir.store %69, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
            cir.scope {
              %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc161)
              cir.if %71 {
                %72 = cir.const #cir.int<0> : !s8i loc(#loc163)
                %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc272)
              } loc(#loc271)
            } loc(#loc270)
          } loc(#loc235)
          cir.yield loc(#loc64)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc166)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc166)
          cir.condition(%16) loc(#loc166)
        } loc(#loc234)
      } loc(#loc234)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc170)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc170)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc274)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc172)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc173)
        } loc(#loc275)
      } loc(#loc273)
    } loc(#loc228)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
    cir.call @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_417badSinkEPc(%4) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    cir.return loc(#loc42)
  } loc(#loc224)
  cir.func @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_4111goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc178, #loc179])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc277)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.scope {
      %1 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc279)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc184)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
      %3 = cir.const #cir.int<8> : !s32i loc(#loc215)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%1, %2, %3) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc210)
          cir.yield loc(#loc187)
        } loc(#loc187)
        cir.yield loc(#loc186)
      } catch [#cir.unwind {
        cir.resume loc(#loc186)
      }] loc(#loc186)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc210)
          cir.yield loc(#loc188)
        } loc(#loc188)
        cir.yield loc(#loc186)
      } catch [#cir.unwind {
        cir.resume loc(#loc186)
      }] loc(#loc186)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc210)
    } loc(#loc278)
    cir.return loc(#loc177)
  } loc(#loc276)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc191)
  cir.func internal private @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc282)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc283)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc283)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc283)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc198)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc200)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc191)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc191)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc200)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    cir.call @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_4111goodG2BSinkEPc(%9) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    cir.return loc(#loc193)
  } loc(#loc281)
  cir.func @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_414goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41L7goodG2BEv() : () -> () loc(#loc206)
    cir.return loc(#loc205)
  } loc(#loc285)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":525:7)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":526:34)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":664:7)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":673:7)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":736:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":741:7)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":606:7)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":607:9)
#loc9 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":52:1)
#loc10 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":60:1)
#loc13 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":53:1)
#loc14 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":54:5)
#loc15 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":59:5)
#loc16 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":55:9)
#loc17 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":55:18)
#loc18 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":57:32)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:57)
#loc20 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:67)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":52:6)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":57:19)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":58:19)
#loc24 = loc("/usr/include/string.h":407:1)
#loc25 = loc("/usr/include/string.h":408:33)
#loc26 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc27 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc28 = loc("/usr/include/arpa/inet.h":34:1)
#loc29 = loc("/usr/include/arpa/inet.h":34:47)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":94:49)
#loc31 = loc("/usr/include/netinet/in.h":402:1)
#loc32 = loc("/usr/include/netinet/in.h":403:40)
#loc33 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc34 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc35 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc36 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc37 = loc("/usr/include/string.h":226:1)
#loc38 = loc("/usr/include/string.h":227:50)
#loc39 = loc("/usr/include/unistd.h":358:1)
#loc40 = loc("/usr/include/unistd.h":358:27)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":62:1)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":135:1)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":64:5)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":64:12)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":65:5)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":65:37)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":66:12)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":66:5)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":67:5)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":133:5)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":72:9)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":72:13)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":73:9)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":73:28)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":74:9)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":74:15)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":75:9)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":75:32)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":76:9)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":76:37)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":76:26)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":76:33)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":77:9)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":122:17)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":78:9)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":121:9)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":87:36)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":87:45)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":87:58)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":87:29)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":87:13)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":87:69)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":88:13)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":91:13)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":88:17)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":88:34)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":89:13)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":90:17)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":92:20)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":92:21)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":92:30)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":92:33)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":92:47)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":92:13)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":92:48)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":93:34)
#loc87 = loc("/usr/include/netinet/in.h":249:5)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":93:13)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":94:39)
#loc90 = loc("/usr/include/netinet/in.h":251:20)
#loc91 = loc("/usr/include/netinet/in.h":33:15)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":94:13)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":94:59)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":95:38)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":95:32)
#loc96 = loc("/usr/include/netinet/in.h":250:15)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":95:13)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":95:46)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":96:13)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":99:13)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":96:25)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":96:58)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":96:59)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":96:68)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":96:82)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":96:17)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":96:88)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":97:13)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":98:17)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:31)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:55)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:62)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:60)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:46)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:69)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:72)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:83)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:88)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:103)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:113)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:114)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:117)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:26)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:13)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":103:118)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":104:13)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":107:13)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":104:17)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":104:31)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":104:44)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":104:47)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":104:61)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":105:13)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":106:17)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":109:57)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":109:13)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":109:18)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":109:28)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":109:41)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":109:52)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":109:53)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":111:30)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":111:36)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":111:23)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":111:13)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":111:40)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":112:13)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":115:13)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":112:17)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":113:13)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":114:28)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":114:18)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":114:17)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":116:30)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":116:36)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":116:23)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":116:13)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":116:40)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":117:13)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":120:13)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":117:17)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":118:13)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":119:28)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":119:18)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":119:17)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":122:16)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":123:9)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":126:9)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":123:13)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":123:30)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":124:9)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":125:26)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":125:13)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":134:13)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":134:5)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":141:1)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":149:1)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":142:1)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":143:5)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":148:5)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":144:9)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":144:18)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":146:32)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":141:6)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":146:19)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":147:19)
#loc189 = loc("/usr/include/string.h":149:1)
#loc190 = loc("/usr/include/string.h":150:14)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":162:18)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":152:1)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":165:1)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":154:5)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":154:12)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":155:5)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":155:37)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":156:12)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":156:5)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":162:5)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":162:12)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":164:17)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":164:5)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":167:1)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":170:1)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_41.cpp":169:5)
#loc207 = loc(fused[#loc1, #loc2])
#loc208 = loc(fused[#loc3, #loc4])
#loc209 = loc(fused[#loc5, #loc6])
#loc210 = loc(fused[#loc7, #loc8])
#loc211 = loc(fused[#loc9, #loc10])
#loc213 = loc(fused[#loc14, #loc15])
#loc214 = loc(fused[#loc16, #loc17])
#loc215 = loc(fused[#loc19, #loc20])
#loc216 = loc(fused[#loc24, #loc25])
#loc217 = loc(fused[#loc26, #loc27])
#loc218 = loc(fused[#loc28, #loc29])
#loc219 = loc(fused[#loc31, #loc32])
#loc220 = loc(fused[#loc33, #loc34])
#loc221 = loc(fused[#loc35, #loc36])
#loc222 = loc(fused[#loc37, #loc38])
#loc223 = loc(fused[#loc39, #loc40])
#loc224 = loc(fused[#loc41, #loc42])
#loc225 = loc(fused[#loc43, #loc44])
#loc226 = loc(fused[#loc45, #loc46])
#loc227 = loc(fused[#loc48, #loc47])
#loc228 = loc(fused[#loc49, #loc50])
#loc229 = loc(fused[#loc51, #loc52])
#loc230 = loc(fused[#loc53, #loc54])
#loc231 = loc(fused[#loc55, #loc56])
#loc232 = loc(fused[#loc57, #loc58])
#loc233 = loc(fused[#loc59, #loc60])
#loc234 = loc(fused[#loc63, #loc64])
#loc235 = loc(fused[#loc65, #loc66])
#loc236 = loc(fused[#loc71, #loc72])
#loc237 = loc(fused[#loc73, #loc74])
#loc238 = loc(fused[#loc75, #loc76])
#loc239 = loc(fused[#loc77, #loc74])
#loc240 = loc(fused[#loc79, #loc80])
#loc241 = loc(fused[#loc82, #loc83])
#loc242 = loc(fused[#loc84, #loc85])
#loc243 = loc(fused[#loc88, #loc86])
#loc244 = loc(fused[#loc92, #loc93])
#loc245 = loc(fused[#loc97, #loc98])
#loc246 = loc(fused[#loc99, #loc100])
#loc247 = loc(fused[#loc102, #loc103])
#loc248 = loc(fused[#loc104, #loc105])
#loc249 = loc(fused[#loc106, #loc107])
#loc250 = loc(fused[#loc108, #loc100])
#loc251 = loc(fused[#loc114, #loc115])
#loc252 = loc(fused[#loc116, #loc117])
#loc253 = loc(fused[#loc118, #loc119])
#loc254 = loc(fused[#loc118, #loc120])
#loc255 = loc(fused[#loc116, #loc121])
#loc256 = loc(fused[#loc124, #loc125])
#loc257 = loc(fused[#loc126, #loc127])
#loc258 = loc(fused[#loc128, #loc129])
#loc259 = loc(fused[#loc131, #loc132])
#loc260 = loc(fused[#loc133, #loc127])
#loc261 = loc(fused[#loc139, #loc140])
#loc262 = loc(fused[#loc138, #loc140])
#loc263 = loc(fused[#loc137, #loc140])
#loc264 = loc(fused[#loc136, #loc135])
#loc265 = loc(fused[#loc145, #loc146])
#loc266 = loc(fused[#loc147, #loc148])
#loc267 = loc(fused[#loc150, #loc148])
#loc268 = loc(fused[#loc153, #loc151])
#loc269 = loc(fused[#loc157, #loc158])
#loc270 = loc(fused[#loc159, #loc160])
#loc271 = loc(fused[#loc162, #loc160])
#loc272 = loc(fused[#loc165, #loc163])
#loc273 = loc(fused[#loc167, #loc168])
#loc274 = loc(fused[#loc169, #loc170])
#loc275 = loc(fused[#loc171, #loc168])
#loc276 = loc(fused[#loc176, #loc177])
#loc278 = loc(fused[#loc181, #loc182])
#loc279 = loc(fused[#loc183, #loc184])
#loc280 = loc(fused[#loc189, #loc190])
#loc281 = loc(fused[#loc192, #loc193])
#loc282 = loc(fused[#loc194, #loc195])
#loc283 = loc(fused[#loc196, #loc197])
#loc284 = loc(fused[#loc199, #loc198])
#loc285 = loc(fused[#loc204, #loc205])
