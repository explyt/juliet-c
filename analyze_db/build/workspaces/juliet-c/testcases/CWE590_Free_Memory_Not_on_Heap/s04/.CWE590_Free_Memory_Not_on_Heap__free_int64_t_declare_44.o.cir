!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":23:21)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":23:31)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":57:25)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":57:35)
#loc120 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc55, #loc56])
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLongLongLine(!s64i) loc(#loc117)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc118)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc10)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!s64i>, %2 : !s32i), !cir.ptr<!s64i> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!s64i>, !s64i loc(#loc10)
    cir.call @printLongLongLine(%4) : (!s64i) -> () loc(#loc13)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc14)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc15)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc15)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc14)
    cir.return loc(#loc6)
  } loc(#loc119)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc21)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc22)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc124)
    cir.scope {
      %6 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc126)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc128)
        cir.scope {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc34)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc34)
          cir.store %10, %8 : !u64i, !cir.ptr<!u64i> loc(#loc130)
          cir.for : cond {
            %11 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc36)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc37)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc37)
            %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc131)
            cir.condition(%14) loc(#loc38)
          } body {
            cir.scope {
              %11 = cir.const #cir.int<5> : !s64i loc(#loc40)
              %12 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc41)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc42)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %12 : !u64i), !cir.ptr<!s64i> loc(#loc42)
              cir.store %11, %14 : !s64i, !cir.ptr<!s64i> loc(#loc133)
            } loc(#loc132)
            cir.yield loc(#loc33)
          } step {
            %11 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %12 = cir.unary(inc, %11) : !u64i, !u64i loc(#loc44)
            cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc134)
            cir.yield loc(#loc129)
          } loc(#loc129)
        } loc(#loc129)
      } loc(#loc127)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc45)
      cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc135)
    } loc(#loc125)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc47)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc48)
    cir.call %4(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!s64i>) -> () loc(#loc47)
    cir.return loc(#loc17)
  } loc(#loc121)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc137)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc136)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc55, #loc56])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc57)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc58)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!s64i>, %2 : !s32i), !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.load %3 : !cir.ptr<!s64i>, !s64i loc(#loc58)
    cir.call @printLongLongLine(%4) : (!s64i) -> () loc(#loc61)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc62)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc63)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc63)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
    cir.return loc(#loc54)
  } loc(#loc138)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc140)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc142)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc76)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>> loc(#loc145)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc146)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc148)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc83)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc84)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc84)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc149)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc150)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc151)
      cir.store %13, %6 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc148)
      cir.scope {
        %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc89)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc90)
        %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !cir.bool loc(#loc153)
        cir.if %18 {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc92)
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc93)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc94)
          cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
        } loc(#loc154)
      } loc(#loc152)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc156)
        cir.scope {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc101)
          cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc158)
          cir.for : cond {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc103)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc104)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc104)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc159)
            cir.condition(%21) loc(#loc105)
          } body {
            cir.scope {
              %18 = cir.const #cir.int<5> : !s64i loc(#loc107)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc108)
              %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc109)
              %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !u64i), !cir.ptr<!s64i> loc(#loc110)
              cir.store %18, %21 : !s64i, !cir.ptr<!s64i> loc(#loc161)
            } loc(#loc160)
            cir.yield loc(#loc100)
          } step {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc111)
            %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc112)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc162)
            cir.yield loc(#loc157)
          } loc(#loc157)
        } loc(#loc157)
      } loc(#loc155)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc113)
      cir.store %14, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc163)
    } loc(#loc147)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc115)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc116)
    cir.call %4(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!s64i>) -> () loc(#loc115)
    cir.return loc(#loc72)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":28:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":24:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":25:23)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":25:28)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":25:29)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":25:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":27:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":27:10)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":30:1)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":50:1)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":32:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":32:15)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":34:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":34:35)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":35:12)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":35:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":36:5)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":47:5)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":38:9)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":38:31)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":39:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":45:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":40:13)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":40:20)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":41:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":44:13)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":41:22)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":41:18)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":41:25)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":41:29)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":41:27)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":42:13)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":43:33)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":43:28)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":43:17)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":41:35)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":41:34)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":46:16)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":46:9)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":49:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":49:13)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":89:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":92:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":91:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":91:13)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":57:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":62:1)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":58:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":59:23)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":59:28)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":59:29)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":59:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":61:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":61:10)
#loc64 = loc("/usr/include/stdlib.h":672:1)
#loc65 = loc("/usr/include/stdlib.h":672:45)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":74:23)
#loc69 = loc("/usr/include/stdlib.h":756:1)
#loc70 = loc("/usr/include/stdlib.h":756:70)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":64:1)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":87:1)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":66:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":66:15)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":67:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":67:35)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":68:12)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":68:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":69:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":85:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":71:9)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":71:69)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":71:43)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":71:50)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":71:54)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":71:68)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":72:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":76:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":72:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":72:27)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":73:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":74:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":75:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":75:18)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":77:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":83:9)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":78:13)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":78:20)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":79:13)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":82:13)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":79:22)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":79:18)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":79:25)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":79:29)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":79:27)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":80:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":81:33)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":81:17)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":81:28)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":81:29)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":79:35)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":79:34)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":84:16)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":84:9)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":86:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_declare_44.c":86:13)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc121 = loc(fused[#loc16, #loc17])
#loc122 = loc(fused[#loc18, #loc19])
#loc123 = loc(fused[#loc20, #loc21])
#loc124 = loc(fused[#loc23, #loc22])
#loc125 = loc(fused[#loc24, #loc25])
#loc126 = loc(fused[#loc26, #loc27])
#loc127 = loc(fused[#loc28, #loc29])
#loc128 = loc(fused[#loc30, #loc31])
#loc129 = loc(fused[#loc32, #loc33])
#loc130 = loc(fused[#loc35, #loc34])
#loc131 = loc(fused[#loc36, #loc37])
#loc132 = loc(fused[#loc39, #loc33])
#loc133 = loc(fused[#loc42, #loc40])
#loc134 = loc(fused[#loc44, #loc43])
#loc135 = loc(fused[#loc46, #loc45])
#loc136 = loc(fused[#loc49, #loc50])
#loc137 = loc(fused[#loc51, #loc52])
#loc138 = loc(fused[#loc53, #loc54])
#loc140 = loc(fused[#loc64, #loc65])
#loc141 = loc(fused[#loc66, #loc67])
#loc142 = loc(fused[#loc69, #loc70])
#loc143 = loc(fused[#loc71, #loc72])
#loc144 = loc(fused[#loc73, #loc74])
#loc145 = loc(fused[#loc75, #loc76])
#loc146 = loc(fused[#loc78, #loc77])
#loc147 = loc(fused[#loc79, #loc80])
#loc148 = loc(fused[#loc81, #loc82])
#loc149 = loc(fused[#loc85, #loc86])
#loc150 = loc(fused[#loc84, #loc86])
#loc151 = loc(fused[#loc83, #loc82])
#loc152 = loc(fused[#loc87, #loc88])
#loc153 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc91, #loc88])
#loc155 = loc(fused[#loc95, #loc96])
#loc156 = loc(fused[#loc97, #loc98])
#loc157 = loc(fused[#loc99, #loc100])
#loc158 = loc(fused[#loc102, #loc101])
#loc159 = loc(fused[#loc103, #loc104])
#loc160 = loc(fused[#loc106, #loc100])
#loc161 = loc(fused[#loc108, #loc107])
#loc162 = loc(fused[#loc112, #loc111])
#loc163 = loc(fused[#loc114, #loc113])
