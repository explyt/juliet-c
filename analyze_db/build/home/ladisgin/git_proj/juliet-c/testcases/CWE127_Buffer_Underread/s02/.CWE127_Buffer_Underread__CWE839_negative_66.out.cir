!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":22:59)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":22:73)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":46:63)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":46:77)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":65:63)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":65:77)
#true = #cir.bool<true> : !cir.bool
#loc87 = loc(fused[#loc8, #loc9])
#loc95 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc84)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc5)
  cir.func @CWE127_Buffer_Underread__CWE839_negative_66b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc87)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc88)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc11)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc90)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc90)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc90)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
        %9 = cir.const #cir.int<10> : !s32i loc(#loc22)
        %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc92)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc27)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc27)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc27)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc28)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc5)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc29)
        } loc(#loc93)
      } loc(#loc91)
    } loc(#loc89)
    cir.return loc(#loc7)
  } loc(#loc86)
  cir.func @CWE127_Buffer_Underread__CWE839_negative_66b_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc32, #loc33])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc95)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc96)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc36)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc35)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc98)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc98)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc98)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc45)
        %9 = cir.const #cir.int<10> : !s32i loc(#loc46)
        %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc100)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc50)
          %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc51)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc51)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc52)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc53)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc53)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
        } loc(#loc101)
      } loc(#loc99)
    } loc(#loc97)
    cir.return loc(#loc31)
  } loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc55)
  cir.func @CWE127_Buffer_Underread__CWE839_negative_66b_goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc58, #loc59])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc104)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc62)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc61)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc106)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc106)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc106)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc71)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc72)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc108)
        %11 = cir.ternary(%10, true {
          %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc75)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc109)
          %15 = cir.ternary(%14, true {
            %16 = cir.const #true loc(#loc73)
            cir.yield %16 : !cir.bool loc(#loc73)
          }, false {
            %16 = cir.const #false loc(#loc73)
            cir.yield %16 : !cir.bool loc(#loc73)
          }) : (!cir.bool) -> !cir.bool loc(#loc73)
          cir.yield %15 : !cir.bool loc(#loc73)
        }, false {
          %12 = cir.const #false loc(#loc73)
          cir.yield %12 : !cir.bool loc(#loc73)
        }) : (!cir.bool) -> !cir.bool loc(#loc73)
        cir.if %11 {
          %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc81)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc81)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc81)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc82)
        } else {
          %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc55)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc55)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc83)
        } loc(#loc110)
      } loc(#loc107)
    } loc(#loc105)
    cir.return loc(#loc57)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":36:23)
#loc6 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":22:1)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":39:1)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":25:5)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":25:27)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":23:1)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":25:16)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":25:26)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":26:5)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":38:5)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":27:9)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":27:30)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":30:9)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":37:9)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":30:13)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":30:20)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":31:9)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":33:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":35:9)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":32:33)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":32:26)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":32:13)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":36:13)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":46:1)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":62:1)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":48:5)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":48:27)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":47:1)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":48:16)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":48:26)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":49:5)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":61:5)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":50:9)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":50:30)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":53:9)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":60:9)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":53:13)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":53:20)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":54:9)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":56:9)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":58:9)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":55:33)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":55:26)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":55:13)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":59:23)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":59:13)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":77:23)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":65:1)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":80:1)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":67:5)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":67:27)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":66:1)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":67:16)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":67:26)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":68:5)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":79:5)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":69:9)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":69:30)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":71:9)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":78:9)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":71:13)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":71:21)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":71:23)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":71:26)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":71:34)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":71:36)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":72:9)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":74:9)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":76:9)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":73:33)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":73:26)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":73:13)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_negative_66b.c":77:13)
#loc84 = loc(fused[#loc1, #loc2])
#loc85 = loc(fused[#loc3, #loc4])
#loc86 = loc(fused[#loc6, #loc7])
#loc88 = loc(fused[#loc10, #loc11])
#loc89 = loc(fused[#loc15, #loc16])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc19, #loc20])
#loc92 = loc(fused[#loc21, #loc22])
#loc93 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc94 = loc(fused[#loc30, #loc31])
#loc96 = loc(fused[#loc34, #loc35])
#loc97 = loc(fused[#loc39, #loc40])
#loc98 = loc(fused[#loc41, #loc42])
#loc99 = loc(fused[#loc43, #loc44])
#loc100 = loc(fused[#loc45, #loc46])
#loc101 = loc(fused[#loc47, #loc48, #loc49, #loc44])
#loc102 = loc(fused[#loc56, #loc57])
#loc104 = loc(fused[#loc60, #loc61])
#loc105 = loc(fused[#loc65, #loc66])
#loc106 = loc(fused[#loc67, #loc68])
#loc107 = loc(fused[#loc69, #loc70])
#loc108 = loc(fused[#loc71, #loc72])
#loc109 = loc(fused[#loc74, #loc76])
#loc110 = loc(fused[#loc77, #loc78, #loc79, #loc70])
