!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":97:10)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":97:14)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":97:20)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":97:32)
#loc179 = loc(fused[#loc124, #loc125])
#loc180 = loc(fused[#loc126, #loc127])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.func @_ZN48CWE124_Buffer_Underwrite__char_alloca_memmove_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc144)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc8)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc12)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc12)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc13)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc145)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc17)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc19)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %25 = cir.const #cir.int<8> : !s32i loc(#loc23)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc23)
    %27 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.scope {
      %28 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
      %29 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      %30 = cir.load %29 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      cir.store %30, %28 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
      cir.scope {
        %31 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc151)
        %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
        %34 = cir.const #cir.int<67> : !s8i loc(#loc35)
        %35 = cir.cast(integral, %34 : !s8i), !s32i loc(#loc35)
        %36 = cir.const #cir.int<100> : !s32i loc(#loc36)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc36)
        %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc36)
        cir.libc.memset %39 bytes from %33 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc152)
        %40 = cir.const #cir.int<0> : !s8i loc(#loc40)
        %41 = cir.const #cir.int<100> : !s32i loc(#loc41)
        %42 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc41)
        %44 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
        %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc43)
        cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc153)
        %46 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
        %48 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
        %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
        %50 = cir.const #cir.int<100> : !s32i loc(#loc46)
        %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc46)
        %52 = cir.const #cir.int<1> : !u64i loc(#loc154)
        %53 = cir.binop(mul, %51, %52) : !u64i loc(#loc155)
        cir.libc.memmove %53 bytes from %49 to %47 : !cir.ptr<!void>, !u64i loc(#loc156)
        %54 = cir.const #cir.int<0> : !s8i loc(#loc51)
        %55 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
        %56 = cir.const #cir.int<100> : !s32i loc(#loc53)
        %57 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc53)
        %59 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %58 : !s32i), !cir.ptr<!s8i> loc(#loc55)
        cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc157)
        %60 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } loc(#loc150)
    } loc(#loc148)
    cir.return loc(#loc4)
  } loc(#loc141)
  cir.func internal private @_ZN48CWE124_Buffer_Underwrite__char_alloca_memmove_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc161)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc65)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc65)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc65)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc65)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc65)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc67)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc67)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc68)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc68)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc72)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc74)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
      %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc168)
        %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
        %31 = cir.const #cir.int<67> : !s8i loc(#loc88)
        %32 = cir.cast(integral, %31 : !s8i), !s32i loc(#loc88)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc89)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc89)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc89)
        cir.libc.memset %36 bytes from %30 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
        %37 = cir.const #cir.int<0> : !s8i loc(#loc93)
        %38 = cir.const #cir.int<100> : !s32i loc(#loc94)
        %39 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc94)
        %41 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
        %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc96)
        cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc170)
        %43 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
        %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
        %45 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
        %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
        %47 = cir.const #cir.int<100> : !s32i loc(#loc99)
        %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc99)
        %49 = cir.const #cir.int<1> : !u64i loc(#loc171)
        %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc172)
        cir.libc.memmove %50 bytes from %46 to %44 : !cir.ptr<!void>, !u64i loc(#loc173)
        %51 = cir.const #cir.int<0> : !s8i loc(#loc104)
        %52 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
        %53 = cir.const #cir.int<100> : !s32i loc(#loc106)
        %54 = cir.const #cir.int<1> : !s32i loc(#loc107)
        %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc106)
        %56 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc108)
        cir.store %51, %56 : !s8i, !cir.ptr<!s8i> loc(#loc174)
        %57 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
        cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc110)
      } loc(#loc167)
    } loc(#loc165)
    cir.return loc(#loc59)
  } loc(#loc158)
  cir.func @_ZN48CWE124_Buffer_Underwrite__char_alloca_memmove_334goodEv() extra(#fn_attr) {
    cir.call @_ZN48CWE124_Buffer_Underwrite__char_alloca_memmove_33L7goodG2BEv() : () -> () loc(#loc113)
    cir.return loc(#loc112)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc121)
  cir.func @main(%arg0: !s32i loc(fused[#loc124, #loc125]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc126, #loc127])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc123)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc128)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc129)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc130)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc130)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc131)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc118)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.call @_ZN48CWE124_Buffer_Underwrite__char_alloca_memmove_334goodEv() : () -> () loc(#loc133)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc120)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.call @_ZN48CWE124_Buffer_Underwrite__char_alloca_memmove_333badEv() : () -> () loc(#loc136)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc121)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.return %15 : !s32i loc(#loc181)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":26:1)
#loc4 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":48:1)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":28:5)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":28:12)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":29:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":29:23)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":30:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":30:33)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":31:12)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":31:24)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":31:29)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":31:33)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":31:5)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":31:34)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":32:25)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":32:5)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":32:16)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":32:20)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":32:21)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":34:12)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":34:25)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":34:23)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":34:5)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":35:5)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":47:5)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":36:9)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":36:23)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":37:9)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":46:9)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":38:13)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":38:28)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":39:20)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":39:28)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":39:33)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":39:37)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":39:13)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":39:38)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":40:29)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":40:20)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":40:24)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":40:13)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":42:21)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":42:27)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":42:35)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":42:39)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":42:50)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":42:13)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":42:51)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":44:27)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":44:13)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":44:18)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":44:22)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":44:23)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":45:23)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":45:13)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":55:1)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":77:1)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":57:5)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":57:12)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":58:5)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":58:23)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":59:5)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":59:33)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":60:12)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":60:24)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":60:29)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":60:33)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":60:5)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":60:34)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":61:25)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":61:5)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":61:16)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":61:20)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":61:21)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":63:12)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":63:5)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":64:5)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":76:5)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":65:9)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":65:23)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":66:9)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":75:9)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":67:13)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":67:28)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":68:20)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":68:28)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":68:33)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":68:37)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":68:13)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":68:38)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":69:29)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":69:20)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":69:24)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":69:13)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":71:21)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":71:27)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":71:35)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":71:39)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":71:50)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":71:13)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":71:51)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":73:27)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":73:13)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":73:18)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":73:22)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":73:23)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":74:23)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":74:13)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":79:1)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":82:1)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":81:5)
#loc114 = loc("/usr/include/stdlib.h":575:1)
#loc115 = loc("/usr/include/stdlib.h":575:41)
#loc116 = loc("/usr/include/time.h":76:1)
#loc117 = loc("/usr/include/time.h":76:38)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":102:15)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":104:15)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":107:15)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":109:15)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":97:1)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":112:1)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":98:1)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":100:27)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":100:22)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":100:5)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":102:5)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":103:5)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":104:5)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":107:5)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":108:5)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":109:5)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":111:12)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_memmove_33.cpp":111:5)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc9, #loc10])
#loc145 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc18, #loc17])
#loc147 = loc(fused[#loc25, #loc23])
#loc148 = loc(fused[#loc26, #loc27])
#loc149 = loc(fused[#loc28, #loc29])
#loc150 = loc(fused[#loc30, #loc31])
#loc151 = loc(fused[#loc32, #loc33])
#loc152 = loc(fused[#loc38, #loc39])
#loc153 = loc(fused[#loc43, #loc40])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc46, #loc48])
#loc156 = loc(fused[#loc49, #loc50])
#loc157 = loc(fused[#loc52, #loc51])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc60, #loc61])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc64, #loc65])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc73, #loc72])
#loc164 = loc(fused[#loc78, #loc77])
#loc165 = loc(fused[#loc79, #loc80])
#loc166 = loc(fused[#loc81, #loc82])
#loc167 = loc(fused[#loc83, #loc84])
#loc168 = loc(fused[#loc85, #loc86])
#loc169 = loc(fused[#loc91, #loc92])
#loc170 = loc(fused[#loc96, #loc93])
#loc171 = loc(fused[#loc100, #loc101])
#loc172 = loc(fused[#loc99, #loc101])
#loc173 = loc(fused[#loc102, #loc103])
#loc174 = loc(fused[#loc105, #loc104])
#loc175 = loc(fused[#loc111, #loc112])
#loc176 = loc(fused[#loc114, #loc115])
#loc177 = loc(fused[#loc116, #loc117])
#loc178 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc139, #loc138])
