!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__charVoid = !cir.record<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc9)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc141)
            %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc1)
            %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc1)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc1)
            %5 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
            cir.store %4, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc142)
            %6 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
            %7 = cir.load %6 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc17)
            %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc19)
            %9 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc144)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
            %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc23)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc23)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
            %15 = cir.const #cir.int<32> : !u64i loc(#loc145)
            cir.libc.memmove %15 bytes from %14 to %11 : !cir.ptr<!void>, !u64i loc(#loc146)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc28)
            %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc28)
            %18 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %19 = cir.const #cir.int<16> : !u64i loc(#loc147)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc148)
            %21 = cir.binop(div, %19, %20) : !u64i loc(#loc149)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc33)
            %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc150)
            %25 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc35)
            %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc36)
            cir.store %17, %26 : !s8i, !cir.ptr<!s8i> loc(#loc151)
            %27 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc152)
            cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc39)
            %29 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
            %30 = cir.load %29 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc40)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc153)
            cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc42)
          } loc(#loc140)
          cir.break loc(#loc43)
        } loc(#loc10)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc45)
          cir.break loc(#loc46)
        } loc(#loc44)
        cir.yield loc(#loc7)
      } loc(#loc7)
    } loc(#loc139)
    cir.return loc(#loc6)
  } loc(#loc138)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc155)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc154)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc57)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc60)
          cir.break loc(#loc61)
        } loc(#loc58)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc160)
            %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc67)
            %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc67)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
            %5 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
            cir.store %4, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc161)
            %6 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
            %7 = cir.load %6 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc69)
            %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc71)
            %9 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc163)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
            %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc74)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc74)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc164)
            cir.libc.memmove %15 bytes from %14 to %11 : !cir.ptr<!void>, !u64i loc(#loc165)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
            %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc79)
            %18 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %19 = cir.const #cir.int<16> : !u64i loc(#loc166)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc167)
            %21 = cir.binop(div, %19, %20) : !u64i loc(#loc168)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc84)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc84)
            %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc169)
            %25 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
            %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc87)
            cir.store %17, %26 : !s8i, !cir.ptr<!s8i> loc(#loc170)
            %27 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc171)
            cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc90)
            %29 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
            %30 = cir.load %29 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc91)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
            cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc93)
          } loc(#loc159)
          cir.break loc(#loc94)
        } loc(#loc62)
        cir.yield loc(#loc55)
      } loc(#loc55)
    } loc(#loc158)
    cir.return loc(#loc54)
  } loc(#loc157)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc99)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc176)
            %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc105)
            %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc105)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
            %5 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
            cir.store %4, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc177)
            %6 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
            %7 = cir.load %6 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc107)
            %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc109)
            %9 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc179)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
            %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc112)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc112)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc180)
            cir.libc.memmove %15 bytes from %14 to %11 : !cir.ptr<!void>, !u64i loc(#loc181)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc117)
            %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc117)
            %18 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %19 = cir.const #cir.int<16> : !u64i loc(#loc182)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc183)
            %21 = cir.binop(div, %19, %20) : !u64i loc(#loc184)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc122)
            %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc185)
            %25 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc124)
            %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc125)
            cir.store %17, %26 : !s8i, !cir.ptr<!s8i> loc(#loc186)
            %27 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc187)
            cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc128)
            %29 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
            %30 = cir.load %29 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc129)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc188)
            cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc131)
          } loc(#loc175)
          cir.break loc(#loc132)
        } loc(#loc100)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc135)
          cir.break loc(#loc136)
        } loc(#loc133)
        cir.yield loc(#loc97)
      } loc(#loc97)
    } loc(#loc174)
    cir.return loc(#loc96)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":41:45)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":53:19)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":34:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":56:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":36:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":55:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":36:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":38:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":39:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":49:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":40:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":40:18)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":28:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":41:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":43:42)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":43:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":43:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":27:10)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:17)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:32)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:43)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:52)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:73)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:74)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:87)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:35)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:66)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:68)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:79)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:82)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":47:27)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":47:42)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":47:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":48:42)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":48:27)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":48:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":50:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":51:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":53:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":54:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":112:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":116:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":114:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":114:11)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":115:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":115:11)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":63:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":85:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":65:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":84:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":65:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":67:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":69:19)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":69:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":70:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":71:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":72:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":82:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":73:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":73:18)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":74:45)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":74:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":76:42)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":76:27)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":76:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:17)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:32)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:43)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:52)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:83)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:84)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:87)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:35)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:66)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:68)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:79)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:82)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:34)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:24)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":80:27)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":80:42)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":80:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":81:42)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":81:27)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":81:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":83:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":88:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":110:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":90:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":109:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":90:12)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":92:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":93:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":103:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":94:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":94:18)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":95:45)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":95:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":97:42)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":97:27)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":97:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:17)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:32)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:43)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:52)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:83)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:84)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:87)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:35)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:66)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:68)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:79)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:82)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:34)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:24)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":101:27)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":101:42)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":101:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":102:42)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":102:27)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":102:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":104:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":105:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":107:19)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":107:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":108:9)
#loc137 = loc(fused[#loc2, #loc3])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc7, #loc8])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc16, #loc1])
#loc143 = loc(fused[#loc18, #loc17])
#loc144 = loc(fused[#loc21, #loc22])
#loc145 = loc(fused[#loc24, #loc25])
#loc146 = loc(fused[#loc26, #loc27])
#loc147 = loc(fused[#loc29, #loc30])
#loc148 = loc(fused[#loc31, #loc32])
#loc149 = loc(fused[#loc29, #loc32])
#loc150 = loc(fused[#loc34, #loc33])
#loc151 = loc(fused[#loc35, #loc28])
#loc152 = loc(fused[#loc37, #loc38])
#loc153 = loc(fused[#loc41, #loc40])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc49, #loc50])
#loc156 = loc(fused[#loc51, #loc52])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc55, #loc56])
#loc159 = loc(fused[#loc63, #loc64])
#loc160 = loc(fused[#loc65, #loc66])
#loc161 = loc(fused[#loc68, #loc67])
#loc162 = loc(fused[#loc70, #loc69])
#loc163 = loc(fused[#loc72, #loc73])
#loc164 = loc(fused[#loc75, #loc76])
#loc165 = loc(fused[#loc77, #loc78])
#loc166 = loc(fused[#loc80, #loc81])
#loc167 = loc(fused[#loc82, #loc83])
#loc168 = loc(fused[#loc80, #loc83])
#loc169 = loc(fused[#loc85, #loc84])
#loc170 = loc(fused[#loc86, #loc79])
#loc171 = loc(fused[#loc88, #loc89])
#loc172 = loc(fused[#loc92, #loc91])
#loc173 = loc(fused[#loc95, #loc96])
#loc174 = loc(fused[#loc97, #loc98])
#loc175 = loc(fused[#loc101, #loc102])
#loc176 = loc(fused[#loc103, #loc104])
#loc177 = loc(fused[#loc106, #loc105])
#loc178 = loc(fused[#loc108, #loc107])
#loc179 = loc(fused[#loc110, #loc111])
#loc180 = loc(fused[#loc113, #loc114])
#loc181 = loc(fused[#loc115, #loc116])
#loc182 = loc(fused[#loc118, #loc119])
#loc183 = loc(fused[#loc120, #loc121])
#loc184 = loc(fused[#loc118, #loc121])
#loc185 = loc(fused[#loc123, #loc122])
#loc186 = loc(fused[#loc124, #loc117])
#loc187 = loc(fused[#loc126, #loc127])
#loc188 = loc(fused[#loc130, #loc129])
