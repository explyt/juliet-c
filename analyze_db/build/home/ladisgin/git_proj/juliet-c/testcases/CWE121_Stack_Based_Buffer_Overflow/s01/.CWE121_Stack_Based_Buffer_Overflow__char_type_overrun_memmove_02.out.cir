!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":114:10)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":114:14)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":114:20)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":114:32)
#loc178 = loc(fused[#loc58, #loc59])
#loc179 = loc(fused[#loc60, #loc61])
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %2 ^bb2, ^bb5 loc(#loc158)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc159)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc1)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc1)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc1)
    %6 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    cir.store %5, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc160)
    %7 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc16)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc18)
    %10 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc162)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc162)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc22)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc22)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %16 = cir.const #cir.int<32> : !u64i loc(#loc163)
    cir.libc.memmove %16 bytes from %15 to %12 : !cir.ptr<!void>, !u64i loc(#loc164)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc27)
    %19 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc165)
    %21 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %22 = cir.binop(div, %20, %21) : !u64i loc(#loc167)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc32)
    %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc168)
    %26 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc34)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %18, %27 : !s8i, !cir.ptr<!s8i> loc(#loc169)
    %28 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    %30 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc39)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb4 loc(#loc13)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc9)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc9)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc5)
  } loc(#loc155)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc172)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc175)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc65)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.return %17 : !s32i loc(#loc182)
  } loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb6 loc(#loc85)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc187)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc90)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc90)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %8 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc188)
    %9 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc92)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %12 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc190)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc190)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc97)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc97)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %18 = cir.const #cir.int<16> : !u64i loc(#loc191)
    cir.libc.memmove %18 bytes from %17 to %14 : !cir.ptr<!void>, !u64i loc(#loc192)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc102)
    %21 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc193)
    %23 = cir.const #cir.int<1> : !u64i loc(#loc194)
    %24 = cir.binop(div, %22, %23) : !u64i loc(#loc195)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc107)
    %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc196)
    %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc109)
    %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc197)
    %30 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc198)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %32 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc114)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb5 loc(#loc89)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc82)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc82)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc78)
  } loc(#loc183)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc123)
    cir.brcond %2 ^bb2, ^bb5 loc(#loc203)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc204)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc127)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc127)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
    %6 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    cir.store %5, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc205)
    %7 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc129)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %10 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc207)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc207)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc134)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc134)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
    %16 = cir.const #cir.int<16> : !u64i loc(#loc208)
    cir.libc.memmove %16 bytes from %15 to %12 : !cir.ptr<!void>, !u64i loc(#loc209)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc139)
    %19 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc210)
    %21 = cir.const #cir.int<1> : !u64i loc(#loc211)
    %22 = cir.binop(div, %20, %21) : !u64i loc(#loc212)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc144)
    %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc213)
    %26 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc146)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc147)
    cir.store %18, %27 : !s8i, !cir.ptr<!s8i> loc(#loc214)
    %28 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc215)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    %30 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc151)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc216)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.br ^bb4 loc(#loc126)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc122)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc122)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc118)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":40:49)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":34:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":50:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":39:13)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":39:22)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":36:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":49:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":36:8)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":37:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":38:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":48:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":28:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":40:13)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":42:46)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":42:31)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":42:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":27:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":44:21)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":44:36)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":44:47)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":44:56)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":44:77)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":44:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":44:78)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":45:91)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":45:39)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":45:70)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":45:72)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":45:83)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":45:86)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":45:38)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":45:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":45:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":46:31)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":46:46)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":46:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":47:46)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":47:31)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":47:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":99:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":103:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":101:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":101:11)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":102:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":102:11)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":119:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":121:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":124:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":126:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":114:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":129:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":115:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":117:27)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":117:22)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":117:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":119:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":120:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":120:75)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":121:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":124:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":125:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":125:74)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":126:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":128:12)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":128:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":62:19)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":57:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":78:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":67:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":67:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":59:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":77:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":59:8)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":60:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":63:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":65:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":62:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":66:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":76:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":68:49)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":68:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":70:46)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":70:31)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":70:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":72:21)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":72:36)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":72:47)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":72:56)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":72:87)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":72:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":72:88)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":73:91)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":73:39)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":73:70)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":73:72)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":73:83)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":73:86)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":73:38)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":73:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":73:28)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":74:31)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":74:46)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":74:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":75:46)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":75:31)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":75:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":81:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":97:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":86:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":86:22)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":83:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":96:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":83:8)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":84:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":85:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":95:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":87:49)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":87:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":89:46)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":89:31)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":89:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":91:21)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":91:36)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":91:47)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":91:56)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":91:87)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":91:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":91:88)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":92:91)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":92:39)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":92:70)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":92:72)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":92:83)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":92:86)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":92:38)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":92:13)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":92:28)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":93:31)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":93:46)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":93:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":94:46)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":94:31)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c":94:13)
#loc154 = loc(fused[#loc2, #loc3])
#loc155 = loc(fused[#loc4, #loc5])
#loc156 = loc(fused[#loc6, #loc7])
#loc157 = loc(fused[#loc8, #loc9])
#loc158 = loc(fused[#loc11, #loc9])
#loc159 = loc(fused[#loc12, #loc13])
#loc160 = loc(fused[#loc15, #loc1])
#loc161 = loc(fused[#loc17, #loc16])
#loc162 = loc(fused[#loc20, #loc21])
#loc163 = loc(fused[#loc23, #loc24])
#loc164 = loc(fused[#loc25, #loc26])
#loc165 = loc(fused[#loc28, #loc29])
#loc166 = loc(fused[#loc30, #loc31])
#loc167 = loc(fused[#loc28, #loc31])
#loc168 = loc(fused[#loc33, #loc32])
#loc169 = loc(fused[#loc34, #loc27])
#loc170 = loc(fused[#loc36, #loc37])
#loc171 = loc(fused[#loc40, #loc39])
#loc172 = loc(fused[#loc42, #loc43])
#loc173 = loc(fused[#loc44, #loc45])
#loc174 = loc(fused[#loc46, #loc47])
#loc175 = loc(fused[#loc48, #loc49])
#loc176 = loc(fused[#loc50, #loc51])
#loc177 = loc(fused[#loc56, #loc57])
#loc180 = loc(fused[#loc67, #loc68])
#loc181 = loc(fused[#loc71, #loc72])
#loc182 = loc(fused[#loc75, #loc74])
#loc183 = loc(fused[#loc77, #loc78])
#loc184 = loc(fused[#loc79, #loc80])
#loc185 = loc(fused[#loc81, #loc82])
#loc186 = loc(fused[#loc84, #loc85, #loc86, #loc82])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc91, #loc90])
#loc189 = loc(fused[#loc93, #loc92])
#loc190 = loc(fused[#loc95, #loc96])
#loc191 = loc(fused[#loc98, #loc99])
#loc192 = loc(fused[#loc100, #loc101])
#loc193 = loc(fused[#loc103, #loc104])
#loc194 = loc(fused[#loc105, #loc106])
#loc195 = loc(fused[#loc103, #loc106])
#loc196 = loc(fused[#loc108, #loc107])
#loc197 = loc(fused[#loc109, #loc102])
#loc198 = loc(fused[#loc111, #loc112])
#loc199 = loc(fused[#loc115, #loc114])
#loc200 = loc(fused[#loc117, #loc118])
#loc201 = loc(fused[#loc119, #loc120])
#loc202 = loc(fused[#loc121, #loc122])
#loc203 = loc(fused[#loc124, #loc122])
#loc204 = loc(fused[#loc125, #loc126])
#loc205 = loc(fused[#loc128, #loc127])
#loc206 = loc(fused[#loc130, #loc129])
#loc207 = loc(fused[#loc132, #loc133])
#loc208 = loc(fused[#loc135, #loc136])
#loc209 = loc(fused[#loc137, #loc138])
#loc210 = loc(fused[#loc140, #loc141])
#loc211 = loc(fused[#loc142, #loc143])
#loc212 = loc(fused[#loc140, #loc143])
#loc213 = loc(fused[#loc145, #loc144])
#loc214 = loc(fused[#loc146, #loc139])
#loc215 = loc(fused[#loc148, #loc149])
#loc216 = loc(fused[#loc152, #loc151])
