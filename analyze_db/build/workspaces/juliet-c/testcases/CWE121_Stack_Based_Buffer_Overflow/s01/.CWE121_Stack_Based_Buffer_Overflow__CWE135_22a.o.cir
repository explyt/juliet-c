!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<[#cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 43> {alignment = 4 : i64} loc(#loc3)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_badSink(!cir.ptr<!void>) loc(#loc74)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc76)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc77)
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc3)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc3)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc3)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc78)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %6 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_badGlobal : !cir.ptr<!s32i> loc(#loc73)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc15)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_badSink(%7) : (!cir.ptr<!void>) -> () loc(#loc16)
    cir.return loc(#loc7)
  } loc(#loc75)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodB2G1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc80)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodB2G2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc81)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodG2BGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc82)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc85)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc24)
  } loc(#loc83)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodB2G1Sink(!cir.ptr<!void>) loc(#loc87)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc89)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc90)
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc39)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc39)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc39)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc91)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %6 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc80)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc43)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodB2G1Sink(%7) : (!cir.ptr<!void>) -> () loc(#loc44)
    cir.return loc(#loc34)
  } loc(#loc88)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodB2G2Sink(!cir.ptr<!void>) loc(#loc93)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc95)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc96)
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc53)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc53)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc53)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc97)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %6 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc81)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc57)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodB2G2Sink(%7) : (!cir.ptr<!void>) -> () loc(#loc58)
    cir.return loc(#loc48)
  } loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\00" : !cir.array<!s8i x 43>> : !cir.array<!s8i x 43> {alignment = 1 : i64} loc(#loc59)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodG2BSink(!cir.ptr<!void>) loc(#loc99)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc102)
    %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 43>> loc(#loc59)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 43>>), !cir.ptr<!s8i> loc(#loc59)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc103)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %6 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc82)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc71)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_22_goodG2BSink(%7) : (!cir.ptr<!void>) -> () loc(#loc72)
    cir.return loc(#loc63)
  } loc(#loc100)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":28:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":28:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":37:20)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":30:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":30:71)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":32:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":40:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":34:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":34:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":35:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":35:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":37:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":38:63)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":38:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":39:59)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":39:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":47:1)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":47:68)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":48:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":48:68)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":49:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":49:67)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":90:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":95:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":92:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":92:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":93:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":93:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":94:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":94:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":52:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":52:76)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":54:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":62:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":56:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":56:12)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":57:12)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":57:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":59:20)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":59:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":60:68)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":60:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":61:64)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":61:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":65:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":65:76)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":67:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":75:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":69:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":69:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":70:12)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":70:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":72:20)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":72:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":73:68)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":73:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":74:64)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":74:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":85:20)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":78:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":78:75)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":80:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":88:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":82:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":82:12)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":83:12)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":83:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":85:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":86:67)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":86:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":87:63)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c":87:5)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc4, #loc5])
#loc75 = loc(fused[#loc6, #loc7])
#loc76 = loc(fused[#loc8, #loc9])
#loc77 = loc(fused[#loc11, #loc10])
#loc78 = loc(fused[#loc12, #loc3])
#loc79 = loc(fused[#loc14, #loc13])
#loc80 = loc(fused[#loc17, #loc18])
#loc81 = loc(fused[#loc19, #loc20])
#loc82 = loc(fused[#loc21, #loc22])
#loc83 = loc(fused[#loc23, #loc24])
#loc84 = loc(fused[#loc25, #loc26])
#loc85 = loc(fused[#loc27, #loc28])
#loc86 = loc(fused[#loc29, #loc30])
#loc87 = loc(fused[#loc31, #loc32])
#loc88 = loc(fused[#loc33, #loc34])
#loc89 = loc(fused[#loc35, #loc36])
#loc90 = loc(fused[#loc38, #loc37])
#loc91 = loc(fused[#loc40, #loc39])
#loc92 = loc(fused[#loc42, #loc41])
#loc93 = loc(fused[#loc45, #loc46])
#loc94 = loc(fused[#loc47, #loc48])
#loc95 = loc(fused[#loc49, #loc50])
#loc96 = loc(fused[#loc52, #loc51])
#loc97 = loc(fused[#loc54, #loc53])
#loc98 = loc(fused[#loc56, #loc55])
#loc99 = loc(fused[#loc60, #loc61])
#loc100 = loc(fused[#loc62, #loc63])
#loc101 = loc(fused[#loc64, #loc65])
#loc102 = loc(fused[#loc67, #loc66])
#loc103 = loc(fused[#loc68, #loc59])
#loc104 = loc(fused[#loc70, #loc69])
