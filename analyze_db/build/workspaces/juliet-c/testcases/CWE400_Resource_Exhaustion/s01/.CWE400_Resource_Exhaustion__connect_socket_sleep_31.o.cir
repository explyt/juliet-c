!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc266)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc268)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc269)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc270)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc271)
  cir.func private @close(!s32i) -> !s32i loc(#loc272)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc273)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc274)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc279)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc280)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc281)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc282)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc35)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc281)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc42)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc44)
            %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
            cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc285)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc50)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc51)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc51)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc287)
              cir.if %54 {
                cir.break loc(#loc53)
              } loc(#loc288)
            } loc(#loc286)
            %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc289)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc56)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc290)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc291)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc61)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc61)
            %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc292)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc64)
            %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc293)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc69)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc69)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc70)
            %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc294)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc76)
              %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc296)
              %53 = cir.const #cir.int<16> : !u64i loc(#loc297)
              %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc297)
              %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc81)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc82)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc82)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc298)
              cir.if %58 {
                cir.break loc(#loc84)
              } loc(#loc299)
            } loc(#loc295)
            %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc86)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc87)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc87)
            %33 = cir.const #cir.int<4> : !u64i loc(#loc87)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc87)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc87)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc87)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc87)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc88)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc300)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc89)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc90)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc90)
            cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc301)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc96)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc303)
              %55 = cir.ternary(%54, true {
                %56 = cir.const #true loc(#loc97)
                cir.yield %56 : !cir.bool loc(#loc97)
              }, false {
                %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc99)
                %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc304)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc97)
                  cir.yield %60 : !cir.bool loc(#loc97)
                }, false {
                  %60 = cir.const #false loc(#loc97)
                  cir.yield %60 : !cir.bool loc(#loc97)
                }) : (!cir.bool) -> !cir.bool loc(#loc97)
                cir.yield %59 : !cir.bool loc(#loc97)
              }) : (!cir.bool) -> !cir.bool loc(#loc97)
              cir.if %55 {
                cir.break loc(#loc101)
              } loc(#loc305)
            } loc(#loc302)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc102)
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
            %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc104)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc306)
            %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
            %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc106)
            cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
          } loc(#loc284)
          cir.yield loc(#loc39)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc109)
          cir.condition(%10) loc(#loc109)
        } loc(#loc283)
      } loc(#loc283)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc113)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc309)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc116)
        } loc(#loc310)
      } loc(#loc308)
    } loc(#loc278)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc312)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc313)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc312)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc313)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc123)
      %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc124)
      %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc20)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc20)
      cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    } loc(#loc311)
    cir.return loc(#loc22)
  } loc(#loc275)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc315)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc128)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc316)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc130)
    cir.return loc(#loc127)
  } loc(#loc314)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc137)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc139)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc322)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc323)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc322)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc323)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc147)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc147)
      %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc148)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc149)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc149)
      cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    } loc(#loc321)
    cir.return loc(#loc133)
  } loc(#loc317)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc152)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc325)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc158)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc328)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc329)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc330)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc331)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc167)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc167)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc330)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc174)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc175)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc176)
            %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc177)
            cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc334)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc182)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc183)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc183)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc336)
              cir.if %54 {
                cir.break loc(#loc185)
              } loc(#loc337)
            } loc(#loc335)
            %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc338)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc188)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc339)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc340)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc193)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc193)
            %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc341)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc195)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc195)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc196)
            %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc342)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc199)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc199)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc200)
            %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc343)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc205)
              %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc345)
              %53 = cir.const #cir.int<16> : !u64i loc(#loc346)
              %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc346)
              %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc210)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc211)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc211)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc347)
              cir.if %58 {
                cir.break loc(#loc213)
              } loc(#loc348)
            } loc(#loc344)
            %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc214)
            %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc215)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc215)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc216)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc216)
            %33 = cir.const #cir.int<4> : !u64i loc(#loc216)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc216)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc216)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc216)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc216)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc217)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc217)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc349)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc218)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc219)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc219)
            cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc350)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc224)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc225)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc225)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc352)
              %55 = cir.ternary(%54, true {
                %56 = cir.const #true loc(#loc226)
                cir.yield %56 : !cir.bool loc(#loc226)
              }, false {
                %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc228)
                %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc353)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc226)
                  cir.yield %60 : !cir.bool loc(#loc226)
                }, false {
                  %60 = cir.const #false loc(#loc226)
                  cir.yield %60 : !cir.bool loc(#loc226)
                }) : (!cir.bool) -> !cir.bool loc(#loc226)
                cir.yield %59 : !cir.bool loc(#loc226)
              }) : (!cir.bool) -> !cir.bool loc(#loc226)
              cir.if %55 {
                cir.break loc(#loc230)
              } loc(#loc354)
            } loc(#loc351)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc231)
            %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc231)
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc232)
            %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc233)
            %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc233)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc355)
            %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc234)
            %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc235)
            cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
          } loc(#loc333)
          cir.yield loc(#loc171)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc238)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc238)
          cir.condition(%10) loc(#loc238)
        } loc(#loc332)
      } loc(#loc332)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc241)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc242)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc242)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc358)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc244)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc245)
        } loc(#loc359)
      } loc(#loc357)
    } loc(#loc327)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc361)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc362)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc361)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc251)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc362)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc254)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc255)
        %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc364)
        %10 = cir.ternary(%9, true {
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc257)
          %12 = cir.const #cir.int<2000> : !s32i loc(#loc258)
          %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc365)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc256)
            cir.yield %15 : !cir.bool loc(#loc256)
          }, false {
            %15 = cir.const #false loc(#loc256)
            cir.yield %15 : !cir.bool loc(#loc256)
          }) : (!cir.bool) -> !cir.bool loc(#loc256)
          cir.yield %14 : !cir.bool loc(#loc256)
        }, false {
          %11 = cir.const #false loc(#loc256)
          cir.yield %11 : !cir.bool loc(#loc256)
        }) : (!cir.bool) -> !cir.bool loc(#loc256)
        cir.if %10 {
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc262)
          %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc262)
          %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc263)
          %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc151)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc151)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc264)
        } else {
          %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc152)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc152)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc265)
        } loc(#loc366)
      } loc(#loc363)
    } loc(#loc360)
    cir.return loc(#loc154)
  } loc(#loc324)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":81:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/unistd.h":480:1)
#loc17 = loc("/usr/include/unistd.h":480:43)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":116:19)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":50:1)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":118:1)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":52:5)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":52:9)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":54:14)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":54:13)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":54:5)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":55:5)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":110:5)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":60:9)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":60:13)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":61:9)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":61:28)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":62:9)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":62:32)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":63:9)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":63:41)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":64:9)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":99:17)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":65:9)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":98:9)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:36)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:45)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:58)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:29)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:13)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:69)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":75:13)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":78:13)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":75:17)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":75:34)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":76:13)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":77:17)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:20)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:21)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:30)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:33)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:47)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:13)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:48)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":80:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":80:13)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":81:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":81:13)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":81:59)
#loc69 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":82:38)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":82:32)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":82:13)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":82:46)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:13)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":86:13)
#loc76 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:25)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:58)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:59)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:68)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:82)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:17)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:88)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":84:13)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":85:17)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:31)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:46)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:59)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:77)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:80)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:26)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:13)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:81)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:13)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":93:13)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:17)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:31)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:44)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:47)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:61)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":91:13)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":92:17)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":95:39)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":95:25)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":95:13)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":97:26)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":97:21)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":97:13)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":97:37)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":99:16)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":100:9)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":103:9)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":100:13)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":100:30)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":101:9)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":102:26)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":102:13)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":111:5)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":117:5)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":112:9)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":112:25)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":113:9)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":113:21)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":115:15)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":115:9)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":116:9)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":219:1)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":223:1)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":221:5)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":221:13)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":222:5)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":222:13)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":125:1)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":139:1)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":127:5)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":127:9)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":129:14)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":129:13)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":129:5)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":131:13)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":131:5)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":132:5)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":138:5)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":133:9)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":133:25)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":134:9)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":134:21)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":136:15)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":136:9)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":137:19)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":137:9)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":210:23)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":214:23)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":142:1)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":217:1)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":144:5)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":144:9)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":146:14)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":146:13)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":146:5)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":147:5)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":202:5)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":152:9)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":152:13)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":153:9)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":153:28)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":154:9)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":154:32)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":155:9)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":155:41)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":156:9)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":191:17)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":157:9)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":190:9)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:36)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:45)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:58)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:29)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:13)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:69)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":167:13)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":170:13)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":167:17)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":167:34)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":168:13)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":169:17)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:20)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:21)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:30)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:33)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:47)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:13)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:48)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":172:34)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":172:13)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":173:49)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":173:39)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":173:13)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":173:59)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":174:38)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":174:32)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":174:13)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":174:46)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:13)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":178:13)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:25)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:58)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:59)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:68)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:82)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:17)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:88)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":176:13)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":177:17)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:31)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:46)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:59)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:77)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:80)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:26)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:13)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:81)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:13)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":185:13)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:17)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:31)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:44)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:47)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:61)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":183:13)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":184:17)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":187:39)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":187:25)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":187:13)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":189:26)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":189:21)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":189:13)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":189:37)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":191:16)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":192:9)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":195:9)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":192:13)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":192:30)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":193:9)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":194:26)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":194:13)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":203:5)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":216:5)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":204:9)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":204:25)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":205:9)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":205:21)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:9)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":215:9)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:13)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:21)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:23)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:26)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:35)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":208:9)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":211:9)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":213:9)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":209:19)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":209:13)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":210:13)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":214:13)
#loc266 = loc(fused[#loc1, #loc2])
#loc267 = loc(fused[#loc3, #loc4])
#loc268 = loc(fused[#loc6, #loc7])
#loc269 = loc(fused[#loc8, #loc9])
#loc270 = loc(fused[#loc10, #loc11])
#loc271 = loc(fused[#loc12, #loc13])
#loc272 = loc(fused[#loc14, #loc15])
#loc273 = loc(fused[#loc16, #loc17])
#loc274 = loc(fused[#loc18, #loc19])
#loc275 = loc(fused[#loc21, #loc22])
#loc276 = loc(fused[#loc23, #loc24])
#loc277 = loc(fused[#loc27, #loc25])
#loc278 = loc(fused[#loc28, #loc29])
#loc279 = loc(fused[#loc30, #loc31])
#loc280 = loc(fused[#loc32, #loc33])
#loc281 = loc(fused[#loc34, #loc35])
#loc282 = loc(fused[#loc36, #loc37])
#loc283 = loc(fused[#loc38, #loc39])
#loc284 = loc(fused[#loc40, #loc41])
#loc285 = loc(fused[#loc46, #loc47])
#loc286 = loc(fused[#loc48, #loc49])
#loc287 = loc(fused[#loc50, #loc51])
#loc288 = loc(fused[#loc52, #loc49])
#loc289 = loc(fused[#loc54, #loc55])
#loc290 = loc(fused[#loc57, #loc58])
#loc291 = loc(fused[#loc59, #loc60])
#loc292 = loc(fused[#loc63, #loc61])
#loc293 = loc(fused[#loc67, #loc68])
#loc294 = loc(fused[#loc72, #loc73])
#loc295 = loc(fused[#loc74, #loc75])
#loc296 = loc(fused[#loc77, #loc78])
#loc297 = loc(fused[#loc79, #loc80])
#loc298 = loc(fused[#loc81, #loc82])
#loc299 = loc(fused[#loc83, #loc75])
#loc300 = loc(fused[#loc87, #loc88])
#loc301 = loc(fused[#loc91, #loc92])
#loc302 = loc(fused[#loc93, #loc94])
#loc303 = loc(fused[#loc95, #loc96])
#loc304 = loc(fused[#loc98, #loc99])
#loc305 = loc(fused[#loc100, #loc94])
#loc306 = loc(fused[#loc104, #loc102])
#loc307 = loc(fused[#loc107, #loc108])
#loc308 = loc(fused[#loc110, #loc111])
#loc309 = loc(fused[#loc112, #loc113])
#loc310 = loc(fused[#loc114, #loc111])
#loc311 = loc(fused[#loc117, #loc118])
#loc312 = loc(fused[#loc119, #loc120])
#loc313 = loc(fused[#loc121, #loc122])
#loc314 = loc(fused[#loc126, #loc127])
#loc315 = loc(fused[#loc128, #loc129])
#loc316 = loc(fused[#loc130, #loc131])
#loc317 = loc(fused[#loc132, #loc133])
#loc318 = loc(fused[#loc134, #loc135])
#loc319 = loc(fused[#loc138, #loc136])
#loc320 = loc(fused[#loc140, #loc139])
#loc321 = loc(fused[#loc141, #loc142])
#loc322 = loc(fused[#loc143, #loc144])
#loc323 = loc(fused[#loc145, #loc146])
#loc324 = loc(fused[#loc153, #loc154])
#loc325 = loc(fused[#loc155, #loc156])
#loc326 = loc(fused[#loc159, #loc157])
#loc327 = loc(fused[#loc160, #loc161])
#loc328 = loc(fused[#loc162, #loc163])
#loc329 = loc(fused[#loc164, #loc165])
#loc330 = loc(fused[#loc166, #loc167])
#loc331 = loc(fused[#loc168, #loc169])
#loc332 = loc(fused[#loc170, #loc171])
#loc333 = loc(fused[#loc172, #loc173])
#loc334 = loc(fused[#loc178, #loc179])
#loc335 = loc(fused[#loc180, #loc181])
#loc336 = loc(fused[#loc182, #loc183])
#loc337 = loc(fused[#loc184, #loc181])
#loc338 = loc(fused[#loc186, #loc187])
#loc339 = loc(fused[#loc189, #loc190])
#loc340 = loc(fused[#loc191, #loc192])
#loc341 = loc(fused[#loc194, #loc193])
#loc342 = loc(fused[#loc197, #loc198])
#loc343 = loc(fused[#loc201, #loc202])
#loc344 = loc(fused[#loc203, #loc204])
#loc345 = loc(fused[#loc206, #loc207])
#loc346 = loc(fused[#loc208, #loc209])
#loc347 = loc(fused[#loc210, #loc211])
#loc348 = loc(fused[#loc212, #loc204])
#loc349 = loc(fused[#loc216, #loc217])
#loc350 = loc(fused[#loc220, #loc221])
#loc351 = loc(fused[#loc222, #loc223])
#loc352 = loc(fused[#loc224, #loc225])
#loc353 = loc(fused[#loc227, #loc228])
#loc354 = loc(fused[#loc229, #loc223])
#loc355 = loc(fused[#loc233, #loc231])
#loc356 = loc(fused[#loc236, #loc237])
#loc357 = loc(fused[#loc239, #loc240])
#loc358 = loc(fused[#loc241, #loc242])
#loc359 = loc(fused[#loc243, #loc240])
#loc360 = loc(fused[#loc246, #loc247])
#loc361 = loc(fused[#loc248, #loc249])
#loc362 = loc(fused[#loc250, #loc251])
#loc363 = loc(fused[#loc252, #loc253])
#loc364 = loc(fused[#loc254, #loc255])
#loc365 = loc(fused[#loc257, #loc258])
#loc366 = loc(fused[#loc259, #loc260, #loc261, #loc253])
