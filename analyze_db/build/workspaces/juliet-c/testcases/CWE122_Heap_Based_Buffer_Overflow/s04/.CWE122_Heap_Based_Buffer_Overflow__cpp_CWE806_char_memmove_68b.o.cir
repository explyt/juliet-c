!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s04/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68_badData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc55)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc57)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_687badSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc59)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc61)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc61)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc61)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc15)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc17)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc17)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc62)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc63)
      cir.libc.memmove %13 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc64)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc23)
      %15 = cir.const #cir.int<50> : !s32i loc(#loc24)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc25)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc24)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc26)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc26)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc65)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc28)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      cir.delete.array %21 : <!s8i> loc(#loc29)
    } loc(#loc60)
    cir.return loc(#loc8)
  } loc(#loc58)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68_goodG2BData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc66)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_6811goodG2BSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc68)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc70)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc70)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc70)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc40)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc42)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc42)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc71)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc72)
      cir.libc.memmove %13 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc73)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc48)
      %15 = cir.const #cir.int<50> : !s32i loc(#loc49)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc49)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc51)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc51)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc74)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      cir.delete.array %21 : <!s8i> loc(#loc54)
    } loc(#loc69)
    cir.return loc(#loc33)
  } loc(#loc67)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s04/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":21:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":21:15)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":31:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":42:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":33:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":33:19)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":34:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":41:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":35:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":35:25)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":37:17)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":37:23)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":37:29)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":37:36)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":37:42)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":37:53)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":37:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":37:54)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":38:22)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":38:14)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":38:17)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":38:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":39:19)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":39:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":40:19)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":22:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":22:15)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":49:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":60:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":51:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":51:19)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":52:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":59:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":53:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":53:25)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":55:17)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":55:23)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":55:29)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":55:36)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":55:42)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":55:53)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":55:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":55:54)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":56:22)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":56:14)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":56:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":56:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":57:19)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":57:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE806_char_memmove_68b.cpp":58:19)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc3, #loc4])
#loc57 = loc(fused[#loc5, #loc6])
#loc58 = loc(fused[#loc7, #loc8])
#loc59 = loc(fused[#loc9, #loc10])
#loc60 = loc(fused[#loc11, #loc12])
#loc61 = loc(fused[#loc13, #loc14])
#loc62 = loc(fused[#loc19, #loc20])
#loc63 = loc(fused[#loc17, #loc20])
#loc64 = loc(fused[#loc21, #loc22])
#loc65 = loc(fused[#loc26, #loc23])
#loc66 = loc(fused[#loc30, #loc31])
#loc67 = loc(fused[#loc32, #loc33])
#loc68 = loc(fused[#loc34, #loc35])
#loc69 = loc(fused[#loc36, #loc37])
#loc70 = loc(fused[#loc38, #loc39])
#loc71 = loc(fused[#loc44, #loc45])
#loc72 = loc(fused[#loc42, #loc45])
#loc73 = loc(fused[#loc46, #loc47])
#loc74 = loc(fused[#loc51, #loc48])
