!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc147)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc148)
  cir.func private @CWE416_Use_After_Free__malloc_free_int_64b_badSink(!cir.ptr<!void>) loc(#loc149)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int_64_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc152)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc153)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc154)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc155)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc156)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc24)
      %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc158)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc26)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc28)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc159)
    } loc(#loc157)
    cir.scope {
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc161)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc35)
        cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc163)
        cir.for : cond {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc38)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc38)
          %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc164)
          cir.condition(%19) loc(#loc39)
        } body {
          cir.scope {
            %16 = cir.const #cir.int<5> : !s32i loc(#loc41)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
            %18 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc44)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc166)
          } loc(#loc165)
          cir.yield loc(#loc34)
        } step {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc45)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc46)
          cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc167)
          cir.yield loc(#loc162)
        } loc(#loc162)
      } loc(#loc162)
    } loc(#loc160)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc47)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    %12 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc168)
    cir.call @CWE416_Use_After_Free__malloc_free_int_64b_badSink(%12) : (!cir.ptr<!void>) -> () loc(#loc51)
    cir.return loc(#loc10)
  } loc(#loc150)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int_64_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc170)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc171)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc169)
  cir.func private @CWE416_Use_After_Free__malloc_free_int_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc172)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc64)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc175)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc66)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc67)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc176)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc177)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc178)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc75)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc181)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc77)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc79)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
      } loc(#loc182)
    } loc(#loc180)
    cir.scope {
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc184)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc86)
        cir.store %12, %10 : !u64i, !cir.ptr<!u64i> loc(#loc186)
        cir.for : cond {
          %13 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc88)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc89)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc89)
          %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc187)
          cir.condition(%16) loc(#loc90)
        } body {
          cir.scope {
            %13 = cir.const #cir.int<5> : !s32i loc(#loc92)
            %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
            %15 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc94)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc95)
            cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc189)
          } loc(#loc188)
          cir.yield loc(#loc85)
        } step {
          %13 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc96)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc97)
          cir.store %14, %10 : !u64i, !cir.ptr<!u64i> loc(#loc190)
          cir.yield loc(#loc185)
        } loc(#loc185)
      } loc(#loc185)
    } loc(#loc183)
    %9 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc191)
    cir.call @CWE416_Use_After_Free__malloc_free_int_64b_goodG2BSink(%9) : (!cir.ptr<!void>) -> () loc(#loc100)
    cir.return loc(#loc61)
  } loc(#loc173)
  cir.func private @CWE416_Use_After_Free__malloc_free_int_64b_goodB2GSink(!cir.ptr<!void>) loc(#loc192)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc107)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc109)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc110)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc196)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc197)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc198)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc199)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc118)
      %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc201)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc120)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc122)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
      } loc(#loc202)
    } loc(#loc200)
    cir.scope {
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc204)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc129)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc129)
        cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc206)
        cir.for : cond {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc131)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc132)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc132)
          %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc207)
          cir.condition(%19) loc(#loc133)
        } body {
          cir.scope {
            %16 = cir.const #cir.int<5> : !s32i loc(#loc135)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
            %18 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc137)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc138)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc209)
          } loc(#loc208)
          cir.yield loc(#loc128)
        } step {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc139)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc140)
          cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc210)
          cir.yield loc(#loc205)
        } loc(#loc205)
      } loc(#loc205)
    } loc(#loc203)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc141)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc142)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc142)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc141)
    %12 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc211)
    cir.call @CWE416_Use_After_Free__malloc_free_int_64b_goodB2GSink(%12) : (!cir.ptr<!void>) -> () loc(#loc145)
    cir.return loc(#loc104)
  } loc(#loc193)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int_64a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":25:1)
#loc8 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":25:75)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":27:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":44:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":29:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":29:11)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":31:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":31:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":32:19)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":32:26)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":32:30)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":32:40)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":32:41)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":32:5)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":33:5)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":33:33)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":33:9)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":33:17)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":33:23)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":33:24)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":33:30)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":33:29)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":34:5)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":40:5)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":35:9)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":35:16)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":36:9)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":39:9)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":36:17)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":36:13)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":36:20)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":36:24)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":36:22)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":37:9)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":38:23)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":38:13)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":38:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":38:19)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":36:30)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":36:29)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":42:5)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":42:10)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":43:56)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":43:57)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":43:5)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":93:1)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":97:1)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":95:5)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":95:13)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":96:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":96:13)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":51:1)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":51:79)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":53:1)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":69:1)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":55:5)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":55:11)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":57:12)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":57:5)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":58:19)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":58:26)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":58:30)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":58:40)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":58:41)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":58:5)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":59:5)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":59:33)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":59:9)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":59:17)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":59:23)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":59:24)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":59:30)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":59:29)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":60:5)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":66:5)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":61:9)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":61:16)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":62:9)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":65:9)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":62:17)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":62:13)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":62:20)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":62:24)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":62:22)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":63:9)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":64:23)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":64:13)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":64:18)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":64:19)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":62:30)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":62:29)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":68:60)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":68:61)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":68:5)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":72:1)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":72:79)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":74:1)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":91:1)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":76:5)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":76:11)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":78:12)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":78:5)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":79:19)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":79:26)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":79:30)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":79:40)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":79:41)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":79:5)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":80:5)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":80:33)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":80:9)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":80:17)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":80:23)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":80:24)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":80:30)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":80:29)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":81:5)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":87:5)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":82:9)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":82:16)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":83:9)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":86:9)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":83:17)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":83:13)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":83:20)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":83:24)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":83:22)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":84:9)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":85:23)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":85:13)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":85:18)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":85:19)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":83:30)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":83:29)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":89:5)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":89:10)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":90:60)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":90:61)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_int_64a.c":90:5)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc14, #loc13])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc16, #loc18])
#loc155 = loc(fused[#loc15, #loc19])
#loc156 = loc(fused[#loc20, #loc19])
#loc157 = loc(fused[#loc21, #loc22])
#loc158 = loc(fused[#loc23, #loc24])
#loc159 = loc(fused[#loc25, #loc22])
#loc160 = loc(fused[#loc29, #loc30])
#loc161 = loc(fused[#loc31, #loc32])
#loc162 = loc(fused[#loc33, #loc34])
#loc163 = loc(fused[#loc36, #loc35])
#loc164 = loc(fused[#loc37, #loc38])
#loc165 = loc(fused[#loc40, #loc34])
#loc166 = loc(fused[#loc42, #loc41])
#loc167 = loc(fused[#loc46, #loc45])
#loc168 = loc(fused[#loc49, #loc50])
#loc169 = loc(fused[#loc52, #loc53])
#loc170 = loc(fused[#loc54, #loc55])
#loc171 = loc(fused[#loc56, #loc57])
#loc172 = loc(fused[#loc58, #loc59])
#loc173 = loc(fused[#loc60, #loc61])
#loc174 = loc(fused[#loc62, #loc63])
#loc175 = loc(fused[#loc65, #loc64])
#loc176 = loc(fused[#loc68, #loc69])
#loc177 = loc(fused[#loc67, #loc69])
#loc178 = loc(fused[#loc66, #loc70])
#loc179 = loc(fused[#loc71, #loc70])
#loc180 = loc(fused[#loc72, #loc73])
#loc181 = loc(fused[#loc74, #loc75])
#loc182 = loc(fused[#loc76, #loc73])
#loc183 = loc(fused[#loc80, #loc81])
#loc184 = loc(fused[#loc82, #loc83])
#loc185 = loc(fused[#loc84, #loc85])
#loc186 = loc(fused[#loc87, #loc86])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc91, #loc85])
#loc189 = loc(fused[#loc93, #loc92])
#loc190 = loc(fused[#loc97, #loc96])
#loc191 = loc(fused[#loc98, #loc99])
#loc192 = loc(fused[#loc101, #loc102])
#loc193 = loc(fused[#loc103, #loc104])
#loc194 = loc(fused[#loc105, #loc106])
#loc195 = loc(fused[#loc108, #loc107])
#loc196 = loc(fused[#loc111, #loc112])
#loc197 = loc(fused[#loc110, #loc112])
#loc198 = loc(fused[#loc109, #loc113])
#loc199 = loc(fused[#loc114, #loc113])
#loc200 = loc(fused[#loc115, #loc116])
#loc201 = loc(fused[#loc117, #loc118])
#loc202 = loc(fused[#loc119, #loc116])
#loc203 = loc(fused[#loc123, #loc124])
#loc204 = loc(fused[#loc125, #loc126])
#loc205 = loc(fused[#loc127, #loc128])
#loc206 = loc(fused[#loc130, #loc129])
#loc207 = loc(fused[#loc131, #loc132])
#loc208 = loc(fused[#loc134, #loc128])
#loc209 = loc(fused[#loc136, #loc135])
#loc210 = loc(fused[#loc140, #loc139])
#loc211 = loc(fused[#loc143, #loc144])
