!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":140:10)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":140:14)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":140:20)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":140:32)
#loc240 = loc(fused[#loc73, #loc74])
#loc241 = loc(fused[#loc75, #loc76])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc211)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc214)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%9) loc(#loc11)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc217)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc18)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc219)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc20)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc21)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc22)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc220)
              %14 = cir.cmp(lt, %10, %13) : !s32i, !cir.bool loc(#loc221)
              cir.condition(%14) loc(#loc24)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc26)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc28)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc29)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc223)
              } loc(#loc222)
              cir.yield loc(#loc17)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc30)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc31)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc224)
              cir.yield loc(#loc218)
            } loc(#loc218)
          } loc(#loc218)
        } loc(#loc216)
        cir.break loc(#loc32)
      } loc(#loc215)
    } loc(#loc215)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc35)
        cir.condition(%9) loc(#loc35)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc227)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc42)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc229)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc44)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc45)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc230)
              cir.condition(%12) loc(#loc46)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc49)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc50)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc48)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc51)
              } loc(#loc231)
              cir.yield loc(#loc41)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc53)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc232)
              cir.yield loc(#loc228)
            } loc(#loc228)
          } loc(#loc228)
        } loc(#loc226)
        cir.break loc(#loc54)
      } loc(#loc225)
    } loc(#loc225)
    cir.return loc(#loc4)
  } loc(#loc212)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc233)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc236)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc237)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc80)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    cir.return %17 : !s32i loc(#loc244)
  } loc(#loc239)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc95)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc95)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc95)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc95)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc95)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc95)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc95)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc247)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc99)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc99)
        cir.condition(%9) loc(#loc99)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc250)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc106)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc252)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc108)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc109)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc110)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc253)
              %14 = cir.cmp(lt, %10, %13) : !s32i, !cir.bool loc(#loc254)
              cir.condition(%14) loc(#loc112)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc117)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc256)
              } loc(#loc255)
              cir.yield loc(#loc105)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc119)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc257)
              cir.yield loc(#loc251)
            } loc(#loc251)
          } loc(#loc251)
        } loc(#loc249)
        cir.break loc(#loc120)
      } loc(#loc248)
    } loc(#loc248)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc123)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc123)
        cir.condition(%9) loc(#loc123)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc260)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc130)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc262)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc133)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc263)
              cir.condition(%12) loc(#loc134)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc137)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc139)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc265)
              } loc(#loc264)
              cir.yield loc(#loc129)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc141)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc266)
              cir.yield loc(#loc261)
            } loc(#loc261)
          } loc(#loc261)
        } loc(#loc259)
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc268)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc148)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc270)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc151)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc271)
              cir.condition(%12) loc(#loc152)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc156)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc157)
              } loc(#loc272)
              cir.yield loc(#loc147)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc159)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc273)
              cir.yield loc(#loc269)
            } loc(#loc269)
          } loc(#loc269)
        } loc(#loc267)
        cir.break loc(#loc160)
      } loc(#loc258)
    } loc(#loc258)
    cir.return loc(#loc92)
  } loc(#loc245)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc165)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc165)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc165)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc165)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc165)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc165)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc165)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc276)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc169)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc169)
        cir.condition(%9) loc(#loc169)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc279)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc176)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc281)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc179)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc282)
              cir.condition(%12) loc(#loc180)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc185)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc284)
              } loc(#loc283)
              cir.yield loc(#loc175)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc186)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc187)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc285)
              cir.yield loc(#loc280)
            } loc(#loc280)
          } loc(#loc280)
        } loc(#loc278)
        cir.break loc(#loc188)
      } loc(#loc277)
    } loc(#loc277)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc191)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc191)
        cir.condition(%9) loc(#loc191)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc288)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc198)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc290)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc200)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc201)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc291)
              cir.condition(%12) loc(#loc202)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc204)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc205)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc206)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc204)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc207)
              } loc(#loc292)
              cir.yield loc(#loc197)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc208)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc209)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc293)
              cir.yield loc(#loc289)
            } loc(#loc289)
          } loc(#loc289)
        } loc(#loc287)
        cir.break loc(#loc210)
      } loc(#loc286)
    } loc(#loc286)
    cir.return loc(#loc162)
  } loc(#loc274)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":50:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":24:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":24:11)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":25:19)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":25:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":26:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":37:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":26:11)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":29:9)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":35:9)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":30:13)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":30:17)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:13)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":34:13)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:19)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:17)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:22)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:25)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:28)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:29)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:23)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":32:13)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":33:27)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":33:17)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":33:22)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":33:23)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:33)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":31:32)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":36:9)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":38:5)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":49:5)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":38:11)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":41:9)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":47:9)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":42:13)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":42:17)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":43:13)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":46:13)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":43:19)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":43:17)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":43:22)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":43:24)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":43:23)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":44:13)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":45:30)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":45:35)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":45:36)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":45:17)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":43:29)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":43:28)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":48:9)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":125:1)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":129:1)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":127:5)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":127:13)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":128:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":128:13)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":145:15)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":147:15)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":150:15)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":152:15)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":140:1)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":155:1)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":141:1)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":143:27)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":143:22)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":143:5)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":145:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":146:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":146:81)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":147:5)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":150:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":151:5)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":151:80)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":152:5)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":154:12)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":154:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":57:1)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":92:1)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":59:5)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":59:11)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":60:19)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":60:5)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":61:5)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":72:5)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":61:11)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":64:9)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":70:9)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":65:13)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":65:17)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:13)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":69:13)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:19)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:17)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:22)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:25)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:28)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:29)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:23)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":67:13)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":68:27)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":68:17)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":68:22)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":68:23)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:33)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":66:32)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":71:9)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":73:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":91:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":73:11)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":76:9)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":82:9)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":77:13)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":77:17)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":78:13)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":81:13)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":78:19)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":78:17)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":78:22)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":78:24)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":78:23)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":79:13)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":80:27)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":80:17)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":80:22)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":80:23)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":78:29)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":78:28)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":83:9)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":89:9)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":84:13)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":84:17)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":85:13)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":88:13)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":85:19)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":85:17)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":85:22)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":85:24)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":85:23)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":86:13)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":87:30)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":87:35)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":87:36)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":87:17)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":85:29)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":85:28)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":90:9)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":95:1)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":123:1)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":97:5)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":97:11)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":98:19)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":98:5)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":99:5)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":110:5)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":99:11)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":102:9)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":108:9)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":103:13)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":103:17)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":104:13)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":107:13)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":104:19)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":104:17)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":104:22)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":104:24)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":104:23)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":105:13)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":106:27)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":106:17)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":106:22)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":106:23)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":104:29)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":104:28)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":109:9)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":111:5)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":122:5)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":111:11)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":114:9)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":120:9)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":115:13)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":115:17)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":116:13)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":119:13)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":116:19)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":116:17)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":116:22)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":116:24)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":116:23)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":117:13)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":118:30)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":118:35)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":118:36)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":118:17)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":116:29)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":116:28)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_16.c":121:9)
#loc211 = loc(fused[#loc1, #loc2])
#loc212 = loc(fused[#loc3, #loc4])
#loc213 = loc(fused[#loc5, #loc6])
#loc214 = loc(fused[#loc8, #loc7])
#loc215 = loc(fused[#loc9, #loc10])
#loc216 = loc(fused[#loc12, #loc13])
#loc217 = loc(fused[#loc14, #loc15])
#loc218 = loc(fused[#loc16, #loc17])
#loc219 = loc(fused[#loc19, #loc18])
#loc220 = loc(fused[#loc21, #loc22])
#loc221 = loc(fused[#loc20, #loc23])
#loc222 = loc(fused[#loc25, #loc17])
#loc223 = loc(fused[#loc27, #loc26])
#loc224 = loc(fused[#loc31, #loc30])
#loc225 = loc(fused[#loc33, #loc34])
#loc226 = loc(fused[#loc36, #loc37])
#loc227 = loc(fused[#loc38, #loc39])
#loc228 = loc(fused[#loc40, #loc41])
#loc229 = loc(fused[#loc43, #loc42])
#loc230 = loc(fused[#loc44, #loc45])
#loc231 = loc(fused[#loc47, #loc41])
#loc232 = loc(fused[#loc53, #loc52])
#loc233 = loc(fused[#loc55, #loc56])
#loc234 = loc(fused[#loc57, #loc58])
#loc235 = loc(fused[#loc59, #loc60])
#loc236 = loc(fused[#loc61, #loc62])
#loc237 = loc(fused[#loc63, #loc64])
#loc238 = loc(fused[#loc65, #loc66])
#loc239 = loc(fused[#loc71, #loc72])
#loc242 = loc(fused[#loc82, #loc83])
#loc243 = loc(fused[#loc86, #loc87])
#loc244 = loc(fused[#loc90, #loc89])
#loc245 = loc(fused[#loc91, #loc92])
#loc246 = loc(fused[#loc93, #loc94])
#loc247 = loc(fused[#loc96, #loc95])
#loc248 = loc(fused[#loc97, #loc98])
#loc249 = loc(fused[#loc100, #loc101])
#loc250 = loc(fused[#loc102, #loc103])
#loc251 = loc(fused[#loc104, #loc105])
#loc252 = loc(fused[#loc107, #loc106])
#loc253 = loc(fused[#loc109, #loc110])
#loc254 = loc(fused[#loc108, #loc111])
#loc255 = loc(fused[#loc113, #loc105])
#loc256 = loc(fused[#loc115, #loc114])
#loc257 = loc(fused[#loc119, #loc118])
#loc258 = loc(fused[#loc121, #loc122])
#loc259 = loc(fused[#loc124, #loc125])
#loc260 = loc(fused[#loc126, #loc127])
#loc261 = loc(fused[#loc128, #loc129])
#loc262 = loc(fused[#loc131, #loc130])
#loc263 = loc(fused[#loc132, #loc133])
#loc264 = loc(fused[#loc135, #loc129])
#loc265 = loc(fused[#loc137, #loc136])
#loc266 = loc(fused[#loc141, #loc140])
#loc267 = loc(fused[#loc142, #loc143])
#loc268 = loc(fused[#loc144, #loc145])
#loc269 = loc(fused[#loc146, #loc147])
#loc270 = loc(fused[#loc149, #loc148])
#loc271 = loc(fused[#loc150, #loc151])
#loc272 = loc(fused[#loc153, #loc147])
#loc273 = loc(fused[#loc159, #loc158])
#loc274 = loc(fused[#loc161, #loc162])
#loc275 = loc(fused[#loc163, #loc164])
#loc276 = loc(fused[#loc166, #loc165])
#loc277 = loc(fused[#loc167, #loc168])
#loc278 = loc(fused[#loc170, #loc171])
#loc279 = loc(fused[#loc172, #loc173])
#loc280 = loc(fused[#loc174, #loc175])
#loc281 = loc(fused[#loc177, #loc176])
#loc282 = loc(fused[#loc178, #loc179])
#loc283 = loc(fused[#loc181, #loc175])
#loc284 = loc(fused[#loc183, #loc182])
#loc285 = loc(fused[#loc187, #loc186])
#loc286 = loc(fused[#loc189, #loc190])
#loc287 = loc(fused[#loc192, #loc193])
#loc288 = loc(fused[#loc194, #loc195])
#loc289 = loc(fused[#loc196, #loc197])
#loc290 = loc(fused[#loc199, #loc198])
#loc291 = loc(fused[#loc200, #loc201])
#loc292 = loc(fused[#loc203, #loc197])
#loc293 = loc(fused[#loc209, #loc208])
