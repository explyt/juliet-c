!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType" {!cir.ptr<!s32i>, !cir.ptr<!s32i>}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc106)
  cir.func private  @printIntLine(!s32i) loc(#loc107)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc108)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc111)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc112)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc18)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc18)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc113)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc114)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc24)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !s32i loc(#loc116)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc25)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc29)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc117)
    } loc(#loc115)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %9 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc31)
    cir.store %8, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc118)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
      %11 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc37)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
      cir.store %12, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc120)
      cir.scope {
        %13 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc122)
        %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc122)
        cir.store %14, %13 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc122)
        %15 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc42)
        %17 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc43)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc43)
        %19 = cir.const #cir.int<10> : !s32i loc(#loc44)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc44)
        %21 = cir.const #cir.int<4> : !u64i loc(#loc123)
        %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc124)
        cir.libc.memcpy %22 bytes from %18 to %16 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc125)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc50)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc51)
        %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc49)
        cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc52)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc53)
        %28 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc54)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
      } loc(#loc121)
    } loc(#loc119)
    cir.return loc(#loc10)
  } loc(#loc109)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc56)
  } loc(#loc126)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc65)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc131)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc67)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc68)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc68)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc132)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc133)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc67)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc134)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc135)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc76)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !s32i loc(#loc137)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc77)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc81)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
      } loc(#loc138)
    } loc(#loc136)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc31)
    cir.store %10, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc37)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
      cir.store %14, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
      cir.scope {
        %15 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc143)
        %16 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc143)
        cir.store %16, %15 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc143)
        %17 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc92)
        %19 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc93)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc93)
        %21 = cir.const #cir.int<10> : !s32i loc(#loc94)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc94)
        %23 = cir.const #cir.int<4> : !u64i loc(#loc144)
        %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc145)
        cir.libc.memcpy %24 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc146)
        %25 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
        %26 = cir.const #cir.int<0> : !s32i loc(#loc100)
        %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc101)
        %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc99)
        cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc102)
        %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc103)
        %30 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc104)
        cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
      } loc(#loc142)
    } loc(#loc140)
    cir.return loc(#loc60)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":46:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":29:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":29:11)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":30:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":30:67)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":31:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":31:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":33:19)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":33:26)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":33:28)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":33:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:33)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:17)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:14)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:23)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:24)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:30)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:29)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":35:26)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":21:11)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":35:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":36:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":45:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":37:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":37:30)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":22:11)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":38:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":44:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":39:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":39:32)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:20)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:26)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:34)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:37)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:47)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:48)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":42:26)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":42:31)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":42:32)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":42:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":43:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":43:18)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":74:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":77:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":76:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":76:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":53:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":72:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":55:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":55:11)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":56:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":56:67)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":57:12)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":57:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":59:19)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":59:26)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":59:29)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":59:39)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":59:40)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":59:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:33)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:14)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:23)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:24)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:30)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:29)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":61:26)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":61:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":62:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":71:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":63:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":63:30)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":64:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":70:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":65:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":65:32)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":67:20)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":67:26)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":67:34)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":67:37)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":67:47)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":67:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":67:48)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":68:26)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":68:31)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":68:32)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":68:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":69:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34.c":69:18)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc13, #loc14])
#loc112 = loc(fused[#loc16, #loc15])
#loc113 = loc(fused[#loc17, #loc19])
#loc114 = loc(fused[#loc20, #loc19])
#loc115 = loc(fused[#loc21, #loc22])
#loc116 = loc(fused[#loc23, #loc24])
#loc117 = loc(fused[#loc26, #loc22])
#loc118 = loc(fused[#loc32, #loc30])
#loc119 = loc(fused[#loc33, #loc34])
#loc120 = loc(fused[#loc35, #loc36])
#loc121 = loc(fused[#loc38, #loc39])
#loc122 = loc(fused[#loc40, #loc41])
#loc123 = loc(fused[#loc45, #loc46])
#loc124 = loc(fused[#loc44, #loc46])
#loc125 = loc(fused[#loc47, #loc48])
#loc126 = loc(fused[#loc55, #loc56])
#loc127 = loc(fused[#loc57, #loc58])
#loc128 = loc(fused[#loc59, #loc60])
#loc129 = loc(fused[#loc61, #loc62])
#loc130 = loc(fused[#loc63, #loc64])
#loc131 = loc(fused[#loc66, #loc65])
#loc132 = loc(fused[#loc69, #loc70])
#loc133 = loc(fused[#loc68, #loc70])
#loc134 = loc(fused[#loc67, #loc71])
#loc135 = loc(fused[#loc72, #loc71])
#loc136 = loc(fused[#loc73, #loc74])
#loc137 = loc(fused[#loc75, #loc76])
#loc138 = loc(fused[#loc78, #loc74])
#loc139 = loc(fused[#loc83, #loc82])
#loc140 = loc(fused[#loc84, #loc85])
#loc141 = loc(fused[#loc86, #loc87])
#loc142 = loc(fused[#loc88, #loc89])
#loc143 = loc(fused[#loc90, #loc91])
#loc144 = loc(fused[#loc95, #loc96])
#loc145 = loc(fused[#loc94, #loc96])
#loc146 = loc(fused[#loc97, #loc98])
