!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc518)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc519)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc520)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc521)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc522)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc523)
  cir.func private @close(!s32i) -> !s32i loc(#loc524)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc525)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc526)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc527)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc23)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_063badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc529)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc28)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc530)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc32)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc33)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc532)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc535)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc536)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc537)
          %9 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc538)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc42)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc537)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc49)
                %13 = cir.const #cir.int<1> : !u32i loc(#loc50)
                %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc50)
                %15 = cir.const #cir.int<6> : !u32i loc(#loc51)
                %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc51)
                %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
                cir.store %17, %8 : !s32i, !cir.ptr<!s32i> loc(#loc541)
                cir.scope {
                  %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc58)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc543)
                  cir.if %61 {
                    cir.break loc(#loc60)
                  } loc(#loc544)
                } loc(#loc542)
                %18 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc545)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc63)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc546)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc547)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc68)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc68)
                %23 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc548)
                %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc549)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc76)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc76)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc550)
                cir.scope {
                  %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                  %59 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc552)
                  %60 = cir.const #cir.int<16> : !u64i loc(#loc553)
                  %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc553)
                  %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc89)
                  %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc89)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc554)
                  cir.if %65 {
                    cir.break loc(#loc91)
                  } loc(#loc555)
                } loc(#loc551)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %34 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc93)
                %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
                %36 = cir.const #cir.int<3> : !s32i loc(#loc94)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc94)
                %38 = cir.const #cir.int<8> : !u64i loc(#loc94)
                %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc94)
                %40 = cir.const #cir.int<2> : !s32i loc(#loc94)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc94)
                %42 = cir.binop(add, %39, %41) : !u64i loc(#loc94)
                %43 = cir.const #cir.int<1> : !s32i loc(#loc95)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc95)
                %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc556)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc96)
                %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc97)
                %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc97)
                cir.store %48, %6 : !s32i, !cir.ptr<!s32i> loc(#loc557)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc103)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc103)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc559)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc104)
                    cir.yield %63 : !cir.bool loc(#loc104)
                  }, false {
                    %63 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %64 = cir.const #cir.int<0> : !s32i loc(#loc106)
                    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc560)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc104)
                      cir.yield %67 : !cir.bool loc(#loc104)
                    }, false {
                      %67 = cir.const #false loc(#loc104)
                      cir.yield %67 : !cir.bool loc(#loc104)
                    }) : (!cir.bool) -> !cir.bool loc(#loc104)
                    cir.yield %66 : !cir.bool loc(#loc104)
                  }) : (!cir.bool) -> !cir.bool loc(#loc104)
                  cir.if %62 {
                    cir.break loc(#loc108)
                  } loc(#loc561)
                } loc(#loc558)
                %49 = cir.const #cir.int<0> : !s8i loc(#loc109)
                %50 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc111)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc111)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc562)
                %53 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc112)
                %54 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc113)
                %55 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc115)
                %57 = cir.call @__isoc23_strtoul(%54, %55, %56) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc112)
                cir.store %57, %0 : !u64i, !cir.ptr<!u64i> loc(#loc563)
              } loc(#loc540)
              cir.yield loc(#loc46)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc118)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc118)
              cir.condition(%13) loc(#loc118)
            } loc(#loc539)
          } loc(#loc539)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc121)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc122)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc565)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc125)
            } loc(#loc566)
          } loc(#loc564)
        } loc(#loc534)
      } loc(#loc533)
    } loc(#loc531)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc128)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc129)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc568)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc571)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc137)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc573)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc574)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc143)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc144)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc576)
              cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc577)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc148)
              %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc20)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc20)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc148)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc151)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
              cir.delete.array %19 : <!s8i> loc(#loc152)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc23)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc23)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc153)
            } loc(#loc575)
          } loc(#loc572)
        } loc(#loc570)
      } loc(#loc569)
    } loc(#loc567)
    cir.return loc(#loc25)
  } loc(#loc528)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc155)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc579)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc160)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc580)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc164)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc165)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc582)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc585)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc586)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc587)
          %9 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc588)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc174)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc174)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc587)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc181)
                %13 = cir.const #cir.int<1> : !u32i loc(#loc182)
                %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc182)
                %15 = cir.const #cir.int<6> : !u32i loc(#loc183)
                %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc183)
                %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc184)
                cir.store %17, %8 : !s32i, !cir.ptr<!s32i> loc(#loc591)
                cir.scope {
                  %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc189)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc190)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc190)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc593)
                  cir.if %61 {
                    cir.break loc(#loc192)
                  } loc(#loc594)
                } loc(#loc592)
                %18 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc595)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc195)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc596)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc597)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc200)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc200)
                %23 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc598)
                %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc202)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc202)
                %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc203)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc599)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc206)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc206)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc207)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc600)
                cir.scope {
                  %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc212)
                  %59 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc602)
                  %60 = cir.const #cir.int<16> : !u64i loc(#loc603)
                  %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc603)
                  %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc217)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc218)
                  %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc218)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc604)
                  cir.if %65 {
                    cir.break loc(#loc220)
                  } loc(#loc605)
                } loc(#loc601)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc221)
                %34 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc222)
                %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc222)
                %36 = cir.const #cir.int<3> : !s32i loc(#loc223)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc223)
                %38 = cir.const #cir.int<8> : !u64i loc(#loc223)
                %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc223)
                %40 = cir.const #cir.int<2> : !s32i loc(#loc223)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc223)
                %42 = cir.binop(add, %39, %41) : !u64i loc(#loc223)
                %43 = cir.const #cir.int<1> : !s32i loc(#loc224)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc224)
                %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc606)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc225)
                %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc226)
                %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc226)
                cir.store %48, %6 : !s32i, !cir.ptr<!s32i> loc(#loc607)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc232)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc232)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc609)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc233)
                    cir.yield %63 : !cir.bool loc(#loc233)
                  }, false {
                    %63 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc234)
                    %64 = cir.const #cir.int<0> : !s32i loc(#loc235)
                    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc610)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc233)
                      cir.yield %67 : !cir.bool loc(#loc233)
                    }, false {
                      %67 = cir.const #false loc(#loc233)
                      cir.yield %67 : !cir.bool loc(#loc233)
                    }) : (!cir.bool) -> !cir.bool loc(#loc233)
                    cir.yield %66 : !cir.bool loc(#loc233)
                  }) : (!cir.bool) -> !cir.bool loc(#loc233)
                  cir.if %62 {
                    cir.break loc(#loc237)
                  } loc(#loc611)
                } loc(#loc608)
                %49 = cir.const #cir.int<0> : !s8i loc(#loc238)
                %50 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc240)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc240)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc612)
                %53 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc241)
                %54 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc242)
                %55 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc244)
                %57 = cir.call @__isoc23_strtoul(%54, %55, %56) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc241)
                cir.store %57, %0 : !u64i, !cir.ptr<!u64i> loc(#loc613)
              } loc(#loc590)
              cir.yield loc(#loc178)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc247)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc247)
              cir.condition(%13) loc(#loc247)
            } loc(#loc589)
          } loc(#loc589)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc250)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc251)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc251)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc615)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc253)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc254)
            } loc(#loc616)
          } loc(#loc614)
        } loc(#loc584)
      } loc(#loc583)
    } loc(#loc581)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc257)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc258)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc618)
      cir.if %5 {
        %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc154)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc154)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc262)
      } else {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc621)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc269)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc623)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc624)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc273)
              %12 = cir.const #cir.int<100> : !s32i loc(#loc274)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc274)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc625)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc272)
                cir.yield %16 : !cir.bool loc(#loc272)
              }, false {
                %16 = cir.const #false loc(#loc272)
                cir.yield %16 : !cir.bool loc(#loc272)
              }) : (!cir.bool) -> !cir.bool loc(#loc272)
              cir.yield %15 : !cir.bool loc(#loc272)
            }, false {
              %11 = cir.const #false loc(#loc272)
              cir.yield %11 : !cir.bool loc(#loc272)
            }) : (!cir.bool) -> !cir.bool loc(#loc272)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc278)
              %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc279)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc627)
              cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc628)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc283)
              %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc284)
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc285)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc285)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc283)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc286)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc287)
              %20 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc288)
              cir.delete.array %20 : <!s8i> loc(#loc288)
            } else {
              %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc155)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc155)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc289)
            } loc(#loc626)
          } loc(#loc622)
        } loc(#loc620)
      } loc(#loc619)
    } loc(#loc617)
    cir.return loc(#loc157)
  } loc(#loc578)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc630)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc294)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc294)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc631)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc298)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc299)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc633)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc636)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc637)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc638)
          %9 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc639)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc308)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc308)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc638)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc315)
                %13 = cir.const #cir.int<1> : !u32i loc(#loc316)
                %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc316)
                %15 = cir.const #cir.int<6> : !u32i loc(#loc317)
                %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc317)
                %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc318)
                cir.store %17, %8 : !s32i, !cir.ptr<!s32i> loc(#loc642)
                cir.scope {
                  %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc323)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc324)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc324)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc644)
                  cir.if %61 {
                    cir.break loc(#loc326)
                  } loc(#loc645)
                } loc(#loc643)
                %18 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc646)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc329)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc647)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc648)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc334)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc334)
                %23 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc649)
                %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc336)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc336)
                %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc337)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc650)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc340)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc340)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc341)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc651)
                cir.scope {
                  %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                  %59 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc653)
                  %60 = cir.const #cir.int<16> : !u64i loc(#loc654)
                  %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc654)
                  %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc351)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc352)
                  %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc352)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc655)
                  cir.if %65 {
                    cir.break loc(#loc354)
                  } loc(#loc656)
                } loc(#loc652)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc355)
                %34 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc356)
                %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc356)
                %36 = cir.const #cir.int<3> : !s32i loc(#loc357)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc357)
                %38 = cir.const #cir.int<8> : !u64i loc(#loc357)
                %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc357)
                %40 = cir.const #cir.int<2> : !s32i loc(#loc357)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc357)
                %42 = cir.binop(add, %39, %41) : !u64i loc(#loc357)
                %43 = cir.const #cir.int<1> : !s32i loc(#loc358)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc358)
                %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc657)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc359)
                %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc360)
                %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc360)
                cir.store %48, %6 : !s32i, !cir.ptr<!s32i> loc(#loc658)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc365)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc366)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc366)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc660)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc367)
                    cir.yield %63 : !cir.bool loc(#loc367)
                  }, false {
                    %63 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                    %64 = cir.const #cir.int<0> : !s32i loc(#loc369)
                    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc661)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc367)
                      cir.yield %67 : !cir.bool loc(#loc367)
                    }, false {
                      %67 = cir.const #false loc(#loc367)
                      cir.yield %67 : !cir.bool loc(#loc367)
                    }) : (!cir.bool) -> !cir.bool loc(#loc367)
                    cir.yield %66 : !cir.bool loc(#loc367)
                  }) : (!cir.bool) -> !cir.bool loc(#loc367)
                  cir.if %62 {
                    cir.break loc(#loc371)
                  } loc(#loc662)
                } loc(#loc659)
                %49 = cir.const #cir.int<0> : !s8i loc(#loc372)
                %50 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc373)
                %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc374)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc374)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc663)
                %53 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc375)
                %54 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc376)
                %55 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc377)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc378)
                %57 = cir.call @__isoc23_strtoul(%54, %55, %56) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc375)
                cir.store %57, %0 : !u64i, !cir.ptr<!u64i> loc(#loc664)
              } loc(#loc641)
              cir.yield loc(#loc312)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc381)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc381)
              cir.condition(%13) loc(#loc381)
            } loc(#loc640)
          } loc(#loc640)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc384)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc385)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc385)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc666)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc387)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc388)
            } loc(#loc667)
          } loc(#loc665)
        } loc(#loc635)
      } loc(#loc634)
    } loc(#loc632)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc391)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc392)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc669)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc672)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc400)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc674)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc675)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc404)
              %12 = cir.const #cir.int<100> : !s32i loc(#loc405)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc405)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc676)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc403)
                cir.yield %16 : !cir.bool loc(#loc403)
              }, false {
                %16 = cir.const #false loc(#loc403)
                cir.yield %16 : !cir.bool loc(#loc403)
              }) : (!cir.bool) -> !cir.bool loc(#loc403)
              cir.yield %15 : !cir.bool loc(#loc403)
            }, false {
              %11 = cir.const #false loc(#loc403)
              cir.yield %11 : !cir.bool loc(#loc403)
            }) : (!cir.bool) -> !cir.bool loc(#loc403)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc409)
              %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc410)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc678)
              cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc679)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc414)
              %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc415)
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc416)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc416)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc414)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc417)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc418)
              %20 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc419)
              cir.delete.array %20 : <!s8i> loc(#loc419)
            } else {
              %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc420)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc420)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc421)
            } loc(#loc677)
          } loc(#loc673)
        } loc(#loc671)
      } loc(#loc670)
    } loc(#loc668)
    cir.return loc(#loc291)
  } loc(#loc629)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc681)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc426)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc426)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc682)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc430)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc431)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc684)
      cir.if %5 {
        %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc435)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc435)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc436)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc437)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc437)
        cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc686)
      } loc(#loc685)
    } loc(#loc683)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc441)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc442)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc688)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc691)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc450)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc693)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc694)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc456)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc457)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc696)
              cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc697)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc461)
              %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc462)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc463)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc463)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc461)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc464)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc465)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc466)
              cir.delete.array %19 : <!s8i> loc(#loc466)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc467)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc467)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc468)
            } loc(#loc695)
          } loc(#loc692)
        } loc(#loc690)
      } loc(#loc689)
    } loc(#loc687)
    cir.return loc(#loc423)
  } loc(#loc680)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc699)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc473)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc473)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc700)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc477)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc478)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc702)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc480)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc480)
        cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc704)
      } loc(#loc703)
    } loc(#loc701)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc484)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc485)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc706)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc709)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc493)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc711)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc712)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc499)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc500)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc714)
              cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc715)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc504)
              %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc505)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc506)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc506)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc504)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc507)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc508)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc509)
              cir.delete.array %19 : <!s8i> loc(#loc509)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc510)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc510)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc511)
            } loc(#loc713)
          } loc(#loc710)
        } loc(#loc708)
      } loc(#loc707)
    } loc(#loc705)
    cir.return loc(#loc470)
  } loc(#loc698)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_064goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06L8goodB2G1Ev() : () -> () loc(#loc514)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06L8goodB2G2Ev() : () -> () loc(#loc515)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06L8goodG2B1Ev() : () -> () loc(#loc516)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06L8goodG2B2Ev() : () -> () loc(#loc517)
    cir.return loc(#loc513)
  } loc(#loc716)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":91:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("/usr/include/string.h":141:1)
#loc19 = loc("/usr/include/string.h":142:14)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":133:34)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":139:27)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":58:1)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":143:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":60:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":60:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":62:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":62:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":63:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":121:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":63:8)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":63:27)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":64:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":65:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":120:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":70:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":70:17)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":71:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":71:32)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":72:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":72:36)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":73:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":73:45)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":74:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":109:21)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":75:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":108:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":84:40)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":84:49)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":84:62)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":84:33)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":84:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":84:73)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":85:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":88:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":85:21)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":85:38)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":86:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":87:21)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":89:24)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":89:25)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":89:34)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":89:37)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":89:51)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":89:17)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":89:52)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":90:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":90:17)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":91:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":91:17)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":91:63)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":92:42)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":92:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":92:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":92:50)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":93:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":96:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":93:29)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":93:62)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":93:63)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":93:72)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":93:86)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":93:21)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":93:92)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":94:17)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":95:21)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":99:35)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":99:50)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":99:63)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":99:81)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":99:84)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":99:30)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":99:17)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":99:85)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":100:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":103:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":100:21)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":100:35)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":100:48)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":100:51)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":100:65)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":101:17)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":102:21)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":105:43)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":105:29)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":105:17)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":107:24)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":107:32)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":107:45)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":107:51)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":107:17)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":107:52)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":109:20)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":110:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":113:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":110:17)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":110:34)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":111:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":112:30)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":112:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":122:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":142:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":122:8)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":122:27)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":123:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":124:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":141:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":125:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":125:20)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":129:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":140:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":129:17)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":129:24)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":129:43)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":130:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":136:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":138:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":131:37)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":58:6)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":131:28)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":131:41)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":131:17)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":133:17)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":133:24)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":134:27)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":134:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":135:27)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":139:17)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":217:19)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":236:27)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":150:1)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":240:1)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":152:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":152:12)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":154:12)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":154:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":155:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":213:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":155:8)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":155:27)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":156:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":157:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":212:9)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":162:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":162:17)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":163:13)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":163:32)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":164:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":164:36)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":165:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":165:45)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":166:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":201:21)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":167:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":200:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":176:40)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":176:49)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":176:62)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":176:33)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":176:17)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":176:73)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":177:17)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":180:17)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":177:21)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":177:38)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":178:17)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":179:21)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":181:24)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":181:25)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":181:34)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":181:37)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":181:51)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":181:17)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":181:52)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":182:38)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":182:17)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":183:53)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":183:43)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":183:17)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":183:63)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":184:42)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":184:36)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":184:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":184:50)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":185:17)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":188:17)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":185:29)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":185:62)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":185:63)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":185:72)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":185:86)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":185:21)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":185:92)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":186:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":187:21)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":191:35)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":191:50)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":191:63)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":191:81)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":191:84)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":191:30)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":191:17)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":191:85)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":192:17)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":195:17)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":192:21)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":192:35)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":192:48)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":192:51)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":192:65)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":193:17)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":194:21)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":197:43)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":197:29)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":197:17)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":199:24)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":199:32)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":199:45)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":199:51)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":199:17)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":199:52)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":201:20)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":202:13)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":205:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":202:17)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":202:34)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":203:13)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":204:30)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":204:17)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":214:5)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":239:5)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":214:8)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":214:27)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":215:5)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":218:5)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":220:5)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":217:9)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":221:9)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":238:9)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":222:13)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":222:20)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":226:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":237:13)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":226:17)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":226:24)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":226:43)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":226:45)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":226:48)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":226:55)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":227:13)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":233:13)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":235:13)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":228:37)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":150:13)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":228:28)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":228:41)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":228:17)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":230:17)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":230:24)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":230:34)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":231:27)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":231:17)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":232:27)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":236:17)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":243:1)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":328:1)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":245:5)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":245:12)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":247:12)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":247:5)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":248:5)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":306:5)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":248:8)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":248:27)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":249:5)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":250:9)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":305:9)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":255:13)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":255:17)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":256:13)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":256:32)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":257:13)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":257:36)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":258:13)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":258:45)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":259:13)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":294:21)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":260:13)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":293:13)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":269:40)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":269:49)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":269:62)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":269:33)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":269:17)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":269:73)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":270:17)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":273:17)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":270:21)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":270:38)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":271:17)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":272:21)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":274:24)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":274:25)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":274:34)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":274:37)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":274:51)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":274:17)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":274:52)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":275:38)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":275:17)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":276:53)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":276:43)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":276:17)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":276:63)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":277:42)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":277:36)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":277:17)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":277:50)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":278:17)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":281:17)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":278:29)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":278:62)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":278:63)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":278:72)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":278:86)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":278:21)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":278:92)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":279:17)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":280:21)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":284:35)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":284:50)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":284:63)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":284:81)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":284:84)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":284:30)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":284:17)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":284:85)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":285:17)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":288:17)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":285:21)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":285:35)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":285:48)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":285:51)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":285:65)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":286:17)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":287:21)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":290:43)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":290:29)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":290:17)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":292:24)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":292:32)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":292:45)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":292:51)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":292:17)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":292:52)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":294:20)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":295:13)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":298:13)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":295:17)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":295:34)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":296:13)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":297:30)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":297:17)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":307:5)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":327:5)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":307:8)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":307:27)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":308:5)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":309:9)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":326:9)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":310:13)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":310:20)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":314:13)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":325:13)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":314:17)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":314:24)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":314:43)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":314:45)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":314:48)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":314:55)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":315:13)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":321:13)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":323:13)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":316:37)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":243:13)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":316:28)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":316:41)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":316:17)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":318:17)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":318:24)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":318:34)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":319:27)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":319:17)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":320:27)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":324:27)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":324:17)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":331:1)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":367:1)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":333:5)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":333:12)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":335:12)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":335:5)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":336:5)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":345:5)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":336:8)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":336:27)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":337:5)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":340:5)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":342:5)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":339:19)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":339:9)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":344:16)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":344:9)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":346:5)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":366:5)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":346:8)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":346:27)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":347:5)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":348:9)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":365:9)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":349:13)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":349:20)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":353:13)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":364:13)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":353:17)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":353:24)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":353:43)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":354:13)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":360:13)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":362:13)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":355:37)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":331:13)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":355:28)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":355:41)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":355:17)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":357:17)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":357:24)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":357:34)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":358:27)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":358:17)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":359:27)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":363:27)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":363:17)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":370:1)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":401:1)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":372:5)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":372:12)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":374:12)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":374:5)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":375:5)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":379:5)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":375:8)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":375:27)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":376:5)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":378:16)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":378:9)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":380:5)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":400:5)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":380:8)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":380:27)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":381:5)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":382:9)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":399:9)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":383:13)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":383:20)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":387:13)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":398:13)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":387:17)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":387:24)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":387:43)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":388:13)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":394:13)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":396:13)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":389:37)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":370:13)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":389:28)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":389:41)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":389:17)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":391:17)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":391:24)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":391:34)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":392:27)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":392:17)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":393:27)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":397:27)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":397:17)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":403:1)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":409:1)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":405:5)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":406:5)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":407:5)
#loc517 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_06.cpp":408:5)
#loc518 = loc(fused[#loc1, #loc2])
#loc519 = loc(fused[#loc3, #loc4])
#loc520 = loc(fused[#loc6, #loc7])
#loc521 = loc(fused[#loc8, #loc9])
#loc522 = loc(fused[#loc10, #loc11])
#loc523 = loc(fused[#loc12, #loc13])
#loc524 = loc(fused[#loc14, #loc15])
#loc525 = loc(fused[#loc16, #loc17])
#loc526 = loc(fused[#loc18, #loc19])
#loc527 = loc(fused[#loc21, #loc22])
#loc528 = loc(fused[#loc24, #loc25])
#loc529 = loc(fused[#loc26, #loc27])
#loc530 = loc(fused[#loc29, #loc28])
#loc531 = loc(fused[#loc30, #loc31])
#loc532 = loc(fused[#loc32, #loc33])
#loc533 = loc(fused[#loc34, #loc31])
#loc534 = loc(fused[#loc35, #loc36])
#loc535 = loc(fused[#loc37, #loc38])
#loc536 = loc(fused[#loc39, #loc40])
#loc537 = loc(fused[#loc41, #loc42])
#loc538 = loc(fused[#loc43, #loc44])
#loc539 = loc(fused[#loc45, #loc46])
#loc540 = loc(fused[#loc47, #loc48])
#loc541 = loc(fused[#loc53, #loc54])
#loc542 = loc(fused[#loc55, #loc56])
#loc543 = loc(fused[#loc57, #loc58])
#loc544 = loc(fused[#loc59, #loc56])
#loc545 = loc(fused[#loc61, #loc62])
#loc546 = loc(fused[#loc64, #loc65])
#loc547 = loc(fused[#loc66, #loc67])
#loc548 = loc(fused[#loc70, #loc68])
#loc549 = loc(fused[#loc74, #loc75])
#loc550 = loc(fused[#loc79, #loc80])
#loc551 = loc(fused[#loc81, #loc82])
#loc552 = loc(fused[#loc84, #loc85])
#loc553 = loc(fused[#loc86, #loc87])
#loc554 = loc(fused[#loc88, #loc89])
#loc555 = loc(fused[#loc90, #loc82])
#loc556 = loc(fused[#loc94, #loc95])
#loc557 = loc(fused[#loc98, #loc99])
#loc558 = loc(fused[#loc100, #loc101])
#loc559 = loc(fused[#loc102, #loc103])
#loc560 = loc(fused[#loc105, #loc106])
#loc561 = loc(fused[#loc107, #loc101])
#loc562 = loc(fused[#loc111, #loc109])
#loc563 = loc(fused[#loc116, #loc117])
#loc564 = loc(fused[#loc119, #loc120])
#loc565 = loc(fused[#loc121, #loc122])
#loc566 = loc(fused[#loc123, #loc120])
#loc567 = loc(fused[#loc126, #loc127])
#loc568 = loc(fused[#loc128, #loc129])
#loc569 = loc(fused[#loc130, #loc127])
#loc570 = loc(fused[#loc131, #loc132])
#loc571 = loc(fused[#loc133, #loc134])
#loc572 = loc(fused[#loc135, #loc136])
#loc573 = loc(fused[#loc138, #loc139])
#loc574 = loc(fused[#loc137, #loc139])
#loc575 = loc(fused[#loc140, #loc141, #loc142, #loc136])
#loc576 = loc(fused[#loc145, #loc146])
#loc577 = loc(fused[#loc147, #loc146])
#loc578 = loc(fused[#loc156, #loc157])
#loc579 = loc(fused[#loc158, #loc159])
#loc580 = loc(fused[#loc161, #loc160])
#loc581 = loc(fused[#loc162, #loc163])
#loc582 = loc(fused[#loc164, #loc165])
#loc583 = loc(fused[#loc166, #loc163])
#loc584 = loc(fused[#loc167, #loc168])
#loc585 = loc(fused[#loc169, #loc170])
#loc586 = loc(fused[#loc171, #loc172])
#loc587 = loc(fused[#loc173, #loc174])
#loc588 = loc(fused[#loc175, #loc176])
#loc589 = loc(fused[#loc177, #loc178])
#loc590 = loc(fused[#loc179, #loc180])
#loc591 = loc(fused[#loc185, #loc186])
#loc592 = loc(fused[#loc187, #loc188])
#loc593 = loc(fused[#loc189, #loc190])
#loc594 = loc(fused[#loc191, #loc188])
#loc595 = loc(fused[#loc193, #loc194])
#loc596 = loc(fused[#loc196, #loc197])
#loc597 = loc(fused[#loc198, #loc199])
#loc598 = loc(fused[#loc201, #loc200])
#loc599 = loc(fused[#loc204, #loc205])
#loc600 = loc(fused[#loc208, #loc209])
#loc601 = loc(fused[#loc210, #loc211])
#loc602 = loc(fused[#loc213, #loc214])
#loc603 = loc(fused[#loc215, #loc216])
#loc604 = loc(fused[#loc217, #loc218])
#loc605 = loc(fused[#loc219, #loc211])
#loc606 = loc(fused[#loc223, #loc224])
#loc607 = loc(fused[#loc227, #loc228])
#loc608 = loc(fused[#loc229, #loc230])
#loc609 = loc(fused[#loc231, #loc232])
#loc610 = loc(fused[#loc234, #loc235])
#loc611 = loc(fused[#loc236, #loc230])
#loc612 = loc(fused[#loc240, #loc238])
#loc613 = loc(fused[#loc245, #loc246])
#loc614 = loc(fused[#loc248, #loc249])
#loc615 = loc(fused[#loc250, #loc251])
#loc616 = loc(fused[#loc252, #loc249])
#loc617 = loc(fused[#loc255, #loc256])
#loc618 = loc(fused[#loc257, #loc258])
#loc619 = loc(fused[#loc259, #loc260, #loc261, #loc256])
#loc620 = loc(fused[#loc263, #loc264])
#loc621 = loc(fused[#loc265, #loc266])
#loc622 = loc(fused[#loc267, #loc268])
#loc623 = loc(fused[#loc270, #loc271])
#loc624 = loc(fused[#loc269, #loc271])
#loc625 = loc(fused[#loc273, #loc274])
#loc626 = loc(fused[#loc275, #loc276, #loc277, #loc268])
#loc627 = loc(fused[#loc280, #loc281])
#loc628 = loc(fused[#loc282, #loc281])
#loc629 = loc(fused[#loc290, #loc291])
#loc630 = loc(fused[#loc292, #loc293])
#loc631 = loc(fused[#loc295, #loc294])
#loc632 = loc(fused[#loc296, #loc297])
#loc633 = loc(fused[#loc298, #loc299])
#loc634 = loc(fused[#loc300, #loc297])
#loc635 = loc(fused[#loc301, #loc302])
#loc636 = loc(fused[#loc303, #loc304])
#loc637 = loc(fused[#loc305, #loc306])
#loc638 = loc(fused[#loc307, #loc308])
#loc639 = loc(fused[#loc309, #loc310])
#loc640 = loc(fused[#loc311, #loc312])
#loc641 = loc(fused[#loc313, #loc314])
#loc642 = loc(fused[#loc319, #loc320])
#loc643 = loc(fused[#loc321, #loc322])
#loc644 = loc(fused[#loc323, #loc324])
#loc645 = loc(fused[#loc325, #loc322])
#loc646 = loc(fused[#loc327, #loc328])
#loc647 = loc(fused[#loc330, #loc331])
#loc648 = loc(fused[#loc332, #loc333])
#loc649 = loc(fused[#loc335, #loc334])
#loc650 = loc(fused[#loc338, #loc339])
#loc651 = loc(fused[#loc342, #loc343])
#loc652 = loc(fused[#loc344, #loc345])
#loc653 = loc(fused[#loc347, #loc348])
#loc654 = loc(fused[#loc349, #loc350])
#loc655 = loc(fused[#loc351, #loc352])
#loc656 = loc(fused[#loc353, #loc345])
#loc657 = loc(fused[#loc357, #loc358])
#loc658 = loc(fused[#loc361, #loc362])
#loc659 = loc(fused[#loc363, #loc364])
#loc660 = loc(fused[#loc365, #loc366])
#loc661 = loc(fused[#loc368, #loc369])
#loc662 = loc(fused[#loc370, #loc364])
#loc663 = loc(fused[#loc374, #loc372])
#loc664 = loc(fused[#loc379, #loc380])
#loc665 = loc(fused[#loc382, #loc383])
#loc666 = loc(fused[#loc384, #loc385])
#loc667 = loc(fused[#loc386, #loc383])
#loc668 = loc(fused[#loc389, #loc390])
#loc669 = loc(fused[#loc391, #loc392])
#loc670 = loc(fused[#loc393, #loc390])
#loc671 = loc(fused[#loc394, #loc395])
#loc672 = loc(fused[#loc396, #loc397])
#loc673 = loc(fused[#loc398, #loc399])
#loc674 = loc(fused[#loc401, #loc402])
#loc675 = loc(fused[#loc400, #loc402])
#loc676 = loc(fused[#loc404, #loc405])
#loc677 = loc(fused[#loc406, #loc407, #loc408, #loc399])
#loc678 = loc(fused[#loc411, #loc412])
#loc679 = loc(fused[#loc413, #loc412])
#loc680 = loc(fused[#loc422, #loc423])
#loc681 = loc(fused[#loc424, #loc425])
#loc682 = loc(fused[#loc427, #loc426])
#loc683 = loc(fused[#loc428, #loc429])
#loc684 = loc(fused[#loc430, #loc431])
#loc685 = loc(fused[#loc432, #loc433, #loc434, #loc429])
#loc686 = loc(fused[#loc438, #loc437])
#loc687 = loc(fused[#loc439, #loc440])
#loc688 = loc(fused[#loc441, #loc442])
#loc689 = loc(fused[#loc443, #loc440])
#loc690 = loc(fused[#loc444, #loc445])
#loc691 = loc(fused[#loc446, #loc447])
#loc692 = loc(fused[#loc448, #loc449])
#loc693 = loc(fused[#loc451, #loc452])
#loc694 = loc(fused[#loc450, #loc452])
#loc695 = loc(fused[#loc453, #loc454, #loc455, #loc449])
#loc696 = loc(fused[#loc458, #loc459])
#loc697 = loc(fused[#loc460, #loc459])
#loc698 = loc(fused[#loc469, #loc470])
#loc699 = loc(fused[#loc471, #loc472])
#loc700 = loc(fused[#loc474, #loc473])
#loc701 = loc(fused[#loc475, #loc476])
#loc702 = loc(fused[#loc477, #loc478])
#loc703 = loc(fused[#loc479, #loc476])
#loc704 = loc(fused[#loc481, #loc480])
#loc705 = loc(fused[#loc482, #loc483])
#loc706 = loc(fused[#loc484, #loc485])
#loc707 = loc(fused[#loc486, #loc483])
#loc708 = loc(fused[#loc487, #loc488])
#loc709 = loc(fused[#loc489, #loc490])
#loc710 = loc(fused[#loc491, #loc492])
#loc711 = loc(fused[#loc494, #loc495])
#loc712 = loc(fused[#loc493, #loc495])
#loc713 = loc(fused[#loc496, #loc497, #loc498, #loc492])
#loc714 = loc(fused[#loc501, #loc502])
#loc715 = loc(fused[#loc503, #loc502])
#loc716 = loc(fused[#loc512, #loc513])
