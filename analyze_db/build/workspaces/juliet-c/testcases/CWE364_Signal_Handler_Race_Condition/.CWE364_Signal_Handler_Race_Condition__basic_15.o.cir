!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":28:27)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":36:24)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":36:28)
!ty__structSigAtomic = !cir.record<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc233 = loc(fused[#loc15, #loc16])
#loc263 = loc(fused[#loc92, #loc93])
module @"/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc226)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc227)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc228)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc229)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc230)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc231)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc233)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc235)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc237)
      } loc(#loc236)
    } loc(#loc234)
    cir.return loc(#loc14)
  } loc(#loc232)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc33)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc242)
            %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc38)
            cir.store %2, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc242)
            %3 = cir.const #cir.int<2> : !s32i loc(#loc39)
            %4 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc40)
            %5 = cir.call @signal(%3, %4) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc41)
            cir.scope {
              %19 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
              %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc44)
              %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc45)
              %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc244)
              cir.if %23 {
                %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc47)
                %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
                %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc48)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc48)
                cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc49)
                %29 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
                cir.store %28, %29 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
              } loc(#loc245)
            } loc(#loc243)
            %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc51)
            %7 = cir.const #cir.int<4> : !u64i loc(#loc247)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc248)
            cir.store %9, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc249)
            cir.scope {
              %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc58)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc59)
              %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc251)
              cir.if %22 {
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc61)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc63)
                cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
              } loc(#loc252)
            } loc(#loc250)
            %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc64)
            %11 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
            cir.store %10, %11 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc253)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc66)
            %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc67)
            %15 = cir.get_member %14[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
            cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc254)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc68)
            %17 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc69)
            %18 = cir.call @signal(%16, %17) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc70)
            cir.scope {
              %19 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
              %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc73)
              %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc74)
              %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc256)
              cir.if %23 {
                %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc76)
                %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
                %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc77)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc77)
                cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc78)
                %29 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
                cir.store %28, %29 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc258)
              } loc(#loc257)
            } loc(#loc255)
          } loc(#loc241)
          cir.break loc(#loc80)
        } loc(#loc34)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc28)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc28)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc82)
          cir.break loc(#loc83)
        } loc(#loc81)
        cir.yield loc(#loc31)
      } loc(#loc31)
    } loc(#loc240)
    cir.return loc(#loc30)
  } loc(#loc239)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc260)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc86)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc261)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc88)
    cir.return loc(#loc85)
  } loc(#loc259)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc92, #loc93])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc263)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc97)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc98)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc265)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc100)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc101)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc267)
      } loc(#loc266)
    } loc(#loc264)
    cir.return loc(#loc91)
  } loc(#loc262)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc106)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc108)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc108)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc109)
          cir.break loc(#loc110)
        } loc(#loc107)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc271)
            %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc115)
            cir.store %2, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc271)
            %3 = cir.const #cir.int<2> : !s32i loc(#loc116)
            %4 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc117)
            %5 = cir.call @signal(%3, %4) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc118)
            cir.scope {
              %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
              %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc121)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc122)
              %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc273)
              cir.if %29 {
                %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc124)
                %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
                %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc125)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc125)
                cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc124)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc126)
                %35 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
                cir.store %34, %35 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc275)
              } loc(#loc274)
            } loc(#loc272)
            %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc128)
            %7 = cir.const #cir.int<4> : !u64i loc(#loc276)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc277)
            cir.store %9, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc278)
            cir.scope {
              %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc135)
              %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
              %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc136)
              %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc280)
              cir.if %28 {
                %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc138)
                %30 = cir.const #cir.int<1> : !s32i loc(#loc139)
                %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc140)
                cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc138)
              } loc(#loc281)
            } loc(#loc279)
            %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc141)
            %11 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
            cir.store %10, %11 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc282)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc143)
            %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc144)
            %15 = cir.get_member %14[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
            cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc283)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc145)
            %17 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc146)
            %18 = cir.call @signal(%16, %17) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc147)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc148)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc149)
            %21 = cir.call @signal(%19, %20) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc150)
            cir.scope {
              %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
              %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc153)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc154)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc154)
              %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc285)
              cir.if %29 {
                %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc156)
                %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
                %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc157)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc157)
                cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc156)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc158)
                %35 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
                cir.store %34, %35 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc287)
              } loc(#loc286)
            } loc(#loc284)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc160)
            %23 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc161)
            %24 = cir.call @signal(%22, %23) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc162)
          } loc(#loc270)
          cir.break loc(#loc163)
        } loc(#loc111)
        cir.yield loc(#loc104)
      } loc(#loc104)
    } loc(#loc269)
    cir.return loc(#loc103)
  } loc(#loc268)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc168)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc291)
            %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc173)
            cir.store %2, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc291)
            %3 = cir.const #cir.int<2> : !s32i loc(#loc174)
            %4 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc175)
            %5 = cir.call @signal(%3, %4) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc176)
            cir.scope {
              %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
              %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc179)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc180)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc180)
              %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc293)
              cir.if %29 {
                %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc182)
                %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
                %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc183)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc183)
                cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc182)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc184)
                %35 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
                cir.store %34, %35 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc295)
              } loc(#loc294)
            } loc(#loc292)
            %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc186)
            %7 = cir.const #cir.int<4> : !u64i loc(#loc296)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc186)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc297)
            cir.store %9, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc298)
            cir.scope {
              %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc193)
              %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc194)
              %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc194)
              %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc300)
              cir.if %28 {
                %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc196)
                %30 = cir.const #cir.int<1> : !s32i loc(#loc197)
                %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc198)
                cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc196)
              } loc(#loc301)
            } loc(#loc299)
            %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc199)
            %11 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
            cir.store %10, %11 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc302)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc201)
            %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc202)
            %15 = cir.get_member %14[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
            cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc303)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc203)
            %17 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc204)
            %18 = cir.call @signal(%16, %17) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc205)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc206)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc207)
            %21 = cir.call @signal(%19, %20) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc208)
            cir.scope {
              %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
              %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc211)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc212)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc212)
              %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc305)
              cir.if %29 {
                %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc214)
                %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
                %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc215)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc215)
                cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc214)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc216)
                %35 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
                cir.store %34, %35 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc307)
              } loc(#loc306)
            } loc(#loc304)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc218)
            %23 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc219)
            %24 = cir.call @signal(%22, %23) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc220)
          } loc(#loc290)
          cir.break loc(#loc221)
        } loc(#loc169)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc223)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc223)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc224)
          cir.break loc(#loc225)
        } loc(#loc222)
        cir.yield loc(#loc166)
      } loc(#loc166)
    } loc(#loc289)
    cir.return loc(#loc165)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_15.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":22:18)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":89:19)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":46:1)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":92:1)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":48:5)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":91:5)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":48:12)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":50:5)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":51:5)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":85:5)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":52:9)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":52:45)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":53:16)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":53:24)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":53:9)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":54:9)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":58:9)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":54:13)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":54:81)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":55:9)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":56:13)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":56:18)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":57:80)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":57:13)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:46)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:53)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:75)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:76)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:9)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:9)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:49)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:13)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:33)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:39)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:40)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:46)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:45)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":61:76)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":61:9)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":62:81)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":62:9)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":70:16)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":70:24)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":70:9)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":80:9)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":84:9)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":80:13)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":80:81)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":81:9)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":82:13)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":82:18)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":83:80)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":83:13)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":86:5)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":87:5)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":89:9)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":90:9)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":192:1)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":196:1)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":194:5)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":194:11)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":195:5)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":195:11)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":36:1)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":42:1)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":37:1)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":38:5)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":41:5)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":38:9)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":38:78)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":39:5)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":40:82)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":40:9)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":99:1)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":143:1)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":101:5)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":142:5)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":101:12)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":103:5)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":105:19)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":105:9)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":106:9)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":107:5)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":108:5)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":140:5)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":109:9)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":109:45)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":110:16)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":110:24)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":110:9)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":111:9)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":115:9)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":111:13)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":111:82)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":112:9)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":113:13)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":113:18)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":114:81)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":114:13)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:46)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:53)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:75)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:76)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:9)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:9)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:49)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:13)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:33)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:39)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:40)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:46)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:45)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":118:77)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":118:9)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":119:82)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":119:9)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":127:16)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":127:24)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":127:9)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":133:16)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":133:24)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":133:9)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":134:9)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":138:9)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":134:13)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":134:82)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":135:9)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":136:13)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":136:18)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":137:81)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":137:13)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":139:16)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":139:24)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":139:9)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":141:5)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":146:1)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":190:1)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":148:5)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":189:5)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":148:12)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":150:5)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":151:5)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":183:5)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":152:9)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":152:45)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":153:16)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":153:24)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":153:9)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":154:9)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":158:9)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":154:13)
#loc180 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":154:82)
#loc181 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":155:9)
#loc182 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":156:13)
#loc183 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":156:18)
#loc184 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":157:81)
#loc185 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":157:13)
#loc186 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:46)
#loc187 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:53)
#loc188 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:75)
#loc189 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:76)
#loc190 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:9)
#loc191 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:9)
#loc192 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:49)
#loc193 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:13)
#loc194 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:33)
#loc195 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:39)
#loc196 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:40)
#loc197 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:46)
#loc198 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:45)
#loc199 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":161:77)
#loc200 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":161:9)
#loc201 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":162:82)
#loc202 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":162:9)
#loc203 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":170:16)
#loc204 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":170:24)
#loc205 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":170:9)
#loc206 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":176:16)
#loc207 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":176:24)
#loc208 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":176:9)
#loc209 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":177:9)
#loc210 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":181:9)
#loc211 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":177:13)
#loc212 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":177:82)
#loc213 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":178:9)
#loc214 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":179:13)
#loc215 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":179:18)
#loc216 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":180:81)
#loc217 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":180:13)
#loc218 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":182:16)
#loc219 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":182:24)
#loc220 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":182:9)
#loc221 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":184:5)
#loc222 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":185:5)
#loc223 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":187:19)
#loc224 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":187:9)
#loc225 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":188:9)
#loc226 = loc(fused[#loc1, #loc2])
#loc227 = loc(fused[#loc3, #loc4])
#loc228 = loc(fused[#loc5, #loc6])
#loc229 = loc(fused[#loc7, #loc8])
#loc230 = loc(fused[#loc9, #loc10])
#loc231 = loc(fused[#loc11, #loc12])
#loc232 = loc(fused[#loc13, #loc14])
#loc234 = loc(fused[#loc18, #loc19])
#loc235 = loc(fused[#loc20, #loc21])
#loc236 = loc(fused[#loc22, #loc19])
#loc237 = loc(fused[#loc24, #loc23])
#loc238 = loc(fused[#loc26, #loc27])
#loc239 = loc(fused[#loc29, #loc30])
#loc240 = loc(fused[#loc31, #loc32])
#loc241 = loc(fused[#loc35, #loc36])
#loc242 = loc(fused[#loc37, #loc38])
#loc243 = loc(fused[#loc42, #loc43])
#loc244 = loc(fused[#loc44, #loc45])
#loc245 = loc(fused[#loc46, #loc43])
#loc246 = loc(fused[#loc50, #loc49])
#loc247 = loc(fused[#loc52, #loc53])
#loc248 = loc(fused[#loc51, #loc54])
#loc249 = loc(fused[#loc55, #loc54])
#loc250 = loc(fused[#loc56, #loc57])
#loc251 = loc(fused[#loc58, #loc59])
#loc252 = loc(fused[#loc60, #loc57])
#loc253 = loc(fused[#loc65, #loc64])
#loc254 = loc(fused[#loc67, #loc66])
#loc255 = loc(fused[#loc71, #loc72])
#loc256 = loc(fused[#loc73, #loc74])
#loc257 = loc(fused[#loc75, #loc72])
#loc258 = loc(fused[#loc79, #loc78])
#loc259 = loc(fused[#loc84, #loc85])
#loc260 = loc(fused[#loc86, #loc87])
#loc261 = loc(fused[#loc88, #loc89])
#loc262 = loc(fused[#loc90, #loc91])
#loc264 = loc(fused[#loc95, #loc96])
#loc265 = loc(fused[#loc97, #loc98])
#loc266 = loc(fused[#loc99, #loc96])
#loc267 = loc(fused[#loc101, #loc100])
#loc268 = loc(fused[#loc102, #loc103])
#loc269 = loc(fused[#loc104, #loc105])
#loc270 = loc(fused[#loc112, #loc113])
#loc271 = loc(fused[#loc114, #loc115])
#loc272 = loc(fused[#loc119, #loc120])
#loc273 = loc(fused[#loc121, #loc122])
#loc274 = loc(fused[#loc123, #loc120])
#loc275 = loc(fused[#loc127, #loc126])
#loc276 = loc(fused[#loc129, #loc130])
#loc277 = loc(fused[#loc128, #loc131])
#loc278 = loc(fused[#loc132, #loc131])
#loc279 = loc(fused[#loc133, #loc134])
#loc280 = loc(fused[#loc135, #loc136])
#loc281 = loc(fused[#loc137, #loc134])
#loc282 = loc(fused[#loc142, #loc141])
#loc283 = loc(fused[#loc144, #loc143])
#loc284 = loc(fused[#loc151, #loc152])
#loc285 = loc(fused[#loc153, #loc154])
#loc286 = loc(fused[#loc155, #loc152])
#loc287 = loc(fused[#loc159, #loc158])
#loc288 = loc(fused[#loc164, #loc165])
#loc289 = loc(fused[#loc166, #loc167])
#loc290 = loc(fused[#loc170, #loc171])
#loc291 = loc(fused[#loc172, #loc173])
#loc292 = loc(fused[#loc177, #loc178])
#loc293 = loc(fused[#loc179, #loc180])
#loc294 = loc(fused[#loc181, #loc178])
#loc295 = loc(fused[#loc185, #loc184])
#loc296 = loc(fused[#loc187, #loc188])
#loc297 = loc(fused[#loc186, #loc189])
#loc298 = loc(fused[#loc190, #loc189])
#loc299 = loc(fused[#loc191, #loc192])
#loc300 = loc(fused[#loc193, #loc194])
#loc301 = loc(fused[#loc195, #loc192])
#loc302 = loc(fused[#loc200, #loc199])
#loc303 = loc(fused[#loc202, #loc201])
#loc304 = loc(fused[#loc209, #loc210])
#loc305 = loc(fused[#loc211, #loc212])
#loc306 = loc(fused[#loc213, #loc210])
#loc307 = loc(fused[#loc217, #loc216])
