!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":26:53)
#loc6 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":26:59)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":40:57)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":40:63)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":50:57)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":50:63)
#loc54 = loc(fused[#loc5, #loc6])
#loc59 = loc(fused[#loc18, #loc19])
#loc65 = loc(fused[#loc34, #loc35])
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_51b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc52)
  cir.func @CWE369_Divide_by_Zero__float_fgets_51b_badSink(%arg0: !cir.float loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc56)
      %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc12)
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc13)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc13)
      %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc57)
      %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc57)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc56)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc14)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc15)
    } loc(#loc55)
    cir.return loc(#loc4)
  } loc(#loc53)
  cir.func @CWE369_Divide_by_Zero__float_fgets_51b_goodG2BSink(%arg0: !cir.float loc(fused[#loc18, #loc19])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc20)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc61)
      %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc25)
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc26)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc26)
      %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc62)
      %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc62)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc61)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc28)
    } loc(#loc60)
    cir.return loc(#loc17)
  } loc(#loc58)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc31)
  cir.func @CWE369_Divide_by_Zero__float_fgets_51b_goodB2GSink(%arg0: !cir.float loc(fused[#loc34, #loc35])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc36)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc39)
      %2 = cir.cast(floating, %1 : !cir.float), !cir.double loc(#loc39)
      %3 = cir.fabs %2 : !cir.double loc(#loc39)
      %4 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc40)
      %5 = cir.cmp(gt, %3, %4) : !cir.double, !cir.bool loc(#loc67)
      cir.if %5 {
        %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc69)
        %7 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc47)
        %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc48)
        %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc48)
        %10 = cir.binop(div, %7, %9) : !cir.double loc(#loc70)
        %11 = cir.cast(float_to_int, %10 : !cir.double), !s32i loc(#loc70)
        cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc69)
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc49)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc50)
      } else {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc31)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } loc(#loc68)
    } loc(#loc66)
    cir.return loc(#loc33)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_51b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":26:1)
#loc4 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":33:1)
#loc7 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":27:1)
#loc8 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":28:5)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":32:5)
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":30:9)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":30:40)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":30:28)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":30:36)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":31:22)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":31:9)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":40:1)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":47:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":41:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":42:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":46:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":44:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":44:40)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":44:28)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":44:36)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":45:22)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":45:9)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":60:19)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":50:1)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":62:1)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":51:1)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":53:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":61:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":53:13)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":53:21)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":53:8)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":54:5)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":57:5)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":59:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":55:9)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":55:40)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":55:28)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":55:36)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":56:22)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":56:9)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_51b.c":60:9)
#loc52 = loc(fused[#loc1, #loc2])
#loc53 = loc(fused[#loc3, #loc4])
#loc55 = loc(fused[#loc8, #loc9])
#loc56 = loc(fused[#loc10, #loc11])
#loc57 = loc(fused[#loc12, #loc13])
#loc58 = loc(fused[#loc16, #loc17])
#loc60 = loc(fused[#loc21, #loc22])
#loc61 = loc(fused[#loc23, #loc24])
#loc62 = loc(fused[#loc25, #loc26])
#loc63 = loc(fused[#loc29, #loc30])
#loc64 = loc(fused[#loc32, #loc33])
#loc66 = loc(fused[#loc37, #loc38])
#loc67 = loc(fused[#loc41, #loc40])
#loc68 = loc(fused[#loc42, #loc43, #loc44, #loc38])
#loc69 = loc(fused[#loc45, #loc46])
#loc70 = loc(fused[#loc47, #loc48])
