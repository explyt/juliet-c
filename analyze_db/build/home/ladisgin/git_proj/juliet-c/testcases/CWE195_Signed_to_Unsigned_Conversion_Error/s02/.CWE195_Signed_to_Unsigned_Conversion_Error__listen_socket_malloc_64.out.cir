!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":43:83)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":43:90)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":69:87)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":69:94)
#loc100 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc96)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc98)
  cir.func @CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc101)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc17)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc14)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc18)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.scope {
      %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc23)
      %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc104)
      cir.if %9 {
        %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc106)
        %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc27)
        %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc28)
        %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
        cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
        cir.scope {
          %34 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
          %37 = cir.cmp(eq, %34, %36) : !cir.ptr<!s8i>, !cir.bool loc(#loc109)
          cir.if %37 {
            %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc35)
            %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc36)
            cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
          } loc(#loc110)
        } loc(#loc108)
        %16 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
        %18 = cir.const #cir.int<65> : !s32i loc(#loc38)
        %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc39)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc39)
        cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc111)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc43)
        %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc43)
        %25 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc45)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc45)
        %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc47)
        cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc112)
        %30 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc49)
        %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc50)
        %32 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
        cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
      } loc(#loc105)
    } loc(#loc103)
    cir.return loc(#loc10)
  } loc(#loc99)
  cir.func @CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc54, #loc55])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc116)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc60)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc57)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc57)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc115)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.scope {
      %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc66)
      %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc118)
      cir.if %9 {
        %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc120)
        %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
        %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc71)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc71)
        %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
        cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
        cir.scope {
          %34 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
          %37 = cir.cmp(eq, %34, %36) : !cir.ptr<!s8i>, !cir.bool loc(#loc123)
          cir.if %37 {
            %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc77)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc79)
            cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
          } loc(#loc124)
        } loc(#loc122)
        %16 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
        %18 = cir.const #cir.int<65> : !s32i loc(#loc81)
        %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc82)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc82)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc82)
        cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc125)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc86)
        %25 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc88)
        %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc90)
        cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc126)
        %30 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc93)
        %32 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
        cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
      } loc(#loc119)
    } loc(#loc117)
    cir.return loc(#loc53)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":43:1)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":62:1)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":46:5)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":46:28)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":48:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":48:25)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":44:1)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":48:18)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":48:17)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":50:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":61:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":50:9)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":50:16)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":51:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":54:9)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":54:48)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":54:37)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":54:44)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":55:9)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":55:43)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":55:13)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":55:27)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":55:33)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":55:34)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":55:40)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":55:39)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":57:16)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":57:28)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":57:33)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":57:38)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":57:9)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":57:39)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":58:30)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":58:9)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":58:20)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":58:25)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":58:26)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":59:19)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":59:9)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":60:9)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":60:14)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":69:1)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":88:1)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":72:5)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":72:28)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":74:5)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":74:25)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":70:1)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":74:18)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":74:17)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":76:5)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":87:5)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":76:9)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":76:16)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":77:5)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":80:9)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":80:48)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":80:37)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":80:44)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":81:9)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":81:43)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":81:13)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":81:27)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":81:33)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":81:34)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":81:40)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":81:39)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":83:16)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":83:28)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":83:33)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":83:38)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":83:9)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":83:39)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":84:30)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":84:9)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":84:20)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":84:25)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":84:26)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":85:19)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":85:9)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":86:9)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_64b.c":86:14)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc99 = loc(fused[#loc9, #loc10])
#loc101 = loc(fused[#loc13, #loc14])
#loc102 = loc(fused[#loc15, #loc16])
#loc103 = loc(fused[#loc20, #loc21])
#loc104 = loc(fused[#loc22, #loc23])
#loc105 = loc(fused[#loc24, #loc21])
#loc106 = loc(fused[#loc25, #loc26])
#loc107 = loc(fused[#loc27, #loc26])
#loc108 = loc(fused[#loc29, #loc30])
#loc109 = loc(fused[#loc31, #loc32])
#loc110 = loc(fused[#loc33, #loc30])
#loc111 = loc(fused[#loc41, #loc42])
#loc112 = loc(fused[#loc44, #loc43])
#loc113 = loc(fused[#loc52, #loc53])
#loc115 = loc(fused[#loc56, #loc57])
#loc116 = loc(fused[#loc58, #loc59])
#loc117 = loc(fused[#loc63, #loc64])
#loc118 = loc(fused[#loc65, #loc66])
#loc119 = loc(fused[#loc67, #loc64])
#loc120 = loc(fused[#loc68, #loc69])
#loc121 = loc(fused[#loc70, #loc69])
#loc122 = loc(fused[#loc72, #loc73])
#loc123 = loc(fused[#loc74, #loc75])
#loc124 = loc(fused[#loc76, #loc73])
#loc125 = loc(fused[#loc84, #loc85])
#loc126 = loc(fused[#loc87, #loc86])
