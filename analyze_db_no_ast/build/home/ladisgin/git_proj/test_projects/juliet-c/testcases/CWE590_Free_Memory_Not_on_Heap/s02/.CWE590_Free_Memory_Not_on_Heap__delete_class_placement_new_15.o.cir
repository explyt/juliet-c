!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func private  @printIntLine(!s32i) loc(#loc107)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc108)
  cir.func  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_153badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc111)
    cir.scope {
      %8 = cir.const #cir.int<6> : !s32i loc(#loc17)
      cir.switch (%8 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %9 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc114)
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc115)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc116)
          %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc25)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc116)
          cir.call @_ZN12TwoIntsClassC2Ev(%14) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc23)
          cir.store %14, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc115)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc26)
          %16 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc27)
          %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc117)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc29)
          %19 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
          %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
          cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc118)
          %21 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
          cir.store %21, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc119)
        } loc(#loc113)
        cir.break loc(#loc34)
      },
      case (default) {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc35)
        cir.break loc(#loc36)
      }
      ] loc(#loc15)
    } loc(#loc112)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc39)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc40)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc41)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc41)
    cir.return loc(#loc10)
  } loc(#loc109)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc120)
  cir.func internal private  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc123)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc52)
      cir.switch (%8 : !s32i) [
      case (equal, 6) {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc54)
        cir.break loc(#loc55)
      },
      case (default) {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc126)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc127)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc126)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc127)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc59)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc126)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc61)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc62)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc128)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc63)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc64)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc129)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc130)
        } loc(#loc125)
        cir.break loc(#loc67)
      }
      ] loc(#loc50)
    } loc(#loc124)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc70)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc71)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc72)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc72)
    cir.return loc(#loc45)
  } loc(#loc121)
  cir.func internal private  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc77)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc133)
    cir.scope {
      %8 = cir.const #cir.int<6> : !s32i loc(#loc81)
      cir.switch (%8 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc136)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc137)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc136)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc137)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc85)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc136)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc87)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc88)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc138)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc89)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc90)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc139)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc91)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc140)
        } loc(#loc135)
        cir.break loc(#loc93)
      },
      case (default) {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc95)
        cir.break loc(#loc96)
      }
      ] loc(#loc79)
    } loc(#loc134)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc97)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc99)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc100)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc100)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc101)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc101)
    cir.return loc(#loc74)
  } loc(#loc131)
  cir.func  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_154goodEv() extra(#fn_attr2) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15L8goodG2B1Ev() : () -> () loc(#loc104)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15L8goodG2B2Ev() : () -> () loc(#loc105)
    cir.return loc(#loc103)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":44:19)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":26:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":50:1)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":28:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":28:20)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":29:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":29:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":30:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":46:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":30:12)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":33:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":40:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":35:9)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":35:41)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":36:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":36:49)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":36:37)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":36:41)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":37:30)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":37:9)
#loc28 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":38:30)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":38:9)
#loc31 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":39:16)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":39:9)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":41:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":44:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":45:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":47:18)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":47:24)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":47:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":49:12)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":26:6)
#loc42 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc43 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":57:1)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":80:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":59:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":59:20)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":60:12)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":60:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":61:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":76:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":61:12)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":65:19)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":65:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":66:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":68:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":74:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":70:9)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":70:41)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":70:37)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":71:30)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":71:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":72:30)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":72:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":73:16)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":73:9)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":75:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":77:18)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":77:24)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":77:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":79:12)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":57:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":83:1)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":106:1)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":85:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":85:20)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":86:12)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":86:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":87:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":102:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":87:12)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":90:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":96:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":92:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":92:41)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":92:37)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":93:30)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":93:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":94:30)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":94:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":95:16)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":95:9)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":97:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":100:19)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":100:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":101:9)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":103:18)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":103:24)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":103:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":105:12)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":83:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":108:1)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":112:1)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":110:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":111:5)
#loc106 = loc(fused[#loc2, #loc3])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc14, #loc13])
#loc112 = loc(fused[#loc15, #loc16])
#loc113 = loc(fused[#loc18, #loc19])
#loc114 = loc(fused[#loc20, #loc21])
#loc115 = loc(fused[#loc22, #loc23])
#loc116 = loc(fused[#loc24, #loc23])
#loc117 = loc(fused[#loc27, #loc26])
#loc118 = loc(fused[#loc30, #loc29])
#loc119 = loc(fused[#loc33, #loc32])
#loc120 = loc(fused[#loc42, #loc43])
#loc121 = loc(fused[#loc44, #loc45])
#loc122 = loc(fused[#loc46, #loc47])
#loc123 = loc(fused[#loc49, #loc48])
#loc124 = loc(fused[#loc50, #loc51])
#loc125 = loc(fused[#loc56, #loc57])
#loc126 = loc(fused[#loc58, #loc59])
#loc127 = loc(fused[#loc60, #loc59])
#loc128 = loc(fused[#loc62, #loc61])
#loc129 = loc(fused[#loc64, #loc63])
#loc130 = loc(fused[#loc66, #loc65])
#loc131 = loc(fused[#loc73, #loc74])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc78, #loc77])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc82, #loc83])
#loc136 = loc(fused[#loc84, #loc85])
#loc137 = loc(fused[#loc86, #loc85])
#loc138 = loc(fused[#loc88, #loc87])
#loc139 = loc(fused[#loc90, #loc89])
#loc140 = loc(fused[#loc92, #loc91])
#loc141 = loc(fused[#loc102, #loc103])
