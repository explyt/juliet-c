!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":27:16)
#loc13 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":27:24)
#loc35 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":42:20)
#loc36 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":42:28)
#loc47 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":52:20)
#loc48 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":52:28)
#loc74 = loc(fused[#loc12, #loc13])
#loc82 = loc(fused[#loc35, #loc36])
#loc85 = loc(fused[#loc47, #loc48])
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc70)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc72)
  cir.func @_ZN34CWE401_Memory_Leak__char_calloc_629badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc74)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    %1 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc15)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc16)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc75)
    %5 = cir.call @calloc(%3, %4) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
    cir.store %6, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    cir.br ^bb1 loc(#loc78)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc23)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc79)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc80)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc26)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc28)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
    cir.br ^bb3 loc(#loc22)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    cir.return loc(#loc11)
  } loc(#loc73)
  cir.func @_ZN34CWE401_Memory_Leak__char_calloc_6213goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc35, #loc36])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc82)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc37)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc38)
    %3 = cir.const #cir.int<1> : !u64i loc(#loc38)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc38)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc38)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc38)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc40)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc42)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc42)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.return loc(#loc34)
  } loc(#loc81)
  cir.func @_ZN34CWE401_Memory_Leak__char_calloc_6213goodB2GSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc85)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc49)
    %1 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc50)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc51)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc86)
    %5 = cir.call @calloc(%3, %4) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    cir.store %6, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    cir.br ^bb1 loc(#loc89)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc59)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc90)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc91)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc61)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc63)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb3 loc(#loc57)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc57)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc65)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc65)
    %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc66)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc67)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.return loc(#loc46)
  } loc(#loc84)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_62b.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":33:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":27:1)
#loc11 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":35:1)
#loc14 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":28:1)
#loc15 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":30:20)
#loc16 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":30:27)
#loc17 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":30:32)
#loc18 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":30:43)
#loc19 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":30:44)
#loc20 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":30:5)
#loc21 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":31:5)
#loc22 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":31:33)
#loc23 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":31:9)
#loc24 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":31:17)
#loc25 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":31:23)
#loc26 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":31:24)
#loc27 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":31:30)
#loc28 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":31:29)
#loc29 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":33:12)
#loc30 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":33:5)
#loc31 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":34:15)
#loc32 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":34:5)
#loc33 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":42:1)
#loc34 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":49:1)
#loc37 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":43:1)
#loc38 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":45:20)
#loc39 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":45:5)
#loc40 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":47:5)
#loc41 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":47:12)
#loc42 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":47:18)
#loc43 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":48:15)
#loc44 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":48:5)
#loc45 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":52:1)
#loc46 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":60:1)
#loc49 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":53:1)
#loc50 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":55:20)
#loc51 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":55:27)
#loc52 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":55:32)
#loc53 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":55:43)
#loc54 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":55:44)
#loc55 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":55:5)
#loc56 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":56:5)
#loc57 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":56:33)
#loc58 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":56:9)
#loc59 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":56:17)
#loc60 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":56:23)
#loc61 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":56:24)
#loc62 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":56:30)
#loc63 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":56:29)
#loc64 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":58:12)
#loc65 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":58:18)
#loc66 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":58:5)
#loc67 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":59:15)
#loc68 = loc("CWE401_Memory_Leak__char_calloc_62b.cpp":59:5)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc3, #loc4])
#loc71 = loc(fused[#loc5, #loc6])
#loc72 = loc(fused[#loc8, #loc9])
#loc73 = loc(fused[#loc10, #loc11])
#loc75 = loc(fused[#loc17, #loc18])
#loc76 = loc(fused[#loc15, #loc19])
#loc77 = loc(fused[#loc20, #loc19])
#loc78 = loc(fused[#loc21, #loc22])
#loc79 = loc(fused[#loc23, #loc24])
#loc80 = loc(fused[#loc25, #loc22])
#loc81 = loc(fused[#loc33, #loc34])
#loc83 = loc(fused[#loc39, #loc38])
#loc84 = loc(fused[#loc45, #loc46])
#loc86 = loc(fused[#loc52, #loc53])
#loc87 = loc(fused[#loc50, #loc54])
#loc88 = loc(fused[#loc55, #loc54])
#loc89 = loc(fused[#loc56, #loc57])
#loc90 = loc(fused[#loc58, #loc59])
#loc91 = loc(fused[#loc60, #loc57])
