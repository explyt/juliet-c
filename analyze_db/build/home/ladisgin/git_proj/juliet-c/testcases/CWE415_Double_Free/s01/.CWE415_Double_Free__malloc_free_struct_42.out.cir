!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE415_Double_Free__malloc_free_struct_42.c":24:34)
#loc8 = loc("CWE415_Double_Free__malloc_free_struct_42.c":24:50)
#loc60 = loc("CWE415_Double_Free__malloc_free_struct_42.c":102:10)
#loc61 = loc("CWE415_Double_Free__malloc_free_struct_42.c":102:14)
#loc62 = loc("CWE415_Double_Free__malloc_free_struct_42.c":102:20)
#loc63 = loc("CWE415_Double_Free__malloc_free_struct_42.c":102:32)
#loc80 = loc("CWE415_Double_Free__malloc_free_struct_42.c":67:38)
#loc81 = loc("CWE415_Double_Free__malloc_free_struct_42.c":67:54)
#loc113 = loc("CWE415_Double_Free__malloc_free_struct_42.c":48:38)
#loc114 = loc("CWE415_Double_Free__malloc_free_struct_42.c":48:54)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc147 = loc(fused[#loc7, #loc8])
#loc168 = loc(fused[#loc60, #loc61])
#loc169 = loc(fused[#loc62, #loc63])
#loc174 = loc(fused[#loc80, #loc81])
#loc188 = loc(fused[#loc113, #loc114])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_struct_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc145)
  cir.func internal private @badSource(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc9)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc148)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc149)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc19)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc153)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc23)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc24)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
    cir.store %18, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
    cir.return %19 : !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
  } loc(#loc146)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func no_proto @CWE415_Double_Free__malloc_free_struct_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc160)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc40)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc41)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
    cir.return loc(#loc31)
  } loc(#loc157)
  cir.func no_proto @CWE415_Double_Free__malloc_free_struct_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc161)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc164)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func @main(%arg0: !s32i loc(fused[#loc60, #loc61]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc64)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc65)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc66)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc66)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc67)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %8 = cir.get_global @CWE415_Double_Free__malloc_free_struct_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call @CWE415_Double_Free__malloc_free_struct_42_good() : () -> () loc(#loc69)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc56)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %13 = cir.get_global @CWE415_Double_Free__malloc_free_struct_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call @CWE415_Double_Free__malloc_free_struct_42_bad() : () -> () loc(#loc73)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.return %17 : !s32i loc(#loc172)
  } loc(#loc167)
  cir.func internal private @goodB2GSource(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc80, #loc81])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc79)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc82)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc84)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc175)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc176)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc177)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc178)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc180)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc181)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc94)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc96)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
    cir.br ^bb3 loc(#loc90)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc97)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc98)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
    cir.store %18, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc182)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
    cir.return %19 : !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
  } loc(#loc173)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc185)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %3 = cir.call @goodB2GSource(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc186)
    cir.return loc(#loc102)
  } loc(#loc183)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc113, #loc114])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc112)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc115)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc116)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc117)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc189)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc190)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc194)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc127)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc129)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc127)
    cir.br ^bb3 loc(#loc123)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc123)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    cir.store %16, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc196)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
    cir.return %17 : !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
  } loc(#loc187)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc199)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc200)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc142)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc143)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc142)
    cir.return loc(#loc133)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_struct_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE415_Double_Free__malloc_free_struct_42.c":24:1)
#loc6 = loc("CWE415_Double_Free__malloc_free_struct_42.c":31:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_struct_42.c":25:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_struct_42.c":26:29)
#loc11 = loc("CWE415_Double_Free__malloc_free_struct_42.c":26:36)
#loc12 = loc("CWE415_Double_Free__malloc_free_struct_42.c":26:40)
#loc13 = loc("CWE415_Double_Free__malloc_free_struct_42.c":26:60)
#loc14 = loc("CWE415_Double_Free__malloc_free_struct_42.c":26:61)
#loc15 = loc("CWE415_Double_Free__malloc_free_struct_42.c":26:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_struct_42.c":27:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_struct_42.c":27:33)
#loc18 = loc("CWE415_Double_Free__malloc_free_struct_42.c":27:9)
#loc19 = loc("CWE415_Double_Free__malloc_free_struct_42.c":27:17)
#loc20 = loc("CWE415_Double_Free__malloc_free_struct_42.c":27:23)
#loc21 = loc("CWE415_Double_Free__malloc_free_struct_42.c":27:24)
#loc22 = loc("CWE415_Double_Free__malloc_free_struct_42.c":27:30)
#loc23 = loc("CWE415_Double_Free__malloc_free_struct_42.c":27:29)
#loc24 = loc("CWE415_Double_Free__malloc_free_struct_42.c":29:10)
#loc25 = loc("CWE415_Double_Free__malloc_free_struct_42.c":29:5)
#loc26 = loc("CWE415_Double_Free__malloc_free_struct_42.c":30:12)
#loc27 = loc("CWE415_Double_Free__malloc_free_struct_42.c":30:5)
#loc28 = loc("/usr/include/stdlib.h":687:1)
#loc29 = loc("/usr/include/stdlib.h":687:32)
#loc30 = loc("CWE415_Double_Free__malloc_free_struct_42.c":33:1)
#loc31 = loc("CWE415_Double_Free__malloc_free_struct_42.c":41:1)
#loc32 = loc("CWE415_Double_Free__malloc_free_struct_42.c":35:5)
#loc33 = loc("CWE415_Double_Free__malloc_free_struct_42.c":35:21)
#loc34 = loc("CWE415_Double_Free__malloc_free_struct_42.c":37:12)
#loc35 = loc("CWE415_Double_Free__malloc_free_struct_42.c":37:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_struct_42.c":38:22)
#loc37 = loc("CWE415_Double_Free__malloc_free_struct_42.c":38:12)
#loc38 = loc("CWE415_Double_Free__malloc_free_struct_42.c":38:5)
#loc39 = loc("CWE415_Double_Free__malloc_free_struct_42.c":38:26)
#loc40 = loc("CWE415_Double_Free__malloc_free_struct_42.c":40:5)
#loc41 = loc("CWE415_Double_Free__malloc_free_struct_42.c":40:10)
#loc42 = loc("CWE415_Double_Free__malloc_free_struct_42.c":87:1)
#loc43 = loc("CWE415_Double_Free__malloc_free_struct_42.c":91:1)
#loc44 = loc("CWE415_Double_Free__malloc_free_struct_42.c":89:5)
#loc45 = loc("CWE415_Double_Free__malloc_free_struct_42.c":89:13)
#loc46 = loc("CWE415_Double_Free__malloc_free_struct_42.c":90:5)
#loc47 = loc("CWE415_Double_Free__malloc_free_struct_42.c":90:13)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc54 = loc("CWE415_Double_Free__malloc_free_struct_42.c":107:15)
#loc55 = loc("CWE415_Double_Free__malloc_free_struct_42.c":109:15)
#loc56 = loc("CWE415_Double_Free__malloc_free_struct_42.c":112:15)
#loc57 = loc("CWE415_Double_Free__malloc_free_struct_42.c":114:15)
#loc58 = loc("CWE415_Double_Free__malloc_free_struct_42.c":102:1)
#loc59 = loc("CWE415_Double_Free__malloc_free_struct_42.c":117:1)
#loc64 = loc("CWE415_Double_Free__malloc_free_struct_42.c":103:1)
#loc65 = loc("CWE415_Double_Free__malloc_free_struct_42.c":105:27)
#loc66 = loc("CWE415_Double_Free__malloc_free_struct_42.c":105:22)
#loc67 = loc("CWE415_Double_Free__malloc_free_struct_42.c":105:5)
#loc68 = loc("CWE415_Double_Free__malloc_free_struct_42.c":107:5)
#loc69 = loc("CWE415_Double_Free__malloc_free_struct_42.c":108:5)
#loc70 = loc("CWE415_Double_Free__malloc_free_struct_42.c":108:52)
#loc71 = loc("CWE415_Double_Free__malloc_free_struct_42.c":109:5)
#loc72 = loc("CWE415_Double_Free__malloc_free_struct_42.c":112:5)
#loc73 = loc("CWE415_Double_Free__malloc_free_struct_42.c":113:5)
#loc74 = loc("CWE415_Double_Free__malloc_free_struct_42.c":113:51)
#loc75 = loc("CWE415_Double_Free__malloc_free_struct_42.c":114:5)
#loc76 = loc("CWE415_Double_Free__malloc_free_struct_42.c":116:12)
#loc77 = loc("CWE415_Double_Free__malloc_free_struct_42.c":116:5)
#loc78 = loc("CWE415_Double_Free__malloc_free_struct_42.c":67:1)
#loc79 = loc("CWE415_Double_Free__malloc_free_struct_42.c":74:1)
#loc82 = loc("CWE415_Double_Free__malloc_free_struct_42.c":68:1)
#loc83 = loc("CWE415_Double_Free__malloc_free_struct_42.c":69:29)
#loc84 = loc("CWE415_Double_Free__malloc_free_struct_42.c":69:36)
#loc85 = loc("CWE415_Double_Free__malloc_free_struct_42.c":69:40)
#loc86 = loc("CWE415_Double_Free__malloc_free_struct_42.c":69:60)
#loc87 = loc("CWE415_Double_Free__malloc_free_struct_42.c":69:61)
#loc88 = loc("CWE415_Double_Free__malloc_free_struct_42.c":69:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_struct_42.c":70:5)
#loc90 = loc("CWE415_Double_Free__malloc_free_struct_42.c":70:33)
#loc91 = loc("CWE415_Double_Free__malloc_free_struct_42.c":70:9)
#loc92 = loc("CWE415_Double_Free__malloc_free_struct_42.c":70:17)
#loc93 = loc("CWE415_Double_Free__malloc_free_struct_42.c":70:23)
#loc94 = loc("CWE415_Double_Free__malloc_free_struct_42.c":70:24)
#loc95 = loc("CWE415_Double_Free__malloc_free_struct_42.c":70:30)
#loc96 = loc("CWE415_Double_Free__malloc_free_struct_42.c":70:29)
#loc97 = loc("CWE415_Double_Free__malloc_free_struct_42.c":72:10)
#loc98 = loc("CWE415_Double_Free__malloc_free_struct_42.c":72:5)
#loc99 = loc("CWE415_Double_Free__malloc_free_struct_42.c":73:12)
#loc100 = loc("CWE415_Double_Free__malloc_free_struct_42.c":73:5)
#loc101 = loc("CWE415_Double_Free__malloc_free_struct_42.c":76:1)
#loc102 = loc("CWE415_Double_Free__malloc_free_struct_42.c":85:1)
#loc103 = loc("CWE415_Double_Free__malloc_free_struct_42.c":78:5)
#loc104 = loc("CWE415_Double_Free__malloc_free_struct_42.c":78:21)
#loc105 = loc("CWE415_Double_Free__malloc_free_struct_42.c":80:12)
#loc106 = loc("CWE415_Double_Free__malloc_free_struct_42.c":80:5)
#loc107 = loc("CWE415_Double_Free__malloc_free_struct_42.c":81:26)
#loc108 = loc("CWE415_Double_Free__malloc_free_struct_42.c":81:12)
#loc109 = loc("CWE415_Double_Free__malloc_free_struct_42.c":81:5)
#loc110 = loc("CWE415_Double_Free__malloc_free_struct_42.c":81:30)
#loc111 = loc("CWE415_Double_Free__malloc_free_struct_42.c":48:1)
#loc112 = loc("CWE415_Double_Free__malloc_free_struct_42.c":54:1)
#loc115 = loc("CWE415_Double_Free__malloc_free_struct_42.c":49:1)
#loc116 = loc("CWE415_Double_Free__malloc_free_struct_42.c":50:29)
#loc117 = loc("CWE415_Double_Free__malloc_free_struct_42.c":50:36)
#loc118 = loc("CWE415_Double_Free__malloc_free_struct_42.c":50:40)
#loc119 = loc("CWE415_Double_Free__malloc_free_struct_42.c":50:60)
#loc120 = loc("CWE415_Double_Free__malloc_free_struct_42.c":50:61)
#loc121 = loc("CWE415_Double_Free__malloc_free_struct_42.c":50:5)
#loc122 = loc("CWE415_Double_Free__malloc_free_struct_42.c":51:5)
#loc123 = loc("CWE415_Double_Free__malloc_free_struct_42.c":51:33)
#loc124 = loc("CWE415_Double_Free__malloc_free_struct_42.c":51:9)
#loc125 = loc("CWE415_Double_Free__malloc_free_struct_42.c":51:17)
#loc126 = loc("CWE415_Double_Free__malloc_free_struct_42.c":51:23)
#loc127 = loc("CWE415_Double_Free__malloc_free_struct_42.c":51:24)
#loc128 = loc("CWE415_Double_Free__malloc_free_struct_42.c":51:30)
#loc129 = loc("CWE415_Double_Free__malloc_free_struct_42.c":51:29)
#loc130 = loc("CWE415_Double_Free__malloc_free_struct_42.c":53:12)
#loc131 = loc("CWE415_Double_Free__malloc_free_struct_42.c":53:5)
#loc132 = loc("CWE415_Double_Free__malloc_free_struct_42.c":56:1)
#loc133 = loc("CWE415_Double_Free__malloc_free_struct_42.c":64:1)
#loc134 = loc("CWE415_Double_Free__malloc_free_struct_42.c":58:5)
#loc135 = loc("CWE415_Double_Free__malloc_free_struct_42.c":58:21)
#loc136 = loc("CWE415_Double_Free__malloc_free_struct_42.c":60:12)
#loc137 = loc("CWE415_Double_Free__malloc_free_struct_42.c":60:5)
#loc138 = loc("CWE415_Double_Free__malloc_free_struct_42.c":61:26)
#loc139 = loc("CWE415_Double_Free__malloc_free_struct_42.c":61:12)
#loc140 = loc("CWE415_Double_Free__malloc_free_struct_42.c":61:5)
#loc141 = loc("CWE415_Double_Free__malloc_free_struct_42.c":61:30)
#loc142 = loc("CWE415_Double_Free__malloc_free_struct_42.c":63:5)
#loc143 = loc("CWE415_Double_Free__malloc_free_struct_42.c":63:10)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc12, #loc13])
#loc149 = loc(fused[#loc11, #loc13])
#loc150 = loc(fused[#loc10, #loc14])
#loc151 = loc(fused[#loc15, #loc14])
#loc152 = loc(fused[#loc16, #loc17])
#loc153 = loc(fused[#loc18, #loc19])
#loc154 = loc(fused[#loc20, #loc17])
#loc155 = loc(fused[#loc27, #loc26])
#loc156 = loc(fused[#loc28, #loc29])
#loc157 = loc(fused[#loc30, #loc31])
#loc158 = loc(fused[#loc32, #loc33])
#loc159 = loc(fused[#loc35, #loc34])
#loc160 = loc(fused[#loc38, #loc39])
#loc161 = loc(fused[#loc42, #loc43])
#loc162 = loc(fused[#loc44, #loc45])
#loc163 = loc(fused[#loc46, #loc47])
#loc164 = loc(fused[#loc48, #loc49])
#loc165 = loc(fused[#loc50, #loc51])
#loc166 = loc(fused[#loc52, #loc53])
#loc167 = loc(fused[#loc58, #loc59])
#loc170 = loc(fused[#loc69, #loc70])
#loc171 = loc(fused[#loc73, #loc74])
#loc172 = loc(fused[#loc77, #loc76])
#loc173 = loc(fused[#loc78, #loc79])
#loc175 = loc(fused[#loc85, #loc86])
#loc176 = loc(fused[#loc84, #loc86])
#loc177 = loc(fused[#loc83, #loc87])
#loc178 = loc(fused[#loc88, #loc87])
#loc179 = loc(fused[#loc89, #loc90])
#loc180 = loc(fused[#loc91, #loc92])
#loc181 = loc(fused[#loc93, #loc90])
#loc182 = loc(fused[#loc100, #loc99])
#loc183 = loc(fused[#loc101, #loc102])
#loc184 = loc(fused[#loc103, #loc104])
#loc185 = loc(fused[#loc106, #loc105])
#loc186 = loc(fused[#loc109, #loc110])
#loc187 = loc(fused[#loc111, #loc112])
#loc189 = loc(fused[#loc118, #loc119])
#loc190 = loc(fused[#loc117, #loc119])
#loc191 = loc(fused[#loc116, #loc120])
#loc192 = loc(fused[#loc121, #loc120])
#loc193 = loc(fused[#loc122, #loc123])
#loc194 = loc(fused[#loc124, #loc125])
#loc195 = loc(fused[#loc126, #loc123])
#loc196 = loc(fused[#loc131, #loc130])
#loc197 = loc(fused[#loc132, #loc133])
#loc198 = loc(fused[#loc134, #loc135])
#loc199 = loc(fused[#loc137, #loc136])
#loc200 = loc(fused[#loc140, #loc141])
