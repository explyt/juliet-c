!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_memmove_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_memmove_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc164)
    %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc165)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc166)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc163)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc164)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc18)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc19)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc19)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc23)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc24)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc24)
    %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc26)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc28)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc29)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc29)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc33)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc34)
    %31 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    cir.scope {
      %33 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
      %34 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
      %35 = cir.load %34 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      cir.store %35, %33 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
      %36 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc42)
      cir.store %36, %33 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
      %37 = cir.load %33 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %38 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
      cir.store %37, %38 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    } loc(#loc171)
    cir.scope {
      %33 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc176)
      %34 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc50)
      %35 = cir.load %34 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      cir.store %35, %33 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
      cir.scope {
        %36 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc178)
        %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
        %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
        %39 = cir.const #cir.int<67> : !s32i loc(#loc57)
        %40 = cir.const #cir.int<100> : !s32i loc(#loc58)
        %41 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc58)
        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc58)
        cir.libc.memset %43 bytes from %38 set to %39 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
        %44 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc62)
        %46 = cir.const #cir.int<100> : !s32i loc(#loc63)
        %47 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc63)
        %49 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
        %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc65)
        cir.store %45, %50 : !s8i, !cir.ptr<!s8i> loc(#loc180)
        %51 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
        %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
        %53 = cir.load %33 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
        %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
        %55 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc68)
        %56 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
        %57 = cir.call @strlen(%56) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc68)
        %58 = cir.const #cir.int<1> : !u64i loc(#loc181)
        %59 = cir.binop(mul, %57, %58) : !u64i loc(#loc182)
        cir.libc.memmove %59 bytes from %54 to %52 : !cir.ptr<!void>, !u64i loc(#loc183)
        %60 = cir.const #cir.int<0> : !s32i loc(#loc74)
        %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc74)
        %62 = cir.const #cir.int<100> : !s32i loc(#loc75)
        %63 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %64 = cir.binop(sub, %62, %63) nsw : !s32i loc(#loc75)
        %65 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
        %66 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc77)
        cir.store %61, %66 : !s8i, !cir.ptr<!s8i> loc(#loc184)
        %67 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
        cir.call @printLine(%67) : (!cir.ptr<!s8i>) -> () loc(#loc79)
      } loc(#loc177)
    } loc(#loc175)
    cir.return loc(#loc6)
  } loc(#loc161)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_memmove_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc186)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc82)
    cir.return loc(#loc81)
  } loc(#loc185)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc190)
    %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc191)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc192)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc189)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc190)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc96)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc97)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc98)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc98)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc98)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc193)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc102)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc103)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc103)
    %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc105)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc194)
    %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc107)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc108)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc108)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc195)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc112)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc113)
    %31 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    cir.scope {
      %33 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc198)
      %34 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
      %35 = cir.load %34 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
      cir.store %35, %33 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
      %36 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
      cir.store %36, %33 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
      %37 = cir.load %33 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      %38 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
      cir.store %37, %38 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    } loc(#loc197)
    cir.scope {
      %33 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc202)
      %34 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
      %35 = cir.load %34 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      cir.store %35, %33 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
      cir.scope {
        %36 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc204)
        %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
        %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
        %39 = cir.const #cir.int<67> : !s32i loc(#loc136)
        %40 = cir.const #cir.int<100> : !s32i loc(#loc137)
        %41 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc137)
        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc137)
        cir.libc.memset %43 bytes from %38 set to %39 : !cir.ptr<!void>, !s32i, !u64i loc(#loc205)
        %44 = cir.const #cir.int<0> : !s32i loc(#loc141)
        %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc141)
        %46 = cir.const #cir.int<100> : !s32i loc(#loc142)
        %47 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc142)
        %49 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
        %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc144)
        cir.store %45, %50 : !s8i, !cir.ptr<!s8i> loc(#loc206)
        %51 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
        %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
        %53 = cir.load %33 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
        %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
        %55 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc147)
        %56 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
        %57 = cir.call @strlen(%56) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc147)
        %58 = cir.const #cir.int<1> : !u64i loc(#loc207)
        %59 = cir.binop(mul, %57, %58) : !u64i loc(#loc208)
        cir.libc.memmove %59 bytes from %54 to %52 : !cir.ptr<!void>, !u64i loc(#loc209)
        %60 = cir.const #cir.int<0> : !s32i loc(#loc153)
        %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc153)
        %62 = cir.const #cir.int<100> : !s32i loc(#loc154)
        %63 = cir.const #cir.int<1> : !s32i loc(#loc155)
        %64 = cir.binop(sub, %62, %63) nsw : !s32i loc(#loc154)
        %65 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
        %66 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc156)
        cir.store %61, %66 : !s8i, !cir.ptr<!s8i> loc(#loc210)
        %67 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
        cir.call @printLine(%67) : (!cir.ptr<!s8i>) -> () loc(#loc158)
      } loc(#loc203)
    } loc(#loc201)
    cir.return loc(#loc85)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_memmove_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":53:1)
#loc7 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":25:5)
#loc8 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":25:12)
#loc9 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":26:5)
#loc10 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":26:25)
#loc11 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":27:5)
#loc12 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":27:25)
#loc13 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":28:5)
#loc14 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":28:26)
#loc15 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":29:5)
#loc16 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":29:28)
#loc17 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":30:12)
#loc18 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":30:27)
#loc19 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":30:32)
#loc20 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":30:35)
#loc21 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":30:5)
#loc22 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":30:36)
#loc23 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":31:27)
#loc24 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":31:19)
#loc25 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":31:22)
#loc26 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":31:5)
#loc27 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":32:12)
#loc28 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":32:28)
#loc29 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":32:33)
#loc30 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":32:37)
#loc31 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":32:5)
#loc32 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":32:38)
#loc33 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":33:29)
#loc34 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":33:20)
#loc35 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":33:24)
#loc36 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":33:5)
#loc37 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":34:5)
#loc38 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":39:5)
#loc39 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":35:9)
#loc40 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":35:24)
#loc41 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":35:23)
#loc42 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":37:16)
#loc43 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":37:9)
#loc44 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":38:21)
#loc45 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":38:10)
#loc46 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":38:9)
#loc47 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":40:5)
#loc48 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":52:5)
#loc49 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":41:9)
#loc50 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":41:24)
#loc51 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":41:23)
#loc52 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":42:9)
#loc53 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":51:9)
#loc54 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":43:13)
#loc55 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":43:26)
#loc56 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":44:20)
#loc57 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":44:26)
#loc58 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":44:31)
#loc59 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":44:35)
#loc60 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":44:13)
#loc61 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":44:36)
#loc62 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":45:27)
#loc63 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":45:18)
#loc64 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":45:22)
#loc65 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":45:13)
#loc66 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":48:21)
#loc67 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":48:27)
#loc68 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":48:33)
#loc69 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":48:40)
#loc70 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":48:46)
#loc71 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":48:57)
#loc72 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":48:13)
#loc73 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":48:58)
#loc74 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":49:27)
#loc75 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":49:18)
#loc76 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":49:22)
#loc77 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":49:13)
#loc78 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":50:23)
#loc79 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":50:13)
#loc80 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":92:1)
#loc81 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":95:1)
#loc82 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":94:5)
#loc83 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":94:13)
#loc84 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":60:1)
#loc85 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":90:1)
#loc86 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":62:5)
#loc87 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":62:12)
#loc88 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":63:5)
#loc89 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":63:25)
#loc90 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":64:5)
#loc91 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":64:25)
#loc92 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":65:5)
#loc93 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":65:26)
#loc94 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":66:5)
#loc95 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":66:28)
#loc96 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":67:12)
#loc97 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":67:27)
#loc98 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":67:32)
#loc99 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":67:35)
#loc100 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":67:5)
#loc101 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":67:36)
#loc102 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":68:27)
#loc103 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":68:19)
#loc104 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":68:22)
#loc105 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":68:5)
#loc106 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":69:12)
#loc107 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":69:28)
#loc108 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":69:33)
#loc109 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":69:37)
#loc110 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":69:5)
#loc111 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":69:38)
#loc112 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":70:29)
#loc113 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":70:20)
#loc114 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":70:24)
#loc115 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":70:5)
#loc116 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":71:5)
#loc117 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":76:5)
#loc118 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":72:9)
#loc119 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":72:24)
#loc120 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":72:23)
#loc121 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":74:16)
#loc122 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":74:9)
#loc123 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":75:21)
#loc124 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":75:10)
#loc125 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":75:9)
#loc126 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":77:5)
#loc127 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":89:5)
#loc128 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":78:9)
#loc129 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":78:24)
#loc130 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":78:23)
#loc131 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":79:9)
#loc132 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":88:9)
#loc133 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":80:13)
#loc134 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":80:26)
#loc135 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":81:20)
#loc136 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":81:26)
#loc137 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":81:31)
#loc138 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":81:35)
#loc139 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":81:13)
#loc140 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":81:36)
#loc141 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":82:27)
#loc142 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":82:18)
#loc143 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":82:22)
#loc144 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":82:13)
#loc145 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":85:21)
#loc146 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":85:27)
#loc147 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":85:33)
#loc148 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":85:40)
#loc149 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":85:46)
#loc150 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":85:57)
#loc151 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":85:13)
#loc152 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":85:58)
#loc153 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":86:27)
#loc154 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":86:18)
#loc155 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":86:22)
#loc156 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":86:13)
#loc157 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":87:23)
#loc158 = loc("CWE126_Buffer_Overread__char_declare_memmove_32.c":87:13)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc21, #loc22])
#loc168 = loc(fused[#loc26, #loc23])
#loc169 = loc(fused[#loc31, #loc32])
#loc170 = loc(fused[#loc36, #loc33])
#loc171 = loc(fused[#loc37, #loc38])
#loc172 = loc(fused[#loc39, #loc40])
#loc173 = loc(fused[#loc43, #loc42])
#loc174 = loc(fused[#loc46, #loc44])
#loc175 = loc(fused[#loc47, #loc48])
#loc176 = loc(fused[#loc49, #loc50])
#loc177 = loc(fused[#loc52, #loc53])
#loc178 = loc(fused[#loc54, #loc55])
#loc179 = loc(fused[#loc60, #loc61])
#loc180 = loc(fused[#loc65, #loc62])
#loc181 = loc(fused[#loc70, #loc71])
#loc182 = loc(fused[#loc68, #loc71])
#loc183 = loc(fused[#loc72, #loc73])
#loc184 = loc(fused[#loc77, #loc74])
#loc185 = loc(fused[#loc80, #loc81])
#loc186 = loc(fused[#loc82, #loc83])
#loc187 = loc(fused[#loc84, #loc85])
#loc188 = loc(fused[#loc86, #loc87])
#loc189 = loc(fused[#loc88, #loc89])
#loc190 = loc(fused[#loc90, #loc91])
#loc191 = loc(fused[#loc92, #loc93])
#loc192 = loc(fused[#loc94, #loc95])
#loc193 = loc(fused[#loc100, #loc101])
#loc194 = loc(fused[#loc105, #loc102])
#loc195 = loc(fused[#loc110, #loc111])
#loc196 = loc(fused[#loc115, #loc112])
#loc197 = loc(fused[#loc116, #loc117])
#loc198 = loc(fused[#loc118, #loc119])
#loc199 = loc(fused[#loc122, #loc121])
#loc200 = loc(fused[#loc125, #loc123])
#loc201 = loc(fused[#loc126, #loc127])
#loc202 = loc(fused[#loc128, #loc129])
#loc203 = loc(fused[#loc131, #loc132])
#loc204 = loc(fused[#loc133, #loc134])
#loc205 = loc(fused[#loc139, #loc140])
#loc206 = loc(fused[#loc144, #loc141])
#loc207 = loc(fused[#loc149, #loc150])
#loc208 = loc(fused[#loc147, #loc150])
#loc209 = loc(fused[#loc151, #loc152])
#loc210 = loc(fused[#loc156, #loc153])
