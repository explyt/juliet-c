!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc228)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc229)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc230)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc231)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private  @printIntLine(!s32i) loc(#loc232)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fgets_modulo_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc22)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc238)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc238)
          cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc238)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc30)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc30)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc30)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc30)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc30)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc30)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc30)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc30)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc240)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc34)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc242)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc42)
            } loc(#loc241)
          } loc(#loc239)
        } loc(#loc237)
        cir.break loc(#loc43)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc44)
        cir.break loc(#loc45)
      }
      ] loc(#loc20)
    } loc(#loc236)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc48)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc49)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
        %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc244)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc51)
        cir.break loc(#loc52)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc54)
        cir.break loc(#loc55)
      }
      ] loc(#loc46)
    } loc(#loc243)
    cir.return loc(#loc14)
  } loc(#loc233)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fgets_modulo_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc57)
  } loc(#loc245)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc72)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc76)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc255)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc255)
          cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc255)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc83)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc84)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc84)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc84)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc84)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc84)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc84)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc84)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc84)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc86)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc257)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc88)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc92)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc93)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc96)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc96)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc97)
            } loc(#loc258)
          } loc(#loc256)
        } loc(#loc254)
        cir.break loc(#loc98)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc100)
        cir.break loc(#loc101)
      }
      ] loc(#loc74)
    } loc(#loc253)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc104)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc106)
        cir.break loc(#loc107)
      },
      case (default) {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc262)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc112)
          cir.if %7 {
            %8 = cir.const #cir.int<100> : !s32i loc(#loc116)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc264)
            cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc118)
          } else {
            %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc66)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc66)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc119)
          } loc(#loc263)
        } loc(#loc261)
        cir.break loc(#loc120)
      }
      ] loc(#loc102)
    } loc(#loc260)
    cir.return loc(#loc68)
  } loc(#loc250)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc266)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc126)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc130)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc270)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc270)
          cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc270)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc138)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc138)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc138)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc138)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc138)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc138)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc138)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc138)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc139)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc140)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc272)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc142)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc146)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc147)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc274)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc150)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc150)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc151)
            } loc(#loc273)
          } loc(#loc271)
        } loc(#loc269)
        cir.break loc(#loc152)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc153)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc153)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc154)
        cir.break loc(#loc155)
      }
      ] loc(#loc128)
    } loc(#loc268)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc158)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc162)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc277)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc163)
          cir.if %7 {
            %8 = cir.const #cir.int<100> : !s32i loc(#loc167)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
            %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc279)
            cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc169)
          } else {
            %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc170)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc170)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc171)
          } loc(#loc278)
        } loc(#loc276)
        cir.break loc(#loc172)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc173)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc173)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc174)
        cir.break loc(#loc175)
      }
      ] loc(#loc156)
    } loc(#loc275)
    cir.return loc(#loc122)
  } loc(#loc265)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc281)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc181)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc185)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc186)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc186)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc187)
        cir.break loc(#loc188)
      },
      case (default) {
        %4 = cir.const #cir.int<7> : !s32i loc(#loc189)
        cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
        cir.break loc(#loc191)
      }
      ] loc(#loc183)
    } loc(#loc283)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc194)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc195)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
        %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc286)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc197)
        cir.break loc(#loc198)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc199)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc199)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc200)
        cir.break loc(#loc201)
      }
      ] loc(#loc192)
    } loc(#loc285)
    cir.return loc(#loc177)
  } loc(#loc280)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc288)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc207)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc211)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.const #cir.int<7> : !s32i loc(#loc212)
        cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
        cir.break loc(#loc214)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc215)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc215)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc216)
        cir.break loc(#loc217)
      }
      ] loc(#loc209)
    } loc(#loc290)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc220)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc221)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc222)
        %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc293)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc223)
        cir.break loc(#loc224)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc225)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc225)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc226)
        cir.break loc(#loc227)
      }
      ] loc(#loc218)
    } loc(#loc292)
    cir.return loc(#loc203)
  } loc(#loc287)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":42:23)
#loc10 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":48:19)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":24:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":62:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":26:5)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":26:9)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":28:13)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":28:12)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":28:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":29:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":50:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":29:12)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":32:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":44:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":33:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":33:45)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":35:9)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":43:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":35:19)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":35:32)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":35:49)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":35:13)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":35:59)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":35:56)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":36:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":39:9)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":41:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":38:25)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":38:20)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":38:13)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":38:36)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":42:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":45:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":48:9)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":49:9)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":51:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":61:5)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":51:12)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":55:22)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":55:28)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":55:9)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":56:9)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":59:19)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":59:9)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":60:9)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":224:1)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":230:1)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":226:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":226:14)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":227:5)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":227:14)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":228:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":228:14)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":229:5)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":229:14)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":110:23)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":69:1)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":114:1)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":71:5)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":71:9)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":73:13)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":73:12)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":73:5)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":74:5)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":95:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":74:12)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":77:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":89:5)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":78:9)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":78:45)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":80:9)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":88:9)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":80:19)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":80:32)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":80:49)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":80:13)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":80:59)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":80:56)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":81:9)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":84:9)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":86:9)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":83:25)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":83:20)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":83:13)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":83:36)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":87:23)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":87:13)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":90:5)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":93:19)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":93:9)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":94:9)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":96:5)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":113:5)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":96:12)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":100:19)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":100:9)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":101:9)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":104:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":111:9)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":104:13)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":104:21)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":104:18)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":105:9)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":107:9)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":109:9)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":106:26)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":106:32)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":106:13)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":110:13)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":112:9)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":117:1)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":162:1)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":119:5)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":119:9)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":121:13)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":121:12)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":121:5)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":122:5)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":143:5)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":122:12)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":125:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":137:5)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":126:9)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":126:45)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":128:9)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":136:9)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":128:19)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":128:32)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":128:49)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":128:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":128:59)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":128:56)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":129:9)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":132:9)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":134:9)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":131:25)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":131:20)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":131:13)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":131:36)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":135:23)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":135:13)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":138:5)
#loc153 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":141:19)
#loc154 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":141:9)
#loc155 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":142:9)
#loc156 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":144:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":161:5)
#loc158 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":144:12)
#loc159 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":148:9)
#loc160 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":155:9)
#loc161 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":148:13)
#loc162 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":148:21)
#loc163 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":148:18)
#loc164 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":149:9)
#loc165 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":151:9)
#loc166 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":153:9)
#loc167 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":150:26)
#loc168 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":150:32)
#loc169 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":150:13)
#loc170 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":154:23)
#loc171 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":154:13)
#loc172 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":156:9)
#loc173 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":159:19)
#loc174 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":159:9)
#loc175 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":160:9)
#loc176 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":165:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":192:1)
#loc178 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":167:5)
#loc179 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":167:9)
#loc180 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":169:13)
#loc181 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":169:12)
#loc182 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":169:5)
#loc183 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":170:5)
#loc184 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":180:5)
#loc185 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":170:12)
#loc186 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":174:19)
#loc187 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":174:9)
#loc188 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":175:9)
#loc189 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":178:16)
#loc190 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":178:9)
#loc191 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":179:9)
#loc192 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":181:5)
#loc193 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":191:5)
#loc194 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":181:12)
#loc195 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":185:22)
#loc196 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":185:28)
#loc197 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":185:9)
#loc198 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":186:9)
#loc199 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":189:19)
#loc200 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":189:9)
#loc201 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":190:9)
#loc202 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":195:1)
#loc203 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":222:1)
#loc204 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":197:5)
#loc205 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":197:9)
#loc206 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":199:13)
#loc207 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":199:12)
#loc208 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":199:5)
#loc209 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":200:5)
#loc210 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":210:5)
#loc211 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":200:12)
#loc212 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":204:16)
#loc213 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":204:9)
#loc214 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":205:9)
#loc215 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":208:19)
#loc216 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":208:9)
#loc217 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":209:9)
#loc218 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":211:5)
#loc219 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":221:5)
#loc220 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":211:12)
#loc221 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":215:22)
#loc222 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":215:28)
#loc223 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":215:9)
#loc224 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":216:9)
#loc225 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":219:19)
#loc226 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":219:9)
#loc227 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_15.c":220:9)
#loc228 = loc(fused[#loc1, #loc2])
#loc229 = loc(fused[#loc3, #loc4])
#loc230 = loc(fused[#loc5, #loc6])
#loc231 = loc(fused[#loc7, #loc8])
#loc232 = loc(fused[#loc11, #loc12])
#loc233 = loc(fused[#loc13, #loc14])
#loc234 = loc(fused[#loc15, #loc16])
#loc235 = loc(fused[#loc19, #loc17])
#loc236 = loc(fused[#loc20, #loc21])
#loc237 = loc(fused[#loc23, #loc24])
#loc238 = loc(fused[#loc25, #loc26])
#loc239 = loc(fused[#loc27, #loc28])
#loc240 = loc(fused[#loc32, #loc33])
#loc241 = loc(fused[#loc35, #loc36, #loc37, #loc28])
#loc242 = loc(fused[#loc40, #loc41])
#loc243 = loc(fused[#loc46, #loc47])
#loc244 = loc(fused[#loc49, #loc50])
#loc245 = loc(fused[#loc56, #loc57])
#loc246 = loc(fused[#loc58, #loc59])
#loc247 = loc(fused[#loc60, #loc61])
#loc248 = loc(fused[#loc62, #loc63])
#loc249 = loc(fused[#loc64, #loc65])
#loc250 = loc(fused[#loc67, #loc68])
#loc251 = loc(fused[#loc69, #loc70])
#loc252 = loc(fused[#loc73, #loc71])
#loc253 = loc(fused[#loc74, #loc75])
#loc254 = loc(fused[#loc77, #loc78])
#loc255 = loc(fused[#loc79, #loc80])
#loc256 = loc(fused[#loc81, #loc82])
#loc257 = loc(fused[#loc86, #loc87])
#loc258 = loc(fused[#loc89, #loc90, #loc91, #loc82])
#loc259 = loc(fused[#loc94, #loc95])
#loc260 = loc(fused[#loc102, #loc103])
#loc261 = loc(fused[#loc108, #loc109])
#loc262 = loc(fused[#loc110, #loc111])
#loc263 = loc(fused[#loc113, #loc114, #loc115, #loc109])
#loc264 = loc(fused[#loc116, #loc117])
#loc265 = loc(fused[#loc121, #loc122])
#loc266 = loc(fused[#loc123, #loc124])
#loc267 = loc(fused[#loc127, #loc125])
#loc268 = loc(fused[#loc128, #loc129])
#loc269 = loc(fused[#loc131, #loc132])
#loc270 = loc(fused[#loc133, #loc134])
#loc271 = loc(fused[#loc135, #loc136])
#loc272 = loc(fused[#loc140, #loc141])
#loc273 = loc(fused[#loc143, #loc144, #loc145, #loc136])
#loc274 = loc(fused[#loc148, #loc149])
#loc275 = loc(fused[#loc156, #loc157])
#loc276 = loc(fused[#loc159, #loc160])
#loc277 = loc(fused[#loc161, #loc162])
#loc278 = loc(fused[#loc164, #loc165, #loc166, #loc160])
#loc279 = loc(fused[#loc167, #loc168])
#loc280 = loc(fused[#loc176, #loc177])
#loc281 = loc(fused[#loc178, #loc179])
#loc282 = loc(fused[#loc182, #loc180])
#loc283 = loc(fused[#loc183, #loc184])
#loc284 = loc(fused[#loc190, #loc189])
#loc285 = loc(fused[#loc192, #loc193])
#loc286 = loc(fused[#loc195, #loc196])
#loc287 = loc(fused[#loc202, #loc203])
#loc288 = loc(fused[#loc204, #loc205])
#loc289 = loc(fused[#loc208, #loc206])
#loc290 = loc(fused[#loc209, #loc210])
#loc291 = loc(fused[#loc213, #loc212])
#loc292 = loc(fused[#loc218, #loc219])
#loc293 = loc(fused[#loc221, #loc222])
