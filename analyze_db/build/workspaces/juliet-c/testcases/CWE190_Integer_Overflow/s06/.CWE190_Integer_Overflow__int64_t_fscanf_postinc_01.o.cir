!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc74)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc76)
  cir.func private @printLongLongLine(!s64i) loc(#loc77)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc80)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc15)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc75)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc16)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc76)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc76)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc15)
    cir.scope {
      %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc82)
      %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc21)
      %10 = cir.unary(inc, %9) nsw : !s64i, !s64i loc(#loc22)
      cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc83)
      %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc20)
      cir.store %11, %8 : !s64i, !cir.ptr<!s64i> loc(#loc82)
      %12 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc23)
      cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc24)
    } loc(#loc81)
    cir.return loc(#loc10)
  } loc(#loc78)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc85)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc84)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc88)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc35)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc89)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc37)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc90)
    cir.scope {
      %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc92)
      %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc43)
      %6 = cir.unary(inc, %5) nsw : !s64i, !s64i loc(#loc44)
      cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc93)
      %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc42)
      cir.store %7, %4 : !s64i, !cir.ptr<!s64i> loc(#loc92)
      %8 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc45)
      cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc46)
    } loc(#loc91)
    cir.return loc(#loc32)
  } loc(#loc87)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc54)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc97)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc56)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc75)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc98)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc98)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc56)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc62)
      %9 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc63)
      %10 = cir.cmp(lt, %8, %9) : !s64i, !cir.bool loc(#loc100)
      cir.if %10 {
        %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc102)
        %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc69)
        %13 = cir.unary(inc, %12) nsw : !s64i, !s64i loc(#loc70)
        cir.store %13, %0 : !s64i, !cir.ptr<!s64i> loc(#loc103)
        %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc68)
        cir.store %14, %11 : !s64i, !cir.ptr<!s64i> loc(#loc102)
        %15 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc71)
        cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc72)
      } else {
        %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc49)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
      } loc(#loc101)
    } loc(#loc99)
    cir.return loc(#loc51)
  } loc(#loc95)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":28:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":28:24)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":23:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":35:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":25:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":25:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":26:12)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":26:5)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":28:5)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":28:13)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":29:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":34:5)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":32:9)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":32:26)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":31:13)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":31:9)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":33:27)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":33:9)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":76:1)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":80:1)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":78:5)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":78:13)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":79:5)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":79:13)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":42:1)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":54:1)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":44:5)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":44:13)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":45:12)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":45:5)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":47:12)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":47:5)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":48:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":53:5)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":51:9)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":51:26)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":50:13)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":50:9)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":52:27)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":52:9)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":72:19)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":57:1)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":74:1)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":59:5)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":59:13)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":60:12)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":60:5)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":62:5)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":62:13)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":62:20)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":62:24)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":64:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":73:5)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":64:9)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":64:16)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":65:5)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":69:5)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":71:5)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":67:9)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":67:26)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":66:13)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":66:9)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":68:27)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":68:9)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_01.c":72:9)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc3, #loc4])
#loc76 = loc(fused[#loc5, #loc6])
#loc77 = loc(fused[#loc7, #loc8])
#loc78 = loc(fused[#loc9, #loc10])
#loc79 = loc(fused[#loc11, #loc12])
#loc80 = loc(fused[#loc14, #loc13])
#loc81 = loc(fused[#loc17, #loc18])
#loc82 = loc(fused[#loc19, #loc20])
#loc83 = loc(fused[#loc22, #loc21])
#loc84 = loc(fused[#loc25, #loc26])
#loc85 = loc(fused[#loc27, #loc28])
#loc86 = loc(fused[#loc29, #loc30])
#loc87 = loc(fused[#loc31, #loc32])
#loc88 = loc(fused[#loc33, #loc34])
#loc89 = loc(fused[#loc36, #loc35])
#loc90 = loc(fused[#loc38, #loc37])
#loc91 = loc(fused[#loc39, #loc40])
#loc92 = loc(fused[#loc41, #loc42])
#loc93 = loc(fused[#loc44, #loc43])
#loc94 = loc(fused[#loc47, #loc48])
#loc95 = loc(fused[#loc50, #loc51])
#loc96 = loc(fused[#loc52, #loc53])
#loc97 = loc(fused[#loc55, #loc54])
#loc98 = loc(fused[#loc58, #loc59])
#loc99 = loc(fused[#loc60, #loc61])
#loc100 = loc(fused[#loc62, #loc63])
#loc101 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc102 = loc(fused[#loc67, #loc68])
#loc103 = loc(fused[#loc70, #loc69])
