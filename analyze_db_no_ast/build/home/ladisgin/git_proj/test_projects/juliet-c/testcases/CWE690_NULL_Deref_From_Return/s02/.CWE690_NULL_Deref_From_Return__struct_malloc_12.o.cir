!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__struct_malloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc128)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc129)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc130)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__struct_malloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc134)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc135)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc137)
    cir.scope {
      %9 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc139)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc139)
      %11 = cir.call %10() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc23)
      cir.if %12 {
        %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc30)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc141)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc142)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc39)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc41)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc42)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc43)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc42)
      } else {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc144)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc48)
          cir.if %17 {
            %18 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc52)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
            %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc146)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc54)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc56)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
            %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc147)
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
            %29 = cir.const #cir.int<0> : !s32i loc(#loc59)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
            cir.call @printStructLine(%30) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc61)
            %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc62)
            %32 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc63)
            cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
          } loc(#loc145)
        } loc(#loc143)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc10)
  } loc(#loc131)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__struct_malloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc65)
  } loc(#loc148)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc74)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc75)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc153)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc154)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc74)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
    cir.scope {
      %9 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc158)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc158)
      %11 = cir.call %10() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc82)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc82)
      cir.if %12 {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc161)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc91)
          cir.if %17 {
            %18 = cir.const #cir.int<1> : !s32i loc(#loc93)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
            %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc163)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc97)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc99)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
            %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc164)
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
            %29 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
            cir.call @printStructLine(%30) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc104)
            %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc105)
            %32 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc106)
            cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
          } loc(#loc162)
        } loc(#loc160)
      } else {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc166)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc111)
          cir.if %17 {
            %18 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc115)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
            %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc168)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc117)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc119)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
            %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc169)
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
            %29 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
            cir.call @printStructLine(%30) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc124)
            %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc125)
            %32 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc126)
            cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
          } loc(#loc167)
        } loc(#loc165)
      } loc(#loc159)
    } loc(#loc157)
    cir.return loc(#loc69)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__struct_malloc_12.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":23:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":48:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":25:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":25:21)
#loc13 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":26:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":26:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":28:29)
#loc16 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":28:36)
#loc17 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":28:38)
#loc18 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":28:58)
#loc19 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":28:59)
#loc20 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":28:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":29:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":47:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":29:8)
#loc24 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":29:33)
#loc25 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":30:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":36:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":38:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":32:26)
#loc29 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":32:9)
#loc30 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":32:14)
#loc31 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":32:15)
#loc32 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc33 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":33:26)
#loc34 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":33:9)
#loc35 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":33:14)
#loc36 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":33:15)
#loc37 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc38 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":34:26)
#loc39 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":34:31)
#loc40 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":34:32)
#loc41 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":34:9)
#loc42 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":35:9)
#loc43 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":35:14)
#loc44 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":40:9)
#loc45 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":46:9)
#loc46 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":40:13)
#loc47 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":40:21)
#loc48 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":40:18)
#loc49 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":41:9)
#loc50 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":42:30)
#loc51 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":42:13)
#loc52 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":42:18)
#loc53 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":42:19)
#loc54 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":43:30)
#loc55 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":43:13)
#loc56 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":43:18)
#loc57 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":43:19)
#loc58 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":44:30)
#loc59 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":44:35)
#loc60 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":44:36)
#loc61 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":44:13)
#loc62 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":45:13)
#loc63 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":45:18)
#loc64 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":86:1)
#loc65 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":89:1)
#loc66 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":88:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":88:13)
#loc68 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":56:1)
#loc69 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":84:1)
#loc70 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":58:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":58:21)
#loc72 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":59:12)
#loc73 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":59:5)
#loc74 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":61:29)
#loc75 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":61:36)
#loc76 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":61:38)
#loc77 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":61:58)
#loc78 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":61:59)
#loc79 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":61:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":62:5)
#loc81 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":83:5)
#loc82 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":62:8)
#loc83 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":62:33)
#loc84 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":63:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":72:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":74:5)
#loc87 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":65:9)
#loc88 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":71:9)
#loc89 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":65:13)
#loc90 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":65:21)
#loc91 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":65:18)
#loc92 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":66:9)
#loc93 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":67:30)
#loc94 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":67:13)
#loc95 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":67:18)
#loc96 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":67:19)
#loc97 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":68:30)
#loc98 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":68:13)
#loc99 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":68:18)
#loc100 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":68:19)
#loc101 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":69:30)
#loc102 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":69:35)
#loc103 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":69:36)
#loc104 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":69:13)
#loc105 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":70:13)
#loc106 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":70:18)
#loc107 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":76:9)
#loc108 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":82:9)
#loc109 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":76:13)
#loc110 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":76:21)
#loc111 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":76:18)
#loc112 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":77:9)
#loc113 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":78:30)
#loc114 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":78:13)
#loc115 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":78:18)
#loc116 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":78:19)
#loc117 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":79:30)
#loc118 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":79:13)
#loc119 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":79:18)
#loc120 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":79:19)
#loc121 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":80:30)
#loc122 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":80:35)
#loc123 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":80:36)
#loc124 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":80:13)
#loc125 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":81:13)
#loc126 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_12.c":81:18)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc9, #loc10])
#loc132 = loc(fused[#loc11, #loc12])
#loc133 = loc(fused[#loc14, #loc13])
#loc134 = loc(fused[#loc17, #loc18])
#loc135 = loc(fused[#loc16, #loc18])
#loc136 = loc(fused[#loc15, #loc19])
#loc137 = loc(fused[#loc20, #loc19])
#loc138 = loc(fused[#loc21, #loc22])
#loc139 = loc(fused[#loc23, #loc24])
#loc140 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc141 = loc(fused[#loc29, #loc28])
#loc142 = loc(fused[#loc34, #loc33])
#loc143 = loc(fused[#loc44, #loc45])
#loc144 = loc(fused[#loc46, #loc47])
#loc145 = loc(fused[#loc49, #loc45])
#loc146 = loc(fused[#loc51, #loc50])
#loc147 = loc(fused[#loc55, #loc54])
#loc148 = loc(fused[#loc64, #loc65])
#loc149 = loc(fused[#loc66, #loc67])
#loc150 = loc(fused[#loc68, #loc69])
#loc151 = loc(fused[#loc70, #loc71])
#loc152 = loc(fused[#loc73, #loc72])
#loc153 = loc(fused[#loc76, #loc77])
#loc154 = loc(fused[#loc75, #loc77])
#loc155 = loc(fused[#loc74, #loc78])
#loc156 = loc(fused[#loc79, #loc78])
#loc157 = loc(fused[#loc80, #loc81])
#loc158 = loc(fused[#loc82, #loc83])
#loc159 = loc(fused[#loc84, #loc85, #loc86, #loc81])
#loc160 = loc(fused[#loc87, #loc88])
#loc161 = loc(fused[#loc89, #loc90])
#loc162 = loc(fused[#loc92, #loc88])
#loc163 = loc(fused[#loc94, #loc93])
#loc164 = loc(fused[#loc98, #loc97])
#loc165 = loc(fused[#loc107, #loc108])
#loc166 = loc(fused[#loc109, #loc110])
#loc167 = loc(fused[#loc112, #loc108])
#loc168 = loc(fused[#loc114, #loc113])
#loc169 = loc(fused[#loc118, #loc117])
