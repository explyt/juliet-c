!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc87 = loc("CWE510_Trapdoor__network_connection_04.c":104:10)
#loc88 = loc("CWE510_Trapdoor__network_connection_04.c":104:14)
#loc89 = loc("CWE510_Trapdoor__network_connection_04.c":104:20)
#loc90 = loc("CWE510_Trapdoor__network_connection_04.c":104:32)
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc135 = loc(fused[#loc87, #loc88])
#loc136 = loc(fused[#loc89, #loc90])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_connection_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc101)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"123.123.123.123\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc103)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc104)
  cir.func private @close(!s32i) -> !s32i loc(#loc105)
  cir.func no_proto @CWE510_Trapdoor__network_connection_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc107)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %3 ^bb2, ^bb22 loc(#loc110)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc111)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc17)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc112)
  ^bb5:  // pred: ^bb14
    %6 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %7 ^bb6, ^bb15 loc(#loc26)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %8 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %10 = cir.const #cir.int<6> : !s32i loc(#loc29)
    %11 = cir.call @socket(%8, %9, %10) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc30)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.br ^bb7 loc(#loc114)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc36)
    %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc115)
    cir.brcond %15 ^bb8, ^bb9 loc(#loc116)
  ^bb8:  // pred: ^bb7
    cir.br ^bb15 loc(#loc38)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc34)
  ^bb10:  // pred: ^bb9
    %16 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc117)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %18 = cir.const #cir.int<16> : !u64i loc(#loc118)
    cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc119)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc46)
    %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc46)
    %21 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc47)
    cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc120)
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc5)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc5)
    %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc49)
    %25 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc50)
    %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc51)
    cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc121)
    %27 = cir.const #cir.int<80> : !s32i loc(#loc54)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc54)
    %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc55)
    %30 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc122)
    cir.br ^bb11 loc(#loc123)
  ^bb11:  // pred: ^bb10
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %32 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc124)
    %33 = cir.const #cir.int<16> : !u64i loc(#loc125)
    %34 = cir.cast(integral, %33 : !u64i), !u32i loc(#loc125)
    %35 = cir.call @connect(%31, %32, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc66)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc67)
    %38 = cir.cmp(eq, %35, %37) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %38 ^bb12, ^bb13 loc(#loc127)
  ^bb12:  // pred: ^bb11
    cir.br ^bb15 loc(#loc69)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc60)
  ^bb14:  // pred: ^bb13
    cir.br ^bb5 loc(#loc25)
  ^bb15:  // 3 preds: ^bb5, ^bb8, ^bb12
    cir.br ^bb16 loc(#loc25)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc128)
  ^bb17:  // pred: ^bb16
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc73)
    %42 = cir.cmp(ne, %39, %41) : !s32i, !cir.bool loc(#loc129)
    cir.brcond %42 ^bb18, ^bb19 loc(#loc130)
  ^bb18:  // pred: ^bb17
    %43 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %44 = cir.call @close(%43) : (!s32i) -> !s32i loc(#loc76)
    cir.br ^bb19 loc(#loc71)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc71)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc23)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc19)
  ^bb22:  // 2 preds: ^bb1, ^bb21
    cir.br ^bb23 loc(#loc19)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc13)
  } loc(#loc106)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc131)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc132)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc94)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE510_Trapdoor__network_connection_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call @CWE510_Trapdoor__network_connection_04_bad() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.return %12 : !s32i loc(#loc138)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_connection_04.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE510_Trapdoor__network_connection_04.c":71:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/unistd.h":358:1)
#loc11 = loc("/usr/include/unistd.h":358:27)
#loc12 = loc("CWE510_Trapdoor__network_connection_04.c":44:1)
#loc13 = loc("CWE510_Trapdoor__network_connection_04.c":93:1)
#loc14 = loc("CWE510_Trapdoor__network_connection_04.c":53:13)
#loc15 = loc("CWE510_Trapdoor__network_connection_04.c":53:32)
#loc16 = loc("CWE510_Trapdoor__network_connection_04.c":54:13)
#loc17 = loc("CWE510_Trapdoor__network_connection_04.c":54:36)
#loc18 = loc("CWE510_Trapdoor__network_connection_04.c":46:5)
#loc19 = loc("CWE510_Trapdoor__network_connection_04.c":92:5)
#loc20 = loc("CWE510_Trapdoor__network_connection_04.c":46:8)
#loc21 = loc("CWE510_Trapdoor__network_connection_04.c":47:5)
#loc22 = loc("CWE510_Trapdoor__network_connection_04.c":48:9)
#loc23 = loc("CWE510_Trapdoor__network_connection_04.c":91:9)
#loc24 = loc("CWE510_Trapdoor__network_connection_04.c":55:13)
#loc25 = loc("CWE510_Trapdoor__network_connection_04.c":80:21)
#loc26 = loc("CWE510_Trapdoor__network_connection_04.c":80:20)
#loc27 = loc("CWE510_Trapdoor__network_connection_04.c":64:40)
#loc28 = loc("CWE510_Trapdoor__network_connection_04.c":64:49)
#loc29 = loc("CWE510_Trapdoor__network_connection_04.c":64:62)
#loc30 = loc("CWE510_Trapdoor__network_connection_04.c":64:33)
#loc31 = loc("CWE510_Trapdoor__network_connection_04.c":64:17)
#loc32 = loc("CWE510_Trapdoor__network_connection_04.c":64:73)
#loc33 = loc("CWE510_Trapdoor__network_connection_04.c":65:17)
#loc34 = loc("CWE510_Trapdoor__network_connection_04.c":68:17)
#loc35 = loc("CWE510_Trapdoor__network_connection_04.c":65:21)
#loc36 = loc("CWE510_Trapdoor__network_connection_04.c":65:38)
#loc37 = loc("CWE510_Trapdoor__network_connection_04.c":66:17)
#loc38 = loc("CWE510_Trapdoor__network_connection_04.c":67:21)
#loc39 = loc("CWE510_Trapdoor__network_connection_04.c":69:24)
#loc40 = loc("CWE510_Trapdoor__network_connection_04.c":69:25)
#loc41 = loc("CWE510_Trapdoor__network_connection_04.c":69:34)
#loc42 = loc("CWE510_Trapdoor__network_connection_04.c":69:37)
#loc43 = loc("CWE510_Trapdoor__network_connection_04.c":69:51)
#loc44 = loc("CWE510_Trapdoor__network_connection_04.c":69:17)
#loc45 = loc("CWE510_Trapdoor__network_connection_04.c":69:52)
#loc46 = loc("CWE510_Trapdoor__network_connection_04.c":70:38)
#loc47 = loc("/usr/include/netinet/in.h":249:5)
#loc48 = loc("CWE510_Trapdoor__network_connection_04.c":70:17)
#loc49 = loc("CWE510_Trapdoor__network_connection_04.c":71:43)
#loc50 = loc("/usr/include/netinet/in.h":251:20)
#loc51 = loc("/usr/include/netinet/in.h":33:15)
#loc52 = loc("CWE510_Trapdoor__network_connection_04.c":71:17)
#loc53 = loc("CWE510_Trapdoor__network_connection_04.c":71:63)
#loc54 = loc("CWE510_Trapdoor__network_connection_04.c":72:42)
#loc55 = loc("CWE510_Trapdoor__network_connection_04.c":72:36)
#loc56 = loc("/usr/include/netinet/in.h":250:15)
#loc57 = loc("CWE510_Trapdoor__network_connection_04.c":72:17)
#loc58 = loc("CWE510_Trapdoor__network_connection_04.c":72:44)
#loc59 = loc("CWE510_Trapdoor__network_connection_04.c":74:17)
#loc60 = loc("CWE510_Trapdoor__network_connection_04.c":77:17)
#loc61 = loc("CWE510_Trapdoor__network_connection_04.c":74:29)
#loc62 = loc("CWE510_Trapdoor__network_connection_04.c":74:62)
#loc63 = loc("CWE510_Trapdoor__network_connection_04.c":74:63)
#loc64 = loc("CWE510_Trapdoor__network_connection_04.c":74:72)
#loc65 = loc("CWE510_Trapdoor__network_connection_04.c":74:86)
#loc66 = loc("CWE510_Trapdoor__network_connection_04.c":74:21)
#loc67 = loc("CWE510_Trapdoor__network_connection_04.c":74:92)
#loc68 = loc("CWE510_Trapdoor__network_connection_04.c":75:17)
#loc69 = loc("CWE510_Trapdoor__network_connection_04.c":76:21)
#loc70 = loc("CWE510_Trapdoor__network_connection_04.c":81:13)
#loc71 = loc("CWE510_Trapdoor__network_connection_04.c":84:13)
#loc72 = loc("CWE510_Trapdoor__network_connection_04.c":81:17)
#loc73 = loc("CWE510_Trapdoor__network_connection_04.c":81:34)
#loc74 = loc("CWE510_Trapdoor__network_connection_04.c":82:13)
#loc75 = loc("CWE510_Trapdoor__network_connection_04.c":83:30)
#loc76 = loc("CWE510_Trapdoor__network_connection_04.c":83:17)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc82 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc83 = loc("CWE510_Trapdoor__network_connection_04.c":109:15)
#loc84 = loc("CWE510_Trapdoor__network_connection_04.c":111:15)
#loc85 = loc("CWE510_Trapdoor__network_connection_04.c":104:1)
#loc86 = loc("CWE510_Trapdoor__network_connection_04.c":114:1)
#loc91 = loc("CWE510_Trapdoor__network_connection_04.c":105:1)
#loc92 = loc("CWE510_Trapdoor__network_connection_04.c":107:27)
#loc93 = loc("CWE510_Trapdoor__network_connection_04.c":107:22)
#loc94 = loc("CWE510_Trapdoor__network_connection_04.c":107:5)
#loc95 = loc("CWE510_Trapdoor__network_connection_04.c":109:5)
#loc96 = loc("CWE510_Trapdoor__network_connection_04.c":110:5)
#loc97 = loc("CWE510_Trapdoor__network_connection_04.c":110:48)
#loc98 = loc("CWE510_Trapdoor__network_connection_04.c":111:5)
#loc99 = loc("CWE510_Trapdoor__network_connection_04.c":113:12)
#loc100 = loc("CWE510_Trapdoor__network_connection_04.c":113:5)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc6, #loc7])
#loc104 = loc(fused[#loc8, #loc9])
#loc105 = loc(fused[#loc10, #loc11])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc14, #loc15])
#loc108 = loc(fused[#loc16, #loc17])
#loc109 = loc(fused[#loc18, #loc19])
#loc110 = loc(fused[#loc21, #loc19])
#loc111 = loc(fused[#loc22, #loc23])
#loc112 = loc(fused[#loc24, #loc25])
#loc113 = loc(fused[#loc31, #loc32])
#loc114 = loc(fused[#loc33, #loc34])
#loc115 = loc(fused[#loc35, #loc36])
#loc116 = loc(fused[#loc37, #loc34])
#loc117 = loc(fused[#loc39, #loc40])
#loc118 = loc(fused[#loc42, #loc43])
#loc119 = loc(fused[#loc44, #loc45])
#loc120 = loc(fused[#loc48, #loc46])
#loc121 = loc(fused[#loc52, #loc53])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc62, #loc63])
#loc125 = loc(fused[#loc64, #loc65])
#loc126 = loc(fused[#loc66, #loc67])
#loc127 = loc(fused[#loc68, #loc60])
#loc128 = loc(fused[#loc70, #loc71])
#loc129 = loc(fused[#loc72, #loc73])
#loc130 = loc(fused[#loc74, #loc71])
#loc131 = loc(fused[#loc77, #loc78])
#loc132 = loc(fused[#loc79, #loc80])
#loc133 = loc(fused[#loc81, #loc82])
#loc134 = loc(fused[#loc85, #loc86])
#loc137 = loc(fused[#loc96, #loc97])
#loc138 = loc(fused[#loc100, #loc99])
