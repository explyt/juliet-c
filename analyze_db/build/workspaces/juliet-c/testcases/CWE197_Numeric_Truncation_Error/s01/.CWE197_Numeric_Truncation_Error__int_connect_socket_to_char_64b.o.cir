!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":43:78)
#loc6 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":43:85)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":61:82)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":61:89)
#loc39 = loc(fused[#loc5, #loc6])
#loc45 = loc(fused[#loc22, #loc23])
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printHexCharLine(!s8i) loc(#loc37)
  cir.func @CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc40)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc39)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc41)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc13)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc10)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc10)
    cir.store %5, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc41)
    %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc42)
    cir.br ^bb1 loc(#loc43)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc8)
    cir.store %9, %0 : !s8i, !cir.ptr<!s8i> loc(#loc40)
    %10 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc18)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc19)
    cir.br ^bb2 loc(#loc17)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc38)
  cir.func @CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc22, #loc23])) extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc46)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc45)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc47)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc30)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc27)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc27)
    cir.store %5, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc47)
    %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    cir.br ^bb1 loc(#loc49)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc25)
    cir.store %9, %0 : !s8i, !cir.ptr<!s8i> loc(#loc46)
    %10 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc35)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc36)
    cir.br ^bb2 loc(#loc34)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc21)
  } loc(#loc44)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":43:1)
#loc4 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":54:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":51:9)
#loc8 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":51:31)
#loc9 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":46:5)
#loc10 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":46:28)
#loc11 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":48:5)
#loc12 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":48:25)
#loc13 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":44:1)
#loc14 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":48:18)
#loc15 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":48:17)
#loc16 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":49:5)
#loc17 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":53:5)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":52:26)
#loc19 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":52:9)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":61:1)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":72:1)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":69:9)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":69:31)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":64:5)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":64:28)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":66:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":66:25)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":62:1)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":66:18)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":66:17)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":67:5)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":71:5)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":70:26)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_64b.c":70:9)
#loc37 = loc(fused[#loc1, #loc2])
#loc38 = loc(fused[#loc3, #loc4])
#loc40 = loc(fused[#loc7, #loc8])
#loc41 = loc(fused[#loc9, #loc10])
#loc42 = loc(fused[#loc11, #loc12])
#loc43 = loc(fused[#loc16, #loc17])
#loc44 = loc(fused[#loc20, #loc21])
#loc46 = loc(fused[#loc24, #loc25])
#loc47 = loc(fused[#loc26, #loc27])
#loc48 = loc(fused[#loc28, #loc29])
#loc49 = loc(fused[#loc33, #loc34])
