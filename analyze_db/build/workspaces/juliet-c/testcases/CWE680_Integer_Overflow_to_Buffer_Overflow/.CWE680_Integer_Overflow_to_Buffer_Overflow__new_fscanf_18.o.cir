!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc103)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc105)
  cir.func private @printIntLine(!s32i) loc(#loc106)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_183badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc109)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc110)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc111)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc20)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.br ^bb1 loc(#loc113)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc24)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc104)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.call @__isoc23_fscanf(%8, %10, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc24)
    cir.br ^bb2 loc(#loc114)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc28)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc115)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc116)
    cir.store %15, %0 : !u64i, !cir.ptr<!u64i> loc(#loc117)
    %16 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %17 = cir.call @_Znam(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc33)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc118)
    cir.store %19, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // pred: ^bb2
    %20 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc121)
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc42)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc122)
    cir.brcond %25 ^bb5, ^bb9 loc(#loc122)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc123)
  ^bb6:  // pred: ^bb5
    %26 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc47)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc38)
  ^bb8:  // pred: ^bb7
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc49)
    cir.store %31, %1 : !u64i, !cir.ptr<!u64i> loc(#loc125)
    cir.br ^bb4 loc(#loc120)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc38)
  ^bb10:  // pred: ^bb9
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc52)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc53)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    cir.delete.array %36 : <!s32i> loc(#loc54)
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc11)
  } loc(#loc107)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc129)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc130)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc65)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<20> : !s32i loc(#loc69)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.br ^bb2 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc73)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc135)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc136)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc78)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc138)
    cir.store %14, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %15 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc84)
    cir.store %16, %1 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc86)
    %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc87)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc142)
    cir.brcond %20 ^bb5, ^bb9 loc(#loc142)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc143)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc92)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.br ^bb7 loc(#loc83)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc94)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc145)
    cir.br ^bb4 loc(#loc140)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc83)
  ^bb10:  // pred: ^bb9
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc97)
    %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc98)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
    cir.delete.array %31 : <!s32i> loc(#loc99)
    cir.br ^bb11 loc(#loc72)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc56)
  } loc(#loc126)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_184goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18L7goodG2BEv() : () -> () loc(#loc102)
    cir.return loc(#loc101)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":32:19)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":24:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":46:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":34:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":34:16)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":34:26)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":35:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":35:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":26:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":26:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":28:13)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":28:12)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":28:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":29:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":29:10)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":32:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":32:12)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":33:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":45:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":37:21)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":37:28)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":37:38)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":37:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":38:37)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":24:6)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":38:28)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":38:46)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":38:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":42:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:18)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:14)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:21)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:33)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":40:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":41:29)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":41:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":41:24)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":41:25)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:40)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:39)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":43:22)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":43:33)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":43:34)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":43:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":44:19)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":53:1)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":75:1)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":63:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":63:16)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":63:26)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":64:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":64:14)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":55:5)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":55:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":57:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":57:12)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":57:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":58:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":58:10)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":61:12)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":61:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":62:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":74:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":66:21)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":66:28)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":66:38)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":66:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":67:37)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":53:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":67:28)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":67:46)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":67:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":71:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:18)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:14)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:21)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:33)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":69:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":70:29)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":70:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":70:24)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":70:25)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:40)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:39)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":72:22)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":72:33)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":72:34)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":72:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":73:19)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":77:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":80:1)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":79:5)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc6, #loc7])
#loc106 = loc(fused[#loc8, #loc9])
#loc107 = loc(fused[#loc10, #loc11])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc12, #loc14])
#loc110 = loc(fused[#loc15, #loc16])
#loc111 = loc(fused[#loc17, #loc18])
#loc112 = loc(fused[#loc21, #loc19])
#loc113 = loc(fused[#loc22, #loc23])
#loc114 = loc(fused[#loc26, #loc27])
#loc115 = loc(fused[#loc29, #loc30])
#loc116 = loc(fused[#loc28, #loc30])
#loc117 = loc(fused[#loc31, #loc30])
#loc118 = loc(fused[#loc34, #loc35])
#loc119 = loc(fused[#loc36, #loc35])
#loc120 = loc(fused[#loc37, #loc38])
#loc121 = loc(fused[#loc40, #loc39])
#loc122 = loc(fused[#loc41, #loc42])
#loc123 = loc(fused[#loc43, #loc38])
#loc124 = loc(fused[#loc45, #loc44])
#loc125 = loc(fused[#loc49, #loc48])
#loc126 = loc(fused[#loc55, #loc56])
#loc127 = loc(fused[#loc57, #loc58])
#loc128 = loc(fused[#loc57, #loc59])
#loc129 = loc(fused[#loc60, #loc61])
#loc130 = loc(fused[#loc62, #loc63])
#loc131 = loc(fused[#loc66, #loc64])
#loc132 = loc(fused[#loc67, #loc68])
#loc133 = loc(fused[#loc70, #loc69])
#loc134 = loc(fused[#loc71, #loc72])
#loc135 = loc(fused[#loc74, #loc75])
#loc136 = loc(fused[#loc73, #loc75])
#loc137 = loc(fused[#loc76, #loc75])
#loc138 = loc(fused[#loc79, #loc80])
#loc139 = loc(fused[#loc81, #loc80])
#loc140 = loc(fused[#loc82, #loc83])
#loc141 = loc(fused[#loc85, #loc84])
#loc142 = loc(fused[#loc86, #loc87])
#loc143 = loc(fused[#loc88, #loc83])
#loc144 = loc(fused[#loc90, #loc89])
#loc145 = loc(fused[#loc94, #loc93])
#loc146 = loc(fused[#loc100, #loc101])
