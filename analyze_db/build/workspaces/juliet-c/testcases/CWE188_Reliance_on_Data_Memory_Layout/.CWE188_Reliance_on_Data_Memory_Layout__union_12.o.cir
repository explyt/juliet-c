!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_anon2E1 = !cir.record<struct "anon.1" {!s8i, !s8i, !s8i, !s8i} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!ty_anon2E1, !s64i}>
module @"/workspaces/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc74)
  cir.func private @printIntLine(!s32i) loc(#loc75)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_12_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc78)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc78)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc9)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !ty_anon2E0, !cir.ptr<!ty_anon2E0>, ["unionStructLong"] {alignment = 8 : i64} loc(#loc81)
          %5 = cir.const #cir.int<270544960> : !s32i loc(#loc18)
          %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc18)
          %7 = cir.get_member %4[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0> -> !cir.ptr<!s64i> loc(#loc19)
          cir.store %6, %7 : !s64i, !cir.ptr<!s64i> loc(#loc82)
          %8 = cir.const #cir.int<128> : !s32i loc(#loc21)
          %9 = cir.get_member %4[0] {name = "structChars"} : !cir.ptr<!ty_anon2E0> -> !cir.ptr<!ty_anon2E1> loc(#loc22)
          %10 = cir.get_member %9[3] {name = "charFourth"} : !cir.ptr<!ty_anon2E1> -> !cir.ptr<!s8i> loc(#loc23)
          %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc24)
          %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc24)
          %13 = cir.binop(or, %12, %8) : !s32i loc(#loc83)
          %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc83)
          cir.store %14, %10 : !s8i, !cir.ptr<!s8i> loc(#loc83)
          %15 = cir.get_member %4[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0> -> !cir.ptr<!s64i> loc(#loc19)
          %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc26)
          %17 = cir.cast(integral, %16 : !s64i), !s32i loc(#loc26)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc27)
        } loc(#loc80)
      } else {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc85)
          %5 = cir.const #cir.int<270544960> : !s32i loc(#loc32)
          %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc32)
          cir.store %6, %4 : !s64i, !cir.ptr<!s64i> loc(#loc86)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc34)
          %8 = cir.unary(minus, %7) nsw : !s64i, !s64i loc(#loc34)
          %9 = cir.const #cir.int<1> : !s64i loc(#loc34)
          %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc34)
          %11 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc35)
          %12 = cir.binop(or, %11, %10) : !s64i loc(#loc87)
          cir.store %12, %4 : !s64i, !cir.ptr<!s64i> loc(#loc87)
          %13 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc37)
          %14 = cir.cast(integral, %13 : !s64i), !s32i loc(#loc37)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc38)
        } loc(#loc84)
      } loc(#loc79)
    } loc(#loc77)
    cir.return loc(#loc6)
  } loc(#loc76)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc89)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc88)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc92)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc92)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc47)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc47)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc95)
          %5 = cir.const #cir.int<270544960> : !s32i loc(#loc56)
          %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc56)
          cir.store %6, %4 : !s64i, !cir.ptr<!s64i> loc(#loc96)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc58)
          %8 = cir.unary(minus, %7) nsw : !s64i, !s64i loc(#loc58)
          %9 = cir.const #cir.int<1> : !s64i loc(#loc58)
          %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc58)
          %11 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc59)
          %12 = cir.binop(or, %11, %10) : !s64i loc(#loc97)
          cir.store %12, %4 : !s64i, !cir.ptr<!s64i> loc(#loc97)
          %13 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc61)
          %14 = cir.cast(integral, %13 : !s64i), !s32i loc(#loc61)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc62)
        } loc(#loc94)
      } else {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc99)
          %5 = cir.const #cir.int<270544960> : !s32i loc(#loc67)
          %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc67)
          cir.store %6, %4 : !s64i, !cir.ptr<!s64i> loc(#loc100)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc69)
          %8 = cir.unary(minus, %7) nsw : !s64i, !s64i loc(#loc69)
          %9 = cir.const #cir.int<1> : !s64i loc(#loc69)
          %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc69)
          %11 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc70)
          %12 = cir.binop(or, %11, %10) : !s64i loc(#loc101)
          cir.store %12, %4 : !s64i, !cir.ptr<!s64i> loc(#loc101)
          %13 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc72)
          %14 = cir.cast(integral, %13 : !s64i), !s32i loc(#loc72)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc73)
        } loc(#loc98)
      } loc(#loc93)
    } loc(#loc91)
    cir.return loc(#loc44)
  } loc(#loc90)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":20:1)
#loc6 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":55:1)
#loc7 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":22:5)
#loc8 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":54:5)
#loc9 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":22:8)
#loc10 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":22:33)
#loc11 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":23:5)
#loc12 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":39:5)
#loc13 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":41:5)
#loc14 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":24:9)
#loc15 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":38:9)
#loc16 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":25:13)
#loc17 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":32:15)
#loc18 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":33:42)
#loc19 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":31:22)
#loc20 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":33:13)
#loc21 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":36:55)
#loc22 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":30:19)
#loc23 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":29:60)
#loc24 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":36:52)
#loc25 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":36:13)
#loc26 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":37:42)
#loc27 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":37:13)
#loc28 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":42:9)
#loc29 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":53:9)
#loc30 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":43:13)
#loc31 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":43:18)
#loc32 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":44:26)
#loc33 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":44:13)
#loc34 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":51:27)
#loc35 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":51:24)
#loc36 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":51:13)
#loc37 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":52:26)
#loc38 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":52:13)
#loc39 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":96:1)
#loc40 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":99:1)
#loc41 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":98:5)
#loc42 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":98:11)
#loc43 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":62:1)
#loc44 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":94:1)
#loc45 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":64:5)
#loc46 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":93:5)
#loc47 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":64:8)
#loc48 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":64:33)
#loc49 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":65:5)
#loc50 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":78:5)
#loc51 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":80:5)
#loc52 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":66:9)
#loc53 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":77:9)
#loc54 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":67:13)
#loc55 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":67:18)
#loc56 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":68:26)
#loc57 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":68:13)
#loc58 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":75:27)
#loc59 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":75:24)
#loc60 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":75:13)
#loc61 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":76:26)
#loc62 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":76:13)
#loc63 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":81:9)
#loc64 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":92:9)
#loc65 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":82:13)
#loc66 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":82:18)
#loc67 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":83:26)
#loc68 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":83:13)
#loc69 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":90:27)
#loc70 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":90:24)
#loc71 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":90:13)
#loc72 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":91:26)
#loc73 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_12.c":91:13)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc3, #loc4])
#loc76 = loc(fused[#loc5, #loc6])
#loc77 = loc(fused[#loc7, #loc8])
#loc78 = loc(fused[#loc9, #loc10])
#loc79 = loc(fused[#loc11, #loc12, #loc13, #loc8])
#loc80 = loc(fused[#loc14, #loc15])
#loc81 = loc(fused[#loc16, #loc17])
#loc82 = loc(fused[#loc20, #loc18])
#loc83 = loc(fused[#loc25, #loc21])
#loc84 = loc(fused[#loc28, #loc29])
#loc85 = loc(fused[#loc30, #loc31])
#loc86 = loc(fused[#loc33, #loc32])
#loc87 = loc(fused[#loc36, #loc34])
#loc88 = loc(fused[#loc39, #loc40])
#loc89 = loc(fused[#loc41, #loc42])
#loc90 = loc(fused[#loc43, #loc44])
#loc91 = loc(fused[#loc45, #loc46])
#loc92 = loc(fused[#loc47, #loc48])
#loc93 = loc(fused[#loc49, #loc50, #loc51, #loc46])
#loc94 = loc(fused[#loc52, #loc53])
#loc95 = loc(fused[#loc54, #loc55])
#loc96 = loc(fused[#loc57, #loc56])
#loc97 = loc(fused[#loc60, #loc58])
#loc98 = loc(fused[#loc63, #loc64])
#loc99 = loc(fused[#loc65, #loc66])
#loc100 = loc(fused[#loc68, #loc67])
#loc101 = loc(fused[#loc71, #loc69])
