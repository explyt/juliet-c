!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc331)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc332)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc333)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc334)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc335)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc336)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc15)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc337)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc18)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc339)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc23)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc340)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc27)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc28)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
        %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc28)
        cir.break loc(#loc30)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        cir.break loc(#loc32)
      }
      ] loc(#loc25)
    } loc(#loc341)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc35)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc344)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc346)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc347)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc45)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc49)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc50)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc349)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc350)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc351)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc354)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc59)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc62)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc63)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
                } loc(#loc355)
              } loc(#loc353)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc64)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
              %17 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc15)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc15)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc64)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc67)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc68)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
            } else {
              %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc18)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc18)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
            } loc(#loc348)
          } loc(#loc345)
        } loc(#loc343)
        cir.break loc(#loc71)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc73)
        cir.break loc(#loc74)
      }
      ] loc(#loc33)
    } loc(#loc342)
    cir.return loc(#loc20)
  } loc(#loc338)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc357)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc358)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc359)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc360)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    cir.return loc(#loc76)
  } loc(#loc356)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc85)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc362)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc90)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc363)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc94)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc95)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc97)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc97)
        %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc95)
        cir.break loc(#loc98)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc100)
        cir.break loc(#loc101)
      }
      ] loc(#loc92)
    } loc(#loc364)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc104)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc106)
        cir.break loc(#loc107)
      },
      case (default) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc367)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc114)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc369)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc370)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc117)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc119)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc120)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc120)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc371)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc121)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc118)
                cir.yield %16 : !cir.bool loc(#loc118)
              }, false {
                %16 = cir.const #false loc(#loc118)
                cir.yield %16 : !cir.bool loc(#loc118)
              }) : (!cir.bool) -> !cir.bool loc(#loc118)
              cir.yield %15 : !cir.bool loc(#loc118)
            }, false {
              %10 = cir.const #false loc(#loc118)
              cir.yield %10 : !cir.bool loc(#loc118)
            }) : (!cir.bool) -> !cir.bool loc(#loc118)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc125)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc126)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc373)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc374)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc375)
              cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc376)
              cir.scope {
                %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc378)
                %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc135)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc138)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc139)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
                } loc(#loc379)
              } loc(#loc377)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc140)
              %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
              %18 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc142)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc142)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc140)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc144)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc145)
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc145)
            } else {
              %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc85)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc85)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc147)
            } loc(#loc372)
          } loc(#loc368)
        } loc(#loc366)
        cir.break loc(#loc148)
      }
      ] loc(#loc102)
    } loc(#loc365)
    cir.return loc(#loc87)
  } loc(#loc361)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc381)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc153)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc382)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc157)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc158)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc159)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc160)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc160)
        %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc158)
        cir.break loc(#loc161)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc162)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc162)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc163)
        cir.break loc(#loc164)
      }
      ] loc(#loc155)
    } loc(#loc383)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc167)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc386)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc174)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc388)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc389)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc177)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc179)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc180)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc180)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc390)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc181)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc178)
                cir.yield %16 : !cir.bool loc(#loc178)
              }, false {
                %16 = cir.const #false loc(#loc178)
                cir.yield %16 : !cir.bool loc(#loc178)
              }) : (!cir.bool) -> !cir.bool loc(#loc178)
              cir.yield %15 : !cir.bool loc(#loc178)
            }, false {
              %10 = cir.const #false loc(#loc178)
              cir.yield %10 : !cir.bool loc(#loc178)
            }) : (!cir.bool) -> !cir.bool loc(#loc178)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc185)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc186)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc392)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc393)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc185)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc394)
              cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc395)
              cir.scope {
                %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc194)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc194)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc397)
                %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc195)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc197)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc198)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc199)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc197)
                } loc(#loc398)
              } loc(#loc396)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc200)
              %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
              %18 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc202)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc202)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc200)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc204)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc205)
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc206)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc205)
            } else {
              %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc207)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc207)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc208)
            } loc(#loc391)
          } loc(#loc387)
        } loc(#loc385)
        cir.break loc(#loc209)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc210)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc210)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc211)
        cir.break loc(#loc212)
      }
      ] loc(#loc165)
    } loc(#loc384)
    cir.return loc(#loc150)
  } loc(#loc380)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc400)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc217)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc401)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc221)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc222)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc222)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc223)
        cir.break loc(#loc224)
      },
      case (default) {
        %4 = cir.const #cir.int<20> : !s32i loc(#loc225)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc225)
        cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc403)
        cir.break loc(#loc227)
      }
      ] loc(#loc219)
    } loc(#loc402)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc230)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc406)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc237)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc408)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc409)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc240)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc244)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc245)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc411)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc412)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc244)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc413)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc414)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc253)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc253)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc416)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc254)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc256)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc257)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc258)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc256)
                } loc(#loc417)
              } loc(#loc415)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc259)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
              %17 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc261)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc261)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc259)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc263)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc264)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc265)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc264)
            } else {
              %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc266)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc266)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc267)
            } loc(#loc410)
          } loc(#loc407)
        } loc(#loc405)
        cir.break loc(#loc268)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc269)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc269)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc270)
        cir.break loc(#loc271)
      }
      ] loc(#loc228)
    } loc(#loc404)
    cir.return loc(#loc214)
  } loc(#loc399)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc419)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc276)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc276)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc420)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc280)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.const #cir.int<20> : !s32i loc(#loc281)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc281)
        cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc422)
        cir.break loc(#loc283)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc284)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc284)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc285)
        cir.break loc(#loc286)
      }
      ] loc(#loc278)
    } loc(#loc421)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc289)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc425)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc296)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc427)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc428)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc299)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc303)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc304)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc430)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc431)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc303)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc432)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc433)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc311)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc312)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc312)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc435)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc313)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc315)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc316)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc317)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc315)
                } loc(#loc436)
              } loc(#loc434)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc318)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc319)
              %17 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc320)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc320)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc318)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc321)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc322)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc323)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc324)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc324)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc323)
            } else {
              %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc325)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc325)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc326)
            } loc(#loc429)
          } loc(#loc426)
        } loc(#loc424)
        cir.break loc(#loc327)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc328)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc328)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc329)
        cir.break loc(#loc330)
      }
      ] loc(#loc287)
    } loc(#loc423)
    cir.return loc(#loc273)
  } loc(#loc418)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":37:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":41:19)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("/usr/include/string.h":141:1)
#loc14 = loc("/usr/include/string.h":142:14)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":57:30)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":63:23)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":28:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":72:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":30:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":30:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":32:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":32:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":33:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":43:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":33:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":37:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":37:16)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":38:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":41:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":42:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":44:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":71:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":44:12)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":47:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":65:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":48:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":48:16)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":52:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":64:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":52:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":52:20)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":52:39)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":52:18)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":53:9)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":60:9)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":62:9)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":54:32)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":54:39)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":54:44)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":54:55)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":54:56)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":54:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":55:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":55:45)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":55:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":55:29)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":55:26)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":55:35)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":55:36)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":55:42)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":55:41)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":57:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":57:20)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":58:23)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":58:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":59:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":59:18)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":63:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":66:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":69:19)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":69:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":70:9)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":266:1)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":272:1)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":268:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":268:14)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":269:5)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":269:14)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":270:5)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":270:14)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":271:5)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":271:14)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":118:23)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":79:1)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":123:1)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":81:5)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":81:12)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":83:12)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":83:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":84:5)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":94:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":84:12)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":88:9)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":88:16)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":88:23)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":89:9)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":92:19)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":92:9)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":93:9)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":95:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":122:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":95:12)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":99:19)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":99:9)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":100:9)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":102:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":120:5)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":103:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":103:16)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":107:9)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":119:9)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":107:13)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":107:20)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":107:39)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":107:18)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":107:41)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":107:44)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":107:51)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":107:49)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":108:9)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":115:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":117:9)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":109:32)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":109:39)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":109:44)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":109:55)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":109:56)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":109:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":110:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":110:45)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":110:17)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":110:29)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":110:26)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":110:35)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":110:36)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":110:42)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":110:41)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":112:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":112:20)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":112:30)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":113:23)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":113:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":114:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":114:18)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":118:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":121:5)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":126:1)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":170:1)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":128:5)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":128:12)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":130:12)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":130:5)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":131:5)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":141:5)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":131:12)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":135:9)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":135:16)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":135:23)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":136:9)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":139:19)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":139:9)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":140:9)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":142:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":169:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":142:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":145:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":163:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":146:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":146:16)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":150:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":162:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":150:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":150:20)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":150:39)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":150:18)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":150:41)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":150:44)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":150:51)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":150:49)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":151:9)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":158:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":160:9)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":152:32)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":152:39)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":152:44)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":152:55)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":152:56)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":152:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":153:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":153:45)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":153:17)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":153:29)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":153:26)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":153:35)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":153:36)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":153:42)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":153:41)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":155:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":155:20)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":155:30)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":156:23)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":156:13)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":157:13)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":157:18)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":161:23)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":161:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":164:5)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":167:19)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":167:9)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":168:9)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":173:1)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":217:1)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":175:5)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":175:12)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":177:12)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":177:5)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":178:5)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":188:5)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":178:12)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":182:19)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":182:9)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":183:9)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":186:16)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":186:9)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":187:9)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":189:5)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":216:5)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":189:12)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":192:5)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":210:5)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":193:9)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":193:16)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":197:9)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":209:9)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":197:13)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":197:20)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":197:39)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":197:18)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":198:9)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":205:9)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":207:9)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":199:32)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":199:39)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":199:44)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":199:55)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":199:56)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":199:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":200:13)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":200:45)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":200:17)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":200:29)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":200:26)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":200:35)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":200:36)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":200:42)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":200:41)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":202:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":202:20)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":202:30)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":203:23)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":203:13)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":204:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":204:18)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":208:23)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":208:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":211:5)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":214:19)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":214:9)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":215:9)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":220:1)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":264:1)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":222:5)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":222:12)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":224:12)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":224:5)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":225:5)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":235:5)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":225:12)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":229:16)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":229:9)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":230:9)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":233:19)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":233:9)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":234:9)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":236:5)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":263:5)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":236:12)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":239:5)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":257:5)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":240:9)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":240:16)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":244:9)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":256:9)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":244:13)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":244:20)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":244:39)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":244:18)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":245:9)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":252:9)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":254:9)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":246:32)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":246:39)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":246:44)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":246:55)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":246:56)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":246:13)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":247:13)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":247:45)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":247:17)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":247:29)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":247:26)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":247:35)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":247:36)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":247:42)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":247:41)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":249:13)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":249:20)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":249:30)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":250:23)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":250:13)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":251:13)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":251:18)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":255:23)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":255:13)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":258:5)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":261:19)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":261:9)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_15.c":262:9)
#loc331 = loc(fused[#loc1, #loc2])
#loc332 = loc(fused[#loc3, #loc4])
#loc333 = loc(fused[#loc6, #loc7])
#loc334 = loc(fused[#loc9, #loc10])
#loc335 = loc(fused[#loc11, #loc12])
#loc336 = loc(fused[#loc13, #loc14])
#loc337 = loc(fused[#loc16, #loc17])
#loc338 = loc(fused[#loc19, #loc20])
#loc339 = loc(fused[#loc21, #loc22])
#loc340 = loc(fused[#loc24, #loc23])
#loc341 = loc(fused[#loc25, #loc26])
#loc342 = loc(fused[#loc33, #loc34])
#loc343 = loc(fused[#loc36, #loc37])
#loc344 = loc(fused[#loc38, #loc39])
#loc345 = loc(fused[#loc40, #loc41])
#loc346 = loc(fused[#loc43, #loc44])
#loc347 = loc(fused[#loc42, #loc44])
#loc348 = loc(fused[#loc46, #loc47, #loc48, #loc41])
#loc349 = loc(fused[#loc51, #loc52])
#loc350 = loc(fused[#loc50, #loc52])
#loc351 = loc(fused[#loc49, #loc53])
#loc352 = loc(fused[#loc54, #loc53])
#loc353 = loc(fused[#loc55, #loc56])
#loc354 = loc(fused[#loc57, #loc58])
#loc355 = loc(fused[#loc60, #loc56])
#loc356 = loc(fused[#loc75, #loc76])
#loc357 = loc(fused[#loc77, #loc78])
#loc358 = loc(fused[#loc79, #loc80])
#loc359 = loc(fused[#loc81, #loc82])
#loc360 = loc(fused[#loc83, #loc84])
#loc361 = loc(fused[#loc86, #loc87])
#loc362 = loc(fused[#loc88, #loc89])
#loc363 = loc(fused[#loc91, #loc90])
#loc364 = loc(fused[#loc92, #loc93])
#loc365 = loc(fused[#loc102, #loc103])
#loc366 = loc(fused[#loc108, #loc109])
#loc367 = loc(fused[#loc110, #loc111])
#loc368 = loc(fused[#loc112, #loc113])
#loc369 = loc(fused[#loc115, #loc116])
#loc370 = loc(fused[#loc114, #loc116])
#loc371 = loc(fused[#loc119, #loc120])
#loc372 = loc(fused[#loc122, #loc123, #loc124, #loc113])
#loc373 = loc(fused[#loc127, #loc128])
#loc374 = loc(fused[#loc126, #loc128])
#loc375 = loc(fused[#loc125, #loc129])
#loc376 = loc(fused[#loc130, #loc129])
#loc377 = loc(fused[#loc131, #loc132])
#loc378 = loc(fused[#loc133, #loc134])
#loc379 = loc(fused[#loc136, #loc132])
#loc380 = loc(fused[#loc149, #loc150])
#loc381 = loc(fused[#loc151, #loc152])
#loc382 = loc(fused[#loc154, #loc153])
#loc383 = loc(fused[#loc155, #loc156])
#loc384 = loc(fused[#loc165, #loc166])
#loc385 = loc(fused[#loc168, #loc169])
#loc386 = loc(fused[#loc170, #loc171])
#loc387 = loc(fused[#loc172, #loc173])
#loc388 = loc(fused[#loc175, #loc176])
#loc389 = loc(fused[#loc174, #loc176])
#loc390 = loc(fused[#loc179, #loc180])
#loc391 = loc(fused[#loc182, #loc183, #loc184, #loc173])
#loc392 = loc(fused[#loc187, #loc188])
#loc393 = loc(fused[#loc186, #loc188])
#loc394 = loc(fused[#loc185, #loc189])
#loc395 = loc(fused[#loc190, #loc189])
#loc396 = loc(fused[#loc191, #loc192])
#loc397 = loc(fused[#loc193, #loc194])
#loc398 = loc(fused[#loc196, #loc192])
#loc399 = loc(fused[#loc213, #loc214])
#loc400 = loc(fused[#loc215, #loc216])
#loc401 = loc(fused[#loc218, #loc217])
#loc402 = loc(fused[#loc219, #loc220])
#loc403 = loc(fused[#loc226, #loc225])
#loc404 = loc(fused[#loc228, #loc229])
#loc405 = loc(fused[#loc231, #loc232])
#loc406 = loc(fused[#loc233, #loc234])
#loc407 = loc(fused[#loc235, #loc236])
#loc408 = loc(fused[#loc238, #loc239])
#loc409 = loc(fused[#loc237, #loc239])
#loc410 = loc(fused[#loc241, #loc242, #loc243, #loc236])
#loc411 = loc(fused[#loc246, #loc247])
#loc412 = loc(fused[#loc245, #loc247])
#loc413 = loc(fused[#loc244, #loc248])
#loc414 = loc(fused[#loc249, #loc248])
#loc415 = loc(fused[#loc250, #loc251])
#loc416 = loc(fused[#loc252, #loc253])
#loc417 = loc(fused[#loc255, #loc251])
#loc418 = loc(fused[#loc272, #loc273])
#loc419 = loc(fused[#loc274, #loc275])
#loc420 = loc(fused[#loc277, #loc276])
#loc421 = loc(fused[#loc278, #loc279])
#loc422 = loc(fused[#loc282, #loc281])
#loc423 = loc(fused[#loc287, #loc288])
#loc424 = loc(fused[#loc290, #loc291])
#loc425 = loc(fused[#loc292, #loc293])
#loc426 = loc(fused[#loc294, #loc295])
#loc427 = loc(fused[#loc297, #loc298])
#loc428 = loc(fused[#loc296, #loc298])
#loc429 = loc(fused[#loc300, #loc301, #loc302, #loc295])
#loc430 = loc(fused[#loc305, #loc306])
#loc431 = loc(fused[#loc304, #loc306])
#loc432 = loc(fused[#loc303, #loc307])
#loc433 = loc(fused[#loc308, #loc307])
#loc434 = loc(fused[#loc309, #loc310])
#loc435 = loc(fused[#loc311, #loc312])
#loc436 = loc(fused[#loc314, #loc310])
