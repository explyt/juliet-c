!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc118 = loc("CWE367_TOC_TOU__access_11.c":179:10)
#loc119 = loc("CWE367_TOC_TOU__access_11.c":179:14)
#loc120 = loc("CWE367_TOC_TOU__access_11.c":179:20)
#loc121 = loc("CWE367_TOC_TOU__access_11.c":179:32)
#loc330 = loc(fused[#loc118, #loc119])
#loc331 = loc(fused[#loc120, #loc121])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc284)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc285)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc286)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc288)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc289)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc290)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc291)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc292)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc20)
  cir.func private @close(!s32i) -> !s32i loc(#loc293)
  cir.func no_proto @CWE367_TOC_TOU__access_11_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc296)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc296)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc27)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc27)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc299)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc300)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc299)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc299)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc36)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc300)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc40)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc286)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc302)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc45)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc46)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc46)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc47)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc48)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc304)
            } loc(#loc303)
          } loc(#loc301)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc53)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc306)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc55)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc55)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc58)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc308)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc59)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc309)
            } loc(#loc307)
          } loc(#loc305)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc63)
            %14 = cir.call @access(%12, %13) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc64)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc65)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc66)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc311)
            cir.if %17 {
              %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc68)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc69)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
            } loc(#loc312)
          } loc(#loc310)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc71)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc72)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc313)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc77)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc79)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc315)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc81)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc82)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
            } loc(#loc316)
          } loc(#loc314)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc20)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc20)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
            %16 = cir.const #cir.int<11> : !u64i loc(#loc318)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc88)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc89)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc90)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc90)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc319)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc92)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc93)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc92)
            } loc(#loc320)
          } loc(#loc317)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc97)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc98)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc322)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc101)
            } loc(#loc323)
          } loc(#loc321)
        } loc(#loc298)
      } loc(#loc297)
    } loc(#loc295)
    cir.return loc(#loc24)
  } loc(#loc294)
  cir.func no_proto @CWE367_TOC_TOU__access_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc325)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc104)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc326)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc106)
    cir.return loc(#loc103)
  } loc(#loc324)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc327)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc115)
  cir.func @main(%arg0: !s32i loc(fused[#loc118, #loc119]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc120, #loc121])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc330)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc331)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc117)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc122)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc123)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc124)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc124)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc125)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc112)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %8 = cir.get_global @CWE367_TOC_TOU__access_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc332)
    cir.call @CWE367_TOC_TOU__access_11_good() : () -> () loc(#loc127)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc113)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc114)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %13 = cir.get_global @CWE367_TOC_TOU__access_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc333)
    cir.call @CWE367_TOC_TOU__access_11_bad() : () -> () loc(#loc131)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc115)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc134)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    cir.return %17 : !s32i loc(#loc334)
  } loc(#loc329)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc335)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc139)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc338)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc338)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc144)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc144)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc138)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc138)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc149)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc341)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc342)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc341)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc341)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc155)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc156)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc342)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc159)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc160)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc286)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc161)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc344)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc165)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc165)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc166)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc167)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc167)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc168)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc169)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc169)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc346)
            } loc(#loc345)
          } loc(#loc343)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc172)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc172)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc174)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc174)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc348)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc176)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc176)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc177)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc178)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc177)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc179)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc179)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc350)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc180)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc180)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc351)
            } loc(#loc349)
          } loc(#loc347)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc181)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc182)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc183)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc352)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc188)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc189)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc190)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc354)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc192)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc193)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc192)
            } loc(#loc355)
          } loc(#loc353)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc196)
            %13 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc139)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc139)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc357)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc199)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc200)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc201)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc201)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc358)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc203)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc204)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc203)
            } loc(#loc359)
          } loc(#loc356)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc207)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc208)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc209)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc361)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc211)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc212)
            } loc(#loc362)
          } loc(#loc360)
        } loc(#loc340)
      } loc(#loc339)
    } loc(#loc337)
    cir.return loc(#loc141)
  } loc(#loc336)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc365)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc365)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc217)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc217)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc368)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc369)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc368)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc368)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc225)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc226)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc369)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc229)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc230)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc286)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc231)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc232)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc233)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc233)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc371)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc235)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc235)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc236)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc237)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc237)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc238)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc239)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc239)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc373)
            } loc(#loc372)
          } loc(#loc370)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc242)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc243)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc242)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc244)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc244)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc375)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc246)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc246)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc247)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc248)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc247)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc249)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc249)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc377)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc250)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc378)
            } loc(#loc376)
          } loc(#loc374)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc251)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc252)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc253)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc379)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc258)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc259)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc260)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc381)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc262)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc263)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc262)
            } loc(#loc382)
          } loc(#loc380)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc266)
            %13 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc267)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc267)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc267)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc384)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc270)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc271)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc272)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc272)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc385)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc274)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc275)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc274)
            } loc(#loc386)
          } loc(#loc383)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc278)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc279)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc280)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc388)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc282)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc283)
            } loc(#loc389)
          } loc(#loc387)
        } loc(#loc367)
      } loc(#loc366)
    } loc(#loc364)
    cir.return loc(#loc214)
  } loc(#loc363)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE367_TOC_TOU__access_11.c":53:27)
#loc10 = loc("/usr/include/string.h":407:1)
#loc11 = loc("/usr/include/string.h":408:33)
#loc12 = loc("/usr/include/unistd.h":287:1)
#loc13 = loc("/usr/include/unistd.h":287:60)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("/usr/include/fcntl.h":209:1)
#loc17 = loc("/usr/include/fcntl.h":209:56)
#loc18 = loc("/usr/include/unistd.h":378:1)
#loc19 = loc("/usr/include/unistd.h":378:62)
#loc20 = loc("CWE367_TOC_TOU__access_11.c":71:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE367_TOC_TOU__access_11.c":44:1)
#loc24 = loc("CWE367_TOC_TOU__access_11.c":81:1)
#loc25 = loc("CWE367_TOC_TOU__access_11.c":46:5)
#loc26 = loc("CWE367_TOC_TOU__access_11.c":80:5)
#loc27 = loc("CWE367_TOC_TOU__access_11.c":46:8)
#loc28 = loc("CWE367_TOC_TOU__access_11.c":46:26)
#loc29 = loc("CWE367_TOC_TOU__access_11.c":47:5)
#loc30 = loc("CWE367_TOC_TOU__access_11.c":48:9)
#loc31 = loc("CWE367_TOC_TOU__access_11.c":79:9)
#loc32 = loc("CWE367_TOC_TOU__access_11.c":49:13)
#loc33 = loc("CWE367_TOC_TOU__access_11.c":49:34)
#loc34 = loc("CWE367_TOC_TOU__access_11.c":50:13)
#loc35 = loc("CWE367_TOC_TOU__access_11.c":50:29)
#loc36 = loc("CWE367_TOC_TOU__access_11.c":50:28)
#loc37 = loc("CWE367_TOC_TOU__access_11.c":51:13)
#loc38 = loc("CWE367_TOC_TOU__access_11.c":56:13)
#loc39 = loc("CWE367_TOC_TOU__access_11.c":51:23)
#loc40 = loc("CWE367_TOC_TOU__access_11.c":51:33)
#loc41 = loc("CWE367_TOC_TOU__access_11.c":51:38)
#loc42 = loc("CWE367_TOC_TOU__access_11.c":51:17)
#loc43 = loc("CWE367_TOC_TOU__access_11.c":51:48)
#loc44 = loc("CWE367_TOC_TOU__access_11.c":52:13)
#loc45 = loc("CWE367_TOC_TOU__access_11.c":53:17)
#loc46 = loc("CWE367_TOC_TOU__access_11.c":55:31)
#loc47 = loc("CWE367_TOC_TOU__access_11.c":55:26)
#loc48 = loc("CWE367_TOC_TOU__access_11.c":55:17)
#loc49 = loc("CWE367_TOC_TOU__access_11.c":57:13)
#loc50 = loc("CWE367_TOC_TOU__access_11.c":60:13)
#loc51 = loc("CWE367_TOC_TOU__access_11.c":57:17)
#loc52 = loc("CWE367_TOC_TOU__access_11.c":57:24)
#loc53 = loc("CWE367_TOC_TOU__access_11.c":57:36)
#loc54 = loc("CWE367_TOC_TOU__access_11.c":58:13)
#loc55 = loc("CWE367_TOC_TOU__access_11.c":59:48)
#loc56 = loc("CWE367_TOC_TOU__access_11.c":59:26)
#loc57 = loc("CWE367_TOC_TOU__access_11.c":59:33)
#loc58 = loc("CWE367_TOC_TOU__access_11.c":59:43)
#loc59 = loc("CWE367_TOC_TOU__access_11.c":59:17)
#loc60 = loc("CWE367_TOC_TOU__access_11.c":62:13)
#loc61 = loc("CWE367_TOC_TOU__access_11.c":65:13)
#loc62 = loc("CWE367_TOC_TOU__access_11.c":62:24)
#loc63 = loc("CWE367_TOC_TOU__access_11.c":62:34)
#loc64 = loc("CWE367_TOC_TOU__access_11.c":62:17)
#loc65 = loc("CWE367_TOC_TOU__access_11.c":62:44)
#loc66 = loc("CWE367_TOC_TOU__access_11.c":62:43)
#loc67 = loc("CWE367_TOC_TOU__access_11.c":63:13)
#loc68 = loc("CWE367_TOC_TOU__access_11.c":64:17)
#loc69 = loc("CWE367_TOC_TOU__access_11.c":64:22)
#loc70 = loc("CWE367_TOC_TOU__access_11.c":66:30)
#loc71 = loc("CWE367_TOC_TOU__access_11.c":66:40)
#loc72 = loc("CWE367_TOC_TOU__access_11.c":66:25)
#loc73 = loc("CWE367_TOC_TOU__access_11.c":66:13)
#loc74 = loc("CWE367_TOC_TOU__access_11.c":66:46)
#loc75 = loc("CWE367_TOC_TOU__access_11.c":67:13)
#loc76 = loc("CWE367_TOC_TOU__access_11.c":70:13)
#loc77 = loc("CWE367_TOC_TOU__access_11.c":67:17)
#loc78 = loc("CWE367_TOC_TOU__access_11.c":67:30)
#loc79 = loc("CWE367_TOC_TOU__access_11.c":67:29)
#loc80 = loc("CWE367_TOC_TOU__access_11.c":68:13)
#loc81 = loc("CWE367_TOC_TOU__access_11.c":69:17)
#loc82 = loc("CWE367_TOC_TOU__access_11.c":69:22)
#loc83 = loc("CWE367_TOC_TOU__access_11.c":71:13)
#loc84 = loc("CWE367_TOC_TOU__access_11.c":74:13)
#loc85 = loc("CWE367_TOC_TOU__access_11.c":71:23)
#loc86 = loc("CWE367_TOC_TOU__access_11.c":71:50)
#loc87 = loc("CWE367_TOC_TOU__access_11.c":71:72)
#loc88 = loc("CWE367_TOC_TOU__access_11.c":71:17)
#loc89 = loc("CWE367_TOC_TOU__access_11.c":71:79)
#loc90 = loc("CWE367_TOC_TOU__access_11.c":71:78)
#loc91 = loc("CWE367_TOC_TOU__access_11.c":72:13)
#loc92 = loc("CWE367_TOC_TOU__access_11.c":73:17)
#loc93 = loc("CWE367_TOC_TOU__access_11.c":73:22)
#loc94 = loc("CWE367_TOC_TOU__access_11.c":75:13)
#loc95 = loc("CWE367_TOC_TOU__access_11.c":78:13)
#loc96 = loc("CWE367_TOC_TOU__access_11.c":75:17)
#loc97 = loc("CWE367_TOC_TOU__access_11.c":75:30)
#loc98 = loc("CWE367_TOC_TOU__access_11.c":75:29)
#loc99 = loc("CWE367_TOC_TOU__access_11.c":76:13)
#loc100 = loc("CWE367_TOC_TOU__access_11.c":77:23)
#loc101 = loc("CWE367_TOC_TOU__access_11.c":77:17)
#loc102 = loc("CWE367_TOC_TOU__access_11.c":164:1)
#loc103 = loc("CWE367_TOC_TOU__access_11.c":168:1)
#loc104 = loc("CWE367_TOC_TOU__access_11.c":166:5)
#loc105 = loc("CWE367_TOC_TOU__access_11.c":166:11)
#loc106 = loc("CWE367_TOC_TOU__access_11.c":167:5)
#loc107 = loc("CWE367_TOC_TOU__access_11.c":167:11)
#loc108 = loc("/usr/include/stdlib.h":575:1)
#loc109 = loc("/usr/include/stdlib.h":575:41)
#loc110 = loc("/usr/include/time.h":76:1)
#loc111 = loc("/usr/include/time.h":76:38)
#loc112 = loc("CWE367_TOC_TOU__access_11.c":184:15)
#loc113 = loc("CWE367_TOC_TOU__access_11.c":186:15)
#loc114 = loc("CWE367_TOC_TOU__access_11.c":189:15)
#loc115 = loc("CWE367_TOC_TOU__access_11.c":191:15)
#loc116 = loc("CWE367_TOC_TOU__access_11.c":179:1)
#loc117 = loc("CWE367_TOC_TOU__access_11.c":194:1)
#loc122 = loc("CWE367_TOC_TOU__access_11.c":180:1)
#loc123 = loc("CWE367_TOC_TOU__access_11.c":182:27)
#loc124 = loc("CWE367_TOC_TOU__access_11.c":182:22)
#loc125 = loc("CWE367_TOC_TOU__access_11.c":182:5)
#loc126 = loc("CWE367_TOC_TOU__access_11.c":184:5)
#loc127 = loc("CWE367_TOC_TOU__access_11.c":185:5)
#loc128 = loc("CWE367_TOC_TOU__access_11.c":185:36)
#loc129 = loc("CWE367_TOC_TOU__access_11.c":186:5)
#loc130 = loc("CWE367_TOC_TOU__access_11.c":189:5)
#loc131 = loc("CWE367_TOC_TOU__access_11.c":190:5)
#loc132 = loc("CWE367_TOC_TOU__access_11.c":190:35)
#loc133 = loc("CWE367_TOC_TOU__access_11.c":191:5)
#loc134 = loc("CWE367_TOC_TOU__access_11.c":193:12)
#loc135 = loc("CWE367_TOC_TOU__access_11.c":193:5)
#loc136 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc137 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc138 = loc("CWE367_TOC_TOU__access_11.c":93:19)
#loc139 = loc("CWE367_TOC_TOU__access_11.c":116:33)
#loc140 = loc("CWE367_TOC_TOU__access_11.c":88:1)
#loc141 = loc("CWE367_TOC_TOU__access_11.c":126:1)
#loc142 = loc("CWE367_TOC_TOU__access_11.c":90:5)
#loc143 = loc("CWE367_TOC_TOU__access_11.c":125:5)
#loc144 = loc("CWE367_TOC_TOU__access_11.c":90:8)
#loc145 = loc("CWE367_TOC_TOU__access_11.c":90:27)
#loc146 = loc("CWE367_TOC_TOU__access_11.c":91:5)
#loc147 = loc("CWE367_TOC_TOU__access_11.c":94:5)
#loc148 = loc("CWE367_TOC_TOU__access_11.c":96:5)
#loc149 = loc("CWE367_TOC_TOU__access_11.c":93:9)
#loc150 = loc("CWE367_TOC_TOU__access_11.c":97:9)
#loc151 = loc("CWE367_TOC_TOU__access_11.c":124:9)
#loc152 = loc("CWE367_TOC_TOU__access_11.c":98:13)
#loc153 = loc("CWE367_TOC_TOU__access_11.c":98:34)
#loc154 = loc("CWE367_TOC_TOU__access_11.c":99:13)
#loc155 = loc("CWE367_TOC_TOU__access_11.c":99:29)
#loc156 = loc("CWE367_TOC_TOU__access_11.c":99:28)
#loc157 = loc("CWE367_TOC_TOU__access_11.c":100:13)
#loc158 = loc("CWE367_TOC_TOU__access_11.c":105:13)
#loc159 = loc("CWE367_TOC_TOU__access_11.c":100:23)
#loc160 = loc("CWE367_TOC_TOU__access_11.c":100:33)
#loc161 = loc("CWE367_TOC_TOU__access_11.c":100:38)
#loc162 = loc("CWE367_TOC_TOU__access_11.c":100:17)
#loc163 = loc("CWE367_TOC_TOU__access_11.c":100:48)
#loc164 = loc("CWE367_TOC_TOU__access_11.c":101:13)
#loc165 = loc("CWE367_TOC_TOU__access_11.c":102:27)
#loc166 = loc("CWE367_TOC_TOU__access_11.c":102:17)
#loc167 = loc("CWE367_TOC_TOU__access_11.c":104:31)
#loc168 = loc("CWE367_TOC_TOU__access_11.c":104:26)
#loc169 = loc("CWE367_TOC_TOU__access_11.c":104:17)
#loc170 = loc("CWE367_TOC_TOU__access_11.c":106:13)
#loc171 = loc("CWE367_TOC_TOU__access_11.c":109:13)
#loc172 = loc("CWE367_TOC_TOU__access_11.c":106:17)
#loc173 = loc("CWE367_TOC_TOU__access_11.c":106:24)
#loc174 = loc("CWE367_TOC_TOU__access_11.c":106:36)
#loc175 = loc("CWE367_TOC_TOU__access_11.c":107:13)
#loc176 = loc("CWE367_TOC_TOU__access_11.c":108:48)
#loc177 = loc("CWE367_TOC_TOU__access_11.c":108:26)
#loc178 = loc("CWE367_TOC_TOU__access_11.c":108:33)
#loc179 = loc("CWE367_TOC_TOU__access_11.c":108:43)
#loc180 = loc("CWE367_TOC_TOU__access_11.c":108:17)
#loc181 = loc("CWE367_TOC_TOU__access_11.c":111:30)
#loc182 = loc("CWE367_TOC_TOU__access_11.c":111:40)
#loc183 = loc("CWE367_TOC_TOU__access_11.c":111:25)
#loc184 = loc("CWE367_TOC_TOU__access_11.c":111:13)
#loc185 = loc("CWE367_TOC_TOU__access_11.c":111:46)
#loc186 = loc("CWE367_TOC_TOU__access_11.c":112:13)
#loc187 = loc("CWE367_TOC_TOU__access_11.c":115:13)
#loc188 = loc("CWE367_TOC_TOU__access_11.c":112:17)
#loc189 = loc("CWE367_TOC_TOU__access_11.c":112:30)
#loc190 = loc("CWE367_TOC_TOU__access_11.c":112:29)
#loc191 = loc("CWE367_TOC_TOU__access_11.c":113:13)
#loc192 = loc("CWE367_TOC_TOU__access_11.c":114:17)
#loc193 = loc("CWE367_TOC_TOU__access_11.c":114:22)
#loc194 = loc("CWE367_TOC_TOU__access_11.c":116:13)
#loc195 = loc("CWE367_TOC_TOU__access_11.c":119:13)
#loc196 = loc("CWE367_TOC_TOU__access_11.c":116:23)
#loc197 = loc("CWE367_TOC_TOU__access_11.c":116:51)
#loc198 = loc("CWE367_TOC_TOU__access_11.c":116:74)
#loc199 = loc("CWE367_TOC_TOU__access_11.c":116:17)
#loc200 = loc("CWE367_TOC_TOU__access_11.c":116:81)
#loc201 = loc("CWE367_TOC_TOU__access_11.c":116:80)
#loc202 = loc("CWE367_TOC_TOU__access_11.c":117:13)
#loc203 = loc("CWE367_TOC_TOU__access_11.c":118:17)
#loc204 = loc("CWE367_TOC_TOU__access_11.c":118:22)
#loc205 = loc("CWE367_TOC_TOU__access_11.c":120:13)
#loc206 = loc("CWE367_TOC_TOU__access_11.c":123:13)
#loc207 = loc("CWE367_TOC_TOU__access_11.c":120:17)
#loc208 = loc("CWE367_TOC_TOU__access_11.c":120:30)
#loc209 = loc("CWE367_TOC_TOU__access_11.c":120:29)
#loc210 = loc("CWE367_TOC_TOU__access_11.c":121:13)
#loc211 = loc("CWE367_TOC_TOU__access_11.c":122:23)
#loc212 = loc("CWE367_TOC_TOU__access_11.c":122:17)
#loc213 = loc("CWE367_TOC_TOU__access_11.c":129:1)
#loc214 = loc("CWE367_TOC_TOU__access_11.c":162:1)
#loc215 = loc("CWE367_TOC_TOU__access_11.c":131:5)
#loc216 = loc("CWE367_TOC_TOU__access_11.c":161:5)
#loc217 = loc("CWE367_TOC_TOU__access_11.c":131:8)
#loc218 = loc("CWE367_TOC_TOU__access_11.c":131:26)
#loc219 = loc("CWE367_TOC_TOU__access_11.c":132:5)
#loc220 = loc("CWE367_TOC_TOU__access_11.c":133:9)
#loc221 = loc("CWE367_TOC_TOU__access_11.c":160:9)
#loc222 = loc("CWE367_TOC_TOU__access_11.c":134:13)
#loc223 = loc("CWE367_TOC_TOU__access_11.c":134:34)
#loc224 = loc("CWE367_TOC_TOU__access_11.c":135:13)
#loc225 = loc("CWE367_TOC_TOU__access_11.c":135:29)
#loc226 = loc("CWE367_TOC_TOU__access_11.c":135:28)
#loc227 = loc("CWE367_TOC_TOU__access_11.c":136:13)
#loc228 = loc("CWE367_TOC_TOU__access_11.c":141:13)
#loc229 = loc("CWE367_TOC_TOU__access_11.c":136:23)
#loc230 = loc("CWE367_TOC_TOU__access_11.c":136:33)
#loc231 = loc("CWE367_TOC_TOU__access_11.c":136:38)
#loc232 = loc("CWE367_TOC_TOU__access_11.c":136:17)
#loc233 = loc("CWE367_TOC_TOU__access_11.c":136:48)
#loc234 = loc("CWE367_TOC_TOU__access_11.c":137:13)
#loc235 = loc("CWE367_TOC_TOU__access_11.c":138:27)
#loc236 = loc("CWE367_TOC_TOU__access_11.c":138:17)
#loc237 = loc("CWE367_TOC_TOU__access_11.c":140:31)
#loc238 = loc("CWE367_TOC_TOU__access_11.c":140:26)
#loc239 = loc("CWE367_TOC_TOU__access_11.c":140:17)
#loc240 = loc("CWE367_TOC_TOU__access_11.c":142:13)
#loc241 = loc("CWE367_TOC_TOU__access_11.c":145:13)
#loc242 = loc("CWE367_TOC_TOU__access_11.c":142:17)
#loc243 = loc("CWE367_TOC_TOU__access_11.c":142:24)
#loc244 = loc("CWE367_TOC_TOU__access_11.c":142:36)
#loc245 = loc("CWE367_TOC_TOU__access_11.c":143:13)
#loc246 = loc("CWE367_TOC_TOU__access_11.c":144:48)
#loc247 = loc("CWE367_TOC_TOU__access_11.c":144:26)
#loc248 = loc("CWE367_TOC_TOU__access_11.c":144:33)
#loc249 = loc("CWE367_TOC_TOU__access_11.c":144:43)
#loc250 = loc("CWE367_TOC_TOU__access_11.c":144:17)
#loc251 = loc("CWE367_TOC_TOU__access_11.c":147:30)
#loc252 = loc("CWE367_TOC_TOU__access_11.c":147:40)
#loc253 = loc("CWE367_TOC_TOU__access_11.c":147:25)
#loc254 = loc("CWE367_TOC_TOU__access_11.c":147:13)
#loc255 = loc("CWE367_TOC_TOU__access_11.c":147:46)
#loc256 = loc("CWE367_TOC_TOU__access_11.c":148:13)
#loc257 = loc("CWE367_TOC_TOU__access_11.c":151:13)
#loc258 = loc("CWE367_TOC_TOU__access_11.c":148:17)
#loc259 = loc("CWE367_TOC_TOU__access_11.c":148:30)
#loc260 = loc("CWE367_TOC_TOU__access_11.c":148:29)
#loc261 = loc("CWE367_TOC_TOU__access_11.c":149:13)
#loc262 = loc("CWE367_TOC_TOU__access_11.c":150:17)
#loc263 = loc("CWE367_TOC_TOU__access_11.c":150:22)
#loc264 = loc("CWE367_TOC_TOU__access_11.c":152:13)
#loc265 = loc("CWE367_TOC_TOU__access_11.c":155:13)
#loc266 = loc("CWE367_TOC_TOU__access_11.c":152:23)
#loc267 = loc("CWE367_TOC_TOU__access_11.c":152:33)
#loc268 = loc("CWE367_TOC_TOU__access_11.c":152:51)
#loc269 = loc("CWE367_TOC_TOU__access_11.c":152:74)
#loc270 = loc("CWE367_TOC_TOU__access_11.c":152:17)
#loc271 = loc("CWE367_TOC_TOU__access_11.c":152:81)
#loc272 = loc("CWE367_TOC_TOU__access_11.c":152:80)
#loc273 = loc("CWE367_TOC_TOU__access_11.c":153:13)
#loc274 = loc("CWE367_TOC_TOU__access_11.c":154:17)
#loc275 = loc("CWE367_TOC_TOU__access_11.c":154:22)
#loc276 = loc("CWE367_TOC_TOU__access_11.c":156:13)
#loc277 = loc("CWE367_TOC_TOU__access_11.c":159:13)
#loc278 = loc("CWE367_TOC_TOU__access_11.c":156:17)
#loc279 = loc("CWE367_TOC_TOU__access_11.c":156:30)
#loc280 = loc("CWE367_TOC_TOU__access_11.c":156:29)
#loc281 = loc("CWE367_TOC_TOU__access_11.c":157:13)
#loc282 = loc("CWE367_TOC_TOU__access_11.c":158:23)
#loc283 = loc("CWE367_TOC_TOU__access_11.c":158:17)
#loc284 = loc(fused[#loc1, #loc2])
#loc285 = loc(fused[#loc3, #loc4])
#loc286 = loc(fused[#loc5, #loc6])
#loc287 = loc(fused[#loc7, #loc8])
#loc288 = loc(fused[#loc10, #loc11])
#loc289 = loc(fused[#loc12, #loc13])
#loc290 = loc(fused[#loc14, #loc15])
#loc291 = loc(fused[#loc16, #loc17])
#loc292 = loc(fused[#loc18, #loc19])
#loc293 = loc(fused[#loc21, #loc22])
#loc294 = loc(fused[#loc23, #loc24])
#loc295 = loc(fused[#loc25, #loc26])
#loc296 = loc(fused[#loc27, #loc28])
#loc297 = loc(fused[#loc29, #loc26])
#loc298 = loc(fused[#loc30, #loc31])
#loc299 = loc(fused[#loc32, #loc33])
#loc300 = loc(fused[#loc34, #loc35])
#loc301 = loc(fused[#loc37, #loc38])
#loc302 = loc(fused[#loc42, #loc43])
#loc303 = loc(fused[#loc44, #loc38])
#loc304 = loc(fused[#loc48, #loc46])
#loc305 = loc(fused[#loc49, #loc50])
#loc306 = loc(fused[#loc51, #loc53])
#loc307 = loc(fused[#loc54, #loc50])
#loc308 = loc(fused[#loc56, #loc58])
#loc309 = loc(fused[#loc59, #loc55])
#loc310 = loc(fused[#loc60, #loc61])
#loc311 = loc(fused[#loc64, #loc65])
#loc312 = loc(fused[#loc67, #loc61])
#loc313 = loc(fused[#loc73, #loc74])
#loc314 = loc(fused[#loc75, #loc76])
#loc315 = loc(fused[#loc77, #loc78])
#loc316 = loc(fused[#loc80, #loc76])
#loc317 = loc(fused[#loc83, #loc84])
#loc318 = loc(fused[#loc86, #loc87])
#loc319 = loc(fused[#loc88, #loc89])
#loc320 = loc(fused[#loc91, #loc84])
#loc321 = loc(fused[#loc94, #loc95])
#loc322 = loc(fused[#loc96, #loc97])
#loc323 = loc(fused[#loc99, #loc95])
#loc324 = loc(fused[#loc102, #loc103])
#loc325 = loc(fused[#loc104, #loc105])
#loc326 = loc(fused[#loc106, #loc107])
#loc327 = loc(fused[#loc108, #loc109])
#loc328 = loc(fused[#loc110, #loc111])
#loc329 = loc(fused[#loc116, #loc117])
#loc332 = loc(fused[#loc127, #loc128])
#loc333 = loc(fused[#loc131, #loc132])
#loc334 = loc(fused[#loc135, #loc134])
#loc335 = loc(fused[#loc136, #loc137])
#loc336 = loc(fused[#loc140, #loc141])
#loc337 = loc(fused[#loc142, #loc143])
#loc338 = loc(fused[#loc144, #loc145])
#loc339 = loc(fused[#loc146, #loc147, #loc148, #loc143])
#loc340 = loc(fused[#loc150, #loc151])
#loc341 = loc(fused[#loc152, #loc153])
#loc342 = loc(fused[#loc154, #loc155])
#loc343 = loc(fused[#loc157, #loc158])
#loc344 = loc(fused[#loc162, #loc163])
#loc345 = loc(fused[#loc164, #loc158])
#loc346 = loc(fused[#loc169, #loc167])
#loc347 = loc(fused[#loc170, #loc171])
#loc348 = loc(fused[#loc172, #loc174])
#loc349 = loc(fused[#loc175, #loc171])
#loc350 = loc(fused[#loc177, #loc179])
#loc351 = loc(fused[#loc180, #loc176])
#loc352 = loc(fused[#loc184, #loc185])
#loc353 = loc(fused[#loc186, #loc187])
#loc354 = loc(fused[#loc188, #loc189])
#loc355 = loc(fused[#loc191, #loc187])
#loc356 = loc(fused[#loc194, #loc195])
#loc357 = loc(fused[#loc197, #loc198])
#loc358 = loc(fused[#loc199, #loc200])
#loc359 = loc(fused[#loc202, #loc195])
#loc360 = loc(fused[#loc205, #loc206])
#loc361 = loc(fused[#loc207, #loc208])
#loc362 = loc(fused[#loc210, #loc206])
#loc363 = loc(fused[#loc213, #loc214])
#loc364 = loc(fused[#loc215, #loc216])
#loc365 = loc(fused[#loc217, #loc218])
#loc366 = loc(fused[#loc219, #loc216])
#loc367 = loc(fused[#loc220, #loc221])
#loc368 = loc(fused[#loc222, #loc223])
#loc369 = loc(fused[#loc224, #loc225])
#loc370 = loc(fused[#loc227, #loc228])
#loc371 = loc(fused[#loc232, #loc233])
#loc372 = loc(fused[#loc234, #loc228])
#loc373 = loc(fused[#loc239, #loc237])
#loc374 = loc(fused[#loc240, #loc241])
#loc375 = loc(fused[#loc242, #loc244])
#loc376 = loc(fused[#loc245, #loc241])
#loc377 = loc(fused[#loc247, #loc249])
#loc378 = loc(fused[#loc250, #loc246])
#loc379 = loc(fused[#loc254, #loc255])
#loc380 = loc(fused[#loc256, #loc257])
#loc381 = loc(fused[#loc258, #loc259])
#loc382 = loc(fused[#loc261, #loc257])
#loc383 = loc(fused[#loc264, #loc265])
#loc384 = loc(fused[#loc268, #loc269])
#loc385 = loc(fused[#loc270, #loc271])
#loc386 = loc(fused[#loc273, #loc265])
#loc387 = loc(fused[#loc276, #loc277])
#loc388 = loc(fused[#loc278, #loc279])
#loc389 = loc(fused[#loc281, #loc277])
