!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc276)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc277)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc278)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc281)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc18)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc284)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc285)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc286)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc287)
          cir.scope {
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc289)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc33)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc290)
          } loc(#loc288)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc35)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc36)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc36)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc36)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc291)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc40)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc42)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc42)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc44)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc292)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc45)
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
          cir.break loc(#loc47)
        } loc(#loc19)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc49)
          cir.break loc(#loc50)
        } loc(#loc48)
        cir.yield loc(#loc16)
      } loc(#loc16)
    } loc(#loc283)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc53)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc56)
          cir.break loc(#loc57)
        } loc(#loc54)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc60)
          cir.break loc(#loc61)
        } loc(#loc58)
        cir.yield loc(#loc51)
      } loc(#loc51)
    } loc(#loc293)
    cir.return loc(#loc11)
  } loc(#loc280)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc295)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc296)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc297)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc298)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc63)
  } loc(#loc294)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc300)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc76)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc80)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc82)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc83)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc83)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc303)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc304)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc305)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
          cir.scope {
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc308)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc93)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc94)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc95)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
            } loc(#loc309)
          } loc(#loc307)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc97)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc98)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc99)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc98)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc98)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc310)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc102)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc104)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc105)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc104)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc106)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc311)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc107)
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
          cir.break loc(#loc109)
        } loc(#loc81)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc111)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc111)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc112)
          cir.break loc(#loc113)
        } loc(#loc110)
        cir.yield loc(#loc78)
      } loc(#loc78)
    } loc(#loc302)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc116)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc118)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc118)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc119)
          cir.break loc(#loc120)
        } loc(#loc117)
        cir.case(default, []) {
          cir.break loc(#loc122)
        } loc(#loc121)
        cir.yield loc(#loc114)
      } loc(#loc114)
    } loc(#loc312)
    cir.return loc(#loc73)
  } loc(#loc299)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc127)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc131)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc133)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc134)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc134)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc317)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc318)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc319)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc320)
          cir.scope {
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc322)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc144)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc145)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc146)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
            } loc(#loc323)
          } loc(#loc321)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc148)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc149)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc150)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc149)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc149)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc324)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc153)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc155)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc156)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc155)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc157)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc325)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc158)
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc159)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc158)
          cir.break loc(#loc160)
        } loc(#loc132)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc162)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc162)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          cir.break loc(#loc164)
        } loc(#loc161)
        cir.yield loc(#loc129)
      } loc(#loc129)
    } loc(#loc316)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc167)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc169)
        } loc(#loc168)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc171)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc171)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc172)
          cir.break loc(#loc173)
        } loc(#loc170)
        cir.yield loc(#loc165)
      } loc(#loc165)
    } loc(#loc326)
    cir.return loc(#loc124)
  } loc(#loc313)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc328)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc178)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc329)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc182)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc184)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc184)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc185)
          cir.break loc(#loc186)
        } loc(#loc183)
        cir.case(default, []) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc188)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc189)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc189)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc331)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc332)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc188)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc333)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
          cir.scope {
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc197)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc336)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc199)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc200)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc201)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc199)
            } loc(#loc337)
          } loc(#loc335)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc202)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc203)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc204)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc205)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc204)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc204)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc338)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc208)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc208)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc210)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc211)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc210)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc212)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc339)
          cir.break loc(#loc213)
        } loc(#loc187)
        cir.yield loc(#loc180)
      } loc(#loc180)
    } loc(#loc330)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc216)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc219)
          cir.break loc(#loc220)
        } loc(#loc217)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc222)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc222)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc223)
          cir.break loc(#loc224)
        } loc(#loc221)
        cir.yield loc(#loc214)
      } loc(#loc214)
    } loc(#loc340)
    cir.return loc(#loc175)
  } loc(#loc327)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc342)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc229)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc343)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc233)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc235)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc236)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc236)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc345)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc346)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc235)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc347)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc348)
          cir.scope {
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc244)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc244)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc350)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc246)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc247)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc248)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc246)
            } loc(#loc351)
          } loc(#loc349)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc249)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc249)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc250)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc251)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc252)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc251)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc251)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc352)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc255)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc255)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc256)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc257)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc258)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc257)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc259)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc353)
          cir.break loc(#loc260)
        } loc(#loc234)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc262)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc262)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc263)
          cir.break loc(#loc264)
        } loc(#loc261)
        cir.yield loc(#loc231)
      } loc(#loc231)
    } loc(#loc344)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc267)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc270)
          cir.break loc(#loc271)
        } loc(#loc268)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc273)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc273)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc274)
          cir.break loc(#loc275)
        } loc(#loc272)
        cir.yield loc(#loc265)
      } loc(#loc265)
    } loc(#loc354)
    cir.return loc(#loc226)
  } loc(#loc341)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":41:19)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":24:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":56:1)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":26:5)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":26:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":28:12)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":28:5)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":29:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":43:5)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":29:12)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":31:5)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:24)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:31)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:35)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:46)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:47)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:9)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:9)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:37)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:13)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:21)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:27)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:28)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:34)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:33)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:16)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:22)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:27)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:31)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:9)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:32)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:23)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:9)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:14)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:19)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":37:9)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":37:14)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":38:9)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":39:5)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":41:9)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":42:9)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":44:5)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":55:5)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":44:12)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":46:5)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":48:19)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":48:9)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":50:9)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":51:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":53:19)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":53:9)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":54:9)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":202:1)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":208:1)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":204:5)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":204:14)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":205:5)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":205:14)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":206:5)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":206:14)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":207:5)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":207:14)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":63:1)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":96:1)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":65:5)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":65:12)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":67:12)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":67:5)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":68:5)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":82:5)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":68:12)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":70:5)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:24)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:31)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:35)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:46)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:47)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:9)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:9)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:37)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:13)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:21)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:27)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:28)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:34)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:33)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:16)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:22)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:27)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:31)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:9)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:32)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:23)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:9)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:14)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:18)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:19)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":76:9)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":76:14)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":77:9)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":78:5)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":80:19)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":80:9)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":81:9)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":83:5)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":95:5)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":83:12)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":85:5)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":87:19)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":87:9)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":88:9)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":89:5)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":94:9)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":99:1)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":132:1)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":101:5)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":101:12)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":103:12)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":103:5)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":104:5)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":118:5)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":104:12)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":106:5)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:24)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:31)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:35)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:46)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:47)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:9)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:9)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:37)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:13)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:21)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:27)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:28)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:34)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:33)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:16)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:22)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:27)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:31)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:9)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:32)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:23)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:9)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:14)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:18)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:19)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":112:9)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":112:14)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":113:9)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":114:5)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":116:19)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":116:9)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":117:9)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":119:5)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":131:5)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":119:12)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":121:5)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":126:9)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":127:5)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":129:19)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":129:9)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":130:9)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":135:1)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":166:1)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":137:5)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":137:12)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":139:12)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":139:5)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":140:5)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":153:5)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":140:12)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":142:5)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":144:19)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":144:9)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":145:9)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":146:5)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:24)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:31)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:35)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:46)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:47)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:9)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:9)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:37)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:13)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:21)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:27)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:28)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:34)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:33)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:16)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:22)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:27)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:31)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:9)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:32)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:23)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:9)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:14)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:18)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:19)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":152:9)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":154:5)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":165:5)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":154:12)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":156:5)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":158:19)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":158:9)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":160:9)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":161:5)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":163:19)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":163:9)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":164:9)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":169:1)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":200:1)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":171:5)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":171:12)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":173:12)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":173:5)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":174:5)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":187:5)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":174:12)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":176:5)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:24)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:31)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:35)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:46)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:47)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:9)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:9)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:37)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:13)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:21)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:27)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:28)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:34)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:33)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:16)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:22)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:27)
#loc252 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:31)
#loc253 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:9)
#loc254 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:32)
#loc255 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:23)
#loc256 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:9)
#loc257 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:14)
#loc258 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:18)
#loc259 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:19)
#loc260 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":182:9)
#loc261 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":183:5)
#loc262 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":185:19)
#loc263 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":185:9)
#loc264 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":186:9)
#loc265 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":188:5)
#loc266 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":199:5)
#loc267 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":188:12)
#loc268 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":190:5)
#loc269 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":192:19)
#loc270 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":192:9)
#loc271 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":194:9)
#loc272 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":195:5)
#loc273 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":197:19)
#loc274 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":197:9)
#loc275 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":198:9)
#loc276 = loc(fused[#loc1, #loc2])
#loc277 = loc(fused[#loc3, #loc4])
#loc278 = loc(fused[#loc5, #loc6])
#loc279 = loc(fused[#loc7, #loc8])
#loc280 = loc(fused[#loc10, #loc11])
#loc281 = loc(fused[#loc12, #loc13])
#loc282 = loc(fused[#loc15, #loc14])
#loc283 = loc(fused[#loc16, #loc17])
#loc284 = loc(fused[#loc22, #loc23])
#loc285 = loc(fused[#loc21, #loc23])
#loc286 = loc(fused[#loc20, #loc24])
#loc287 = loc(fused[#loc25, #loc24])
#loc288 = loc(fused[#loc26, #loc27])
#loc289 = loc(fused[#loc28, #loc29])
#loc290 = loc(fused[#loc30, #loc27])
#loc291 = loc(fused[#loc38, #loc39])
#loc292 = loc(fused[#loc41, #loc40])
#loc293 = loc(fused[#loc51, #loc52])
#loc294 = loc(fused[#loc62, #loc63])
#loc295 = loc(fused[#loc64, #loc65])
#loc296 = loc(fused[#loc66, #loc67])
#loc297 = loc(fused[#loc68, #loc69])
#loc298 = loc(fused[#loc70, #loc71])
#loc299 = loc(fused[#loc72, #loc73])
#loc300 = loc(fused[#loc74, #loc75])
#loc301 = loc(fused[#loc77, #loc76])
#loc302 = loc(fused[#loc78, #loc79])
#loc303 = loc(fused[#loc84, #loc85])
#loc304 = loc(fused[#loc83, #loc85])
#loc305 = loc(fused[#loc82, #loc86])
#loc306 = loc(fused[#loc87, #loc86])
#loc307 = loc(fused[#loc88, #loc89])
#loc308 = loc(fused[#loc90, #loc91])
#loc309 = loc(fused[#loc92, #loc89])
#loc310 = loc(fused[#loc100, #loc101])
#loc311 = loc(fused[#loc103, #loc102])
#loc312 = loc(fused[#loc114, #loc115])
#loc313 = loc(fused[#loc123, #loc124])
#loc314 = loc(fused[#loc125, #loc126])
#loc315 = loc(fused[#loc128, #loc127])
#loc316 = loc(fused[#loc129, #loc130])
#loc317 = loc(fused[#loc135, #loc136])
#loc318 = loc(fused[#loc134, #loc136])
#loc319 = loc(fused[#loc133, #loc137])
#loc320 = loc(fused[#loc138, #loc137])
#loc321 = loc(fused[#loc139, #loc140])
#loc322 = loc(fused[#loc141, #loc142])
#loc323 = loc(fused[#loc143, #loc140])
#loc324 = loc(fused[#loc151, #loc152])
#loc325 = loc(fused[#loc154, #loc153])
#loc326 = loc(fused[#loc165, #loc166])
#loc327 = loc(fused[#loc174, #loc175])
#loc328 = loc(fused[#loc176, #loc177])
#loc329 = loc(fused[#loc179, #loc178])
#loc330 = loc(fused[#loc180, #loc181])
#loc331 = loc(fused[#loc190, #loc191])
#loc332 = loc(fused[#loc189, #loc191])
#loc333 = loc(fused[#loc188, #loc192])
#loc334 = loc(fused[#loc193, #loc192])
#loc335 = loc(fused[#loc194, #loc195])
#loc336 = loc(fused[#loc196, #loc197])
#loc337 = loc(fused[#loc198, #loc195])
#loc338 = loc(fused[#loc206, #loc207])
#loc339 = loc(fused[#loc209, #loc208])
#loc340 = loc(fused[#loc214, #loc215])
#loc341 = loc(fused[#loc225, #loc226])
#loc342 = loc(fused[#loc227, #loc228])
#loc343 = loc(fused[#loc230, #loc229])
#loc344 = loc(fused[#loc231, #loc232])
#loc345 = loc(fused[#loc237, #loc238])
#loc346 = loc(fused[#loc236, #loc238])
#loc347 = loc(fused[#loc235, #loc239])
#loc348 = loc(fused[#loc240, #loc239])
#loc349 = loc(fused[#loc241, #loc242])
#loc350 = loc(fused[#loc243, #loc244])
#loc351 = loc(fused[#loc245, #loc242])
#loc352 = loc(fused[#loc253, #loc254])
#loc353 = loc(fused[#loc256, #loc255])
#loc354 = loc(fused[#loc265, #loc266])
