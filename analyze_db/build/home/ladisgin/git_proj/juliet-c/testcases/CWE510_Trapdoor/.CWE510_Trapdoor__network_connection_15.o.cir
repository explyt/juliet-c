!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_connection_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc83)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"123.123.123.123\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc85)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
  cir.func private @close(!s32i) -> !s32i loc(#loc87)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE510_Trapdoor__network_connection_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc91)
    cir.br ^bb1 loc(#loc92)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc23)
    cir.br ^bb2 loc(#loc21)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb24 [
      6: ^bb4
    ] loc(#loc21)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc93)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc20)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.br ^bb6 loc(#loc94)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc94)
  ^bb7:  // pred: ^bb16
    %5 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %6 ^bb8, ^bb17 loc(#loc29)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %7 = cir.const #cir.int<2> : !s32i loc(#loc30)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %9 = cir.const #cir.int<6> : !s32i loc(#loc32)
    %10 = cir.call @socket(%7, %8, %9) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc33)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.br ^bb9 loc(#loc96)
  ^bb9:  // pred: ^bb8
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc39)
    %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc97)
    cir.brcond %14 ^bb10, ^bb11 loc(#loc98)
  ^bb10:  // pred: ^bb9
    cir.br ^bb17 loc(#loc41)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc37)
  ^bb12:  // pred: ^bb11
    %15 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc99)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %17 = cir.const #cir.int<16> : !u64i loc(#loc100)
    cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc101)
    %18 = cir.const #cir.int<2> : !s32i loc(#loc49)
    %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc49)
    %20 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc50)
    cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc102)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc5)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc5)
    %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc52)
    %24 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc53)
    %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc54)
    cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc103)
    %26 = cir.const #cir.int<80> : !s32i loc(#loc57)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc57)
    %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc58)
    %29 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc104)
    cir.br ^bb13 loc(#loc105)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %31 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc106)
    %32 = cir.const #cir.int<16> : !u64i loc(#loc107)
    %33 = cir.cast(integral, %32 : !u64i), !u32i loc(#loc107)
    %34 = cir.call @connect(%30, %31, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc69)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc70)
    %37 = cir.cmp(eq, %34, %36) : !s32i, !cir.bool loc(#loc108)
    cir.brcond %37 ^bb14, ^bb15 loc(#loc109)
  ^bb14:  // pred: ^bb13
    cir.br ^bb17 loc(#loc72)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc63)
  ^bb16:  // pred: ^bb15
    cir.br ^bb7 loc(#loc28)
  ^bb17:  // 3 preds: ^bb7, ^bb10, ^bb14
    cir.br ^bb18 loc(#loc28)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc110)
  ^bb19:  // pred: ^bb18
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc76)
    %41 = cir.cmp(ne, %38, %40) : !s32i, !cir.bool loc(#loc111)
    cir.brcond %41 ^bb20, ^bb21 loc(#loc112)
  ^bb20:  // pred: ^bb19
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %43 = cir.call @close(%42) : (!s32i) -> !s32i loc(#loc79)
    cir.br ^bb21 loc(#loc74)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc74)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc26)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc80)
  ^bb24:  // pred: ^bb2
    %44 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc14)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb25 loc(#loc82)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc22)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc16)
  } loc(#loc89)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_connection_15.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE510_Trapdoor__network_connection_15.c":67:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/unistd.h":358:1)
#loc11 = loc("/usr/include/unistd.h":358:27)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE510_Trapdoor__network_connection_15.c":91:19)
#loc15 = loc("CWE510_Trapdoor__network_connection_15.c":39:1)
#loc16 = loc("CWE510_Trapdoor__network_connection_15.c":94:1)
#loc17 = loc("CWE510_Trapdoor__network_connection_15.c":49:9)
#loc18 = loc("CWE510_Trapdoor__network_connection_15.c":49:28)
#loc19 = loc("CWE510_Trapdoor__network_connection_15.c":50:9)
#loc20 = loc("CWE510_Trapdoor__network_connection_15.c":50:32)
#loc21 = loc("CWE510_Trapdoor__network_connection_15.c":41:5)
#loc22 = loc("CWE510_Trapdoor__network_connection_15.c":93:5)
#loc23 = loc("CWE510_Trapdoor__network_connection_15.c":41:12)
#loc24 = loc("CWE510_Trapdoor__network_connection_15.c":43:5)
#loc25 = loc("CWE510_Trapdoor__network_connection_15.c":44:5)
#loc26 = loc("CWE510_Trapdoor__network_connection_15.c":87:5)
#loc27 = loc("CWE510_Trapdoor__network_connection_15.c":51:9)
#loc28 = loc("CWE510_Trapdoor__network_connection_15.c":76:17)
#loc29 = loc("CWE510_Trapdoor__network_connection_15.c":76:16)
#loc30 = loc("CWE510_Trapdoor__network_connection_15.c":60:36)
#loc31 = loc("CWE510_Trapdoor__network_connection_15.c":60:45)
#loc32 = loc("CWE510_Trapdoor__network_connection_15.c":60:58)
#loc33 = loc("CWE510_Trapdoor__network_connection_15.c":60:29)
#loc34 = loc("CWE510_Trapdoor__network_connection_15.c":60:13)
#loc35 = loc("CWE510_Trapdoor__network_connection_15.c":60:69)
#loc36 = loc("CWE510_Trapdoor__network_connection_15.c":61:13)
#loc37 = loc("CWE510_Trapdoor__network_connection_15.c":64:13)
#loc38 = loc("CWE510_Trapdoor__network_connection_15.c":61:17)
#loc39 = loc("CWE510_Trapdoor__network_connection_15.c":61:34)
#loc40 = loc("CWE510_Trapdoor__network_connection_15.c":62:13)
#loc41 = loc("CWE510_Trapdoor__network_connection_15.c":63:17)
#loc42 = loc("CWE510_Trapdoor__network_connection_15.c":65:20)
#loc43 = loc("CWE510_Trapdoor__network_connection_15.c":65:21)
#loc44 = loc("CWE510_Trapdoor__network_connection_15.c":65:30)
#loc45 = loc("CWE510_Trapdoor__network_connection_15.c":65:33)
#loc46 = loc("CWE510_Trapdoor__network_connection_15.c":65:47)
#loc47 = loc("CWE510_Trapdoor__network_connection_15.c":65:13)
#loc48 = loc("CWE510_Trapdoor__network_connection_15.c":65:48)
#loc49 = loc("CWE510_Trapdoor__network_connection_15.c":66:34)
#loc50 = loc("/usr/include/netinet/in.h":249:5)
#loc51 = loc("CWE510_Trapdoor__network_connection_15.c":66:13)
#loc52 = loc("CWE510_Trapdoor__network_connection_15.c":67:39)
#loc53 = loc("/usr/include/netinet/in.h":251:20)
#loc54 = loc("/usr/include/netinet/in.h":33:15)
#loc55 = loc("CWE510_Trapdoor__network_connection_15.c":67:13)
#loc56 = loc("CWE510_Trapdoor__network_connection_15.c":67:59)
#loc57 = loc("CWE510_Trapdoor__network_connection_15.c":68:38)
#loc58 = loc("CWE510_Trapdoor__network_connection_15.c":68:32)
#loc59 = loc("/usr/include/netinet/in.h":250:15)
#loc60 = loc("CWE510_Trapdoor__network_connection_15.c":68:13)
#loc61 = loc("CWE510_Trapdoor__network_connection_15.c":68:40)
#loc62 = loc("CWE510_Trapdoor__network_connection_15.c":70:13)
#loc63 = loc("CWE510_Trapdoor__network_connection_15.c":73:13)
#loc64 = loc("CWE510_Trapdoor__network_connection_15.c":70:25)
#loc65 = loc("CWE510_Trapdoor__network_connection_15.c":70:58)
#loc66 = loc("CWE510_Trapdoor__network_connection_15.c":70:59)
#loc67 = loc("CWE510_Trapdoor__network_connection_15.c":70:68)
#loc68 = loc("CWE510_Trapdoor__network_connection_15.c":70:82)
#loc69 = loc("CWE510_Trapdoor__network_connection_15.c":70:17)
#loc70 = loc("CWE510_Trapdoor__network_connection_15.c":70:88)
#loc71 = loc("CWE510_Trapdoor__network_connection_15.c":71:13)
#loc72 = loc("CWE510_Trapdoor__network_connection_15.c":72:17)
#loc73 = loc("CWE510_Trapdoor__network_connection_15.c":77:9)
#loc74 = loc("CWE510_Trapdoor__network_connection_15.c":80:9)
#loc75 = loc("CWE510_Trapdoor__network_connection_15.c":77:13)
#loc76 = loc("CWE510_Trapdoor__network_connection_15.c":77:30)
#loc77 = loc("CWE510_Trapdoor__network_connection_15.c":78:9)
#loc78 = loc("CWE510_Trapdoor__network_connection_15.c":79:26)
#loc79 = loc("CWE510_Trapdoor__network_connection_15.c":79:13)
#loc80 = loc("CWE510_Trapdoor__network_connection_15.c":88:5)
#loc81 = loc("CWE510_Trapdoor__network_connection_15.c":91:9)
#loc82 = loc("CWE510_Trapdoor__network_connection_15.c":92:9)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc6, #loc7])
#loc86 = loc(fused[#loc8, #loc9])
#loc87 = loc(fused[#loc10, #loc11])
#loc88 = loc(fused[#loc12, #loc13])
#loc89 = loc(fused[#loc15, #loc16])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc19, #loc20])
#loc92 = loc(fused[#loc21, #loc22])
#loc93 = loc(fused[#loc25, #loc26])
#loc94 = loc(fused[#loc27, #loc28])
#loc95 = loc(fused[#loc34, #loc35])
#loc96 = loc(fused[#loc36, #loc37])
#loc97 = loc(fused[#loc38, #loc39])
#loc98 = loc(fused[#loc40, #loc37])
#loc99 = loc(fused[#loc42, #loc43])
#loc100 = loc(fused[#loc45, #loc46])
#loc101 = loc(fused[#loc47, #loc48])
#loc102 = loc(fused[#loc51, #loc49])
#loc103 = loc(fused[#loc55, #loc56])
#loc104 = loc(fused[#loc60, #loc61])
#loc105 = loc(fused[#loc62, #loc63])
#loc106 = loc(fused[#loc65, #loc66])
#loc107 = loc(fused[#loc67, #loc68])
#loc108 = loc(fused[#loc69, #loc70])
#loc109 = loc(fused[#loc71, #loc63])
#loc110 = loc(fused[#loc73, #loc74])
#loc111 = loc(fused[#loc75, #loc76])
#loc112 = loc(fused[#loc77, #loc74])
