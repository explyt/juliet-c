!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc180)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func private @printIntLine(!s32i) loc(#loc183)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_modulo_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc20)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc18)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc22)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc181)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc22)
    cir.br ^bb6 loc(#loc24)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc188)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<7> : !s32i loc(#loc29)
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc27)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc30)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %13 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %15 = cir.binop(rem, %13, %14) : !s32i loc(#loc189)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc33)
    cir.br ^bb13 loc(#loc34)
  ^bb12:  // pred: ^bb9
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb13 loc(#loc37)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc28)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc12)
  } loc(#loc184)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_modulo_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc39)
  } loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc54)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc58)
    cir.br ^bb2 loc(#loc56)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc56)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc60)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc181)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc62)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc62)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc60)
    cir.br ^bb6 loc(#loc63)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb6 loc(#loc66)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc57)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<8> : !s32i loc(#loc69)
    cir.br ^bb9 loc(#loc67)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc67)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc70)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb18 loc(#loc73)
  ^bb12:  // pred: ^bb9
    cir.br ^bb13 loc(#loc200)
  ^bb13:  // pred: ^bb12
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %17 = cir.cmp(ne, %15, %16) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %17 ^bb14, ^bb15 loc(#loc202)
  ^bb14:  // pred: ^bb13
    %18 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %20 = cir.binop(rem, %18, %19) : !s32i loc(#loc203)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc83)
    cir.br ^bb16 loc(#loc79)
  ^bb15:  // pred: ^bb13
    %21 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc48)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb16 loc(#loc75)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc75)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc85)
  ^bb18:  // 2 preds: ^bb11, ^bb17
    cir.br ^bb19 loc(#loc68)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc50)
  } loc(#loc195)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc91)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc95)
    cir.br ^bb2 loc(#loc93)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc93)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc97)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc181)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc98)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc99)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc99)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc97)
    cir.br ^bb6 loc(#loc100)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc101)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc208)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<7> : !s32i loc(#loc106)
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb17 [
      7: ^bb11
    ] loc(#loc104)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc107)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc209)
  ^bb12:  // pred: ^bb11
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %15 = cir.cmp(ne, %13, %14) : !s32i, !cir.bool loc(#loc210)
    cir.brcond %15 ^bb13, ^bb14 loc(#loc211)
  ^bb13:  // pred: ^bb12
    %16 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %18 = cir.binop(rem, %16, %17) : !s32i loc(#loc212)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc117)
    cir.br ^bb15 loc(#loc113)
  ^bb14:  // pred: ^bb12
    %19 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc118)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb15 loc(#loc109)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc109)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18 loc(#loc120)
  ^bb17:  // pred: ^bb9
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc121)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb18 loc(#loc123)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc105)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc87)
  } loc(#loc204)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc129)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc133)
    cir.br ^bb2 loc(#loc131)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc131)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc135)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.br ^bb6 loc(#loc137)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<7> : !s32i loc(#loc138)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb6 loc(#loc140)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc132)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc218)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc143)
    cir.br ^bb9 loc(#loc141)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc141)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc144)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %8 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc219)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc147)
    cir.br ^bb13 loc(#loc148)
  ^bb12:  // pred: ^bb9
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc149)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    cir.br ^bb13 loc(#loc151)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc142)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc125)
  } loc(#loc213)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc221)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc157)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc161)
    cir.br ^bb2 loc(#loc159)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc159)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc162)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<7> : !s32i loc(#loc163)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb6 loc(#loc165)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc166)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    cir.br ^bb6 loc(#loc168)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc160)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc225)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc171)
    cir.br ^bb9 loc(#loc169)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc169)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc172)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %8 = cir.const #cir.int<100> : !s32i loc(#loc173)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc226)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc175)
    cir.br ^bb13 loc(#loc176)
  ^bb12:  // pred: ^bb9
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc177)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    cir.br ^bb13 loc(#loc179)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc170)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc153)
  } loc(#loc220)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":31:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":35:19)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":22:1)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":49:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":24:5)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":24:9)
#loc15 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":26:13)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":26:12)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":26:5)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":27:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":37:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":27:12)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":29:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":31:9)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":31:16)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":32:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":35:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":36:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":38:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":48:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":38:12)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":40:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":42:22)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":42:28)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":42:9)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":43:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":46:19)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":46:9)
#loc37 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":47:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":189:1)
#loc39 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":195:1)
#loc40 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":191:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":191:14)
#loc42 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":192:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":192:14)
#loc44 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":193:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":193:14)
#loc46 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":194:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":194:14)
#loc48 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":86:23)
#loc49 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":56:1)
#loc50 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":90:1)
#loc51 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":58:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":58:9)
#loc53 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":60:13)
#loc54 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":60:12)
#loc55 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":60:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":61:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":71:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":61:12)
#loc59 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":63:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":65:9)
#loc61 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":65:16)
#loc62 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":65:23)
#loc63 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":66:9)
#loc64 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":69:19)
#loc65 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":69:9)
#loc66 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":70:9)
#loc67 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":72:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":89:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":72:12)
#loc70 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":74:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":76:19)
#loc72 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":76:9)
#loc73 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":77:9)
#loc74 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":80:9)
#loc75 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":87:9)
#loc76 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":80:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":80:21)
#loc78 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":81:9)
#loc79 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":83:9)
#loc80 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":85:9)
#loc81 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":82:26)
#loc82 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":82:32)
#loc83 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":82:13)
#loc84 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":86:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":88:9)
#loc86 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":93:1)
#loc87 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":127:1)
#loc88 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":95:5)
#loc89 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":95:9)
#loc90 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":97:13)
#loc91 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":97:12)
#loc92 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":97:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":98:5)
#loc94 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":108:5)
#loc95 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":98:12)
#loc96 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":100:5)
#loc97 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":102:9)
#loc98 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":102:16)
#loc99 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":102:23)
#loc100 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":103:9)
#loc101 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":106:19)
#loc102 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":106:9)
#loc103 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":107:9)
#loc104 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":109:5)
#loc105 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":126:5)
#loc106 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":109:12)
#loc107 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":111:5)
#loc108 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":113:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":120:9)
#loc110 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":113:13)
#loc111 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":113:21)
#loc112 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":114:9)
#loc113 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":116:9)
#loc114 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":118:9)
#loc115 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":115:26)
#loc116 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":115:32)
#loc117 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":115:13)
#loc118 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":119:23)
#loc119 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":119:13)
#loc120 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":121:9)
#loc121 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":124:19)
#loc122 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":124:9)
#loc123 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":125:9)
#loc124 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":130:1)
#loc125 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":157:1)
#loc126 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":132:5)
#loc127 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":132:9)
#loc128 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":134:13)
#loc129 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":134:12)
#loc130 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":134:5)
#loc131 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":135:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":145:5)
#loc133 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":135:12)
#loc134 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":137:5)
#loc135 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":139:19)
#loc136 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":139:9)
#loc137 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":140:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":143:16)
#loc139 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":143:9)
#loc140 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":144:9)
#loc141 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":146:5)
#loc142 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":156:5)
#loc143 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":146:12)
#loc144 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":148:5)
#loc145 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":150:22)
#loc146 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":150:28)
#loc147 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":150:9)
#loc148 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":151:9)
#loc149 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":154:19)
#loc150 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":154:9)
#loc151 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":155:9)
#loc152 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":160:1)
#loc153 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":187:1)
#loc154 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":162:5)
#loc155 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":162:9)
#loc156 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":164:13)
#loc157 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":164:12)
#loc158 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":164:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":165:5)
#loc160 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":175:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":165:12)
#loc162 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":167:5)
#loc163 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":169:16)
#loc164 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":169:9)
#loc165 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":170:9)
#loc166 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":173:19)
#loc167 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":173:9)
#loc168 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":174:9)
#loc169 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":176:5)
#loc170 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":186:5)
#loc171 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":176:12)
#loc172 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":178:5)
#loc173 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":180:22)
#loc174 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":180:28)
#loc175 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":180:9)
#loc176 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":181:9)
#loc177 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":184:19)
#loc178 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":184:9)
#loc179 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_15.c":185:9)
#loc180 = loc(fused[#loc1, #loc2])
#loc181 = loc(fused[#loc3, #loc4])
#loc182 = loc(fused[#loc6, #loc7])
#loc183 = loc(fused[#loc9, #loc10])
#loc184 = loc(fused[#loc11, #loc12])
#loc185 = loc(fused[#loc13, #loc14])
#loc186 = loc(fused[#loc17, #loc15])
#loc187 = loc(fused[#loc18, #loc19])
#loc188 = loc(fused[#loc27, #loc28])
#loc189 = loc(fused[#loc31, #loc32])
#loc190 = loc(fused[#loc38, #loc39])
#loc191 = loc(fused[#loc40, #loc41])
#loc192 = loc(fused[#loc42, #loc43])
#loc193 = loc(fused[#loc44, #loc45])
#loc194 = loc(fused[#loc46, #loc47])
#loc195 = loc(fused[#loc49, #loc50])
#loc196 = loc(fused[#loc51, #loc52])
#loc197 = loc(fused[#loc55, #loc53])
#loc198 = loc(fused[#loc56, #loc57])
#loc199 = loc(fused[#loc67, #loc68])
#loc200 = loc(fused[#loc74, #loc75])
#loc201 = loc(fused[#loc76, #loc77])
#loc202 = loc(fused[#loc78, #loc79, #loc80, #loc75])
#loc203 = loc(fused[#loc81, #loc82])
#loc204 = loc(fused[#loc86, #loc87])
#loc205 = loc(fused[#loc88, #loc89])
#loc206 = loc(fused[#loc92, #loc90])
#loc207 = loc(fused[#loc93, #loc94])
#loc208 = loc(fused[#loc104, #loc105])
#loc209 = loc(fused[#loc108, #loc109])
#loc210 = loc(fused[#loc110, #loc111])
#loc211 = loc(fused[#loc112, #loc113, #loc114, #loc109])
#loc212 = loc(fused[#loc115, #loc116])
#loc213 = loc(fused[#loc124, #loc125])
#loc214 = loc(fused[#loc126, #loc127])
#loc215 = loc(fused[#loc130, #loc128])
#loc216 = loc(fused[#loc131, #loc132])
#loc217 = loc(fused[#loc139, #loc138])
#loc218 = loc(fused[#loc141, #loc142])
#loc219 = loc(fused[#loc145, #loc146])
#loc220 = loc(fused[#loc152, #loc153])
#loc221 = loc(fused[#loc154, #loc155])
#loc222 = loc(fused[#loc158, #loc156])
#loc223 = loc(fused[#loc159, #loc160])
#loc224 = loc(fused[#loc164, #loc163])
#loc225 = loc(fused[#loc169, #loc170])
#loc226 = loc(fused[#loc173, #loc174])
