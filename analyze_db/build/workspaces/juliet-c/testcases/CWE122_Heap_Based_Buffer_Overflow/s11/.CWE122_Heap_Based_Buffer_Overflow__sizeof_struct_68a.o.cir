!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc73)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc74)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc75)
  cir.func no_proto private @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_badSink(...) loc(#loc76)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc79)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc15)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc80)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc82)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc84)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc85)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc25)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc27)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %20 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc75)
    cir.store %19, %20 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc88)
    %21 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_badSink : !cir.ptr<!cir.func<(...)>> loc(#loc89)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc89)
    cir.call %22() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    cir.return loc(#loc10)
  } loc(#loc77)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc90)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc92)
  cir.func no_proto private @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_goodG2BSink(...) loc(#loc93)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc95)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc96)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc52)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc97)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc52)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc101)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc62)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc64)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc62)
    cir.br ^bb3 loc(#loc58)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    %20 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc92)
    cir.store %19, %20 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc105)
    %21 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_goodG2BSink : !cir.ptr<!cir.func<(...)>> loc(#loc106)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc106)
    cir.call %22() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc71)
    cir.return loc(#loc47)
  } loc(#loc94)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":19:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":19:17)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":25:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":25:67)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":40:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":29:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":29:21)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":31:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":31:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:29)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:36)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:47)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:48)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:17)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:23)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:24)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:29)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":36:20)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":36:5)
#loc30 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":37:20)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":37:5)
#loc33 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":38:67)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":38:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":39:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":39:66)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":64:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":67:1)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":66:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":66:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":20:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":20:17)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":47:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":47:71)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":50:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":62:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":52:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":52:21)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":54:12)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":54:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:29)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:36)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:48)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:49)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:33)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:17)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:23)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:24)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:30)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:29)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":58:20)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":58:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":59:20)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":59:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":60:71)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":60:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":61:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":61:70)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc3, #loc4])
#loc75 = loc(fused[#loc5, #loc6])
#loc76 = loc(fused[#loc7, #loc8])
#loc77 = loc(fused[#loc9, #loc10])
#loc78 = loc(fused[#loc11, #loc12])
#loc79 = loc(fused[#loc14, #loc13])
#loc80 = loc(fused[#loc16, #loc17])
#loc81 = loc(fused[#loc15, #loc18])
#loc82 = loc(fused[#loc19, #loc18])
#loc83 = loc(fused[#loc20, #loc21])
#loc84 = loc(fused[#loc22, #loc23])
#loc85 = loc(fused[#loc24, #loc21])
#loc86 = loc(fused[#loc29, #loc28])
#loc87 = loc(fused[#loc32, #loc31])
#loc88 = loc(fused[#loc35, #loc34])
#loc89 = loc(fused[#loc36, #loc37])
#loc90 = loc(fused[#loc38, #loc39])
#loc91 = loc(fused[#loc40, #loc41])
#loc92 = loc(fused[#loc42, #loc43])
#loc93 = loc(fused[#loc44, #loc45])
#loc94 = loc(fused[#loc46, #loc47])
#loc95 = loc(fused[#loc48, #loc49])
#loc96 = loc(fused[#loc51, #loc50])
#loc97 = loc(fused[#loc53, #loc54])
#loc98 = loc(fused[#loc52, #loc55])
#loc99 = loc(fused[#loc56, #loc55])
#loc100 = loc(fused[#loc57, #loc58])
#loc101 = loc(fused[#loc59, #loc60])
#loc102 = loc(fused[#loc61, #loc58])
#loc103 = loc(fused[#loc66, #loc65])
#loc104 = loc(fused[#loc68, #loc67])
#loc105 = loc(fused[#loc70, #loc69])
#loc106 = loc(fused[#loc71, #loc72])
