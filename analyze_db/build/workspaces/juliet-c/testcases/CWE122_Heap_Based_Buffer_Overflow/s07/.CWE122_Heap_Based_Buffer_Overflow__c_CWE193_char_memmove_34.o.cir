!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType = !cir.record<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc111)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc112)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc113)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc114)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc115)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc117)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc21)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc23)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc24)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc24)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc122)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc123)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc127)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc36)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
      } loc(#loc128)
    } loc(#loc126)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc112)
        %16 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc112)
        cir.copy %16 to %15 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc112)
        %17 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
        %19 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc48)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc49)
        %22 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc50)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc49)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc51)
        %26 = cir.binop(add, %23, %25) : !u64i loc(#loc133)
        %27 = cir.const #cir.int<1> : !u64i loc(#loc134)
        %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc135)
        cir.libc.memmove %28 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc136)
        %29 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc58)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc59)
        %31 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
      } loc(#loc132)
    } loc(#loc130)
    cir.return loc(#loc16)
  } loc(#loc118)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc137)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc71)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc73)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc74)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc74)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc74)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc143)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc144)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc73)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc84)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc148)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc86)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc88)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc86)
      } loc(#loc149)
    } loc(#loc147)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %13 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
    cir.store %12, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
      %15 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
      %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      cir.store %16, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
      cir.scope {
        %17 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc111)
        %18 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc111)
        cir.copy %18 to %17 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc111)
        %19 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
        %21 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc98)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
        %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc99)
        %24 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc100)
        %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc99)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc101)
        %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc101)
        %28 = cir.binop(add, %25, %27) : !u64i loc(#loc154)
        %29 = cir.const #cir.int<1> : !u64i loc(#loc155)
        %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc156)
        cir.libc.memmove %30 bytes from %22 to %20 : !cir.ptr<!void>, !u64i loc(#loc157)
        %31 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
        cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc108)
        %32 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc109)
        %33 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
        cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
      } loc(#loc153)
    } loc(#loc151)
    cir.return loc(#loc66)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":73:13)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":73:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":46:13)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":46:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":34:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":54:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":36:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":36:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":37:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":37:75)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":38:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":38:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":40:20)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":40:27)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":40:30)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":40:41)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":40:42)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":40:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":41:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":41:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":41:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":41:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":41:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":41:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":41:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":41:29)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":42:26)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":28:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":42:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":43:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":53:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":44:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":44:31)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":29:12)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":45:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":52:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:21)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:27)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:36)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:43)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:53)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:58)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:69)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:35)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":49:70)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":50:23)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":50:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":51:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":51:18)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":83:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":86:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":85:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":85:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":61:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":81:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":63:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":63:12)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":64:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":64:75)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":65:12)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":65:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":67:20)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":67:28)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":67:31)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":67:34)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":67:45)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":67:27)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":67:46)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":67:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":68:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":68:33)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":68:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":68:17)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":68:23)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":68:24)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":68:30)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":68:29)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":69:26)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":69:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":70:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":80:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":71:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":71:31)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":72:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":79:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:21)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:27)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:36)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:43)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:53)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:58)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:69)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:35)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":76:70)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":77:23)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":77:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":78:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_34.c":78:18)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc17, #loc18])
#loc120 = loc(fused[#loc19, #loc20])
#loc121 = loc(fused[#loc22, #loc21])
#loc122 = loc(fused[#loc25, #loc26])
#loc123 = loc(fused[#loc24, #loc26])
#loc124 = loc(fused[#loc23, #loc27])
#loc125 = loc(fused[#loc28, #loc27])
#loc126 = loc(fused[#loc29, #loc30])
#loc127 = loc(fused[#loc31, #loc32])
#loc128 = loc(fused[#loc33, #loc30])
#loc129 = loc(fused[#loc39, #loc37])
#loc130 = loc(fused[#loc40, #loc41])
#loc131 = loc(fused[#loc42, #loc43])
#loc132 = loc(fused[#loc45, #loc46])
#loc133 = loc(fused[#loc49, #loc51])
#loc134 = loc(fused[#loc52, #loc53])
#loc135 = loc(fused[#loc54, #loc53])
#loc136 = loc(fused[#loc55, #loc56])
#loc137 = loc(fused[#loc61, #loc62])
#loc138 = loc(fused[#loc63, #loc64])
#loc139 = loc(fused[#loc65, #loc66])
#loc140 = loc(fused[#loc67, #loc68])
#loc141 = loc(fused[#loc69, #loc70])
#loc142 = loc(fused[#loc72, #loc71])
#loc143 = loc(fused[#loc76, #loc77])
#loc144 = loc(fused[#loc78, #loc77])
#loc145 = loc(fused[#loc73, #loc79])
#loc146 = loc(fused[#loc80, #loc79])
#loc147 = loc(fused[#loc81, #loc82])
#loc148 = loc(fused[#loc83, #loc84])
#loc149 = loc(fused[#loc85, #loc82])
#loc150 = loc(fused[#loc90, #loc89])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc95, #loc96])
#loc154 = loc(fused[#loc99, #loc101])
#loc155 = loc(fused[#loc102, #loc103])
#loc156 = loc(fused[#loc104, #loc103])
#loc157 = loc(fused[#loc105, #loc106])
