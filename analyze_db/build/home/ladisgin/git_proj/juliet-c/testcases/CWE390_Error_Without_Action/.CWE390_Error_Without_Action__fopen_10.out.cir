!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc47 = loc("CWE390_Error_Without_Action__fopen_10.c":99:10)
#loc48 = loc("CWE390_Error_Without_Action__fopen_10.c":99:14)
#loc49 = loc("CWE390_Error_Without_Action__fopen_10.c":99:20)
#loc50 = loc("CWE390_Error_Without_Action__fopen_10.c":99:32)
#loc144 = loc(fused[#loc47, #loc48])
#loc145 = loc(fused[#loc49, #loc50])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE390_Error_Without_Action/CWE390_Error_Without_Action__fopen_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc125)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc127)
  cir.func no_proto @CWE390_Error_Without_Action__fopen_10_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc125)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc13)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["fileDesc", init] {alignment = 8 : i64} loc(#loc132)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc18)
          cir.store %4, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc132)
          %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc19)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc5)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc5)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
          %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc19)
          cir.store %10, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
          cir.scope {
            %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
            %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc25)
            %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc135)
            cir.if %16 {
            } loc(#loc136)
          } loc(#loc134)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
          %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc28)
        } loc(#loc131)
      } loc(#loc130)
    } loc(#loc129)
    cir.return loc(#loc10)
  } loc(#loc128)
  cir.func no_proto @CWE390_Error_Without_Action__fopen_10_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc137)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc140)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc54)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE390_Error_Without_Action__fopen_10_good : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call @CWE390_Error_Without_Action__fopen_10_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE390_Error_Without_Action__fopen_10_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call @CWE390_Error_Without_Action__fopen_10_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.return %17 : !s32i loc(#loc148)
  } loc(#loc143)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"fopen() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc150)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc149)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc75)
      cir.if %2 {
        %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc79)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["fileDesc", init] {alignment = 8 : i64} loc(#loc155)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc83)
          cir.store %4, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc155)
          %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc84)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc85)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc85)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
          %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc84)
          cir.store %10, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc156)
          cir.scope {
            %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc91)
            %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc92)
            %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc158)
            cir.if %16 {
              %17 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc94)
              %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc96)
              cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc95)
            } loc(#loc159)
          } loc(#loc157)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
          %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc98)
        } loc(#loc154)
      } loc(#loc153)
    } loc(#loc152)
    cir.return loc(#loc72)
  } loc(#loc151)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc125)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc103)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["fileDesc", init] {alignment = 8 : i64} loc(#loc164)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc108)
          cir.store %4, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc164)
          %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc109)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc110)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc110)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc111)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc111)
          %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc109)
          cir.store %10, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
          cir.scope {
            %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
            %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc117)
            %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc167)
            cir.if %16 {
              %17 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc119)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc119)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc120)
              %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc122)
              cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc121)
            } loc(#loc168)
          } loc(#loc166)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc123)
          %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc124)
        } loc(#loc163)
      } loc(#loc162)
    } loc(#loc161)
    cir.return loc(#loc100)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE390_Error_Without_Action/CWE390_Error_Without_Action__fopen_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE390_Error_Without_Action__fopen_10.c":26:30)
#loc6 = loc("CWE390_Error_Without_Action__fopen_10.c":26:42)
#loc7 = loc("/usr/include/stdio.h":184:1)
#loc8 = loc("/usr/include/stdio.h":184:36)
#loc9 = loc("CWE390_Error_Without_Action__fopen_10.c":20:1)
#loc10 = loc("CWE390_Error_Without_Action__fopen_10.c":35:1)
#loc11 = loc("CWE390_Error_Without_Action__fopen_10.c":22:5)
#loc12 = loc("CWE390_Error_Without_Action__fopen_10.c":34:5)
#loc13 = loc("CWE390_Error_Without_Action__fopen_10.c":22:8)
#loc14 = loc("CWE390_Error_Without_Action__fopen_10.c":23:5)
#loc15 = loc("CWE390_Error_Without_Action__fopen_10.c":24:9)
#loc16 = loc("CWE390_Error_Without_Action__fopen_10.c":33:9)
#loc17 = loc("CWE390_Error_Without_Action__fopen_10.c":25:13)
#loc18 = loc("CWE390_Error_Without_Action__fopen_10.c":25:31)
#loc19 = loc("CWE390_Error_Without_Action__fopen_10.c":26:24)
#loc20 = loc("CWE390_Error_Without_Action__fopen_10.c":26:13)
#loc21 = loc("CWE390_Error_Without_Action__fopen_10.c":26:46)
#loc22 = loc("CWE390_Error_Without_Action__fopen_10.c":28:13)
#loc23 = loc("CWE390_Error_Without_Action__fopen_10.c":31:13)
#loc24 = loc("CWE390_Error_Without_Action__fopen_10.c":28:17)
#loc25 = loc("CWE390_Error_Without_Action__fopen_10.c":28:29)
#loc26 = loc("CWE390_Error_Without_Action__fopen_10.c":29:13)
#loc27 = loc("CWE390_Error_Without_Action__fopen_10.c":32:20)
#loc28 = loc("CWE390_Error_Without_Action__fopen_10.c":32:13)
#loc29 = loc("CWE390_Error_Without_Action__fopen_10.c":84:1)
#loc30 = loc("CWE390_Error_Without_Action__fopen_10.c":88:1)
#loc31 = loc("CWE390_Error_Without_Action__fopen_10.c":86:5)
#loc32 = loc("CWE390_Error_Without_Action__fopen_10.c":86:11)
#loc33 = loc("CWE390_Error_Without_Action__fopen_10.c":87:5)
#loc34 = loc("CWE390_Error_Without_Action__fopen_10.c":87:11)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE390_Error_Without_Action__fopen_10.c":104:15)
#loc42 = loc("CWE390_Error_Without_Action__fopen_10.c":106:15)
#loc43 = loc("CWE390_Error_Without_Action__fopen_10.c":109:15)
#loc44 = loc("CWE390_Error_Without_Action__fopen_10.c":111:15)
#loc45 = loc("CWE390_Error_Without_Action__fopen_10.c":99:1)
#loc46 = loc("CWE390_Error_Without_Action__fopen_10.c":114:1)
#loc51 = loc("CWE390_Error_Without_Action__fopen_10.c":100:1)
#loc52 = loc("CWE390_Error_Without_Action__fopen_10.c":102:27)
#loc53 = loc("CWE390_Error_Without_Action__fopen_10.c":102:22)
#loc54 = loc("CWE390_Error_Without_Action__fopen_10.c":102:5)
#loc55 = loc("CWE390_Error_Without_Action__fopen_10.c":104:5)
#loc56 = loc("CWE390_Error_Without_Action__fopen_10.c":105:5)
#loc57 = loc("CWE390_Error_Without_Action__fopen_10.c":105:48)
#loc58 = loc("CWE390_Error_Without_Action__fopen_10.c":106:5)
#loc59 = loc("CWE390_Error_Without_Action__fopen_10.c":109:5)
#loc60 = loc("CWE390_Error_Without_Action__fopen_10.c":110:5)
#loc61 = loc("CWE390_Error_Without_Action__fopen_10.c":110:47)
#loc62 = loc("CWE390_Error_Without_Action__fopen_10.c":111:5)
#loc63 = loc("CWE390_Error_Without_Action__fopen_10.c":113:12)
#loc64 = loc("CWE390_Error_Without_Action__fopen_10.c":113:5)
#loc65 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc66 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc67 = loc("CWE390_Error_Without_Action__fopen_10.c":47:19)
#loc68 = loc("CWE390_Error_Without_Action__fopen_10.c":57:27)
#loc69 = loc("/usr/include/stdlib.h":756:1)
#loc70 = loc("/usr/include/stdlib.h":756:70)
#loc71 = loc("CWE390_Error_Without_Action__fopen_10.c":42:1)
#loc72 = loc("CWE390_Error_Without_Action__fopen_10.c":63:1)
#loc73 = loc("CWE390_Error_Without_Action__fopen_10.c":44:5)
#loc74 = loc("CWE390_Error_Without_Action__fopen_10.c":62:5)
#loc75 = loc("CWE390_Error_Without_Action__fopen_10.c":44:8)
#loc76 = loc("CWE390_Error_Without_Action__fopen_10.c":45:5)
#loc77 = loc("CWE390_Error_Without_Action__fopen_10.c":48:5)
#loc78 = loc("CWE390_Error_Without_Action__fopen_10.c":50:5)
#loc79 = loc("CWE390_Error_Without_Action__fopen_10.c":47:9)
#loc80 = loc("CWE390_Error_Without_Action__fopen_10.c":51:9)
#loc81 = loc("CWE390_Error_Without_Action__fopen_10.c":61:9)
#loc82 = loc("CWE390_Error_Without_Action__fopen_10.c":52:13)
#loc83 = loc("CWE390_Error_Without_Action__fopen_10.c":52:31)
#loc84 = loc("CWE390_Error_Without_Action__fopen_10.c":53:24)
#loc85 = loc("CWE390_Error_Without_Action__fopen_10.c":53:30)
#loc86 = loc("CWE390_Error_Without_Action__fopen_10.c":53:42)
#loc87 = loc("CWE390_Error_Without_Action__fopen_10.c":53:13)
#loc88 = loc("CWE390_Error_Without_Action__fopen_10.c":53:46)
#loc89 = loc("CWE390_Error_Without_Action__fopen_10.c":55:13)
#loc90 = loc("CWE390_Error_Without_Action__fopen_10.c":59:13)
#loc91 = loc("CWE390_Error_Without_Action__fopen_10.c":55:17)
#loc92 = loc("CWE390_Error_Without_Action__fopen_10.c":55:29)
#loc93 = loc("CWE390_Error_Without_Action__fopen_10.c":56:13)
#loc94 = loc("CWE390_Error_Without_Action__fopen_10.c":57:17)
#loc95 = loc("CWE390_Error_Without_Action__fopen_10.c":58:17)
#loc96 = loc("CWE390_Error_Without_Action__fopen_10.c":58:22)
#loc97 = loc("CWE390_Error_Without_Action__fopen_10.c":60:20)
#loc98 = loc("CWE390_Error_Without_Action__fopen_10.c":60:13)
#loc99 = loc("CWE390_Error_Without_Action__fopen_10.c":66:1)
#loc100 = loc("CWE390_Error_Without_Action__fopen_10.c":82:1)
#loc101 = loc("CWE390_Error_Without_Action__fopen_10.c":68:5)
#loc102 = loc("CWE390_Error_Without_Action__fopen_10.c":81:5)
#loc103 = loc("CWE390_Error_Without_Action__fopen_10.c":68:8)
#loc104 = loc("CWE390_Error_Without_Action__fopen_10.c":69:5)
#loc105 = loc("CWE390_Error_Without_Action__fopen_10.c":70:9)
#loc106 = loc("CWE390_Error_Without_Action__fopen_10.c":80:9)
#loc107 = loc("CWE390_Error_Without_Action__fopen_10.c":71:13)
#loc108 = loc("CWE390_Error_Without_Action__fopen_10.c":71:31)
#loc109 = loc("CWE390_Error_Without_Action__fopen_10.c":72:24)
#loc110 = loc("CWE390_Error_Without_Action__fopen_10.c":72:30)
#loc111 = loc("CWE390_Error_Without_Action__fopen_10.c":72:42)
#loc112 = loc("CWE390_Error_Without_Action__fopen_10.c":72:13)
#loc113 = loc("CWE390_Error_Without_Action__fopen_10.c":72:46)
#loc114 = loc("CWE390_Error_Without_Action__fopen_10.c":74:13)
#loc115 = loc("CWE390_Error_Without_Action__fopen_10.c":78:13)
#loc116 = loc("CWE390_Error_Without_Action__fopen_10.c":74:17)
#loc117 = loc("CWE390_Error_Without_Action__fopen_10.c":74:29)
#loc118 = loc("CWE390_Error_Without_Action__fopen_10.c":75:13)
#loc119 = loc("CWE390_Error_Without_Action__fopen_10.c":76:27)
#loc120 = loc("CWE390_Error_Without_Action__fopen_10.c":76:17)
#loc121 = loc("CWE390_Error_Without_Action__fopen_10.c":77:17)
#loc122 = loc("CWE390_Error_Without_Action__fopen_10.c":77:22)
#loc123 = loc("CWE390_Error_Without_Action__fopen_10.c":79:20)
#loc124 = loc("CWE390_Error_Without_Action__fopen_10.c":79:13)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc9, #loc10])
#loc129 = loc(fused[#loc11, #loc12])
#loc130 = loc(fused[#loc14, #loc12])
#loc131 = loc(fused[#loc15, #loc16])
#loc132 = loc(fused[#loc17, #loc18])
#loc133 = loc(fused[#loc20, #loc21])
#loc134 = loc(fused[#loc22, #loc23])
#loc135 = loc(fused[#loc24, #loc25])
#loc136 = loc(fused[#loc26, #loc23])
#loc137 = loc(fused[#loc29, #loc30])
#loc138 = loc(fused[#loc31, #loc32])
#loc139 = loc(fused[#loc33, #loc34])
#loc140 = loc(fused[#loc35, #loc36])
#loc141 = loc(fused[#loc37, #loc38])
#loc142 = loc(fused[#loc39, #loc40])
#loc143 = loc(fused[#loc45, #loc46])
#loc146 = loc(fused[#loc56, #loc57])
#loc147 = loc(fused[#loc60, #loc61])
#loc148 = loc(fused[#loc64, #loc63])
#loc149 = loc(fused[#loc65, #loc66])
#loc150 = loc(fused[#loc69, #loc70])
#loc151 = loc(fused[#loc71, #loc72])
#loc152 = loc(fused[#loc73, #loc74])
#loc153 = loc(fused[#loc76, #loc77, #loc78, #loc74])
#loc154 = loc(fused[#loc80, #loc81])
#loc155 = loc(fused[#loc82, #loc83])
#loc156 = loc(fused[#loc87, #loc88])
#loc157 = loc(fused[#loc89, #loc90])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc93, #loc90])
#loc160 = loc(fused[#loc99, #loc100])
#loc161 = loc(fused[#loc101, #loc102])
#loc162 = loc(fused[#loc104, #loc102])
#loc163 = loc(fused[#loc105, #loc106])
#loc164 = loc(fused[#loc107, #loc108])
#loc165 = loc(fused[#loc112, #loc113])
#loc166 = loc(fused[#loc114, #loc115])
#loc167 = loc(fused[#loc116, #loc117])
#loc168 = loc(fused[#loc118, #loc115])
