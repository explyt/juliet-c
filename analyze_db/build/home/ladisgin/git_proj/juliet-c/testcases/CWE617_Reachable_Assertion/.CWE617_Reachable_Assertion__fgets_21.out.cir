!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE617_Reachable_Assertion__fgets_21.c":30:22)
#loc13 = loc("CWE617_Reachable_Assertion__fgets_21.c":30:26)
#loc74 = loc("CWE617_Reachable_Assertion__fgets_21.c":135:10)
#loc75 = loc("CWE617_Reachable_Assertion__fgets_21.c":135:14)
#loc76 = loc("CWE617_Reachable_Assertion__fgets_21.c":135:20)
#loc77 = loc("CWE617_Reachable_Assertion__fgets_21.c":135:32)
#loc97 = loc("CWE617_Reachable_Assertion__fgets_21.c":71:27)
#loc98 = loc("CWE617_Reachable_Assertion__fgets_21.c":71:31)
#loc130 = loc("CWE617_Reachable_Assertion__fgets_21.c":98:27)
#loc131 = loc("CWE617_Reachable_Assertion__fgets_21.c":98:31)
#loc161 = loc(fused[#loc12, #loc13])
#loc184 = loc(fused[#loc74, #loc75])
#loc185 = loc(fused[#loc76, #loc77])
#loc191 = loc(fused[#loc97, #loc98])
#loc203 = loc(fused[#loc130, #loc131])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc156)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc158)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc12, #loc13])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc162)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc161)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc11)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc16)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc156)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc164)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc165)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc162)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc162)
    cir.br ^bb4 loc(#loc166)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc26)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc26)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc26)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc26)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc26)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc26)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc28)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc168)
  ^bb5:  // pred: ^bb4
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb7 loc(#loc31)
  ^bb6:  // pred: ^bb4
    %24 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc18)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.store %26, %2 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    cir.return %27 : !s32i loc(#loc170)
  } loc(#loc160)
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"CWE617_Reachable_Assertion__fgets_21.c\00" : !cir.array<!s8i x 39>> : !cir.array<!s8i x 39> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"void CWE617_Reachable_Assertion__fgets_21_bad()\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc42)
  cir.func no_proto @CWE617_Reachable_Assertion__fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc48)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc156)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %6 = cir.call @badSource(%5) : (!s32i) -> !s32i loc(#loc53)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc42)
    cir.br ^bb1 loc(#loc42)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc42)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc42)
    %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc42)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc42)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc42)
  ^bb4:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc42)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc42)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 39>> loc(#loc42)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 39>>), !cir.ptr<!s8i> loc(#loc42)
    %15 = cir.const #cir.int<59> : !s32i loc(#loc42)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc42)
    %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc42)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @__assert_fail(%12, %14, %16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc42)
    cir.br ^bb5 loc(#loc42)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc44)
  } loc(#loc172)
  cir.func no_proto @CWE617_Reachable_Assertion__fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc177)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc180)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc181)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc185)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE617_Reachable_Assertion__fgets_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call @CWE617_Reachable_Assertion__fgets_21_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE617_Reachable_Assertion__fgets_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call @CWE617_Reachable_Assertion__fgets_21_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    cir.return %17 : !s32i loc(#loc188)
  } loc(#loc183)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc94)
  cir.func internal private @goodG2B1Source(%arg0: !s32i loc(fused[#loc97, #loc98])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc96)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc189)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc102)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc193)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.br ^bb4 loc(#loc104)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<5> : !s32i loc(#loc107)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc107)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc101)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    cir.return %11 : !s32i loc(#loc195)
  } loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"void goodG2B1()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc112)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc118)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc189)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %6 = cir.call @goodG2B1Source(%5) : (!s32i) -> !s32i loc(#loc123)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc112)
    cir.br ^bb1 loc(#loc112)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc112)
    %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc112)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc112)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc112)
  ^bb4:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc112)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc112)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 39>> loc(#loc112)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 39>>), !cir.ptr<!s8i> loc(#loc112)
    %15 = cir.const #cir.int<94> : !s32i loc(#loc112)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc112)
    %17 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc112)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @__assert_fail(%12, %14, %16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc112)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc112)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc114)
  } loc(#loc196)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc201)
  cir.func internal private @goodG2B2Source(%arg0: !s32i loc(fused[#loc130, #loc131])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc129)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc201)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc135)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc205)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<5> : !s32i loc(#loc137)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc137)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // pred: ^bb3
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.return %9 : !s32i loc(#loc207)
  } loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.10" = #cir.const_array<"void goodG2B2()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc142)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc209)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc148)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc201)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %6 = cir.call @goodG2B2Source(%5) : (!s32i) -> !s32i loc(#loc153)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc142)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc142)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc142)
    %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc142)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc142)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc142)
  ^bb4:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc142)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc142)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 39>> loc(#loc142)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 39>>), !cir.ptr<!s8i> loc(#loc142)
    %15 = cir.const #cir.int<116> : !s32i loc(#loc142)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc142)
    %17 = cir.get_global @".str.10" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc142)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @__assert_fail(%12, %14, %16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc142)
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc142)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc142)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc144)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fgets_21.c":0:0)
#loc1 = loc("CWE617_Reachable_Assertion__fgets_21.c":28:1)
#loc2 = loc("CWE617_Reachable_Assertion__fgets_21.c":28:24)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("CWE617_Reachable_Assertion__fgets_21.c":44:27)
#loc10 = loc("CWE617_Reachable_Assertion__fgets_21.c":30:1)
#loc11 = loc("CWE617_Reachable_Assertion__fgets_21.c":49:1)
#loc14 = loc("CWE617_Reachable_Assertion__fgets_21.c":35:13)
#loc15 = loc("CWE617_Reachable_Assertion__fgets_21.c":35:49)
#loc16 = loc("CWE617_Reachable_Assertion__fgets_21.c":31:1)
#loc17 = loc("CWE617_Reachable_Assertion__fgets_21.c":32:5)
#loc18 = loc("CWE617_Reachable_Assertion__fgets_21.c":47:5)
#loc19 = loc("CWE617_Reachable_Assertion__fgets_21.c":32:8)
#loc20 = loc("CWE617_Reachable_Assertion__fgets_21.c":33:5)
#loc21 = loc("CWE617_Reachable_Assertion__fgets_21.c":34:9)
#loc22 = loc("CWE617_Reachable_Assertion__fgets_21.c":46:9)
#loc23 = loc("CWE617_Reachable_Assertion__fgets_21.c":37:13)
#loc24 = loc("CWE617_Reachable_Assertion__fgets_21.c":45:13)
#loc25 = loc("CWE617_Reachable_Assertion__fgets_21.c":37:23)
#loc26 = loc("CWE617_Reachable_Assertion__fgets_21.c":37:36)
#loc27 = loc("CWE617_Reachable_Assertion__fgets_21.c":37:53)
#loc28 = loc("CWE617_Reachable_Assertion__fgets_21.c":37:17)
#loc29 = loc("CWE617_Reachable_Assertion__fgets_21.c":37:63)
#loc30 = loc("CWE617_Reachable_Assertion__fgets_21.c":38:13)
#loc31 = loc("CWE617_Reachable_Assertion__fgets_21.c":41:13)
#loc32 = loc("CWE617_Reachable_Assertion__fgets_21.c":43:13)
#loc33 = loc("CWE617_Reachable_Assertion__fgets_21.c":40:29)
#loc34 = loc("CWE617_Reachable_Assertion__fgets_21.c":40:24)
#loc35 = loc("CWE617_Reachable_Assertion__fgets_21.c":40:17)
#loc36 = loc("CWE617_Reachable_Assertion__fgets_21.c":40:40)
#loc37 = loc("CWE617_Reachable_Assertion__fgets_21.c":44:17)
#loc38 = loc("CWE617_Reachable_Assertion__fgets_21.c":48:12)
#loc39 = loc("CWE617_Reachable_Assertion__fgets_21.c":48:5)
#loc40 = loc("/usr/include/assert.h":67:1)
#loc41 = loc("/usr/include/assert.h":69:43)
#loc42 = loc("CWE617_Reachable_Assertion__fgets_21.c":59:5)
#loc43 = loc("CWE617_Reachable_Assertion__fgets_21.c":51:1)
#loc44 = loc("CWE617_Reachable_Assertion__fgets_21.c":60:1)
#loc45 = loc("CWE617_Reachable_Assertion__fgets_21.c":53:5)
#loc46 = loc("CWE617_Reachable_Assertion__fgets_21.c":53:9)
#loc47 = loc("CWE617_Reachable_Assertion__fgets_21.c":55:13)
#loc48 = loc("CWE617_Reachable_Assertion__fgets_21.c":55:12)
#loc49 = loc("CWE617_Reachable_Assertion__fgets_21.c":55:5)
#loc50 = loc("CWE617_Reachable_Assertion__fgets_21.c":56:17)
#loc51 = loc("CWE617_Reachable_Assertion__fgets_21.c":56:5)
#loc52 = loc("CWE617_Reachable_Assertion__fgets_21.c":57:22)
#loc53 = loc("CWE617_Reachable_Assertion__fgets_21.c":57:12)
#loc54 = loc("CWE617_Reachable_Assertion__fgets_21.c":57:5)
#loc55 = loc("CWE617_Reachable_Assertion__fgets_21.c":57:26)
#loc56 = loc("CWE617_Reachable_Assertion__fgets_21.c":119:1)
#loc57 = loc("CWE617_Reachable_Assertion__fgets_21.c":123:1)
#loc58 = loc("CWE617_Reachable_Assertion__fgets_21.c":121:5)
#loc59 = loc("CWE617_Reachable_Assertion__fgets_21.c":121:14)
#loc60 = loc("CWE617_Reachable_Assertion__fgets_21.c":122:5)
#loc61 = loc("CWE617_Reachable_Assertion__fgets_21.c":122:14)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc67 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc68 = loc("CWE617_Reachable_Assertion__fgets_21.c":140:15)
#loc69 = loc("CWE617_Reachable_Assertion__fgets_21.c":142:15)
#loc70 = loc("CWE617_Reachable_Assertion__fgets_21.c":145:15)
#loc71 = loc("CWE617_Reachable_Assertion__fgets_21.c":147:15)
#loc72 = loc("CWE617_Reachable_Assertion__fgets_21.c":135:1)
#loc73 = loc("CWE617_Reachable_Assertion__fgets_21.c":150:1)
#loc78 = loc("CWE617_Reachable_Assertion__fgets_21.c":136:1)
#loc79 = loc("CWE617_Reachable_Assertion__fgets_21.c":138:27)
#loc80 = loc("CWE617_Reachable_Assertion__fgets_21.c":138:22)
#loc81 = loc("CWE617_Reachable_Assertion__fgets_21.c":138:5)
#loc82 = loc("CWE617_Reachable_Assertion__fgets_21.c":140:5)
#loc83 = loc("CWE617_Reachable_Assertion__fgets_21.c":141:5)
#loc84 = loc("CWE617_Reachable_Assertion__fgets_21.c":141:47)
#loc85 = loc("CWE617_Reachable_Assertion__fgets_21.c":142:5)
#loc86 = loc("CWE617_Reachable_Assertion__fgets_21.c":145:5)
#loc87 = loc("CWE617_Reachable_Assertion__fgets_21.c":146:5)
#loc88 = loc("CWE617_Reachable_Assertion__fgets_21.c":146:46)
#loc89 = loc("CWE617_Reachable_Assertion__fgets_21.c":147:5)
#loc90 = loc("CWE617_Reachable_Assertion__fgets_21.c":149:12)
#loc91 = loc("CWE617_Reachable_Assertion__fgets_21.c":149:5)
#loc92 = loc("CWE617_Reachable_Assertion__fgets_21.c":67:1)
#loc93 = loc("CWE617_Reachable_Assertion__fgets_21.c":67:29)
#loc94 = loc("CWE617_Reachable_Assertion__fgets_21.c":76:19)
#loc95 = loc("CWE617_Reachable_Assertion__fgets_21.c":71:1)
#loc96 = loc("CWE617_Reachable_Assertion__fgets_21.c":84:1)
#loc99 = loc("CWE617_Reachable_Assertion__fgets_21.c":72:1)
#loc100 = loc("CWE617_Reachable_Assertion__fgets_21.c":73:5)
#loc101 = loc("CWE617_Reachable_Assertion__fgets_21.c":82:5)
#loc102 = loc("CWE617_Reachable_Assertion__fgets_21.c":73:8)
#loc103 = loc("CWE617_Reachable_Assertion__fgets_21.c":74:5)
#loc104 = loc("CWE617_Reachable_Assertion__fgets_21.c":77:5)
#loc105 = loc("CWE617_Reachable_Assertion__fgets_21.c":79:5)
#loc106 = loc("CWE617_Reachable_Assertion__fgets_21.c":76:9)
#loc107 = loc("CWE617_Reachable_Assertion__fgets_21.c":81:16)
#loc108 = loc("CWE617_Reachable_Assertion__fgets_21.c":81:29)
#loc109 = loc("CWE617_Reachable_Assertion__fgets_21.c":81:9)
#loc110 = loc("CWE617_Reachable_Assertion__fgets_21.c":83:12)
#loc111 = loc("CWE617_Reachable_Assertion__fgets_21.c":83:5)
#loc112 = loc("CWE617_Reachable_Assertion__fgets_21.c":94:5)
#loc113 = loc("CWE617_Reachable_Assertion__fgets_21.c":86:1)
#loc114 = loc("CWE617_Reachable_Assertion__fgets_21.c":95:1)
#loc115 = loc("CWE617_Reachable_Assertion__fgets_21.c":88:5)
#loc116 = loc("CWE617_Reachable_Assertion__fgets_21.c":88:9)
#loc117 = loc("CWE617_Reachable_Assertion__fgets_21.c":90:13)
#loc118 = loc("CWE617_Reachable_Assertion__fgets_21.c":90:12)
#loc119 = loc("CWE617_Reachable_Assertion__fgets_21.c":90:5)
#loc120 = loc("CWE617_Reachable_Assertion__fgets_21.c":91:22)
#loc121 = loc("CWE617_Reachable_Assertion__fgets_21.c":91:5)
#loc122 = loc("CWE617_Reachable_Assertion__fgets_21.c":92:27)
#loc123 = loc("CWE617_Reachable_Assertion__fgets_21.c":92:12)
#loc124 = loc("CWE617_Reachable_Assertion__fgets_21.c":92:5)
#loc125 = loc("CWE617_Reachable_Assertion__fgets_21.c":92:31)
#loc126 = loc("CWE617_Reachable_Assertion__fgets_21.c":68:1)
#loc127 = loc("CWE617_Reachable_Assertion__fgets_21.c":68:29)
#loc128 = loc("CWE617_Reachable_Assertion__fgets_21.c":98:1)
#loc129 = loc("CWE617_Reachable_Assertion__fgets_21.c":106:1)
#loc132 = loc("CWE617_Reachable_Assertion__fgets_21.c":99:1)
#loc133 = loc("CWE617_Reachable_Assertion__fgets_21.c":100:5)
#loc134 = loc("CWE617_Reachable_Assertion__fgets_21.c":104:5)
#loc135 = loc("CWE617_Reachable_Assertion__fgets_21.c":100:8)
#loc136 = loc("CWE617_Reachable_Assertion__fgets_21.c":101:5)
#loc137 = loc("CWE617_Reachable_Assertion__fgets_21.c":103:16)
#loc138 = loc("CWE617_Reachable_Assertion__fgets_21.c":103:29)
#loc139 = loc("CWE617_Reachable_Assertion__fgets_21.c":103:9)
#loc140 = loc("CWE617_Reachable_Assertion__fgets_21.c":105:12)
#loc141 = loc("CWE617_Reachable_Assertion__fgets_21.c":105:5)
#loc142 = loc("CWE617_Reachable_Assertion__fgets_21.c":116:5)
#loc143 = loc("CWE617_Reachable_Assertion__fgets_21.c":108:1)
#loc144 = loc("CWE617_Reachable_Assertion__fgets_21.c":117:1)
#loc145 = loc("CWE617_Reachable_Assertion__fgets_21.c":110:5)
#loc146 = loc("CWE617_Reachable_Assertion__fgets_21.c":110:9)
#loc147 = loc("CWE617_Reachable_Assertion__fgets_21.c":112:13)
#loc148 = loc("CWE617_Reachable_Assertion__fgets_21.c":112:12)
#loc149 = loc("CWE617_Reachable_Assertion__fgets_21.c":112:5)
#loc150 = loc("CWE617_Reachable_Assertion__fgets_21.c":113:22)
#loc151 = loc("CWE617_Reachable_Assertion__fgets_21.c":113:5)
#loc152 = loc("CWE617_Reachable_Assertion__fgets_21.c":114:27)
#loc153 = loc("CWE617_Reachable_Assertion__fgets_21.c":114:12)
#loc154 = loc("CWE617_Reachable_Assertion__fgets_21.c":114:5)
#loc155 = loc("CWE617_Reachable_Assertion__fgets_21.c":114:31)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc7, #loc8])
#loc160 = loc(fused[#loc10, #loc11])
#loc162 = loc(fused[#loc14, #loc15])
#loc163 = loc(fused[#loc17, #loc18])
#loc164 = loc(fused[#loc20, #loc18])
#loc165 = loc(fused[#loc21, #loc22])
#loc166 = loc(fused[#loc23, #loc24])
#loc167 = loc(fused[#loc28, #loc29])
#loc168 = loc(fused[#loc30, #loc31, #loc32, #loc24])
#loc169 = loc(fused[#loc35, #loc36])
#loc170 = loc(fused[#loc39, #loc38])
#loc171 = loc(fused[#loc40, #loc41])
#loc172 = loc(fused[#loc43, #loc44])
#loc173 = loc(fused[#loc45, #loc46])
#loc174 = loc(fused[#loc49, #loc47])
#loc175 = loc(fused[#loc51, #loc50])
#loc176 = loc(fused[#loc54, #loc55])
#loc177 = loc(fused[#loc56, #loc57])
#loc178 = loc(fused[#loc58, #loc59])
#loc179 = loc(fused[#loc60, #loc61])
#loc180 = loc(fused[#loc62, #loc63])
#loc181 = loc(fused[#loc64, #loc65])
#loc182 = loc(fused[#loc66, #loc67])
#loc183 = loc(fused[#loc72, #loc73])
#loc186 = loc(fused[#loc83, #loc84])
#loc187 = loc(fused[#loc87, #loc88])
#loc188 = loc(fused[#loc91, #loc90])
#loc189 = loc(fused[#loc92, #loc93])
#loc190 = loc(fused[#loc95, #loc96])
#loc192 = loc(fused[#loc100, #loc101])
#loc193 = loc(fused[#loc103, #loc104, #loc105, #loc101])
#loc194 = loc(fused[#loc109, #loc108])
#loc195 = loc(fused[#loc111, #loc110])
#loc196 = loc(fused[#loc113, #loc114])
#loc197 = loc(fused[#loc115, #loc116])
#loc198 = loc(fused[#loc119, #loc117])
#loc199 = loc(fused[#loc121, #loc120])
#loc200 = loc(fused[#loc124, #loc125])
#loc201 = loc(fused[#loc126, #loc127])
#loc202 = loc(fused[#loc128, #loc129])
#loc204 = loc(fused[#loc133, #loc134])
#loc205 = loc(fused[#loc136, #loc134])
#loc206 = loc(fused[#loc139, #loc138])
#loc207 = loc(fused[#loc141, #loc140])
#loc208 = loc(fused[#loc143, #loc144])
#loc209 = loc(fused[#loc145, #loc146])
#loc210 = loc(fused[#loc149, #loc147])
#loc211 = loc(fused[#loc151, #loc150])
#loc212 = loc(fused[#loc154, #loc155])
