!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":23:74)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":23:78)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":66:78)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":66:82)
#loc156 = loc(fused[#loc11, #loc12])
#loc187 = loc(fused[#loc93, #loc94])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc152)
  cir.func private @printIntLine(!s32i) loc(#loc153)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc154)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc156)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc20)
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc160)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc161)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc162)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc163)
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc165)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc166)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc33)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc167)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc168)
    cir.br ^bb7 loc(#loc167)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc169)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc40)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc170)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc45)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.br ^bb10 loc(#loc35)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc47)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    cir.br ^bb7 loc(#loc167)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc35)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc50)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc51)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc52)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb14 loc(#loc19)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc10)
  } loc(#loc155)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc173)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc174)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc175)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc178)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc179)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc70)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc178)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc178)
    cir.br ^bb2 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc76)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc77)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc77)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc77)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc77)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc77)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc77)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc77)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc174)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc79)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc80)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc183)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc184)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc85)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.br ^bb5 loc(#loc82)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb5 loc(#loc75)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc75)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_badSink(%24) : (!s32i) -> () loc(#loc90)
    cir.return loc(#loc64)
  } loc(#loc177)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_goodG2BSink(%arg0: !s32i loc(fused[#loc93, #loc94])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc187)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc102)
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc103)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc191)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc192)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc193)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc194)
    cir.br ^bb2 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc111)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc196)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc197)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc113)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc115)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc109)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc198)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc118)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc199)
    cir.br ^bb7 loc(#loc198)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc121)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc200)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc122)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc201)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc127)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.br ^bb10 loc(#loc117)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc117)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc129)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb7 loc(#loc198)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc117)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc132)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc133)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc134)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb14 loc(#loc101)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc92)
  } loc(#loc186)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc205)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc138)
    cir.return loc(#loc137)
  } loc(#loc204)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc145)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc147)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41_goodG2BSink(%4) : (!s32i) -> () loc(#loc150)
    cir.return loc(#loc141)
  } loc(#loc206)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":23:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":39:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":26:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":26:16)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":27:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":27:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":24:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":25:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":38:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:35)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:42)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:52)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:53)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":30:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:43)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:27)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:34)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:40)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":31:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":35:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":33:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":34:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":34:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":34:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":34:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":32:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":36:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":36:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":36:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":36:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":37:14)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":37:9)
#loc54 = loc("/usr/include/stdio.h":654:1)
#loc55 = loc("/usr/include/stdio.h":655:59)
#loc56 = loc("/usr/include/stdio.h":149:1)
#loc57 = loc("/usr/include/stdio.h":149:14)
#loc58 = loc("/usr/include/stdlib.h":105:1)
#loc59 = loc("/usr/include/stdlib.h":106:33)
#loc60 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc61 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":56:23)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":41:1)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":60:1)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":47:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":47:45)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":43:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":43:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":45:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":45:12)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":45:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":46:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":58:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":57:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:19)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:32)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:49)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":49:59)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":50:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":53:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":55:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":52:25)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":52:20)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":52:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":52:36)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":56:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":59:73)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":59:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":66:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":82:1)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":69:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":69:16)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":70:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":70:14)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":67:1)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":68:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":81:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:28)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:35)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:42)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:52)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:53)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":73:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:43)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:27)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:33)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:34)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:40)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":74:39)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":78:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:18)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:14)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:21)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:33)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:23)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":76:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":77:29)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":77:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":77:24)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":77:25)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:40)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":75:39)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":79:22)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":79:33)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":79:34)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":79:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":80:14)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":80:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":95:1)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":98:1)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":97:5)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":97:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":85:1)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":93:1)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":87:5)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":87:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":89:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":89:12)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":89:5)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":91:12)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":91:5)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":92:77)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_41.c":92:5)
#loc151 = loc(fused[#loc1, #loc2])
#loc152 = loc(fused[#loc3, #loc4])
#loc153 = loc(fused[#loc5, #loc6])
#loc154 = loc(fused[#loc7, #loc8])
#loc155 = loc(fused[#loc9, #loc10])
#loc157 = loc(fused[#loc13, #loc14])
#loc158 = loc(fused[#loc15, #loc16])
#loc159 = loc(fused[#loc18, #loc19])
#loc160 = loc(fused[#loc22, #loc23])
#loc161 = loc(fused[#loc21, #loc23])
#loc162 = loc(fused[#loc20, #loc24])
#loc163 = loc(fused[#loc25, #loc24])
#loc164 = loc(fused[#loc26, #loc27])
#loc165 = loc(fused[#loc28, #loc29])
#loc166 = loc(fused[#loc30, #loc27])
#loc167 = loc(fused[#loc34, #loc35])
#loc168 = loc(fused[#loc37, #loc36])
#loc169 = loc(fused[#loc38, #loc39])
#loc170 = loc(fused[#loc41, #loc35])
#loc171 = loc(fused[#loc43, #loc42])
#loc172 = loc(fused[#loc47, #loc46])
#loc173 = loc(fused[#loc54, #loc55])
#loc174 = loc(fused[#loc56, #loc57])
#loc175 = loc(fused[#loc58, #loc59])
#loc176 = loc(fused[#loc60, #loc61])
#loc177 = loc(fused[#loc63, #loc64])
#loc178 = loc(fused[#loc65, #loc66])
#loc179 = loc(fused[#loc67, #loc68])
#loc180 = loc(fused[#loc71, #loc69])
#loc181 = loc(fused[#loc72, #loc73])
#loc182 = loc(fused[#loc74, #loc75])
#loc183 = loc(fused[#loc79, #loc80])
#loc184 = loc(fused[#loc81, #loc82, #loc83, #loc75])
#loc185 = loc(fused[#loc86, #loc87])
#loc186 = loc(fused[#loc91, #loc92])
#loc188 = loc(fused[#loc95, #loc96])
#loc189 = loc(fused[#loc97, #loc98])
#loc190 = loc(fused[#loc100, #loc101])
#loc191 = loc(fused[#loc104, #loc105])
#loc192 = loc(fused[#loc103, #loc105])
#loc193 = loc(fused[#loc102, #loc106])
#loc194 = loc(fused[#loc107, #loc106])
#loc195 = loc(fused[#loc108, #loc109])
#loc196 = loc(fused[#loc110, #loc111])
#loc197 = loc(fused[#loc112, #loc109])
#loc198 = loc(fused[#loc116, #loc117])
#loc199 = loc(fused[#loc119, #loc118])
#loc200 = loc(fused[#loc120, #loc121])
#loc201 = loc(fused[#loc123, #loc117])
#loc202 = loc(fused[#loc125, #loc124])
#loc203 = loc(fused[#loc129, #loc128])
#loc204 = loc(fused[#loc136, #loc137])
#loc205 = loc(fused[#loc138, #loc139])
#loc206 = loc(fused[#loc140, #loc141])
#loc207 = loc(fused[#loc142, #loc143])
#loc208 = loc(fused[#loc146, #loc144])
#loc209 = loc(fused[#loc148, #loc147])
