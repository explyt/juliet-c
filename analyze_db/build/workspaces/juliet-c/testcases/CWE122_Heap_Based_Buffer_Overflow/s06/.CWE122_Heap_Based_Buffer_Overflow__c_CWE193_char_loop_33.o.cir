!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33L7goodG2BEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc130)
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_333badEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc131)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc133)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc136)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc131)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc139)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc140)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc142)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc25)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
    cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc28)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc29)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc29)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc145)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc37)
    %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc149)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc39)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc41)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb3 loc(#loc35)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc35)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc151)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb6 loc(#loc152)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_333badEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc131)
    cir.copy %22 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc131)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc46)
    %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc46)
    cir.store %25, %3 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    cir.br ^bb7 loc(#loc154)
  ^bb7:  // pred: ^bb6
    %26 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc52)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc155)
    cir.br ^bb8 loc(#loc154)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc56)
    %32 = cir.binop(add, %29, %31) : !u64i loc(#loc156)
    %33 = cir.cmp(lt, %28, %32) : !u64i, !cir.bool loc(#loc157)
    cir.brcond %33 ^bb9, ^bb13 loc(#loc157)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc158)
  ^bb10:  // pred: ^bb9
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %35 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc59)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc59)
    %37 = cir.load %36 : !cir.ptr<!s8i>, !s8i loc(#loc59)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc62)
    cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc159)
    cir.br ^bb11 loc(#loc51)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc51)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc65)
    cir.store %42, %2 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.br ^bb8 loc(#loc154)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc51)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    cir.br ^bb15 loc(#loc45)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc43)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc16)
  } loc(#loc137)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc130)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc163)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc164)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc166)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc81)
    cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc83)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc84)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc84)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc84)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc168)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc169)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
    cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc94)
    %18 = cir.cmp(eq, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc173)
    cir.brcond %18 ^bb2, ^bb3 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc98)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc175)
  ^bb5:  // pred: ^bb4
    %22 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc73)
    %23 = cir.load %22 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.br ^bb6 loc(#loc176)
  ^bb6:  // pred: ^bb5
    %24 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33L7goodG2BEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc130)
    cir.copy %24 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc130)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc103)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc104)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc103)
    cir.store %27, %3 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.br ^bb7 loc(#loc178)
  ^bb7:  // pred: ^bb6
    %28 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc109)
    cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    cir.br ^bb8 loc(#loc178)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %30 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %31 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc112)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc113)
    %34 = cir.binop(add, %31, %33) : !u64i loc(#loc180)
    %35 = cir.cmp(lt, %30, %34) : !u64i, !cir.bool loc(#loc181)
    cir.brcond %35 ^bb9, ^bb13 loc(#loc181)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc182)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc116)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc116)
    %39 = cir.load %38 : !cir.ptr<!s8i>, !s8i loc(#loc116)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %41 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc119)
    cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc183)
    cir.br ^bb11 loc(#loc108)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc108)
  ^bb12:  // pred: ^bb11
    %43 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %44 = cir.unary(inc, %43) : !u64i, !u64i loc(#loc122)
    cir.store %44, %2 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb8 loc(#loc178)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc108)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc126)
    cir.br ^bb15 loc(#loc102)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc100)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc71)
  } loc(#loc161)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33L7goodG2BEv() : () -> () loc(#loc129)
    cir.return loc(#loc128)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":73:13)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":73:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":42:13)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":42:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":31:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":55:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":40:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":40:23)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":43:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":43:20)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":43:23)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":33:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":33:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":34:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":34:23)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":35:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":35:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:20)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:27)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:30)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:41)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:42)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:33)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:17)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:23)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:24)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:30)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:29)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":39:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":54:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":41:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":53:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":44:25)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":44:32)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":44:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":44:38)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":50:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:22)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:18)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:25)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:41)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":48:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:34)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:27)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:17)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:22)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:23)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:35)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:45)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:44)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":51:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":51:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":52:18)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":52:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":62:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":86:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":71:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":71:23)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":74:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":74:20)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":74:23)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":64:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":64:12)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":65:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":65:23)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":66:12)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":66:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:20)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:28)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:31)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:34)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:45)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:27)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:46)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:33)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:17)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:23)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:24)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:30)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:29)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":70:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":85:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":72:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":84:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":75:25)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":75:32)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":75:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":75:38)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":81:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:22)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:18)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:25)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:29)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:41)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":79:13)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:34)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:27)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:17)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:22)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:23)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:35)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:45)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:44)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":82:23)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":82:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":83:18)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":83:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":88:1)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":91:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":90:5)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc9, #loc10])
#loc135 = loc(fused[#loc11, #loc12])
#loc136 = loc(fused[#loc13, #loc14])
#loc137 = loc(fused[#loc15, #loc16])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc19, #loc21])
#loc141 = loc(fused[#loc22, #loc23])
#loc142 = loc(fused[#loc24, #loc25])
#loc143 = loc(fused[#loc27, #loc26])
#loc144 = loc(fused[#loc30, #loc31])
#loc145 = loc(fused[#loc29, #loc31])
#loc146 = loc(fused[#loc28, #loc32])
#loc147 = loc(fused[#loc33, #loc32])
#loc148 = loc(fused[#loc34, #loc35])
#loc149 = loc(fused[#loc36, #loc37])
#loc150 = loc(fused[#loc38, #loc35])
#loc151 = loc(fused[#loc42, #loc43])
#loc152 = loc(fused[#loc44, #loc45])
#loc153 = loc(fused[#loc48, #loc49])
#loc154 = loc(fused[#loc50, #loc51])
#loc155 = loc(fused[#loc53, #loc52])
#loc156 = loc(fused[#loc55, #loc56])
#loc157 = loc(fused[#loc54, #loc56])
#loc158 = loc(fused[#loc57, #loc51])
#loc159 = loc(fused[#loc60, #loc63])
#loc160 = loc(fused[#loc65, #loc64])
#loc161 = loc(fused[#loc70, #loc71])
#loc162 = loc(fused[#loc72, #loc73])
#loc163 = loc(fused[#loc74, #loc75])
#loc164 = loc(fused[#loc74, #loc76])
#loc165 = loc(fused[#loc77, #loc78])
#loc166 = loc(fused[#loc79, #loc80])
#loc167 = loc(fused[#loc82, #loc81])
#loc168 = loc(fused[#loc86, #loc87])
#loc169 = loc(fused[#loc88, #loc87])
#loc170 = loc(fused[#loc83, #loc89])
#loc171 = loc(fused[#loc90, #loc89])
#loc172 = loc(fused[#loc91, #loc92])
#loc173 = loc(fused[#loc93, #loc94])
#loc174 = loc(fused[#loc95, #loc92])
#loc175 = loc(fused[#loc99, #loc100])
#loc176 = loc(fused[#loc101, #loc102])
#loc177 = loc(fused[#loc105, #loc106])
#loc178 = loc(fused[#loc107, #loc108])
#loc179 = loc(fused[#loc110, #loc109])
#loc180 = loc(fused[#loc112, #loc113])
#loc181 = loc(fused[#loc111, #loc113])
#loc182 = loc(fused[#loc114, #loc108])
#loc183 = loc(fused[#loc117, #loc120])
#loc184 = loc(fused[#loc122, #loc121])
#loc185 = loc(fused[#loc127, #loc128])
