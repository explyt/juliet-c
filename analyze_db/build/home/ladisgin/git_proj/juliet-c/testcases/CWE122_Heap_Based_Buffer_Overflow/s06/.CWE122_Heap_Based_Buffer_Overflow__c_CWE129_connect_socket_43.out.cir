!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":47:23)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":47:28)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":146:27)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":146:32)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":188:27)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":188:32)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":300:10)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":300:14)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":300:20)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":300:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc451 = loc(fused[#loc18, #loc19])
#loc515 = loc(fused[#loc185, #loc186])
#loc543 = loc(fused[#loc257, #loc258])
#loc606 = loc(fused[#loc427, #loc428])
#loc607 = loc(fused[#loc429, #loc430])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc443)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc444)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc445)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc446)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc447)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc448)
  cir.func private @close(!s32i) -> !s32i loc(#loc449)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc18, #loc19])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc451)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc453)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc454)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc455)
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc456)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc28)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc455)
      cir.scope {
        cir.do {
          %7 = cir.const #cir.int<2> : !s32i loc(#loc33)
          %8 = cir.const #cir.int<1> : !u32i loc(#loc34)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc34)
          %10 = cir.const #cir.int<6> : !u32i loc(#loc35)
          %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc35)
          %12 = cir.call @socket(%7, %9, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc36)
          cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc458)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc41)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc42)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc460)
            cir.if %54 {
              cir.break loc(#loc44)
            } loc(#loc461)
          } loc(#loc459)
          %13 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc462)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc47)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc463)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc464)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc52)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc52)
          %18 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc465)
          %19 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc55)
          %22 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc466)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc60)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc60)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc61)
          %27 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc467)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %52 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc469)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc470)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc470)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc72)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc73)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc471)
            cir.if %58 {
              cir.break loc(#loc75)
            } loc(#loc472)
          } loc(#loc468)
          %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc77)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc78)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc78)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc78)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc78)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc78)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc78)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc78)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc79)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc79)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc473)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc81)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc81)
          cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc474)
          cir.scope {
            %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc87)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc476)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc88)
              cir.yield %56 : !cir.bool loc(#loc88)
            }, false {
              %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc90)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc477)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc88)
                cir.yield %60 : !cir.bool loc(#loc88)
              }, false {
                %60 = cir.const #false loc(#loc88)
                cir.yield %60 : !cir.bool loc(#loc88)
              }) : (!cir.bool) -> !cir.bool loc(#loc88)
              cir.yield %59 : !cir.bool loc(#loc88)
            }) : (!cir.bool) -> !cir.bool loc(#loc88)
            cir.if %55 {
              cir.break loc(#loc92)
            } loc(#loc478)
          } loc(#loc475)
          %44 = cir.const #cir.int<0> : !s8i loc(#loc93)
          %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %46 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
          %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc95)
          cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc479)
          %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
          %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc97)
          %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
          cir.store %49, %50 : !s32i, !cir.ptr<!s32i> loc(#loc480)
          cir.yield loc(#loc32)
        } while {
          %7 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc100)
          cir.condition(%8) loc(#loc100)
        } loc(#loc457)
      } loc(#loc457)
      cir.scope {
        %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc104)
        %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc482)
        cir.if %10 {
          %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc107)
        } loc(#loc483)
      } loc(#loc481)
    } loc(#loc452)
    cir.return loc(#loc17)
  } loc(#loc450)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc484)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc485)
  cir.func private @printIntLine(!s32i) loc(#loc486)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc487)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc116)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc488)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc490)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc124)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc491)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc126)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc493)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc494)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc133)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc134)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc134)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc495)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc496)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc497)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc494)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc140)
        %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc499)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc143)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc144)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
        } loc(#loc500)
      } loc(#loc498)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc147)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc502)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc150)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc503)
          cir.condition(%18) loc(#loc503)
        } body {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc151)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc152)
          %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc153)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc154)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc504)
          cir.yield loc(#loc146)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc156)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc505)
          cir.yield loc(#loc501)
        } loc(#loc501)
      } loc(#loc501)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc160)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc507)
        cir.if %17 {
          %18 = cir.const #cir.int<1> : !s32i loc(#loc164)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc167)
          cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc509)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc170)
            cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc511)
            cir.for : cond {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
              %24 = cir.const #cir.int<10> : !s32i loc(#loc173)
              %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc512)
              cir.condition(%25) loc(#loc512)
            } body {
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc175)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc176)
              %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc174)
              cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc177)
              cir.yield loc(#loc169)
            } step {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc179)
              cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc513)
              cir.yield loc(#loc510)
            } loc(#loc510)
          } loc(#loc510)
        } else {
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc116)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc116)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc180)
        } loc(#loc508)
      } loc(#loc506)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc181)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc182)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc181)
    } loc(#loc492)
    cir.return loc(#loc120)
  } loc(#loc489)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc185, #loc186])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc515)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc187)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc188)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc189)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc516)
    cir.return loc(#loc184)
  } loc(#loc514)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc518)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc195)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc197)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc521)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc522)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc204)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc205)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc205)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc523)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc524)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc204)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc525)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc522)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc210)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc211)
        %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc527)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc213)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc214)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc215)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc213)
        } loc(#loc528)
      } loc(#loc526)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc218)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc530)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc220)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc221)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc531)
          cir.condition(%18) loc(#loc531)
        } body {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc222)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
          %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc224)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc225)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc532)
          cir.yield loc(#loc217)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc226)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc227)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc533)
          cir.yield loc(#loc529)
        } loc(#loc529)
      } loc(#loc529)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc231)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc535)
        cir.if %17 {
          %18 = cir.const #cir.int<1> : !s32i loc(#loc235)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc236)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc237)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc238)
          cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc537)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc241)
            cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc539)
            cir.for : cond {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
              %24 = cir.const #cir.int<10> : !s32i loc(#loc244)
              %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc540)
              cir.condition(%25) loc(#loc540)
            } body {
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc245)
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc246)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc247)
              %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc245)
              cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc248)
              cir.yield loc(#loc240)
            } step {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc249)
              %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc250)
              cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc541)
              cir.yield loc(#loc538)
            } loc(#loc538)
          } loc(#loc538)
        } else {
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc251)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc251)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc252)
        } loc(#loc536)
      } loc(#loc534)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc253)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc254)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc254)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc253)
    } loc(#loc520)
    cir.return loc(#loc191)
  } loc(#loc517)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc257, #loc258])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc543)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc259)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc545)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc546)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc547)
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc548)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc267)
      %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc267)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc547)
      cir.scope {
        cir.do {
          %7 = cir.const #cir.int<2> : !s32i loc(#loc272)
          %8 = cir.const #cir.int<1> : !u32i loc(#loc273)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc273)
          %10 = cir.const #cir.int<6> : !u32i loc(#loc274)
          %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc274)
          %12 = cir.call @socket(%7, %9, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc275)
          cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc550)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc280)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc281)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc281)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc552)
            cir.if %54 {
              cir.break loc(#loc283)
            } loc(#loc553)
          } loc(#loc551)
          %13 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc554)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc286)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc555)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc556)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc291)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc291)
          %18 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc557)
          %19 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc293)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc293)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc294)
          %22 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc558)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc297)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc297)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc298)
          %27 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc559)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc303)
            %52 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc561)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc562)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc562)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc308)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc309)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc309)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc563)
            cir.if %58 {
              cir.break loc(#loc311)
            } loc(#loc564)
          } loc(#loc560)
          %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc312)
          %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc313)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc313)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc314)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc314)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc314)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc314)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc314)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc314)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc314)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc315)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc315)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc565)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc316)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc317)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc317)
          cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc566)
          cir.scope {
            %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc322)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc323)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc323)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc568)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc324)
              cir.yield %56 : !cir.bool loc(#loc324)
            }, false {
              %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc325)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc326)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc569)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc324)
                cir.yield %60 : !cir.bool loc(#loc324)
              }, false {
                %60 = cir.const #false loc(#loc324)
                cir.yield %60 : !cir.bool loc(#loc324)
              }) : (!cir.bool) -> !cir.bool loc(#loc324)
              cir.yield %59 : !cir.bool loc(#loc324)
            }) : (!cir.bool) -> !cir.bool loc(#loc324)
            cir.if %55 {
              cir.break loc(#loc328)
            } loc(#loc570)
          } loc(#loc567)
          %44 = cir.const #cir.int<0> : !s8i loc(#loc329)
          %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc330)
          %46 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc331)
          %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc331)
          cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc571)
          %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc332)
          %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc333)
          %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc334)
          cir.store %49, %50 : !s32i, !cir.ptr<!s32i> loc(#loc572)
          cir.yield loc(#loc271)
        } while {
          %7 = cir.const #cir.int<0> : !s32i loc(#loc336)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc336)
          cir.condition(%8) loc(#loc336)
        } loc(#loc549)
      } loc(#loc549)
      cir.scope {
        %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc339)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc340)
        %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc340)
        %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc574)
        cir.if %10 {
          %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc342)
          %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc343)
        } loc(#loc575)
      } loc(#loc573)
    } loc(#loc544)
    cir.return loc(#loc256)
  } loc(#loc542)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc344)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc577)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc349)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc350)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc578)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc352)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc580)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc581)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc359)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc360)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc360)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc582)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc583)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc359)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc584)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc581)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc365)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc366)
        %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc586)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc368)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc369)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc370)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc368)
        } loc(#loc587)
      } loc(#loc585)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc373)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc589)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc375)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc376)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc590)
          cir.condition(%18) loc(#loc590)
        } body {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc377)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc378)
          %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc379)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc380)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc591)
          cir.yield loc(#loc372)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc381)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc382)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc592)
          cir.yield loc(#loc588)
        } loc(#loc588)
      } loc(#loc588)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc385)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc386)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc594)
        %18 = cir.ternary(%17, true {
          %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc388)
          %20 = cir.const #cir.int<10> : !s32i loc(#loc389)
          %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc595)
          %22 = cir.ternary(%21, true {
            %23 = cir.const #true loc(#loc387)
            cir.yield %23 : !cir.bool loc(#loc387)
          }, false {
            %23 = cir.const #false loc(#loc387)
            cir.yield %23 : !cir.bool loc(#loc387)
          }) : (!cir.bool) -> !cir.bool loc(#loc387)
          cir.yield %22 : !cir.bool loc(#loc387)
        }, false {
          %19 = cir.const #false loc(#loc387)
          cir.yield %19 : !cir.bool loc(#loc387)
        }) : (!cir.bool) -> !cir.bool loc(#loc387)
        cir.if %18 {
          %19 = cir.const #cir.int<1> : !s32i loc(#loc394)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc395)
          %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc396)
          %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc397)
          cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc597)
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc400)
            cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc599)
            cir.for : cond {
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc402)
              %25 = cir.const #cir.int<10> : !s32i loc(#loc403)
              %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc600)
              cir.condition(%26) loc(#loc600)
            } body {
              %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc404)
              %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc405)
              %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc406)
              %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc404)
              cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc407)
              cir.yield loc(#loc399)
            } step {
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc408)
              %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc409)
              cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc601)
              cir.yield loc(#loc598)
            } loc(#loc598)
          } loc(#loc598)
        } else {
          %19 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc344)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc344)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc410)
        } loc(#loc596)
      } loc(#loc593)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc411)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc412)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc412)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc411)
    } loc(#loc579)
    cir.return loc(#loc346)
  } loc(#loc576)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L7goodG2BEv() : () -> () loc(#loc415)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43L7goodB2GEv() : () -> () loc(#loc416)
    cir.return loc(#loc414)
  } loc(#loc602)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc603)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc604)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc421)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc422)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc423)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc424)
  cir.func @main(%arg0: !s32i loc(fused[#loc427, #loc428]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc429, #loc430])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc606)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc607)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc426)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc431)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc432)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc433)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc433)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc434)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc421)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc421)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc435)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_434goodEv() : () -> () loc(#loc436)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc422)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc422)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc437)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc423)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc423)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc438)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_433badEv() : () -> () loc(#loc439)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc424)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc424)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc440)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc441)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc608)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc608)
    cir.return %15 : !s32i loc(#loc608)
  } loc(#loc605)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":75:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":47:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":105:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":48:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":49:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":104:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":54:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":54:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":55:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":55:28)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":56:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":56:32)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":57:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":57:41)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":58:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":93:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":68:36)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":68:45)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":68:58)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":68:29)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":68:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":68:69)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":69:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":72:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":69:17)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":69:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":70:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":71:17)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":73:20)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":73:21)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":73:30)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":73:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":73:47)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":73:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":73:48)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":74:34)
#loc53 = loc("/usr/include/netinet/in.h":249:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":74:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":75:39)
#loc56 = loc("/usr/include/netinet/in.h":251:20)
#loc57 = loc("/usr/include/netinet/in.h":33:15)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":75:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":75:59)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":76:38)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":76:32)
#loc62 = loc("/usr/include/netinet/in.h":250:15)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":76:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":76:46)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":77:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":80:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":77:25)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":77:58)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":77:59)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":77:68)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":77:82)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":77:17)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":77:88)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":78:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":79:17)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":83:31)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":83:46)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":83:59)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":83:77)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":83:80)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":83:26)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":83:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":83:81)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":84:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":87:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":84:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":84:31)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":84:44)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":84:47)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":84:61)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":85:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":86:17)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":89:39)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":89:25)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":89:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":91:25)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":91:20)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":91:13)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":91:36)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":93:16)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":94:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":97:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":94:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":94:30)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":95:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":96:26)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":96:13)
#loc108 = loc("/usr/include/stdlib.h":672:1)
#loc109 = loc("/usr/include/stdlib.h":672:45)
#loc110 = loc("/usr/include/stdlib.h":756:1)
#loc111 = loc("/usr/include/stdlib.h":756:70)
#loc112 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc113 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc114 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc115 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":135:23)
#loc117 = loc("/usr/include/stdlib.h":687:1)
#loc118 = loc("/usr/include/stdlib.h":687:32)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":107:1)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":139:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":109:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":109:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":111:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":111:12)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":111:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":112:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":113:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":138:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":114:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":114:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":115:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":115:54)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":115:31)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":115:38)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":115:43)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":115:53)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":116:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":116:39)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":116:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":116:23)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":116:29)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":116:30)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":116:36)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":116:35)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":118:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":121:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":118:18)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":118:14)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":118:21)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":118:25)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":120:25)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":120:13)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":120:20)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":120:21)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":118:30)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":118:29)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":124:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":136:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":124:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":124:21)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":125:9)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":132:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":134:9)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":126:28)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":126:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":126:20)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":126:24)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":128:13)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":131:13)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":128:21)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":128:17)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":128:24)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":128:28)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":130:30)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":130:37)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":130:38)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":130:17)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":128:33)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":128:32)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":135:13)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":137:9)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":137:14)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":146:1)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":151:1)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":147:1)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":150:12)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":150:5)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":153:1)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":185:1)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":155:5)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":155:9)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":157:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":157:12)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":157:5)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":158:5)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":159:5)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":184:5)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":160:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":160:13)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":161:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":161:54)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":161:31)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":161:38)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":161:43)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":161:53)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":162:9)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":162:39)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":162:13)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":162:23)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":162:29)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":162:30)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":162:36)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":162:35)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":164:9)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":167:9)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":164:18)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":164:14)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":164:21)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":164:25)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":166:25)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":166:13)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":166:20)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":166:21)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":164:30)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":164:29)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":170:9)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":182:9)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":170:13)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":170:21)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":171:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":178:9)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":180:9)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":172:28)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":172:13)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":172:20)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":172:24)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":174:13)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":177:13)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":174:21)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":174:17)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":174:24)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":174:28)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":176:30)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":176:37)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":176:38)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":176:17)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":174:33)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":174:32)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":181:23)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":181:13)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":183:9)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":183:14)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":188:1)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":246:1)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":189:1)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":190:5)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":245:5)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":195:9)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":195:13)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":196:9)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":196:28)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":197:9)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":197:32)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":198:9)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":198:41)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":199:9)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":234:17)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":209:36)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":209:45)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":209:58)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":209:29)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":209:13)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":209:69)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":210:13)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":213:13)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":210:17)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":210:34)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":211:13)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":212:17)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":214:20)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":214:21)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":214:30)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":214:33)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":214:47)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":214:13)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":214:48)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":215:34)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":215:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":216:49)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":216:39)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":216:13)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":216:59)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":217:38)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":217:32)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":217:13)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":217:46)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":218:13)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":221:13)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":218:25)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":218:58)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":218:59)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":218:68)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":218:82)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":218:17)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":218:88)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":219:13)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":220:17)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":224:31)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":224:46)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":224:59)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":224:77)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":224:80)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":224:26)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":224:13)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":224:81)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":225:13)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":228:13)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":225:17)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":225:31)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":225:44)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":225:47)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":225:61)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":226:13)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":227:17)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":230:39)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":230:25)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":230:13)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":232:25)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":232:20)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":232:13)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":232:36)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":234:16)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":235:9)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":238:9)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":235:13)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":235:30)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":236:9)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":237:26)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":237:13)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":275:23)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":248:1)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":279:1)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":250:5)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":250:9)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":252:13)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":252:12)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":252:5)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":253:5)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":254:5)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":278:5)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":255:9)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":255:13)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":256:9)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":256:54)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":256:31)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":256:38)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":256:43)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":256:53)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":257:9)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":257:39)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":257:13)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":257:23)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":257:29)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":257:30)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":257:36)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":257:35)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":259:9)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":262:9)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":259:18)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":259:14)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":259:21)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":259:25)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":261:25)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":261:13)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":261:20)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":261:21)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":259:30)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":259:29)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":264:9)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":276:9)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":264:13)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":264:21)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":264:23)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":264:26)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":264:34)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":264:36)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":265:9)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":272:9)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":274:9)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":266:28)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":266:13)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":266:20)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":266:24)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":268:13)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":271:13)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":268:21)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":268:17)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":268:24)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":268:28)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":270:30)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":270:37)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":270:38)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":270:17)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":268:33)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":268:32)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":275:13)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":277:9)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":277:14)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":281:1)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":285:1)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":283:5)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":284:5)
#loc417 = loc("/usr/include/stdlib.h":575:1)
#loc418 = loc("/usr/include/stdlib.h":575:41)
#loc419 = loc("/usr/include/time.h":76:1)
#loc420 = loc("/usr/include/time.h":76:38)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":305:15)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":307:15)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":310:15)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":312:15)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":300:1)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":315:1)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":301:1)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":303:27)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":303:22)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":303:5)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":305:5)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":306:5)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":307:5)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":310:5)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":311:5)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":312:5)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":314:12)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_43.cpp":314:5)
#loc443 = loc(fused[#loc1, #loc2])
#loc444 = loc(fused[#loc3, #loc4])
#loc445 = loc(fused[#loc6, #loc7])
#loc446 = loc(fused[#loc8, #loc9])
#loc447 = loc(fused[#loc10, #loc11])
#loc448 = loc(fused[#loc12, #loc13])
#loc449 = loc(fused[#loc14, #loc15])
#loc450 = loc(fused[#loc16, #loc17])
#loc452 = loc(fused[#loc21, #loc22])
#loc453 = loc(fused[#loc23, #loc24])
#loc454 = loc(fused[#loc25, #loc26])
#loc455 = loc(fused[#loc27, #loc28])
#loc456 = loc(fused[#loc29, #loc30])
#loc457 = loc(fused[#loc31, #loc32])
#loc458 = loc(fused[#loc37, #loc38])
#loc459 = loc(fused[#loc39, #loc40])
#loc460 = loc(fused[#loc41, #loc42])
#loc461 = loc(fused[#loc43, #loc40])
#loc462 = loc(fused[#loc45, #loc46])
#loc463 = loc(fused[#loc48, #loc49])
#loc464 = loc(fused[#loc50, #loc51])
#loc465 = loc(fused[#loc54, #loc52])
#loc466 = loc(fused[#loc58, #loc59])
#loc467 = loc(fused[#loc63, #loc64])
#loc468 = loc(fused[#loc65, #loc66])
#loc469 = loc(fused[#loc68, #loc69])
#loc470 = loc(fused[#loc70, #loc71])
#loc471 = loc(fused[#loc72, #loc73])
#loc472 = loc(fused[#loc74, #loc66])
#loc473 = loc(fused[#loc78, #loc79])
#loc474 = loc(fused[#loc82, #loc83])
#loc475 = loc(fused[#loc84, #loc85])
#loc476 = loc(fused[#loc86, #loc87])
#loc477 = loc(fused[#loc89, #loc90])
#loc478 = loc(fused[#loc91, #loc85])
#loc479 = loc(fused[#loc95, #loc93])
#loc480 = loc(fused[#loc98, #loc99])
#loc481 = loc(fused[#loc101, #loc102])
#loc482 = loc(fused[#loc103, #loc104])
#loc483 = loc(fused[#loc105, #loc102])
#loc484 = loc(fused[#loc108, #loc109])
#loc485 = loc(fused[#loc110, #loc111])
#loc486 = loc(fused[#loc112, #loc113])
#loc487 = loc(fused[#loc114, #loc115])
#loc488 = loc(fused[#loc117, #loc118])
#loc489 = loc(fused[#loc119, #loc120])
#loc490 = loc(fused[#loc121, #loc122])
#loc491 = loc(fused[#loc125, #loc123])
#loc492 = loc(fused[#loc127, #loc128])
#loc493 = loc(fused[#loc129, #loc130])
#loc494 = loc(fused[#loc131, #loc132])
#loc495 = loc(fused[#loc135, #loc136])
#loc496 = loc(fused[#loc134, #loc136])
#loc497 = loc(fused[#loc133, #loc132])
#loc498 = loc(fused[#loc137, #loc138])
#loc499 = loc(fused[#loc139, #loc140])
#loc500 = loc(fused[#loc141, #loc138])
#loc501 = loc(fused[#loc145, #loc146])
#loc502 = loc(fused[#loc148, #loc147])
#loc503 = loc(fused[#loc149, #loc150])
#loc504 = loc(fused[#loc152, #loc151])
#loc505 = loc(fused[#loc156, #loc155])
#loc506 = loc(fused[#loc157, #loc158])
#loc507 = loc(fused[#loc159, #loc160])
#loc508 = loc(fused[#loc161, #loc162, #loc163, #loc158])
#loc509 = loc(fused[#loc165, #loc164])
#loc510 = loc(fused[#loc168, #loc169])
#loc511 = loc(fused[#loc171, #loc170])
#loc512 = loc(fused[#loc172, #loc173])
#loc513 = loc(fused[#loc179, #loc178])
#loc514 = loc(fused[#loc183, #loc184])
#loc516 = loc(fused[#loc189, #loc188])
#loc517 = loc(fused[#loc190, #loc191])
#loc518 = loc(fused[#loc192, #loc193])
#loc519 = loc(fused[#loc196, #loc194])
#loc520 = loc(fused[#loc198, #loc199])
#loc521 = loc(fused[#loc200, #loc201])
#loc522 = loc(fused[#loc202, #loc203])
#loc523 = loc(fused[#loc206, #loc207])
#loc524 = loc(fused[#loc205, #loc207])
#loc525 = loc(fused[#loc204, #loc203])
#loc526 = loc(fused[#loc208, #loc209])
#loc527 = loc(fused[#loc210, #loc211])
#loc528 = loc(fused[#loc212, #loc209])
#loc529 = loc(fused[#loc216, #loc217])
#loc530 = loc(fused[#loc219, #loc218])
#loc531 = loc(fused[#loc220, #loc221])
#loc532 = loc(fused[#loc223, #loc222])
#loc533 = loc(fused[#loc227, #loc226])
#loc534 = loc(fused[#loc228, #loc229])
#loc535 = loc(fused[#loc230, #loc231])
#loc536 = loc(fused[#loc232, #loc233, #loc234, #loc229])
#loc537 = loc(fused[#loc236, #loc235])
#loc538 = loc(fused[#loc239, #loc240])
#loc539 = loc(fused[#loc242, #loc241])
#loc540 = loc(fused[#loc243, #loc244])
#loc541 = loc(fused[#loc250, #loc249])
#loc542 = loc(fused[#loc255, #loc256])
#loc544 = loc(fused[#loc260, #loc261])
#loc545 = loc(fused[#loc262, #loc263])
#loc546 = loc(fused[#loc264, #loc265])
#loc547 = loc(fused[#loc266, #loc267])
#loc548 = loc(fused[#loc268, #loc269])
#loc549 = loc(fused[#loc270, #loc271])
#loc550 = loc(fused[#loc276, #loc277])
#loc551 = loc(fused[#loc278, #loc279])
#loc552 = loc(fused[#loc280, #loc281])
#loc553 = loc(fused[#loc282, #loc279])
#loc554 = loc(fused[#loc284, #loc285])
#loc555 = loc(fused[#loc287, #loc288])
#loc556 = loc(fused[#loc289, #loc290])
#loc557 = loc(fused[#loc292, #loc291])
#loc558 = loc(fused[#loc295, #loc296])
#loc559 = loc(fused[#loc299, #loc300])
#loc560 = loc(fused[#loc301, #loc302])
#loc561 = loc(fused[#loc304, #loc305])
#loc562 = loc(fused[#loc306, #loc307])
#loc563 = loc(fused[#loc308, #loc309])
#loc564 = loc(fused[#loc310, #loc302])
#loc565 = loc(fused[#loc314, #loc315])
#loc566 = loc(fused[#loc318, #loc319])
#loc567 = loc(fused[#loc320, #loc321])
#loc568 = loc(fused[#loc322, #loc323])
#loc569 = loc(fused[#loc325, #loc326])
#loc570 = loc(fused[#loc327, #loc321])
#loc571 = loc(fused[#loc331, #loc329])
#loc572 = loc(fused[#loc334, #loc335])
#loc573 = loc(fused[#loc337, #loc338])
#loc574 = loc(fused[#loc339, #loc340])
#loc575 = loc(fused[#loc341, #loc338])
#loc576 = loc(fused[#loc345, #loc346])
#loc577 = loc(fused[#loc347, #loc348])
#loc578 = loc(fused[#loc351, #loc349])
#loc579 = loc(fused[#loc353, #loc354])
#loc580 = loc(fused[#loc355, #loc356])
#loc581 = loc(fused[#loc357, #loc358])
#loc582 = loc(fused[#loc361, #loc362])
#loc583 = loc(fused[#loc360, #loc362])
#loc584 = loc(fused[#loc359, #loc358])
#loc585 = loc(fused[#loc363, #loc364])
#loc586 = loc(fused[#loc365, #loc366])
#loc587 = loc(fused[#loc367, #loc364])
#loc588 = loc(fused[#loc371, #loc372])
#loc589 = loc(fused[#loc374, #loc373])
#loc590 = loc(fused[#loc375, #loc376])
#loc591 = loc(fused[#loc378, #loc377])
#loc592 = loc(fused[#loc382, #loc381])
#loc593 = loc(fused[#loc383, #loc384])
#loc594 = loc(fused[#loc385, #loc386])
#loc595 = loc(fused[#loc388, #loc390])
#loc596 = loc(fused[#loc391, #loc392, #loc393, #loc384])
#loc597 = loc(fused[#loc395, #loc394])
#loc598 = loc(fused[#loc398, #loc399])
#loc599 = loc(fused[#loc401, #loc400])
#loc600 = loc(fused[#loc402, #loc403])
#loc601 = loc(fused[#loc409, #loc408])
#loc602 = loc(fused[#loc413, #loc414])
#loc603 = loc(fused[#loc417, #loc418])
#loc604 = loc(fused[#loc419, #loc420])
#loc605 = loc(fused[#loc425, #loc426])
#loc608 = loc(fused[#loc442, #loc441])
