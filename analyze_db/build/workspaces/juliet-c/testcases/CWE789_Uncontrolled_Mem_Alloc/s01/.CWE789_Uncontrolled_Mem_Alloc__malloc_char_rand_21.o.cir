!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":31:21)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":31:28)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":78:26)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":78:33)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":121:26)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":121:33)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":159:25)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":159:32)
#true = #cir.bool<true> : !cir.bool
#loc274 = loc(fused[#loc19, #loc20])
#loc301 = loc(fused[#loc86, #loc87])
#loc325 = loc(fused[#loc150, #loc151])
#loc349 = loc(fused[#loc212, #loc213])
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc266)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc267)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc268)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc269)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc271)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc16)
  cir.func internal private @badSink(%arg0: !u64i loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc274)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc21)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc267)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc24)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc278)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc280)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc281)
            cir.if %7 {
              %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc38)
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc39)
              %10 = cir.const #cir.int<1> : !u64i loc(#loc283)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc284)
              %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc38)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc285)
              cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
              cir.scope {
                %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc288)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc49)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc50)
                  %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc51)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
                } loc(#loc289)
              } loc(#loc287)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc52)
              %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc11)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc11)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
              %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc55)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc56)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
            } else {
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc16)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc16)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc58)
            } loc(#loc282)
          } loc(#loc279)
        } loc(#loc277)
      } loc(#loc276)
    } loc(#loc275)
    cir.return loc(#loc18)
  } loc(#loc273)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc291)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc63)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc292)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc65)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc65)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc293)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %6 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc267)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    cir.call @badSink(%7) : (!u64i) -> () loc(#loc71)
    cir.return loc(#loc60)
  } loc(#loc290)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc296)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc297)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc76)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc298)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc78)
    cir.return loc(#loc73)
  } loc(#loc295)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc299)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc83)
  cir.func internal private @goodB2G1Sink(%arg0: !u64i loc(fused[#loc86, #loc87])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc301)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc88)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc299)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc91)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc91)
      cir.if %3 {
        %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc82)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc82)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc95)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc305)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc102)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc307)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc308)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc107)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc107)
              %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc309)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc105)
                cir.yield %14 : !cir.bool loc(#loc105)
              }, false {
                %14 = cir.const #false loc(#loc105)
                cir.yield %14 : !cir.bool loc(#loc105)
              }) : (!cir.bool) -> !cir.bool loc(#loc105)
              cir.yield %13 : !cir.bool loc(#loc105)
            }, false {
              %9 = cir.const #false loc(#loc105)
              cir.yield %9 : !cir.bool loc(#loc105)
            }) : (!cir.bool) -> !cir.bool loc(#loc105)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc111)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc112)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc311)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc312)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc313)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc314)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc316)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc122)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc123)
                  %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc124)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
                } loc(#loc317)
              } loc(#loc315)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc125)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc127)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc127)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc129)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc130)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc130)
            } else {
              %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc83)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc83)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc132)
            } loc(#loc310)
          } loc(#loc306)
        } loc(#loc304)
      } loc(#loc303)
    } loc(#loc302)
    cir.return loc(#loc85)
  } loc(#loc300)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc319)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc137)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc320)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc139)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc321)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %6 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc299)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    cir.call @goodB2G1Sink(%7) : (!u64i) -> () loc(#loc145)
    cir.return loc(#loc134)
  } loc(#loc318)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc323)
  cir.func internal private @goodB2G2Sink(%arg0: !u64i loc(fused[#loc150, #loc151])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc325)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc323)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc155)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc329)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc163)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc331)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc332)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc167)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc168)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc168)
              %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc333)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc166)
                cir.yield %14 : !cir.bool loc(#loc166)
              }, false {
                %14 = cir.const #false loc(#loc166)
                cir.yield %14 : !cir.bool loc(#loc166)
              }) : (!cir.bool) -> !cir.bool loc(#loc166)
              cir.yield %13 : !cir.bool loc(#loc166)
            }, false {
              %9 = cir.const #false loc(#loc166)
              cir.yield %9 : !cir.bool loc(#loc166)
            }) : (!cir.bool) -> !cir.bool loc(#loc166)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc172)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc173)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc335)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc336)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc337)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc338)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc181)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc181)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc340)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc183)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc184)
                  %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc185)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc183)
                } loc(#loc341)
              } loc(#loc339)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc186)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc188)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc188)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc186)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc190)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc191)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc192)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc191)
            } else {
              %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc193)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc193)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc194)
            } loc(#loc334)
          } loc(#loc330)
        } loc(#loc328)
      } loc(#loc327)
    } loc(#loc326)
    cir.return loc(#loc149)
  } loc(#loc324)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc343)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc199)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc199)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc344)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc201)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc201)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc345)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %6 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc323)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc206)
    cir.call @goodB2G2Sink(%7) : (!u64i) -> () loc(#loc207)
    cir.return loc(#loc196)
  } loc(#loc342)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc347)
  cir.func internal private @goodG2BSink(%arg0: !u64i loc(fused[#loc212, #loc213])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc349)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc214)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc347)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc217)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc217)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc353)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc225)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc355)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc356)
            cir.if %7 {
              %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc231)
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc232)
              %10 = cir.const #cir.int<1> : !u64i loc(#loc358)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc359)
              %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc231)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc360)
              cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc361)
              cir.scope {
                %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc240)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc240)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc363)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc242)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc243)
                  %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc244)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc242)
                } loc(#loc364)
              } loc(#loc362)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc245)
              %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc247)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc247)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc245)
              %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc248)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc249)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc250)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc251)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc250)
            } else {
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc252)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc252)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc253)
            } loc(#loc357)
          } loc(#loc354)
        } loc(#loc352)
      } loc(#loc351)
    } loc(#loc350)
    cir.return loc(#loc211)
  } loc(#loc348)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc366)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc258)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc258)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc367)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc260)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc260)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc368)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc262)
    %6 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc347)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc264)
    cir.call @goodG2BSink(%7) : (!u64i) -> () loc(#loc265)
    cir.return loc(#loc255)
  } loc(#loc365)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":29:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":29:24)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":141:1)
#loc10 = loc("/usr/include/string.h":142:14)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":45:34)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("/usr/include/stdlib.h":687:1)
#loc15 = loc("/usr/include/stdlib.h":687:32)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":51:27)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":31:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":55:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":32:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":33:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":54:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":33:8)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":34:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":35:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":53:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":36:13)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":36:20)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":40:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":52:13)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":40:17)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":40:24)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":40:43)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":41:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":48:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":50:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":42:36)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":42:43)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":42:48)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":42:59)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":42:60)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":42:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":43:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":43:49)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":43:21)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":43:33)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":43:39)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":43:40)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":43:46)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":43:45)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":45:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":45:24)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":46:27)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":46:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":47:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":47:22)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":51:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":57:1)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":66:1)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":59:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":59:12)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":61:12)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":61:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":63:12)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":63:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":63:17)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":64:17)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":64:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":65:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":65:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":196:1)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":201:1)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":198:5)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":198:14)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":199:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":199:14)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":200:5)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":200:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":73:1)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":73:29)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":83:19)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":103:27)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":78:1)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":107:1)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":79:1)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":80:5)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":106:5)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":80:8)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":81:5)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":84:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":86:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":83:9)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":87:9)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":105:9)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":88:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":88:20)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":92:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":104:13)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":92:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":92:24)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":92:43)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":92:45)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":92:48)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":92:55)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":93:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":100:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":102:13)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":94:36)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":94:43)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":94:48)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":94:59)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":94:60)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":94:17)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":95:17)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":95:49)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":95:21)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":95:33)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":95:39)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":95:40)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":95:46)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":95:45)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":97:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":97:24)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":97:34)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":98:27)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":98:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":99:17)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":99:22)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":103:17)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":109:1)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":118:1)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":111:5)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":111:12)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":113:12)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":113:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":115:12)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":115:5)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":115:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":116:22)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":116:5)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":117:18)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":117:5)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":74:1)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":74:29)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":121:1)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":145:1)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":122:1)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":123:5)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":144:5)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":123:8)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":124:5)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":125:9)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":143:9)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":126:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":126:20)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":130:13)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":142:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":130:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":130:24)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":130:43)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":130:45)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":130:48)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":130:55)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":131:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":138:13)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":140:13)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":132:36)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":132:43)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":132:48)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":132:59)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":132:60)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":132:17)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":133:17)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":133:49)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":133:21)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":133:33)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":133:39)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":133:40)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":133:46)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":133:45)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":135:17)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":135:24)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":135:34)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":136:27)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":136:17)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":137:17)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":137:22)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":141:27)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":141:17)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":147:1)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":156:1)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":149:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":149:12)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":151:12)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":151:5)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":153:12)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":153:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":153:17)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":154:22)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":154:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":155:18)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":155:5)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":75:1)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":75:28)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":159:1)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":183:1)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":160:1)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":161:5)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":182:5)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":161:8)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":162:5)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":163:9)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":181:9)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":164:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":164:20)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":168:13)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":180:13)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":168:17)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":168:24)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":168:43)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":169:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":176:13)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":178:13)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":170:36)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":170:43)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":170:48)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":170:59)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":170:60)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":170:17)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":171:17)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":171:49)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":171:21)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":171:33)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":171:39)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":171:40)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":171:46)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":171:45)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":173:17)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":173:24)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":173:34)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":174:27)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":174:17)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":175:17)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":175:22)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":179:27)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":179:17)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":185:1)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":194:1)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":187:5)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":187:12)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":189:12)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":189:5)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":191:12)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":191:5)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":192:21)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":192:5)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":193:17)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_21.c":193:5)
#loc266 = loc(fused[#loc1, #loc2])
#loc267 = loc(fused[#loc3, #loc4])
#loc268 = loc(fused[#loc5, #loc6])
#loc269 = loc(fused[#loc7, #loc8])
#loc270 = loc(fused[#loc9, #loc10])
#loc271 = loc(fused[#loc12, #loc13])
#loc272 = loc(fused[#loc14, #loc15])
#loc273 = loc(fused[#loc17, #loc18])
#loc275 = loc(fused[#loc22, #loc23])
#loc276 = loc(fused[#loc25, #loc23])
#loc277 = loc(fused[#loc26, #loc27])
#loc278 = loc(fused[#loc28, #loc29])
#loc279 = loc(fused[#loc30, #loc31])
#loc280 = loc(fused[#loc33, #loc34])
#loc281 = loc(fused[#loc32, #loc34])
#loc282 = loc(fused[#loc35, #loc36, #loc37, #loc31])
#loc283 = loc(fused[#loc40, #loc41])
#loc284 = loc(fused[#loc39, #loc41])
#loc285 = loc(fused[#loc38, #loc42])
#loc286 = loc(fused[#loc43, #loc42])
#loc287 = loc(fused[#loc44, #loc45])
#loc288 = loc(fused[#loc46, #loc47])
#loc289 = loc(fused[#loc48, #loc45])
#loc290 = loc(fused[#loc59, #loc60])
#loc291 = loc(fused[#loc61, #loc62])
#loc292 = loc(fused[#loc64, #loc63])
#loc293 = loc(fused[#loc66, #loc67])
#loc294 = loc(fused[#loc69, #loc68])
#loc295 = loc(fused[#loc72, #loc73])
#loc296 = loc(fused[#loc74, #loc75])
#loc297 = loc(fused[#loc76, #loc77])
#loc298 = loc(fused[#loc78, #loc79])
#loc299 = loc(fused[#loc80, #loc81])
#loc300 = loc(fused[#loc84, #loc85])
#loc302 = loc(fused[#loc89, #loc90])
#loc303 = loc(fused[#loc92, #loc93, #loc94, #loc90])
#loc304 = loc(fused[#loc96, #loc97])
#loc305 = loc(fused[#loc98, #loc99])
#loc306 = loc(fused[#loc100, #loc101])
#loc307 = loc(fused[#loc103, #loc104])
#loc308 = loc(fused[#loc102, #loc104])
#loc309 = loc(fused[#loc106, #loc107])
#loc310 = loc(fused[#loc108, #loc109, #loc110, #loc101])
#loc311 = loc(fused[#loc113, #loc114])
#loc312 = loc(fused[#loc112, #loc114])
#loc313 = loc(fused[#loc111, #loc115])
#loc314 = loc(fused[#loc116, #loc115])
#loc315 = loc(fused[#loc117, #loc118])
#loc316 = loc(fused[#loc119, #loc120])
#loc317 = loc(fused[#loc121, #loc118])
#loc318 = loc(fused[#loc133, #loc134])
#loc319 = loc(fused[#loc135, #loc136])
#loc320 = loc(fused[#loc138, #loc137])
#loc321 = loc(fused[#loc140, #loc141])
#loc322 = loc(fused[#loc143, #loc142])
#loc323 = loc(fused[#loc146, #loc147])
#loc324 = loc(fused[#loc148, #loc149])
#loc326 = loc(fused[#loc153, #loc154])
#loc327 = loc(fused[#loc156, #loc154])
#loc328 = loc(fused[#loc157, #loc158])
#loc329 = loc(fused[#loc159, #loc160])
#loc330 = loc(fused[#loc161, #loc162])
#loc331 = loc(fused[#loc164, #loc165])
#loc332 = loc(fused[#loc163, #loc165])
#loc333 = loc(fused[#loc167, #loc168])
#loc334 = loc(fused[#loc169, #loc170, #loc171, #loc162])
#loc335 = loc(fused[#loc174, #loc175])
#loc336 = loc(fused[#loc173, #loc175])
#loc337 = loc(fused[#loc172, #loc176])
#loc338 = loc(fused[#loc177, #loc176])
#loc339 = loc(fused[#loc178, #loc179])
#loc340 = loc(fused[#loc180, #loc181])
#loc341 = loc(fused[#loc182, #loc179])
#loc342 = loc(fused[#loc195, #loc196])
#loc343 = loc(fused[#loc197, #loc198])
#loc344 = loc(fused[#loc200, #loc199])
#loc345 = loc(fused[#loc202, #loc203])
#loc346 = loc(fused[#loc205, #loc204])
#loc347 = loc(fused[#loc208, #loc209])
#loc348 = loc(fused[#loc210, #loc211])
#loc350 = loc(fused[#loc215, #loc216])
#loc351 = loc(fused[#loc218, #loc216])
#loc352 = loc(fused[#loc219, #loc220])
#loc353 = loc(fused[#loc221, #loc222])
#loc354 = loc(fused[#loc223, #loc224])
#loc355 = loc(fused[#loc226, #loc227])
#loc356 = loc(fused[#loc225, #loc227])
#loc357 = loc(fused[#loc228, #loc229, #loc230, #loc224])
#loc358 = loc(fused[#loc233, #loc234])
#loc359 = loc(fused[#loc232, #loc234])
#loc360 = loc(fused[#loc231, #loc235])
#loc361 = loc(fused[#loc236, #loc235])
#loc362 = loc(fused[#loc237, #loc238])
#loc363 = loc(fused[#loc239, #loc240])
#loc364 = loc(fused[#loc241, #loc238])
#loc365 = loc(fused[#loc254, #loc255])
#loc366 = loc(fused[#loc256, #loc257])
#loc367 = loc(fused[#loc259, #loc258])
#loc368 = loc(fused[#loc261, #loc260])
#loc369 = loc(fused[#loc263, #loc262])
