!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc109 = loc("../../../testcasesupport/std_testcase.h":96:16)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":155:10)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":155:14)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":155:20)
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":155:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc255 = loc(fused[#loc170, #loc171])
#loc256 = loc(fused[#loc172, #loc173])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc186)
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc187)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc188)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc189)
  cir.func @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_103badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc19)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc20)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc195)
    %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc197)
    cir.br ^bb3 loc(#loc198)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc199)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc200)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc32)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
    cir.br ^bb5 loc(#loc26)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc16)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc16)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc201)
  ^bb9:  // pred: ^bb8
    %17 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc35)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc202)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc37)
    cir.call @_ZdlPv(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc38)
    cir.br ^bb11 loc(#loc34)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc34)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc10)
  } loc(#loc190)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc41)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc204)
  cir.func internal private @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc207)
    cir.br ^bb1 loc(#loc208)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc209)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc54)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc55)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc210)
    %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc54)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc211)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc212)
    cir.br ^bb3 loc(#loc213)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc214)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc215)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc67)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
    cir.br ^bb5 loc(#loc61)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc51)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc51)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc216)
  ^bb9:  // pred: ^bb8
    %17 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc203)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc217)
  ^bb10:  // pred: ^bb9
    %20 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc41)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb12 loc(#loc72)
  ^bb11:  // pred: ^bb9
    %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc75)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc76)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
    cir.br ^bb12 loc(#loc69)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc69)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc45)
  } loc(#loc205)
  cir.func internal private @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc85)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc222)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc87)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc88)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc223)
    %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc224)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc225)
    cir.br ^bb3 loc(#loc226)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc227)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc228)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc98)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc100)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
    cir.br ^bb5 loc(#loc94)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc94)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc84)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc229)
  ^bb9:  // pred: ^bb8
    %17 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc103)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc230)
  ^bb10:  // pred: ^bb9
    %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc105)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc106)
    cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb11 loc(#loc102)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc102)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc78)
  } loc(#loc218)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc231)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc109)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc109)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
    cir.return loc(#loc109)
  } loc(#loc109)
  cir.func internal private @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc234)
    cir.br ^bb1 loc(#loc235)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc203)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc118)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc236)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc122)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb4 loc(#loc120)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<8> : !u64i loc(#loc237)
    %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc126)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc237)
    cir.call @_ZN14_twoIntsStructC2Ev(%9) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr) loc(#loc125)
    cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc238)
    cir.br ^bb4 loc(#loc117)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc239)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc130)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc240)
  ^bb7:  // pred: ^bb6
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc132)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc126)
    cir.br ^bb8 loc(#loc129)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc129)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc111)
  } loc(#loc232)
  cir.func internal private @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc243)
    cir.br ^bb1 loc(#loc244)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc141)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc245)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<8> : !u64i loc(#loc246)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc145)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc246)
    cir.call @_ZN14_twoIntsStructC2Ev(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr) loc(#loc144)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc247)
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc248)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc149)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc249)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc151)
    cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc145)
    cir.br ^bb7 loc(#loc148)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc148)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc134)
  } loc(#loc241)
  cir.func @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_104goodEv() extra(#fn_attr1) {
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10L8goodB2G1Ev() : () -> () loc(#loc154)
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10L8goodB2G2Ev() : () -> () loc(#loc155)
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10L8goodG2B1Ev() : () -> () loc(#loc156)
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10L8goodG2B2Ev() : () -> () loc(#loc157)
    cir.return loc(#loc153)
  } loc(#loc250)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc251)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc252)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc167)
  cir.func @main(%arg0: !s32i loc(fused[#loc170, #loc171]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc172, #loc173])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc255)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc256)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc169)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc174)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc175)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc176)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc176)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc177)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc164)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_104goodEv() : () -> () loc(#loc179)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc165)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc166)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_103badEv() : () -> () loc(#loc182)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc167)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc184)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    cir.return %15 : !s32i loc(#loc257)
  } loc(#loc254)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdlib.h":675:1)
#loc4 = loc("/usr/include/stdlib.h":676:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":25:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":42:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":27:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":27:21)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":29:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":29:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":30:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":35:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":30:8)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":31:5)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":33:33)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":33:40)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":33:45)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":33:65)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":33:66)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":33:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":34:9)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":34:37)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":34:13)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":34:21)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":34:27)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":34:28)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":34:34)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":34:33)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":36:5)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":41:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":36:8)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":37:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":40:16)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":25:6)
#loc39 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc40 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":63:19)
#loc42 = loc("/usr/include/stdlib.h":687:1)
#loc43 = loc("/usr/include/stdlib.h":687:32)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":49:1)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":70:1)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":51:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":51:21)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":53:12)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":53:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":54:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":59:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":54:8)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":55:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":57:33)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":57:40)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":57:45)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":57:65)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":57:66)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":57:9)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":58:9)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":58:37)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":58:13)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":58:21)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":58:27)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":58:28)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":58:34)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":58:33)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":60:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":69:5)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":60:8)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":61:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":64:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":66:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":63:9)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":68:9)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":68:14)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":73:1)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":89:1)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":75:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":75:21)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":77:12)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":77:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":78:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":83:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":78:8)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":79:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":81:33)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":81:40)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":81:45)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":81:65)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":81:66)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":81:9)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":82:9)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":82:37)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":82:13)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":82:21)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":82:27)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":82:28)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":82:34)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":82:33)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":84:5)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":88:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":84:8)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":85:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":87:9)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":87:14)
#loc107 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc108 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":92:1)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":113:1)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":94:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":94:21)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":96:12)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":96:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":97:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":106:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":97:8)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":98:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":101:5)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":103:5)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":100:19)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":100:9)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":105:16)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":105:20)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":92:13)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":105:9)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":107:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":112:5)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":107:8)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":108:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":111:16)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":116:1)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":132:1)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":118:5)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":118:21)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":120:12)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":120:5)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":121:5)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":125:5)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":121:8)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":122:5)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":124:16)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":124:20)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":116:13)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":124:9)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":126:5)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":131:5)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":126:8)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":127:5)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":130:16)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":134:1)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":140:1)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":136:5)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":137:5)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":138:5)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":139:5)
#loc158 = loc("/usr/include/stdlib.h":575:1)
#loc159 = loc("/usr/include/stdlib.h":575:41)
#loc160 = loc("/usr/include/time.h":76:1)
#loc161 = loc("/usr/include/time.h":76:38)
#loc162 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc163 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":160:15)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":162:15)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":165:15)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":167:15)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":155:1)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":170:1)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":156:1)
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":158:27)
#loc176 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":158:22)
#loc177 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":158:5)
#loc178 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":160:5)
#loc179 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":161:5)
#loc180 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":162:5)
#loc181 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":165:5)
#loc182 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":166:5)
#loc183 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":167:5)
#loc184 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":169:12)
#loc185 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_calloc_10.cpp":169:5)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc3, #loc4])
#loc188 = loc(fused[#loc5, #loc6])
#loc189 = loc(fused[#loc7, #loc8])
#loc190 = loc(fused[#loc9, #loc10])
#loc191 = loc(fused[#loc11, #loc12])
#loc192 = loc(fused[#loc14, #loc13])
#loc193 = loc(fused[#loc15, #loc16])
#loc194 = loc(fused[#loc18, #loc16])
#loc195 = loc(fused[#loc21, #loc22])
#loc196 = loc(fused[#loc19, #loc23])
#loc197 = loc(fused[#loc24, #loc23])
#loc198 = loc(fused[#loc25, #loc26])
#loc199 = loc(fused[#loc27, #loc28])
#loc200 = loc(fused[#loc29, #loc26])
#loc201 = loc(fused[#loc33, #loc34])
#loc202 = loc(fused[#loc36, #loc34])
#loc203 = loc(fused[#loc39, #loc40])
#loc204 = loc(fused[#loc42, #loc43])
#loc205 = loc(fused[#loc44, #loc45])
#loc206 = loc(fused[#loc46, #loc47])
#loc207 = loc(fused[#loc49, #loc48])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc53, #loc51])
#loc210 = loc(fused[#loc56, #loc57])
#loc211 = loc(fused[#loc54, #loc58])
#loc212 = loc(fused[#loc59, #loc58])
#loc213 = loc(fused[#loc60, #loc61])
#loc214 = loc(fused[#loc62, #loc63])
#loc215 = loc(fused[#loc64, #loc61])
#loc216 = loc(fused[#loc68, #loc69])
#loc217 = loc(fused[#loc71, #loc72, #loc73, #loc69])
#loc218 = loc(fused[#loc77, #loc78])
#loc219 = loc(fused[#loc79, #loc80])
#loc220 = loc(fused[#loc82, #loc81])
#loc221 = loc(fused[#loc83, #loc84])
#loc222 = loc(fused[#loc86, #loc84])
#loc223 = loc(fused[#loc89, #loc90])
#loc224 = loc(fused[#loc87, #loc91])
#loc225 = loc(fused[#loc92, #loc91])
#loc226 = loc(fused[#loc93, #loc94])
#loc227 = loc(fused[#loc95, #loc96])
#loc228 = loc(fused[#loc97, #loc94])
#loc229 = loc(fused[#loc101, #loc102])
#loc230 = loc(fused[#loc104, #loc102])
#loc231 = loc(fused[#loc107, #loc108])
#loc232 = loc(fused[#loc110, #loc111])
#loc233 = loc(fused[#loc112, #loc113])
#loc234 = loc(fused[#loc115, #loc114])
#loc235 = loc(fused[#loc116, #loc117])
#loc236 = loc(fused[#loc119, #loc120, #loc121, #loc117])
#loc237 = loc(fused[#loc124, #loc125])
#loc238 = loc(fused[#loc127, #loc125])
#loc239 = loc(fused[#loc128, #loc129])
#loc240 = loc(fused[#loc131, #loc129])
#loc241 = loc(fused[#loc133, #loc134])
#loc242 = loc(fused[#loc135, #loc136])
#loc243 = loc(fused[#loc138, #loc137])
#loc244 = loc(fused[#loc139, #loc140])
#loc245 = loc(fused[#loc142, #loc140])
#loc246 = loc(fused[#loc143, #loc144])
#loc247 = loc(fused[#loc146, #loc144])
#loc248 = loc(fused[#loc147, #loc148])
#loc249 = loc(fused[#loc150, #loc148])
#loc250 = loc(fused[#loc152, #loc153])
#loc251 = loc(fused[#loc158, #loc159])
#loc252 = loc(fused[#loc160, #loc161])
#loc253 = loc(fused[#loc162, #loc163])
#loc254 = loc(fused[#loc168, #loc169])
#loc257 = loc(fused[#loc185, #loc184])
