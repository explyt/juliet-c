!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc208)
  cir.global "private" constant cir_private @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_653badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc209)
  cir.func private @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_657badSinkEPc(!cir.ptr<!s8i>) loc(#loc210)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc211)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc212)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc213)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc214)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc215)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc216)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc217)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
  cir.func private @close(!s32i) -> !s32i loc(#loc219)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_653badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc209)
    %3 = cir.get_global @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_657badSinkEPc : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc30)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc222)
    %4 = cir.get_global @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_653badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc209)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc209)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc225)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc226)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc227)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc228)
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc229)
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc230)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc42)
      cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc228)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc44)
      %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc44)
      cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc229)
      %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc47)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc47)
      cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc230)
      cir.scope {
        cir.do {
          cir.scope {
            %21 = cir.const #cir.int<2> : !s32i loc(#loc53)
            %22 = cir.const #cir.int<1> : !u32i loc(#loc54)
            %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc54)
            %24 = cir.const #cir.int<6> : !u32i loc(#loc55)
            %25 = cir.cast(integral, %24 : !u32i), !s32i loc(#loc55)
            %26 = cir.call @socket(%21, %23, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
            cir.store %26, %11 : !s32i, !cir.ptr<!s32i> loc(#loc233)
            cir.scope {
              %79 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc61)
              %80 = cir.const #cir.int<1> : !s32i loc(#loc62)
              %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc62)
              %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc235)
              cir.if %82 {
                cir.break loc(#loc64)
              } loc(#loc236)
            } loc(#loc234)
            %27 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc237)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc67)
            %29 = cir.const #cir.int<16> : !u64i loc(#loc238)
            cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc239)
            %30 = cir.const #cir.int<2> : !s32i loc(#loc72)
            %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc72)
            %32 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc240)
            %33 = cir.const #cir.int<0> : !s32i loc(#loc75)
            %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc75)
            %35 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
            %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
            cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc241)
            %37 = cir.const #cir.int<27015> : !s32i loc(#loc79)
            %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc79)
            %39 = cir.call @htons(%38) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc80)
            %40 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
            cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc242)
            cir.scope {
              %79 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc86)
              %80 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc244)
              %81 = cir.const #cir.int<16> : !u64i loc(#loc245)
              %82 = cir.cast(integral, %81 : !u64i), !u32i loc(#loc245)
              %83 = cir.call @bind(%79, %80, %82) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
              %84 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc92)
              %86 = cir.cmp(eq, %83, %85) : !s32i, !cir.bool loc(#loc246)
              cir.if %86 {
                cir.break loc(#loc94)
              } loc(#loc247)
            } loc(#loc243)
            cir.scope {
              %79 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %80 = cir.const #cir.int<5> : !s32i loc(#loc98)
              %81 = cir.call @listen(%79, %80) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
              %82 = cir.const #cir.int<1> : !s32i loc(#loc100)
              %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc100)
              %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc249)
              cir.if %84 {
                cir.break loc(#loc102)
              } loc(#loc250)
            } loc(#loc248)
            %41 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            %42 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
            %43 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
            %44 = cir.call @accept(%41, %42, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
            cir.store %44, %12 : !s32i, !cir.ptr<!s32i> loc(#loc251)
            cir.scope {
              %79 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %80 = cir.const #cir.int<1> : !s32i loc(#loc112)
              %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc112)
              %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc253)
              cir.if %82 {
                cir.break loc(#loc114)
              } loc(#loc254)
            } loc(#loc252)
            %45 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
            %47 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc117)
            %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc118)
            %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc255)
            %50 = cir.const #cir.int<1> : !u64i loc(#loc256)
            %51 = cir.const #cir.int<4096> : !s32i loc(#loc123)
            %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc123)
            %53 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc124)
            %54 = cir.binop(sub, %52, %53) : !u64i loc(#loc257)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc125)
            %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc125)
            %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc258)
            %58 = cir.binop(mul, %50, %57) : !u64i loc(#loc259)
            %59 = cir.const #cir.int<0> : !s32i loc(#loc127)
            %60 = cir.call @recv(%45, %49, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc128)
            %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc128)
            cir.store %61, %8 : !s32i, !cir.ptr<!s32i> loc(#loc260)
            cir.scope {
              %79 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc133)
              %80 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc134)
              %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc262)
              %83 = cir.ternary(%82, true {
                %84 = cir.const #true loc(#loc135)
                cir.yield %84 : !cir.bool loc(#loc135)
              }, false {
                %84 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %85 = cir.const #cir.int<0> : !s32i loc(#loc137)
                %86 = cir.cmp(eq, %84, %85) : !s32i, !cir.bool loc(#loc263)
                %87 = cir.ternary(%86, true {
                  %88 = cir.const #true loc(#loc135)
                  cir.yield %88 : !cir.bool loc(#loc135)
                }, false {
                  %88 = cir.const #false loc(#loc135)
                  cir.yield %88 : !cir.bool loc(#loc135)
                }) : (!cir.bool) -> !cir.bool loc(#loc135)
                cir.yield %87 : !cir.bool loc(#loc135)
              }) : (!cir.bool) -> !cir.bool loc(#loc135)
              cir.if %83 {
                cir.break loc(#loc139)
              } loc(#loc264)
            } loc(#loc261)
            %62 = cir.const #cir.int<0> : !s8i loc(#loc140)
            %63 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
            %64 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc142)
            %65 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc143)
            %67 = cir.const #cir.int<1> : !u64i loc(#loc265)
            %68 = cir.binop(div, %66, %67) : !u64i loc(#loc266)
            %69 = cir.binop(add, %64, %68) : !u64i loc(#loc267)
            %70 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %69 : !u64i), !cir.ptr<!s8i> loc(#loc146)
            cir.store %62, %70 : !s8i, !cir.ptr<!s8i> loc(#loc268)
            %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
            %72 = cir.const #cir.int<13> : !s8i loc(#loc148)
            %73 = cir.cast(integral, %72 : !s8i), !s32i loc(#loc148)
            %74 = cir.call @strchr(%71, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc149)
            cir.store %74, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
            cir.scope {
              %79 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
              %80 = cir.cast(ptr_to_bool, %79 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
              cir.if %80 {
                %81 = cir.const #cir.int<0> : !s8i loc(#loc156)
                %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc272)
              } loc(#loc271)
            } loc(#loc270)
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
            %76 = cir.const #cir.int<10> : !s8i loc(#loc160)
            %77 = cir.cast(integral, %76 : !s8i), !s32i loc(#loc160)
            %78 = cir.call @strchr(%75, %77) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc161)
            cir.store %78, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
            cir.scope {
              %79 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
              %80 = cir.cast(ptr_to_bool, %79 : !cir.ptr<!s8i>), !cir.bool loc(#loc166)
              cir.if %80 {
                %81 = cir.const #cir.int<0> : !s8i loc(#loc168)
                %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc276)
              } loc(#loc275)
            } loc(#loc274)
          } loc(#loc232)
          cir.yield loc(#loc50)
        } while {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc171)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc171)
          cir.condition(%22) loc(#loc171)
        } loc(#loc231)
      } loc(#loc231)
      cir.scope {
        %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc174)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc175)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc175)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc278)
        cir.if %24 {
          %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc177)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc178)
        } loc(#loc279)
      } loc(#loc277)
      cir.scope {
        %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc181)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc182)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc182)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc281)
        cir.if %24 {
          %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc184)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc185)
        } loc(#loc282)
      } loc(#loc280)
    } loc(#loc224)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc186)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc186)
    cir.return loc(#loc26)
  } loc(#loc220)
  cir.func private @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_6511goodG2BSinkEPc(!cir.ptr<!s8i>) loc(#loc283)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc284)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc192)
  cir.func internal private @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc287)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc208)
    %3 = cir.get_global @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_6511goodG2BSinkEPc : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc198)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc287)
    %4 = cir.get_global @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc208)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc208)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc199)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc201)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc192)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc192)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc201)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc203)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc203)
    cir.return loc(#loc194)
  } loc(#loc285)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_654goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65L7goodG2BEv() : () -> () loc(#loc207)
    cir.return loc(#loc206)
  } loc(#loc289)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":159:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":159:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":63:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":63:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":56:1)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":56:25)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/netinet/in.h":402:1)
#loc12 = loc("/usr/include/netinet/in.h":403:40)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc21 = loc("/usr/include/string.h":226:1)
#loc22 = loc("/usr/include/string.h":227:50)
#loc23 = loc("/usr/include/unistd.h":358:1)
#loc24 = loc("/usr/include/unistd.h":358:27)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":58:1)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":146:1)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":60:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":60:12)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":62:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":62:32)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":64:12)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":64:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":65:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":143:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":70:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":70:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":71:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":71:28)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":72:9)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":72:15)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":73:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":73:31)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":74:9)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":74:31)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":75:9)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":75:37)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":75:26)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":75:33)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":76:9)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":128:17)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":77:9)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":127:9)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":86:35)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":86:44)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":86:57)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":86:28)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":86:13)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":86:68)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":87:13)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":90:13)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":87:17)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":87:33)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":88:13)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":89:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":91:20)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":91:21)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":91:30)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":91:33)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":91:47)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":91:13)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":91:48)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":92:34)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":92:13)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":93:39)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":93:13)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":94:38)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":94:32)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":94:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":94:46)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":95:13)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":98:13)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":95:22)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":95:54)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":95:55)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":95:64)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":95:78)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":95:17)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":95:84)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":96:13)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":97:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":99:13)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":102:13)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":99:24)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":99:38)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":99:17)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":99:57)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":100:13)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":101:17)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":103:35)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":103:49)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":103:55)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":103:28)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":103:13)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":103:59)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":104:13)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":107:13)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":104:17)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":104:33)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":105:13)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":106:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:31)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:54)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:61)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:59)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:45)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:68)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:71)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:82)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:87)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:102)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:112)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:113)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:116)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:26)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:13)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":109:117)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":110:13)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":113:13)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":110:17)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":110:31)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":110:44)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":110:47)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":110:61)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":111:13)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":112:17)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":115:57)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":115:13)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":115:18)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":115:28)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":115:41)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":115:52)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":115:53)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":117:30)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":117:36)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":117:23)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":117:13)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":117:40)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":118:13)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":121:13)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":118:17)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":119:13)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":120:28)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":120:18)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":120:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":122:30)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":122:36)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":122:23)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":122:13)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":122:40)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":123:13)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":126:13)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":123:17)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":124:13)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":125:28)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":125:18)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":125:17)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":128:16)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":129:9)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":132:9)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":129:13)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":129:29)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":130:9)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":131:26)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":131:13)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":133:9)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":136:9)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":133:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":133:29)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":134:9)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":135:26)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":135:13)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":145:5)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":145:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":153:1)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":153:29)
#loc190 = loc("/usr/include/string.h":149:1)
#loc191 = loc("/usr/include/string.h":150:14)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":162:18)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":155:1)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":164:1)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":157:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":157:12)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":158:5)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":158:32)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":160:12)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":160:5)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":162:5)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":162:12)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":163:5)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":163:13)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":166:1)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":169:1)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_65a.cpp":168:5)
#loc208 = loc(fused[#loc1, #loc2])
#loc209 = loc(fused[#loc3, #loc4])
#loc210 = loc(fused[#loc5, #loc6])
#loc211 = loc(fused[#loc7, #loc8])
#loc212 = loc(fused[#loc9, #loc10])
#loc213 = loc(fused[#loc11, #loc12])
#loc214 = loc(fused[#loc13, #loc14])
#loc215 = loc(fused[#loc15, #loc16])
#loc216 = loc(fused[#loc17, #loc18])
#loc217 = loc(fused[#loc19, #loc20])
#loc218 = loc(fused[#loc21, #loc22])
#loc219 = loc(fused[#loc23, #loc24])
#loc220 = loc(fused[#loc25, #loc26])
#loc221 = loc(fused[#loc27, #loc28])
#loc222 = loc(fused[#loc29, #loc30])
#loc223 = loc(fused[#loc32, #loc31])
#loc224 = loc(fused[#loc33, #loc34])
#loc225 = loc(fused[#loc35, #loc36])
#loc226 = loc(fused[#loc37, #loc38])
#loc227 = loc(fused[#loc39, #loc40])
#loc228 = loc(fused[#loc41, #loc42])
#loc229 = loc(fused[#loc43, #loc44])
#loc230 = loc(fused[#loc45, #loc46])
#loc231 = loc(fused[#loc49, #loc50])
#loc232 = loc(fused[#loc51, #loc52])
#loc233 = loc(fused[#loc57, #loc58])
#loc234 = loc(fused[#loc59, #loc60])
#loc235 = loc(fused[#loc61, #loc62])
#loc236 = loc(fused[#loc63, #loc60])
#loc237 = loc(fused[#loc65, #loc66])
#loc238 = loc(fused[#loc68, #loc69])
#loc239 = loc(fused[#loc70, #loc71])
#loc240 = loc(fused[#loc74, #loc72])
#loc241 = loc(fused[#loc78, #loc75])
#loc242 = loc(fused[#loc82, #loc83])
#loc243 = loc(fused[#loc84, #loc85])
#loc244 = loc(fused[#loc87, #loc88])
#loc245 = loc(fused[#loc89, #loc90])
#loc246 = loc(fused[#loc91, #loc92])
#loc247 = loc(fused[#loc93, #loc85])
#loc248 = loc(fused[#loc95, #loc96])
#loc249 = loc(fused[#loc99, #loc100])
#loc250 = loc(fused[#loc101, #loc96])
#loc251 = loc(fused[#loc107, #loc108])
#loc252 = loc(fused[#loc109, #loc110])
#loc253 = loc(fused[#loc111, #loc112])
#loc254 = loc(fused[#loc113, #loc110])
#loc255 = loc(fused[#loc119, #loc120])
#loc256 = loc(fused[#loc121, #loc122])
#loc257 = loc(fused[#loc123, #loc124])
#loc258 = loc(fused[#loc123, #loc125])
#loc259 = loc(fused[#loc121, #loc126])
#loc260 = loc(fused[#loc129, #loc130])
#loc261 = loc(fused[#loc131, #loc132])
#loc262 = loc(fused[#loc133, #loc134])
#loc263 = loc(fused[#loc136, #loc137])
#loc264 = loc(fused[#loc138, #loc132])
#loc265 = loc(fused[#loc144, #loc145])
#loc266 = loc(fused[#loc143, #loc145])
#loc267 = loc(fused[#loc142, #loc145])
#loc268 = loc(fused[#loc141, #loc140])
#loc269 = loc(fused[#loc150, #loc151])
#loc270 = loc(fused[#loc152, #loc153])
#loc271 = loc(fused[#loc155, #loc153])
#loc272 = loc(fused[#loc158, #loc156])
#loc273 = loc(fused[#loc162, #loc163])
#loc274 = loc(fused[#loc164, #loc165])
#loc275 = loc(fused[#loc167, #loc165])
#loc276 = loc(fused[#loc170, #loc168])
#loc277 = loc(fused[#loc172, #loc173])
#loc278 = loc(fused[#loc174, #loc175])
#loc279 = loc(fused[#loc176, #loc173])
#loc280 = loc(fused[#loc179, #loc180])
#loc281 = loc(fused[#loc181, #loc182])
#loc282 = loc(fused[#loc183, #loc180])
#loc283 = loc(fused[#loc188, #loc189])
#loc284 = loc(fused[#loc190, #loc191])
#loc285 = loc(fused[#loc193, #loc194])
#loc286 = loc(fused[#loc195, #loc196])
#loc287 = loc(fused[#loc197, #loc198])
#loc288 = loc(fused[#loc200, #loc199])
#loc289 = loc(fused[#loc205, #loc206])
