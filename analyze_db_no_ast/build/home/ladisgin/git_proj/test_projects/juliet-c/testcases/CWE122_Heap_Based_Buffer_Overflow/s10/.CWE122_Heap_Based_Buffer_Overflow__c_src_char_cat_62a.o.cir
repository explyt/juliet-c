!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc78)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc79)
  cir.func private  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc80)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc81)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc82)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc83)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc85)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc18)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc86)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc87)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc88)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
      %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc91)
      cir.if %10 {
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc30)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc92)
    } loc(#loc90)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc31)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc94)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc94)
      cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc94)
      %10 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc36)
      %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc37)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      %13 = cir.call @strcat(%11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc41)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
      cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc41)
    } loc(#loc93)
    cir.return loc(#loc14)
  } loc(#loc84)
  cir.func private  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc95)
  cir.func internal private  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc49)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc50)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc98)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc99)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc58)
      %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc103)
      cir.if %10 {
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc60)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc61)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc62)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc60)
      } loc(#loc104)
    } loc(#loc102)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc63)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc106)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc106)
      cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc106)
      %10 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc68)
      %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc69)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      %13 = cir.call @strcat(%11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc68)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc73)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
      cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
    } loc(#loc105)
    cir.return loc(#loc46)
  } loc(#loc96)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62L7goodG2BEv() : () -> () loc(#loc77)
    cir.return loc(#loc76)
  } loc(#loc107)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":27:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":27:28)
#loc7 = loc("/usr/include/string.h":149:1)
#loc8 = loc("/usr/include/string.h":150:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":29:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":42:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":31:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":31:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":32:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":32:27)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":32:31)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":32:42)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":32:43)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":32:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":33:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":33:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":33:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":33:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":33:23)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":33:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":33:30)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":33:29)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":34:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":35:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":41:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":36:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":36:25)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":38:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":38:16)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":38:22)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":39:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":39:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":40:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":40:14)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":49:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":49:32)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":51:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":64:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":53:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":53:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":54:20)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":54:27)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":54:31)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":54:42)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":54:43)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":54:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":55:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":55:33)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":55:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":55:17)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":55:23)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":55:24)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":55:30)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":55:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":56:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":57:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":63:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":58:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":58:25)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":60:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":60:16)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":60:22)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":61:19)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":61:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":62:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":62:14)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":66:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":69:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_62a.cpp":68:5)
#loc78 = loc(fused[#loc1, #loc2])
#loc79 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc5, #loc6])
#loc81 = loc(fused[#loc7, #loc8])
#loc82 = loc(fused[#loc9, #loc10])
#loc83 = loc(fused[#loc11, #loc12])
#loc84 = loc(fused[#loc13, #loc14])
#loc85 = loc(fused[#loc15, #loc16])
#loc86 = loc(fused[#loc19, #loc20])
#loc87 = loc(fused[#loc18, #loc20])
#loc88 = loc(fused[#loc17, #loc21])
#loc89 = loc(fused[#loc22, #loc21])
#loc90 = loc(fused[#loc23, #loc24])
#loc91 = loc(fused[#loc25, #loc26])
#loc92 = loc(fused[#loc27, #loc24])
#loc93 = loc(fused[#loc32, #loc33])
#loc94 = loc(fused[#loc34, #loc35])
#loc95 = loc(fused[#loc43, #loc44])
#loc96 = loc(fused[#loc45, #loc46])
#loc97 = loc(fused[#loc47, #loc48])
#loc98 = loc(fused[#loc51, #loc52])
#loc99 = loc(fused[#loc50, #loc52])
#loc100 = loc(fused[#loc49, #loc53])
#loc101 = loc(fused[#loc54, #loc53])
#loc102 = loc(fused[#loc55, #loc56])
#loc103 = loc(fused[#loc57, #loc58])
#loc104 = loc(fused[#loc59, #loc56])
#loc105 = loc(fused[#loc64, #loc65])
#loc106 = loc(fused[#loc66, #loc67])
#loc107 = loc(fused[#loc75, #loc76])
