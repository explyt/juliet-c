!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":24:23)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":24:28)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":59:27)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":59:32)
#loc123 = loc(fused[#loc3, #loc4])
#loc150 = loc(fused[#loc67, #loc68])
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func internal private @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc123)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc5)
    %1 = cir.const #cir.int<2147483647> : !s32i loc(#loc6)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc7)
    %3 = cir.binop(div, %1, %2) : !s32i loc(#loc124)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc8)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc124)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.return loc(#loc2)
  } loc(#loc122)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc126)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc127)
  cir.func private @printIntLine(!s32i) loc(#loc128)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc129)
  cir.func @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.call @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc25)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc134)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc135)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc32)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc33)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc136)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc137)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc32)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc138)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc41)
        %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc141)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc43)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc45)
          cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr1) loc(#loc43)
        } loc(#loc142)
      } loc(#loc140)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc48)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc48)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc144)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc50)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc51)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc145)
          cir.condition(%24) loc(#loc145)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc55)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc56)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc147)
          } loc(#loc146)
          cir.yield loc(#loc47)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc57)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc58)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc148)
          cir.yield loc(#loc143)
        } loc(#loc143)
      } loc(#loc143)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc60)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc61)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc62)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc63)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc64)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc63)
    } loc(#loc133)
    cir.return loc(#loc19)
  } loc(#loc130)
  cir.func internal private @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc67, #loc68])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc150)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc69)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc70)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.return loc(#loc66)
  } loc(#loc149)
  cir.func internal private @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc77)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.call @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc79)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc156)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc157)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc86)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc87)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc158)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc159)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc86)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc160)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc161)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc95)
        %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc163)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc97)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc98)
          %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc99)
          cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr1) loc(#loc97)
        } loc(#loc164)
      } loc(#loc162)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc102)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc166)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc104)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc105)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc167)
          cir.condition(%24) loc(#loc167)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc107)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc109)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc110)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc169)
          } loc(#loc168)
          cir.yield loc(#loc101)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc111)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc112)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc170)
          cir.yield loc(#loc165)
        } loc(#loc165)
      } loc(#loc165)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc114)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc115)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc113)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc116)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc117)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc118)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc117)
    } loc(#loc155)
    cir.return loc(#loc73)
  } loc(#loc152)
  cir.func @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_434goodEv() extra(#fn_attr) {
    cir.call @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43L7goodG2BEv() : () -> () loc(#loc121)
    cir.return loc(#loc120)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":24:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":30:1)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":25:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":27:12)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":27:22)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":27:26)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":27:5)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":32:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":52:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":34:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":34:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":36:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":36:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":36:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":37:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":38:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":51:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":39:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":39:16)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":40:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":40:14)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":43:28)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":43:35)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":43:42)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":43:52)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":43:53)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":43:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":44:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":44:43)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":44:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":44:27)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":44:33)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":44:34)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":44:40)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":44:39)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":45:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":48:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":45:18)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":45:14)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":45:21)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":45:33)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":46:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":47:29)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":47:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":47:24)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":47:25)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":45:40)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":45:39)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":49:22)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":49:33)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":49:34)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":49:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":50:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":50:14)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":59:1)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":63:1)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":60:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":62:12)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":62:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":65:1)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":85:1)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":67:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":67:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":69:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":69:12)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":69:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":70:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":71:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":84:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":72:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":72:16)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":73:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":73:14)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":76:28)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":76:35)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":76:42)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":76:52)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":76:53)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":76:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":77:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":77:43)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":77:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":77:27)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":77:33)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":77:34)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":77:40)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":77:39)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":78:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":81:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":78:18)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":78:14)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":78:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":78:33)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":79:9)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":80:29)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":80:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":80:24)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":80:25)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":78:40)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":78:39)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":82:22)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":82:33)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":82:34)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":82:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":83:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":83:14)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":87:1)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":90:1)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_43.cpp":89:5)
#loc122 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc6, #loc7])
#loc125 = loc(fused[#loc9, #loc8])
#loc126 = loc(fused[#loc10, #loc11])
#loc127 = loc(fused[#loc12, #loc13])
#loc128 = loc(fused[#loc14, #loc15])
#loc129 = loc(fused[#loc16, #loc17])
#loc130 = loc(fused[#loc18, #loc19])
#loc131 = loc(fused[#loc20, #loc21])
#loc132 = loc(fused[#loc24, #loc22])
#loc133 = loc(fused[#loc26, #loc27])
#loc134 = loc(fused[#loc28, #loc29])
#loc135 = loc(fused[#loc30, #loc31])
#loc136 = loc(fused[#loc34, #loc35])
#loc137 = loc(fused[#loc33, #loc35])
#loc138 = loc(fused[#loc32, #loc36])
#loc139 = loc(fused[#loc37, #loc36])
#loc140 = loc(fused[#loc38, #loc39])
#loc141 = loc(fused[#loc40, #loc41])
#loc142 = loc(fused[#loc42, #loc39])
#loc143 = loc(fused[#loc46, #loc47])
#loc144 = loc(fused[#loc49, #loc48])
#loc145 = loc(fused[#loc50, #loc51])
#loc146 = loc(fused[#loc52, #loc47])
#loc147 = loc(fused[#loc54, #loc53])
#loc148 = loc(fused[#loc58, #loc57])
#loc149 = loc(fused[#loc65, #loc66])
#loc151 = loc(fused[#loc71, #loc70])
#loc152 = loc(fused[#loc72, #loc73])
#loc153 = loc(fused[#loc74, #loc75])
#loc154 = loc(fused[#loc78, #loc76])
#loc155 = loc(fused[#loc80, #loc81])
#loc156 = loc(fused[#loc82, #loc83])
#loc157 = loc(fused[#loc84, #loc85])
#loc158 = loc(fused[#loc88, #loc89])
#loc159 = loc(fused[#loc87, #loc89])
#loc160 = loc(fused[#loc86, #loc90])
#loc161 = loc(fused[#loc91, #loc90])
#loc162 = loc(fused[#loc92, #loc93])
#loc163 = loc(fused[#loc94, #loc95])
#loc164 = loc(fused[#loc96, #loc93])
#loc165 = loc(fused[#loc100, #loc101])
#loc166 = loc(fused[#loc103, #loc102])
#loc167 = loc(fused[#loc104, #loc105])
#loc168 = loc(fused[#loc106, #loc101])
#loc169 = loc(fused[#loc108, #loc107])
#loc170 = loc(fused[#loc112, #loc111])
#loc171 = loc(fused[#loc119, #loc120])
