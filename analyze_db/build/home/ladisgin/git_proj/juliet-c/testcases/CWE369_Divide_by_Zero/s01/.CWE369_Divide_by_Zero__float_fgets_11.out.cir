!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":204:10)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":204:14)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":204:20)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":204:32)
#loc293 = loc(fused[#loc77, #loc78])
#loc294 = loc(fused[#loc79, #loc80])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc261)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc262)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc263)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc264)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc266)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc18)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc269)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc271)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc271)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc274)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc31)
            %8 = cir.const #cir.int<20> : !s32i loc(#loc32)
            %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc263)
            %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
            %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
            %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
            %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc276)
            cir.if %14 {
              %15 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc39)
              %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc40)
              %17 = cir.cast(floating, %16 : !cir.double), !cir.float loc(#loc40)
              cir.store %17, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc278)
            } else {
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc43)
            } loc(#loc277)
          } loc(#loc275)
        } loc(#loc273)
      } loc(#loc272)
    } loc(#loc270)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc280)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc280)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc46)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc46)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc283)
          %7 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc53)
          %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc54)
          %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc54)
          %10 = cir.binop(div, %7, %9) : !cir.double loc(#loc284)
          %11 = cir.cast(float_to_int, %10 : !cir.double), !s32i loc(#loc284)
          cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc283)
          %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc55)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc56)
        } loc(#loc282)
      } loc(#loc281)
    } loc(#loc279)
    cir.return loc(#loc15)
  } loc(#loc267)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc286)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc287)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc288)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc289)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc58)
  } loc(#loc285)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc290)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc74)
  cir.func @main(%arg0: !s32i loc(fused[#loc77, #loc78]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc79, #loc80])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc293)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc294)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc76)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc81)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc82)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc83)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc83)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc84)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc71)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc295)
    cir.call @CWE369_Divide_by_Zero__float_fgets_11_good() : () -> () loc(#loc86)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc72)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc73)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc296)
    cir.call @CWE369_Divide_by_Zero__float_fgets_11_bad() : () -> () loc(#loc90)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc74)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    cir.return %17 : !s32i loc(#loc297)
  } loc(#loc292)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc298)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc98)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc300)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc103)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc301)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc303)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc303)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc107)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc107)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc306)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc116)
            %8 = cir.const #cir.int<20> : !s32i loc(#loc117)
            %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc263)
            %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc118)
            %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc119)
            %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
            %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc308)
            cir.if %14 {
              %15 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc124)
              %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc125)
              %17 = cir.cast(floating, %16 : !cir.double), !cir.float loc(#loc125)
              cir.store %17, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc310)
            } else {
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc128)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc128)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc129)
            } loc(#loc309)
          } loc(#loc307)
        } loc(#loc305)
      } loc(#loc304)
    } loc(#loc302)
    cir.scope {
      %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc312)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc312)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc132)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc132)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc137)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc140)
          %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc140)
          %8 = cir.fabs %7 : !cir.double loc(#loc140)
          %9 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc141)
          %10 = cir.cmp(gt, %8, %9) : !cir.double, !cir.bool loc(#loc315)
          cir.if %10 {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc317)
            %12 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc148)
            %13 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc149)
            %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc149)
            %15 = cir.binop(div, %12, %14) : !cir.double loc(#loc318)
            %16 = cir.cast(float_to_int, %15 : !cir.double), !s32i loc(#loc318)
            cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc317)
            %17 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc150)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc151)
          } else {
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc98)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc98)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc152)
          } loc(#loc316)
        } loc(#loc314)
      } loc(#loc313)
    } loc(#loc311)
    cir.return loc(#loc100)
  } loc(#loc299)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc157)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc321)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc323)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc323)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc161)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc161)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc326)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc170)
            %8 = cir.const #cir.int<20> : !s32i loc(#loc171)
            %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc263)
            %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc172)
            %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc173)
            %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
            %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc328)
            cir.if %14 {
              %15 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc178)
              %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc179)
              %17 = cir.cast(floating, %16 : !cir.double), !cir.float loc(#loc179)
              cir.store %17, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc330)
            } else {
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc182)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc182)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc183)
            } loc(#loc329)
          } loc(#loc327)
        } loc(#loc325)
      } loc(#loc324)
    } loc(#loc322)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc332)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc332)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc186)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc186)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc191)
          %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc191)
          %8 = cir.fabs %7 : !cir.double loc(#loc191)
          %9 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc192)
          %10 = cir.cmp(gt, %8, %9) : !cir.double, !cir.bool loc(#loc335)
          cir.if %10 {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc337)
            %12 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc199)
            %13 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc200)
            %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc200)
            %15 = cir.binop(div, %12, %14) : !cir.double loc(#loc338)
            %16 = cir.cast(float_to_int, %15 : !cir.double), !s32i loc(#loc338)
            cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc337)
            %17 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc201)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc202)
          } else {
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc203)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc203)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc204)
          } loc(#loc336)
        } loc(#loc334)
      } loc(#loc333)
    } loc(#loc331)
    cir.return loc(#loc154)
  } loc(#loc319)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc340)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc209)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc341)
    cir.scope {
      %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc343)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc343)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc213)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc213)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc218)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc218)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc219)
      } else {
        %6 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc220)
        cir.store %6, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc345)
      } loc(#loc344)
    } loc(#loc342)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc347)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc347)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc224)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc224)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc350)
          %7 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc231)
          %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc232)
          %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc232)
          %10 = cir.binop(div, %7, %9) : !cir.double loc(#loc351)
          %11 = cir.cast(float_to_int, %10 : !cir.double), !s32i loc(#loc351)
          cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc350)
          %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc233)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc234)
        } loc(#loc349)
      } loc(#loc348)
    } loc(#loc346)
    cir.return loc(#loc206)
  } loc(#loc339)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc353)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc239)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc354)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc356)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc356)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc243)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc243)
      cir.if %5 {
        %6 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc246)
        cir.store %6, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc358)
      } loc(#loc357)
    } loc(#loc355)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc360)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc360)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc250)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc250)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc363)
          %7 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc257)
          %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc258)
          %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc258)
          %10 = cir.binop(div, %7, %9) : !cir.double loc(#loc364)
          %11 = cir.cast(float_to_int, %10 : !cir.double), !s32i loc(#loc364)
          cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc363)
          %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc259)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc260)
        } loc(#loc362)
      } loc(#loc361)
    } loc(#loc359)
    cir.return loc(#loc236)
  } loc(#loc352)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":102:1)
#loc8 = loc("/usr/include/stdlib.h":103:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":43:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":26:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":55:1)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":28:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":28:11)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":30:12)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":30:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":31:5)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":46:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":31:8)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":31:26)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":32:5)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":33:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":45:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":34:13)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":34:45)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":36:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":44:13)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":36:23)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":36:36)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":36:53)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":36:17)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":36:63)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":37:13)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":40:13)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":42:13)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":39:36)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":39:31)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":39:17)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":39:47)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":43:17)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":47:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":54:5)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":47:8)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":47:26)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":48:5)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":49:9)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":53:9)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":51:13)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":51:44)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":51:32)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":51:40)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":52:26)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":52:13)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":187:1)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":193:1)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":189:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":189:14)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":190:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":190:14)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":191:5)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":191:14)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":192:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":192:14)
#loc67 = loc("/usr/include/stdlib.h":575:1)
#loc68 = loc("/usr/include/stdlib.h":575:41)
#loc69 = loc("/usr/include/time.h":76:1)
#loc70 = loc("/usr/include/time.h":76:38)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":209:15)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":211:15)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":214:15)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":216:15)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":204:1)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":219:1)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":205:1)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":207:27)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":207:22)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":207:5)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":209:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":210:5)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":210:48)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":211:5)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":214:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":215:5)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":215:47)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":216:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":218:12)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":218:5)
#loc95 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc96 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":86:19)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":98:23)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":62:1)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":101:1)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":64:5)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":64:11)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":66:12)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":66:5)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":67:5)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":82:5)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":67:8)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":67:26)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":68:5)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":69:9)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":81:9)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":70:13)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":70:45)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":72:13)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":80:13)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":72:23)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":72:36)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":72:53)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":72:17)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":72:63)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":73:13)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":76:13)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":78:13)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":75:36)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":75:31)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":75:17)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":75:47)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":79:27)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":79:17)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":83:5)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":100:5)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":83:8)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":83:27)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":84:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":87:5)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":89:5)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":86:9)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":91:9)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":99:9)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":91:17)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":91:25)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":91:12)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":92:9)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":95:9)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":97:9)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":93:13)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":93:44)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":93:32)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":93:40)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":94:26)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":94:13)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":98:13)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":104:1)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":138:1)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":106:5)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":106:11)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":108:12)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":108:5)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":109:5)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":124:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":109:8)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":109:26)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":110:5)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":111:9)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":123:9)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":112:13)
#loc167 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":112:45)
#loc168 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":114:13)
#loc169 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":122:13)
#loc170 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":114:23)
#loc171 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":114:36)
#loc172 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":114:53)
#loc173 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":114:17)
#loc174 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":114:63)
#loc175 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":115:13)
#loc176 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":118:13)
#loc177 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":120:13)
#loc178 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":117:36)
#loc179 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":117:31)
#loc180 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":117:17)
#loc181 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":117:47)
#loc182 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":121:27)
#loc183 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":121:17)
#loc184 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":125:5)
#loc185 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":137:5)
#loc186 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":125:8)
#loc187 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":125:26)
#loc188 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":126:5)
#loc189 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":128:9)
#loc190 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":136:9)
#loc191 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":128:17)
#loc192 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":128:25)
#loc193 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":128:12)
#loc194 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":129:9)
#loc195 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":132:9)
#loc196 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":134:9)
#loc197 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":130:13)
#loc198 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":130:44)
#loc199 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":130:32)
#loc200 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":130:40)
#loc201 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":131:26)
#loc202 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":131:13)
#loc203 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":135:23)
#loc204 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":135:13)
#loc205 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":141:1)
#loc206 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":164:1)
#loc207 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":143:5)
#loc208 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":143:11)
#loc209 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":145:12)
#loc210 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":145:5)
#loc211 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":146:5)
#loc212 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":155:5)
#loc213 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":146:8)
#loc214 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":146:27)
#loc215 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":147:5)
#loc216 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":150:5)
#loc217 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":152:5)
#loc218 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":149:19)
#loc219 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":149:9)
#loc220 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":154:16)
#loc221 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":154:9)
#loc222 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":156:5)
#loc223 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":163:5)
#loc224 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":156:8)
#loc225 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":156:26)
#loc226 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":157:5)
#loc227 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":158:9)
#loc228 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":162:9)
#loc229 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":160:13)
#loc230 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":160:44)
#loc231 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":160:32)
#loc232 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":160:40)
#loc233 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":161:26)
#loc234 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":161:13)
#loc235 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":167:1)
#loc236 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":185:1)
#loc237 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":169:5)
#loc238 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":169:11)
#loc239 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":171:12)
#loc240 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":171:5)
#loc241 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":172:5)
#loc242 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":176:5)
#loc243 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":172:8)
#loc244 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":172:26)
#loc245 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":173:5)
#loc246 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":175:16)
#loc247 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":175:9)
#loc248 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":177:5)
#loc249 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":184:5)
#loc250 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":177:8)
#loc251 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":177:26)
#loc252 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":178:5)
#loc253 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":179:9)
#loc254 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":183:9)
#loc255 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":181:13)
#loc256 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":181:44)
#loc257 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":181:32)
#loc258 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":181:40)
#loc259 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":182:26)
#loc260 = loc("CWE369_Divide_by_Zero__float_fgets_11.c":182:13)
#loc261 = loc(fused[#loc1, #loc2])
#loc262 = loc(fused[#loc3, #loc4])
#loc263 = loc(fused[#loc5, #loc6])
#loc264 = loc(fused[#loc7, #loc8])
#loc265 = loc(fused[#loc9, #loc10])
#loc266 = loc(fused[#loc12, #loc13])
#loc267 = loc(fused[#loc14, #loc15])
#loc268 = loc(fused[#loc16, #loc17])
#loc269 = loc(fused[#loc19, #loc18])
#loc270 = loc(fused[#loc20, #loc21])
#loc271 = loc(fused[#loc22, #loc23])
#loc272 = loc(fused[#loc24, #loc21])
#loc273 = loc(fused[#loc25, #loc26])
#loc274 = loc(fused[#loc27, #loc28])
#loc275 = loc(fused[#loc29, #loc30])
#loc276 = loc(fused[#loc34, #loc35])
#loc277 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc278 = loc(fused[#loc41, #loc42])
#loc279 = loc(fused[#loc44, #loc45])
#loc280 = loc(fused[#loc46, #loc47])
#loc281 = loc(fused[#loc48, #loc45])
#loc282 = loc(fused[#loc49, #loc50])
#loc283 = loc(fused[#loc51, #loc52])
#loc284 = loc(fused[#loc53, #loc54])
#loc285 = loc(fused[#loc57, #loc58])
#loc286 = loc(fused[#loc59, #loc60])
#loc287 = loc(fused[#loc61, #loc62])
#loc288 = loc(fused[#loc63, #loc64])
#loc289 = loc(fused[#loc65, #loc66])
#loc290 = loc(fused[#loc67, #loc68])
#loc291 = loc(fused[#loc69, #loc70])
#loc292 = loc(fused[#loc75, #loc76])
#loc295 = loc(fused[#loc86, #loc87])
#loc296 = loc(fused[#loc90, #loc91])
#loc297 = loc(fused[#loc94, #loc93])
#loc298 = loc(fused[#loc95, #loc96])
#loc299 = loc(fused[#loc99, #loc100])
#loc300 = loc(fused[#loc101, #loc102])
#loc301 = loc(fused[#loc104, #loc103])
#loc302 = loc(fused[#loc105, #loc106])
#loc303 = loc(fused[#loc107, #loc108])
#loc304 = loc(fused[#loc109, #loc106])
#loc305 = loc(fused[#loc110, #loc111])
#loc306 = loc(fused[#loc112, #loc113])
#loc307 = loc(fused[#loc114, #loc115])
#loc308 = loc(fused[#loc119, #loc120])
#loc309 = loc(fused[#loc121, #loc122, #loc123, #loc115])
#loc310 = loc(fused[#loc126, #loc127])
#loc311 = loc(fused[#loc130, #loc131])
#loc312 = loc(fused[#loc132, #loc133])
#loc313 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc314 = loc(fused[#loc138, #loc139])
#loc315 = loc(fused[#loc142, #loc141])
#loc316 = loc(fused[#loc143, #loc144, #loc145, #loc139])
#loc317 = loc(fused[#loc146, #loc147])
#loc318 = loc(fused[#loc148, #loc149])
#loc319 = loc(fused[#loc153, #loc154])
#loc320 = loc(fused[#loc155, #loc156])
#loc321 = loc(fused[#loc158, #loc157])
#loc322 = loc(fused[#loc159, #loc160])
#loc323 = loc(fused[#loc161, #loc162])
#loc324 = loc(fused[#loc163, #loc160])
#loc325 = loc(fused[#loc164, #loc165])
#loc326 = loc(fused[#loc166, #loc167])
#loc327 = loc(fused[#loc168, #loc169])
#loc328 = loc(fused[#loc173, #loc174])
#loc329 = loc(fused[#loc175, #loc176, #loc177, #loc169])
#loc330 = loc(fused[#loc180, #loc181])
#loc331 = loc(fused[#loc184, #loc185])
#loc332 = loc(fused[#loc186, #loc187])
#loc333 = loc(fused[#loc188, #loc185])
#loc334 = loc(fused[#loc189, #loc190])
#loc335 = loc(fused[#loc193, #loc192])
#loc336 = loc(fused[#loc194, #loc195, #loc196, #loc190])
#loc337 = loc(fused[#loc197, #loc198])
#loc338 = loc(fused[#loc199, #loc200])
#loc339 = loc(fused[#loc205, #loc206])
#loc340 = loc(fused[#loc207, #loc208])
#loc341 = loc(fused[#loc210, #loc209])
#loc342 = loc(fused[#loc211, #loc212])
#loc343 = loc(fused[#loc213, #loc214])
#loc344 = loc(fused[#loc215, #loc216, #loc217, #loc212])
#loc345 = loc(fused[#loc221, #loc220])
#loc346 = loc(fused[#loc222, #loc223])
#loc347 = loc(fused[#loc224, #loc225])
#loc348 = loc(fused[#loc226, #loc223])
#loc349 = loc(fused[#loc227, #loc228])
#loc350 = loc(fused[#loc229, #loc230])
#loc351 = loc(fused[#loc231, #loc232])
#loc352 = loc(fused[#loc235, #loc236])
#loc353 = loc(fused[#loc237, #loc238])
#loc354 = loc(fused[#loc240, #loc239])
#loc355 = loc(fused[#loc241, #loc242])
#loc356 = loc(fused[#loc243, #loc244])
#loc357 = loc(fused[#loc245, #loc242])
#loc358 = loc(fused[#loc247, #loc246])
#loc359 = loc(fused[#loc248, #loc249])
#loc360 = loc(fused[#loc250, #loc251])
#loc361 = loc(fused[#loc252, #loc249])
#loc362 = loc(fused[#loc253, #loc254])
#loc363 = loc(fused[#loc255, #loc256])
#loc364 = loc(fused[#loc257, #loc258])
