!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":30:67)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":30:74)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":62:71)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":62:78)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":90:71)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":90:78)
#true = #cir.bool<true> : !cir.bool
#loc158 = loc(fused[#loc15, #loc16])
#loc175 = loc(fused[#loc59, #loc60])
#loc192 = loc(fused[#loc106, #loc107])
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc152)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc153)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc12)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc160)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc18)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!u64i> loc(#loc18)
    cir.store %4, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc159)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc22)
    %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc23)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc162)
      cir.scope {
        %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc30)
        %9 = cir.const #cir.int<5> : !u64i loc(#loc164)
        %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc165)
        cir.if %10 {
          %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc36)
          %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %13 = cir.const #cir.int<1> : !u64i loc(#loc167)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc168)
          %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
          cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
          cir.scope {
            %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc172)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc47)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc49)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc47)
            } loc(#loc173)
          } loc(#loc171)
          %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc50)
          %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
          %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc50)
          %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc53)
          %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc54)
          %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
          cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc54)
        } else {
          %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc12)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc56)
        } loc(#loc166)
      } loc(#loc163)
    } loc(#loc161)
    cir.return loc(#loc14)
  } loc(#loc157)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc59, #loc60])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc177)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc65)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc62)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!u64i> loc(#loc62)
    cir.store %4, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc176)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc66)
    %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc179)
      cir.scope {
        %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc74)
        %9 = cir.const #cir.int<5> : !u64i loc(#loc181)
        %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc182)
        cir.if %10 {
          %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc80)
          %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc81)
          %13 = cir.const #cir.int<1> : !u64i loc(#loc184)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc185)
          %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
          cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
          cir.scope {
            %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc189)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc91)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc93)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
            } loc(#loc190)
          } loc(#loc188)
          %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc94)
          %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc96)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc96)
          %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
          %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc99)
          %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
          cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc99)
        } else {
          %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc101)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc101)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc102)
        } loc(#loc183)
      } loc(#loc180)
    } loc(#loc178)
    cir.return loc(#loc58)
  } loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc103)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b_goodB2GSink(%arg0: !cir.ptr<!void> loc(fused[#loc106, #loc107])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc194)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc112)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc109)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!u64i> loc(#loc109)
    cir.store %4, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc193)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc113)
    %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc114)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc196)
      cir.scope {
        %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc121)
        %9 = cir.const #cir.int<5> : !u64i loc(#loc198)
        %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc199)
        %11 = cir.ternary(%10, true {
          %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc125)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc126)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc126)
          %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc200)
          %16 = cir.ternary(%15, true {
            %17 = cir.const #true loc(#loc124)
            cir.yield %17 : !cir.bool loc(#loc124)
          }, false {
            %17 = cir.const #false loc(#loc124)
            cir.yield %17 : !cir.bool loc(#loc124)
          }) : (!cir.bool) -> !cir.bool loc(#loc124)
          cir.yield %16 : !cir.bool loc(#loc124)
        }, false {
          %12 = cir.const #false loc(#loc124)
          cir.yield %12 : !cir.bool loc(#loc124)
        }) : (!cir.bool) -> !cir.bool loc(#loc124)
        cir.if %11 {
          %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc130)
          %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc131)
          %14 = cir.const #cir.int<1> : !u64i loc(#loc202)
          %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc203)
          %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc204)
          cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
          cir.scope {
            %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc139)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc207)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc141)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc142)
              %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc143)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
            } loc(#loc208)
          } loc(#loc206)
          %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc144)
          %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc146)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc146)
          %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc144)
          %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc148)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc149)
          %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
        } else {
          %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc103)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc103)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc151)
        } loc(#loc201)
      } loc(#loc197)
    } loc(#loc195)
    cir.return loc(#loc105)
  } loc(#loc191)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":46:30)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":52:23)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":30:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":55:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":33:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":33:34)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":35:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":35:28)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":31:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":35:21)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":35:20)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":36:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":54:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":37:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":37:16)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":41:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":53:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":41:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":41:20)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":41:39)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":42:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":49:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":51:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:32)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:39)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:44)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:55)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:56)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:45)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:29)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:35)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:36)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:42)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:41)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":46:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":46:20)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":47:23)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":47:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":48:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":48:18)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":52:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":62:1)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":87:1)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":65:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":65:34)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":67:5)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":67:28)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":63:1)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":67:21)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":67:20)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":68:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":86:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":69:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":69:16)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":73:9)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":85:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":73:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":73:20)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":73:39)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":74:9)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":81:9)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":83:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:32)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:39)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:44)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:55)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:56)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:45)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:29)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:35)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:36)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:42)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:41)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":78:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":78:20)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":78:30)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":79:23)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":79:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":80:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":80:18)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":84:23)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":84:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":112:23)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":90:1)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":115:1)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":93:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":93:34)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":95:5)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":95:28)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":91:1)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":95:21)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":95:20)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":96:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":114:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":97:9)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":97:16)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:9)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":113:9)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:20)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:39)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:41)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:44)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:51)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":102:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":109:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":111:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:32)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:39)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:44)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:55)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:56)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:45)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:17)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:29)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:35)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:36)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:42)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:41)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":106:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":106:20)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":106:30)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":107:23)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":107:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":108:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":108:18)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":112:13)
#loc152 = loc(fused[#loc1, #loc2])
#loc153 = loc(fused[#loc3, #loc4])
#loc154 = loc(fused[#loc5, #loc6])
#loc155 = loc(fused[#loc8, #loc9])
#loc156 = loc(fused[#loc10, #loc11])
#loc157 = loc(fused[#loc13, #loc14])
#loc159 = loc(fused[#loc17, #loc18])
#loc160 = loc(fused[#loc19, #loc20])
#loc161 = loc(fused[#loc24, #loc25])
#loc162 = loc(fused[#loc26, #loc27])
#loc163 = loc(fused[#loc28, #loc29])
#loc164 = loc(fused[#loc31, #loc32])
#loc165 = loc(fused[#loc30, #loc32])
#loc166 = loc(fused[#loc33, #loc34, #loc35, #loc29])
#loc167 = loc(fused[#loc38, #loc39])
#loc168 = loc(fused[#loc37, #loc39])
#loc169 = loc(fused[#loc36, #loc40])
#loc170 = loc(fused[#loc41, #loc40])
#loc171 = loc(fused[#loc42, #loc43])
#loc172 = loc(fused[#loc44, #loc45])
#loc173 = loc(fused[#loc46, #loc43])
#loc174 = loc(fused[#loc57, #loc58])
#loc176 = loc(fused[#loc61, #loc62])
#loc177 = loc(fused[#loc63, #loc64])
#loc178 = loc(fused[#loc68, #loc69])
#loc179 = loc(fused[#loc70, #loc71])
#loc180 = loc(fused[#loc72, #loc73])
#loc181 = loc(fused[#loc75, #loc76])
#loc182 = loc(fused[#loc74, #loc76])
#loc183 = loc(fused[#loc77, #loc78, #loc79, #loc73])
#loc184 = loc(fused[#loc82, #loc83])
#loc185 = loc(fused[#loc81, #loc83])
#loc186 = loc(fused[#loc80, #loc84])
#loc187 = loc(fused[#loc85, #loc84])
#loc188 = loc(fused[#loc86, #loc87])
#loc189 = loc(fused[#loc88, #loc89])
#loc190 = loc(fused[#loc90, #loc87])
#loc191 = loc(fused[#loc104, #loc105])
#loc193 = loc(fused[#loc108, #loc109])
#loc194 = loc(fused[#loc110, #loc111])
#loc195 = loc(fused[#loc115, #loc116])
#loc196 = loc(fused[#loc117, #loc118])
#loc197 = loc(fused[#loc119, #loc120])
#loc198 = loc(fused[#loc122, #loc123])
#loc199 = loc(fused[#loc121, #loc123])
#loc200 = loc(fused[#loc125, #loc126])
#loc201 = loc(fused[#loc127, #loc128, #loc129, #loc120])
#loc202 = loc(fused[#loc132, #loc133])
#loc203 = loc(fused[#loc131, #loc133])
#loc204 = loc(fused[#loc130, #loc134])
#loc205 = loc(fused[#loc135, #loc134])
#loc206 = loc(fused[#loc136, #loc137])
#loc207 = loc(fused[#loc138, #loc139])
#loc208 = loc(fused[#loc140, #loc137])
