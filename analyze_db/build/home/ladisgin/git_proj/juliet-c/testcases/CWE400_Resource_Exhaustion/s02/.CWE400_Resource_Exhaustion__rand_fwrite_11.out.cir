!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":247:10)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":247:14)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":247:20)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":247:32)
#true = #cir.bool<true> : !cir.bool
#loc473 = loc(fused[#loc105, #loc106])
#loc474 = loc(fused[#loc107, #loc108])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc427)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc428)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc5)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc429)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc430)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc431)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc432)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc434)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc437)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc437)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc25)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc25)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc28)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc28)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc28)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc28)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc28)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc28)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc28)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc28)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc28)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc28)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc28)
          cir.yield %24 : !u32i loc(#loc28)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc28)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc28)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc28)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc28)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc28)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc28)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc28)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc28)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc28)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc28)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc28)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc28)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc28)
          cir.yield %28 : !u32i loc(#loc28)
        }) : (!cir.bool) -> !u32i loc(#loc28)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc28)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
      } loc(#loc438)
    } loc(#loc436)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc441)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc441)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc32)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc32)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc444)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc445)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc446)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc38)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc38)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc444)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc40)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc445)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc5)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc5)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc446)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc42)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc447)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc49)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc449)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc51)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc52)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
            } loc(#loc450)
          } loc(#loc448)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc55)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc55)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc452)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc57)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc58)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc453)
              cir.condition(%25) loc(#loc59)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc456)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc65)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc457)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc458)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc65)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc459)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc73)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc74)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc73)
                  } loc(#loc460)
                } loc(#loc455)
              } loc(#loc454)
              cir.yield loc(#loc54)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc75)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc76)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc461)
              cir.yield loc(#loc451)
            } loc(#loc451)
          } loc(#loc451)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc79)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc82)
            } loc(#loc463)
          } loc(#loc462)
        } loc(#loc443)
      } loc(#loc442)
    } loc(#loc440)
    cir.return loc(#loc17)
  } loc(#loc433)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc465)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc466)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc467)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc468)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc84)
  } loc(#loc464)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc469)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc470)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc471)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc102)
  cir.func @main(%arg0: !s32i loc(fused[#loc105, #loc106]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc107, #loc108])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc473)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc474)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc104)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc109)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc110)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc111)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc111)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc112)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc99)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc475)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_11_good() : () -> () loc(#loc114)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc101)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc476)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_11_bad() : () -> () loc(#loc118)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc102)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc477)
    cir.return %17 : !s32i loc(#loc477)
  } loc(#loc472)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc478)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc126)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc480)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc132)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc481)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc483)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc483)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc136)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc136)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc139)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc139)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc139)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc139)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc139)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc139)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc139)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc139)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc139)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc139)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc139)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc139)
          cir.yield %24 : !u32i loc(#loc139)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc139)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc139)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc139)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc139)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc139)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc139)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc139)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc139)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc139)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc139)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc139)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc139)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc139)
          cir.yield %28 : !u32i loc(#loc139)
        }) : (!cir.bool) -> !u32i loc(#loc139)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc139)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc485)
      } loc(#loc484)
    } loc(#loc482)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc487)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc487)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc143)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc143)
      cir.if %6 {
        %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc125)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc125)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc148)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc490)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc491)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc492)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc152)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc152)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc490)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc154)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc491)
          %13 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc126)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc126)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc492)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc159)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc494)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc162)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc495)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc160)
                cir.yield %23 : !cir.bool loc(#loc160)
              }, false {
                %23 = cir.const #false loc(#loc160)
                cir.yield %23 : !cir.bool loc(#loc160)
              }) : (!cir.bool) -> !cir.bool loc(#loc160)
              cir.yield %22 : !cir.bool loc(#loc160)
            }, false {
              %19 = cir.const #false loc(#loc160)
              cir.yield %19 : !cir.bool loc(#loc160)
            }) : (!cir.bool) -> !cir.bool loc(#loc160)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc164)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc166)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc166)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc164)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc497)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc171)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc172)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc499)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc175)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
                } loc(#loc500)
              } loc(#loc498)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc178)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc178)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc502)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc180)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc181)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc503)
                  cir.condition(%29) loc(#loc182)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc506)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc188)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc189)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc189)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc189)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc507)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc508)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc194)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc188)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc509)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc196)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc197)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc196)
                      } loc(#loc510)
                    } loc(#loc505)
                  } loc(#loc504)
                  cir.yield loc(#loc177)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc198)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc199)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc511)
                  cir.yield loc(#loc501)
                } loc(#loc501)
              } loc(#loc501)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc202)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc202)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc204)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc205)
                } loc(#loc513)
              } loc(#loc512)
            } loc(#loc496)
          } loc(#loc493)
        } loc(#loc489)
      } loc(#loc488)
    } loc(#loc486)
    cir.return loc(#loc128)
  } loc(#loc479)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc515)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc211)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc516)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc518)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc518)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc215)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc215)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc218)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc218)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc218)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc218)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc218)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc218)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc218)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc218)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc218)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc218)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc218)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc218)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc218)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc218)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc218)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc218)
          cir.yield %24 : !u32i loc(#loc218)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc218)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc218)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc218)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc218)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc218)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc218)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc218)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc218)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc218)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc218)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc218)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc218)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc218)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc218)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc218)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc218)
          cir.yield %28 : !u32i loc(#loc218)
        }) : (!cir.bool) -> !u32i loc(#loc218)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc218)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc520)
      } loc(#loc519)
    } loc(#loc517)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc522)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc522)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc222)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc222)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc525)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc526)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc527)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc228)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc228)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc525)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc230)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc526)
          %13 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc232)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc232)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc527)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc236)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc529)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc238)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc239)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc530)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc237)
                cir.yield %23 : !cir.bool loc(#loc237)
              }, false {
                %23 = cir.const #false loc(#loc237)
                cir.yield %23 : !cir.bool loc(#loc237)
              }) : (!cir.bool) -> !cir.bool loc(#loc237)
              cir.yield %22 : !cir.bool loc(#loc237)
            }, false {
              %19 = cir.const #false loc(#loc237)
              cir.yield %19 : !cir.bool loc(#loc237)
            }) : (!cir.bool) -> !cir.bool loc(#loc237)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc241)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc242)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc243)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc243)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc241)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc532)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc248)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc249)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc249)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc534)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc251)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc252)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc251)
                } loc(#loc535)
              } loc(#loc533)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc255)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc255)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc537)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc257)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc258)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc538)
                  cir.condition(%29) loc(#loc259)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc541)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc265)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc266)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc266)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc266)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc542)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc543)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc271)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc265)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc544)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc273)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc274)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc273)
                      } loc(#loc545)
                    } loc(#loc540)
                  } loc(#loc539)
                  cir.yield loc(#loc254)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc275)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc276)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc546)
                  cir.yield loc(#loc536)
                } loc(#loc536)
              } loc(#loc536)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc279)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc279)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc281)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc282)
                } loc(#loc548)
              } loc(#loc547)
            } loc(#loc531)
          } loc(#loc528)
        } loc(#loc524)
      } loc(#loc523)
    } loc(#loc521)
    cir.return loc(#loc207)
  } loc(#loc514)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc550)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc288)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc551)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc553)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc553)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc292)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc292)
      cir.if %6 {
        %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc297)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc297)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc298)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc299)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc555)
      } loc(#loc554)
    } loc(#loc552)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc557)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc557)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc303)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc303)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc560)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc561)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc562)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc309)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc309)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc560)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc311)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc561)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc313)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc313)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc562)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc314)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc315)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc316)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc316)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc314)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc563)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc321)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc322)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc322)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc565)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc324)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc325)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc324)
            } loc(#loc566)
          } loc(#loc564)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc328)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc328)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc568)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc330)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc331)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc331)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc569)
              cir.condition(%25) loc(#loc332)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc572)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc338)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc339)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc339)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc339)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc573)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc574)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc344)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc338)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc575)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc347)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc348)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc347)
                  } loc(#loc576)
                } loc(#loc571)
              } loc(#loc570)
              cir.yield loc(#loc327)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc349)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc350)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc577)
              cir.yield loc(#loc567)
            } loc(#loc567)
          } loc(#loc567)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc353)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc353)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc355)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc356)
            } loc(#loc579)
          } loc(#loc578)
        } loc(#loc559)
      } loc(#loc558)
    } loc(#loc556)
    cir.return loc(#loc284)
  } loc(#loc549)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc581)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc361)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc362)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc582)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc584)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc584)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc366)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc366)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc369)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc586)
      } loc(#loc585)
    } loc(#loc583)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc588)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc588)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc373)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc373)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc591)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc592)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc593)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc379)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc379)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc591)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc381)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc592)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc383)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc383)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc593)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc384)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc385)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc386)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc386)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc384)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc594)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc391)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc392)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc392)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc596)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc394)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc395)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc394)
            } loc(#loc597)
          } loc(#loc595)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc398)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc398)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc599)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc400)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc401)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc401)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc600)
              cir.condition(%25) loc(#loc402)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc603)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc408)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc409)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc409)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc409)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc604)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc605)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc414)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc408)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc606)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc417)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc418)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc417)
                  } loc(#loc607)
                } loc(#loc602)
              } loc(#loc601)
              cir.yield loc(#loc397)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc419)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc420)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc608)
              cir.yield loc(#loc598)
            } loc(#loc598)
          } loc(#loc598)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc423)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc423)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc425)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc426)
            } loc(#loc610)
          } loc(#loc609)
        } loc(#loc590)
      } loc(#loc589)
    } loc(#loc587)
    cir.return loc(#loc358)
  } loc(#loc580)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":39:36)
#loc6 = loc("/usr/include/stdio.h":264:1)
#loc7 = loc("/usr/include/stdio.h":266:3)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":40:37)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/stdio.h":735:1)
#loc12 = loc("/usr/include/stdio.h":736:43)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:48)
#loc14 = loc("/usr/include/stdio.h":184:1)
#loc15 = loc("/usr/include/stdio.h":184:36)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":24:1)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":60:1)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":26:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":26:9)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":28:14)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":28:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":28:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":29:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":33:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":29:8)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":29:26)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":30:5)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":32:17)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":32:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":34:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":59:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":34:8)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":34:26)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":35:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":36:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":58:9)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":37:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":37:24)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":38:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":38:27)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":39:13)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":40:21)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":40:27)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":40:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":40:41)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":41:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":44:13)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":41:17)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":41:26)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":42:13)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":43:17)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":43:22)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":47:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":53:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":47:22)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":47:18)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":47:25)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":47:37)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":47:27)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":48:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:17)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":52:17)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:21)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:36)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:41)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:58)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:69)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:72)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:87)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:90)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":49:95)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":50:17)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":51:21)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":51:26)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":47:45)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":47:44)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":54:13)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":57:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":54:17)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":55:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":56:24)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":56:17)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":230:1)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":236:1)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":232:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":232:14)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":233:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":233:14)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":234:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":234:14)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":235:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":235:14)
#loc93 = loc("/usr/include/stdlib.h":575:1)
#loc94 = loc("/usr/include/stdlib.h":575:41)
#loc95 = loc("/usr/include/time.h":76:1)
#loc96 = loc("/usr/include/time.h":76:38)
#loc97 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc98 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":252:15)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":254:15)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":257:15)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":259:15)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":247:1)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":262:1)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":248:1)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":250:27)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":250:22)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":250:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":252:5)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":253:5)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":253:53)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":254:5)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":257:5)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":258:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":258:52)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":259:5)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":261:12)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":261:5)
#loc123 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc124 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":80:19)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":87:36)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":67:1)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":107:1)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":69:5)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":69:9)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":71:14)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":71:13)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":71:5)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":72:5)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":76:5)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":72:8)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":72:26)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":73:5)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":75:17)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":75:9)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":77:5)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":106:5)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":77:8)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":77:27)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":78:5)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":81:5)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":83:5)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":80:9)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":84:9)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":105:9)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":85:13)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":85:24)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":86:13)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":86:27)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":87:13)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":89:13)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":104:13)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":89:17)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":89:25)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":89:27)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":89:30)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":89:39)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":90:13)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":91:25)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":91:31)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":91:41)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":91:17)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":91:45)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":92:17)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":95:17)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":92:21)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":92:30)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":93:17)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":94:21)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":94:26)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":96:17)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":99:17)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":96:26)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":96:22)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":96:29)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":96:41)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":96:31)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":97:17)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:21)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:108)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:25)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:40)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:45)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:52)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:62)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:73)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:76)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:91)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:94)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:99)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:102)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":98:107)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":96:49)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":96:48)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":100:17)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":103:17)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":100:21)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":101:17)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":102:28)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":102:21)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":110:1)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":145:1)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":112:5)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":112:9)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":114:14)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":114:13)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":114:5)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":115:5)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":119:5)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":115:8)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":115:26)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":116:5)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":118:17)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":118:9)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":120:5)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":144:5)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":120:8)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":120:26)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":121:5)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":122:9)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":143:9)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":123:13)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":123:24)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":124:13)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":124:27)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":125:13)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":125:36)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":127:13)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":142:13)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":127:17)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":127:25)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":127:27)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":127:30)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":127:39)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":128:13)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":129:25)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":129:31)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":129:41)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":129:17)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":129:45)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":130:17)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":133:17)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":130:21)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":130:30)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":131:17)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":132:21)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":132:26)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":134:17)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":137:17)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":134:26)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":134:22)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":134:29)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":134:41)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":134:31)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":135:17)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:21)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:108)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:25)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:40)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:45)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:52)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:62)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:73)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:76)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:91)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:94)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:99)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:102)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":136:107)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":134:49)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":134:48)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":138:17)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":141:17)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":138:21)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":139:17)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":140:28)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":140:21)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":148:1)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":189:1)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":150:5)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":150:9)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":152:14)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":152:13)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":152:5)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":153:5)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":162:5)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":153:8)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":153:27)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":154:5)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":157:5)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":159:5)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":156:19)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":156:9)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":161:17)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":161:9)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":163:5)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":188:5)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":163:8)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":163:26)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":164:5)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":165:9)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":187:9)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":166:13)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":166:24)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":167:13)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":167:27)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":168:13)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":168:36)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":169:21)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":169:27)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":169:37)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":169:13)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":169:41)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":170:13)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":173:13)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":170:17)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":170:26)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":171:13)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":172:17)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":172:22)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":176:13)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":182:13)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":176:22)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":176:18)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":176:25)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":176:37)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":176:27)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":177:13)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:17)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":181:17)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:21)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:36)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:41)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:48)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:58)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:69)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:72)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:87)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:90)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":178:95)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":179:17)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":180:21)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":180:26)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":176:45)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":176:44)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":183:13)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":186:13)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":183:17)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":184:13)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":185:24)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":185:17)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":192:1)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":228:1)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":194:5)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":194:9)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":196:14)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":196:13)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":196:5)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":197:5)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":201:5)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":197:8)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":197:26)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":198:5)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":200:17)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":200:9)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":202:5)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":227:5)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":202:8)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":202:26)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":203:5)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":204:9)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":226:9)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":205:13)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":205:24)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":206:13)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":206:27)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":207:13)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":207:36)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":208:21)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":208:27)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":208:37)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":208:13)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":208:41)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":209:13)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":212:13)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":209:17)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":209:26)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":210:13)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":211:17)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":211:22)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":215:13)
#loc397 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":221:13)
#loc398 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":215:22)
#loc399 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":215:18)
#loc400 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":215:25)
#loc401 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":215:37)
#loc402 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":215:27)
#loc403 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":216:13)
#loc404 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:17)
#loc405 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":220:17)
#loc406 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:21)
#loc407 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:36)
#loc408 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:41)
#loc409 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:48)
#loc410 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:58)
#loc411 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:69)
#loc412 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:72)
#loc413 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:87)
#loc414 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:90)
#loc415 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":217:95)
#loc416 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":218:17)
#loc417 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":219:21)
#loc418 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":219:26)
#loc419 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":215:45)
#loc420 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":215:44)
#loc421 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":222:13)
#loc422 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":225:13)
#loc423 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":222:17)
#loc424 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":223:13)
#loc425 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":224:24)
#loc426 = loc("CWE400_Resource_Exhaustion__rand_fwrite_11.c":224:17)
#loc427 = loc(fused[#loc1, #loc2])
#loc428 = loc(fused[#loc3, #loc4])
#loc429 = loc(fused[#loc6, #loc7])
#loc430 = loc(fused[#loc9, #loc10])
#loc431 = loc(fused[#loc11, #loc12])
#loc432 = loc(fused[#loc14, #loc15])
#loc433 = loc(fused[#loc16, #loc17])
#loc434 = loc(fused[#loc18, #loc19])
#loc435 = loc(fused[#loc22, #loc20])
#loc436 = loc(fused[#loc23, #loc24])
#loc437 = loc(fused[#loc25, #loc26])
#loc438 = loc(fused[#loc27, #loc24])
#loc439 = loc(fused[#loc29, #loc28])
#loc440 = loc(fused[#loc30, #loc31])
#loc441 = loc(fused[#loc32, #loc33])
#loc442 = loc(fused[#loc34, #loc31])
#loc443 = loc(fused[#loc35, #loc36])
#loc444 = loc(fused[#loc37, #loc38])
#loc445 = loc(fused[#loc39, #loc40])
#loc446 = loc(fused[#loc41, #loc5])
#loc447 = loc(fused[#loc44, #loc45])
#loc448 = loc(fused[#loc46, #loc47])
#loc449 = loc(fused[#loc48, #loc49])
#loc450 = loc(fused[#loc50, #loc47])
#loc451 = loc(fused[#loc53, #loc54])
#loc452 = loc(fused[#loc56, #loc55])
#loc453 = loc(fused[#loc57, #loc58])
#loc454 = loc(fused[#loc60, #loc54])
#loc455 = loc(fused[#loc61, #loc62])
#loc456 = loc(fused[#loc63, #loc64])
#loc457 = loc(fused[#loc66, #loc67])
#loc458 = loc(fused[#loc68, #loc69])
#loc459 = loc(fused[#loc63, #loc71])
#loc460 = loc(fused[#loc72, #loc62])
#loc461 = loc(fused[#loc76, #loc75])
#loc462 = loc(fused[#loc77, #loc78])
#loc463 = loc(fused[#loc80, #loc78])
#loc464 = loc(fused[#loc83, #loc84])
#loc465 = loc(fused[#loc85, #loc86])
#loc466 = loc(fused[#loc87, #loc88])
#loc467 = loc(fused[#loc89, #loc90])
#loc468 = loc(fused[#loc91, #loc92])
#loc469 = loc(fused[#loc93, #loc94])
#loc470 = loc(fused[#loc95, #loc96])
#loc471 = loc(fused[#loc97, #loc98])
#loc472 = loc(fused[#loc103, #loc104])
#loc475 = loc(fused[#loc114, #loc115])
#loc476 = loc(fused[#loc118, #loc119])
#loc477 = loc(fused[#loc122, #loc121])
#loc478 = loc(fused[#loc123, #loc124])
#loc479 = loc(fused[#loc127, #loc128])
#loc480 = loc(fused[#loc129, #loc130])
#loc481 = loc(fused[#loc133, #loc131])
#loc482 = loc(fused[#loc134, #loc135])
#loc483 = loc(fused[#loc136, #loc137])
#loc484 = loc(fused[#loc138, #loc135])
#loc485 = loc(fused[#loc140, #loc139])
#loc486 = loc(fused[#loc141, #loc142])
#loc487 = loc(fused[#loc143, #loc144])
#loc488 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc489 = loc(fused[#loc149, #loc150])
#loc490 = loc(fused[#loc151, #loc152])
#loc491 = loc(fused[#loc153, #loc154])
#loc492 = loc(fused[#loc155, #loc126])
#loc493 = loc(fused[#loc156, #loc157])
#loc494 = loc(fused[#loc158, #loc159])
#loc495 = loc(fused[#loc161, #loc162])
#loc496 = loc(fused[#loc163, #loc157])
#loc497 = loc(fused[#loc167, #loc168])
#loc498 = loc(fused[#loc169, #loc170])
#loc499 = loc(fused[#loc171, #loc172])
#loc500 = loc(fused[#loc173, #loc170])
#loc501 = loc(fused[#loc176, #loc177])
#loc502 = loc(fused[#loc179, #loc178])
#loc503 = loc(fused[#loc180, #loc181])
#loc504 = loc(fused[#loc183, #loc177])
#loc505 = loc(fused[#loc184, #loc185])
#loc506 = loc(fused[#loc186, #loc187])
#loc507 = loc(fused[#loc190, #loc191])
#loc508 = loc(fused[#loc192, #loc193])
#loc509 = loc(fused[#loc186, #loc195])
#loc510 = loc(fused[#loc196, #loc185])
#loc511 = loc(fused[#loc199, #loc198])
#loc512 = loc(fused[#loc200, #loc201])
#loc513 = loc(fused[#loc203, #loc201])
#loc514 = loc(fused[#loc206, #loc207])
#loc515 = loc(fused[#loc208, #loc209])
#loc516 = loc(fused[#loc212, #loc210])
#loc517 = loc(fused[#loc213, #loc214])
#loc518 = loc(fused[#loc215, #loc216])
#loc519 = loc(fused[#loc217, #loc214])
#loc520 = loc(fused[#loc219, #loc218])
#loc521 = loc(fused[#loc220, #loc221])
#loc522 = loc(fused[#loc222, #loc223])
#loc523 = loc(fused[#loc224, #loc221])
#loc524 = loc(fused[#loc225, #loc226])
#loc525 = loc(fused[#loc227, #loc228])
#loc526 = loc(fused[#loc229, #loc230])
#loc527 = loc(fused[#loc231, #loc232])
#loc528 = loc(fused[#loc233, #loc234])
#loc529 = loc(fused[#loc235, #loc236])
#loc530 = loc(fused[#loc238, #loc239])
#loc531 = loc(fused[#loc240, #loc234])
#loc532 = loc(fused[#loc244, #loc245])
#loc533 = loc(fused[#loc246, #loc247])
#loc534 = loc(fused[#loc248, #loc249])
#loc535 = loc(fused[#loc250, #loc247])
#loc536 = loc(fused[#loc253, #loc254])
#loc537 = loc(fused[#loc256, #loc255])
#loc538 = loc(fused[#loc257, #loc258])
#loc539 = loc(fused[#loc260, #loc254])
#loc540 = loc(fused[#loc261, #loc262])
#loc541 = loc(fused[#loc263, #loc264])
#loc542 = loc(fused[#loc267, #loc268])
#loc543 = loc(fused[#loc269, #loc270])
#loc544 = loc(fused[#loc263, #loc272])
#loc545 = loc(fused[#loc273, #loc262])
#loc546 = loc(fused[#loc276, #loc275])
#loc547 = loc(fused[#loc277, #loc278])
#loc548 = loc(fused[#loc280, #loc278])
#loc549 = loc(fused[#loc283, #loc284])
#loc550 = loc(fused[#loc285, #loc286])
#loc551 = loc(fused[#loc289, #loc287])
#loc552 = loc(fused[#loc290, #loc291])
#loc553 = loc(fused[#loc292, #loc293])
#loc554 = loc(fused[#loc294, #loc295, #loc296, #loc291])
#loc555 = loc(fused[#loc300, #loc299])
#loc556 = loc(fused[#loc301, #loc302])
#loc557 = loc(fused[#loc303, #loc304])
#loc558 = loc(fused[#loc305, #loc302])
#loc559 = loc(fused[#loc306, #loc307])
#loc560 = loc(fused[#loc308, #loc309])
#loc561 = loc(fused[#loc310, #loc311])
#loc562 = loc(fused[#loc312, #loc313])
#loc563 = loc(fused[#loc317, #loc318])
#loc564 = loc(fused[#loc319, #loc320])
#loc565 = loc(fused[#loc321, #loc322])
#loc566 = loc(fused[#loc323, #loc320])
#loc567 = loc(fused[#loc326, #loc327])
#loc568 = loc(fused[#loc329, #loc328])
#loc569 = loc(fused[#loc330, #loc331])
#loc570 = loc(fused[#loc333, #loc327])
#loc571 = loc(fused[#loc334, #loc335])
#loc572 = loc(fused[#loc336, #loc337])
#loc573 = loc(fused[#loc340, #loc341])
#loc574 = loc(fused[#loc342, #loc343])
#loc575 = loc(fused[#loc336, #loc345])
#loc576 = loc(fused[#loc346, #loc335])
#loc577 = loc(fused[#loc350, #loc349])
#loc578 = loc(fused[#loc351, #loc352])
#loc579 = loc(fused[#loc354, #loc352])
#loc580 = loc(fused[#loc357, #loc358])
#loc581 = loc(fused[#loc359, #loc360])
#loc582 = loc(fused[#loc363, #loc361])
#loc583 = loc(fused[#loc364, #loc365])
#loc584 = loc(fused[#loc366, #loc367])
#loc585 = loc(fused[#loc368, #loc365])
#loc586 = loc(fused[#loc370, #loc369])
#loc587 = loc(fused[#loc371, #loc372])
#loc588 = loc(fused[#loc373, #loc374])
#loc589 = loc(fused[#loc375, #loc372])
#loc590 = loc(fused[#loc376, #loc377])
#loc591 = loc(fused[#loc378, #loc379])
#loc592 = loc(fused[#loc380, #loc381])
#loc593 = loc(fused[#loc382, #loc383])
#loc594 = loc(fused[#loc387, #loc388])
#loc595 = loc(fused[#loc389, #loc390])
#loc596 = loc(fused[#loc391, #loc392])
#loc597 = loc(fused[#loc393, #loc390])
#loc598 = loc(fused[#loc396, #loc397])
#loc599 = loc(fused[#loc399, #loc398])
#loc600 = loc(fused[#loc400, #loc401])
#loc601 = loc(fused[#loc403, #loc397])
#loc602 = loc(fused[#loc404, #loc405])
#loc603 = loc(fused[#loc406, #loc407])
#loc604 = loc(fused[#loc410, #loc411])
#loc605 = loc(fused[#loc412, #loc413])
#loc606 = loc(fused[#loc406, #loc415])
#loc607 = loc(fused[#loc416, #loc405])
#loc608 = loc(fused[#loc420, #loc419])
#loc609 = loc(fused[#loc421, #loc422])
#loc610 = loc(fused[#loc424, #loc422])
