!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc90)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func private @printHexCharLine(!s8i) loc(#loc93)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc95)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc20)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc22)
          %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc91)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc22)
          cir.break loc(#loc24)
        } loc(#loc21)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc26)
          cir.break loc(#loc27)
        } loc(#loc25)
        cir.yield loc(#loc18)
      } loc(#loc18)
    } loc(#loc97)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc99)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc31)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc99)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc32)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc33)
    } loc(#loc98)
    cir.return loc(#loc12)
  } loc(#loc94)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc101)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc102)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc100)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc45)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc49)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc52)
          cir.break loc(#loc53)
        } loc(#loc50)
        cir.case(default, []) {
          %4 = cir.const #cir.int<127> : !s32i loc(#loc55)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc56)
          %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc55)
          cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
          cir.break loc(#loc58)
        } loc(#loc54)
        cir.yield loc(#loc47)
      } loc(#loc47)
    } loc(#loc106)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc109)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc62)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc109)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc63)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc64)
    } loc(#loc108)
    cir.return loc(#loc41)
  } loc(#loc103)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc111)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc70)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc74)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<127> : !s32i loc(#loc76)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc77)
          %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc76)
          cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
          cir.break loc(#loc79)
        } loc(#loc75)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc81)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc81)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc82)
          cir.break loc(#loc83)
        } loc(#loc80)
        cir.yield loc(#loc72)
      } loc(#loc72)
    } loc(#loc113)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc116)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc87)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc116)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc88)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc89)
    } loc(#loc115)
    cir.return loc(#loc66)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":30:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":34:19)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc11 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":21:1)
#loc12 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":42:1)
#loc13 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":23:5)
#loc14 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":23:9)
#loc15 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":25:13)
#loc16 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":25:12)
#loc17 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":25:5)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":26:5)
#loc19 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":36:5)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":26:12)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":28:5)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":30:9)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":30:16)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":31:9)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":32:5)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":34:9)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":35:9)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":37:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":41:5)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":39:9)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":39:31)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":40:26)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":40:9)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":96:1)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":100:1)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":98:5)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":98:14)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":99:5)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":99:14)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":49:1)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":70:1)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":51:5)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":51:9)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":53:13)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":53:12)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":53:5)
#loc47 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":54:5)
#loc48 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":64:5)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":54:12)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":56:5)
#loc51 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":58:19)
#loc52 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":58:9)
#loc53 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":59:9)
#loc54 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":60:5)
#loc55 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":62:16)
#loc56 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":62:25)
#loc57 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":62:9)
#loc58 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":63:9)
#loc59 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":65:5)
#loc60 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":69:5)
#loc61 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":67:9)
#loc62 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":67:31)
#loc63 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":68:26)
#loc64 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":68:9)
#loc65 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":73:1)
#loc66 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":94:1)
#loc67 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":75:5)
#loc68 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":75:9)
#loc69 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":77:13)
#loc70 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":77:12)
#loc71 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":77:5)
#loc72 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":78:5)
#loc73 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":88:5)
#loc74 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":78:12)
#loc75 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":80:5)
#loc76 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":82:16)
#loc77 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":82:25)
#loc78 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":82:9)
#loc79 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":83:9)
#loc80 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":84:5)
#loc81 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":86:19)
#loc82 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":86:9)
#loc83 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":87:9)
#loc84 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":89:5)
#loc85 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":93:5)
#loc86 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":91:9)
#loc87 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":91:31)
#loc88 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":92:26)
#loc89 = loc("CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15.c":92:9)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc6, #loc7])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc11, #loc12])
#loc95 = loc(fused[#loc13, #loc14])
#loc96 = loc(fused[#loc17, #loc15])
#loc97 = loc(fused[#loc18, #loc19])
#loc98 = loc(fused[#loc28, #loc29])
#loc99 = loc(fused[#loc30, #loc31])
#loc100 = loc(fused[#loc34, #loc35])
#loc101 = loc(fused[#loc36, #loc37])
#loc102 = loc(fused[#loc38, #loc39])
#loc103 = loc(fused[#loc40, #loc41])
#loc104 = loc(fused[#loc42, #loc43])
#loc105 = loc(fused[#loc46, #loc44])
#loc106 = loc(fused[#loc47, #loc48])
#loc107 = loc(fused[#loc57, #loc56])
#loc108 = loc(fused[#loc59, #loc60])
#loc109 = loc(fused[#loc61, #loc62])
#loc110 = loc(fused[#loc65, #loc66])
#loc111 = loc(fused[#loc67, #loc68])
#loc112 = loc(fused[#loc71, #loc69])
#loc113 = loc(fused[#loc72, #loc73])
#loc114 = loc(fused[#loc78, #loc77])
#loc115 = loc(fused[#loc84, #loc85])
#loc116 = loc(fused[#loc86, #loc87])
