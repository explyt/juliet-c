!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc136)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc138)
  cir.func private @printLongLongLine(!s64i) loc(#loc139)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc143)
    cir.store %0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc142)
    cir.store %0, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc143)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc17)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc144)
    cir.scope {
      %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc146)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc22)
      %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc23)
      cir.store %6, %4 : !s64i, !cir.ptr<!s64i> loc(#loc146)
      %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc24)
      %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc138)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc138)
      %12 = cir.call @__isoc99_fscanf(%9, %11, %4) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc24)
      %13 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc26)
      %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
      cir.store %13, %14 : !s64i, !cir.ptr<!s64i> loc(#loc147)
    } loc(#loc145)
    cir.scope {
      %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc149)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
      %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc33)
      cir.store %6, %4 : !s64i, !cir.ptr<!s64i> loc(#loc149)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc36)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc37)
        %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc37)
        %10 = cir.cmp(lt, %7, %9) : !s64i, !cir.bool loc(#loc151)
        cir.if %10 {
          %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc153)
          %12 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc41)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc40)
          %14 = cir.cast(integral, %13 : !s32i), !s64i loc(#loc40)
          %15 = cir.binop(mul, %12, %14) nsw : !s64i loc(#loc41)
          cir.store %15, %11 : !s64i, !cir.ptr<!s64i> loc(#loc153)
          %16 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc42)
          cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc43)
        } loc(#loc152)
      } loc(#loc150)
    } loc(#loc148)
    cir.return loc(#loc10)
  } loc(#loc140)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc155)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc154)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc160)
    cir.store %0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc159)
    cir.store %0, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc160)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc58)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc161)
    cir.scope {
      %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc163)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc63)
      %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc64)
      cir.store %6, %4 : !s64i, !cir.ptr<!s64i> loc(#loc163)
      %7 = cir.const #cir.int<2> : !s32i loc(#loc65)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc66)
      %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc66)
      cir.store %9, %4 : !s64i, !cir.ptr<!s64i> loc(#loc164)
      %10 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc68)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc69)
      cir.store %10, %11 : !s64i, !cir.ptr<!s64i> loc(#loc165)
    } loc(#loc162)
    cir.scope {
      %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc167)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc74)
      %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc75)
      cir.store %6, %4 : !s64i, !cir.ptr<!s64i> loc(#loc167)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc78)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc79)
        %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc79)
        %10 = cir.cmp(lt, %7, %9) : !s64i, !cir.bool loc(#loc169)
        cir.if %10 {
          %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc171)
          %12 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc83)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc82)
          %14 = cir.cast(integral, %13 : !s32i), !s64i loc(#loc82)
          %15 = cir.binop(mul, %12, %14) nsw : !s64i loc(#loc83)
          cir.store %15, %11 : !s64i, !cir.ptr<!s64i> loc(#loc171)
          %16 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc84)
          cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc85)
        } loc(#loc170)
      } loc(#loc168)
    } loc(#loc166)
    cir.return loc(#loc51)
  } loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc176)
    cir.store %0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc175)
    cir.store %0, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc176)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc97)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc177)
    cir.scope {
      %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc179)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc102)
      %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc103)
      cir.store %6, %4 : !s64i, !cir.ptr<!s64i> loc(#loc179)
      %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc104)
      %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc105)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc180)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc180)
      %12 = cir.call @__isoc99_fscanf(%9, %11, %4) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc104)
      %13 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc108)
      %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
      cir.store %13, %14 : !s64i, !cir.ptr<!s64i> loc(#loc181)
    } loc(#loc178)
    cir.scope {
      %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc183)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc114)
      %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc115)
      cir.store %6, %4 : !s64i, !cir.ptr<!s64i> loc(#loc183)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc118)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc119)
        %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc119)
        %10 = cir.cmp(lt, %7, %9) : !s64i, !cir.bool loc(#loc185)
        cir.if %10 {
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc123)
            %12 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc124)
            %13 = cir.unary(minus, %12) nsw : !s64i, !s64i loc(#loc124)
            %14 = cir.const #cir.int<1> : !s64i loc(#loc124)
            %15 = cir.binop(sub, %13, %14) nsw : !s64i loc(#loc124)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc125)
            %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc125)
            %18 = cir.binop(div, %15, %17) : !s64i loc(#loc188)
            %19 = cir.cmp(gt, %11, %18) : !s64i, !cir.bool loc(#loc189)
            cir.if %19 {
              %20 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc191)
              %21 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc132)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc131)
              %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc131)
              %24 = cir.binop(mul, %21, %23) nsw : !s64i loc(#loc132)
              cir.store %24, %20 : !s64i, !cir.ptr<!s64i> loc(#loc191)
              %25 = cir.load %20 : !cir.ptr<!s64i>, !s64i loc(#loc133)
              cir.call @printLongLongLine(%25) : (!s64i) -> () loc(#loc134)
            } else {
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc88)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc88)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc135)
            } loc(#loc190)
          } loc(#loc187)
        } loc(#loc186)
      } loc(#loc184)
    } loc(#loc182)
    cir.return loc(#loc90)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":32:24)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":32:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":23:1)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":44:1)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":25:5)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":25:13)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":26:5)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":26:26)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":27:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":27:26)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":28:12)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":28:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":29:5)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":34:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":30:9)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":30:25)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":30:24)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":32:9)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":32:17)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":33:21)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":33:10)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":33:9)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":35:5)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":43:5)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":36:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":36:25)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":36:24)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":37:9)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":42:9)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":37:12)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":37:19)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":38:9)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":40:13)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":40:37)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":40:30)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":41:31)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":41:13)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":105:1)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":109:1)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":107:5)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":107:13)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":108:5)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":108:13)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":51:1)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":72:1)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":53:5)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":53:13)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":54:5)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":54:26)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":55:5)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":55:26)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":56:12)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":56:5)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":57:5)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":62:5)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":58:9)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":58:25)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":58:24)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":60:17)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":60:16)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":60:9)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":61:21)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":61:10)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":61:9)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":63:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":71:5)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":64:9)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":64:25)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":64:24)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":65:9)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":70:9)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":65:12)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":65:19)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":66:9)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":68:13)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":68:37)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":68:30)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":69:31)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":69:13)
#loc86 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc87 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":99:27)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":75:1)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":103:1)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":77:5)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":77:13)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":78:5)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":78:26)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":79:5)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":79:26)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":80:12)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":80:5)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":81:5)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":86:5)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":82:9)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":82:25)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":82:24)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":84:9)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":84:17)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":84:24)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":84:28)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":85:21)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":85:10)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":85:9)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":87:5)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":102:5)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":88:9)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":88:25)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":88:24)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":89:9)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":101:9)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":89:12)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":89:19)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":90:9)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":92:13)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":100:13)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":92:17)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":92:25)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":92:35)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":92:36)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":93:13)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":96:13)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":98:13)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":94:17)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":94:41)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":94:34)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":95:35)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":95:17)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_32.c":99:17)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc7, #loc8])
#loc140 = loc(fused[#loc9, #loc10])
#loc141 = loc(fused[#loc11, #loc12])
#loc142 = loc(fused[#loc13, #loc14])
#loc143 = loc(fused[#loc15, #loc16])
#loc144 = loc(fused[#loc18, #loc17])
#loc145 = loc(fused[#loc19, #loc20])
#loc146 = loc(fused[#loc21, #loc22])
#loc147 = loc(fused[#loc28, #loc26])
#loc148 = loc(fused[#loc29, #loc30])
#loc149 = loc(fused[#loc31, #loc32])
#loc150 = loc(fused[#loc34, #loc35])
#loc151 = loc(fused[#loc36, #loc37])
#loc152 = loc(fused[#loc38, #loc35])
#loc153 = loc(fused[#loc39, #loc40])
#loc154 = loc(fused[#loc44, #loc45])
#loc155 = loc(fused[#loc46, #loc47])
#loc156 = loc(fused[#loc48, #loc49])
#loc157 = loc(fused[#loc50, #loc51])
#loc158 = loc(fused[#loc52, #loc53])
#loc159 = loc(fused[#loc54, #loc55])
#loc160 = loc(fused[#loc56, #loc57])
#loc161 = loc(fused[#loc59, #loc58])
#loc162 = loc(fused[#loc60, #loc61])
#loc163 = loc(fused[#loc62, #loc63])
#loc164 = loc(fused[#loc67, #loc65])
#loc165 = loc(fused[#loc70, #loc68])
#loc166 = loc(fused[#loc71, #loc72])
#loc167 = loc(fused[#loc73, #loc74])
#loc168 = loc(fused[#loc76, #loc77])
#loc169 = loc(fused[#loc78, #loc79])
#loc170 = loc(fused[#loc80, #loc77])
#loc171 = loc(fused[#loc81, #loc82])
#loc172 = loc(fused[#loc86, #loc87])
#loc173 = loc(fused[#loc89, #loc90])
#loc174 = loc(fused[#loc91, #loc92])
#loc175 = loc(fused[#loc93, #loc94])
#loc176 = loc(fused[#loc95, #loc96])
#loc177 = loc(fused[#loc98, #loc97])
#loc178 = loc(fused[#loc99, #loc100])
#loc179 = loc(fused[#loc101, #loc102])
#loc180 = loc(fused[#loc106, #loc107])
#loc181 = loc(fused[#loc110, #loc108])
#loc182 = loc(fused[#loc111, #loc112])
#loc183 = loc(fused[#loc113, #loc114])
#loc184 = loc(fused[#loc116, #loc117])
#loc185 = loc(fused[#loc118, #loc119])
#loc186 = loc(fused[#loc120, #loc117])
#loc187 = loc(fused[#loc121, #loc122])
#loc188 = loc(fused[#loc124, #loc125])
#loc189 = loc(fused[#loc123, #loc126])
#loc190 = loc(fused[#loc127, #loc128, #loc129, #loc122])
#loc191 = loc(fused[#loc130, #loc131])
