!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":25:23)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":25:28)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":63:27)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":63:32)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":98:27)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":98:32)
#true = #cir.bool<true> : !cir.bool
#loc146 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc51, #loc52])
#loc182 = loc(fused[#loc95, #loc96])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func internal private  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc146)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc5)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc7)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.return loc(#loc2)
  } loc(#loc145)
  cir.func private  @printIntLine(!s32i) loc(#loc148)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc20)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc154)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc155)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc155)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc155)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc30)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc157)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc36)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc36)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc159)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc39)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc161)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc41)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc42)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc162)
              cir.condition(%16) loc(#loc162)
            } body {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc44)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc44)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc45)
              cir.yield loc(#loc38)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc47)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc163)
              cir.yield loc(#loc160)
            } loc(#loc160)
          } loc(#loc160)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        } loc(#loc158)
      } loc(#loc156)
    } loc(#loc153)
    cir.return loc(#loc14)
  } loc(#loc150)
  cir.func internal private  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc51, #loc52])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc165)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc53)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc54)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.return loc(#loc50)
  } loc(#loc164)
  cir.func internal private  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc61)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc63)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc171)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc172)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc172)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc172)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc73)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc174)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc77)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc78)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc79)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc79)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc176)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc82)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc178)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc85)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc179)
              cir.condition(%16) loc(#loc179)
            } body {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
              %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc87)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc87)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc88)
              cir.yield loc(#loc81)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc90)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc180)
              cir.yield loc(#loc177)
            } loc(#loc177)
          } loc(#loc177)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc91)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc91)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        } loc(#loc175)
      } loc(#loc173)
    } loc(#loc170)
    cir.return loc(#loc57)
  } loc(#loc167)
  cir.func internal private  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc95, #loc96])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc182)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc97)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc98)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.return loc(#loc94)
  } loc(#loc181)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc100)
  cir.func internal private  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc106)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc108)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc188)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc189)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc189)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc189)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc118)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc191)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc121)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc192)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc119)
            cir.yield %14 : !cir.bool loc(#loc119)
          }, false {
            %14 = cir.const #false loc(#loc119)
            cir.yield %14 : !cir.bool loc(#loc119)
          }) : (!cir.bool) -> !cir.bool loc(#loc119)
          cir.yield %13 : !cir.bool loc(#loc119)
        }, false {
          %10 = cir.const #false loc(#loc119)
          cir.yield %10 : !cir.bool loc(#loc119)
        }) : (!cir.bool) -> !cir.bool loc(#loc119)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc126)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
          %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc128)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc128)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc194)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc131)
            cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc196)
            cir.for : cond {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc133)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc134)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc197)
              cir.condition(%17) loc(#loc197)
            } body {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc136)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc136)
              %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc137)
              cir.yield loc(#loc130)
            } step {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc139)
              cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc198)
              cir.yield loc(#loc195)
            } loc(#loc195)
          } loc(#loc195)
        } else {
          %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc100)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc100)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc140)
        } loc(#loc193)
      } loc(#loc190)
    } loc(#loc187)
    cir.return loc(#loc102)
  } loc(#loc184)
  cir.func  @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_434goodEv() extra(#fn_attr) {
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L7goodG2BEv() : () -> () loc(#loc143)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43L7goodB2GEv() : () -> () loc(#loc144)
    cir.return loc(#loc142)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":25:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":29:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":26:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":28:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":28:5)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":53:23)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":31:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":56:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":33:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":35:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":35:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":35:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":36:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":37:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":55:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":38:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":38:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":39:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":39:30)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":42:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":54:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":42:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":42:21)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":43:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":50:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":52:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":44:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":44:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":44:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":46:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":49:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":46:21)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":46:17)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":46:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":46:28)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":48:37)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":48:30)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":48:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":46:33)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":46:32)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":53:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":63:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":68:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":64:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":67:12)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":67:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":70:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":95:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":72:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":72:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":74:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":74:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":74:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":75:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":76:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":94:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":77:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":77:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":78:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":78:30)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":81:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":93:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":81:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":81:21)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":82:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":89:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":91:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":83:28)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":83:20)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":83:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":85:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":88:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":85:21)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":85:17)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":85:24)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":85:28)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":87:37)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":87:30)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":87:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":85:33)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":85:32)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":92:23)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":92:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":98:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":102:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":99:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":101:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":101:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":125:23)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":104:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":128:1)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":106:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":106:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":108:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":108:12)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":108:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":109:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":110:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":127:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":111:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":111:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":112:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":112:30)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":114:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":126:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":114:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":114:21)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":114:23)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":114:26)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":114:34)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":114:36)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":115:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":122:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":124:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":116:28)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":116:20)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":116:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":118:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":121:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":118:21)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":118:17)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":118:24)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":118:28)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":120:37)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":120:30)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":120:17)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":118:33)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":118:32)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":125:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":130:1)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":134:1)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":132:5)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_43.cpp":133:5)
#loc145 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc7, #loc6])
#loc148 = loc(fused[#loc8, #loc9])
#loc149 = loc(fused[#loc10, #loc11])
#loc150 = loc(fused[#loc13, #loc14])
#loc151 = loc(fused[#loc15, #loc16])
#loc152 = loc(fused[#loc19, #loc17])
#loc153 = loc(fused[#loc21, #loc22])
#loc154 = loc(fused[#loc23, #loc24])
#loc155 = loc(fused[#loc25, #loc26])
#loc156 = loc(fused[#loc27, #loc28])
#loc157 = loc(fused[#loc29, #loc30])
#loc158 = loc(fused[#loc31, #loc32, #loc33, #loc28])
#loc159 = loc(fused[#loc36, #loc34])
#loc160 = loc(fused[#loc37, #loc38])
#loc161 = loc(fused[#loc40, #loc39])
#loc162 = loc(fused[#loc41, #loc42])
#loc163 = loc(fused[#loc47, #loc46])
#loc164 = loc(fused[#loc49, #loc50])
#loc166 = loc(fused[#loc55, #loc54])
#loc167 = loc(fused[#loc56, #loc57])
#loc168 = loc(fused[#loc58, #loc59])
#loc169 = loc(fused[#loc62, #loc60])
#loc170 = loc(fused[#loc64, #loc65])
#loc171 = loc(fused[#loc66, #loc67])
#loc172 = loc(fused[#loc68, #loc69])
#loc173 = loc(fused[#loc70, #loc71])
#loc174 = loc(fused[#loc72, #loc73])
#loc175 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc176 = loc(fused[#loc79, #loc77])
#loc177 = loc(fused[#loc80, #loc81])
#loc178 = loc(fused[#loc83, #loc82])
#loc179 = loc(fused[#loc84, #loc85])
#loc180 = loc(fused[#loc90, #loc89])
#loc181 = loc(fused[#loc93, #loc94])
#loc183 = loc(fused[#loc99, #loc98])
#loc184 = loc(fused[#loc101, #loc102])
#loc185 = loc(fused[#loc103, #loc104])
#loc186 = loc(fused[#loc107, #loc105])
#loc187 = loc(fused[#loc109, #loc110])
#loc188 = loc(fused[#loc111, #loc112])
#loc189 = loc(fused[#loc113, #loc114])
#loc190 = loc(fused[#loc115, #loc116])
#loc191 = loc(fused[#loc117, #loc118])
#loc192 = loc(fused[#loc120, #loc122])
#loc193 = loc(fused[#loc123, #loc124, #loc125, #loc116])
#loc194 = loc(fused[#loc128, #loc126])
#loc195 = loc(fused[#loc129, #loc130])
#loc196 = loc(fused[#loc132, #loc131])
#loc197 = loc(fused[#loc133, #loc134])
#loc198 = loc(fused[#loc139, #loc138])
#loc199 = loc(fused[#loc141, #loc142])
