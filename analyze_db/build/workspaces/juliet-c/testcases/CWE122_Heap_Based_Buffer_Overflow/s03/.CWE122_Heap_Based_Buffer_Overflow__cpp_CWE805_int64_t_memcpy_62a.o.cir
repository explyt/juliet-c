!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_629badSourceERPl(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc56)
  cir.func private @printLongLongLine(!s64i) loc(#loc57)
  cir.func @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc59)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc60)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %2, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc61)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_629badSourceERPl(%1) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc13)
    cir.br ^bb1 loc(#loc62)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc59)
    cir.store %3, %0 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc59)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc16)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc16)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc17)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc17)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc18)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc63)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc64)
    cir.libc.memcpy %11 bytes from %7 to %5 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc65)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc25)
    %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc23)
    cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc26)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
    cir.delete.array %16 : <!s64i> loc(#loc27)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc58)
  cir.func private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_6213goodG2BSourceERPl(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc66)
  cir.func internal private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc68)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc69)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc36)
    cir.store %2, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc70)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_6213goodG2BSourceERPl(%1) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc38)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc68)
    cir.store %3, %0 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc68)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc41)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc42)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc42)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc43)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc72)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc73)
    cir.libc.memcpy %11 bytes from %7 to %5 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc74)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc48)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc50)
    %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc48)
    cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc51)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
    cir.delete.array %16 : <!s64i> loc(#loc52)
    cir.br ^bb2 loc(#loc40)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc31)
  } loc(#loc67)
  cir.func @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_624goodEv() extra(#fn_attr) {
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62L7goodG2BEv() : () -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc75)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":25:31)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":27:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":39:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":33:9)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":33:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":29:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":29:15)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":30:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":30:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":31:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":32:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":38:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":35:16)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":35:22)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":35:30)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":35:34)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":35:48)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":35:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":35:49)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":36:27)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":36:32)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":36:33)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":36:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":37:19)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":46:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":46:35)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":48:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":60:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":54:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":54:33)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":50:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":50:15)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":51:12)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":51:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":52:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":53:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":59:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":56:16)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":56:22)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":56:30)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":56:34)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":56:48)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":56:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":56:49)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":57:27)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":57:32)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":57:33)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":57:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":58:19)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":62:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":65:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memcpy_62a.cpp":64:5)
#loc56 = loc(fused[#loc1, #loc2])
#loc57 = loc(fused[#loc3, #loc4])
#loc58 = loc(fused[#loc5, #loc6])
#loc59 = loc(fused[#loc7, #loc8])
#loc60 = loc(fused[#loc9, #loc10])
#loc61 = loc(fused[#loc12, #loc11])
#loc62 = loc(fused[#loc14, #loc15])
#loc63 = loc(fused[#loc19, #loc20])
#loc64 = loc(fused[#loc18, #loc20])
#loc65 = loc(fused[#loc21, #loc22])
#loc66 = loc(fused[#loc28, #loc29])
#loc67 = loc(fused[#loc30, #loc31])
#loc68 = loc(fused[#loc32, #loc33])
#loc69 = loc(fused[#loc34, #loc35])
#loc70 = loc(fused[#loc37, #loc36])
#loc71 = loc(fused[#loc39, #loc40])
#loc72 = loc(fused[#loc44, #loc45])
#loc73 = loc(fused[#loc43, #loc45])
#loc74 = loc(fused[#loc46, #loc47])
#loc75 = loc(fused[#loc53, #loc54])
