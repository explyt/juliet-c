!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":27:21)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":27:25)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":187:10)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":187:14)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":187:20)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":187:32)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":68:26)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":68:30)
#loc154 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":112:26)
#loc155 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":112:30)
#loc208 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":151:25)
#loc209 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":151:29)
#loc238 = loc(fused[#loc16, #loc17])
#loc259 = loc(fused[#loc74, #loc75])
#loc260 = loc(fused[#loc76, #loc77])
#loc266 = loc(fused[#loc98, #loc99])
#loc285 = loc(fused[#loc154, #loc155])
#loc304 = loc(fused[#loc208, #loc209])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc231)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc232)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc233)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc235)
  cir.func private @printIntLine(!s32i) loc(#loc236)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc16, #loc17])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc238)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc18)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc235)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc21)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc241)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc25)
      } loc(#loc240)
    } loc(#loc239)
    cir.return loc(#loc15)
  } loc(#loc237)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc31)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc246)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc246)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc246)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc40)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc40)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc40)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc40)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc40)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc40)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc40)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc40)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc232)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc248)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc47)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc48)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc250)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc51)
        } loc(#loc249)
      } loc(#loc247)
    } loc(#loc245)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc235)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc55)
    cir.return loc(#loc27)
  } loc(#loc242)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc57)
  } loc(#loc252)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc256)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_21_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_21_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.return %17 : !s32i loc(#loc263)
  } loc(#loc258)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc95)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc98, #loc99])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc266)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc264)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc103)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc103)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc107)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc270)
          cir.if %6 {
            %7 = cir.const #cir.int<100> : !s32i loc(#loc115)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc272)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc117)
          } else {
            %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc95)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc95)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          } loc(#loc271)
        } loc(#loc269)
      } loc(#loc268)
    } loc(#loc267)
    cir.return loc(#loc97)
  } loc(#loc265)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc124)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc277)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc277)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc277)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc133)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc133)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc133)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc133)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc133)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc133)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc133)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc133)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc232)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc134)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc279)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc141)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc144)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc144)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc145)
        } loc(#loc280)
      } loc(#loc278)
    } loc(#loc276)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc264)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc149)
    cir.return loc(#loc120)
  } loc(#loc273)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc283)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc154, #loc155])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc285)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc283)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc159)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc159)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc164)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc289)
          cir.if %6 {
            %7 = cir.const #cir.int<100> : !s32i loc(#loc168)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
            %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc291)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc170)
          } else {
            %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc171)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc171)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc172)
          } loc(#loc290)
        } loc(#loc288)
      } loc(#loc287)
    } loc(#loc286)
    cir.return loc(#loc153)
  } loc(#loc284)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc293)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc178)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc296)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc296)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc296)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc186)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc187)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc187)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc187)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc187)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc187)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc187)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc187)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc187)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc232)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc188)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc189)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc190)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc298)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc194)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc195)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc198)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc198)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc199)
        } loc(#loc299)
      } loc(#loc297)
    } loc(#loc295)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc283)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc203)
    cir.return loc(#loc174)
  } loc(#loc292)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc302)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc208, #loc209])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc304)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc302)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc213)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc213)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc215)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
        %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc307)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc217)
      } loc(#loc306)
    } loc(#loc305)
    cir.return loc(#loc207)
  } loc(#loc303)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc309)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc223)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc225)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc302)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc230)
    cir.return loc(#loc219)
  } loc(#loc308)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":51:23)
#loc10 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":25:1)
#loc11 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":25:24)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":27:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":34:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":28:1)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":29:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":33:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":29:8)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":30:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":32:22)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":32:28)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":32:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":36:1)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":56:1)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":38:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":38:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":40:13)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":40:12)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":40:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":41:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":53:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":42:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":42:45)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":52:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:19)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:32)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:49)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:59)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":45:9)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":48:9)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":50:9)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":47:25)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":47:20)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":47:13)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":47:36)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":51:13)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":54:17)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":54:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":55:13)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":55:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":171:1)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":176:1)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":173:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":173:14)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":174:5)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":174:14)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":175:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":175:13)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":192:15)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":194:15)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":197:15)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":199:15)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":187:1)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":202:1)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":188:1)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":190:27)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":190:22)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":190:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":192:5)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":193:5)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":193:53)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":194:5)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":197:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":198:5)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":198:52)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":199:5)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":201:12)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":201:5)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":63:1)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":63:29)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":73:19)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":84:23)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":68:1)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":87:1)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":69:1)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":70:5)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":86:5)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":70:8)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":71:5)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":74:5)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":76:5)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":73:9)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":78:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":85:9)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":78:13)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":78:21)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":79:9)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":81:9)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":83:9)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":80:26)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":80:32)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":80:13)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":84:13)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":89:1)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":109:1)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":91:5)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":91:9)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":93:13)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":93:12)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":93:5)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":94:5)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":106:5)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":95:9)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":95:45)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:9)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":105:9)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:19)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:32)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:49)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:13)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:59)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":98:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":101:9)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":103:9)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":100:25)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":100:20)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":100:13)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":100:36)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":104:23)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":104:13)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":107:22)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":107:5)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":108:18)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":108:5)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":64:1)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":64:29)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":112:1)
#loc153 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":126:1)
#loc156 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":113:1)
#loc157 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":114:5)
#loc158 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":125:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":114:8)
#loc160 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":115:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":117:9)
#loc162 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":124:9)
#loc163 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":117:13)
#loc164 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":117:21)
#loc165 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":118:9)
#loc166 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":120:9)
#loc167 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":122:9)
#loc168 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":119:26)
#loc169 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":119:32)
#loc170 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":119:13)
#loc171 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":123:23)
#loc172 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":123:13)
#loc173 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":128:1)
#loc174 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":148:1)
#loc175 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":130:5)
#loc176 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":130:9)
#loc177 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":132:13)
#loc178 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":132:12)
#loc179 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":132:5)
#loc180 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":133:5)
#loc181 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":145:5)
#loc182 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":134:9)
#loc183 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":134:45)
#loc184 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:9)
#loc185 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":144:9)
#loc186 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:19)
#loc187 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:32)
#loc188 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:49)
#loc189 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:13)
#loc190 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:59)
#loc191 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":137:9)
#loc192 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":140:9)
#loc193 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":142:9)
#loc194 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":139:25)
#loc195 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":139:20)
#loc196 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":139:13)
#loc197 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":139:36)
#loc198 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":143:23)
#loc199 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":143:13)
#loc200 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":146:22)
#loc201 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":146:5)
#loc202 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":147:18)
#loc203 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":147:5)
#loc204 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":65:1)
#loc205 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":65:28)
#loc206 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":151:1)
#loc207 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":158:1)
#loc210 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":152:1)
#loc211 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":153:5)
#loc212 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":157:5)
#loc213 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":153:8)
#loc214 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":154:5)
#loc215 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":156:22)
#loc216 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":156:28)
#loc217 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":156:9)
#loc218 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":160:1)
#loc219 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":169:1)
#loc220 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":162:5)
#loc221 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":162:9)
#loc222 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":164:13)
#loc223 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":164:12)
#loc224 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":164:5)
#loc225 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":166:12)
#loc226 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":166:5)
#loc227 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":167:21)
#loc228 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":167:5)
#loc229 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":168:17)
#loc230 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":168:5)
#loc231 = loc(fused[#loc1, #loc2])
#loc232 = loc(fused[#loc3, #loc4])
#loc233 = loc(fused[#loc5, #loc6])
#loc234 = loc(fused[#loc7, #loc8])
#loc235 = loc(fused[#loc10, #loc11])
#loc236 = loc(fused[#loc12, #loc13])
#loc237 = loc(fused[#loc14, #loc15])
#loc239 = loc(fused[#loc19, #loc20])
#loc240 = loc(fused[#loc22, #loc20])
#loc241 = loc(fused[#loc23, #loc24])
#loc242 = loc(fused[#loc26, #loc27])
#loc243 = loc(fused[#loc28, #loc29])
#loc244 = loc(fused[#loc32, #loc30])
#loc245 = loc(fused[#loc33, #loc34])
#loc246 = loc(fused[#loc35, #loc36])
#loc247 = loc(fused[#loc37, #loc38])
#loc248 = loc(fused[#loc42, #loc43])
#loc249 = loc(fused[#loc44, #loc45, #loc46, #loc38])
#loc250 = loc(fused[#loc49, #loc50])
#loc251 = loc(fused[#loc53, #loc52])
#loc252 = loc(fused[#loc56, #loc57])
#loc253 = loc(fused[#loc58, #loc59])
#loc254 = loc(fused[#loc60, #loc61])
#loc255 = loc(fused[#loc62, #loc63])
#loc256 = loc(fused[#loc64, #loc65])
#loc257 = loc(fused[#loc66, #loc67])
#loc258 = loc(fused[#loc72, #loc73])
#loc261 = loc(fused[#loc83, #loc84])
#loc262 = loc(fused[#loc87, #loc88])
#loc263 = loc(fused[#loc91, #loc90])
#loc264 = loc(fused[#loc92, #loc93])
#loc265 = loc(fused[#loc96, #loc97])
#loc267 = loc(fused[#loc101, #loc102])
#loc268 = loc(fused[#loc104, #loc105, #loc106, #loc102])
#loc269 = loc(fused[#loc108, #loc109])
#loc270 = loc(fused[#loc110, #loc111])
#loc271 = loc(fused[#loc112, #loc113, #loc114, #loc109])
#loc272 = loc(fused[#loc115, #loc116])
#loc273 = loc(fused[#loc119, #loc120])
#loc274 = loc(fused[#loc121, #loc122])
#loc275 = loc(fused[#loc125, #loc123])
#loc276 = loc(fused[#loc126, #loc127])
#loc277 = loc(fused[#loc128, #loc129])
#loc278 = loc(fused[#loc130, #loc131])
#loc279 = loc(fused[#loc135, #loc136])
#loc280 = loc(fused[#loc137, #loc138, #loc139, #loc131])
#loc281 = loc(fused[#loc142, #loc143])
#loc282 = loc(fused[#loc147, #loc146])
#loc283 = loc(fused[#loc150, #loc151])
#loc284 = loc(fused[#loc152, #loc153])
#loc286 = loc(fused[#loc157, #loc158])
#loc287 = loc(fused[#loc160, #loc158])
#loc288 = loc(fused[#loc161, #loc162])
#loc289 = loc(fused[#loc163, #loc164])
#loc290 = loc(fused[#loc165, #loc166, #loc167, #loc162])
#loc291 = loc(fused[#loc168, #loc169])
#loc292 = loc(fused[#loc173, #loc174])
#loc293 = loc(fused[#loc175, #loc176])
#loc294 = loc(fused[#loc179, #loc177])
#loc295 = loc(fused[#loc180, #loc181])
#loc296 = loc(fused[#loc182, #loc183])
#loc297 = loc(fused[#loc184, #loc185])
#loc298 = loc(fused[#loc189, #loc190])
#loc299 = loc(fused[#loc191, #loc192, #loc193, #loc185])
#loc300 = loc(fused[#loc196, #loc197])
#loc301 = loc(fused[#loc201, #loc200])
#loc302 = loc(fused[#loc204, #loc205])
#loc303 = loc(fused[#loc206, #loc207])
#loc305 = loc(fused[#loc211, #loc212])
#loc306 = loc(fused[#loc214, #loc212])
#loc307 = loc(fused[#loc215, #loc216])
#loc308 = loc(fused[#loc218, #loc219])
#loc309 = loc(fused[#loc220, #loc221])
#loc310 = loc(fused[#loc224, #loc222])
#loc311 = loc(fused[#loc226, #loc225])
#loc312 = loc(fused[#loc228, #loc227])
