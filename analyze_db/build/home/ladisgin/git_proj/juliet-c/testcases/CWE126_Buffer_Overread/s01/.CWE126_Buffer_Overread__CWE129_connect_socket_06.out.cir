!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":386:10)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":386:14)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":386:20)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":386:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc561 = loc(fused[#loc160, #loc161])
#loc562 = loc(fused[#loc162, #loc163])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc498)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc499)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc500)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc501)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc502)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc503)
  cir.func private @close(!s32i) -> !s32i loc(#loc504)
  cir.func private @printIntLine(!s32i) loc(#loc505)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc506)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc508)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc30)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc31)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc511)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc514)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc515)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc516)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc517)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc40)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc516)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc45)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc46)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc47)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc519)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc54)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc54)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc521)
                cir.if %57 {
                  cir.break loc(#loc56)
                } loc(#loc522)
              } loc(#loc520)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc523)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc59)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc524)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc525)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc64)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc64)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc526)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc527)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc72)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc72)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc528)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc530)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc531)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc531)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc85)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc85)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc532)
                cir.if %61 {
                  cir.break loc(#loc87)
                } loc(#loc533)
              } loc(#loc529)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc90)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc90)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc90)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc90)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc90)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc90)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc90)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc91)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc534)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc92)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc93)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc535)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc99)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc99)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc537)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc100)
                  cir.yield %59 : !cir.bool loc(#loc100)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc102)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc538)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc100)
                    cir.yield %63 : !cir.bool loc(#loc100)
                  }, false {
                    %63 = cir.const #false loc(#loc100)
                    cir.yield %63 : !cir.bool loc(#loc100)
                  }) : (!cir.bool) -> !cir.bool loc(#loc100)
                  cir.yield %62 : !cir.bool loc(#loc100)
                }) : (!cir.bool) -> !cir.bool loc(#loc100)
                cir.if %58 {
                  cir.break loc(#loc104)
                } loc(#loc539)
              } loc(#loc536)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc105)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc105)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc107)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc540)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc109)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc541)
              cir.yield loc(#loc44)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc112)
              cir.condition(%13) loc(#loc112)
            } loc(#loc518)
          } loc(#loc518)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc116)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc543)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc119)
            } loc(#loc544)
          } loc(#loc542)
        } loc(#loc513)
      } loc(#loc512)
    } loc(#loc510)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc122)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc123)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc546)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc549)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc549)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc549)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc132)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc551)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc137)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc137)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc138)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc139)
            } loc(#loc552)
          } loc(#loc550)
        } loc(#loc548)
      } loc(#loc547)
    } loc(#loc545)
    cir.return loc(#loc22)
  } loc(#loc507)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc554)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc142)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc555)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc144)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc556)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc146)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc557)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc148)
    cir.return loc(#loc141)
  } loc(#loc553)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc558)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc559)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc157)
  cir.func @main(%arg0: !s32i loc(fused[#loc160, #loc161]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc162, #loc163])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc561)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc562)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc159)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc164)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc165)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc166)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc166)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc167)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc154)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc563)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_06_good() : () -> () loc(#loc169)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc155)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc156)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc564)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_06_bad() : () -> () loc(#loc173)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc157)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc176)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc565)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc565)
    cir.return %17 : !s32i loc(#loc565)
  } loc(#loc560)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc179)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc567)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc185)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc568)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc189)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc190)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc570)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc573)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc574)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc575)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc576)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc199)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc199)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc575)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc204)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc205)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc206)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc207)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc578)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc212)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc213)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc213)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc580)
                cir.if %57 {
                  cir.break loc(#loc215)
                } loc(#loc581)
              } loc(#loc579)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc582)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc218)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc583)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc584)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc223)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc223)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc585)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc225)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc225)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc226)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc586)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc229)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc229)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc230)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc587)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc589)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc590)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc590)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc240)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc241)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc241)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc591)
                cir.if %61 {
                  cir.break loc(#loc243)
                } loc(#loc592)
              } loc(#loc588)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc244)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc245)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc245)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc246)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc246)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc246)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc246)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc246)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc246)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc246)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc247)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc247)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc593)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc248)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc249)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc249)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc594)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc254)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc255)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc255)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc596)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc256)
                  cir.yield %59 : !cir.bool loc(#loc256)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc258)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc597)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc256)
                    cir.yield %63 : !cir.bool loc(#loc256)
                  }, false {
                    %63 = cir.const #false loc(#loc256)
                    cir.yield %63 : !cir.bool loc(#loc256)
                  }) : (!cir.bool) -> !cir.bool loc(#loc256)
                  cir.yield %62 : !cir.bool loc(#loc256)
                }) : (!cir.bool) -> !cir.bool loc(#loc256)
                cir.if %58 {
                  cir.break loc(#loc260)
                } loc(#loc598)
              } loc(#loc595)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc261)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc261)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc262)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc263)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc263)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc599)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc264)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc265)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc600)
              cir.yield loc(#loc203)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc268)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc268)
              cir.condition(%13) loc(#loc268)
            } loc(#loc577)
          } loc(#loc577)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc271)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc272)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc272)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc602)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc274)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc275)
            } loc(#loc603)
          } loc(#loc601)
        } loc(#loc572)
      } loc(#loc571)
    } loc(#loc569)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc278)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc279)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc605)
      cir.if %5 {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc178)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc178)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc283)
      } else {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc608)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc608)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc608)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc291)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc610)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc294)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc611)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc292)
                cir.yield %16 : !cir.bool loc(#loc292)
              }, false {
                %16 = cir.const #false loc(#loc292)
                cir.yield %16 : !cir.bool loc(#loc292)
              }) : (!cir.bool) -> !cir.bool loc(#loc292)
              cir.yield %15 : !cir.bool loc(#loc292)
            }, false {
              %12 = cir.const #false loc(#loc292)
              cir.yield %12 : !cir.bool loc(#loc292)
            }) : (!cir.bool) -> !cir.bool loc(#loc292)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc299)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc300)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc300)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc300)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc301)
            } else {
              %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc179)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc179)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc302)
            } loc(#loc612)
          } loc(#loc609)
        } loc(#loc607)
      } loc(#loc606)
    } loc(#loc604)
    cir.return loc(#loc181)
  } loc(#loc566)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc614)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc307)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc308)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc615)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc312)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc313)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc617)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc620)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc621)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc622)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc623)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc322)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc322)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc622)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc327)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc328)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc329)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc330)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc625)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc335)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc336)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc336)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc627)
                cir.if %57 {
                  cir.break loc(#loc338)
                } loc(#loc628)
              } loc(#loc626)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc629)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc341)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc630)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc631)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc346)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc346)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc632)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc348)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc348)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc349)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc633)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc352)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc352)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc353)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc634)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc358)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc636)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc637)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc637)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc363)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc364)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc364)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc638)
                cir.if %61 {
                  cir.break loc(#loc366)
                } loc(#loc639)
              } loc(#loc635)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc367)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc368)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc368)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc369)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc369)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc369)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc369)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc369)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc369)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc369)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc370)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc370)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc640)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc371)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc372)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc372)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc641)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc377)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc378)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc378)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc643)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc379)
                  cir.yield %59 : !cir.bool loc(#loc379)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc380)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc381)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc644)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc379)
                    cir.yield %63 : !cir.bool loc(#loc379)
                  }, false {
                    %63 = cir.const #false loc(#loc379)
                    cir.yield %63 : !cir.bool loc(#loc379)
                  }) : (!cir.bool) -> !cir.bool loc(#loc379)
                  cir.yield %62 : !cir.bool loc(#loc379)
                }) : (!cir.bool) -> !cir.bool loc(#loc379)
                cir.if %58 {
                  cir.break loc(#loc383)
                } loc(#loc645)
              } loc(#loc642)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc384)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc384)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc385)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc386)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc386)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc646)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc387)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc388)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc647)
              cir.yield loc(#loc326)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc391)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc391)
              cir.condition(%13) loc(#loc391)
            } loc(#loc624)
          } loc(#loc624)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc394)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc395)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc395)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc649)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc397)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc398)
            } loc(#loc650)
          } loc(#loc648)
        } loc(#loc619)
      } loc(#loc618)
    } loc(#loc616)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc401)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc402)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc652)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc655)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc655)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc655)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc410)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc411)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc657)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc413)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc414)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc658)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc412)
                cir.yield %16 : !cir.bool loc(#loc412)
              }, false {
                %16 = cir.const #false loc(#loc412)
                cir.yield %16 : !cir.bool loc(#loc412)
              }) : (!cir.bool) -> !cir.bool loc(#loc412)
              cir.yield %15 : !cir.bool loc(#loc412)
            }, false {
              %12 = cir.const #false loc(#loc412)
              cir.yield %12 : !cir.bool loc(#loc412)
            }) : (!cir.bool) -> !cir.bool loc(#loc412)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc419)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc420)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc420)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc420)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc421)
            } else {
              %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc422)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc422)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc423)
            } loc(#loc659)
          } loc(#loc656)
        } loc(#loc654)
      } loc(#loc653)
    } loc(#loc651)
    cir.return loc(#loc304)
  } loc(#loc613)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc661)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc428)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc429)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc662)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc433)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc434)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc664)
      cir.if %5 {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc438)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc438)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc439)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc440)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc666)
      } loc(#loc665)
    } loc(#loc663)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc444)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc445)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc668)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc671)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc671)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc671)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc453)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc454)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc673)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc458)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc459)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc459)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc459)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc460)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc461)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc461)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc462)
            } loc(#loc674)
          } loc(#loc672)
        } loc(#loc670)
      } loc(#loc669)
    } loc(#loc667)
    cir.return loc(#loc425)
  } loc(#loc660)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc676)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc467)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc468)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc677)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc472)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc473)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc679)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc475)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc681)
      } loc(#loc680)
    } loc(#loc678)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc479)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc480)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc683)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc686)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc686)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc686)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc488)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc489)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc688)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc493)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc494)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc494)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc494)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc495)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc496)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc496)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc497)
            } loc(#loc689)
          } loc(#loc687)
        } loc(#loc685)
      } loc(#loc684)
    } loc(#loc682)
    cir.return loc(#loc464)
  } loc(#loc675)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_06.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":82:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":125:27)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":49:1)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":129:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":51:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":51:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":53:13)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":53:12)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":53:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":54:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":112:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":54:8)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":54:27)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":55:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":56:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":111:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":61:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":61:17)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":62:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":62:32)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":63:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":63:36)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":64:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":64:45)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":65:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":100:21)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":75:40)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":75:49)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":75:62)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":75:33)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":75:17)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":75:73)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":76:17)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":79:17)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":76:21)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":76:38)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":77:17)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":78:21)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":80:24)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":80:25)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":80:34)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":80:37)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":80:51)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":80:17)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":80:52)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":81:38)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":81:17)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":82:43)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":82:17)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":82:63)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":83:42)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":83:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":83:17)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":83:50)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":84:17)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":87:17)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":84:29)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":84:62)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":84:63)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":84:72)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":84:86)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":84:21)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":84:92)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":85:17)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":86:21)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":90:35)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":90:50)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":90:63)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":90:81)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":90:84)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":90:30)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":90:17)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":90:85)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":91:17)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":94:17)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":91:21)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":91:35)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":91:48)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":91:51)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":91:65)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":92:17)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":93:21)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":96:43)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":96:29)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":96:17)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":98:29)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":98:24)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":98:17)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":98:40)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":100:20)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":101:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":104:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":101:17)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":101:34)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":102:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":103:30)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":103:17)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":113:5)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":128:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":113:8)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":113:27)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":114:5)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":115:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":127:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":116:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":116:34)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":119:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":126:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":119:17)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":119:25)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":120:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":122:13)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":124:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":121:37)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":121:30)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":121:17)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":125:17)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":369:1)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":375:1)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":371:5)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":371:14)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":372:5)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":372:14)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":373:5)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":373:14)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":374:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":374:14)
#loc150 = loc("/usr/include/stdlib.h":575:1)
#loc151 = loc("/usr/include/stdlib.h":575:41)
#loc152 = loc("/usr/include/time.h":76:1)
#loc153 = loc("/usr/include/time.h":76:38)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":391:15)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":393:15)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":396:15)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":398:15)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":386:1)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":401:1)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":387:1)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":389:27)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":389:22)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":389:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":391:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":392:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":392:59)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":393:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":396:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":397:5)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":397:58)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":398:5)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":400:12)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":400:5)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":203:19)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":216:27)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":136:1)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":220:1)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":138:5)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":138:9)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":140:13)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":140:12)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":140:5)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":141:5)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":199:5)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":141:8)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":141:27)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":142:5)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":143:9)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":198:9)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":148:13)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":148:17)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":149:13)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":149:32)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":150:13)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":150:36)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":151:13)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":151:45)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":152:13)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":187:21)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":162:40)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":162:49)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":162:62)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":162:33)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":162:17)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":162:73)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":163:17)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":166:17)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":163:21)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":163:38)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":164:17)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":165:21)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":167:24)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":167:25)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":167:34)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":167:37)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":167:51)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":167:17)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":167:52)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":168:38)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":168:17)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":169:53)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":169:43)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":169:17)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":169:63)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":170:42)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":170:36)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":170:17)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":170:50)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":171:17)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":174:17)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":171:29)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":171:62)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":171:63)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":171:72)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":171:86)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":171:21)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":171:92)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":172:17)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":173:21)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":177:35)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":177:50)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":177:63)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":177:81)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":177:84)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":177:30)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":177:17)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":177:85)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":178:17)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":181:17)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":178:21)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":178:35)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":178:48)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":178:51)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":178:65)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":179:17)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":180:21)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":183:43)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":183:29)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":183:17)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":185:29)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":185:24)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":185:17)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":185:40)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":187:20)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":188:13)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":191:13)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":188:17)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":188:34)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":189:13)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":190:30)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":190:17)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":200:5)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":219:5)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":200:8)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":200:27)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":201:5)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":204:5)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":206:5)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":203:9)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":207:9)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":218:9)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":208:13)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":208:34)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":210:13)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":217:13)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":210:17)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":210:25)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":210:27)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":210:30)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":210:38)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":210:40)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":211:13)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":213:13)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":215:13)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":212:37)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":212:30)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":212:17)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":216:17)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":223:1)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":302:1)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":225:5)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":225:9)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":227:13)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":227:12)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":227:5)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":228:5)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":286:5)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":228:8)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":228:27)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":229:5)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":230:9)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":285:9)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":235:13)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":235:17)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":236:13)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":236:32)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":237:13)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":237:36)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":238:13)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":238:45)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":239:13)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":274:21)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":249:40)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":249:49)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":249:62)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":249:33)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":249:17)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":249:73)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":250:17)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":253:17)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":250:21)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":250:38)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":251:17)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":252:21)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":254:24)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":254:25)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":254:34)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":254:37)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":254:51)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":254:17)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":254:52)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":255:38)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":255:17)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":256:53)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":256:43)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":256:17)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":256:63)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":257:42)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":257:36)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":257:17)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":257:50)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":258:17)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":261:17)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":258:29)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":258:62)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":258:63)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":258:72)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":258:86)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":258:21)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":258:92)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":259:17)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":260:21)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":264:35)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":264:50)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":264:63)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":264:81)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":264:84)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":264:30)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":264:17)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":264:85)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":265:17)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":268:17)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":265:21)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":265:35)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":265:48)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":265:51)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":265:65)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":266:17)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":267:21)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":270:43)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":270:29)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":270:17)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":272:29)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":272:24)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":272:17)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":272:40)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":274:20)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":275:13)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":278:13)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":275:17)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":275:34)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":276:13)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":277:30)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":277:17)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":287:5)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":301:5)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":287:8)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":287:27)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":288:5)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":289:9)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":300:9)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":290:13)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":290:34)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":292:13)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":299:13)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":292:17)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":292:25)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":292:27)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":292:30)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":292:38)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":292:40)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":293:13)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":295:13)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":297:13)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":294:37)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":294:30)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":294:17)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":298:27)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":298:17)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":305:1)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":337:1)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":307:5)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":307:9)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":309:13)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":309:12)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":309:5)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":310:5)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":320:5)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":310:8)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":310:27)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":311:5)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":314:5)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":316:5)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":313:19)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":313:9)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":319:16)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":319:9)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":321:5)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":336:5)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":321:8)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":321:27)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":322:5)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":323:9)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":335:9)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":324:13)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":324:34)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":327:13)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":334:13)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":327:17)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":327:25)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":328:13)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":330:13)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":332:13)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":329:37)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":329:30)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":329:17)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":333:27)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":333:17)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":340:1)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":367:1)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":342:5)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":342:9)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":344:13)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":344:12)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":344:5)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":345:5)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":350:5)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":345:8)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":345:27)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":346:5)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":349:16)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":349:9)
#loc477 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":351:5)
#loc478 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":366:5)
#loc479 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":351:8)
#loc480 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":351:27)
#loc481 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":352:5)
#loc482 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":353:9)
#loc483 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":365:9)
#loc484 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":354:13)
#loc485 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":354:34)
#loc486 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":357:13)
#loc487 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":364:13)
#loc488 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":357:17)
#loc489 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":357:25)
#loc490 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":358:13)
#loc491 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":360:13)
#loc492 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":362:13)
#loc493 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":359:37)
#loc494 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":359:30)
#loc495 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":359:17)
#loc496 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":363:27)
#loc497 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_06.c":363:17)
#loc498 = loc(fused[#loc1, #loc2])
#loc499 = loc(fused[#loc3, #loc4])
#loc500 = loc(fused[#loc6, #loc7])
#loc501 = loc(fused[#loc8, #loc9])
#loc502 = loc(fused[#loc10, #loc11])
#loc503 = loc(fused[#loc12, #loc13])
#loc504 = loc(fused[#loc14, #loc15])
#loc505 = loc(fused[#loc16, #loc17])
#loc506 = loc(fused[#loc18, #loc19])
#loc507 = loc(fused[#loc21, #loc22])
#loc508 = loc(fused[#loc23, #loc24])
#loc509 = loc(fused[#loc27, #loc25])
#loc510 = loc(fused[#loc28, #loc29])
#loc511 = loc(fused[#loc30, #loc31])
#loc512 = loc(fused[#loc32, #loc29])
#loc513 = loc(fused[#loc33, #loc34])
#loc514 = loc(fused[#loc35, #loc36])
#loc515 = loc(fused[#loc37, #loc38])
#loc516 = loc(fused[#loc39, #loc40])
#loc517 = loc(fused[#loc41, #loc42])
#loc518 = loc(fused[#loc43, #loc44])
#loc519 = loc(fused[#loc49, #loc50])
#loc520 = loc(fused[#loc51, #loc52])
#loc521 = loc(fused[#loc53, #loc54])
#loc522 = loc(fused[#loc55, #loc52])
#loc523 = loc(fused[#loc57, #loc58])
#loc524 = loc(fused[#loc60, #loc61])
#loc525 = loc(fused[#loc62, #loc63])
#loc526 = loc(fused[#loc66, #loc64])
#loc527 = loc(fused[#loc70, #loc71])
#loc528 = loc(fused[#loc75, #loc76])
#loc529 = loc(fused[#loc77, #loc78])
#loc530 = loc(fused[#loc80, #loc81])
#loc531 = loc(fused[#loc82, #loc83])
#loc532 = loc(fused[#loc84, #loc85])
#loc533 = loc(fused[#loc86, #loc78])
#loc534 = loc(fused[#loc90, #loc91])
#loc535 = loc(fused[#loc94, #loc95])
#loc536 = loc(fused[#loc96, #loc97])
#loc537 = loc(fused[#loc98, #loc99])
#loc538 = loc(fused[#loc101, #loc102])
#loc539 = loc(fused[#loc103, #loc97])
#loc540 = loc(fused[#loc107, #loc105])
#loc541 = loc(fused[#loc110, #loc111])
#loc542 = loc(fused[#loc113, #loc114])
#loc543 = loc(fused[#loc115, #loc116])
#loc544 = loc(fused[#loc117, #loc114])
#loc545 = loc(fused[#loc120, #loc121])
#loc546 = loc(fused[#loc122, #loc123])
#loc547 = loc(fused[#loc124, #loc121])
#loc548 = loc(fused[#loc125, #loc126])
#loc549 = loc(fused[#loc127, #loc128])
#loc550 = loc(fused[#loc129, #loc130])
#loc551 = loc(fused[#loc131, #loc132])
#loc552 = loc(fused[#loc133, #loc134, #loc135, #loc130])
#loc553 = loc(fused[#loc140, #loc141])
#loc554 = loc(fused[#loc142, #loc143])
#loc555 = loc(fused[#loc144, #loc145])
#loc556 = loc(fused[#loc146, #loc147])
#loc557 = loc(fused[#loc148, #loc149])
#loc558 = loc(fused[#loc150, #loc151])
#loc559 = loc(fused[#loc152, #loc153])
#loc560 = loc(fused[#loc158, #loc159])
#loc563 = loc(fused[#loc169, #loc170])
#loc564 = loc(fused[#loc173, #loc174])
#loc565 = loc(fused[#loc177, #loc176])
#loc566 = loc(fused[#loc180, #loc181])
#loc567 = loc(fused[#loc182, #loc183])
#loc568 = loc(fused[#loc186, #loc184])
#loc569 = loc(fused[#loc187, #loc188])
#loc570 = loc(fused[#loc189, #loc190])
#loc571 = loc(fused[#loc191, #loc188])
#loc572 = loc(fused[#loc192, #loc193])
#loc573 = loc(fused[#loc194, #loc195])
#loc574 = loc(fused[#loc196, #loc197])
#loc575 = loc(fused[#loc198, #loc199])
#loc576 = loc(fused[#loc200, #loc201])
#loc577 = loc(fused[#loc202, #loc203])
#loc578 = loc(fused[#loc208, #loc209])
#loc579 = loc(fused[#loc210, #loc211])
#loc580 = loc(fused[#loc212, #loc213])
#loc581 = loc(fused[#loc214, #loc211])
#loc582 = loc(fused[#loc216, #loc217])
#loc583 = loc(fused[#loc219, #loc220])
#loc584 = loc(fused[#loc221, #loc222])
#loc585 = loc(fused[#loc224, #loc223])
#loc586 = loc(fused[#loc227, #loc228])
#loc587 = loc(fused[#loc231, #loc232])
#loc588 = loc(fused[#loc233, #loc234])
#loc589 = loc(fused[#loc236, #loc237])
#loc590 = loc(fused[#loc238, #loc239])
#loc591 = loc(fused[#loc240, #loc241])
#loc592 = loc(fused[#loc242, #loc234])
#loc593 = loc(fused[#loc246, #loc247])
#loc594 = loc(fused[#loc250, #loc251])
#loc595 = loc(fused[#loc252, #loc253])
#loc596 = loc(fused[#loc254, #loc255])
#loc597 = loc(fused[#loc257, #loc258])
#loc598 = loc(fused[#loc259, #loc253])
#loc599 = loc(fused[#loc263, #loc261])
#loc600 = loc(fused[#loc266, #loc267])
#loc601 = loc(fused[#loc269, #loc270])
#loc602 = loc(fused[#loc271, #loc272])
#loc603 = loc(fused[#loc273, #loc270])
#loc604 = loc(fused[#loc276, #loc277])
#loc605 = loc(fused[#loc278, #loc279])
#loc606 = loc(fused[#loc280, #loc281, #loc282, #loc277])
#loc607 = loc(fused[#loc284, #loc285])
#loc608 = loc(fused[#loc286, #loc287])
#loc609 = loc(fused[#loc288, #loc289])
#loc610 = loc(fused[#loc290, #loc291])
#loc611 = loc(fused[#loc293, #loc295])
#loc612 = loc(fused[#loc296, #loc297, #loc298, #loc289])
#loc613 = loc(fused[#loc303, #loc304])
#loc614 = loc(fused[#loc305, #loc306])
#loc615 = loc(fused[#loc309, #loc307])
#loc616 = loc(fused[#loc310, #loc311])
#loc617 = loc(fused[#loc312, #loc313])
#loc618 = loc(fused[#loc314, #loc311])
#loc619 = loc(fused[#loc315, #loc316])
#loc620 = loc(fused[#loc317, #loc318])
#loc621 = loc(fused[#loc319, #loc320])
#loc622 = loc(fused[#loc321, #loc322])
#loc623 = loc(fused[#loc323, #loc324])
#loc624 = loc(fused[#loc325, #loc326])
#loc625 = loc(fused[#loc331, #loc332])
#loc626 = loc(fused[#loc333, #loc334])
#loc627 = loc(fused[#loc335, #loc336])
#loc628 = loc(fused[#loc337, #loc334])
#loc629 = loc(fused[#loc339, #loc340])
#loc630 = loc(fused[#loc342, #loc343])
#loc631 = loc(fused[#loc344, #loc345])
#loc632 = loc(fused[#loc347, #loc346])
#loc633 = loc(fused[#loc350, #loc351])
#loc634 = loc(fused[#loc354, #loc355])
#loc635 = loc(fused[#loc356, #loc357])
#loc636 = loc(fused[#loc359, #loc360])
#loc637 = loc(fused[#loc361, #loc362])
#loc638 = loc(fused[#loc363, #loc364])
#loc639 = loc(fused[#loc365, #loc357])
#loc640 = loc(fused[#loc369, #loc370])
#loc641 = loc(fused[#loc373, #loc374])
#loc642 = loc(fused[#loc375, #loc376])
#loc643 = loc(fused[#loc377, #loc378])
#loc644 = loc(fused[#loc380, #loc381])
#loc645 = loc(fused[#loc382, #loc376])
#loc646 = loc(fused[#loc386, #loc384])
#loc647 = loc(fused[#loc389, #loc390])
#loc648 = loc(fused[#loc392, #loc393])
#loc649 = loc(fused[#loc394, #loc395])
#loc650 = loc(fused[#loc396, #loc393])
#loc651 = loc(fused[#loc399, #loc400])
#loc652 = loc(fused[#loc401, #loc402])
#loc653 = loc(fused[#loc403, #loc400])
#loc654 = loc(fused[#loc404, #loc405])
#loc655 = loc(fused[#loc406, #loc407])
#loc656 = loc(fused[#loc408, #loc409])
#loc657 = loc(fused[#loc410, #loc411])
#loc658 = loc(fused[#loc413, #loc415])
#loc659 = loc(fused[#loc416, #loc417, #loc418, #loc409])
#loc660 = loc(fused[#loc424, #loc425])
#loc661 = loc(fused[#loc426, #loc427])
#loc662 = loc(fused[#loc430, #loc428])
#loc663 = loc(fused[#loc431, #loc432])
#loc664 = loc(fused[#loc433, #loc434])
#loc665 = loc(fused[#loc435, #loc436, #loc437, #loc432])
#loc666 = loc(fused[#loc441, #loc440])
#loc667 = loc(fused[#loc442, #loc443])
#loc668 = loc(fused[#loc444, #loc445])
#loc669 = loc(fused[#loc446, #loc443])
#loc670 = loc(fused[#loc447, #loc448])
#loc671 = loc(fused[#loc449, #loc450])
#loc672 = loc(fused[#loc451, #loc452])
#loc673 = loc(fused[#loc453, #loc454])
#loc674 = loc(fused[#loc455, #loc456, #loc457, #loc452])
#loc675 = loc(fused[#loc463, #loc464])
#loc676 = loc(fused[#loc465, #loc466])
#loc677 = loc(fused[#loc469, #loc467])
#loc678 = loc(fused[#loc470, #loc471])
#loc679 = loc(fused[#loc472, #loc473])
#loc680 = loc(fused[#loc474, #loc471])
#loc681 = loc(fused[#loc476, #loc475])
#loc682 = loc(fused[#loc477, #loc478])
#loc683 = loc(fused[#loc479, #loc480])
#loc684 = loc(fused[#loc481, #loc478])
#loc685 = loc(fused[#loc482, #loc483])
#loc686 = loc(fused[#loc484, #loc485])
#loc687 = loc(fused[#loc486, #loc487])
#loc688 = loc(fused[#loc488, #loc489])
#loc689 = loc(fused[#loc490, #loc491, #loc492, #loc487])
