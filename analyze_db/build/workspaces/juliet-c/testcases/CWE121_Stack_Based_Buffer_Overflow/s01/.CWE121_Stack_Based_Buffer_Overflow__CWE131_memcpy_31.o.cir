!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc65)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc67)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc68)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc69)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc70)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %4, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc71)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc15)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc15)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc15)
    cir.store %9, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc72)
    cir.br ^bb1 loc(#loc73)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc6)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc67)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc8)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc68)
    cir.br ^bb2 loc(#loc74)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc69)
    cir.store %12, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc69)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc21)
    %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc22)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc22)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc23)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc23)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc75)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc76)
    cir.libc.memcpy %20 bytes from %16 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc77)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc30)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc31)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc4)
  } loc(#loc66)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc79)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc78)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc82)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc83)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc84)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc46)
    cir.store %4, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc85)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc48)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc48)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc48)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc48)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc48)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc48)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc48)
    cir.store %11, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc86)
    cir.br ^bb1 loc(#loc87)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc81)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc82)
    cir.br ^bb2 loc(#loc88)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc83)
    cir.store %14, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc83)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc54)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc55)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc55)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc56)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc56)
    %21 = cir.const #cir.int<4> : !u64i loc(#loc89)
    %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc90)
    cir.libc.memcpy %22 bytes from %18 to %16 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc91)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc63)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc64)
    cir.br ^bb3 loc(#loc53)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc51)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc37)
  } loc(#loc80)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":37:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":28:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":28:26)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":29:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":29:22)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":31:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":31:32)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":23:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":23:11)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":24:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":24:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":26:19)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":26:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":27:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":36:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":30:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":35:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":33:20)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":33:26)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":33:34)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":33:37)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":33:47)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":33:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":33:48)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":34:26)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":34:31)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":34:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":34:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":62:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":65:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":64:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":64:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":44:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":60:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":51:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":51:26)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":52:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":52:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":54:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":54:32)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":46:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":46:11)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":47:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":47:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":49:19)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":49:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":50:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":59:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":53:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":58:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":56:20)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":56:26)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":56:34)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":56:37)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":56:47)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":56:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":56:48)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":57:26)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":57:31)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":57:32)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c":57:13)
#loc65 = loc(fused[#loc1, #loc2])
#loc66 = loc(fused[#loc3, #loc4])
#loc67 = loc(fused[#loc5, #loc6])
#loc68 = loc(fused[#loc7, #loc8])
#loc69 = loc(fused[#loc9, #loc10])
#loc70 = loc(fused[#loc11, #loc12])
#loc71 = loc(fused[#loc14, #loc13])
#loc72 = loc(fused[#loc16, #loc15])
#loc73 = loc(fused[#loc17, #loc18])
#loc74 = loc(fused[#loc19, #loc20])
#loc75 = loc(fused[#loc24, #loc25])
#loc76 = loc(fused[#loc23, #loc25])
#loc77 = loc(fused[#loc26, #loc27])
#loc78 = loc(fused[#loc32, #loc33])
#loc79 = loc(fused[#loc34, #loc35])
#loc80 = loc(fused[#loc36, #loc37])
#loc81 = loc(fused[#loc38, #loc39])
#loc82 = loc(fused[#loc40, #loc41])
#loc83 = loc(fused[#loc42, #loc43])
#loc84 = loc(fused[#loc44, #loc45])
#loc85 = loc(fused[#loc47, #loc46])
#loc86 = loc(fused[#loc49, #loc48])
#loc87 = loc(fused[#loc50, #loc51])
#loc88 = loc(fused[#loc52, #loc53])
#loc89 = loc(fused[#loc57, #loc58])
#loc90 = loc(fused[#loc56, #loc58])
#loc91 = loc(fused[#loc59, #loc60])
