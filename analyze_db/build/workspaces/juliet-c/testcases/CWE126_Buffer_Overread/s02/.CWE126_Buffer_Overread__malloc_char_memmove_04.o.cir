!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc216)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc217)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc218)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc220)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc19)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
        %5 = cir.const #cir.int<50> : !s32i loc(#loc22)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc22)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc226)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc227)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc228)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
        cir.scope {
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc231)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc34)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
          } loc(#loc232)
        } loc(#loc230)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc36)
        %14 = cir.const #cir.int<50> : !s32i loc(#loc37)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc37)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc37)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc233)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc41)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc41)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
        %21 = cir.const #cir.int<50> : !s32i loc(#loc43)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc43)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc45)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc234)
      } loc(#loc225)
    } loc(#loc224)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc236)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc51)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc52)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc52)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc237)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc56)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc56)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc57)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc57)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc59)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc238)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc62)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc62)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc239)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc240)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc241)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc68)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc68)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc69)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc70)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc69)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc71)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc242)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc73)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc74)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
    } loc(#loc235)
    cir.return loc(#loc12)
  } loc(#loc221)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc244)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc78)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc245)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc80)
    cir.return loc(#loc77)
  } loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc82)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc91)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc91)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc82)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc82)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc95)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc96)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc97)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc97)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc251)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc252)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc253)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
        cir.scope {
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc256)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc107)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc109)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
          } loc(#loc257)
        } loc(#loc255)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc111)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc112)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc112)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc112)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc258)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc116)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc116)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc118)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc119)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc118)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc120)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc259)
      } loc(#loc250)
    } loc(#loc249)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc261)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc126)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc127)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc128)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc127)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc127)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc262)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc131)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc131)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc132)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc133)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc132)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc134)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc263)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc137)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc137)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc264)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc265)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc266)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc143)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc143)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc144)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc144)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc146)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc267)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc148)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc149)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
    } loc(#loc260)
    cir.return loc(#loc84)
  } loc(#loc246)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc269)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc155)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc159)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc159)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc161)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc162)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc162)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc273)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc274)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc161)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc275)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
        cir.scope {
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc170)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc278)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc172)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc173)
            %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc174)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc172)
          } loc(#loc279)
        } loc(#loc277)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc176)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc177)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc178)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc177)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc177)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc280)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc181)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc181)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc183)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc184)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc183)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc185)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc281)
      } loc(#loc272)
    } loc(#loc271)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc283)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc190)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc190)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc191)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc192)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc193)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc192)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc192)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc284)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc196)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc196)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc197)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc198)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc197)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc199)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc199)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc285)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc200)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc201)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc202)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc202)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc286)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc287)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc288)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc208)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc208)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc209)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc210)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc209)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc211)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc211)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc289)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc212)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc213)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc214)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc215)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc214)
    } loc(#loc282)
    cir.return loc(#loc152)
  } loc(#loc268)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":30:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":53:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":32:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":32:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":33:12)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":33:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":34:5)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":41:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":34:8)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":35:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":37:24)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":37:31)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":37:34)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":37:45)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":37:46)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":37:9)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":38:9)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":38:37)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":38:13)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":38:21)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":38:27)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":38:28)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":38:34)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":38:33)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":39:16)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":39:22)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":39:27)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":39:30)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":39:9)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":39:31)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":40:22)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":40:9)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":40:14)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":40:17)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":40:18)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":42:5)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":52:5)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":43:9)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":43:22)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":44:16)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":44:22)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":44:27)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":44:31)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":44:9)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":44:32)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":45:23)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":45:14)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":45:18)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":45:9)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":48:17)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":48:23)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":48:29)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":48:36)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":48:42)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":48:53)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":48:9)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":48:54)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":49:23)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":49:14)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":49:18)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":49:9)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":50:19)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":50:9)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":51:9)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":51:14)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":116:1)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":120:1)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":118:5)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":118:14)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":119:5)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":119:14)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":67:19)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":60:1)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":88:1)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":62:5)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":62:12)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":63:12)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":63:5)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":64:5)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":76:5)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":64:8)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":65:5)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":68:5)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":70:5)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":67:9)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":72:24)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":72:31)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":72:35)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":72:46)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":72:47)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":72:9)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":73:9)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":73:37)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":73:13)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":73:21)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":73:27)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":73:28)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":73:34)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":73:33)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":74:16)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":74:22)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":74:27)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":74:31)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":74:9)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":74:32)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":75:23)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":75:9)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":75:14)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":75:18)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":75:19)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":77:5)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":87:5)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":78:9)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":78:22)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":79:16)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":79:22)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":79:27)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":79:31)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":79:9)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":79:32)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":80:23)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":80:14)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":80:18)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":80:9)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":83:17)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":83:23)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":83:29)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":83:36)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":83:42)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":83:53)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":83:9)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":83:54)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":84:23)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":84:14)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":84:18)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":84:9)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":85:19)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":85:9)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":86:9)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":86:14)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":91:1)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":114:1)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":93:5)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":93:12)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":94:12)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":94:5)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":95:5)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":102:5)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":95:8)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":96:5)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":98:24)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":98:31)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":98:35)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":98:46)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":98:47)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":98:9)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":99:9)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":99:37)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":99:13)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":99:21)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":99:27)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":99:28)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":99:34)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":99:33)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":100:16)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":100:22)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":100:27)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":100:31)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":100:9)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":100:32)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":101:23)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":101:9)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":101:14)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":101:18)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":101:19)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":103:5)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":113:5)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":104:9)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":104:22)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":105:16)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":105:22)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":105:27)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":105:31)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":105:9)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":105:32)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":106:23)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":106:14)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":106:18)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":106:9)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":109:17)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":109:23)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":109:29)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":109:36)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":109:42)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":109:53)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":109:9)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":109:54)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":110:23)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":110:14)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":110:18)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":110:9)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":111:19)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":111:9)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":112:9)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_memmove_04.c":112:14)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc5, #loc6])
#loc219 = loc(fused[#loc7, #loc8])
#loc220 = loc(fused[#loc9, #loc10])
#loc221 = loc(fused[#loc11, #loc12])
#loc222 = loc(fused[#loc13, #loc14])
#loc223 = loc(fused[#loc16, #loc15])
#loc224 = loc(fused[#loc17, #loc18])
#loc225 = loc(fused[#loc20, #loc18])
#loc226 = loc(fused[#loc23, #loc24])
#loc227 = loc(fused[#loc22, #loc24])
#loc228 = loc(fused[#loc21, #loc25])
#loc229 = loc(fused[#loc26, #loc25])
#loc230 = loc(fused[#loc27, #loc28])
#loc231 = loc(fused[#loc29, #loc30])
#loc232 = loc(fused[#loc31, #loc28])
#loc233 = loc(fused[#loc39, #loc40])
#loc234 = loc(fused[#loc42, #loc41])
#loc235 = loc(fused[#loc46, #loc47])
#loc236 = loc(fused[#loc48, #loc49])
#loc237 = loc(fused[#loc54, #loc55])
#loc238 = loc(fused[#loc59, #loc56])
#loc239 = loc(fused[#loc64, #loc65])
#loc240 = loc(fused[#loc62, #loc65])
#loc241 = loc(fused[#loc66, #loc67])
#loc242 = loc(fused[#loc71, #loc68])
#loc243 = loc(fused[#loc76, #loc77])
#loc244 = loc(fused[#loc78, #loc79])
#loc245 = loc(fused[#loc80, #loc81])
#loc246 = loc(fused[#loc83, #loc84])
#loc247 = loc(fused[#loc85, #loc86])
#loc248 = loc(fused[#loc88, #loc87])
#loc249 = loc(fused[#loc89, #loc90])
#loc250 = loc(fused[#loc92, #loc93, #loc94, #loc90])
#loc251 = loc(fused[#loc98, #loc99])
#loc252 = loc(fused[#loc97, #loc99])
#loc253 = loc(fused[#loc96, #loc100])
#loc254 = loc(fused[#loc101, #loc100])
#loc255 = loc(fused[#loc102, #loc103])
#loc256 = loc(fused[#loc104, #loc105])
#loc257 = loc(fused[#loc106, #loc103])
#loc258 = loc(fused[#loc114, #loc115])
#loc259 = loc(fused[#loc117, #loc116])
#loc260 = loc(fused[#loc121, #loc122])
#loc261 = loc(fused[#loc123, #loc124])
#loc262 = loc(fused[#loc129, #loc130])
#loc263 = loc(fused[#loc134, #loc131])
#loc264 = loc(fused[#loc139, #loc140])
#loc265 = loc(fused[#loc137, #loc140])
#loc266 = loc(fused[#loc141, #loc142])
#loc267 = loc(fused[#loc146, #loc143])
#loc268 = loc(fused[#loc151, #loc152])
#loc269 = loc(fused[#loc153, #loc154])
#loc270 = loc(fused[#loc156, #loc155])
#loc271 = loc(fused[#loc157, #loc158])
#loc272 = loc(fused[#loc160, #loc158])
#loc273 = loc(fused[#loc163, #loc164])
#loc274 = loc(fused[#loc162, #loc164])
#loc275 = loc(fused[#loc161, #loc165])
#loc276 = loc(fused[#loc166, #loc165])
#loc277 = loc(fused[#loc167, #loc168])
#loc278 = loc(fused[#loc169, #loc170])
#loc279 = loc(fused[#loc171, #loc168])
#loc280 = loc(fused[#loc179, #loc180])
#loc281 = loc(fused[#loc182, #loc181])
#loc282 = loc(fused[#loc186, #loc187])
#loc283 = loc(fused[#loc188, #loc189])
#loc284 = loc(fused[#loc194, #loc195])
#loc285 = loc(fused[#loc199, #loc196])
#loc286 = loc(fused[#loc204, #loc205])
#loc287 = loc(fused[#loc202, #loc205])
#loc288 = loc(fused[#loc206, #loc207])
#loc289 = loc(fused[#loc211, #loc208])
