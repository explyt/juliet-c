!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc351)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc352)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc353)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc354)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc355)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc356)
  cir.func private @close(!s32i) -> !s32i loc(#loc357)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc358)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc360)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc363)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc364)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc365)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc366)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc32)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc365)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc39)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc41)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc42)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc369)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc47)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc48)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc371)
              cir.if %57 {
                cir.break loc(#loc50)
              } loc(#loc372)
            } loc(#loc370)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc373)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc374)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc375)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc58)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc58)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc376)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc61)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc377)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc66)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc66)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc67)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc378)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc73)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc380)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc381)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc381)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc78)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc79)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc79)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc382)
              cir.if %61 {
                cir.break loc(#loc81)
              } loc(#loc383)
            } loc(#loc379)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc82)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc83)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc84)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc84)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc84)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc84)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc84)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc84)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc84)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc85)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc384)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc86)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc87)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc87)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc385)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc93)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc387)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc94)
                cir.yield %59 : !cir.bool loc(#loc94)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc96)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc388)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc94)
                  cir.yield %63 : !cir.bool loc(#loc94)
                }, false {
                  %63 = cir.const #false loc(#loc94)
                  cir.yield %63 : !cir.bool loc(#loc94)
                }) : (!cir.bool) -> !cir.bool loc(#loc94)
                cir.yield %62 : !cir.bool loc(#loc94)
              }) : (!cir.bool) -> !cir.bool loc(#loc94)
              cir.if %58 {
                cir.break loc(#loc98)
              } loc(#loc389)
            } loc(#loc386)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc99)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc99)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc101)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc390)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc103)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc391)
          } loc(#loc368)
          cir.yield loc(#loc36)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc106)
          cir.condition(%13) loc(#loc106)
        } loc(#loc367)
      } loc(#loc367)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc110)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc393)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc113)
        } loc(#loc394)
      } loc(#loc392)
    } loc(#loc362)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %4 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc358)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc395)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc396)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc116)
    cir.return loc(#loc19)
  } loc(#loc359)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc398)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc120)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc399)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc122)
    cir.return loc(#loc119)
  } loc(#loc397)
  cir.func private @printIntLine(!s32i) loc(#loc400)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc401)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc128)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc403)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc358)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc405)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc406)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc406)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc406)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc142)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc408)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc146)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc148)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc148)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc410)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc151)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc412)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc154)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc413)
              cir.condition(%16) loc(#loc155)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc158)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc158)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc158)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc159)
              } loc(#loc414)
              cir.yield loc(#loc150)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc160)
              %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc161)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc415)
              cir.yield loc(#loc411)
            } loc(#loc411)
          } loc(#loc411)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc128)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc128)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc162)
        } loc(#loc409)
      } loc(#loc407)
    } loc(#loc404)
    cir.return loc(#loc130)
  } loc(#loc402)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc416)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc418)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc170)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc419)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc172)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc416)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc422)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc176)
    cir.return loc(#loc166)
  } loc(#loc417)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc424)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc416)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc424)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc426)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc427)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc427)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc427)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc191)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc429)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc195)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc197)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc197)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc431)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc200)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc433)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc202)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc203)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc434)
              cir.condition(%16) loc(#loc204)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc206)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc207)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc207)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc208)
              } loc(#loc435)
              cir.yield loc(#loc199)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc209)
              %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc210)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc436)
              cir.yield loc(#loc432)
            } loc(#loc432)
          } loc(#loc432)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc211)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc211)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc212)
        } loc(#loc430)
      } loc(#loc428)
    } loc(#loc425)
    cir.return loc(#loc179)
  } loc(#loc423)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc437)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc439)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc219)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc220)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc440)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc442)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc443)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc444)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc445)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc229)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc229)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc444)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc236)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc237)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc238)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc239)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc448)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc244)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc245)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc245)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc450)
              cir.if %57 {
                cir.break loc(#loc247)
              } loc(#loc451)
            } loc(#loc449)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc452)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc250)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc453)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc454)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc255)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc255)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc455)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc257)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc257)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc258)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc456)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc261)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc261)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc262)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc457)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc267)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc459)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc460)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc460)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc272)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc273)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc273)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc461)
              cir.if %61 {
                cir.break loc(#loc275)
              } loc(#loc462)
            } loc(#loc458)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc276)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc277)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc277)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc278)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc278)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc278)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc278)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc278)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc278)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc278)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc279)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc279)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc463)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc280)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc281)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc281)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc464)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc286)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc287)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc287)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc466)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc288)
                cir.yield %59 : !cir.bool loc(#loc288)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc289)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc290)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc467)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc288)
                  cir.yield %63 : !cir.bool loc(#loc288)
                }, false {
                  %63 = cir.const #false loc(#loc288)
                  cir.yield %63 : !cir.bool loc(#loc288)
                }) : (!cir.bool) -> !cir.bool loc(#loc288)
                cir.yield %62 : !cir.bool loc(#loc288)
              }) : (!cir.bool) -> !cir.bool loc(#loc288)
              cir.if %58 {
                cir.break loc(#loc292)
              } loc(#loc468)
            } loc(#loc465)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc293)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc293)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc294)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc295)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc295)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc469)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc296)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc297)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc470)
          } loc(#loc447)
          cir.yield loc(#loc233)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc300)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc300)
          cir.condition(%13) loc(#loc300)
        } loc(#loc446)
      } loc(#loc446)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc303)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc304)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc304)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc472)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc306)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc307)
        } loc(#loc473)
      } loc(#loc471)
    } loc(#loc441)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %4 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc437)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    %5 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc475)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc310)
    cir.return loc(#loc216)
  } loc(#loc438)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc312)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc477)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc437)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc479)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc480)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc480)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc480)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc325)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc326)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc482)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc328)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc329)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc483)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc327)
            cir.yield %14 : !cir.bool loc(#loc327)
          }, false {
            %14 = cir.const #false loc(#loc327)
            cir.yield %14 : !cir.bool loc(#loc327)
          }) : (!cir.bool) -> !cir.bool loc(#loc327)
          cir.yield %13 : !cir.bool loc(#loc327)
        }, false {
          %10 = cir.const #false loc(#loc327)
          cir.yield %10 : !cir.bool loc(#loc327)
        }) : (!cir.bool) -> !cir.bool loc(#loc327)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc334)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc335)
          %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc336)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc336)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc485)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc339)
            cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc487)
            cir.for : cond {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc341)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc342)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc488)
              cir.condition(%17) loc(#loc343)
            } body {
              cir.scope {
                %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc345)
                %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc346)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc346)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc347)
              } loc(#loc489)
              cir.yield loc(#loc338)
            } step {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc348)
              %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc349)
              cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc490)
              cir.yield loc(#loc486)
            } loc(#loc486)
          } loc(#loc486)
        } else {
          %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc312)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc312)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc350)
        } loc(#loc484)
      } loc(#loc481)
    } loc(#loc478)
    cir.return loc(#loc314)
  } loc(#loc476)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":42:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":42:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":72:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":135:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":74:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":74:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":76:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":76:12)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":76:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":77:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":132:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":82:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":82:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":83:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":83:28)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":84:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":84:32)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":85:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":85:41)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":86:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":121:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":87:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":120:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:36)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:45)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:58)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:29)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:69)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":97:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":100:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":97:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":97:34)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":98:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":99:17)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:20)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:21)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:30)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:33)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:47)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:48)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":102:34)
#loc59 = loc("/usr/include/netinet/in.h":249:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":102:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:39)
#loc62 = loc("/usr/include/netinet/in.h":251:20)
#loc63 = loc("/usr/include/netinet/in.h":33:15)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:59)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:38)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:46)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":108:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:25)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:58)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:59)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:68)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:82)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:88)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":106:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":107:17)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:31)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:46)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:59)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:77)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:80)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:26)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:81)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":115:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:17)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:31)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:44)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:47)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:61)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":113:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":114:17)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":117:39)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":117:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":117:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:25)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:20)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:36)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":121:16)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":122:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":125:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":122:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":122:30)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":123:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":124:26)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":124:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":133:76)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":133:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":134:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":134:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":267:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":271:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":269:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":269:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":270:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":270:13)
#loc124 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc125 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc126 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc127 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":67:23)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":48:1)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":70:1)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":50:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":50:16)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":51:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":69:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":52:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":52:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":53:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":53:30)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":56:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":68:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":56:13)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":56:21)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":57:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":64:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":66:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":58:28)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":58:20)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":58:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":63:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:21)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:17)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:24)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:28)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:26)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":61:13)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":62:37)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":62:30)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":62:17)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:33)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:32)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":67:13)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":43:1)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":43:12)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":166:1)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":176:1)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":168:5)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":168:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":170:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":170:12)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":170:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":173:12)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":173:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":174:80)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":174:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":175:5)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":175:17)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":142:1)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":164:1)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":144:5)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":144:16)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":145:5)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":163:5)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":146:9)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":146:13)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":147:9)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":147:30)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":150:9)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":162:9)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":150:13)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":150:21)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":151:9)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":158:9)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":160:9)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":152:28)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":152:20)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":152:13)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:13)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":157:13)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:21)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:17)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:24)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:28)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:26)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":155:13)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":156:37)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":156:30)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":156:17)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:33)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:32)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":161:23)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":161:13)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":44:1)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":44:12)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":202:1)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":265:1)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":204:5)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":204:9)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":206:13)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":206:12)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":206:5)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":207:5)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":262:5)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":212:9)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":212:13)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":213:9)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":213:28)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":214:9)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":214:32)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":215:9)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":215:41)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":216:9)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":251:17)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":217:9)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":250:9)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:36)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:45)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:58)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:29)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:13)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:69)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":227:13)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":230:13)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":227:17)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":227:34)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":228:13)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":229:17)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:20)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:21)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:30)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:33)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:47)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:13)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:48)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":232:34)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":232:13)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:49)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:39)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:13)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:59)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:38)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:32)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:13)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:46)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:13)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":238:13)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:25)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:58)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:59)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:68)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:82)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:17)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:88)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":236:13)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":237:17)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:31)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:46)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:59)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:77)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:80)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:26)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:13)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:81)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:13)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":245:13)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:17)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:31)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:44)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:47)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:61)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":243:13)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":244:17)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":247:39)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":247:25)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":247:13)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:25)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:20)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:13)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:36)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":251:16)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":252:9)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":255:9)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":252:13)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":252:30)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":253:9)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":254:26)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":254:13)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":263:80)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":263:5)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":264:5)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":264:17)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":197:23)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":179:1)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":200:1)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":181:5)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":181:16)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":182:5)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":199:5)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":183:9)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":183:13)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":184:9)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":184:30)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:9)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":198:9)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:13)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:21)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:23)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:26)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:34)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:36)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":187:9)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":194:9)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":196:9)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":188:28)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":188:20)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":188:13)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:13)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":193:13)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:21)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:17)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:24)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:28)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:26)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":191:13)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":192:37)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":192:30)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":192:17)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:33)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:32)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":197:13)
#loc351 = loc(fused[#loc1, #loc2])
#loc352 = loc(fused[#loc3, #loc4])
#loc353 = loc(fused[#loc6, #loc7])
#loc354 = loc(fused[#loc8, #loc9])
#loc355 = loc(fused[#loc10, #loc11])
#loc356 = loc(fused[#loc12, #loc13])
#loc357 = loc(fused[#loc14, #loc15])
#loc358 = loc(fused[#loc16, #loc17])
#loc359 = loc(fused[#loc18, #loc19])
#loc360 = loc(fused[#loc20, #loc21])
#loc361 = loc(fused[#loc24, #loc22])
#loc362 = loc(fused[#loc25, #loc26])
#loc363 = loc(fused[#loc27, #loc28])
#loc364 = loc(fused[#loc29, #loc30])
#loc365 = loc(fused[#loc31, #loc32])
#loc366 = loc(fused[#loc33, #loc34])
#loc367 = loc(fused[#loc35, #loc36])
#loc368 = loc(fused[#loc37, #loc38])
#loc369 = loc(fused[#loc43, #loc44])
#loc370 = loc(fused[#loc45, #loc46])
#loc371 = loc(fused[#loc47, #loc48])
#loc372 = loc(fused[#loc49, #loc46])
#loc373 = loc(fused[#loc51, #loc52])
#loc374 = loc(fused[#loc54, #loc55])
#loc375 = loc(fused[#loc56, #loc57])
#loc376 = loc(fused[#loc60, #loc58])
#loc377 = loc(fused[#loc64, #loc65])
#loc378 = loc(fused[#loc69, #loc70])
#loc379 = loc(fused[#loc71, #loc72])
#loc380 = loc(fused[#loc74, #loc75])
#loc381 = loc(fused[#loc76, #loc77])
#loc382 = loc(fused[#loc78, #loc79])
#loc383 = loc(fused[#loc80, #loc72])
#loc384 = loc(fused[#loc84, #loc85])
#loc385 = loc(fused[#loc88, #loc89])
#loc386 = loc(fused[#loc90, #loc91])
#loc387 = loc(fused[#loc92, #loc93])
#loc388 = loc(fused[#loc95, #loc96])
#loc389 = loc(fused[#loc97, #loc91])
#loc390 = loc(fused[#loc101, #loc99])
#loc391 = loc(fused[#loc104, #loc105])
#loc392 = loc(fused[#loc107, #loc108])
#loc393 = loc(fused[#loc109, #loc110])
#loc394 = loc(fused[#loc111, #loc108])
#loc395 = loc(fused[#loc115, #loc114])
#loc396 = loc(fused[#loc116, #loc117])
#loc397 = loc(fused[#loc118, #loc119])
#loc398 = loc(fused[#loc120, #loc121])
#loc399 = loc(fused[#loc122, #loc123])
#loc400 = loc(fused[#loc124, #loc125])
#loc401 = loc(fused[#loc126, #loc127])
#loc402 = loc(fused[#loc129, #loc130])
#loc403 = loc(fused[#loc131, #loc132])
#loc404 = loc(fused[#loc133, #loc134])
#loc405 = loc(fused[#loc135, #loc136])
#loc406 = loc(fused[#loc137, #loc138])
#loc407 = loc(fused[#loc139, #loc140])
#loc408 = loc(fused[#loc141, #loc142])
#loc409 = loc(fused[#loc143, #loc144, #loc145, #loc140])
#loc410 = loc(fused[#loc148, #loc146])
#loc411 = loc(fused[#loc149, #loc150])
#loc412 = loc(fused[#loc152, #loc151])
#loc413 = loc(fused[#loc153, #loc154])
#loc414 = loc(fused[#loc156, #loc150])
#loc415 = loc(fused[#loc161, #loc160])
#loc416 = loc(fused[#loc163, #loc164])
#loc417 = loc(fused[#loc165, #loc166])
#loc418 = loc(fused[#loc167, #loc168])
#loc419 = loc(fused[#loc171, #loc169])
#loc420 = loc(fused[#loc173, #loc172])
#loc421 = loc(fused[#loc175, #loc174])
#loc422 = loc(fused[#loc176, #loc177])
#loc423 = loc(fused[#loc178, #loc179])
#loc424 = loc(fused[#loc180, #loc181])
#loc425 = loc(fused[#loc182, #loc183])
#loc426 = loc(fused[#loc184, #loc185])
#loc427 = loc(fused[#loc186, #loc187])
#loc428 = loc(fused[#loc188, #loc189])
#loc429 = loc(fused[#loc190, #loc191])
#loc430 = loc(fused[#loc192, #loc193, #loc194, #loc189])
#loc431 = loc(fused[#loc197, #loc195])
#loc432 = loc(fused[#loc198, #loc199])
#loc433 = loc(fused[#loc201, #loc200])
#loc434 = loc(fused[#loc202, #loc203])
#loc435 = loc(fused[#loc205, #loc199])
#loc436 = loc(fused[#loc210, #loc209])
#loc437 = loc(fused[#loc213, #loc214])
#loc438 = loc(fused[#loc215, #loc216])
#loc439 = loc(fused[#loc217, #loc218])
#loc440 = loc(fused[#loc221, #loc219])
#loc441 = loc(fused[#loc222, #loc223])
#loc442 = loc(fused[#loc224, #loc225])
#loc443 = loc(fused[#loc226, #loc227])
#loc444 = loc(fused[#loc228, #loc229])
#loc445 = loc(fused[#loc230, #loc231])
#loc446 = loc(fused[#loc232, #loc233])
#loc447 = loc(fused[#loc234, #loc235])
#loc448 = loc(fused[#loc240, #loc241])
#loc449 = loc(fused[#loc242, #loc243])
#loc450 = loc(fused[#loc244, #loc245])
#loc451 = loc(fused[#loc246, #loc243])
#loc452 = loc(fused[#loc248, #loc249])
#loc453 = loc(fused[#loc251, #loc252])
#loc454 = loc(fused[#loc253, #loc254])
#loc455 = loc(fused[#loc256, #loc255])
#loc456 = loc(fused[#loc259, #loc260])
#loc457 = loc(fused[#loc263, #loc264])
#loc458 = loc(fused[#loc265, #loc266])
#loc459 = loc(fused[#loc268, #loc269])
#loc460 = loc(fused[#loc270, #loc271])
#loc461 = loc(fused[#loc272, #loc273])
#loc462 = loc(fused[#loc274, #loc266])
#loc463 = loc(fused[#loc278, #loc279])
#loc464 = loc(fused[#loc282, #loc283])
#loc465 = loc(fused[#loc284, #loc285])
#loc466 = loc(fused[#loc286, #loc287])
#loc467 = loc(fused[#loc289, #loc290])
#loc468 = loc(fused[#loc291, #loc285])
#loc469 = loc(fused[#loc295, #loc293])
#loc470 = loc(fused[#loc298, #loc299])
#loc471 = loc(fused[#loc301, #loc302])
#loc472 = loc(fused[#loc303, #loc304])
#loc473 = loc(fused[#loc305, #loc302])
#loc474 = loc(fused[#loc309, #loc308])
#loc475 = loc(fused[#loc310, #loc311])
#loc476 = loc(fused[#loc313, #loc314])
#loc477 = loc(fused[#loc315, #loc316])
#loc478 = loc(fused[#loc317, #loc318])
#loc479 = loc(fused[#loc319, #loc320])
#loc480 = loc(fused[#loc321, #loc322])
#loc481 = loc(fused[#loc323, #loc324])
#loc482 = loc(fused[#loc325, #loc326])
#loc483 = loc(fused[#loc328, #loc330])
#loc484 = loc(fused[#loc331, #loc332, #loc333, #loc324])
#loc485 = loc(fused[#loc336, #loc334])
#loc486 = loc(fused[#loc337, #loc338])
#loc487 = loc(fused[#loc340, #loc339])
#loc488 = loc(fused[#loc341, #loc342])
#loc489 = loc(fused[#loc344, #loc338])
#loc490 = loc(fused[#loc349, #loc348])
