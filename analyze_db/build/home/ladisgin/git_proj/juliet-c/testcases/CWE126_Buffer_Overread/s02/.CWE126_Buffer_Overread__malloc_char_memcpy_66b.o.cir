!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":23:61)
#loc10 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":23:78)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":45:65)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":45:82)
#loc89 = loc(fused[#loc9, #loc10])
#loc100 = loc(fused[#loc48, #loc49])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc86)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc87)
  cir.func @CWE126_Buffer_Overread__malloc_char_memcpy_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc90)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc89)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc15)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    cir.br ^bb1 loc(#loc92)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc21)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc22)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc22)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc93)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc26)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc27)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc94)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc95)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc96)
    cir.libc.memcpy %29 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc97)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc38)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc39)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc98)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
    cir.br ^bb2 loc(#loc19)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc8)
  } loc(#loc88)
  cir.func @CWE126_Buffer_Overread__malloc_char_memcpy_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc100)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc102)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc56)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    cir.br ^bb1 loc(#loc103)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc60)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc61)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc61)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc104)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc65)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc66)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc66)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc68)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc105)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc71)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc71)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc106)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc107)
    cir.libc.memcpy %29 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc108)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc77)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc78)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc80)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc109)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc83)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    cir.br ^bb2 loc(#loc58)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc47)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":23:1)
#loc8 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":38:1)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":28:9)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":28:22)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":26:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":26:30)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":24:1)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":26:19)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":26:29)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":27:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":37:5)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":29:16)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":29:22)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":29:27)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":29:31)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":29:9)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":29:32)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":30:23)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":30:14)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":30:18)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":30:9)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":33:16)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":33:22)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":33:28)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":33:35)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":33:41)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":33:52)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":33:9)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":33:53)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":34:23)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":34:14)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":34:18)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":34:9)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":35:19)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":35:9)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":36:9)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":36:14)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":45:1)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":59:1)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":49:9)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":49:22)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":47:5)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":47:30)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":46:1)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":47:19)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":47:29)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":48:5)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":58:5)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":50:16)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":50:22)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":50:27)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":50:31)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":50:9)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":50:32)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":51:23)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":51:14)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":51:18)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":51:9)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":54:16)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":54:22)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":54:28)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":54:35)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":54:41)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":54:52)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":54:9)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":54:53)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":55:23)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":55:14)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":55:18)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":55:9)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":56:19)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":56:9)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":57:9)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_66b.c":57:14)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc3, #loc4])
#loc87 = loc(fused[#loc5, #loc6])
#loc88 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc11, #loc12])
#loc91 = loc(fused[#loc13, #loc14])
#loc92 = loc(fused[#loc18, #loc19])
#loc93 = loc(fused[#loc24, #loc25])
#loc94 = loc(fused[#loc29, #loc26])
#loc95 = loc(fused[#loc34, #loc35])
#loc96 = loc(fused[#loc32, #loc35])
#loc97 = loc(fused[#loc36, #loc37])
#loc98 = loc(fused[#loc41, #loc38])
#loc99 = loc(fused[#loc46, #loc47])
#loc101 = loc(fused[#loc50, #loc51])
#loc102 = loc(fused[#loc52, #loc53])
#loc103 = loc(fused[#loc57, #loc58])
#loc104 = loc(fused[#loc63, #loc64])
#loc105 = loc(fused[#loc68, #loc65])
#loc106 = loc(fused[#loc73, #loc74])
#loc107 = loc(fused[#loc71, #loc74])
#loc108 = loc(fused[#loc75, #loc76])
#loc109 = loc(fused[#loc80, #loc77])
