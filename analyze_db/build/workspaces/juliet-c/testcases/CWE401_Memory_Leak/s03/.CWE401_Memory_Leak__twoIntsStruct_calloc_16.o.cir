!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc134)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc135)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc139)
  ^bb2:  // 2 preds: ^bb1, ^bb9
    %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc15)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // pred: ^bb3
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc141)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    cir.br ^bb5 loc(#loc144)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc145)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc146)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc30)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %28 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    cir.call @printStructLine(%29) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc44)
    cir.br ^bb10 loc(#loc45)
  ^bb9:  // no predecessors
    cir.br ^bb2 loc(#loc14)
  ^bb10:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb11 loc(#loc14)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc149)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc149)
  ^bb13:  // 2 preds: ^bb12, ^bb16
    %30 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc48)
    cir.brcond %31 ^bb14, ^bb17 loc(#loc48)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc150)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc50)
  ^bb16:  // no predecessors
    cir.br ^bb13 loc(#loc47)
  ^bb17:  // 2 preds: ^bb13, ^bb15
    cir.br ^bb18 loc(#loc47)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc8)
  } loc(#loc136)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc153)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc151)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc154)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc158)
  ^bb2:  // 2 preds: ^bb1, ^bb9
    %2 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc67)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc67)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc159)
  ^bb4:  // pred: ^bb3
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc69)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc70)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc70)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc160)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
    cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    cir.br ^bb5 loc(#loc163)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc164)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc165)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc80)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc82)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
    cir.br ^bb7 loc(#loc76)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc76)
  ^bb8:  // pred: ^bb7
    %17 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %28 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    cir.call @printStructLine(%29) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc94)
    cir.br ^bb10 loc(#loc95)
  ^bb9:  // no predecessors
    cir.br ^bb2 loc(#loc66)
  ^bb10:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb11 loc(#loc66)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc168)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc168)
  ^bb13:  // 2 preds: ^bb12, ^bb16
    %30 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc98)
    cir.brcond %31 ^bb14, ^bb17 loc(#loc98)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc169)
  ^bb15:  // pred: ^bb14
    %32 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc100)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc101)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc100)
    cir.br ^bb17 loc(#loc102)
  ^bb16:  // no predecessors
    cir.br ^bb13 loc(#loc97)
  ^bb17:  // 2 preds: ^bb13, ^bb15
    cir.br ^bb18 loc(#loc97)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc60)
  } loc(#loc155)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc173)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %2 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc111)
    cir.brcond %3 ^bb3, ^bb6 loc(#loc111)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc174)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc113)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc113)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc113)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc113)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc113)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc175)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
    %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
    cir.call @printStructLine(%23) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc126)
    cir.br ^bb6 loc(#loc127)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc110)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc110)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc178)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc178)
  ^bb9:  // 2 preds: ^bb8, ^bb12
    %24 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc130)
    cir.brcond %25 ^bb10, ^bb13 loc(#loc130)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc179)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc132)
  ^bb12:  // no predecessors
    cir.br ^bb9 loc(#loc129)
  ^bb13:  // 2 preds: ^bb9, ^bb11
    cir.br ^bb14 loc(#loc129)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc104)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":45:1)
#loc9 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":26:21)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":27:12)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":27:5)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":28:5)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":38:5)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":28:11)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":29:5)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":31:33)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":31:40)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":31:45)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":31:65)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":31:66)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":31:9)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":32:9)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":32:37)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":32:13)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":32:21)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":32:27)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":32:28)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":32:34)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":32:33)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":34:26)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":34:9)
#loc33 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":34:14)
#loc34 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":34:15)
#loc35 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc36 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":35:26)
#loc37 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":35:9)
#loc38 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":35:14)
#loc39 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":35:15)
#loc40 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":36:26)
#loc42 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":36:31)
#loc43 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":36:32)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":36:9)
#loc45 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":37:9)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":39:5)
#loc47 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":44:5)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":39:11)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":40:5)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":43:9)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":98:1)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":102:1)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":100:5)
#loc54 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":100:13)
#loc55 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":101:5)
#loc56 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":101:13)
#loc57 = loc("/usr/include/stdlib.h":687:1)
#loc58 = loc("/usr/include/stdlib.h":687:32)
#loc59 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":52:1)
#loc60 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":73:1)
#loc61 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":54:5)
#loc62 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":54:21)
#loc63 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":55:12)
#loc64 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":55:5)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":56:5)
#loc66 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":66:5)
#loc67 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":56:11)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":57:5)
#loc69 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":59:33)
#loc70 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":59:40)
#loc71 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":59:45)
#loc72 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":59:65)
#loc73 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":59:66)
#loc74 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":59:9)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":60:9)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":60:37)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":60:13)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":60:21)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":60:27)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":60:28)
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":60:34)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":60:33)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":62:26)
#loc84 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":62:9)
#loc85 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":62:14)
#loc86 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":62:15)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":63:26)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":63:9)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":63:14)
#loc90 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":63:15)
#loc91 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":64:26)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":64:31)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":64:32)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":64:9)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":65:9)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":67:5)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":72:5)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":67:11)
#loc99 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":68:5)
#loc100 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":70:9)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":70:14)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":71:9)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":76:1)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":96:1)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":78:5)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":78:21)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":79:12)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":79:5)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":80:5)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":89:5)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":80:11)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":81:5)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":83:33)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":83:9)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":85:26)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":85:9)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":85:14)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":85:15)
#loc119 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":86:26)
#loc120 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":86:9)
#loc121 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":86:14)
#loc122 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":86:15)
#loc123 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":87:26)
#loc124 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":87:31)
#loc125 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":87:32)
#loc126 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":87:9)
#loc127 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":88:9)
#loc128 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":90:5)
#loc129 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":95:5)
#loc130 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":90:11)
#loc131 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":91:5)
#loc132 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_16.c":94:9)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc12, #loc11])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc16, #loc14])
#loc141 = loc(fused[#loc19, #loc20])
#loc142 = loc(fused[#loc17, #loc21])
#loc143 = loc(fused[#loc22, #loc21])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc27, #loc24])
#loc147 = loc(fused[#loc32, #loc31])
#loc148 = loc(fused[#loc37, #loc36])
#loc149 = loc(fused[#loc46, #loc47])
#loc150 = loc(fused[#loc49, #loc47])
#loc151 = loc(fused[#loc51, #loc52])
#loc152 = loc(fused[#loc53, #loc54])
#loc153 = loc(fused[#loc55, #loc56])
#loc154 = loc(fused[#loc57, #loc58])
#loc155 = loc(fused[#loc59, #loc60])
#loc156 = loc(fused[#loc61, #loc62])
#loc157 = loc(fused[#loc64, #loc63])
#loc158 = loc(fused[#loc65, #loc66])
#loc159 = loc(fused[#loc68, #loc66])
#loc160 = loc(fused[#loc71, #loc72])
#loc161 = loc(fused[#loc69, #loc73])
#loc162 = loc(fused[#loc74, #loc73])
#loc163 = loc(fused[#loc75, #loc76])
#loc164 = loc(fused[#loc77, #loc78])
#loc165 = loc(fused[#loc79, #loc76])
#loc166 = loc(fused[#loc84, #loc83])
#loc167 = loc(fused[#loc88, #loc87])
#loc168 = loc(fused[#loc96, #loc97])
#loc169 = loc(fused[#loc99, #loc97])
#loc170 = loc(fused[#loc103, #loc104])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc108, #loc107])
#loc173 = loc(fused[#loc109, #loc110])
#loc174 = loc(fused[#loc112, #loc110])
#loc175 = loc(fused[#loc114, #loc113])
#loc176 = loc(fused[#loc116, #loc115])
#loc177 = loc(fused[#loc120, #loc119])
#loc178 = loc(fused[#loc128, #loc129])
#loc179 = loc(fused[#loc131, #loc129])
