!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":102:23)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":137:10)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":137:14)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":137:20)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":137:32)
#true = #cir.bool<true> : !cir.bool
#loc208 = loc(fused[#loc140, #loc141])
#loc209 = loc(fused[#loc142, #loc143])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_629badSourceERi(!cir.ptr<!s32i>) loc(#loc156)
  cir.func private @printIntLine(!s32i) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc7)
  cir.func @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc17)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_629badSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc19)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc161)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc161)
    cir.br ^bb2 loc(#loc165)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc166)
    cir.brcond %8 ^bb3, ^bb10 loc(#loc167)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc31)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc31)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.br ^bb4 loc(#loc169)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<0> : !s32i loc(#loc34)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb5 loc(#loc169)
  ^bb5:  // 2 preds: ^bb4, ^bb7
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc37)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %16 ^bb6, ^bb8 loc(#loc171)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc39)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc39)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc40)
    cir.br ^bb7 loc(#loc33)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc42)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.br ^bb5 loc(#loc169)
  ^bb8:  // pred: ^bb5
    cir.br ^bb9 loc(#loc33)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11 loc(#loc27)
  ^bb10:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc7)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb11 loc(#loc23)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc23)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc21)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc9)
  } loc(#loc159)
  cir.func private @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_6213goodG2BSourceERi(!cir.ptr<!s32i>) loc(#loc173)
  cir.func internal private @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc55)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_6213goodG2BSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc57)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc176)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc176)
    cir.br ^bb2 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc181)
    cir.brcond %8 ^bb3, ^bb10 loc(#loc182)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc69)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc69)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.br ^bb5 loc(#loc184)
  ^bb5:  // 2 preds: ^bb4, ^bb7
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc75)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc186)
    cir.brcond %16 ^bb6, ^bb8 loc(#loc186)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc77)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc77)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc78)
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc80)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb5 loc(#loc184)
  ^bb8:  // pred: ^bb5
    cir.br ^bb9 loc(#loc71)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11 loc(#loc65)
  ^bb10:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc81)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb11 loc(#loc61)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc61)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc59)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc47)
  } loc(#loc174)
  cir.func private @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_6213goodB2GSourceERi(!cir.ptr<!s32i>) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc85)
  cir.func internal private @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc191)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc95)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_6213goodB2GSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc97)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc191)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc191)
    cir.br ^bb2 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %8 ^bb3, ^bb8 loc(#loc104)
  ^bb3:  // pred: ^bb2
    %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc106)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %11 ^bb4, ^bb5 loc(#loc104)
  ^bb4:  // pred: ^bb3
    %12 = cir.const #true loc(#loc104)
    cir.br ^bb6(%12 : !cir.bool) loc(#loc104)
  ^bb5:  // pred: ^bb3
    %13 = cir.const #false loc(#loc104)
    cir.br ^bb6(%13 : !cir.bool) loc(#loc104)
  ^bb6(%14: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":102:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc104)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%14 : !cir.bool) loc(#loc104)
  ^bb8:  // pred: ^bb2
    %15 = cir.const #false loc(#loc104)
    cir.br ^bb9(%15 : !cir.bool) loc(#loc104)
  ^bb9(%16: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":102:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc104)
  ^bb10:  // pred: ^bb9
    cir.brcond %16 ^bb11, ^bb18 loc(#loc198)
  ^bb11:  // pred: ^bb10
    %17 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc113)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc113)
    cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.br ^bb12 loc(#loc200)
  ^bb12:  // pred: ^bb11
    %21 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb13 loc(#loc200)
  ^bb13:  // 2 preds: ^bb12, ^bb15
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc119)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc202)
    cir.brcond %24 ^bb14, ^bb16 loc(#loc202)
  ^bb14:  // pred: ^bb13
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc121)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc121)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc122)
    cir.br ^bb15 loc(#loc115)
  ^bb15:  // pred: ^bb14
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc124)
    cir.store %30, %0 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.br ^bb13 loc(#loc200)
  ^bb16:  // pred: ^bb13
    cir.br ^bb17 loc(#loc115)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc109)
  ^bb18:  // pred: ^bb10
    %31 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc85)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb19 loc(#loc101)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc101)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc99)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc87)
  } loc(#loc189)
  cir.func @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_624goodEv() extra(#fn_attr) {
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62L7goodG2BEv() : () -> () loc(#loc128)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62L7goodB2GEv() : () -> () loc(#loc129)
    cir.return loc(#loc127)
  } loc(#loc204)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc205)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc137)
  cir.func @main(%arg0: !s32i loc(fused[#loc140, #loc141]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc142, #loc143])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc139)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc144)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc145)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc146)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc146)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc147)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc134)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_624goodEv() : () -> () loc(#loc149)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc135)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc136)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_large_623badEv() : () -> () loc(#loc152)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc137)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc154)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.return %15 : !s32i loc(#loc210)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":26:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":26:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":50:23)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":28:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":53:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":35:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":35:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":36:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":36:30)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":30:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":32:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":32:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":52:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":39:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":51:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":39:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":39:21)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":40:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":47:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":49:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":41:28)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":41:20)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":41:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":43:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":46:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":43:21)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":43:17)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":43:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":43:28)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":45:37)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":45:30)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":45:17)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":43:33)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":43:32)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":50:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":60:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":60:29)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":62:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":87:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":69:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":69:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":70:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":70:30)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":64:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":64:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":66:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":66:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":66:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":67:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":68:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":86:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":73:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":85:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":73:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":73:21)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":74:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":81:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":83:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":75:28)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":75:20)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":75:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":77:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":80:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":77:21)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":77:17)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":77:24)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":77:28)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":79:37)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":79:30)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":79:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":77:33)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":77:32)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":84:23)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":84:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":90:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":90:29)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":113:23)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":92:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":116:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":99:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":99:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":100:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":100:30)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":94:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":94:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":96:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":96:12)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":96:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":97:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":98:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":115:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":102:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":114:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":102:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":102:21)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":102:26)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":102:34)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":102:36)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":103:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":110:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":112:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":104:28)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":104:20)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":104:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":106:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":109:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":106:21)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":106:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":106:24)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":106:28)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":108:37)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":108:30)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":108:17)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":106:33)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":106:32)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":113:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":118:1)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":122:1)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":120:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":121:5)
#loc130 = loc("/usr/include/stdlib.h":575:1)
#loc131 = loc("/usr/include/stdlib.h":575:41)
#loc132 = loc("/usr/include/time.h":76:1)
#loc133 = loc("/usr/include/time.h":76:38)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":142:15)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":144:15)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":147:15)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":149:15)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":137:1)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":152:1)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":138:1)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":140:27)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":140:22)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":140:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":142:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":143:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":144:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":147:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":148:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":149:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":151:12)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_62a.cpp":151:5)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc8, #loc9])
#loc160 = loc(fused[#loc10, #loc11])
#loc161 = loc(fused[#loc12, #loc13])
#loc162 = loc(fused[#loc14, #loc15])
#loc163 = loc(fused[#loc18, #loc16])
#loc164 = loc(fused[#loc20, #loc21])
#loc165 = loc(fused[#loc22, #loc23])
#loc166 = loc(fused[#loc24, #loc25])
#loc167 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc168 = loc(fused[#loc31, #loc29])
#loc169 = loc(fused[#loc32, #loc33])
#loc170 = loc(fused[#loc35, #loc34])
#loc171 = loc(fused[#loc36, #loc37])
#loc172 = loc(fused[#loc42, #loc41])
#loc173 = loc(fused[#loc44, #loc45])
#loc174 = loc(fused[#loc46, #loc47])
#loc175 = loc(fused[#loc48, #loc49])
#loc176 = loc(fused[#loc50, #loc51])
#loc177 = loc(fused[#loc52, #loc53])
#loc178 = loc(fused[#loc56, #loc54])
#loc179 = loc(fused[#loc58, #loc59])
#loc180 = loc(fused[#loc60, #loc61])
#loc181 = loc(fused[#loc62, #loc63])
#loc182 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc183 = loc(fused[#loc69, #loc67])
#loc184 = loc(fused[#loc70, #loc71])
#loc185 = loc(fused[#loc73, #loc72])
#loc186 = loc(fused[#loc74, #loc75])
#loc187 = loc(fused[#loc80, #loc79])
#loc188 = loc(fused[#loc83, #loc84])
#loc189 = loc(fused[#loc86, #loc87])
#loc190 = loc(fused[#loc88, #loc89])
#loc191 = loc(fused[#loc90, #loc91])
#loc192 = loc(fused[#loc92, #loc93])
#loc193 = loc(fused[#loc96, #loc94])
#loc194 = loc(fused[#loc98, #loc99])
#loc195 = loc(fused[#loc100, #loc101])
#loc196 = loc(fused[#loc102, #loc103])
#loc197 = loc(fused[#loc105, #loc107])
#loc198 = loc(fused[#loc108, #loc109, #loc110, #loc101])
#loc199 = loc(fused[#loc113, #loc111])
#loc200 = loc(fused[#loc114, #loc115])
#loc201 = loc(fused[#loc117, #loc116])
#loc202 = loc(fused[#loc118, #loc119])
#loc203 = loc(fused[#loc124, #loc123])
#loc204 = loc(fused[#loc126, #loc127])
#loc205 = loc(fused[#loc130, #loc131])
#loc206 = loc(fused[#loc132, #loc133])
#loc207 = loc(fused[#loc138, #loc139])
#loc210 = loc(fused[#loc155, #loc154])
