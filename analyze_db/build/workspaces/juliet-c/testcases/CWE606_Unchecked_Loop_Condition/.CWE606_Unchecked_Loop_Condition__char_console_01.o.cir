!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc242)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc243)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc244)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc246)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printIntLine(!s32i) loc(#loc247)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc249)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc250)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc250)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc250)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc253)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc27)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc27)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc253)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc31)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc32)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc255)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc33)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc256)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc38)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc39)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc40)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc40)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc41)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc259)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc259)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc244)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc43)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc260)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc262)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc54)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc55)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc55)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc264)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc58)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc59)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc59)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc265)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc60)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc57)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc57)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc61)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc266)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc56)
                    cir.yield %48 : !cir.bool loc(#loc56)
                  }, false {
                    %48 = cir.const #false loc(#loc56)
                    cir.yield %48 : !cir.bool loc(#loc56)
                  }) : (!cir.bool) -> !cir.bool loc(#loc56)
                  cir.yield %47 : !cir.bool loc(#loc56)
                }, false {
                  %37 = cir.const #false loc(#loc56)
                  cir.yield %37 : !cir.bool loc(#loc56)
                }) : (!cir.bool) -> !cir.bool loc(#loc56)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc63)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc63)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc66)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc66)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc268)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc67)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc269)
                } loc(#loc267)
              } loc(#loc263)
            } else {
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc68)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc69)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc69)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc71)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc72)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc270)
            } loc(#loc261)
          } loc(#loc258)
        } loc(#loc257)
      } loc(#loc254)
    } loc(#loc252)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc272)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc273)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc274)
      cir.scope {
        %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc81)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
        %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc81)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc276)
        cir.if %13 {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc85)
          cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc278)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
            cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc280)
            cir.for : cond {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc281)
              cir.condition(%19) loc(#loc93)
            } body {
              cir.scope {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc96)
                cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc283)
              } loc(#loc282)
              cir.yield loc(#loc88)
            } step {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc98)
              cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc284)
              cir.yield loc(#loc279)
            } loc(#loc279)
          } loc(#loc279)
          %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc99)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc100)
        } loc(#loc277)
      } loc(#loc275)
    } loc(#loc271)
    cir.return loc(#loc16)
  } loc(#loc248)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc286)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc103)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc287)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc105)
    cir.return loc(#loc102)
  } loc(#loc285)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc288)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc109)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc290)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc291)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc291)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc291)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc292)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc118)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc109)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc109)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc294)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc295)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc296)
      cir.scope {
        %12 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc128)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
        %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc130)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc130)
        %16 = cir.call @__isoc99_sscanf(%13, %15, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc128)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %18 = cir.cmp(eq, %16, %17) : !s32i, !cir.bool loc(#loc298)
        cir.if %18 {
          %19 = cir.const #cir.int<0> : !s32i loc(#loc133)
          cir.store %19, %11 : !s32i, !cir.ptr<!s32i> loc(#loc300)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc137)
            cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc302)
            cir.for : cond {
              %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc303)
              cir.condition(%24) loc(#loc141)
            } body {
              cir.scope {
                %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                %23 = cir.unary(inc, %22) nsw : !s32i, !s32i loc(#loc144)
                cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc305)
              } loc(#loc304)
              cir.yield loc(#loc136)
            } step {
              %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %23 = cir.unary(inc, %22) nsw : !s32i, !s32i loc(#loc146)
              cir.store %23, %9 : !s32i, !cir.ptr<!s32i> loc(#loc306)
              cir.yield loc(#loc301)
            } loc(#loc301)
          } loc(#loc301)
          %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc148)
        } loc(#loc299)
      } loc(#loc297)
    } loc(#loc293)
    cir.return loc(#loc111)
  } loc(#loc289)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc308)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc309)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc309)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc309)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc310)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc312)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc161)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc161)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc312)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc165)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc165)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc166)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc314)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc167)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc167)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc315)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc172)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc173)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc174)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc174)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc175)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc318)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc318)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc244)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc177)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc178)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc319)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc182)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc182)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc321)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc188)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc189)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc189)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc323)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc192)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc193)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc193)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc324)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc194)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc191)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc191)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc195)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc325)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc190)
                    cir.yield %48 : !cir.bool loc(#loc190)
                  }, false {
                    %48 = cir.const #false loc(#loc190)
                    cir.yield %48 : !cir.bool loc(#loc190)
                  }) : (!cir.bool) -> !cir.bool loc(#loc190)
                  cir.yield %47 : !cir.bool loc(#loc190)
                }, false {
                  %37 = cir.const #false loc(#loc190)
                  cir.yield %37 : !cir.bool loc(#loc190)
                }) : (!cir.bool) -> !cir.bool loc(#loc190)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc197)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc197)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc199)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc200)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc200)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc327)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc201)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc328)
                } loc(#loc326)
              } loc(#loc322)
            } else {
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc202)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc202)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc203)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc204)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc204)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc206)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc207)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc329)
            } loc(#loc320)
          } loc(#loc317)
        } loc(#loc316)
      } loc(#loc313)
    } loc(#loc311)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc331)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc332)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc333)
      cir.scope {
        %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc216)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc218)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc218)
        %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc216)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc219)
        %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc335)
        cir.if %13 {
          cir.scope {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc223)
            %15 = cir.const #cir.int<10000> : !s32i loc(#loc224)
            %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc338)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc226)
              cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc340)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc230)
                cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc342)
                cir.for : cond {
                  %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                  %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc343)
                  cir.condition(%22) loc(#loc234)
                } body {
                  cir.scope {
                    %20 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                    %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc237)
                    cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc345)
                  } loc(#loc344)
                  cir.yield loc(#loc229)
                } step {
                  %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                  %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc239)
                  cir.store %21, %4 : !s32i, !cir.ptr<!s32i> loc(#loc346)
                  cir.yield loc(#loc341)
                } loc(#loc341)
              } loc(#loc341)
              %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc240)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc241)
            } loc(#loc339)
          } loc(#loc337)
        } loc(#loc336)
      } loc(#loc334)
    } loc(#loc330)
    cir.return loc(#loc150)
  } loc(#loc307)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_01.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":52:27)
#loc10 = loc("/usr/include/stdio.h":468:1)
#loc11 = loc("/usr/include/stdio.h":468:12)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":60:26)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":28:1)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":72:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":30:5)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":30:12)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":31:5)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":31:28)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":32:12)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":32:5)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":33:5)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":57:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":35:9)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":35:37)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":35:26)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":35:33)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":37:9)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":56:9)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":37:13)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":37:17)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":37:27)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":38:9)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":40:13)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":55:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":40:23)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":40:28)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":40:27)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":40:43)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":40:47)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":40:57)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":40:17)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":40:67)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":41:13)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":49:13)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":51:13)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":44:27)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":44:34)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":44:17)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":44:38)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":45:17)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":48:17)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":45:21)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":45:31)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":45:33)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":45:36)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":45:41)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":45:49)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":45:50)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":45:55)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":46:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":47:39)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":47:21)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":47:26)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":47:34)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":47:35)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":52:17)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":54:33)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":54:17)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":54:22)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":54:29)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":58:5)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":71:5)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":59:9)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":59:13)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":59:16)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":59:19)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":60:9)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":70:9)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":60:13)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":60:20)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":60:39)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":61:9)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":63:27)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":63:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":64:13)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":68:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":64:22)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":64:18)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":64:25)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":64:29)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":64:27)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":65:13)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":67:28)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":67:17)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":64:33)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":64:32)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":69:26)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":69:13)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":152:1)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":156:1)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":154:5)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":154:13)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":155:5)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":155:13)
#loc107 = loc("/usr/include/string.h":141:1)
#loc108 = loc("/usr/include/string.h":142:14)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":85:18)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":79:1)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":100:1)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":81:5)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":81:12)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":82:5)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":82:28)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":83:12)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":83:5)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":85:5)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":85:12)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":86:5)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":99:5)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":87:9)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":87:13)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":87:16)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":87:19)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":88:9)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":98:9)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":88:13)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":88:20)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":88:26)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":88:39)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":89:9)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":91:27)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":91:13)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":92:13)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":96:13)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":92:22)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":92:18)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":92:25)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":92:29)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":92:27)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":93:13)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":95:28)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":95:17)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":92:33)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":92:32)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":97:26)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":97:13)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":103:1)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":150:1)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":105:5)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":105:12)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":106:5)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":106:28)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":107:12)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":107:5)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":108:5)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":132:5)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":110:9)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":110:37)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":110:26)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":110:33)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":112:9)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":131:9)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":112:13)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":112:17)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":112:27)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":113:9)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":115:13)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":130:13)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":115:23)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":115:28)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":115:27)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":115:43)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":115:47)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":115:57)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":115:17)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":115:67)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":116:13)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":124:13)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":126:13)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":119:27)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":119:34)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":119:17)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":119:38)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":120:17)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":123:17)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":120:21)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":120:31)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":120:33)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":120:36)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":120:41)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":120:49)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":120:50)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":120:55)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":121:17)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":122:39)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":122:21)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":122:26)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":122:34)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":122:35)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":127:27)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":127:17)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":129:33)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":129:17)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":129:22)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":129:29)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":133:5)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":149:5)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":134:9)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":134:13)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":134:16)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":134:19)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":135:9)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":148:9)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":135:13)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":135:20)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":135:26)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":135:39)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":136:9)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":138:13)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":147:13)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":138:17)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":138:21)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":139:13)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":140:31)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":140:17)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":141:17)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":145:17)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":141:26)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":141:22)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":141:29)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":141:33)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":141:31)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":142:17)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":144:32)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":144:21)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":141:37)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":141:36)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":146:30)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_01.c":146:17)
#loc242 = loc(fused[#loc1, #loc2])
#loc243 = loc(fused[#loc3, #loc4])
#loc244 = loc(fused[#loc5, #loc6])
#loc245 = loc(fused[#loc7, #loc8])
#loc246 = loc(fused[#loc10, #loc11])
#loc247 = loc(fused[#loc13, #loc14])
#loc248 = loc(fused[#loc15, #loc16])
#loc249 = loc(fused[#loc17, #loc18])
#loc250 = loc(fused[#loc19, #loc20])
#loc251 = loc(fused[#loc22, #loc21])
#loc252 = loc(fused[#loc23, #loc24])
#loc253 = loc(fused[#loc25, #loc26])
#loc254 = loc(fused[#loc29, #loc30])
#loc255 = loc(fused[#loc31, #loc32])
#loc256 = loc(fused[#loc31, #loc33])
#loc257 = loc(fused[#loc34, #loc30])
#loc258 = loc(fused[#loc35, #loc36])
#loc259 = loc(fused[#loc40, #loc41])
#loc260 = loc(fused[#loc43, #loc44])
#loc261 = loc(fused[#loc45, #loc46, #loc47, #loc36])
#loc262 = loc(fused[#loc50, #loc51])
#loc263 = loc(fused[#loc52, #loc53])
#loc264 = loc(fused[#loc54, #loc55])
#loc265 = loc(fused[#loc58, #loc59])
#loc266 = loc(fused[#loc57, #loc61])
#loc267 = loc(fused[#loc62, #loc53])
#loc268 = loc(fused[#loc65, #loc66])
#loc269 = loc(fused[#loc64, #loc63])
#loc270 = loc(fused[#loc70, #loc69])
#loc271 = loc(fused[#loc73, #loc74])
#loc272 = loc(fused[#loc75, #loc76])
#loc273 = loc(fused[#loc75, #loc77])
#loc274 = loc(fused[#loc75, #loc78])
#loc275 = loc(fused[#loc79, #loc80])
#loc276 = loc(fused[#loc81, #loc83])
#loc277 = loc(fused[#loc84, #loc80])
#loc278 = loc(fused[#loc86, #loc85])
#loc279 = loc(fused[#loc87, #loc88])
#loc280 = loc(fused[#loc90, #loc89])
#loc281 = loc(fused[#loc91, #loc92])
#loc282 = loc(fused[#loc94, #loc88])
#loc283 = loc(fused[#loc96, #loc95])
#loc284 = loc(fused[#loc98, #loc97])
#loc285 = loc(fused[#loc101, #loc102])
#loc286 = loc(fused[#loc103, #loc104])
#loc287 = loc(fused[#loc105, #loc106])
#loc288 = loc(fused[#loc107, #loc108])
#loc289 = loc(fused[#loc110, #loc111])
#loc290 = loc(fused[#loc112, #loc113])
#loc291 = loc(fused[#loc114, #loc115])
#loc292 = loc(fused[#loc117, #loc116])
#loc293 = loc(fused[#loc120, #loc121])
#loc294 = loc(fused[#loc122, #loc123])
#loc295 = loc(fused[#loc122, #loc124])
#loc296 = loc(fused[#loc122, #loc125])
#loc297 = loc(fused[#loc126, #loc127])
#loc298 = loc(fused[#loc128, #loc131])
#loc299 = loc(fused[#loc132, #loc127])
#loc300 = loc(fused[#loc134, #loc133])
#loc301 = loc(fused[#loc135, #loc136])
#loc302 = loc(fused[#loc138, #loc137])
#loc303 = loc(fused[#loc139, #loc140])
#loc304 = loc(fused[#loc142, #loc136])
#loc305 = loc(fused[#loc144, #loc143])
#loc306 = loc(fused[#loc146, #loc145])
#loc307 = loc(fused[#loc149, #loc150])
#loc308 = loc(fused[#loc151, #loc152])
#loc309 = loc(fused[#loc153, #loc154])
#loc310 = loc(fused[#loc156, #loc155])
#loc311 = loc(fused[#loc157, #loc158])
#loc312 = loc(fused[#loc159, #loc160])
#loc313 = loc(fused[#loc163, #loc164])
#loc314 = loc(fused[#loc165, #loc166])
#loc315 = loc(fused[#loc165, #loc167])
#loc316 = loc(fused[#loc168, #loc164])
#loc317 = loc(fused[#loc169, #loc170])
#loc318 = loc(fused[#loc174, #loc175])
#loc319 = loc(fused[#loc177, #loc178])
#loc320 = loc(fused[#loc179, #loc180, #loc181, #loc170])
#loc321 = loc(fused[#loc184, #loc185])
#loc322 = loc(fused[#loc186, #loc187])
#loc323 = loc(fused[#loc188, #loc189])
#loc324 = loc(fused[#loc192, #loc193])
#loc325 = loc(fused[#loc191, #loc195])
#loc326 = loc(fused[#loc196, #loc187])
#loc327 = loc(fused[#loc199, #loc200])
#loc328 = loc(fused[#loc198, #loc197])
#loc329 = loc(fused[#loc205, #loc204])
#loc330 = loc(fused[#loc208, #loc209])
#loc331 = loc(fused[#loc210, #loc211])
#loc332 = loc(fused[#loc210, #loc212])
#loc333 = loc(fused[#loc210, #loc213])
#loc334 = loc(fused[#loc214, #loc215])
#loc335 = loc(fused[#loc216, #loc219])
#loc336 = loc(fused[#loc220, #loc215])
#loc337 = loc(fused[#loc221, #loc222])
#loc338 = loc(fused[#loc223, #loc224])
#loc339 = loc(fused[#loc225, #loc222])
#loc340 = loc(fused[#loc227, #loc226])
#loc341 = loc(fused[#loc228, #loc229])
#loc342 = loc(fused[#loc231, #loc230])
#loc343 = loc(fused[#loc232, #loc233])
#loc344 = loc(fused[#loc235, #loc229])
#loc345 = loc(fused[#loc237, #loc236])
#loc346 = loc(fused[#loc239, #loc238])
