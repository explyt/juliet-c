!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":23:21)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":23:37)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":58:25)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":58:41)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc132 = loc(fused[#loc7, #loc8])
#loc152 = loc(fused[#loc62, #loc63])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc129)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc130)
  cir.func internal private  @badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!ty__twoIntsStruct>, %2 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc13)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc14)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc15)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc14)
    cir.return loc(#loc6)
  } loc(#loc131)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc21)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>> loc(#loc135)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc138)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc27)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc27)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc27)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc27)
      %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc27)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc27)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
      cir.store %13, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc140)
        cir.scope {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc34)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc34)
          cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc142)
          cir.for : cond {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc36)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc37)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc37)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !s32i loc(#loc143)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc38)
            cir.condition(%22) loc(#loc38)
          } body {
            cir.scope {
              %18 = cir.const #cir.int<1> : !s32i loc(#loc40)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
              %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc42)
              %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
              %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
              cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc145)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc45)
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
              %25 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
              %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc49)
              cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc146)
            } loc(#loc144)
            cir.yield loc(#loc33)
          } step {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc50)
            %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc51)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc147)
            cir.yield loc(#loc141)
          } loc(#loc141)
        } loc(#loc141)
      } loc(#loc139)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
      cir.store %14, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc148)
    } loc(#loc137)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc54)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc54)
    cir.return loc(#loc17)
  } loc(#loc133)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc149)
  cir.func internal private  @goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc62, #loc63])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc64)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!ty__twoIntsStruct>, %2 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc68)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc69)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc70)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    cir.return loc(#loc61)
  } loc(#loc151)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc75)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc155)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc83)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>> loc(#loc158)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc161)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc90)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc91)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc91)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc162)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc163)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc90)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
      cir.store %13, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
      cir.scope {
        %15 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
        %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc166)
        %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc98)
        cir.if %19 {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc75)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc75)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc100)
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc102)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
        } loc(#loc167)
      } loc(#loc165)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc169)
        cir.scope {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc109)
          cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc171)
          cir.for : cond {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc111)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc112)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc112)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !s32i loc(#loc172)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc113)
            cir.condition(%22) loc(#loc113)
          } body {
            cir.scope {
              %18 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
              %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc117)
              %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
              %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
              cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc174)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc119)
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
              %25 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc121)
              %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
              %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc49)
              cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc175)
            } loc(#loc173)
            cir.yield loc(#loc108)
          } step {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc124)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc176)
            cir.yield loc(#loc170)
          } loc(#loc170)
        } loc(#loc170)
      } loc(#loc168)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
      cir.store %14, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc177)
    } loc(#loc160)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc127)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc127)
    cir.return loc(#loc79)
  } loc(#loc156)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":28:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":24:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":25:22)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":25:27)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":25:28)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":25:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":27:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":27:10)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":30:1)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":51:1)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":32:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":32:21)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":34:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":34:41)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":35:12)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":35:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":36:5)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":48:5)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":38:9)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":38:55)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":39:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":46:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":40:13)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":40:20)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":41:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":45:13)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":41:22)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":41:18)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":41:25)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":41:29)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":41:27)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":42:13)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":43:40)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":43:17)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":43:28)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":43:29)
#loc44 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":44:40)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":44:17)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":44:28)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":44:29)
#loc49 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":41:35)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":41:34)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":47:16)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":47:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":50:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":50:13)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":91:1)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":94:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":93:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":93:13)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":58:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":63:1)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":59:1)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":60:22)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":60:27)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":60:28)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":60:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":62:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":62:10)
#loc71 = loc("/usr/include/stdlib.h":672:1)
#loc72 = loc("/usr/include/stdlib.h":672:45)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":75:23)
#loc76 = loc("/usr/include/stdlib.h":756:1)
#loc77 = loc("/usr/include/stdlib.h":756:70)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":65:1)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":89:1)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":67:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":67:21)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":68:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":68:41)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":69:12)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":69:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":70:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":87:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":72:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":72:87)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":72:55)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":72:62)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":72:66)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":72:86)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":73:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":77:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":73:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":73:27)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":73:24)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":74:9)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":75:13)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":76:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":76:18)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":78:9)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":85:9)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":79:13)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":79:20)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":80:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":84:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":80:22)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":80:18)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":80:25)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":80:29)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":80:27)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":81:13)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":82:40)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":82:17)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":82:28)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":82:29)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":83:40)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":83:17)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":83:28)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":83:29)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":80:35)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":80:34)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":86:16)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":86:9)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":88:5)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_44.c":88:13)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc16, #loc17])
#loc134 = loc(fused[#loc18, #loc19])
#loc135 = loc(fused[#loc20, #loc21])
#loc136 = loc(fused[#loc23, #loc22])
#loc137 = loc(fused[#loc24, #loc25])
#loc138 = loc(fused[#loc26, #loc27])
#loc139 = loc(fused[#loc28, #loc29])
#loc140 = loc(fused[#loc30, #loc31])
#loc141 = loc(fused[#loc32, #loc33])
#loc142 = loc(fused[#loc35, #loc34])
#loc143 = loc(fused[#loc36, #loc37])
#loc144 = loc(fused[#loc39, #loc33])
#loc145 = loc(fused[#loc41, #loc40])
#loc146 = loc(fused[#loc46, #loc45])
#loc147 = loc(fused[#loc51, #loc50])
#loc148 = loc(fused[#loc53, #loc52])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc61])
#loc153 = loc(fused[#loc71, #loc72])
#loc154 = loc(fused[#loc73, #loc74])
#loc155 = loc(fused[#loc76, #loc77])
#loc156 = loc(fused[#loc78, #loc79])
#loc157 = loc(fused[#loc80, #loc81])
#loc158 = loc(fused[#loc82, #loc83])
#loc159 = loc(fused[#loc85, #loc84])
#loc160 = loc(fused[#loc86, #loc87])
#loc161 = loc(fused[#loc88, #loc89])
#loc162 = loc(fused[#loc92, #loc93])
#loc163 = loc(fused[#loc91, #loc93])
#loc164 = loc(fused[#loc90, #loc89])
#loc165 = loc(fused[#loc94, #loc95])
#loc166 = loc(fused[#loc96, #loc97])
#loc167 = loc(fused[#loc99, #loc95])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc105, #loc106])
#loc170 = loc(fused[#loc107, #loc108])
#loc171 = loc(fused[#loc110, #loc109])
#loc172 = loc(fused[#loc111, #loc112])
#loc173 = loc(fused[#loc114, #loc108])
#loc174 = loc(fused[#loc116, #loc115])
#loc175 = loc(fused[#loc120, #loc119])
#loc176 = loc(fused[#loc124, #loc123])
#loc177 = loc(fused[#loc126, #loc125])
