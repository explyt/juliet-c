!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s %s\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAA\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc77)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc80)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc11)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc11)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc83)
          %4 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc4)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc4)
          %10 = cir.call @sprintf(%5, %7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc18)
          %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc21)
        } loc(#loc82)
      } loc(#loc81)
    } loc(#loc79)
    cir.return loc(#loc8)
  } loc(#loc78)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc85)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc84)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc29)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc30)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    cir.return %2 : !s32i loc(#loc88)
  } loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc91)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc37)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc37)
      cir.if %2 {
        %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc32)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc32)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc42)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc94)
          %4 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc47)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc49)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc49)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc50)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc50)
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc51)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc51)
          %12 = cir.call @sprintf(%5, %7, %9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc47)
          %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc53)
        } loc(#loc93)
      } loc(#loc92)
    } loc(#loc90)
    cir.return loc(#loc34)
  } loc(#loc89)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.return %2 : !s32i loc(#loc96)
  } loc(#loc95)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc99)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc62)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc62)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc102)
          %4 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc69)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc71)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc71)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc72)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc72)
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc73)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc73)
          %12 = cir.call @sprintf(%5, %7, %9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc69)
          %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc75)
        } loc(#loc101)
      } loc(#loc100)
    } loc(#loc98)
    cir.return loc(#loc59)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":365:1)
#loc2 = loc("/usr/include/stdio.h":366:45)
#loc3 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":43:27)
#loc4 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":43:36)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":36:1)
#loc8 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":47:1)
#loc9 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":38:5)
#loc10 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":46:5)
#loc11 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":38:8)
#loc12 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":38:26)
#loc13 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":39:5)
#loc14 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":40:9)
#loc15 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":45:9)
#loc16 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":41:13)
#loc17 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":41:32)
#loc18 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":43:13)
#loc19 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":43:21)
#loc20 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":44:23)
#loc21 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":44:13)
#loc22 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":86:1)
#loc23 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":90:1)
#loc24 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":88:5)
#loc25 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":88:11)
#loc26 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":89:5)
#loc27 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":89:11)
#loc28 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":24:1)
#loc29 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":27:1)
#loc30 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":26:12)
#loc31 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":26:5)
#loc32 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":59:19)
#loc33 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":54:1)
#loc34 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":70:1)
#loc35 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":56:5)
#loc36 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":69:5)
#loc37 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":56:8)
#loc38 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":56:27)
#loc39 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":57:5)
#loc40 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":60:5)
#loc41 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":62:5)
#loc42 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":59:9)
#loc43 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":63:9)
#loc44 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":68:9)
#loc45 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":64:13)
#loc46 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":64:32)
#loc47 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":66:13)
#loc48 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":66:21)
#loc49 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":66:27)
#loc50 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":66:36)
#loc51 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":66:51)
#loc52 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":67:23)
#loc53 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":67:13)
#loc54 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":29:1)
#loc55 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":32:1)
#loc56 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":31:12)
#loc57 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":31:5)
#loc58 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":73:1)
#loc59 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":84:1)
#loc60 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":75:5)
#loc61 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":83:5)
#loc62 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":75:8)
#loc63 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":75:26)
#loc64 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":76:5)
#loc65 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":77:9)
#loc66 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":82:9)
#loc67 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":78:13)
#loc68 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":78:32)
#loc69 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":80:13)
#loc70 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":80:21)
#loc71 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":80:27)
#loc72 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":80:36)
#loc73 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":80:51)
#loc74 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":81:23)
#loc75 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_08.c":81:13)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc9, #loc10])
#loc80 = loc(fused[#loc11, #loc12])
#loc81 = loc(fused[#loc13, #loc10])
#loc82 = loc(fused[#loc14, #loc15])
#loc83 = loc(fused[#loc16, #loc17])
#loc84 = loc(fused[#loc22, #loc23])
#loc85 = loc(fused[#loc24, #loc25])
#loc86 = loc(fused[#loc26, #loc27])
#loc87 = loc(fused[#loc28, #loc29])
#loc88 = loc(fused[#loc31, #loc30])
#loc89 = loc(fused[#loc33, #loc34])
#loc90 = loc(fused[#loc35, #loc36])
#loc91 = loc(fused[#loc37, #loc38])
#loc92 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc93 = loc(fused[#loc43, #loc44])
#loc94 = loc(fused[#loc45, #loc46])
#loc95 = loc(fused[#loc54, #loc55])
#loc96 = loc(fused[#loc57, #loc56])
#loc97 = loc(fused[#loc58, #loc59])
#loc98 = loc(fused[#loc60, #loc61])
#loc99 = loc(fused[#loc62, #loc63])
#loc100 = loc(fused[#loc64, #loc61])
#loc101 = loc(fused[#loc65, #loc66])
#loc102 = loc(fused[#loc67, #loc68])
