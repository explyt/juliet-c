!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc133)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc134)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_declare_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc137)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc138)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc141)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc142)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc141)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc142)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc21)
    cir.store %7, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc8)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc136)
    cir.br ^bb2 loc(#loc145)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc146)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc32)
    cir.store %11, %2 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    cir.br ^bb5 loc(#loc147)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc35)
    %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc149)
    cir.brcond %15 ^bb6, ^bb10 loc(#loc36)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc150)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<5> : !s32i loc(#loc38)
    %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc40)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc40)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb8 loc(#loc31)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc42)
    cir.store %21, %2 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb5 loc(#loc147)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc31)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc29)
  ^bb12:  // pred: ^bb11
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc43)
    cir.store %22, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    cir.br ^bb13 loc(#loc27)
  ^bb13:  // pred: ^bb12
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %24 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc46)
    cir.store %23, %24 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
    cir.br ^bb14 loc(#loc24)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc155)
  ^bb15:  // pred: ^bb14
    %25 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    %26 = cir.load %25 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    cir.store %26, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    %27 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc53)
    %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc54)
    %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc55)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc56)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    cir.br ^bb16 loc(#loc49)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc6)
  } loc(#loc135)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_declare_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc156)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc164)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc167)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc168)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc167)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc168)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc84)
    cir.store %7, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc71)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc162)
    cir.br ^bb2 loc(#loc171)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc91)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc92)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc172)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc173)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc174)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc163)
    cir.br ^bb3 loc(#loc175)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc98)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc176)
    cir.brcond %20 ^bb4, ^bb5 loc(#loc177)
  ^bb4:  // pred: ^bb3
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc102)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
    cir.br ^bb5 loc(#loc96)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc96)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc178)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc179)
  ^bb8:  // pred: ^bb7
    %25 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc107)
    cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc180)
    cir.br ^bb9 loc(#loc179)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %27 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc110)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc181)
    cir.brcond %30 ^bb10, ^bb14 loc(#loc111)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc182)
  ^bb11:  // pred: ^bb10
    %31 = cir.const #cir.int<5> : !s32i loc(#loc113)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc114)
    %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc116)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb12 loc(#loc106)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc106)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc118)
    cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb9 loc(#loc179)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc106)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc104)
  ^bb16:  // pred: ^bb15
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc119)
    cir.store %37, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc185)
    cir.br ^bb17 loc(#loc90)
  ^bb17:  // pred: ^bb16
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
    %39 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
    cir.store %38, %39 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
    cir.br ^bb18 loc(#loc87)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc187)
  ^bb19:  // pred: ^bb18
    %40 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc77)
    %41 = cir.load %40 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    cir.store %41, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    %42 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc129)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc130)
    %46 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc131)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc132)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb20 loc(#loc125)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc69)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":51:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":30:9)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":30:23)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":33:13)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":33:31)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":35:17)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":35:24)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":46:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":46:23)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":25:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":25:11)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":26:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":26:24)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":27:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":27:24)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":28:12)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":28:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":29:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":44:5)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":30:22)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":31:9)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":42:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":34:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":40:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":36:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":39:17)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":36:26)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":36:22)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":36:29)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":36:33)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":36:31)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":37:17)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":38:37)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":38:32)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":38:21)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":36:39)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":36:38)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":41:20)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":41:13)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":43:21)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":43:10)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":43:9)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":45:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":50:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":46:22)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":47:22)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":47:27)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":47:28)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":47:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":49:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":49:14)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":93:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":96:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":95:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":95:13)
#loc61 = loc("/usr/include/stdlib.h":672:1)
#loc62 = loc("/usr/include/stdlib.h":672:45)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":71:27)
#loc66 = loc("/usr/include/stdlib.h":756:1)
#loc67 = loc("/usr/include/stdlib.h":756:70)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":58:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":91:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":65:9)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":65:23)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":68:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":68:61)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":75:17)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":75:24)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":86:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":86:23)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":60:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":60:11)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":61:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":61:24)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":62:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":62:24)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":63:12)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":63:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":64:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":84:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":65:22)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":66:9)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":82:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":68:39)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":68:46)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":68:50)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":68:60)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":69:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":73:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":69:17)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":69:31)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":70:13)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":71:17)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":72:17)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":72:22)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":74:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":80:13)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":76:17)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":79:17)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":76:26)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":76:22)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":76:29)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":76:33)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":76:31)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":77:17)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":78:37)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":78:21)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":78:32)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":78:33)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":76:39)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":76:38)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":81:20)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":81:13)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":83:21)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":83:10)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":83:9)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":85:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":90:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":86:22)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":87:22)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":87:27)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":87:28)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":87:9)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":89:9)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_32.c":89:14)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc11, #loc12])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc15, #loc16])
#loc141 = loc(fused[#loc17, #loc18])
#loc142 = loc(fused[#loc19, #loc20])
#loc143 = loc(fused[#loc22, #loc21])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc26, #loc27])
#loc146 = loc(fused[#loc28, #loc29])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc33, #loc32])
#loc149 = loc(fused[#loc34, #loc35])
#loc150 = loc(fused[#loc37, #loc31])
#loc151 = loc(fused[#loc40, #loc38])
#loc152 = loc(fused[#loc42, #loc41])
#loc153 = loc(fused[#loc44, #loc43])
#loc154 = loc(fused[#loc47, #loc45])
#loc155 = loc(fused[#loc48, #loc49])
#loc156 = loc(fused[#loc57, #loc58])
#loc157 = loc(fused[#loc59, #loc60])
#loc158 = loc(fused[#loc61, #loc62])
#loc159 = loc(fused[#loc63, #loc64])
#loc160 = loc(fused[#loc66, #loc67])
#loc161 = loc(fused[#loc68, #loc69])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc72, #loc73])
#loc164 = loc(fused[#loc74, #loc75])
#loc165 = loc(fused[#loc76, #loc77])
#loc166 = loc(fused[#loc78, #loc79])
#loc167 = loc(fused[#loc80, #loc81])
#loc168 = loc(fused[#loc82, #loc83])
#loc169 = loc(fused[#loc85, #loc84])
#loc170 = loc(fused[#loc86, #loc87])
#loc171 = loc(fused[#loc89, #loc90])
#loc172 = loc(fused[#loc93, #loc94])
#loc173 = loc(fused[#loc92, #loc94])
#loc174 = loc(fused[#loc91, #loc73])
#loc175 = loc(fused[#loc95, #loc96])
#loc176 = loc(fused[#loc97, #loc98])
#loc177 = loc(fused[#loc99, #loc96])
#loc178 = loc(fused[#loc103, #loc104])
#loc179 = loc(fused[#loc105, #loc106])
#loc180 = loc(fused[#loc108, #loc107])
#loc181 = loc(fused[#loc109, #loc110])
#loc182 = loc(fused[#loc112, #loc106])
#loc183 = loc(fused[#loc114, #loc113])
#loc184 = loc(fused[#loc118, #loc117])
#loc185 = loc(fused[#loc120, #loc119])
#loc186 = loc(fused[#loc123, #loc121])
#loc187 = loc(fused[#loc124, #loc125])
