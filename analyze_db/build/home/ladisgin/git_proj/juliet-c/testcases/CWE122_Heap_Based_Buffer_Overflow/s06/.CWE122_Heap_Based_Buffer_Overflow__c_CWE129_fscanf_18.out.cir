!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":160:10)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":160:14)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":160:20)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":160:32)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":87:23)
#true = #cir.bool<true> : !cir.bool
#loc312 = loc(fused[#loc104, #loc105])
#loc313 = loc(fused[#loc106, #loc107])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc271)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc273)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc274)
  cir.func private @printIntLine(!s32i) loc(#loc275)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc277)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc279)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc280)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc281)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc26)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb1 loc(#loc283)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc30)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc272)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc30)
    cir.br ^bb2 loc(#loc284)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc34)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc35)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc35)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc285)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc286)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc287)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc281)
    cir.br ^bb3 loc(#loc288)
  ^bb3:  // pred: ^bb2
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc41)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc289)
    cir.brcond %21 ^bb4, ^bb5 loc(#loc290)
  ^bb4:  // pred: ^bb3
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc45)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc291)
  ^bb7:  // pred: ^bb6
    %25 = cir.const #cir.int<0> : !s32i loc(#loc48)
    cir.store %25, %1 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.br ^bb8 loc(#loc291)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc51)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %28 ^bb9, ^bb13 loc(#loc52)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc294)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc57)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb11 loc(#loc47)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc47)
  ^bb12:  // pred: ^bb11
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %34 = cir.unary(inc, %33) : !s32i, !s32i loc(#loc59)
    cir.store %34, %1 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb8 loc(#loc291)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc47)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc297)
  ^bb15:  // pred: ^bb14
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %37 = cir.cmp(ge, %35, %36) : !s32i, !cir.bool loc(#loc298)
    cir.brcond %37 ^bb16, ^bb25 loc(#loc299)
  ^bb16:  // pred: ^bb15
    %38 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
    %40 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc70)
    cir.store %38, %41 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb17 loc(#loc301)
  ^bb17:  // pred: ^bb16
    %42 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %42, %1 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb18 loc(#loc301)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %43 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc76)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc303)
    cir.brcond %45 ^bb19, ^bb23 loc(#loc77)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc304)
  ^bb20:  // pred: ^bb19
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
    %47 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc81)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc82)
    cir.br ^bb21 loc(#loc72)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc72)
  ^bb22:  // pred: ^bb21
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %51 = cir.unary(inc, %50) : !s32i, !s32i loc(#loc84)
    cir.store %51, %1 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb18 loc(#loc301)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc72)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc65)
  ^bb25:  // pred: ^bb15
    %52 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
    %53 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb26 loc(#loc61)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc61)
  ^bb27:  // pred: ^bb26
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc86)
    cir.call @free(%55) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    cir.return loc(#loc18)
  } loc(#loc278)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc307)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc308)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc92)
    cir.return loc(#loc89)
  } loc(#loc306)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc309)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc101)
  cir.func @main(%arg0: !s32i loc(fused[#loc104, #loc105]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc106, #loc107])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc312)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc313)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc103)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc108)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc109)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc110)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc110)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc111)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc98)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc314)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18_good() : () -> () loc(#loc113)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc99)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc100)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc315)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18_bad() : () -> () loc(#loc117)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc101)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    cir.return %17 : !s32i loc(#loc316)
  } loc(#loc311)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc122)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc319)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc320)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc132)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.br ^bb1 loc(#loc322)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc136)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc272)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc137)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc138)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc138)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc136)
    cir.br ^bb2 loc(#loc323)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc141)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc142)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc142)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc324)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc325)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc326)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc320)
    cir.br ^bb3 loc(#loc327)
  ^bb3:  // pred: ^bb2
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc148)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc148)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc328)
    cir.brcond %21 ^bb4, ^bb5 loc(#loc329)
  ^bb4:  // pred: ^bb3
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc150)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc152)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc150)
    cir.br ^bb5 loc(#loc146)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc146)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc330)
  ^bb7:  // pred: ^bb6
    %25 = cir.const #cir.int<0> : !s32i loc(#loc155)
    cir.store %25, %1 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.br ^bb8 loc(#loc330)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc158)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %28 ^bb9, ^bb13 loc(#loc159)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc333)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc161)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc164)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb11 loc(#loc154)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc154)
  ^bb12:  // pred: ^bb11
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    %34 = cir.unary(inc, %33) : !s32i, !s32i loc(#loc166)
    cir.store %34, %1 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb8 loc(#loc330)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc154)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc336)
  ^bb15:  // pred: ^bb14
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %37 = cir.cmp(ge, %35, %36) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %37 ^bb16, ^bb21 loc(#loc171)
  ^bb16:  // pred: ^bb15
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc173)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc338)
    cir.brcond %40 ^bb17, ^bb18 loc(#loc171)
  ^bb17:  // pred: ^bb16
    %41 = cir.const #true loc(#loc171)
    cir.br ^bb19(%41 : !cir.bool) loc(#loc171)
  ^bb18:  // pred: ^bb16
    %42 = cir.const #false loc(#loc171)
    cir.br ^bb19(%42 : !cir.bool) loc(#loc171)
  ^bb19(%43: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":87:23)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc171)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22(%43 : !cir.bool) loc(#loc171)
  ^bb21:  // pred: ^bb15
    %44 = cir.const #false loc(#loc171)
    cir.br ^bb22(%44 : !cir.bool) loc(#loc171)
  ^bb22(%45: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":87:23)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc171)
  ^bb23:  // pred: ^bb22
    cir.brcond %45 ^bb24, ^bb33 loc(#loc339)
  ^bb24:  // pred: ^bb23
    %46 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc181)
    cir.store %46, %49 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb25 loc(#loc341)
  ^bb25:  // pred: ^bb24
    %50 = cir.const #cir.int<0> : !s32i loc(#loc184)
    cir.store %50, %1 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.br ^bb26 loc(#loc341)
  ^bb26:  // 2 preds: ^bb25, ^bb30
    %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %52 = cir.const #cir.int<10> : !s32i loc(#loc187)
    %53 = cir.cmp(lt, %51, %52) : !s32i, !cir.bool loc(#loc343)
    cir.brcond %53 ^bb27, ^bb31 loc(#loc188)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc344)
  ^bb28:  // pred: ^bb27
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
    %55 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s32i>, %55 : !s32i), !cir.ptr<!s32i> loc(#loc192)
    %57 = cir.load %56 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.call @printIntLine(%57) : (!s32i) -> () loc(#loc193)
    cir.br ^bb29 loc(#loc183)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc183)
  ^bb30:  // pred: ^bb29
    %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %59 = cir.unary(inc, %58) : !s32i, !s32i loc(#loc195)
    cir.store %59, %1 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb26 loc(#loc341)
  ^bb31:  // pred: ^bb26
    cir.br ^bb32 loc(#loc183)
  ^bb32:  // pred: ^bb31
    cir.br ^bb34 loc(#loc176)
  ^bb33:  // pred: ^bb23
    %60 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc122)
    %61 = cir.cast(array_to_ptrdecay, %60 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%61) : (!cir.ptr<!s8i>) -> () loc(#loc196)
    cir.br ^bb34 loc(#loc168)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc168)
  ^bb35:  // pred: ^bb34
    %62 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc197)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc197)
    cir.call @free(%63) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc198)
    cir.return loc(#loc124)
  } loc(#loc317)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc347)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc348)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc349)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc208)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb1 loc(#loc351)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<7> : !s32i loc(#loc212)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    cir.br ^bb2 loc(#loc353)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc216)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc217)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc217)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc354)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc355)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc216)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc356)
    cir.store %12, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc349)
    cir.br ^bb3 loc(#loc357)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc222)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc223)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc223)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc358)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc359)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc225)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc226)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc227)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc225)
    cir.br ^bb5 loc(#loc221)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc221)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc360)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc230)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb8 loc(#loc360)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc233)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc362)
    cir.brcond %23 ^bb9, ^bb13 loc(#loc234)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc363)
  ^bb10:  // pred: ^bb9
    %24 = cir.const #cir.int<0> : !s32i loc(#loc236)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc237)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc239)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.br ^bb11 loc(#loc229)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc229)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc241)
    cir.store %29, %1 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb8 loc(#loc360)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc229)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc366)
  ^bb15:  // pred: ^bb14
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc245)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %32 ^bb16, ^bb25 loc(#loc368)
  ^bb16:  // pred: ^bb15
    %33 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc250)
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc252)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    cir.br ^bb17 loc(#loc370)
  ^bb17:  // pred: ^bb16
    %37 = cir.const #cir.int<0> : !s32i loc(#loc255)
    cir.store %37, %1 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb18 loc(#loc370)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc258)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %40 ^bb19, ^bb23 loc(#loc259)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc373)
  ^bb20:  // pred: ^bb19
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc261)
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc263)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc264)
    cir.br ^bb21 loc(#loc254)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc254)
  ^bb22:  // pred: ^bb21
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %46 = cir.unary(inc, %45) : !s32i, !s32i loc(#loc266)
    cir.store %46, %1 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb18 loc(#loc370)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc254)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc247)
  ^bb25:  // pred: ^bb15
    %47 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc267)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc267)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc268)
    cir.br ^bb26 loc(#loc243)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc243)
  ^bb27:  // pred: ^bb26
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc269)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc269)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc270)
    cir.return loc(#loc200)
  } loc(#loc346)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":30:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":55:23)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":22:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":59:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":24:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":24:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":34:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":34:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":35:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":35:54)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":26:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":26:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":26:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":27:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":27:10)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":30:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":30:12)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":31:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":31:10)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":35:31)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":35:38)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":35:43)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":35:53)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":36:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":36:39)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":36:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":36:23)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":36:29)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":36:30)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":36:36)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":36:35)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":38:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":41:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":38:18)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":38:14)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":38:21)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":38:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":38:23)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":39:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":40:25)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":40:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":40:20)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":40:21)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":38:30)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":38:29)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":44:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":56:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":44:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":44:21)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":45:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":52:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":54:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":46:28)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":46:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":46:20)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":46:24)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":48:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":51:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":48:21)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":48:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":48:24)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":48:28)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":48:26)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":49:13)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":50:30)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":50:37)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":50:38)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":50:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":48:33)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":48:32)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":55:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":57:14)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":57:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":145:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":149:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":147:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":147:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":148:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":148:13)
#loc94 = loc("/usr/include/stdlib.h":575:1)
#loc95 = loc("/usr/include/stdlib.h":575:41)
#loc96 = loc("/usr/include/time.h":76:1)
#loc97 = loc("/usr/include/time.h":76:38)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":165:15)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":167:15)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":170:15)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":172:15)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":160:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":175:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":161:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":163:27)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":163:22)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":163:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":165:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":166:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":166:64)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":167:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":170:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":171:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":171:63)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":172:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":174:12)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":174:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":98:23)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":66:1)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":102:1)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":68:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":68:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":78:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":78:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":79:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":79:54)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":70:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":70:12)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":70:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":71:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":71:10)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":74:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":74:12)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":74:19)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":75:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":75:10)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":79:31)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":79:38)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":79:43)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":79:53)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":80:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":80:39)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":80:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":80:23)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":80:29)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":80:30)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":80:36)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":80:35)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":82:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":85:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":82:18)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":82:14)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":82:21)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":82:25)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":82:23)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":83:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":84:25)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":84:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":84:20)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":84:21)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":82:30)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":82:29)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":87:9)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":99:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":87:13)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":87:21)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":87:26)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":87:34)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":87:36)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":88:9)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":95:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":97:9)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":89:28)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":89:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":89:20)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":89:24)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":91:13)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":94:13)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":91:21)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":91:17)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":91:24)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":91:28)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":91:26)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":92:13)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":93:30)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":93:37)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":93:38)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":93:17)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":91:33)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":91:32)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":98:13)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":100:14)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":100:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":105:1)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":143:1)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":107:5)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":107:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":118:9)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":118:13)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":119:9)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":119:54)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":109:13)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":109:12)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":109:5)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":110:5)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":110:10)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":114:12)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":114:5)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":115:5)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":115:10)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":119:31)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":119:38)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":119:43)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":119:53)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":120:9)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":120:39)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":120:13)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":120:23)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":120:29)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":120:30)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":120:36)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":120:35)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":122:9)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":125:9)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":122:18)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":122:14)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":122:21)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":122:25)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":122:23)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":123:9)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":124:25)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":124:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":124:20)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":124:21)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":122:30)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":122:29)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":128:9)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":140:9)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":128:13)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":128:21)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":129:9)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":136:9)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":138:9)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":130:28)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":130:13)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":130:20)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":130:24)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":132:13)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":135:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":132:21)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":132:17)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":132:24)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":132:28)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":132:26)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":133:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":134:30)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":134:37)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":134:38)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":134:17)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":132:33)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":132:32)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":139:23)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":139:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":141:14)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_18.c":141:9)
#loc271 = loc(fused[#loc1, #loc2])
#loc272 = loc(fused[#loc3, #loc4])
#loc273 = loc(fused[#loc6, #loc7])
#loc274 = loc(fused[#loc8, #loc9])
#loc275 = loc(fused[#loc10, #loc11])
#loc276 = loc(fused[#loc12, #loc13])
#loc277 = loc(fused[#loc15, #loc16])
#loc278 = loc(fused[#loc17, #loc18])
#loc279 = loc(fused[#loc19, #loc20])
#loc280 = loc(fused[#loc21, #loc22])
#loc281 = loc(fused[#loc23, #loc24])
#loc282 = loc(fused[#loc27, #loc25])
#loc283 = loc(fused[#loc28, #loc29])
#loc284 = loc(fused[#loc32, #loc33])
#loc285 = loc(fused[#loc36, #loc37])
#loc286 = loc(fused[#loc35, #loc37])
#loc287 = loc(fused[#loc34, #loc24])
#loc288 = loc(fused[#loc38, #loc39])
#loc289 = loc(fused[#loc40, #loc41])
#loc290 = loc(fused[#loc42, #loc39])
#loc291 = loc(fused[#loc46, #loc47])
#loc292 = loc(fused[#loc49, #loc48])
#loc293 = loc(fused[#loc50, #loc51])
#loc294 = loc(fused[#loc53, #loc47])
#loc295 = loc(fused[#loc55, #loc54])
#loc296 = loc(fused[#loc59, #loc58])
#loc297 = loc(fused[#loc60, #loc61])
#loc298 = loc(fused[#loc62, #loc63])
#loc299 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc300 = loc(fused[#loc68, #loc67])
#loc301 = loc(fused[#loc71, #loc72])
#loc302 = loc(fused[#loc74, #loc73])
#loc303 = loc(fused[#loc75, #loc76])
#loc304 = loc(fused[#loc78, #loc72])
#loc305 = loc(fused[#loc84, #loc83])
#loc306 = loc(fused[#loc88, #loc89])
#loc307 = loc(fused[#loc90, #loc91])
#loc308 = loc(fused[#loc92, #loc93])
#loc309 = loc(fused[#loc94, #loc95])
#loc310 = loc(fused[#loc96, #loc97])
#loc311 = loc(fused[#loc102, #loc103])
#loc314 = loc(fused[#loc113, #loc114])
#loc315 = loc(fused[#loc117, #loc118])
#loc316 = loc(fused[#loc121, #loc120])
#loc317 = loc(fused[#loc123, #loc124])
#loc318 = loc(fused[#loc125, #loc126])
#loc319 = loc(fused[#loc127, #loc128])
#loc320 = loc(fused[#loc129, #loc130])
#loc321 = loc(fused[#loc133, #loc131])
#loc322 = loc(fused[#loc134, #loc135])
#loc323 = loc(fused[#loc139, #loc140])
#loc324 = loc(fused[#loc143, #loc144])
#loc325 = loc(fused[#loc142, #loc144])
#loc326 = loc(fused[#loc141, #loc130])
#loc327 = loc(fused[#loc145, #loc146])
#loc328 = loc(fused[#loc147, #loc148])
#loc329 = loc(fused[#loc149, #loc146])
#loc330 = loc(fused[#loc153, #loc154])
#loc331 = loc(fused[#loc156, #loc155])
#loc332 = loc(fused[#loc157, #loc158])
#loc333 = loc(fused[#loc160, #loc154])
#loc334 = loc(fused[#loc162, #loc161])
#loc335 = loc(fused[#loc166, #loc165])
#loc336 = loc(fused[#loc167, #loc168])
#loc337 = loc(fused[#loc169, #loc170])
#loc338 = loc(fused[#loc172, #loc174])
#loc339 = loc(fused[#loc175, #loc176, #loc177, #loc168])
#loc340 = loc(fused[#loc179, #loc178])
#loc341 = loc(fused[#loc182, #loc183])
#loc342 = loc(fused[#loc185, #loc184])
#loc343 = loc(fused[#loc186, #loc187])
#loc344 = loc(fused[#loc189, #loc183])
#loc345 = loc(fused[#loc195, #loc194])
#loc346 = loc(fused[#loc199, #loc200])
#loc347 = loc(fused[#loc201, #loc202])
#loc348 = loc(fused[#loc203, #loc204])
#loc349 = loc(fused[#loc205, #loc206])
#loc350 = loc(fused[#loc209, #loc207])
#loc351 = loc(fused[#loc210, #loc211])
#loc352 = loc(fused[#loc213, #loc212])
#loc353 = loc(fused[#loc214, #loc215])
#loc354 = loc(fused[#loc218, #loc219])
#loc355 = loc(fused[#loc217, #loc219])
#loc356 = loc(fused[#loc216, #loc206])
#loc357 = loc(fused[#loc220, #loc221])
#loc358 = loc(fused[#loc222, #loc223])
#loc359 = loc(fused[#loc224, #loc221])
#loc360 = loc(fused[#loc228, #loc229])
#loc361 = loc(fused[#loc231, #loc230])
#loc362 = loc(fused[#loc232, #loc233])
#loc363 = loc(fused[#loc235, #loc229])
#loc364 = loc(fused[#loc237, #loc236])
#loc365 = loc(fused[#loc241, #loc240])
#loc366 = loc(fused[#loc242, #loc243])
#loc367 = loc(fused[#loc244, #loc245])
#loc368 = loc(fused[#loc246, #loc247, #loc248, #loc243])
#loc369 = loc(fused[#loc250, #loc249])
#loc370 = loc(fused[#loc253, #loc254])
#loc371 = loc(fused[#loc256, #loc255])
#loc372 = loc(fused[#loc257, #loc258])
#loc373 = loc(fused[#loc260, #loc254])
#loc374 = loc(fused[#loc266, #loc265])
