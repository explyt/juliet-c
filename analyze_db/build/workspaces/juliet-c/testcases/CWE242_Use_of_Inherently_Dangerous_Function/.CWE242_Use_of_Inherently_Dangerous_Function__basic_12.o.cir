!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc139)
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc5)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc141)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc143)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc146)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc146)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc16)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc149)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc150)
          %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc27)
          %7 = cir.get_global @gets : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc151)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>> loc(#loc151)
          %9 = cir.call %8(%6) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>>, !cir.ptr<!s8i>) -> !s32i loc(#loc28)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc28)
          %11 = cir.cast(int_to_ptr, %10 : !u64i), !cir.ptr<!s8i> loc(#loc28)
          cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
          cir.scope {
            %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc5)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc5)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc36)
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc38)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
            } loc(#loc155)
          } loc(#loc153)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc39)
          %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc39)
          %14 = cir.const #cir.int<10> : !s32i loc(#loc40)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc40)
          %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc42)
          %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc42)
          cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc156)
          %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc43)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc44)
        } loc(#loc148)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc158)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc159)
          %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc51)
          %7 = cir.const #cir.int<10> : !s32i loc(#loc52)
          %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
          %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc54)
          cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
          cir.scope {
            %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
            cir.if %22 {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc62)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc62)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc63)
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc64)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc65)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc64)
            } loc(#loc163)
          } loc(#loc161)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc66)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc66)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc67)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc68)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc67)
          %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc69)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc69)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc164)
          %18 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc70)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc71)
        } loc(#loc157)
      } loc(#loc147)
    } loc(#loc145)
    cir.return loc(#loc13)
  } loc(#loc144)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc73)
  } loc(#loc165)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc169)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc169)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc80)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc80)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc172)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc173)
          %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc91)
          %7 = cir.const #cir.int<10> : !s32i loc(#loc92)
          %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
          %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc94)
          cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
          cir.scope {
            %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc176)
            cir.if %22 {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc102)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc102)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc103)
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc104)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc105)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
            } loc(#loc177)
          } loc(#loc175)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc106)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc107)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc108)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc107)
          %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc109)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc109)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc178)
          %18 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc110)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc111)
        } loc(#loc171)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc180)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc181)
          %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc118)
          %7 = cir.const #cir.int<10> : !s32i loc(#loc119)
          %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc120)
          %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc121)
          cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
          cir.scope {
            %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc184)
            cir.if %22 {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc129)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc129)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc130)
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc131)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc132)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
            } loc(#loc185)
          } loc(#loc183)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc133)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc133)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc134)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc135)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc134)
          %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc136)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc136)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc186)
          %18 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc137)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc138)
        } loc(#loc179)
      } loc(#loc170)
    } loc(#loc168)
    cir.return loc(#loc77)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":37:27)
#loc6 = loc("/usr/include/stdlib.h":756:1)
#loc7 = loc("/usr/include/stdlib.h":756:70)
#loc8 = loc("/usr/include/stdio.h":654:1)
#loc9 = loc("/usr/include/stdio.h":655:59)
#loc10 = loc("/usr/include/stdio.h":149:1)
#loc11 = loc("/usr/include/stdio.h":149:14)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":22:1)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":62:1)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":24:5)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":61:5)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":24:8)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":24:33)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":25:5)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":43:5)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":45:5)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":26:9)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":42:9)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":27:13)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":27:32)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":28:13)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":28:19)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":32:27)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":32:22)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":32:31)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":32:13)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":34:13)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":39:13)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":34:17)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":34:27)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":35:13)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":37:17)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":38:17)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":38:22)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":40:33)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":40:18)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":40:28)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":40:13)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":41:23)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":41:13)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":46:9)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":60:9)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":47:13)
#loc48 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":47:32)
#loc49 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":48:13)
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":48:19)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":50:28)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":50:34)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":50:45)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":50:22)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":50:13)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":50:50)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":52:13)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":57:13)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":52:17)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":52:27)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":53:13)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":55:27)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":55:17)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":56:17)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":56:22)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":58:33)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":58:18)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":58:28)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":58:13)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":59:23)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":59:13)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":109:1)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":112:1)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":111:5)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":111:11)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":69:1)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":107:1)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":71:5)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":106:5)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":71:8)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":71:33)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":72:5)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":88:5)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":90:5)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":73:9)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":87:9)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":74:13)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":74:32)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":75:13)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":75:19)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":77:28)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":77:34)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":77:45)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":77:22)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":77:13)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":77:50)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":79:13)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":84:13)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":79:17)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":79:27)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":80:13)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":82:27)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":82:17)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":83:17)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":83:22)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":85:33)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":85:18)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":85:28)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":85:13)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":86:23)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":86:13)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":91:9)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":105:9)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":92:13)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":92:32)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":93:13)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":93:19)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":95:28)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":95:34)
#loc120 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":95:45)
#loc121 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":95:22)
#loc122 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":95:13)
#loc123 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":95:50)
#loc124 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":97:13)
#loc125 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":102:13)
#loc126 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":97:17)
#loc127 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":97:27)
#loc128 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":98:13)
#loc129 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":100:27)
#loc130 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":100:17)
#loc131 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":101:17)
#loc132 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":101:22)
#loc133 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":103:33)
#loc134 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":103:18)
#loc135 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":103:28)
#loc136 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":103:13)
#loc137 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":104:23)
#loc138 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_12.c":104:13)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc6, #loc7])
#loc142 = loc(fused[#loc8, #loc9])
#loc143 = loc(fused[#loc10, #loc11])
#loc144 = loc(fused[#loc12, #loc13])
#loc145 = loc(fused[#loc14, #loc15])
#loc146 = loc(fused[#loc16, #loc17])
#loc147 = loc(fused[#loc18, #loc19, #loc20, #loc15])
#loc148 = loc(fused[#loc21, #loc22])
#loc149 = loc(fused[#loc23, #loc24])
#loc150 = loc(fused[#loc25, #loc26])
#loc151 = loc(fused[#loc28, #loc29])
#loc152 = loc(fused[#loc30, #loc29])
#loc153 = loc(fused[#loc31, #loc32])
#loc154 = loc(fused[#loc33, #loc34])
#loc155 = loc(fused[#loc35, #loc32])
#loc156 = loc(fused[#loc42, #loc39])
#loc157 = loc(fused[#loc45, #loc46])
#loc158 = loc(fused[#loc47, #loc48])
#loc159 = loc(fused[#loc49, #loc50])
#loc160 = loc(fused[#loc55, #loc56])
#loc161 = loc(fused[#loc57, #loc58])
#loc162 = loc(fused[#loc59, #loc60])
#loc163 = loc(fused[#loc61, #loc58])
#loc164 = loc(fused[#loc69, #loc66])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc74, #loc75])
#loc167 = loc(fused[#loc76, #loc77])
#loc168 = loc(fused[#loc78, #loc79])
#loc169 = loc(fused[#loc80, #loc81])
#loc170 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc171 = loc(fused[#loc85, #loc86])
#loc172 = loc(fused[#loc87, #loc88])
#loc173 = loc(fused[#loc89, #loc90])
#loc174 = loc(fused[#loc95, #loc96])
#loc175 = loc(fused[#loc97, #loc98])
#loc176 = loc(fused[#loc99, #loc100])
#loc177 = loc(fused[#loc101, #loc98])
#loc178 = loc(fused[#loc109, #loc106])
#loc179 = loc(fused[#loc112, #loc113])
#loc180 = loc(fused[#loc114, #loc115])
#loc181 = loc(fused[#loc116, #loc117])
#loc182 = loc(fused[#loc122, #loc123])
#loc183 = loc(fused[#loc124, #loc125])
#loc184 = loc(fused[#loc126, #loc127])
#loc185 = loc(fused[#loc128, #loc125])
#loc186 = loc(fused[#loc136, #loc133])
