!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType = !cir.record<union "CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType" {!s32i, !s32i}>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc325)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc326)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc327)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc328)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc329)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc330)
  cir.func private @close(!s32i) -> !s32i loc(#loc331)
  cir.func private @printIntLine(!s32i) loc(#loc332)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc334)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc335)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc26)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc338)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc339)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc340)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc341)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc342)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc35)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc340)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc37)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc341)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc44)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc46)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc345)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc53)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc347)
              cir.if %63 {
                cir.break loc(#loc55)
              } loc(#loc348)
            } loc(#loc346)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc349)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc350)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc351)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc63)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc63)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc352)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc66)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc66)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc353)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc70)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc70)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc71)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc354)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc77)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc356)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc357)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc357)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc82)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc83)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc83)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc358)
              cir.if %67 {
                cir.break loc(#loc85)
              } loc(#loc359)
            } loc(#loc355)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc89)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc90)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc91)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc361)
              cir.if %65 {
                cir.break loc(#loc93)
              } loc(#loc362)
            } loc(#loc360)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc95)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc96)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc97)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc363)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc103)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc103)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc365)
              cir.if %63 {
                cir.break loc(#loc105)
              } loc(#loc366)
            } loc(#loc364)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc106)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc108)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc108)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc108)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc108)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc108)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc108)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc108)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc109)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc367)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc110)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc111)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc111)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc368)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc117)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc370)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc118)
                cir.yield %65 : !cir.bool loc(#loc118)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc120)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc371)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc118)
                  cir.yield %69 : !cir.bool loc(#loc118)
                }, false {
                  %69 = cir.const #false loc(#loc118)
                  cir.yield %69 : !cir.bool loc(#loc118)
                }) : (!cir.bool) -> !cir.bool loc(#loc118)
                cir.yield %68 : !cir.bool loc(#loc118)
              }) : (!cir.bool) -> !cir.bool loc(#loc118)
              cir.if %64 {
                cir.break loc(#loc122)
              } loc(#loc372)
            } loc(#loc369)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc123)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc123)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc125)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc373)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc127)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc374)
          } loc(#loc344)
          cir.yield loc(#loc41)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc130)
          cir.condition(%16) loc(#loc130)
        } loc(#loc343)
      } loc(#loc343)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc133)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc134)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc376)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc137)
        } loc(#loc377)
      } loc(#loc375)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc141)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc141)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc379)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc143)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc144)
        } loc(#loc380)
      } loc(#loc378)
    } loc(#loc337)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc146)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc383)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc152)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc151)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc383)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc153)
      %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc154)
      %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc384)
      cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc155)
    } loc(#loc382)
    cir.return loc(#loc20)
  } loc(#loc333)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc386)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc158)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc387)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc160)
    cir.return loc(#loc157)
  } loc(#loc385)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc389)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc390)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc169)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc171)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc146)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc395)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc152)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc178)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc395)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc179)
      %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc180)
      %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc396)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc181)
    } loc(#loc394)
    cir.return loc(#loc163)
  } loc(#loc388)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc397)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc184)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc399)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc400)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc192)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc403)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc404)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc405)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc406)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc407)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc201)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc201)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc405)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc203)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc203)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc406)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc210)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc211)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc212)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc213)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc410)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc218)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc219)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc219)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc412)
              cir.if %63 {
                cir.break loc(#loc221)
              } loc(#loc413)
            } loc(#loc411)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc414)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc224)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc415)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc416)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc229)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc229)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc417)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc231)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc231)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc418)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc233)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc233)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc234)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc419)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc239)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc421)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc422)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc422)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc244)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc245)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc245)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc423)
              cir.if %67 {
                cir.break loc(#loc247)
              } loc(#loc424)
            } loc(#loc420)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc251)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc252)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc253)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc253)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc426)
              cir.if %65 {
                cir.break loc(#loc255)
              } loc(#loc427)
            } loc(#loc425)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc256)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc257)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc258)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc259)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc428)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc264)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc265)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc265)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc430)
              cir.if %63 {
                cir.break loc(#loc267)
              } loc(#loc431)
            } loc(#loc429)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc268)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc269)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc269)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc270)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc270)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc270)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc270)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc270)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc270)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc270)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc271)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc271)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc432)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc272)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc273)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc273)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc433)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc278)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc279)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc279)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc435)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc280)
                cir.yield %65 : !cir.bool loc(#loc280)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc281)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc282)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc436)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc280)
                  cir.yield %69 : !cir.bool loc(#loc280)
                }, false {
                  %69 = cir.const #false loc(#loc280)
                  cir.yield %69 : !cir.bool loc(#loc280)
                }) : (!cir.bool) -> !cir.bool loc(#loc280)
                cir.yield %68 : !cir.bool loc(#loc280)
              }) : (!cir.bool) -> !cir.bool loc(#loc280)
              cir.if %64 {
                cir.break loc(#loc284)
              } loc(#loc437)
            } loc(#loc434)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc285)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc285)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc286)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc287)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc287)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc438)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc288)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc289)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
          } loc(#loc409)
          cir.yield loc(#loc207)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc292)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc292)
          cir.condition(%16) loc(#loc292)
        } loc(#loc408)
      } loc(#loc408)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc295)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc296)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc296)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc441)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc298)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc299)
        } loc(#loc442)
      } loc(#loc440)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc302)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc303)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc303)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc444)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc305)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc306)
        } loc(#loc445)
      } loc(#loc443)
    } loc(#loc402)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc146)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc446)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc448)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_listen_socket_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc152)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc312)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc448)
      cir.scope {
        %9 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc315)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc316)
        %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc450)
        cir.if %11 {
          %12 = cir.const #cir.int<100> : !s32i loc(#loc320)
          %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc321)
          %14 = cir.binop(rem, %12, %13) : !s32i loc(#loc452)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc322)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc184)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc184)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc323)
        } loc(#loc451)
      } loc(#loc449)
    } loc(#loc447)
    cir.return loc(#loc186)
  } loc(#loc398)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":50:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":131:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":52:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":52:9)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":53:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":53:66)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":55:13)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":55:12)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":55:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":56:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":124:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":61:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":61:13)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":62:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":62:28)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":63:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":63:31)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":64:9)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":64:31)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":65:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":65:41)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":66:9)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":109:17)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":67:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":108:9)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":76:35)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":76:44)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":76:57)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":76:28)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":76:13)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":76:68)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":77:13)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":80:13)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":77:17)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":77:33)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":78:13)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":79:17)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":81:20)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":81:21)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":81:30)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":81:33)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":81:47)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":81:13)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":81:48)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":82:34)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":82:13)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":83:39)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":83:13)
#loc70 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":84:38)
#loc71 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":84:32)
#loc72 = loc("/usr/include/netinet/in.h":250:15)
#loc73 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":84:13)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":84:46)
#loc75 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":85:13)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":88:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":85:22)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":85:54)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":85:55)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":85:64)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":85:78)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":85:17)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":85:84)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":86:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":87:17)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":89:13)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":92:13)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":89:24)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":89:38)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":89:17)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":89:57)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":90:13)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":91:17)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":93:35)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":93:49)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":93:55)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":93:28)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":93:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":93:59)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":94:13)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":97:13)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":94:17)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":94:33)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":95:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":96:17)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":99:31)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":99:45)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":99:58)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":99:76)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":99:79)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":99:26)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":99:13)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":99:80)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":100:13)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":103:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":100:17)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":100:31)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":100:44)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":100:47)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":100:61)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":101:13)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":102:17)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":105:39)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":105:25)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":105:13)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":107:25)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":107:20)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":107:13)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":107:36)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":109:16)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":110:9)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":113:9)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":110:13)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":110:29)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":111:9)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":112:26)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":112:13)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":114:9)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":117:9)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":114:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":114:29)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":115:9)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":116:26)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":116:13)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":125:26)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":44:9)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":125:5)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":126:5)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":130:5)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":127:9)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":127:28)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":45:9)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":129:22)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":129:28)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":129:9)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":245:1)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":249:1)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":247:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":247:13)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":248:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":248:13)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":138:1)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":152:1)
#loc164 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":140:5)
#loc165 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":140:9)
#loc166 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":141:5)
#loc167 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":141:66)
#loc168 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":143:13)
#loc169 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":143:12)
#loc170 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":143:5)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":145:12)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":145:5)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":146:26)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":146:5)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":147:5)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":151:5)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":148:9)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":148:28)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":150:22)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":150:28)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":150:9)
#loc182 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc183 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":240:23)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":155:1)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":243:1)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":157:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":157:9)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":158:5)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":158:66)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":160:13)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":160:12)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":160:5)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":161:5)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":229:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":166:9)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":166:13)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":167:9)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":167:28)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":168:9)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":168:31)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":169:9)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":169:31)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":170:9)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":170:41)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":171:9)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":214:17)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":172:9)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":213:9)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":181:35)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":181:44)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":181:57)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":181:28)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":181:13)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":181:68)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":182:13)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":185:13)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":182:17)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":182:33)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":183:13)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":184:17)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":186:20)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":186:21)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":186:30)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":186:33)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":186:47)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":186:13)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":186:48)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":187:34)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":187:13)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":188:39)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":188:13)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":189:38)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":189:32)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":189:13)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":189:46)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":190:13)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":193:13)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":190:22)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":190:54)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":190:55)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":190:64)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":190:78)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":190:17)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":190:84)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":191:13)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":192:17)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":194:13)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":197:13)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":194:24)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":194:38)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":194:17)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":194:57)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":195:13)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":196:17)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":198:35)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":198:49)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":198:55)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":198:28)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":198:13)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":198:59)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":199:13)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":202:13)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":199:17)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":199:33)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":200:13)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":201:17)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":204:31)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":204:45)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":204:58)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":204:76)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":204:79)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":204:26)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":204:13)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":204:80)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":205:13)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":208:13)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":205:17)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":205:31)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":205:44)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":205:47)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":205:61)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":206:13)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":207:17)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":210:39)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":210:25)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":210:13)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":212:25)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":212:20)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":212:13)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":212:36)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":214:16)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":215:9)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":218:9)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":215:13)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":215:29)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":216:9)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":217:26)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":217:13)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":219:9)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":222:9)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":219:13)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":219:29)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":220:9)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":221:26)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":221:13)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":230:26)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":230:5)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":231:5)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":242:5)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":232:9)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":232:28)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":234:9)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":241:9)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":234:13)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":234:21)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":235:9)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":237:9)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":239:9)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":236:26)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":236:32)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":236:13)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_34.c":240:13)
#loc324 = loc(fused[#loc1, #loc2])
#loc325 = loc(fused[#loc3, #loc4])
#loc326 = loc(fused[#loc5, #loc6])
#loc327 = loc(fused[#loc7, #loc8])
#loc328 = loc(fused[#loc9, #loc10])
#loc329 = loc(fused[#loc11, #loc12])
#loc330 = loc(fused[#loc13, #loc14])
#loc331 = loc(fused[#loc15, #loc16])
#loc332 = loc(fused[#loc17, #loc18])
#loc333 = loc(fused[#loc19, #loc20])
#loc334 = loc(fused[#loc21, #loc22])
#loc335 = loc(fused[#loc23, #loc24])
#loc336 = loc(fused[#loc27, #loc25])
#loc337 = loc(fused[#loc28, #loc29])
#loc338 = loc(fused[#loc30, #loc31])
#loc339 = loc(fused[#loc32, #loc33])
#loc340 = loc(fused[#loc34, #loc35])
#loc341 = loc(fused[#loc36, #loc37])
#loc342 = loc(fused[#loc38, #loc39])
#loc343 = loc(fused[#loc40, #loc41])
#loc344 = loc(fused[#loc42, #loc43])
#loc345 = loc(fused[#loc48, #loc49])
#loc346 = loc(fused[#loc50, #loc51])
#loc347 = loc(fused[#loc52, #loc53])
#loc348 = loc(fused[#loc54, #loc51])
#loc349 = loc(fused[#loc56, #loc57])
#loc350 = loc(fused[#loc59, #loc60])
#loc351 = loc(fused[#loc61, #loc62])
#loc352 = loc(fused[#loc65, #loc63])
#loc353 = loc(fused[#loc69, #loc66])
#loc354 = loc(fused[#loc73, #loc74])
#loc355 = loc(fused[#loc75, #loc76])
#loc356 = loc(fused[#loc78, #loc79])
#loc357 = loc(fused[#loc80, #loc81])
#loc358 = loc(fused[#loc82, #loc83])
#loc359 = loc(fused[#loc84, #loc76])
#loc360 = loc(fused[#loc86, #loc87])
#loc361 = loc(fused[#loc90, #loc91])
#loc362 = loc(fused[#loc92, #loc87])
#loc363 = loc(fused[#loc98, #loc99])
#loc364 = loc(fused[#loc100, #loc101])
#loc365 = loc(fused[#loc102, #loc103])
#loc366 = loc(fused[#loc104, #loc101])
#loc367 = loc(fused[#loc108, #loc109])
#loc368 = loc(fused[#loc112, #loc113])
#loc369 = loc(fused[#loc114, #loc115])
#loc370 = loc(fused[#loc116, #loc117])
#loc371 = loc(fused[#loc119, #loc120])
#loc372 = loc(fused[#loc121, #loc115])
#loc373 = loc(fused[#loc125, #loc123])
#loc374 = loc(fused[#loc128, #loc129])
#loc375 = loc(fused[#loc131, #loc132])
#loc376 = loc(fused[#loc133, #loc134])
#loc377 = loc(fused[#loc135, #loc132])
#loc378 = loc(fused[#loc138, #loc139])
#loc379 = loc(fused[#loc140, #loc141])
#loc380 = loc(fused[#loc142, #loc139])
#loc381 = loc(fused[#loc147, #loc145])
#loc382 = loc(fused[#loc148, #loc149])
#loc383 = loc(fused[#loc150, #loc151])
#loc384 = loc(fused[#loc153, #loc154])
#loc385 = loc(fused[#loc156, #loc157])
#loc386 = loc(fused[#loc158, #loc159])
#loc387 = loc(fused[#loc160, #loc161])
#loc388 = loc(fused[#loc162, #loc163])
#loc389 = loc(fused[#loc164, #loc165])
#loc390 = loc(fused[#loc166, #loc167])
#loc391 = loc(fused[#loc170, #loc168])
#loc392 = loc(fused[#loc172, #loc171])
#loc393 = loc(fused[#loc174, #loc173])
#loc394 = loc(fused[#loc175, #loc176])
#loc395 = loc(fused[#loc177, #loc178])
#loc396 = loc(fused[#loc179, #loc180])
#loc397 = loc(fused[#loc182, #loc183])
#loc398 = loc(fused[#loc185, #loc186])
#loc399 = loc(fused[#loc187, #loc188])
#loc400 = loc(fused[#loc189, #loc190])
#loc401 = loc(fused[#loc193, #loc191])
#loc402 = loc(fused[#loc194, #loc195])
#loc403 = loc(fused[#loc196, #loc197])
#loc404 = loc(fused[#loc198, #loc199])
#loc405 = loc(fused[#loc200, #loc201])
#loc406 = loc(fused[#loc202, #loc203])
#loc407 = loc(fused[#loc204, #loc205])
#loc408 = loc(fused[#loc206, #loc207])
#loc409 = loc(fused[#loc208, #loc209])
#loc410 = loc(fused[#loc214, #loc215])
#loc411 = loc(fused[#loc216, #loc217])
#loc412 = loc(fused[#loc218, #loc219])
#loc413 = loc(fused[#loc220, #loc217])
#loc414 = loc(fused[#loc222, #loc223])
#loc415 = loc(fused[#loc225, #loc226])
#loc416 = loc(fused[#loc227, #loc228])
#loc417 = loc(fused[#loc230, #loc229])
#loc418 = loc(fused[#loc232, #loc231])
#loc419 = loc(fused[#loc235, #loc236])
#loc420 = loc(fused[#loc237, #loc238])
#loc421 = loc(fused[#loc240, #loc241])
#loc422 = loc(fused[#loc242, #loc243])
#loc423 = loc(fused[#loc244, #loc245])
#loc424 = loc(fused[#loc246, #loc238])
#loc425 = loc(fused[#loc248, #loc249])
#loc426 = loc(fused[#loc252, #loc253])
#loc427 = loc(fused[#loc254, #loc249])
#loc428 = loc(fused[#loc260, #loc261])
#loc429 = loc(fused[#loc262, #loc263])
#loc430 = loc(fused[#loc264, #loc265])
#loc431 = loc(fused[#loc266, #loc263])
#loc432 = loc(fused[#loc270, #loc271])
#loc433 = loc(fused[#loc274, #loc275])
#loc434 = loc(fused[#loc276, #loc277])
#loc435 = loc(fused[#loc278, #loc279])
#loc436 = loc(fused[#loc281, #loc282])
#loc437 = loc(fused[#loc283, #loc277])
#loc438 = loc(fused[#loc287, #loc285])
#loc439 = loc(fused[#loc290, #loc291])
#loc440 = loc(fused[#loc293, #loc294])
#loc441 = loc(fused[#loc295, #loc296])
#loc442 = loc(fused[#loc297, #loc294])
#loc443 = loc(fused[#loc300, #loc301])
#loc444 = loc(fused[#loc302, #loc303])
#loc445 = loc(fused[#loc304, #loc301])
#loc446 = loc(fused[#loc308, #loc307])
#loc447 = loc(fused[#loc309, #loc310])
#loc448 = loc(fused[#loc311, #loc312])
#loc449 = loc(fused[#loc313, #loc314])
#loc450 = loc(fused[#loc315, #loc316])
#loc451 = loc(fused[#loc317, #loc318, #loc319, #loc314])
#loc452 = loc(fused[#loc320, #loc321])
