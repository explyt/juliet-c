!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":96:10)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":96:14)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":96:20)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":96:32)
#loc140 = loc(fused[#loc37, #loc38])
#loc141 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc125)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc128)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc129)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc13)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc16)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc131)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %10 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %11 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc4)
  } loc(#loc126)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc22)
  } loc(#loc134)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc136)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc34)
  cir.func @main(%arg0: !s32i loc(fused[#loc37, #loc38]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc39, #loc40])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc36)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc41)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc43)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc43)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc44)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc31)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_good() : () -> () loc(#loc46)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc32)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc33)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_bad() : () -> () loc(#loc50)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc34)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc53)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %17 : !s32i loc(#loc144)
  } loc(#loc139)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc145)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc149)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc66)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc67)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc68)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc67)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc67)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc71)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc71)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc72)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc73)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc72)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc74)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc151)
      %18 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc75)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc78)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc78)
      %23 = cir.call @strncat(%19, %20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc75)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    } loc(#loc148)
    cir.return loc(#loc58)
  } loc(#loc146)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc152)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc155)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc156)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc93)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %10 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    %11 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    cir.return loc(#loc84)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc164)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc110)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc111)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc112)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc111)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc111)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc165)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc115)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc115)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc116)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc117)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc116)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc118)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc166)
      %18 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc119)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc122)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc122)
      %23 = cir.call @strncat(%19, %20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc119)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    } loc(#loc163)
    cir.return loc(#loc102)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":21:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":21:15)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":39:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":50:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":41:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":41:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":42:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":42:26)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":43:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":43:28)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":46:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":46:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":47:15)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":47:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":47:10)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":47:11)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":48:79)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":48:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":49:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":49:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":82:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":85:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":84:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":84:13)
#loc25 = loc("/usr/include/stdlib.h":575:1)
#loc26 = loc("/usr/include/stdlib.h":575:41)
#loc27 = loc("/usr/include/time.h":76:1)
#loc28 = loc("/usr/include/time.h":76:38)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":101:15)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":103:15)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":106:15)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":108:15)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":96:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":111:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":97:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":99:27)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":99:22)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":99:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":101:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":102:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":102:74)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":103:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":106:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":107:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":107:73)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":108:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":110:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":110:5)
#loc55 = loc("/usr/include/string.h":152:1)
#loc56 = loc("/usr/include/string.h":153:29)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":26:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":37:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":28:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":28:19)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":29:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":36:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":30:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":30:24)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":31:16)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":31:24)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":31:29)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":31:33)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":31:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":31:34)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":32:25)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":32:16)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":32:20)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":32:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":34:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":34:17)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":34:23)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":34:31)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":35:19)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":35:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":22:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":22:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":70:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":80:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":72:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":72:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":73:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":73:26)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":74:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":74:28)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":76:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":76:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":77:15)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":77:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":77:10)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":77:11)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":78:83)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":78:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":79:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":79:17)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":57:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":68:1)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":59:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":59:19)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":60:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":67:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":61:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":61:24)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":62:16)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":62:24)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":62:29)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":62:33)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":62:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":62:34)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":63:25)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":63:16)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":63:20)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":63:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":65:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":65:17)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":65:23)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":65:31)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":66:19)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_45.c":66:9)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc12, #loc11])
#loc131 = loc(fused[#loc14, #loc13])
#loc132 = loc(fused[#loc18, #loc17])
#loc133 = loc(fused[#loc19, #loc20])
#loc134 = loc(fused[#loc21, #loc22])
#loc135 = loc(fused[#loc23, #loc24])
#loc136 = loc(fused[#loc25, #loc26])
#loc137 = loc(fused[#loc27, #loc28])
#loc138 = loc(fused[#loc29, #loc30])
#loc139 = loc(fused[#loc35, #loc36])
#loc142 = loc(fused[#loc46, #loc47])
#loc143 = loc(fused[#loc50, #loc51])
#loc144 = loc(fused[#loc54, #loc53])
#loc145 = loc(fused[#loc55, #loc56])
#loc146 = loc(fused[#loc57, #loc58])
#loc147 = loc(fused[#loc59, #loc60])
#loc148 = loc(fused[#loc61, #loc62])
#loc149 = loc(fused[#loc63, #loc64])
#loc150 = loc(fused[#loc69, #loc70])
#loc151 = loc(fused[#loc74, #loc71])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc83, #loc84])
#loc154 = loc(fused[#loc85, #loc86])
#loc155 = loc(fused[#loc87, #loc88])
#loc156 = loc(fused[#loc89, #loc90])
#loc157 = loc(fused[#loc92, #loc91])
#loc158 = loc(fused[#loc94, #loc93])
#loc159 = loc(fused[#loc98, #loc97])
#loc160 = loc(fused[#loc99, #loc100])
#loc161 = loc(fused[#loc101, #loc102])
#loc162 = loc(fused[#loc103, #loc104])
#loc163 = loc(fused[#loc105, #loc106])
#loc164 = loc(fused[#loc107, #loc108])
#loc165 = loc(fused[#loc113, #loc114])
#loc166 = loc(fused[#loc118, #loc115])
