!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc284)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc285)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc286)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc288)
  cir.func private @getsockname(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc289)
  cir.func private @getnameinfo(!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc290)
  cir.func private @strcmp(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"admin.google.com\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc17)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc292)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Welcome, admin!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Welcome!\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc293)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Send failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc24)
  cir.func private @close(!s32i) -> !s32i loc(#loc294)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc296)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["acceptService"] {alignment = 4 : i64} loc(#loc297)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptServiceLen", init] {alignment = 4 : i64} loc(#loc298)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc299)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc300)
    %5 = cir.alloca !cir.array<!s8i x 1025>, !cir.ptr<!cir.array<!s8i x 1025>>, ["hostname"] {alignment = 16 : i64} loc(#loc301)
    %6 = cir.alloca !cir.array<!s8i x 32>, !cir.ptr<!cir.array<!s8i x 32>>, ["servInfo"] {alignment = 16 : i64} loc(#loc302)
    cir.br ^bb1 loc(#loc303)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<16> : !u64i loc(#loc304)
    %8 = cir.cast(integral, %7 : !u64i), !s32i loc(#loc304)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc35)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc37)
    cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb2 loc(#loc305)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc305)
  ^bb3:  // pred: ^bb43
    %13 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %14 ^bb4, ^bb44 loc(#loc47)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc306)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc52)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.br ^bb6 loc(#loc308)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc59)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc309)
    cir.brcond %22 ^bb7, ^bb8 loc(#loc310)
  ^bb7:  // pred: ^bb6
    cir.br ^bb44 loc(#loc61)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc57)
  ^bb9:  // pred: ^bb8
    %23 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc311)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc312)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc313)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc69)
    %28 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc314)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc72)
    %31 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc315)
    %33 = cir.const #cir.int<20000> : !s32i loc(#loc76)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc76)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
    %36 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc316)
    cir.br ^bb10 loc(#loc317)
  ^bb10:  // pred: ^bb9
    %37 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %38 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc318)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc319)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc319)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc88)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc89)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc320)
    cir.brcond %44 ^bb11, ^bb12 loc(#loc321)
  ^bb11:  // pred: ^bb10
    cir.br ^bb44 loc(#loc91)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc82)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc322)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc95)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc96)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %49 = cir.unary(minus, %48) nsw : !s32i, !s32i loc(#loc97)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc323)
    cir.brcond %50 ^bb15, ^bb16 loc(#loc324)
  ^bb15:  // pred: ^bb14
    cir.br ^bb44 loc(#loc99)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc93)
  ^bb17:  // pred: ^bb16
    %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc101)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc102)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc103)
    cir.store %54, %4 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.br ^bb18 loc(#loc326)
  ^bb18:  // pred: ^bb17
    %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc109)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc327)
    cir.brcond %58 ^bb19, ^bb20 loc(#loc328)
  ^bb19:  // pred: ^bb18
    cir.br ^bb44 loc(#loc111)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc107)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc329)
  ^bb22:  // pred: ^bb21
    %59 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %60 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc330)
    %61 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!u32i> loc(#loc331)
    %62 = cir.call @getsockname(%59, %60, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc119)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc121)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %65 ^bb23, ^bb24 loc(#loc333)
  ^bb23:  // pred: ^bb22
    cir.br ^bb44 loc(#loc123)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc113)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc334)
  ^bb26:  // pred: ^bb25
    %66 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc335)
    %67 = cir.const #cir.int<16> : !u64i loc(#loc336)
    %68 = cir.cast(integral, %67 : !u64i), !u32i loc(#loc336)
    %69 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc130)
    %70 = cir.const #cir.int<1025> : !s32i loc(#loc131)
    %71 = cir.cast(integral, %70 : !s32i), !u32i loc(#loc131)
    %72 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc132)
    %73 = cir.const #cir.int<32> : !s32i loc(#loc133)
    %74 = cir.cast(integral, %73 : !s32i), !u32i loc(#loc133)
    %75 = cir.const #cir.int<2> : !s32i loc(#loc134)
    %76 = cir.call @getnameinfo(%66, %68, %69, %71, %72, %74, %75) : (!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc135)
    %77 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %78 = cir.cmp(ne, %76, %77) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %78 ^bb27, ^bb28 loc(#loc338)
  ^bb27:  // pred: ^bb26
    cir.br ^bb44 loc(#loc138)
  ^bb28:  // pred: ^bb26
    cir.br ^bb29 loc(#loc125)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc339)
  ^bb30:  // pred: ^bb29
    %79 = cir.get_global @strcmp : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i>> loc(#loc141)
    %80 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc17)
    %81 = cir.cast(array_to_ptrdecay, %80 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc17)
    %82 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc142)
    %83 = cir.call @strcmp(%81, %82) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc141)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc340)
    cir.brcond %85 ^bb31, ^bb36 loc(#loc341)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc342)
  ^bb32:  // pred: ^bb31
    %86 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %87 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %88 = cir.cast(array_to_ptrdecay, %87 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc20)
    %89 = cir.cast(bitcast, %88 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %90 = cir.const #cir.int<15> : !u64i loc(#loc343)
    %91 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %92 = cir.call @send(%86, %89, %90, %91) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc153)
    %93 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %94 = cir.unary(minus, %93) nsw : !s32i, !s32i loc(#loc154)
    %95 = cir.cast(integral, %94 : !s32i), !s64i loc(#loc154)
    %96 = cir.cmp(eq, %92, %95) : !s64i, !cir.bool loc(#loc344)
    cir.brcond %96 ^bb33, ^bb34 loc(#loc345)
  ^bb33:  // pred: ^bb32
    cir.br ^bb44 loc(#loc156)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc148)
  ^bb35:  // pred: ^bb34
    cir.br ^bb41 loc(#loc145)
  ^bb36:  // pred: ^bb30
    cir.br ^bb37 loc(#loc346)
  ^bb37:  // pred: ^bb36
    %97 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %98 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc21)
    %99 = cir.cast(array_to_ptrdecay, %98 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc21)
    %100 = cir.cast(bitcast, %99 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %101 = cir.const #cir.int<8> : !u64i loc(#loc347)
    %102 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %103 = cir.call @send(%97, %100, %101, %102) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc163)
    %104 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %105 = cir.unary(minus, %104) nsw : !s32i, !s32i loc(#loc164)
    %106 = cir.cast(integral, %105 : !s32i), !s64i loc(#loc164)
    %107 = cir.cmp(eq, %103, %106) : !s64i, !cir.bool loc(#loc348)
    cir.brcond %107 ^bb38, ^bb39 loc(#loc349)
  ^bb38:  // pred: ^bb37
    %108 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc24)
    %109 = cir.cast(array_to_ptrdecay, %108 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%109) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.br ^bb39 loc(#loc158)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc158)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc140)
  ^bb41:  // 2 preds: ^bb35, ^bb40
    cir.br ^bb42 loc(#loc140)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc49)
  ^bb43:  // pred: ^bb42
    cir.br ^bb3 loc(#loc46)
  ^bb44:  // 8 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb23, ^bb27, ^bb33
    cir.br ^bb45 loc(#loc46)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc350)
  ^bb46:  // pred: ^bb45
    %110 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %111 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %112 = cir.unary(minus, %111) nsw : !s32i, !s32i loc(#loc170)
    %113 = cir.cmp(ne, %110, %112) : !s32i, !cir.bool loc(#loc351)
    cir.brcond %113 ^bb47, ^bb48 loc(#loc352)
  ^bb47:  // pred: ^bb46
    %114 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %115 = cir.call @close(%114) : (!s32i) -> !s32i loc(#loc173)
    cir.br ^bb48 loc(#loc168)
  ^bb48:  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc168)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc353)
  ^bb50:  // pred: ^bb49
    %116 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %117 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %118 = cir.unary(minus, %117) nsw : !s32i, !s32i loc(#loc177)
    %119 = cir.cmp(ne, %116, %118) : !s32i, !cir.bool loc(#loc354)
    cir.brcond %119 ^bb51, ^bb52 loc(#loc355)
  ^bb51:  // pred: ^bb50
    %120 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %121 = cir.call @close(%120) : (!s32i) -> !s32i loc(#loc180)
    cir.br ^bb52 loc(#loc175)
  ^bb52:  // 2 preds: ^bb50, ^bb51
    cir.br ^bb53 loc(#loc175)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc43)
  ^bb54:  // pred: ^bb53
    cir.return loc(#loc28)
  } loc(#loc295)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc357)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc183)
    cir.return loc(#loc182)
  } loc(#loc356)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc360)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc361)
    cir.br ^bb1 loc(#loc362)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc190)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc192)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb2 loc(#loc363)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc363)
  ^bb3:  // pred: ^bb26
    %7 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc197)
    cir.brcond %8 ^bb4, ^bb27 loc(#loc197)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc364)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<2> : !s32i loc(#loc200)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %11 = cir.const #cir.int<6> : !s32i loc(#loc202)
    %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc203)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb6 loc(#loc366)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc209)
    %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %16 ^bb7, ^bb8 loc(#loc368)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc211)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc207)
  ^bb9:  // pred: ^bb8
    %17 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc369)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %19 = cir.const #cir.int<16> : !u64i loc(#loc370)
    cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc371)
    %20 = cir.const #cir.int<2> : !s32i loc(#loc219)
    %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc219)
    %22 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc372)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc221)
    %25 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc373)
    %27 = cir.const #cir.int<20000> : !s32i loc(#loc223)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc223)
    %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc224)
    %30 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc374)
    cir.br ^bb10 loc(#loc375)
  ^bb10:  // pred: ^bb9
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %32 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc376)
    %33 = cir.const #cir.int<16> : !u64i loc(#loc377)
    %34 = cir.cast(integral, %33 : !u64i), !u32i loc(#loc377)
    %35 = cir.call @bind(%31, %32, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc234)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %37 = cir.unary(minus, %36) nsw : !s32i, !s32i loc(#loc235)
    %38 = cir.cmp(eq, %35, %37) : !s32i, !cir.bool loc(#loc378)
    cir.brcond %38 ^bb11, ^bb12 loc(#loc379)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc237)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc228)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc380)
  ^bb14:  // pred: ^bb13
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    %40 = cir.const #cir.int<5> : !s32i loc(#loc241)
    %41 = cir.call @listen(%39, %40) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc242)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc243)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %44 ^bb15, ^bb16 loc(#loc382)
  ^bb15:  // pred: ^bb14
    cir.br ^bb27 loc(#loc245)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc239)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %46 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc247)
    %47 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc248)
    %48 = cir.call @accept(%45, %46, %47) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc249)
    cir.store %48, %2 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb18 loc(#loc384)
  ^bb18:  // pred: ^bb17
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %51 = cir.unary(minus, %50) nsw : !s32i, !s32i loc(#loc255)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc385)
    cir.brcond %52 ^bb19, ^bb20 loc(#loc386)
  ^bb19:  // pred: ^bb18
    cir.br ^bb27 loc(#loc257)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc253)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc387)
  ^bb22:  // pred: ^bb21
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %54 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc261)
    %55 = cir.cast(array_to_ptrdecay, %54 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc261)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc261)
    %57 = cir.const #cir.int<8> : !u64i loc(#loc388)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc264)
    %59 = cir.call @send(%53, %56, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc265)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc266)
    %62 = cir.cast(integral, %61 : !s32i), !s64i loc(#loc266)
    %63 = cir.cmp(eq, %59, %62) : !s64i, !cir.bool loc(#loc389)
    cir.brcond %63 ^bb23, ^bb24 loc(#loc390)
  ^bb23:  // pred: ^bb22
    %64 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc268)
    %65 = cir.cast(array_to_ptrdecay, %64 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc268)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc269)
    cir.br ^bb24 loc(#loc259)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc259)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc199)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc196)
  ^bb27:  // 5 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19
    cir.br ^bb28 loc(#loc196)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc391)
  ^bb29:  // pred: ^bb28
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc273)
    %69 = cir.cmp(ne, %66, %68) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %69 ^bb30, ^bb31 loc(#loc393)
  ^bb30:  // pred: ^bb29
    %70 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %71 = cir.call @close(%70) : (!s32i) -> !s32i loc(#loc276)
    cir.br ^bb31 loc(#loc271)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc271)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc394)
  ^bb33:  // pred: ^bb32
    %72 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc280)
    %75 = cir.cmp(ne, %72, %74) : !s32i, !cir.bool loc(#loc395)
    cir.brcond %75 ^bb34, ^bb35 loc(#loc396)
  ^bb34:  // pred: ^bb33
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %77 = cir.call @close(%76) : (!s32i) -> !s32i loc(#loc283)
    cir.br ^bb35 loc(#loc278)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc278)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc194)
  ^bb37:  // pred: ^bb36
    cir.return loc(#loc186)
  } loc(#loc358)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_01.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":116:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":117:33)
#loc13 = loc("/usr/include/netdb.h":675:1)
#loc14 = loc("/usr/include/netdb.h":678:36)
#loc15 = loc("/usr/include/string.h":156:1)
#loc16 = loc("/usr/include/string.h":157:33)
#loc17 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":103:24)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:74)
#loc20 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":105:40)
#loc21 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":113:40)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":115:31)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":47:1)
#loc28 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":135:1)
#loc29 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":54:9)
#loc30 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":54:28)
#loc31 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":54:37)
#loc32 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":55:9)
#loc33 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":55:52)
#loc34 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":56:9)
#loc35 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":56:31)
#loc36 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":57:9)
#loc37 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":57:31)
#loc38 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":58:9)
#loc39 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":58:33)
#loc40 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":59:9)
#loc41 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":59:33)
#loc42 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":49:5)
#loc43 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":134:5)
#loc44 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":55:32)
#loc45 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":60:9)
#loc46 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":119:17)
#loc47 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":119:16)
#loc48 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":61:9)
#loc49 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":118:9)
#loc50 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":69:35)
#loc51 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":69:44)
#loc52 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":69:57)
#loc53 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":69:28)
#loc54 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":69:13)
#loc55 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":69:68)
#loc56 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":70:13)
#loc57 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":73:13)
#loc58 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":70:17)
#loc59 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":70:33)
#loc60 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":71:13)
#loc61 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":72:17)
#loc62 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":74:20)
#loc63 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":74:21)
#loc64 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":74:30)
#loc65 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":74:33)
#loc66 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":74:47)
#loc67 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":74:13)
#loc68 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":74:48)
#loc69 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":75:34)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":75:13)
#loc72 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":76:39)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":76:13)
#loc76 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":77:38)
#loc77 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":77:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":77:13)
#loc80 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":77:43)
#loc81 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":78:13)
#loc82 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":81:13)
#loc83 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":78:22)
#loc84 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":78:54)
#loc85 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":78:55)
#loc86 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":78:64)
#loc87 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":78:78)
#loc88 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":78:17)
#loc89 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":78:84)
#loc90 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":79:13)
#loc91 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":80:17)
#loc92 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":82:13)
#loc93 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":85:13)
#loc94 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":82:24)
#loc95 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":82:38)
#loc96 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":82:17)
#loc97 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":82:44)
#loc98 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":83:13)
#loc99 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":84:17)
#loc100 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":86:35)
#loc101 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":86:49)
#loc102 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":86:55)
#loc103 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":86:28)
#loc104 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":86:13)
#loc105 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":86:59)
#loc106 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":87:13)
#loc107 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":90:13)
#loc108 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":87:17)
#loc109 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":87:33)
#loc110 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":88:13)
#loc111 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":89:17)
#loc112 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":91:13)
#loc113 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":94:13)
#loc114 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":91:29)
#loc115 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":91:62)
#loc116 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":91:63)
#loc117 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":91:78)
#loc118 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":91:79)
#loc119 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":91:17)
#loc120 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":91:101)
#loc121 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":91:100)
#loc122 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":92:13)
#loc123 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":93:17)
#loc124 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":95:13)
#loc125 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":101:13)
#loc126 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":95:48)
#loc127 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":95:49)
#loc128 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":96:29)
#loc129 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":96:51)
#loc130 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":97:29)
#loc131 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":98:29)
#loc132 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":98:41)
#loc133 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":98:51)
#loc134 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":98:63)
#loc135 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":95:17)
#loc136 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":98:82)
#loc137 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":99:13)
#loc138 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":100:17)
#loc139 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":103:13)
#loc140 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":117:13)
#loc141 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":103:17)
#loc142 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":103:44)
#loc143 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":103:57)
#loc144 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":104:13)
#loc145 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":110:13)
#loc146 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":112:13)
#loc147 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":105:17)
#loc148 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":109:17)
#loc149 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":105:26)
#loc150 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":105:55)
#loc151 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":105:75)
#loc152 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":105:78)
#loc153 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":105:21)
#loc154 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":105:85)
#loc155 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":106:17)
#loc156 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":108:21)
#loc157 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":113:17)
#loc158 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":116:17)
#loc159 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":113:26)
#loc160 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":113:57)
#loc161 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":113:79)
#loc162 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":113:82)
#loc163 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":113:21)
#loc164 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":113:88)
#loc165 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":114:17)
#loc166 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":115:21)
#loc167 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":120:9)
#loc168 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":123:9)
#loc169 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":120:13)
#loc170 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":120:29)
#loc171 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":121:9)
#loc172 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":122:26)
#loc173 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":122:13)
#loc174 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":124:9)
#loc175 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":127:9)
#loc176 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":124:13)
#loc177 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":124:29)
#loc178 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":125:9)
#loc179 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":126:26)
#loc180 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":126:13)
#loc181 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":206:1)
#loc182 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":209:1)
#loc183 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":208:5)
#loc184 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":208:11)
#loc185 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":141:1)
#loc186 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":204:1)
#loc187 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":148:9)
#loc188 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":148:28)
#loc189 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":149:9)
#loc190 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":149:31)
#loc191 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":150:9)
#loc192 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":150:31)
#loc193 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":143:5)
#loc194 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":203:5)
#loc195 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":151:9)
#loc196 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":188:17)
#loc197 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":188:16)
#loc198 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":152:9)
#loc199 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":187:9)
#loc200 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":160:35)
#loc201 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":160:44)
#loc202 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":160:57)
#loc203 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":160:28)
#loc204 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":160:13)
#loc205 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":160:68)
#loc206 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":161:13)
#loc207 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":164:13)
#loc208 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":161:17)
#loc209 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":161:33)
#loc210 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":162:13)
#loc211 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":163:17)
#loc212 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":165:20)
#loc213 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":165:21)
#loc214 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":165:30)
#loc215 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":165:33)
#loc216 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":165:47)
#loc217 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":165:13)
#loc218 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":165:48)
#loc219 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":166:34)
#loc220 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":166:13)
#loc221 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":167:39)
#loc222 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":167:13)
#loc223 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":168:38)
#loc224 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":168:32)
#loc225 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":168:13)
#loc226 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":168:43)
#loc227 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":169:13)
#loc228 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":172:13)
#loc229 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":169:22)
#loc230 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":169:54)
#loc231 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":169:55)
#loc232 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":169:64)
#loc233 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":169:78)
#loc234 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":169:17)
#loc235 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":169:84)
#loc236 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":170:13)
#loc237 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":171:17)
#loc238 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":173:13)
#loc239 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":176:13)
#loc240 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":173:24)
#loc241 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":173:38)
#loc242 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":173:17)
#loc243 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":173:44)
#loc244 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":174:13)
#loc245 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":175:17)
#loc246 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":177:35)
#loc247 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":177:49)
#loc248 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":177:55)
#loc249 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":177:28)
#loc250 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":177:13)
#loc251 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":177:59)
#loc252 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":178:13)
#loc253 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":181:13)
#loc254 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":178:17)
#loc255 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":178:33)
#loc256 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":179:13)
#loc257 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":180:17)
#loc258 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":183:13)
#loc259 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":186:13)
#loc260 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":183:22)
#loc261 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":183:36)
#loc262 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":183:53)
#loc263 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":183:75)
#loc264 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":183:78)
#loc265 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":183:17)
#loc266 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":183:84)
#loc267 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":184:13)
#loc268 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":185:27)
#loc269 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":185:17)
#loc270 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":189:9)
#loc271 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":192:9)
#loc272 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":189:13)
#loc273 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":189:29)
#loc274 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":190:9)
#loc275 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":191:26)
#loc276 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":191:13)
#loc277 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":193:9)
#loc278 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":196:9)
#loc279 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":193:13)
#loc280 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":193:29)
#loc281 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":194:9)
#loc282 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":195:26)
#loc283 = loc("CWE510_Trapdoor__hostname_based_logic_01.c":195:13)
#loc284 = loc(fused[#loc1, #loc2])
#loc285 = loc(fused[#loc3, #loc4])
#loc286 = loc(fused[#loc5, #loc6])
#loc287 = loc(fused[#loc7, #loc8])
#loc288 = loc(fused[#loc9, #loc10])
#loc289 = loc(fused[#loc11, #loc12])
#loc290 = loc(fused[#loc13, #loc14])
#loc291 = loc(fused[#loc15, #loc16])
#loc292 = loc(fused[#loc18, #loc19])
#loc293 = loc(fused[#loc22, #loc23])
#loc294 = loc(fused[#loc25, #loc26])
#loc295 = loc(fused[#loc27, #loc28])
#loc296 = loc(fused[#loc29, #loc30])
#loc297 = loc(fused[#loc29, #loc31])
#loc298 = loc(fused[#loc32, #loc33])
#loc299 = loc(fused[#loc34, #loc35])
#loc300 = loc(fused[#loc36, #loc37])
#loc301 = loc(fused[#loc38, #loc39])
#loc302 = loc(fused[#loc40, #loc41])
#loc303 = loc(fused[#loc42, #loc43])
#loc304 = loc(fused[#loc44, #loc33])
#loc305 = loc(fused[#loc45, #loc46])
#loc306 = loc(fused[#loc48, #loc49])
#loc307 = loc(fused[#loc54, #loc55])
#loc308 = loc(fused[#loc56, #loc57])
#loc309 = loc(fused[#loc58, #loc59])
#loc310 = loc(fused[#loc60, #loc57])
#loc311 = loc(fused[#loc62, #loc63])
#loc312 = loc(fused[#loc65, #loc66])
#loc313 = loc(fused[#loc67, #loc68])
#loc314 = loc(fused[#loc71, #loc69])
#loc315 = loc(fused[#loc75, #loc72])
#loc316 = loc(fused[#loc79, #loc80])
#loc317 = loc(fused[#loc81, #loc82])
#loc318 = loc(fused[#loc84, #loc85])
#loc319 = loc(fused[#loc86, #loc87])
#loc320 = loc(fused[#loc88, #loc89])
#loc321 = loc(fused[#loc90, #loc82])
#loc322 = loc(fused[#loc92, #loc93])
#loc323 = loc(fused[#loc96, #loc97])
#loc324 = loc(fused[#loc98, #loc93])
#loc325 = loc(fused[#loc104, #loc105])
#loc326 = loc(fused[#loc106, #loc107])
#loc327 = loc(fused[#loc108, #loc109])
#loc328 = loc(fused[#loc110, #loc107])
#loc329 = loc(fused[#loc112, #loc113])
#loc330 = loc(fused[#loc115, #loc116])
#loc331 = loc(fused[#loc117, #loc118])
#loc332 = loc(fused[#loc119, #loc120])
#loc333 = loc(fused[#loc122, #loc113])
#loc334 = loc(fused[#loc124, #loc125])
#loc335 = loc(fused[#loc126, #loc127])
#loc336 = loc(fused[#loc128, #loc129])
#loc337 = loc(fused[#loc135, #loc136])
#loc338 = loc(fused[#loc137, #loc125])
#loc339 = loc(fused[#loc139, #loc140])
#loc340 = loc(fused[#loc141, #loc143])
#loc341 = loc(fused[#loc144, #loc145, #loc146, #loc140])
#loc342 = loc(fused[#loc147, #loc148])
#loc343 = loc(fused[#loc150, #loc151])
#loc344 = loc(fused[#loc153, #loc154])
#loc345 = loc(fused[#loc155, #loc148])
#loc346 = loc(fused[#loc157, #loc158])
#loc347 = loc(fused[#loc160, #loc161])
#loc348 = loc(fused[#loc163, #loc164])
#loc349 = loc(fused[#loc165, #loc158])
#loc350 = loc(fused[#loc167, #loc168])
#loc351 = loc(fused[#loc169, #loc170])
#loc352 = loc(fused[#loc171, #loc168])
#loc353 = loc(fused[#loc174, #loc175])
#loc354 = loc(fused[#loc176, #loc177])
#loc355 = loc(fused[#loc178, #loc175])
#loc356 = loc(fused[#loc181, #loc182])
#loc357 = loc(fused[#loc183, #loc184])
#loc358 = loc(fused[#loc185, #loc186])
#loc359 = loc(fused[#loc187, #loc188])
#loc360 = loc(fused[#loc189, #loc190])
#loc361 = loc(fused[#loc191, #loc192])
#loc362 = loc(fused[#loc193, #loc194])
#loc363 = loc(fused[#loc195, #loc196])
#loc364 = loc(fused[#loc198, #loc199])
#loc365 = loc(fused[#loc204, #loc205])
#loc366 = loc(fused[#loc206, #loc207])
#loc367 = loc(fused[#loc208, #loc209])
#loc368 = loc(fused[#loc210, #loc207])
#loc369 = loc(fused[#loc212, #loc213])
#loc370 = loc(fused[#loc215, #loc216])
#loc371 = loc(fused[#loc217, #loc218])
#loc372 = loc(fused[#loc220, #loc219])
#loc373 = loc(fused[#loc222, #loc221])
#loc374 = loc(fused[#loc225, #loc226])
#loc375 = loc(fused[#loc227, #loc228])
#loc376 = loc(fused[#loc230, #loc231])
#loc377 = loc(fused[#loc232, #loc233])
#loc378 = loc(fused[#loc234, #loc235])
#loc379 = loc(fused[#loc236, #loc228])
#loc380 = loc(fused[#loc238, #loc239])
#loc381 = loc(fused[#loc242, #loc243])
#loc382 = loc(fused[#loc244, #loc239])
#loc383 = loc(fused[#loc250, #loc251])
#loc384 = loc(fused[#loc252, #loc253])
#loc385 = loc(fused[#loc254, #loc255])
#loc386 = loc(fused[#loc256, #loc253])
#loc387 = loc(fused[#loc258, #loc259])
#loc388 = loc(fused[#loc262, #loc263])
#loc389 = loc(fused[#loc265, #loc266])
#loc390 = loc(fused[#loc267, #loc259])
#loc391 = loc(fused[#loc270, #loc271])
#loc392 = loc(fused[#loc272, #loc273])
#loc393 = loc(fused[#loc274, #loc271])
#loc394 = loc(fused[#loc277, #loc278])
#loc395 = loc(fused[#loc279, #loc280])
#loc396 = loc(fused[#loc281, #loc278])
