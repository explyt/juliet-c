!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc11 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":40:14)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":40:21)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":90:18)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":90:25)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":132:10)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":132:14)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":132:20)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":132:32)
#true = #cir.bool<true> : !cir.bool
#loc173 = loc(fused[#loc11, #loc12])
#loc209 = loc(fused[#loc103, #loc104])
#loc226 = loc(fused[#loc152, #loc153])
#loc227 = loc(fused[#loc154, #loc155])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_41.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_41L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc168)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_413badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc169)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc170)
  cir.func private @close(!s32i) -> !s32i loc(#loc171)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_417badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc173)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc175)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %3 = cir.const #cir.int<2> : !s32i loc(#loc19)
      %4 = cir.const #cir.int<64> : !s32i loc(#loc20)
      %5 = cir.binop(or, %3, %4) : !s32i loc(#loc176)
      %6 = cir.const #cir.int<256> : !s32i loc(#loc21)
      %7 = cir.const #cir.int<128> : !s32i loc(#loc22)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc177)
      %9 = cir.call @open(%2, %5, %8) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc23)
      cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc178)
      cir.scope {
        %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc30)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc180)
        cir.if %13 {
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc33)
        } loc(#loc181)
      } loc(#loc179)
    } loc(#loc174)
    cir.return loc(#loc10)
  } loc(#loc172)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc182)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc183)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc184)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_413badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc169)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_413badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc169)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc169)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc47)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc190)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc53)
      cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc190)
      cir.scope {
        %9 = cir.const #cir.int<4096> : !s32i loc(#loc57)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc57)
        %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc58)
        %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc192)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc59)
        %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc193)
        cir.if %15 {
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
            %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc64)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc65)
            %19 = cir.const #cir.int<4096> : !s32i loc(#loc66)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc66)
            %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc67)
            %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc196)
            %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc196)
            %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc184)
            %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
            %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc69)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc70)
            %28 = cir.cmp(ne, %26, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc197)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc74)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc74)
              cir.store %31, %5 : !u64i, !cir.ptr<!u64i> loc(#loc199)
              cir.scope {
                %32 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc80)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc81)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc81)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc201)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
                  %38 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc84)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc85)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc85)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc202)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc86)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc83)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc83)
                  %45 = cir.const #cir.int<10> : !s8i loc(#loc87)
                  %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc87)
                  %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc203)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc82)
                    cir.yield %49 : !cir.bool loc(#loc82)
                  }, false {
                    %49 = cir.const #false loc(#loc82)
                    cir.yield %49 : !cir.bool loc(#loc82)
                  }) : (!cir.bool) -> !cir.bool loc(#loc82)
                  cir.yield %48 : !cir.bool loc(#loc82)
                }, false {
                  %37 = cir.const #false loc(#loc82)
                  cir.yield %37 : !cir.bool loc(#loc82)
                }) : (!cir.bool) -> !cir.bool loc(#loc82)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s8i loc(#loc89)
                  %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
                  %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc91)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc92)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc92)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc205)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc93)
                  cir.store %37, %43 : !s8i, !cir.ptr<!s8i> loc(#loc206)
                } loc(#loc204)
              } loc(#loc200)
            } else {
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc94)
              %31 = cir.const #cir.int<0> : !s8i loc(#loc95)
              %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
              %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc97)
              %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc98)
              cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc207)
            } loc(#loc198)
          } loc(#loc195)
        } loc(#loc194)
      } loc(#loc191)
    } loc(#loc189)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_417badSinkEPc(%4) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.return loc(#loc44)
  } loc(#loc186)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_4111goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc103, #loc104])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc209)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc211)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      %3 = cir.const #cir.int<2> : !s32i loc(#loc111)
      %4 = cir.const #cir.int<64> : !s32i loc(#loc112)
      %5 = cir.binop(or, %3, %4) : !s32i loc(#loc212)
      %6 = cir.const #cir.int<256> : !s32i loc(#loc113)
      %7 = cir.const #cir.int<128> : !s32i loc(#loc114)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc213)
      %9 = cir.call @open(%2, %5, %8) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc115)
      cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc214)
      cir.scope {
        %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc122)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc216)
        cir.if %13 {
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc125)
        } loc(#loc217)
      } loc(#loc215)
    } loc(#loc210)
    cir.return loc(#loc102)
  } loc(#loc208)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc128)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_41L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc168)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_41L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc168)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc168)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc133)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc135)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc128)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc128)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc135)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_4111goodG2BSinkEPc(%9) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.return loc(#loc130)
  } loc(#loc219)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_414goodEv() extra(#fn_attr) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_41L7goodG2BEv() : () -> () loc(#loc141)
    cir.return loc(#loc140)
  } loc(#loc222)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc223)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc149)
  cir.func @main(%arg0: !s32i loc(fused[#loc152, #loc153]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc154, #loc155])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc151)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc156)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc157)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc158)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc158)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc159)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc146)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_414goodEv() : () -> () loc(#loc161)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc147)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc148)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_413badEv() : () -> () loc(#loc164)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc149)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc166)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    cir.return %15 : !s32i loc(#loc228)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_41.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":107:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":107:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":56:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":56:37)
#loc5 = loc("/usr/include/fcntl.h":209:1)
#loc6 = loc("/usr/include/fcntl.h":209:56)
#loc7 = loc("/usr/include/unistd.h":358:1)
#loc8 = loc("/usr/include/unistd.h":358:27)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":40:1)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":51:1)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":41:1)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":42:5)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":50:5)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":43:9)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":43:13)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":45:25)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":45:31)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":45:38)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":45:47)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":45:55)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":45:20)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":45:9)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":45:63)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":46:9)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":49:9)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":46:13)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":46:26)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":46:25)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":47:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":48:19)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":48:13)
#loc34 = loc("/usr/include/string.h":407:1)
#loc35 = loc("/usr/include/string.h":408:33)
#loc36 = loc("/usr/include/stdio.h":654:1)
#loc37 = loc("/usr/include/stdio.h":655:59)
#loc38 = loc("/usr/include/stdio.h":149:1)
#loc39 = loc("/usr/include/stdio.h":149:14)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":77:27)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":53:1)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":84:1)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":55:5)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":55:12)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":57:12)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":57:5)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":58:5)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":82:5)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":60:9)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":60:37)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":60:26)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":60:33)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":62:9)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":81:9)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":62:13)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":62:26)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":62:36)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":63:9)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":65:13)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":80:13)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":65:23)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":65:28)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":65:27)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":65:43)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":65:56)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":65:66)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":65:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":65:76)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":66:13)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":74:13)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":76:13)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":69:27)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":69:34)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":69:17)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":69:38)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":70:17)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":73:17)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":70:21)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":70:31)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":70:33)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":70:36)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":70:41)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":70:49)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":70:50)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":70:55)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":71:17)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":72:39)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":72:21)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":72:26)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":72:34)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":72:35)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":77:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":79:33)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":79:17)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":79:22)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":79:29)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":83:13)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":83:5)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":90:1)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":101:1)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":91:1)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":92:5)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":100:5)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":93:9)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":93:13)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":95:25)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":95:31)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":95:38)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":95:47)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":95:55)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":95:20)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":95:9)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":95:63)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":96:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":99:9)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":96:13)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":96:26)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":96:25)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":97:9)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":98:19)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":98:13)
#loc126 = loc("/usr/include/string.h":149:1)
#loc127 = loc("/usr/include/string.h":150:14)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":110:18)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":104:1)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":112:1)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":106:5)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":106:12)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":108:12)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":108:5)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":110:5)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":110:12)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":111:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":111:5)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":114:1)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":117:1)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":116:5)
#loc142 = loc("/usr/include/stdlib.h":575:1)
#loc143 = loc("/usr/include/stdlib.h":575:41)
#loc144 = loc("/usr/include/time.h":76:1)
#loc145 = loc("/usr/include/time.h":76:38)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":137:15)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":139:15)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":142:15)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":144:15)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":132:1)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":147:1)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":133:1)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":135:27)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":135:22)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":135:5)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":137:5)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":138:5)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":139:5)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":142:5)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":143:5)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":144:5)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":146:12)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_console_open_41.cpp":146:5)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc7, #loc8])
#loc172 = loc(fused[#loc9, #loc10])
#loc174 = loc(fused[#loc14, #loc15])
#loc175 = loc(fused[#loc16, #loc17])
#loc176 = loc(fused[#loc19, #loc20])
#loc177 = loc(fused[#loc21, #loc22])
#loc178 = loc(fused[#loc24, #loc25])
#loc179 = loc(fused[#loc26, #loc27])
#loc180 = loc(fused[#loc28, #loc29])
#loc181 = loc(fused[#loc31, #loc27])
#loc182 = loc(fused[#loc34, #loc35])
#loc183 = loc(fused[#loc36, #loc37])
#loc184 = loc(fused[#loc38, #loc39])
#loc185 = loc(fused[#loc40, #loc41])
#loc186 = loc(fused[#loc43, #loc44])
#loc187 = loc(fused[#loc45, #loc46])
#loc188 = loc(fused[#loc48, #loc47])
#loc189 = loc(fused[#loc49, #loc50])
#loc190 = loc(fused[#loc51, #loc52])
#loc191 = loc(fused[#loc55, #loc56])
#loc192 = loc(fused[#loc57, #loc58])
#loc193 = loc(fused[#loc57, #loc59])
#loc194 = loc(fused[#loc60, #loc56])
#loc195 = loc(fused[#loc61, #loc62])
#loc196 = loc(fused[#loc66, #loc67])
#loc197 = loc(fused[#loc69, #loc70])
#loc198 = loc(fused[#loc71, #loc72, #loc73, #loc62])
#loc199 = loc(fused[#loc76, #loc77])
#loc200 = loc(fused[#loc78, #loc79])
#loc201 = loc(fused[#loc80, #loc81])
#loc202 = loc(fused[#loc84, #loc85])
#loc203 = loc(fused[#loc83, #loc87])
#loc204 = loc(fused[#loc88, #loc79])
#loc205 = loc(fused[#loc91, #loc92])
#loc206 = loc(fused[#loc90, #loc89])
#loc207 = loc(fused[#loc96, #loc95])
#loc208 = loc(fused[#loc101, #loc102])
#loc210 = loc(fused[#loc106, #loc107])
#loc211 = loc(fused[#loc108, #loc109])
#loc212 = loc(fused[#loc111, #loc112])
#loc213 = loc(fused[#loc113, #loc114])
#loc214 = loc(fused[#loc116, #loc117])
#loc215 = loc(fused[#loc118, #loc119])
#loc216 = loc(fused[#loc120, #loc121])
#loc217 = loc(fused[#loc123, #loc119])
#loc218 = loc(fused[#loc126, #loc127])
#loc219 = loc(fused[#loc129, #loc130])
#loc220 = loc(fused[#loc131, #loc132])
#loc221 = loc(fused[#loc134, #loc133])
#loc222 = loc(fused[#loc139, #loc140])
#loc223 = loc(fused[#loc142, #loc143])
#loc224 = loc(fused[#loc144, #loc145])
#loc225 = loc(fused[#loc150, #loc151])
#loc228 = loc(fused[#loc167, #loc166])
