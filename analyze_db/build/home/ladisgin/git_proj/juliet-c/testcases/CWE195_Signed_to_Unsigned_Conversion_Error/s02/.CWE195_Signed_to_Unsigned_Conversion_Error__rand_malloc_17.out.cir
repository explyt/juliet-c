!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":93:10)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":93:14)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":93:20)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":93:32)
#loc180 = loc(fused[#loc78, #loc79])
#loc181 = loc(fused[#loc80, #loc81])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc150)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc152)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc154)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc157)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc18)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc22)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc161)
        cir.condition(%7) loc(#loc26)
      } body {
        cir.scope {
          %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc28)
          %7 = cir.binop(and, %5, %6) : !s32i loc(#loc28)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc28)
          %9 = cir.ternary(%8, true {
            %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc28)
            %13 = cir.const #cir.int<30> : !s32i loc(#loc28)
            %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc28)
            %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc28)
            %17 = cir.const #cir.int<15> : !s32i loc(#loc28)
            %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc28)
            %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc28)
            %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc28)
            %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc28)
            cir.yield %22 : !u32i loc(#loc28)
          }, false {
            %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc28)
            %13 = cir.const #cir.int<30> : !s32i loc(#loc28)
            %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc28)
            %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc28)
            %17 = cir.const #cir.int<15> : !s32i loc(#loc28)
            %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc28)
            %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc28)
            %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc28)
            %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc28)
            %23 = cir.unary(minus, %22) : !u32i, !u32i loc(#loc28)
            %24 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc28)
            %26 = cir.binop(sub, %23, %25) : !u32i loc(#loc28)
            cir.yield %26 : !u32i loc(#loc28)
          }) : (!cir.bool) -> !u32i loc(#loc28)
          %10 = cir.cast(integral, %9 : !u32i), !s32i loc(#loc28)
          cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc163)
        } loc(#loc162)
        cir.yield loc(#loc21)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc31)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
        cir.yield loc(#loc159)
      } loc(#loc159)
    } loc(#loc159)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc35)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc166)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc168)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc39)
        %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc40)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc40)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc39)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
        cir.scope {
          %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
          %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc171)
          cir.if %34 {
            %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc46)
            %36 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc48)
            cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc46)
          } loc(#loc172)
        } loc(#loc170)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc50)
        %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc51)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc51)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc55)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc55)
        %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
        %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc57)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc59)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc174)
        %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc61)
        %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc62)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
        cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
      } loc(#loc167)
    } loc(#loc165)
    cir.return loc(#loc12)
  } loc(#loc155)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc65)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc177)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc75)
  cir.func @main(%arg0: !s32i loc(fused[#loc78, #loc79]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc80, #loc81])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc82)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc83)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc84)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc84)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc85)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc72)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17_good() : () -> () loc(#loc87)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc73)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc74)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17_bad() : () -> () loc(#loc91)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.return %17 : !s32i loc(#loc184)
  } loc(#loc179)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc187)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc103)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc107)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc191)
        cir.condition(%7) loc(#loc111)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<100> : !s32i loc(#loc113)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc114)
          %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc113)
          cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc193)
        } loc(#loc192)
        cir.yield loc(#loc106)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc117)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
        cir.yield loc(#loc189)
      } loc(#loc189)
    } loc(#loc189)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc121)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc196)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc198)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc125)
        %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc126)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
        cir.scope {
          %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc130)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
          %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc201)
          cir.if %34 {
            %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc132)
            %36 = cir.const #cir.int<1> : !s32i loc(#loc133)
            %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc134)
            cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc132)
          } loc(#loc202)
        } loc(#loc200)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc136)
        %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc137)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc137)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc203)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc141)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc141)
        %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
        %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc143)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc144)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc143)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc145)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc204)
        %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
        cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc147)
        %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc148)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc149)
        cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc148)
      } loc(#loc197)
    } loc(#loc195)
    cir.return loc(#loc97)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":21:1)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":45:1)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":23:5)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":23:9)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":24:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":24:9)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":26:13)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":26:12)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":26:5)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":27:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":31:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":27:13)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":27:9)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":27:16)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":27:20)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":27:18)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":28:5)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":30:16)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":30:9)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":27:24)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":27:23)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":33:5)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":44:5)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":33:9)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":33:16)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":34:5)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":37:9)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":37:48)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":37:37)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":37:44)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":38:9)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":38:43)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":38:13)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":38:27)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":38:33)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":38:34)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":38:40)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":38:39)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":40:16)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":40:28)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":40:33)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":40:38)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":40:9)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":40:39)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":41:30)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":41:9)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":41:20)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":41:25)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":41:26)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":42:19)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":42:9)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":43:9)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":43:14)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":78:1)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":81:1)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":80:5)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":80:13)
#loc68 = loc("/usr/include/stdlib.h":575:1)
#loc69 = loc("/usr/include/stdlib.h":575:41)
#loc70 = loc("/usr/include/time.h":76:1)
#loc71 = loc("/usr/include/time.h":76:38)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":98:15)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":100:15)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":103:15)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":105:15)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":93:1)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":108:1)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":94:1)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":96:27)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":96:22)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":96:5)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":98:5)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":99:5)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":99:69)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":100:5)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":103:5)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":104:5)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":104:68)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":105:5)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":107:12)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":107:5)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":52:1)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":76:1)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":54:5)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":54:9)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":55:5)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":55:9)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":57:13)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":57:12)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":57:5)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":58:5)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":62:5)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":58:13)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":58:9)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":58:16)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":58:20)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":58:18)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":59:5)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":61:16)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":61:20)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":61:9)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":58:24)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":58:23)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":64:5)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":75:5)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":64:9)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":64:16)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":65:5)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":68:9)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":68:48)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":68:37)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":68:44)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":69:9)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":69:43)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":69:13)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":69:27)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":69:33)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":69:34)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":69:40)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":69:39)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":71:16)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":71:28)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":71:33)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":71:38)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":71:9)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":71:39)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":72:30)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":72:9)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":72:20)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":72:25)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":72:26)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":73:19)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":73:9)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":74:9)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_17.c":74:14)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc3, #loc4])
#loc152 = loc(fused[#loc5, #loc6])
#loc153 = loc(fused[#loc7, #loc8])
#loc154 = loc(fused[#loc9, #loc10])
#loc155 = loc(fused[#loc11, #loc12])
#loc156 = loc(fused[#loc13, #loc14])
#loc157 = loc(fused[#loc15, #loc16])
#loc158 = loc(fused[#loc19, #loc17])
#loc159 = loc(fused[#loc20, #loc21])
#loc160 = loc(fused[#loc23, #loc22])
#loc161 = loc(fused[#loc24, #loc25])
#loc162 = loc(fused[#loc27, #loc21])
#loc163 = loc(fused[#loc29, #loc28])
#loc164 = loc(fused[#loc31, #loc30])
#loc165 = loc(fused[#loc32, #loc33])
#loc166 = loc(fused[#loc34, #loc35])
#loc167 = loc(fused[#loc36, #loc33])
#loc168 = loc(fused[#loc37, #loc38])
#loc169 = loc(fused[#loc39, #loc38])
#loc170 = loc(fused[#loc41, #loc42])
#loc171 = loc(fused[#loc43, #loc44])
#loc172 = loc(fused[#loc45, #loc42])
#loc173 = loc(fused[#loc53, #loc54])
#loc174 = loc(fused[#loc56, #loc55])
#loc175 = loc(fused[#loc64, #loc65])
#loc176 = loc(fused[#loc66, #loc67])
#loc177 = loc(fused[#loc68, #loc69])
#loc178 = loc(fused[#loc70, #loc71])
#loc179 = loc(fused[#loc76, #loc77])
#loc182 = loc(fused[#loc87, #loc88])
#loc183 = loc(fused[#loc91, #loc92])
#loc184 = loc(fused[#loc95, #loc94])
#loc185 = loc(fused[#loc96, #loc97])
#loc186 = loc(fused[#loc98, #loc99])
#loc187 = loc(fused[#loc100, #loc101])
#loc188 = loc(fused[#loc104, #loc102])
#loc189 = loc(fused[#loc105, #loc106])
#loc190 = loc(fused[#loc108, #loc107])
#loc191 = loc(fused[#loc109, #loc110])
#loc192 = loc(fused[#loc112, #loc106])
#loc193 = loc(fused[#loc115, #loc114])
#loc194 = loc(fused[#loc117, #loc116])
#loc195 = loc(fused[#loc118, #loc119])
#loc196 = loc(fused[#loc120, #loc121])
#loc197 = loc(fused[#loc122, #loc119])
#loc198 = loc(fused[#loc123, #loc124])
#loc199 = loc(fused[#loc125, #loc124])
#loc200 = loc(fused[#loc127, #loc128])
#loc201 = loc(fused[#loc129, #loc130])
#loc202 = loc(fused[#loc131, #loc128])
#loc203 = loc(fused[#loc139, #loc140])
#loc204 = loc(fused[#loc142, #loc141])
