!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":27:16)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":27:24)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":44:20)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":44:28)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":57:20)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":57:28)
#loc111 = loc(fused[#loc9, #loc10])
#loc123 = loc(fused[#loc42, #loc43])
#loc136 = loc(fused[#loc76, #loc77])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc108)
  cir.func private @wmemset(!cir.ptr<!s32i>, !s32i, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc109)
  cir.func @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_629badSourceERPv(%arg0: !cir.ptr<!cir.ptr<!void>> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc111)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc11)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc113)
      %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc16)
      %3 = cir.const #cir.int<50> : !s32i loc(#loc17)
      %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
      %5 = cir.const #cir.int<4> : !u64i loc(#loc114)
      %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc115)
      %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc116)
      cir.store %8, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
      cir.scope {
        %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
        %26 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc23)
        %27 = cir.cmp(eq, %25, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc118)
        cir.if %27 {
          %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc25)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc27)
          cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
        } loc(#loc119)
      } loc(#loc117)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc29)
      %11 = cir.const #cir.int<50> : !s32i loc(#loc30)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc30)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc30)
      %15 = cir.call @wmemset(%9, %10, %14) : (!cir.ptr<!s32i>, !s32i, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc32)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc33)
      %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc35)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc35)
      %21 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc37)
      cir.store %16, %21 : !s32i, !cir.ptr<!s32i> loc(#loc120)
      %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc38)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc39)
      cir.store %23, %24 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc121)
    } loc(#loc112)
    cir.return loc(#loc8)
  } loc(#loc110)
  cir.func @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_6213goodG2BSourceERPv(%arg0: !cir.ptr<!cir.ptr<!void>> loc(fused[#loc42, #loc43])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc123)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc44)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc125)
      %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc49)
      %3 = cir.const #cir.int<50> : !s32i loc(#loc50)
      %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc50)
      %5 = cir.const #cir.int<1> : !u64i loc(#loc126)
      %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc127)
      %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
      cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
      cir.scope {
        %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %27 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc56)
        %28 = cir.cmp(eq, %26, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc130)
        cir.if %28 {
          %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
          %30 = cir.const #cir.int<1> : !s32i loc(#loc59)
          %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc60)
          cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
        } loc(#loc131)
      } loc(#loc129)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
      %11 = cir.const #cir.int<65> : !s8i loc(#loc62)
      %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc62)
      %13 = cir.const #cir.int<50> : !s32i loc(#loc63)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc64)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc63)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc63)
      cir.libc.memset %16 bytes from %10 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc132)
      %17 = cir.const #cir.int<0> : !s8i loc(#loc67)
      %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      %19 = cir.const #cir.int<50> : !s32i loc(#loc69)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc70)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc69)
      %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc71)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc133)
      %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc73)
      cir.store %24, %25 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc134)
    } loc(#loc124)
    cir.return loc(#loc41)
  } loc(#loc122)
  cir.func @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_6213goodB2GSourceERPv(%arg0: !cir.ptr<!cir.ptr<!void>> loc(fused[#loc76, #loc77])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc78)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc138)
      %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc83)
      %3 = cir.const #cir.int<50> : !s32i loc(#loc84)
      %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc84)
      %5 = cir.const #cir.int<4> : !u64i loc(#loc139)
      %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc140)
      %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc141)
      cir.store %8, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc138)
      cir.scope {
        %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
        %26 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc90)
        %27 = cir.cmp(eq, %25, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc143)
        cir.if %27 {
          %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc92)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc93)
          %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc94)
          cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc92)
        } loc(#loc144)
      } loc(#loc142)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc96)
      %11 = cir.const #cir.int<50> : !s32i loc(#loc97)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc98)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc97)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc97)
      %15 = cir.call @wmemset(%9, %10, %14) : (!cir.ptr<!s32i>, !s32i, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc99)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
      %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc102)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc103)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc102)
      %21 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc104)
      cir.store %16, %21 : !s32i, !cir.ptr<!s32i> loc(#loc145)
      %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc105)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc106)
      cir.store %23, %24 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc146)
    } loc(#loc137)
    cir.return loc(#loc75)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/wchar.h":296:1)
#loc6 = loc("/usr/include/wchar.h":296:65)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":27:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":37:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":28:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":29:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":36:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":30:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":30:71)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":30:46)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":30:53)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":30:56)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":30:70)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":31:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":31:46)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":31:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":31:30)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":31:36)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":31:37)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":31:43)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":31:42)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":32:17)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":32:32)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":32:38)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":32:41)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":32:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":33:31)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":33:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":33:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":33:26)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":33:27)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":35:24)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":35:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":44:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":54:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":45:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":46:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":53:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":47:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":47:63)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":47:41)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":47:48)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":47:51)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":47:62)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":48:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":48:47)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":48:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":48:31)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":48:37)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":48:38)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":48:44)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":48:43)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":49:16)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":49:32)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":49:37)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":49:40)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":49:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":49:41)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":50:32)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":50:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":50:24)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":50:27)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":50:28)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":52:24)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":52:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":57:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":67:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":58:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":59:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":66:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":60:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":60:71)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":60:46)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":60:53)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":60:56)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":60:70)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":61:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":61:46)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":61:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":61:30)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":61:36)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":61:37)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":61:43)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":61:42)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":62:17)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":62:32)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":62:38)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":62:41)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":62:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":63:31)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":63:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":63:23)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":63:26)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":63:27)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":65:24)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_62b.cpp":65:9)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc12, #loc13])
#loc113 = loc(fused[#loc14, #loc15])
#loc114 = loc(fused[#loc18, #loc19])
#loc115 = loc(fused[#loc17, #loc19])
#loc116 = loc(fused[#loc16, #loc15])
#loc117 = loc(fused[#loc20, #loc21])
#loc118 = loc(fused[#loc22, #loc23])
#loc119 = loc(fused[#loc24, #loc21])
#loc120 = loc(fused[#loc34, #loc33])
#loc121 = loc(fused[#loc39, #loc38])
#loc122 = loc(fused[#loc40, #loc41])
#loc124 = loc(fused[#loc45, #loc46])
#loc125 = loc(fused[#loc47, #loc48])
#loc126 = loc(fused[#loc51, #loc52])
#loc127 = loc(fused[#loc50, #loc52])
#loc128 = loc(fused[#loc49, #loc48])
#loc129 = loc(fused[#loc53, #loc54])
#loc130 = loc(fused[#loc55, #loc56])
#loc131 = loc(fused[#loc57, #loc54])
#loc132 = loc(fused[#loc65, #loc66])
#loc133 = loc(fused[#loc68, #loc67])
#loc134 = loc(fused[#loc73, #loc72])
#loc135 = loc(fused[#loc74, #loc75])
#loc137 = loc(fused[#loc79, #loc80])
#loc138 = loc(fused[#loc81, #loc82])
#loc139 = loc(fused[#loc85, #loc86])
#loc140 = loc(fused[#loc84, #loc86])
#loc141 = loc(fused[#loc83, #loc82])
#loc142 = loc(fused[#loc87, #loc88])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc91, #loc88])
#loc145 = loc(fused[#loc101, #loc100])
#loc146 = loc(fused[#loc106, #loc105])
