!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":28:70)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":28:77)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":53:74)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":53:81)
#loc99 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc97)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc99)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc101)
      %2 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc101)
      cir.store %2, %1 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc101)
      %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc16)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc18)
      %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc16)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc20)
      %8 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc21)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
      cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc21)
    } loc(#loc100)
    cir.return loc(#loc8)
  } loc(#loc98)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc103)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc34)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc34)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc107)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc108)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !s32i loc(#loc112)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc43)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc45)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc47)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
      } loc(#loc113)
    } loc(#loc111)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_badSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.return loc(#loc28)
  } loc(#loc104)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc52, #loc53])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc117)
      %2 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc117)
      cir.store %2, %1 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc117)
      %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc59)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc61)
      %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc59)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      %8 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc64)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
      cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
    } loc(#loc116)
    cir.return loc(#loc51)
  } loc(#loc114)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc67)
  } loc(#loc118)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc74)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc76)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc77)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc77)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc77)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc123)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc124)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc76)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !s32i loc(#loc128)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc88)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc92)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
      } loc(#loc129)
    } loc(#loc127)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41_goodG2BSink(%11) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.return loc(#loc71)
  } loc(#loc120)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":28:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":37:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":29:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":30:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":36:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":31:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":31:29)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":33:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":33:16)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":33:22)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":34:19)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":34:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":35:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":35:14)
#loc23 = loc("/usr/include/stdlib.h":672:1)
#loc24 = loc("/usr/include/stdlib.h":672:45)
#loc25 = loc("/usr/include/stdlib.h":756:1)
#loc26 = loc("/usr/include/stdlib.h":756:70)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":39:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":47:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":41:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":41:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":42:12)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":42:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:20)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:27)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:41)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:42)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":44:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:33)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:17)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:14)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:23)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:24)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:30)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":45:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":46:69)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":46:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":53:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":62:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":54:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":55:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":61:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":56:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":56:29)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":58:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":58:16)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":58:22)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":59:19)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":59:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":60:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":60:14)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":75:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":78:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":77:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":77:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":65:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":73:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":67:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":67:12)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":68:12)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":68:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:20)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:28)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:31)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:34)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:45)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:27)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:46)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":70:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:33)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:14)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:23)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:24)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:30)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":71:29)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":72:73)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_41.c":72:5)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc100 = loc(fused[#loc12, #loc13])
#loc101 = loc(fused[#loc14, #loc15])
#loc102 = loc(fused[#loc23, #loc24])
#loc103 = loc(fused[#loc25, #loc26])
#loc104 = loc(fused[#loc27, #loc28])
#loc105 = loc(fused[#loc29, #loc30])
#loc106 = loc(fused[#loc32, #loc31])
#loc107 = loc(fused[#loc35, #loc36])
#loc108 = loc(fused[#loc34, #loc36])
#loc109 = loc(fused[#loc33, #loc37])
#loc110 = loc(fused[#loc38, #loc37])
#loc111 = loc(fused[#loc39, #loc40])
#loc112 = loc(fused[#loc41, #loc42])
#loc113 = loc(fused[#loc44, #loc40])
#loc114 = loc(fused[#loc50, #loc51])
#loc116 = loc(fused[#loc55, #loc56])
#loc117 = loc(fused[#loc57, #loc58])
#loc118 = loc(fused[#loc66, #loc67])
#loc119 = loc(fused[#loc68, #loc69])
#loc120 = loc(fused[#loc70, #loc71])
#loc121 = loc(fused[#loc72, #loc73])
#loc122 = loc(fused[#loc75, #loc74])
#loc123 = loc(fused[#loc79, #loc80])
#loc124 = loc(fused[#loc81, #loc80])
#loc125 = loc(fused[#loc76, #loc82])
#loc126 = loc(fused[#loc83, #loc82])
#loc127 = loc(fused[#loc84, #loc85])
#loc128 = loc(fused[#loc86, #loc87])
#loc129 = loc(fused[#loc89, #loc85])
