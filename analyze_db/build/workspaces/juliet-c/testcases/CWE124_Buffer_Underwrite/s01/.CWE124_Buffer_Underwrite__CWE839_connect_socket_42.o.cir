!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":44:22)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":44:26)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":173:26)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":173:30)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":137:26)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":137:30)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc362 = loc(fused[#loc18, #loc19])
#loc419 = loc(fused[#loc166, #loc167])
#loc472 = loc(fused[#loc305, #loc306])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc354)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc355)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc356)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc357)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc358)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc359)
  cir.func private @close(!s32i) -> !s32i loc(#loc360)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc18, #loc19])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc362)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc17)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc20)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc364)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc365)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc366)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc367)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc28)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc366)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc37)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc38)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc370)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc44)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc372)
              cir.if %55 {
                cir.break loc(#loc46)
              } loc(#loc373)
            } loc(#loc371)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc374)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc375)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc376)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc54)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc54)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc377)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc57)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc378)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc62)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc62)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc63)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc379)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc381)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc382)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc382)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc74)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc75)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc75)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc383)
              cir.if %59 {
                cir.break loc(#loc77)
              } loc(#loc384)
            } loc(#loc380)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc79)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc80)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc80)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc80)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc80)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc80)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc80)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc80)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc81)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc81)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc385)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc82)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc83)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc83)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc386)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc89)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc388)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc90)
                cir.yield %57 : !cir.bool loc(#loc90)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc389)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc90)
                  cir.yield %61 : !cir.bool loc(#loc90)
                }, false {
                  %61 = cir.const #false loc(#loc90)
                  cir.yield %61 : !cir.bool loc(#loc90)
                }) : (!cir.bool) -> !cir.bool loc(#loc90)
                cir.yield %60 : !cir.bool loc(#loc90)
              }) : (!cir.bool) -> !cir.bool loc(#loc90)
              cir.if %56 {
                cir.break loc(#loc94)
              } loc(#loc390)
            } loc(#loc387)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc95)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc97)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc391)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc98)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc99)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
          } loc(#loc369)
          cir.yield loc(#loc32)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc102)
          cir.condition(%11) loc(#loc102)
        } loc(#loc368)
      } loc(#loc368)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc106)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc394)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc108)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc109)
        } loc(#loc395)
      } loc(#loc393)
    } loc(#loc363)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc396)
    cir.return %3 : !s32i loc(#loc396)
  } loc(#loc361)
  cir.func private @printIntLine(!s32i) loc(#loc397)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc398)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc116)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc400)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc122)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc125)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc404)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc405)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc405)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc405)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        %9 = cir.const #cir.int<10> : !s32i loc(#loc137)
        %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc407)
        cir.if %10 {
          %11 = cir.const #cir.int<1> : !s32i loc(#loc141)
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc143)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc143)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc409)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc146)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc411)
            cir.for : cond {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc148)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc149)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc412)
              cir.condition(%18) loc(#loc150)
            } body {
              cir.scope {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc153)
                %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc153)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc153)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc154)
              } loc(#loc413)
              cir.yield loc(#loc145)
            } step {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc155)
              %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc156)
              cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc414)
              cir.yield loc(#loc410)
            } loc(#loc410)
          } loc(#loc410)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc116)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc116)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc157)
        } loc(#loc408)
      } loc(#loc406)
    } loc(#loc403)
    cir.return loc(#loc118)
  } loc(#loc399)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc416)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc160)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc417)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc162)
    cir.return loc(#loc159)
  } loc(#loc415)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc166, #loc167])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc419)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc165)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc421)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc422)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc423)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc424)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc176)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc176)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc423)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc183)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc184)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc185)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc186)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc427)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc192)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc192)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc429)
              cir.if %55 {
                cir.break loc(#loc194)
              } loc(#loc430)
            } loc(#loc428)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc431)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc197)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc432)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc433)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc202)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc202)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc434)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc204)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc204)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc205)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc435)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc208)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc208)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc209)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc436)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc214)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc438)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc439)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc439)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc219)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc220)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc220)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc440)
              cir.if %59 {
                cir.break loc(#loc222)
              } loc(#loc441)
            } loc(#loc437)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc223)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc224)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc224)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc225)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc225)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc225)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc225)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc225)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc225)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc225)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc226)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc226)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc442)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc227)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc228)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc228)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc443)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc233)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc234)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc234)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc445)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc235)
                cir.yield %57 : !cir.bool loc(#loc235)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc237)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc446)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc235)
                  cir.yield %61 : !cir.bool loc(#loc235)
                }, false {
                  %61 = cir.const #false loc(#loc235)
                  cir.yield %61 : !cir.bool loc(#loc235)
                }) : (!cir.bool) -> !cir.bool loc(#loc235)
                cir.yield %60 : !cir.bool loc(#loc235)
              }) : (!cir.bool) -> !cir.bool loc(#loc235)
              cir.if %56 {
                cir.break loc(#loc239)
              } loc(#loc447)
            } loc(#loc444)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc240)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc240)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc241)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc242)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc242)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc448)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc243)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc244)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc449)
          } loc(#loc426)
          cir.yield loc(#loc180)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc247)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc247)
          cir.condition(%11) loc(#loc247)
        } loc(#loc425)
      } loc(#loc425)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc250)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc251)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc251)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc451)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc253)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc254)
        } loc(#loc452)
      } loc(#loc450)
    } loc(#loc420)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc453)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc453)
    cir.return %3 : !s32i loc(#loc453)
  } loc(#loc418)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc257)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc455)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc262)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc263)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc456)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc266)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc457)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc459)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc460)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc460)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc460)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc278)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc462)
        %11 = cir.ternary(%10, true {
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc281)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc463)
          %15 = cir.ternary(%14, true {
            %16 = cir.const #true loc(#loc279)
            cir.yield %16 : !cir.bool loc(#loc279)
          }, false {
            %16 = cir.const #false loc(#loc279)
            cir.yield %16 : !cir.bool loc(#loc279)
          }) : (!cir.bool) -> !cir.bool loc(#loc279)
          cir.yield %15 : !cir.bool loc(#loc279)
        }, false {
          %12 = cir.const #false loc(#loc279)
          cir.yield %12 : !cir.bool loc(#loc279)
        }) : (!cir.bool) -> !cir.bool loc(#loc279)
        cir.if %11 {
          %12 = cir.const #cir.int<1> : !s32i loc(#loc286)
          %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
          %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc288)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc288)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc465)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc291)
            cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc467)
            cir.for : cond {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc293)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc294)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc468)
              cir.condition(%19) loc(#loc295)
            } body {
              cir.scope {
                %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc298)
                %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc298)
                %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc298)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc299)
              } loc(#loc469)
              cir.yield loc(#loc290)
            } step {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc300)
              %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc301)
              cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc470)
              cir.yield loc(#loc466)
            } loc(#loc466)
          } loc(#loc466)
        } else {
          %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc257)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc257)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc302)
        } loc(#loc464)
      } loc(#loc461)
    } loc(#loc458)
    cir.return loc(#loc259)
  } loc(#loc454)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc305, #loc306])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc472)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc304)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    %2 = cir.const #cir.int<7> : !s32i loc(#loc308)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc473)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc474)
    cir.return %4 : !s32i loc(#loc474)
  } loc(#loc471)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc476)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc316)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc317)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc320)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc478)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc480)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc481)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc481)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc481)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc331)
        %9 = cir.const #cir.int<10> : !s32i loc(#loc332)
        %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc483)
        cir.if %10 {
          %11 = cir.const #cir.int<1> : !s32i loc(#loc336)
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc337)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc338)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc338)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc485)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc341)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc487)
            cir.for : cond {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc343)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc344)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc488)
              cir.condition(%18) loc(#loc345)
            } body {
              cir.scope {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc347)
                %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc348)
                %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc348)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc348)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc349)
              } loc(#loc489)
              cir.yield loc(#loc340)
            } step {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc350)
              %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc351)
              cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc490)
              cir.yield loc(#loc486)
            } loc(#loc486)
          } loc(#loc486)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc352)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc352)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc353)
        } loc(#loc484)
      } loc(#loc482)
    } loc(#loc479)
    cir.return loc(#loc313)
  } loc(#loc475)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":72:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":44:1)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":103:1)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":45:1)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":46:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":101:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":51:9)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":51:13)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":52:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":52:28)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":53:9)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":53:32)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":54:9)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":54:41)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":55:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":90:17)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":56:9)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":89:9)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":65:36)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":65:45)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":65:58)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":65:29)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":65:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":65:69)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":66:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":69:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":66:17)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":66:34)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":67:13)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":68:17)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":70:20)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":70:21)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":70:30)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":70:33)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":70:47)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":70:13)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":70:48)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":71:34)
#loc55 = loc("/usr/include/netinet/in.h":249:5)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":71:13)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":72:39)
#loc58 = loc("/usr/include/netinet/in.h":251:20)
#loc59 = loc("/usr/include/netinet/in.h":33:15)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":72:13)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":72:59)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":73:38)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":73:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":73:13)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":73:46)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":74:13)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":77:13)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":74:25)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":74:58)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":74:59)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":74:68)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":74:82)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":74:17)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":74:88)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":75:13)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":76:17)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":80:31)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":80:46)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":80:59)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":80:77)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":80:80)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":80:26)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":80:13)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":80:81)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":81:13)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":84:13)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":81:17)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":81:31)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":81:44)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":81:47)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":81:61)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":82:13)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":83:17)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":86:39)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":86:25)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":86:13)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":88:25)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":88:20)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":88:13)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":88:36)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":90:16)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":91:9)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":94:9)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":91:13)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":91:30)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":92:9)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":93:26)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":93:13)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":102:12)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":102:5)
#loc112 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc113 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc114 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc115 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":127:23)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":105:1)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":130:1)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":107:5)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":107:9)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":109:13)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":109:12)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":109:5)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":110:22)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":110:12)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":110:5)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":110:26)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":111:5)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":129:5)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":112:9)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":112:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":113:9)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":113:30)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":116:9)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":128:9)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":116:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":116:20)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":117:9)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":124:9)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":126:9)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":118:28)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":118:20)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":118:13)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":120:13)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":123:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":120:21)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":120:17)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":120:24)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":120:28)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":120:26)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":121:13)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":122:37)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":122:30)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":122:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":120:33)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":120:32)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":127:13)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":260:1)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":264:1)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":262:5)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":262:13)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":263:5)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":263:13)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":173:1)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":232:1)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":174:1)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":175:5)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":230:5)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":180:9)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":180:13)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":181:9)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":181:28)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":182:9)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":182:32)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":183:9)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":183:41)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":184:9)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":219:17)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":185:9)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":218:9)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":194:36)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":194:45)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":194:58)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":194:29)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":194:13)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":194:69)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":195:13)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":198:13)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":195:17)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":195:34)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":196:13)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":197:17)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":199:20)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":199:21)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":199:30)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":199:33)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":199:47)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":199:13)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":199:48)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":200:34)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":200:13)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":201:49)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":201:39)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":201:13)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":201:59)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":202:38)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":202:32)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":202:13)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":202:46)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":203:13)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":206:13)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":203:25)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":203:58)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":203:59)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":203:68)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":203:82)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":203:17)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":203:88)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":204:13)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":205:17)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":209:31)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":209:46)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":209:59)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":209:77)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":209:80)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":209:26)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":209:13)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":209:81)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":210:13)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":213:13)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":210:17)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":210:31)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":210:44)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":210:47)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":210:61)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":211:13)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":212:17)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":215:39)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":215:25)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":215:13)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":217:25)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":217:20)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":217:13)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":217:36)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":219:16)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":220:9)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":223:9)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":220:13)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":220:30)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":221:9)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":222:26)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":222:13)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":231:12)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":231:5)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":255:23)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":234:1)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":258:1)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":236:5)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":236:9)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":238:13)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":238:12)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":238:5)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":239:26)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":239:12)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":239:5)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":239:30)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":240:5)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":257:5)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":241:9)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":241:13)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":242:9)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":242:30)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":244:9)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":256:9)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":244:13)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":244:21)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":244:23)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":244:26)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":244:34)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":244:36)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":245:9)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":252:9)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":254:9)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":246:28)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":246:20)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":246:13)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":248:13)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":251:13)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":248:21)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":248:17)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":248:24)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":248:28)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":248:26)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":249:13)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":250:37)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":250:30)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":250:17)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":248:33)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":248:32)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":255:13)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":137:1)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":143:1)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":138:1)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":141:12)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":141:5)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":142:12)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":142:5)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":145:1)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":170:1)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":147:5)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":147:9)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":149:13)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":149:12)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":149:5)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":150:26)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":150:12)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":150:5)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":150:30)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":151:5)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":169:5)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":152:9)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":152:13)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":153:9)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":153:30)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":156:9)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":168:9)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":156:13)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":156:20)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":157:9)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":164:9)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":166:9)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":158:28)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":158:20)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":158:13)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":160:13)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":163:13)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":160:21)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":160:17)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":160:24)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":160:28)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":160:26)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":161:13)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":162:37)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":162:30)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":162:17)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":160:33)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":160:32)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":167:23)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_42.c":167:13)
#loc354 = loc(fused[#loc1, #loc2])
#loc355 = loc(fused[#loc3, #loc4])
#loc356 = loc(fused[#loc6, #loc7])
#loc357 = loc(fused[#loc8, #loc9])
#loc358 = loc(fused[#loc10, #loc11])
#loc359 = loc(fused[#loc12, #loc13])
#loc360 = loc(fused[#loc14, #loc15])
#loc361 = loc(fused[#loc16, #loc17])
#loc363 = loc(fused[#loc21, #loc22])
#loc364 = loc(fused[#loc23, #loc24])
#loc365 = loc(fused[#loc25, #loc26])
#loc366 = loc(fused[#loc27, #loc28])
#loc367 = loc(fused[#loc29, #loc30])
#loc368 = loc(fused[#loc31, #loc32])
#loc369 = loc(fused[#loc33, #loc34])
#loc370 = loc(fused[#loc39, #loc40])
#loc371 = loc(fused[#loc41, #loc42])
#loc372 = loc(fused[#loc43, #loc44])
#loc373 = loc(fused[#loc45, #loc42])
#loc374 = loc(fused[#loc47, #loc48])
#loc375 = loc(fused[#loc50, #loc51])
#loc376 = loc(fused[#loc52, #loc53])
#loc377 = loc(fused[#loc56, #loc54])
#loc378 = loc(fused[#loc60, #loc61])
#loc379 = loc(fused[#loc65, #loc66])
#loc380 = loc(fused[#loc67, #loc68])
#loc381 = loc(fused[#loc70, #loc71])
#loc382 = loc(fused[#loc72, #loc73])
#loc383 = loc(fused[#loc74, #loc75])
#loc384 = loc(fused[#loc76, #loc68])
#loc385 = loc(fused[#loc80, #loc81])
#loc386 = loc(fused[#loc84, #loc85])
#loc387 = loc(fused[#loc86, #loc87])
#loc388 = loc(fused[#loc88, #loc89])
#loc389 = loc(fused[#loc91, #loc92])
#loc390 = loc(fused[#loc93, #loc87])
#loc391 = loc(fused[#loc97, #loc95])
#loc392 = loc(fused[#loc100, #loc101])
#loc393 = loc(fused[#loc103, #loc104])
#loc394 = loc(fused[#loc105, #loc106])
#loc395 = loc(fused[#loc107, #loc104])
#loc396 = loc(fused[#loc111, #loc110])
#loc397 = loc(fused[#loc112, #loc113])
#loc398 = loc(fused[#loc114, #loc115])
#loc399 = loc(fused[#loc117, #loc118])
#loc400 = loc(fused[#loc119, #loc120])
#loc401 = loc(fused[#loc123, #loc121])
#loc402 = loc(fused[#loc126, #loc127])
#loc403 = loc(fused[#loc128, #loc129])
#loc404 = loc(fused[#loc130, #loc131])
#loc405 = loc(fused[#loc132, #loc133])
#loc406 = loc(fused[#loc134, #loc135])
#loc407 = loc(fused[#loc136, #loc137])
#loc408 = loc(fused[#loc138, #loc139, #loc140, #loc135])
#loc409 = loc(fused[#loc143, #loc141])
#loc410 = loc(fused[#loc144, #loc145])
#loc411 = loc(fused[#loc147, #loc146])
#loc412 = loc(fused[#loc148, #loc149])
#loc413 = loc(fused[#loc151, #loc145])
#loc414 = loc(fused[#loc156, #loc155])
#loc415 = loc(fused[#loc158, #loc159])
#loc416 = loc(fused[#loc160, #loc161])
#loc417 = loc(fused[#loc162, #loc163])
#loc418 = loc(fused[#loc164, #loc165])
#loc420 = loc(fused[#loc169, #loc170])
#loc421 = loc(fused[#loc171, #loc172])
#loc422 = loc(fused[#loc173, #loc174])
#loc423 = loc(fused[#loc175, #loc176])
#loc424 = loc(fused[#loc177, #loc178])
#loc425 = loc(fused[#loc179, #loc180])
#loc426 = loc(fused[#loc181, #loc182])
#loc427 = loc(fused[#loc187, #loc188])
#loc428 = loc(fused[#loc189, #loc190])
#loc429 = loc(fused[#loc191, #loc192])
#loc430 = loc(fused[#loc193, #loc190])
#loc431 = loc(fused[#loc195, #loc196])
#loc432 = loc(fused[#loc198, #loc199])
#loc433 = loc(fused[#loc200, #loc201])
#loc434 = loc(fused[#loc203, #loc202])
#loc435 = loc(fused[#loc206, #loc207])
#loc436 = loc(fused[#loc210, #loc211])
#loc437 = loc(fused[#loc212, #loc213])
#loc438 = loc(fused[#loc215, #loc216])
#loc439 = loc(fused[#loc217, #loc218])
#loc440 = loc(fused[#loc219, #loc220])
#loc441 = loc(fused[#loc221, #loc213])
#loc442 = loc(fused[#loc225, #loc226])
#loc443 = loc(fused[#loc229, #loc230])
#loc444 = loc(fused[#loc231, #loc232])
#loc445 = loc(fused[#loc233, #loc234])
#loc446 = loc(fused[#loc236, #loc237])
#loc447 = loc(fused[#loc238, #loc232])
#loc448 = loc(fused[#loc242, #loc240])
#loc449 = loc(fused[#loc245, #loc246])
#loc450 = loc(fused[#loc248, #loc249])
#loc451 = loc(fused[#loc250, #loc251])
#loc452 = loc(fused[#loc252, #loc249])
#loc453 = loc(fused[#loc256, #loc255])
#loc454 = loc(fused[#loc258, #loc259])
#loc455 = loc(fused[#loc260, #loc261])
#loc456 = loc(fused[#loc264, #loc262])
#loc457 = loc(fused[#loc267, #loc268])
#loc458 = loc(fused[#loc269, #loc270])
#loc459 = loc(fused[#loc271, #loc272])
#loc460 = loc(fused[#loc273, #loc274])
#loc461 = loc(fused[#loc275, #loc276])
#loc462 = loc(fused[#loc277, #loc278])
#loc463 = loc(fused[#loc280, #loc282])
#loc464 = loc(fused[#loc283, #loc284, #loc285, #loc276])
#loc465 = loc(fused[#loc288, #loc286])
#loc466 = loc(fused[#loc289, #loc290])
#loc467 = loc(fused[#loc292, #loc291])
#loc468 = loc(fused[#loc293, #loc294])
#loc469 = loc(fused[#loc296, #loc290])
#loc470 = loc(fused[#loc301, #loc300])
#loc471 = loc(fused[#loc303, #loc304])
#loc473 = loc(fused[#loc309, #loc308])
#loc474 = loc(fused[#loc311, #loc310])
#loc475 = loc(fused[#loc312, #loc313])
#loc476 = loc(fused[#loc314, #loc315])
#loc477 = loc(fused[#loc318, #loc316])
#loc478 = loc(fused[#loc321, #loc322])
#loc479 = loc(fused[#loc323, #loc324])
#loc480 = loc(fused[#loc325, #loc326])
#loc481 = loc(fused[#loc327, #loc328])
#loc482 = loc(fused[#loc329, #loc330])
#loc483 = loc(fused[#loc331, #loc332])
#loc484 = loc(fused[#loc333, #loc334, #loc335, #loc330])
#loc485 = loc(fused[#loc338, #loc336])
#loc486 = loc(fused[#loc339, #loc340])
#loc487 = loc(fused[#loc342, #loc341])
#loc488 = loc(fused[#loc343, #loc344])
#loc489 = loc(fused[#loc346, #loc340])
#loc490 = loc(fused[#loc351, #loc350])
