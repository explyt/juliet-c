!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc88 = loc("CWE510_Trapdoor__network_connection_06.c":104:10)
#loc89 = loc("CWE510_Trapdoor__network_connection_06.c":104:14)
#loc90 = loc("CWE510_Trapdoor__network_connection_06.c":104:20)
#loc91 = loc("CWE510_Trapdoor__network_connection_06.c":104:32)
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc137 = loc(fused[#loc88, #loc89])
#loc138 = loc(fused[#loc90, #loc91])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_connection_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc102)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"123.123.123.123\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc104)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc105)
  cir.func private @close(!s32i) -> !s32i loc(#loc106)
  cir.func no_proto @CWE510_Trapdoor__network_connection_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc109)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc112)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc113)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc24)
          %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc24)
          cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc113)
          cir.scope {
            cir.do {
              %7 = cir.const #cir.int<2> : !s32i loc(#loc27)
              %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
              %9 = cir.const #cir.int<6> : !s32i loc(#loc29)
              %10 = cir.call @socket(%7, %8, %9) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc30)
              cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc115)
              cir.scope {
                %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc35)
                %27 = cir.const #cir.int<1> : !s32i loc(#loc36)
                %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc36)
                %29 = cir.cmp(eq, %26, %28) : !s32i, !cir.bool loc(#loc117)
                cir.if %29 {
                  cir.break loc(#loc38)
                } loc(#loc118)
              } loc(#loc116)
              %11 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc119)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc41)
              %13 = cir.const #cir.int<16> : !u64i loc(#loc120)
              cir.libc.memset %13 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc121)
              %14 = cir.const #cir.int<2> : !s32i loc(#loc46)
              %15 = cir.cast(integral, %14 : !s32i), !u16i loc(#loc46)
              %16 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc47)
              cir.store %15, %16 : !u16i, !cir.ptr<!u16i> loc(#loc122)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc5)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc5)
              %19 = cir.call @inet_addr(%18) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc49)
              %20 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc50)
              %21 = cir.get_member %20[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc51)
              cir.store %19, %21 : !u32i, !cir.ptr<!u32i> loc(#loc123)
              %22 = cir.const #cir.int<80> : !s32i loc(#loc54)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc54)
              %24 = cir.call @htons(%23) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc55)
              %25 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc124)
              cir.scope {
                %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %27 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc126)
                %28 = cir.const #cir.int<16> : !u64i loc(#loc127)
                %29 = cir.cast(integral, %28 : !u64i), !u32i loc(#loc127)
                %30 = cir.call @connect(%26, %27, %29) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc66)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc67)
                %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc67)
                %33 = cir.cmp(eq, %30, %32) : !s32i, !cir.bool loc(#loc128)
                cir.if %33 {
                  cir.break loc(#loc69)
                } loc(#loc129)
              } loc(#loc125)
              cir.yield loc(#loc26)
            } while {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc70)
              %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc70)
              cir.condition(%8) loc(#loc70)
            } loc(#loc114)
          } loc(#loc114)
          cir.scope {
            %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc73)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc74)
            %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc74)
            %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc131)
            cir.if %10 {
              %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc76)
              %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc77)
            } loc(#loc132)
          } loc(#loc130)
        } loc(#loc111)
      } loc(#loc110)
    } loc(#loc108)
    cir.return loc(#loc13)
  } loc(#loc107)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc133)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc85)
  cir.func @main(%arg0: !s32i loc(fused[#loc88, #loc89]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc90, #loc91])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc87)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc92)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc93)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc94)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc94)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc95)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %8 = cir.get_global @CWE510_Trapdoor__network_connection_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call @CWE510_Trapdoor__network_connection_06_bad() : () -> () loc(#loc97)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc85)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc100)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.return %12 : !s32i loc(#loc140)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_connection_06.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE510_Trapdoor__network_connection_06.c":71:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/unistd.h":358:1)
#loc11 = loc("/usr/include/unistd.h":358:27)
#loc12 = loc("CWE510_Trapdoor__network_connection_06.c":44:1)
#loc13 = loc("CWE510_Trapdoor__network_connection_06.c":93:1)
#loc14 = loc("CWE510_Trapdoor__network_connection_06.c":46:5)
#loc15 = loc("CWE510_Trapdoor__network_connection_06.c":92:5)
#loc16 = loc("CWE510_Trapdoor__network_connection_06.c":46:8)
#loc17 = loc("CWE510_Trapdoor__network_connection_06.c":46:27)
#loc18 = loc("CWE510_Trapdoor__network_connection_06.c":47:5)
#loc19 = loc("CWE510_Trapdoor__network_connection_06.c":48:9)
#loc20 = loc("CWE510_Trapdoor__network_connection_06.c":91:9)
#loc21 = loc("CWE510_Trapdoor__network_connection_06.c":53:13)
#loc22 = loc("CWE510_Trapdoor__network_connection_06.c":53:32)
#loc23 = loc("CWE510_Trapdoor__network_connection_06.c":54:13)
#loc24 = loc("CWE510_Trapdoor__network_connection_06.c":54:36)
#loc25 = loc("CWE510_Trapdoor__network_connection_06.c":55:13)
#loc26 = loc("CWE510_Trapdoor__network_connection_06.c":80:21)
#loc27 = loc("CWE510_Trapdoor__network_connection_06.c":64:40)
#loc28 = loc("CWE510_Trapdoor__network_connection_06.c":64:49)
#loc29 = loc("CWE510_Trapdoor__network_connection_06.c":64:62)
#loc30 = loc("CWE510_Trapdoor__network_connection_06.c":64:33)
#loc31 = loc("CWE510_Trapdoor__network_connection_06.c":64:17)
#loc32 = loc("CWE510_Trapdoor__network_connection_06.c":64:73)
#loc33 = loc("CWE510_Trapdoor__network_connection_06.c":65:17)
#loc34 = loc("CWE510_Trapdoor__network_connection_06.c":68:17)
#loc35 = loc("CWE510_Trapdoor__network_connection_06.c":65:21)
#loc36 = loc("CWE510_Trapdoor__network_connection_06.c":65:38)
#loc37 = loc("CWE510_Trapdoor__network_connection_06.c":66:17)
#loc38 = loc("CWE510_Trapdoor__network_connection_06.c":67:21)
#loc39 = loc("CWE510_Trapdoor__network_connection_06.c":69:24)
#loc40 = loc("CWE510_Trapdoor__network_connection_06.c":69:25)
#loc41 = loc("CWE510_Trapdoor__network_connection_06.c":69:34)
#loc42 = loc("CWE510_Trapdoor__network_connection_06.c":69:37)
#loc43 = loc("CWE510_Trapdoor__network_connection_06.c":69:51)
#loc44 = loc("CWE510_Trapdoor__network_connection_06.c":69:17)
#loc45 = loc("CWE510_Trapdoor__network_connection_06.c":69:52)
#loc46 = loc("CWE510_Trapdoor__network_connection_06.c":70:38)
#loc47 = loc("/usr/include/netinet/in.h":249:5)
#loc48 = loc("CWE510_Trapdoor__network_connection_06.c":70:17)
#loc49 = loc("CWE510_Trapdoor__network_connection_06.c":71:43)
#loc50 = loc("/usr/include/netinet/in.h":251:20)
#loc51 = loc("/usr/include/netinet/in.h":33:15)
#loc52 = loc("CWE510_Trapdoor__network_connection_06.c":71:17)
#loc53 = loc("CWE510_Trapdoor__network_connection_06.c":71:63)
#loc54 = loc("CWE510_Trapdoor__network_connection_06.c":72:42)
#loc55 = loc("CWE510_Trapdoor__network_connection_06.c":72:36)
#loc56 = loc("/usr/include/netinet/in.h":250:15)
#loc57 = loc("CWE510_Trapdoor__network_connection_06.c":72:17)
#loc58 = loc("CWE510_Trapdoor__network_connection_06.c":72:44)
#loc59 = loc("CWE510_Trapdoor__network_connection_06.c":74:17)
#loc60 = loc("CWE510_Trapdoor__network_connection_06.c":77:17)
#loc61 = loc("CWE510_Trapdoor__network_connection_06.c":74:29)
#loc62 = loc("CWE510_Trapdoor__network_connection_06.c":74:62)
#loc63 = loc("CWE510_Trapdoor__network_connection_06.c":74:63)
#loc64 = loc("CWE510_Trapdoor__network_connection_06.c":74:72)
#loc65 = loc("CWE510_Trapdoor__network_connection_06.c":74:86)
#loc66 = loc("CWE510_Trapdoor__network_connection_06.c":74:21)
#loc67 = loc("CWE510_Trapdoor__network_connection_06.c":74:92)
#loc68 = loc("CWE510_Trapdoor__network_connection_06.c":75:17)
#loc69 = loc("CWE510_Trapdoor__network_connection_06.c":76:21)
#loc70 = loc("CWE510_Trapdoor__network_connection_06.c":80:20)
#loc71 = loc("CWE510_Trapdoor__network_connection_06.c":81:13)
#loc72 = loc("CWE510_Trapdoor__network_connection_06.c":84:13)
#loc73 = loc("CWE510_Trapdoor__network_connection_06.c":81:17)
#loc74 = loc("CWE510_Trapdoor__network_connection_06.c":81:34)
#loc75 = loc("CWE510_Trapdoor__network_connection_06.c":82:13)
#loc76 = loc("CWE510_Trapdoor__network_connection_06.c":83:30)
#loc77 = loc("CWE510_Trapdoor__network_connection_06.c":83:17)
#loc78 = loc("/usr/include/stdlib.h":575:1)
#loc79 = loc("/usr/include/stdlib.h":575:41)
#loc80 = loc("/usr/include/time.h":76:1)
#loc81 = loc("/usr/include/time.h":76:38)
#loc82 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc83 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc84 = loc("CWE510_Trapdoor__network_connection_06.c":109:15)
#loc85 = loc("CWE510_Trapdoor__network_connection_06.c":111:15)
#loc86 = loc("CWE510_Trapdoor__network_connection_06.c":104:1)
#loc87 = loc("CWE510_Trapdoor__network_connection_06.c":114:1)
#loc92 = loc("CWE510_Trapdoor__network_connection_06.c":105:1)
#loc93 = loc("CWE510_Trapdoor__network_connection_06.c":107:27)
#loc94 = loc("CWE510_Trapdoor__network_connection_06.c":107:22)
#loc95 = loc("CWE510_Trapdoor__network_connection_06.c":107:5)
#loc96 = loc("CWE510_Trapdoor__network_connection_06.c":109:5)
#loc97 = loc("CWE510_Trapdoor__network_connection_06.c":110:5)
#loc98 = loc("CWE510_Trapdoor__network_connection_06.c":110:48)
#loc99 = loc("CWE510_Trapdoor__network_connection_06.c":111:5)
#loc100 = loc("CWE510_Trapdoor__network_connection_06.c":113:12)
#loc101 = loc("CWE510_Trapdoor__network_connection_06.c":113:5)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc6, #loc7])
#loc105 = loc(fused[#loc8, #loc9])
#loc106 = loc(fused[#loc10, #loc11])
#loc107 = loc(fused[#loc12, #loc13])
#loc108 = loc(fused[#loc14, #loc15])
#loc109 = loc(fused[#loc16, #loc17])
#loc110 = loc(fused[#loc18, #loc15])
#loc111 = loc(fused[#loc19, #loc20])
#loc112 = loc(fused[#loc21, #loc22])
#loc113 = loc(fused[#loc23, #loc24])
#loc114 = loc(fused[#loc25, #loc26])
#loc115 = loc(fused[#loc31, #loc32])
#loc116 = loc(fused[#loc33, #loc34])
#loc117 = loc(fused[#loc35, #loc36])
#loc118 = loc(fused[#loc37, #loc34])
#loc119 = loc(fused[#loc39, #loc40])
#loc120 = loc(fused[#loc42, #loc43])
#loc121 = loc(fused[#loc44, #loc45])
#loc122 = loc(fused[#loc48, #loc46])
#loc123 = loc(fused[#loc52, #loc53])
#loc124 = loc(fused[#loc57, #loc58])
#loc125 = loc(fused[#loc59, #loc60])
#loc126 = loc(fused[#loc62, #loc63])
#loc127 = loc(fused[#loc64, #loc65])
#loc128 = loc(fused[#loc66, #loc67])
#loc129 = loc(fused[#loc68, #loc60])
#loc130 = loc(fused[#loc71, #loc72])
#loc131 = loc(fused[#loc73, #loc74])
#loc132 = loc(fused[#loc75, #loc72])
#loc133 = loc(fused[#loc78, #loc79])
#loc134 = loc(fused[#loc80, #loc81])
#loc135 = loc(fused[#loc82, #loc83])
#loc136 = loc(fused[#loc86, #loc87])
#loc139 = loc(fused[#loc97, #loc98])
#loc140 = loc(fused[#loc101, #loc100])
