!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodB2G2.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc157)
  cir.global "private" constant cir_private @__const.goodB2G1.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc158)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_07_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc159)
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc160)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc161)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc167)
    cir.brcond %6 ^bb2, ^bb5 loc(#loc168)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc169)
  ^bb3:  // pred: ^bb2
    %7 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_07_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc159)
    cir.copy %7 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc159)
    %8 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc26)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc27)
    %10 = cir.call @strdup(%9) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc26)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc171)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc35)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc172)
    cir.brcond %15 ^bb8, ^bb9 loc(#loc173)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc33)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc33)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc14)
  } loc(#loc163)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc38)
  } loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc179)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc59)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc184)
    cir.brcond %6 ^bb2, ^bb5 loc(#loc185)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc186)
  ^bb3:  // pred: ^bb2
    %7 = cir.get_global @__const.goodB2G1.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc158)
    cir.copy %7 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc158)
    %8 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc63)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc64)
    %10 = cir.call @strdup(%9) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc57)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc57)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc188)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc72)
    %15 = cir.cmp(ne, %13, %14) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %15 ^bb8, ^bb9 loc(#loc190)
  ^bb8:  // pred: ^bb7
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb10 loc(#loc74)
  ^bb9:  // pred: ^bb7
    %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc77)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
    cir.br ^bb10 loc(#loc70)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc70)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc51)
  } loc(#loc180)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc83)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc88)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc195)
    cir.brcond %6 ^bb2, ^bb5 loc(#loc196)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc197)
  ^bb3:  // pred: ^bb2
    %7 = cir.get_global @__const.goodB2G2.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc157)
    cir.copy %7 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc157)
    %8 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc92)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc93)
    %10 = cir.call @strdup(%9) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc86)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc86)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc199)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc101)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc200)
    cir.brcond %15 ^bb8, ^bb9 loc(#loc201)
  ^bb8:  // pred: ^bb7
    %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc103)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
    cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    cir.br ^bb9 loc(#loc99)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc99)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc80)
  } loc(#loc191)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc107)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc112)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    cir.br ^bb1 loc(#loc206)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc117)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc208)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc121)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb4 loc(#loc119)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc123)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc123)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc123)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc123)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc123)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc125)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc107)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc107)
    %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc210)
  ^bb6:  // pred: ^bb5
    %21 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc132)
    %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc211)
    cir.brcond %24 ^bb7, ^bb8 loc(#loc212)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc130)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc130)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc109)
  } loc(#loc203)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc138)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc143)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc145)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc145)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc145)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc145)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc145)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc147)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc149)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc149)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    cir.br ^bb3 loc(#loc141)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc220)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc160)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc155)
    %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc221)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc222)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc153)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc135)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_07.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_07.c":90:13)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_07.c":90:31)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_07.c":63:13)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_07.c":63:31)
#loc5 = loc("CWE401_Memory_Leak__strdup_char_07.c":36:13)
#loc6 = loc("CWE401_Memory_Leak__strdup_char_07.c":36:31)
#loc7 = loc("CWE401_Memory_Leak__strdup_char_07.c":25:1)
#loc8 = loc("CWE401_Memory_Leak__strdup_char_07.c":25:25)
#loc9 = loc("/usr/include/string.h":187:1)
#loc10 = loc("/usr/include/string.h":188:35)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_07.c":29:1)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_07.c":49:1)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_07.c":31:5)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_07.c":31:12)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_07.c":32:12)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_07.c":32:5)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_07.c":33:5)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_07.c":42:5)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_07.c":33:8)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_07.c":33:20)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_07.c":34:5)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_07.c":35:9)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_07.c":41:9)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_07.c":38:20)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_07.c":38:27)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_07.c":38:13)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_07.c":38:35)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_07.c":40:23)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_07.c":40:13)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_07.c":43:5)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_07.c":48:5)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_07.c":43:8)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_07.c":43:20)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_07.c":44:5)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_07.c":151:1)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_07.c":157:1)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_07.c":153:5)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_07.c":153:14)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_07.c":154:5)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_07.c":154:14)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_07.c":155:5)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_07.c":155:14)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_07.c":156:5)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_07.c":156:14)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_07.c":73:19)
#loc48 = loc("/usr/include/stdlib.h":687:1)
#loc49 = loc("/usr/include/stdlib.h":687:32)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_07.c":56:1)
#loc51 = loc("CWE401_Memory_Leak__strdup_char_07.c":80:1)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_07.c":58:5)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_07.c":58:12)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_07.c":59:12)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_07.c":59:5)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_07.c":60:5)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_07.c":69:5)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_07.c":60:8)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_07.c":60:20)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_07.c":61:5)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_07.c":62:9)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_07.c":68:9)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_07.c":65:20)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_07.c":65:27)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_07.c":65:13)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_07.c":65:35)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_07.c":67:23)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_07.c":67:13)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_07.c":70:5)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_07.c":79:5)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_07.c":70:8)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_07.c":70:20)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_07.c":71:5)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_07.c":74:5)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_07.c":76:5)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_07.c":73:9)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_07.c":78:9)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_07.c":78:14)
#loc79 = loc("CWE401_Memory_Leak__strdup_char_07.c":83:1)
#loc80 = loc("CWE401_Memory_Leak__strdup_char_07.c":102:1)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_07.c":85:5)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_07.c":85:12)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_07.c":86:12)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_07.c":86:5)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_07.c":87:5)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_07.c":96:5)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_07.c":87:8)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_07.c":87:20)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_07.c":88:5)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_07.c":89:9)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_07.c":95:9)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_07.c":92:20)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_07.c":92:27)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_07.c":92:13)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_07.c":92:35)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_07.c":94:23)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_07.c":94:13)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_07.c":97:5)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_07.c":101:5)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_07.c":97:8)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_07.c":97:20)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_07.c":98:5)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_07.c":100:9)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_07.c":100:14)
#loc105 = loc("/usr/include/string.h":141:1)
#loc106 = loc("/usr/include/string.h":142:14)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_07.c":119:22)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_07.c":105:1)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_07.c":128:1)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_07.c":107:5)
#loc111 = loc("CWE401_Memory_Leak__strdup_char_07.c":107:12)
#loc112 = loc("CWE401_Memory_Leak__strdup_char_07.c":108:12)
#loc113 = loc("CWE401_Memory_Leak__strdup_char_07.c":108:5)
#loc114 = loc("CWE401_Memory_Leak__strdup_char_07.c":109:5)
#loc115 = loc("CWE401_Memory_Leak__strdup_char_07.c":121:5)
#loc116 = loc("CWE401_Memory_Leak__strdup_char_07.c":109:8)
#loc117 = loc("CWE401_Memory_Leak__strdup_char_07.c":109:20)
#loc118 = loc("CWE401_Memory_Leak__strdup_char_07.c":110:5)
#loc119 = loc("CWE401_Memory_Leak__strdup_char_07.c":113:5)
#loc120 = loc("CWE401_Memory_Leak__strdup_char_07.c":115:5)
#loc121 = loc("CWE401_Memory_Leak__strdup_char_07.c":112:19)
#loc122 = loc("CWE401_Memory_Leak__strdup_char_07.c":112:9)
#loc123 = loc("CWE401_Memory_Leak__strdup_char_07.c":117:24)
#loc124 = loc("CWE401_Memory_Leak__strdup_char_07.c":117:9)
#loc125 = loc("CWE401_Memory_Leak__strdup_char_07.c":119:9)
#loc126 = loc("CWE401_Memory_Leak__strdup_char_07.c":119:16)
#loc127 = loc("CWE401_Memory_Leak__strdup_char_07.c":120:19)
#loc128 = loc("CWE401_Memory_Leak__strdup_char_07.c":120:9)
#loc129 = loc("CWE401_Memory_Leak__strdup_char_07.c":122:5)
#loc130 = loc("CWE401_Memory_Leak__strdup_char_07.c":127:5)
#loc131 = loc("CWE401_Memory_Leak__strdup_char_07.c":122:8)
#loc132 = loc("CWE401_Memory_Leak__strdup_char_07.c":122:20)
#loc133 = loc("CWE401_Memory_Leak__strdup_char_07.c":123:5)
#loc134 = loc("CWE401_Memory_Leak__strdup_char_07.c":131:1)
#loc135 = loc("CWE401_Memory_Leak__strdup_char_07.c":149:1)
#loc136 = loc("CWE401_Memory_Leak__strdup_char_07.c":133:5)
#loc137 = loc("CWE401_Memory_Leak__strdup_char_07.c":133:12)
#loc138 = loc("CWE401_Memory_Leak__strdup_char_07.c":134:12)
#loc139 = loc("CWE401_Memory_Leak__strdup_char_07.c":134:5)
#loc140 = loc("CWE401_Memory_Leak__strdup_char_07.c":135:5)
#loc141 = loc("CWE401_Memory_Leak__strdup_char_07.c":142:5)
#loc142 = loc("CWE401_Memory_Leak__strdup_char_07.c":135:8)
#loc143 = loc("CWE401_Memory_Leak__strdup_char_07.c":135:20)
#loc144 = loc("CWE401_Memory_Leak__strdup_char_07.c":136:5)
#loc145 = loc("CWE401_Memory_Leak__strdup_char_07.c":138:24)
#loc146 = loc("CWE401_Memory_Leak__strdup_char_07.c":138:9)
#loc147 = loc("CWE401_Memory_Leak__strdup_char_07.c":140:9)
#loc148 = loc("CWE401_Memory_Leak__strdup_char_07.c":140:16)
#loc149 = loc("CWE401_Memory_Leak__strdup_char_07.c":140:22)
#loc150 = loc("CWE401_Memory_Leak__strdup_char_07.c":141:19)
#loc151 = loc("CWE401_Memory_Leak__strdup_char_07.c":141:9)
#loc152 = loc("CWE401_Memory_Leak__strdup_char_07.c":143:5)
#loc153 = loc("CWE401_Memory_Leak__strdup_char_07.c":148:5)
#loc154 = loc("CWE401_Memory_Leak__strdup_char_07.c":143:8)
#loc155 = loc("CWE401_Memory_Leak__strdup_char_07.c":143:20)
#loc156 = loc("CWE401_Memory_Leak__strdup_char_07.c":144:5)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc16])
#loc165 = loc(fused[#loc18, #loc17])
#loc166 = loc(fused[#loc19, #loc20])
#loc167 = loc(fused[#loc21, #loc22])
#loc168 = loc(fused[#loc23, #loc20])
#loc169 = loc(fused[#loc24, #loc25])
#loc170 = loc(fused[#loc28, #loc29])
#loc171 = loc(fused[#loc32, #loc33])
#loc172 = loc(fused[#loc34, #loc35])
#loc173 = loc(fused[#loc36, #loc33])
#loc174 = loc(fused[#loc37, #loc38])
#loc175 = loc(fused[#loc39, #loc40])
#loc176 = loc(fused[#loc41, #loc42])
#loc177 = loc(fused[#loc43, #loc44])
#loc178 = loc(fused[#loc45, #loc46])
#loc179 = loc(fused[#loc48, #loc49])
#loc180 = loc(fused[#loc50, #loc51])
#loc181 = loc(fused[#loc52, #loc53])
#loc182 = loc(fused[#loc55, #loc54])
#loc183 = loc(fused[#loc56, #loc57])
#loc184 = loc(fused[#loc58, #loc59])
#loc185 = loc(fused[#loc60, #loc57])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc65, #loc66])
#loc188 = loc(fused[#loc69, #loc70])
#loc189 = loc(fused[#loc71, #loc72])
#loc190 = loc(fused[#loc73, #loc74, #loc75, #loc70])
#loc191 = loc(fused[#loc79, #loc80])
#loc192 = loc(fused[#loc81, #loc82])
#loc193 = loc(fused[#loc84, #loc83])
#loc194 = loc(fused[#loc85, #loc86])
#loc195 = loc(fused[#loc87, #loc88])
#loc196 = loc(fused[#loc89, #loc86])
#loc197 = loc(fused[#loc90, #loc91])
#loc198 = loc(fused[#loc94, #loc95])
#loc199 = loc(fused[#loc98, #loc99])
#loc200 = loc(fused[#loc100, #loc101])
#loc201 = loc(fused[#loc102, #loc99])
#loc202 = loc(fused[#loc105, #loc106])
#loc203 = loc(fused[#loc108, #loc109])
#loc204 = loc(fused[#loc110, #loc111])
#loc205 = loc(fused[#loc113, #loc112])
#loc206 = loc(fused[#loc114, #loc115])
#loc207 = loc(fused[#loc116, #loc117])
#loc208 = loc(fused[#loc118, #loc119, #loc120, #loc115])
#loc209 = loc(fused[#loc124, #loc123])
#loc210 = loc(fused[#loc129, #loc130])
#loc211 = loc(fused[#loc131, #loc132])
#loc212 = loc(fused[#loc133, #loc130])
#loc213 = loc(fused[#loc134, #loc135])
#loc214 = loc(fused[#loc136, #loc137])
#loc215 = loc(fused[#loc139, #loc138])
#loc216 = loc(fused[#loc140, #loc141])
#loc217 = loc(fused[#loc142, #loc143])
#loc218 = loc(fused[#loc144, #loc141])
#loc219 = loc(fused[#loc146, #loc145])
#loc220 = loc(fused[#loc152, #loc153])
#loc221 = loc(fused[#loc154, #loc155])
#loc222 = loc(fused[#loc156, #loc153])
