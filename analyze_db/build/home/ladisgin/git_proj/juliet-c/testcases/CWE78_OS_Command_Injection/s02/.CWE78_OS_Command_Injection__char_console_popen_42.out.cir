!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":39:25)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":39:32)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:33)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":130:10)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":130:14)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":130:20)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":130:32)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":90:29)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":90:36)
#true = #cir.bool<true> : !cir.bool
#loc177 = loc(fused[#loc14, #loc15])
#loc216 = loc(fused[#loc115, #loc116])
#loc217 = loc(fused[#loc117, #loc118])
#loc223 = loc(fused[#loc138, #loc139])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc171)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_42_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc172)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc173)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc174)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc13)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc21)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %5 = cir.call @strlen(%4) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc21)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb2 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc26)
    %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc181)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
    %12 = cir.cmp(gt, %9, %11) : !u64i, !cir.bool loc(#loc182)
    cir.brcond %12 ^bb3, ^bb21 loc(#loc183)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !u64i), !cir.ptr<!s8i> loc(#loc33)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc34)
    %18 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %19 = cir.binop(sub, %17, %18) : !u64i loc(#loc185)
    %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc185)
    %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
    %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
    %23 = cir.call @fgets(%15, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc37)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
    %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc186)
    cir.brcond %26 ^bb5, ^bb18 loc(#loc187)
  ^bb5:  // pred: ^bb4
    %27 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc42)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc42)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc188)
    cir.br ^bb6 loc(#loc189)
  ^bb6:  // pred: ^bb5
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc49)
    %33 = cir.cmp(gt, %30, %32) : !u64i, !cir.bool loc(#loc190)
    cir.brcond %33 ^bb7, ^bb12 loc(#loc50)
  ^bb7:  // pred: ^bb6
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc53)
    %38 = cir.binop(sub, %35, %37) : !u64i loc(#loc191)
    %39 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc54)
    %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc51)
    %41 = cir.cast(integral, %40 : !s8i), !s32i loc(#loc51)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc55)
    %43 = cir.cmp(eq, %41, %42) : !s32i, !cir.bool loc(#loc192)
    cir.brcond %43 ^bb8, ^bb9 loc(#loc50)
  ^bb8:  // pred: ^bb7
    %44 = cir.const #true loc(#loc50)
    cir.br ^bb10(%44 : !cir.bool) loc(#loc50)
  ^bb9:  // pred: ^bb7
    %45 = cir.const #false loc(#loc50)
    cir.br ^bb10(%45 : !cir.bool) loc(#loc50)
  ^bb10(%46: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:33)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc50)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%46 : !cir.bool) loc(#loc50)
  ^bb12:  // pred: ^bb6
    %47 = cir.const #false loc(#loc50)
    cir.br ^bb13(%47 : !cir.bool) loc(#loc50)
  ^bb13(%48: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:33)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc50)
  ^bb14:  // pred: ^bb13
    cir.brcond %48 ^bb15, ^bb16 loc(#loc193)
  ^bb15:  // pred: ^bb14
    %49 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc57)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %52 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc60)
    %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc194)
    %56 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc61)
    cir.store %50, %56 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    cir.br ^bb16 loc(#loc47)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc47)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc40)
  ^bb18:  // pred: ^bb4
    %57 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc63)
    %61 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %62 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %63 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %60, %63 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    cir.br ^bb19 loc(#loc30)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc30)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc24)
  ^bb21:  // 2 preds: ^bb2, ^bb20
    cir.br ^bb22 loc(#loc24)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc20)
  ^bb23:  // pred: ^bb22
    %64 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.store %64, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
    cir.return %65 : !cir.ptr<!s8i> loc(#loc197)
  } loc(#loc176)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc71)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc199)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc172)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_42_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc172)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc172)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %6 = cir.call @badSource(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc83)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    cir.br ^bb1 loc(#loc205)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc71)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc71)
    %10 = cir.call @popen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc89)
    cir.store %10, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc206)
    cir.br ^bb2 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc94)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc95)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc208)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc209)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
    %16 = cir.call @pclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc98)
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc93)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc87)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc75)
  } loc(#loc200)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc101)
    cir.return loc(#loc100)
  } loc(#loc210)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc212)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc213)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc112)
  cir.func @main(%arg0: !s32i loc(fused[#loc115, #loc116]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc117, #loc118])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc217)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc114)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc119)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc120)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc121)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc121)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc122)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc109)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_42_good() : () -> () loc(#loc124)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc110)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc111)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_42_bad() : () -> () loc(#loc128)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc112)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc131)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    cir.return %17 : !s32i loc(#loc220)
  } loc(#loc215)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc135)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc138, #loc139])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc137)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    %2 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc141)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc135)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc135)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc224)
  } loc(#loc222)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc171)
    %3 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %6 = cir.call @goodG2BSource(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc154)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    cir.br ^bb1 loc(#loc230)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc160)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc160)
    %10 = cir.call @popen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc161)
    cir.store %10, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    cir.br ^bb2 loc(#loc232)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc166)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc167)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc233)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc234)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc169)
    %16 = cir.call @pclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc170)
    cir.br ^bb4 loc(#loc165)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc165)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc158)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc146)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_42.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":101:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":101:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":72:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":72:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":60:27)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":39:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":67:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":43:9)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":43:37)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":40:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":41:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":65:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":43:26)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":43:33)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":45:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":64:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":45:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":45:17)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":45:27)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":46:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":48:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":63:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":48:23)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":48:28)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":48:27)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":48:43)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":48:47)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":48:57)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":48:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":48:67)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":49:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":57:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":59:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":52:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":52:34)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":52:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":52:38)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":56:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:21)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:31)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:36)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:41)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:49)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:50)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":53:55)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":54:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":55:39)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":55:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":55:26)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":55:34)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":55:35)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":60:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":62:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":62:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":62:22)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":62:29)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":66:12)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":66:5)
#loc69 = loc("/usr/include/stdio.h":893:1)
#loc70 = loc("/usr/include/stdio.h":894:3)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":78:28)
#loc72 = loc("/usr/include/stdio.h":887:1)
#loc73 = loc("/usr/include/stdio.h":887:36)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":69:1)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":84:1)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":76:9)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":76:15)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":71:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":71:12)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":73:12)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":73:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":74:22)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":74:12)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":74:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":74:26)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":75:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":83:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":78:22)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":78:16)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":78:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":78:31)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":79:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":82:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":79:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":79:21)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":80:9)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":81:20)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":81:13)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":115:1)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":118:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":117:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":117:13)
#loc103 = loc("/usr/include/stdlib.h":575:1)
#loc104 = loc("/usr/include/stdlib.h":575:41)
#loc105 = loc("/usr/include/time.h":76:1)
#loc106 = loc("/usr/include/time.h":76:38)
#loc107 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc108 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":135:15)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":137:15)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":140:15)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":142:15)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":130:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":145:1)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":131:1)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":133:27)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":133:22)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":133:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":135:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":136:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":136:60)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":137:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":140:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":141:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":141:59)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":142:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":144:12)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":144:5)
#loc133 = loc("/usr/include/string.h":149:1)
#loc134 = loc("/usr/include/string.h":150:14)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":93:18)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":90:1)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":95:1)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":91:1)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":93:5)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":93:12)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":94:12)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":94:5)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":98:1)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":113:1)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":105:9)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":105:15)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":100:5)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":100:12)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":102:12)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":102:5)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":103:26)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":103:12)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":103:5)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":103:30)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":104:5)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":112:5)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":107:22)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":107:28)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":107:16)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":107:9)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":107:31)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":108:9)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":111:9)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":108:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":108:21)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":109:9)
#loc169 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":110:20)
#loc170 = loc("CWE78_OS_Command_Injection__char_console_popen_42.c":110:13)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc12, #loc13])
#loc178 = loc(fused[#loc16, #loc17])
#loc179 = loc(fused[#loc19, #loc20])
#loc180 = loc(fused[#loc23, #loc24])
#loc181 = loc(fused[#loc25, #loc26])
#loc182 = loc(fused[#loc25, #loc27])
#loc183 = loc(fused[#loc28, #loc24])
#loc184 = loc(fused[#loc29, #loc30])
#loc185 = loc(fused[#loc34, #loc35])
#loc186 = loc(fused[#loc37, #loc38])
#loc187 = loc(fused[#loc39, #loc40, #loc41, #loc30])
#loc188 = loc(fused[#loc44, #loc45])
#loc189 = loc(fused[#loc46, #loc47])
#loc190 = loc(fused[#loc48, #loc49])
#loc191 = loc(fused[#loc52, #loc53])
#loc192 = loc(fused[#loc51, #loc55])
#loc193 = loc(fused[#loc56, #loc47])
#loc194 = loc(fused[#loc59, #loc60])
#loc195 = loc(fused[#loc58, #loc57])
#loc196 = loc(fused[#loc64, #loc63])
#loc197 = loc(fused[#loc68, #loc67])
#loc198 = loc(fused[#loc69, #loc70])
#loc199 = loc(fused[#loc72, #loc73])
#loc200 = loc(fused[#loc74, #loc75])
#loc201 = loc(fused[#loc76, #loc77])
#loc202 = loc(fused[#loc78, #loc79])
#loc203 = loc(fused[#loc81, #loc80])
#loc204 = loc(fused[#loc84, #loc85])
#loc205 = loc(fused[#loc86, #loc87])
#loc206 = loc(fused[#loc90, #loc91])
#loc207 = loc(fused[#loc92, #loc93])
#loc208 = loc(fused[#loc94, #loc95])
#loc209 = loc(fused[#loc96, #loc93])
#loc210 = loc(fused[#loc99, #loc100])
#loc211 = loc(fused[#loc101, #loc102])
#loc212 = loc(fused[#loc103, #loc104])
#loc213 = loc(fused[#loc105, #loc106])
#loc214 = loc(fused[#loc107, #loc108])
#loc215 = loc(fused[#loc113, #loc114])
#loc218 = loc(fused[#loc124, #loc125])
#loc219 = loc(fused[#loc128, #loc129])
#loc220 = loc(fused[#loc132, #loc131])
#loc221 = loc(fused[#loc133, #loc134])
#loc222 = loc(fused[#loc136, #loc137])
#loc224 = loc(fused[#loc144, #loc143])
#loc225 = loc(fused[#loc145, #loc146])
#loc226 = loc(fused[#loc147, #loc148])
#loc227 = loc(fused[#loc149, #loc150])
#loc228 = loc(fused[#loc152, #loc151])
#loc229 = loc(fused[#loc155, #loc156])
#loc230 = loc(fused[#loc157, #loc158])
#loc231 = loc(fused[#loc162, #loc163])
#loc232 = loc(fused[#loc164, #loc165])
#loc233 = loc(fused[#loc166, #loc167])
#loc234 = loc(fused[#loc168, #loc165])
