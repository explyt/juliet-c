!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_sub_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc219)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc220)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc221)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc222)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc223)
  cir.func no_proto  @CWE191_Integer_Underflow__int_fgets_sub_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc20)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc230)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc230)
          cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc230)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc29)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc29)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc29)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc29)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc29)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc29)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc29)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc29)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc220)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc31)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc232)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc33)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc41)
            } loc(#loc233)
          } loc(#loc231)
        } loc(#loc229)
      } loc(#loc228)
    } loc(#loc227)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc44)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc44)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc238)
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc50)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc238)
          %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc52)
        } loc(#loc237)
      } loc(#loc236)
    } loc(#loc235)
    cir.return loc(#loc13)
  } loc(#loc224)
  cir.func no_proto  @CWE191_Integer_Underflow__int_fgets_sub_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc240)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc54)
  } loc(#loc239)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc63)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc64)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc245)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc73)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc73)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc250)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc250)
          cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc250)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc81)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc82)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc82)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc82)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc82)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc82)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc82)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc82)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc82)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc220)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc84)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc252)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc86)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc91)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc254)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc95)
            } loc(#loc253)
          } loc(#loc251)
        } loc(#loc249)
      } loc(#loc248)
    } loc(#loc247)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc98)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc98)
      cir.if %3 {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc106)
          %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc106)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc106)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc106)
          %9 = cir.cmp(gt, %4, %8) : !s32i, !s32i loc(#loc258)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc107)
          cir.if %10 {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc260)
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc113)
            cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc260)
            %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc115)
          } else {
            %11 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc64)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc64)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc116)
          } loc(#loc259)
        } loc(#loc257)
      } loc(#loc256)
    } loc(#loc255)
    cir.return loc(#loc66)
  } loc(#loc244)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc125)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc125)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc267)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc267)
          cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc267)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc133)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc134)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc134)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc134)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc134)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc134)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc134)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc134)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc134)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc220)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc136)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc269)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc138)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc142)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc143)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc146)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc146)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc147)
            } loc(#loc270)
          } loc(#loc268)
        } loc(#loc266)
      } loc(#loc265)
    } loc(#loc264)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc150)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc150)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc155)
          %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc155)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc155)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc155)
          %9 = cir.cmp(gt, %4, %8) : !s32i, !s32i loc(#loc275)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc156)
          cir.if %10 {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc277)
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc161)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc162)
            cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc277)
            %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc163)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc164)
          } else {
            %11 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc165)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc165)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc166)
          } loc(#loc276)
        } loc(#loc274)
      } loc(#loc273)
    } loc(#loc272)
    cir.return loc(#loc118)
  } loc(#loc261)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc279)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc171)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc175)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc175)
      cir.if %3 {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc179)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc179)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc180)
      } else {
        %4 = cir.const #cir.int<2> : !s32i loc(#loc181)
        %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc182)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc283)
      } loc(#loc282)
    } loc(#loc281)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc186)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc186)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc287)
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc191)
          %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc192)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc287)
          %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc193)
          cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc194)
        } loc(#loc286)
      } loc(#loc285)
    } loc(#loc284)
    cir.return loc(#loc168)
  } loc(#loc278)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc289)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc199)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc203)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc203)
      cir.if %3 {
        %4 = cir.const #cir.int<2> : !s32i loc(#loc205)
        %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc206)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
      } loc(#loc292)
    } loc(#loc291)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc210)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc210)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc297)
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc215)
          %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc216)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc297)
          %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc217)
          cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc218)
        } loc(#loc296)
      } loc(#loc295)
    } loc(#loc294)
    cir.return loc(#loc196)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_sub_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":47:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":30:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":59:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":32:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":32:9)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":34:12)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":34:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":35:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":50:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":35:8)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":36:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":37:9)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":49:9)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":38:13)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":38:49)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":40:13)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":48:13)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":40:23)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":40:36)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":40:53)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":40:17)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":40:63)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":40:60)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":41:13)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":44:13)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":46:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":43:29)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":43:24)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":43:17)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":43:40)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":47:17)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":51:5)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":58:5)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":51:8)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":52:5)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":53:9)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":57:9)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":55:13)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":55:33)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":55:26)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":56:26)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":56:13)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":191:1)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":197:1)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":193:5)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":193:14)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":194:5)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":194:14)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":195:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":195:14)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":196:5)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":196:14)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":90:19)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":102:23)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":66:1)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":105:1)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":68:5)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":68:9)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":70:12)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":70:5)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":71:5)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":86:5)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":71:8)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":72:5)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":73:9)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":85:9)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":74:13)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":74:49)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":76:13)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":84:13)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":76:23)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":76:36)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":76:53)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":76:17)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":76:63)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":76:60)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":77:13)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":80:13)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":82:13)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":79:29)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":79:24)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":79:17)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":79:40)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":83:27)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":83:17)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":87:5)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":104:5)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":87:8)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":88:5)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":91:5)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":93:5)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":90:9)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":95:9)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":103:9)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":95:13)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":95:20)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":95:18)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":96:9)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":99:9)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":101:9)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":97:13)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":97:33)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":97:26)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":98:26)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":98:13)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":102:13)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":108:1)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":142:1)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":110:5)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":110:9)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":112:12)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":112:5)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":113:5)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":128:5)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":113:8)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":114:5)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":115:9)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":127:9)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":116:13)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":116:49)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":118:13)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":126:13)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":118:23)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":118:36)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":118:53)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":118:17)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":118:63)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":118:60)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":119:13)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":122:13)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":124:13)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":121:29)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":121:24)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":121:17)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":121:40)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":125:27)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":125:17)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":129:5)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":141:5)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":129:8)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":130:5)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":132:9)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":140:9)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":132:13)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":132:20)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":132:18)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":133:9)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":136:9)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":138:9)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":134:13)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":134:33)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":134:26)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":135:26)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":135:13)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":139:23)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":139:13)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":145:1)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":168:1)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":147:5)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":147:9)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":149:12)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":149:5)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":150:5)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":159:5)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":150:8)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":151:5)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":154:5)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":156:5)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":153:19)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":153:9)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":158:17)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":158:16)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":158:9)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":160:5)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":167:5)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":160:8)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":161:5)
#loc188 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":162:9)
#loc189 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":166:9)
#loc190 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":164:13)
#loc191 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":164:33)
#loc192 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":164:26)
#loc193 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":165:26)
#loc194 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":165:13)
#loc195 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":171:1)
#loc196 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":189:1)
#loc197 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":173:5)
#loc198 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":173:9)
#loc199 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":175:12)
#loc200 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":175:5)
#loc201 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":176:5)
#loc202 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":180:5)
#loc203 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":176:8)
#loc204 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":177:5)
#loc205 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":179:17)
#loc206 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":179:16)
#loc207 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":179:9)
#loc208 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":181:5)
#loc209 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":188:5)
#loc210 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":181:8)
#loc211 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":182:5)
#loc212 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":183:9)
#loc213 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":187:9)
#loc214 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":185:13)
#loc215 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":185:33)
#loc216 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":185:26)
#loc217 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":186:26)
#loc218 = loc("CWE191_Integer_Underflow__int_fgets_sub_04.c":186:13)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc7, #loc8])
#loc223 = loc(fused[#loc10, #loc11])
#loc224 = loc(fused[#loc12, #loc13])
#loc225 = loc(fused[#loc14, #loc15])
#loc226 = loc(fused[#loc17, #loc16])
#loc227 = loc(fused[#loc18, #loc19])
#loc228 = loc(fused[#loc21, #loc19])
#loc229 = loc(fused[#loc22, #loc23])
#loc230 = loc(fused[#loc24, #loc25])
#loc231 = loc(fused[#loc26, #loc27])
#loc232 = loc(fused[#loc31, #loc32])
#loc233 = loc(fused[#loc34, #loc35, #loc36, #loc27])
#loc234 = loc(fused[#loc39, #loc40])
#loc235 = loc(fused[#loc42, #loc43])
#loc236 = loc(fused[#loc45, #loc43])
#loc237 = loc(fused[#loc46, #loc47])
#loc238 = loc(fused[#loc48, #loc49])
#loc239 = loc(fused[#loc53, #loc54])
#loc240 = loc(fused[#loc55, #loc56])
#loc241 = loc(fused[#loc57, #loc58])
#loc242 = loc(fused[#loc59, #loc60])
#loc243 = loc(fused[#loc61, #loc62])
#loc244 = loc(fused[#loc65, #loc66])
#loc245 = loc(fused[#loc67, #loc68])
#loc246 = loc(fused[#loc70, #loc69])
#loc247 = loc(fused[#loc71, #loc72])
#loc248 = loc(fused[#loc74, #loc72])
#loc249 = loc(fused[#loc75, #loc76])
#loc250 = loc(fused[#loc77, #loc78])
#loc251 = loc(fused[#loc79, #loc80])
#loc252 = loc(fused[#loc84, #loc85])
#loc253 = loc(fused[#loc87, #loc88, #loc89, #loc80])
#loc254 = loc(fused[#loc92, #loc93])
#loc255 = loc(fused[#loc96, #loc97])
#loc256 = loc(fused[#loc99, #loc100, #loc101, #loc97])
#loc257 = loc(fused[#loc103, #loc104])
#loc258 = loc(fused[#loc105, #loc106])
#loc259 = loc(fused[#loc108, #loc109, #loc110, #loc104])
#loc260 = loc(fused[#loc111, #loc112])
#loc261 = loc(fused[#loc117, #loc118])
#loc262 = loc(fused[#loc119, #loc120])
#loc263 = loc(fused[#loc122, #loc121])
#loc264 = loc(fused[#loc123, #loc124])
#loc265 = loc(fused[#loc126, #loc124])
#loc266 = loc(fused[#loc127, #loc128])
#loc267 = loc(fused[#loc129, #loc130])
#loc268 = loc(fused[#loc131, #loc132])
#loc269 = loc(fused[#loc136, #loc137])
#loc270 = loc(fused[#loc139, #loc140, #loc141, #loc132])
#loc271 = loc(fused[#loc144, #loc145])
#loc272 = loc(fused[#loc148, #loc149])
#loc273 = loc(fused[#loc151, #loc149])
#loc274 = loc(fused[#loc152, #loc153])
#loc275 = loc(fused[#loc154, #loc155])
#loc276 = loc(fused[#loc157, #loc158, #loc159, #loc153])
#loc277 = loc(fused[#loc160, #loc161])
#loc278 = loc(fused[#loc167, #loc168])
#loc279 = loc(fused[#loc169, #loc170])
#loc280 = loc(fused[#loc172, #loc171])
#loc281 = loc(fused[#loc173, #loc174])
#loc282 = loc(fused[#loc176, #loc177, #loc178, #loc174])
#loc283 = loc(fused[#loc183, #loc181])
#loc284 = loc(fused[#loc184, #loc185])
#loc285 = loc(fused[#loc187, #loc185])
#loc286 = loc(fused[#loc188, #loc189])
#loc287 = loc(fused[#loc190, #loc191])
#loc288 = loc(fused[#loc195, #loc196])
#loc289 = loc(fused[#loc197, #loc198])
#loc290 = loc(fused[#loc200, #loc199])
#loc291 = loc(fused[#loc201, #loc202])
#loc292 = loc(fused[#loc204, #loc202])
#loc293 = loc(fused[#loc207, #loc205])
#loc294 = loc(fused[#loc208, #loc209])
#loc295 = loc(fused[#loc211, #loc209])
#loc296 = loc(fused[#loc212, #loc213])
#loc297 = loc(fused[#loc214, #loc215])
