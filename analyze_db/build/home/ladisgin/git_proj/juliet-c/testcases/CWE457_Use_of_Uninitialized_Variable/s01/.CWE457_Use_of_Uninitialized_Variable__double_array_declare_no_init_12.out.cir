!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":203:10)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":203:14)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":203:20)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":203:32)
#loc372 = loc(fused[#loc117, #loc118])
#loc373 = loc(fused[#loc119, #loc120])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc323)
  cir.func private @printDoubleLine(!cir.double) loc(#loc324)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc326)
    %1 = cir.alloca !cir.array<!cir.double x 10>, !cir.ptr<!cir.array<!cir.double x 10>>, ["dataUninitArray"] {alignment = 16 : i64} loc(#loc327)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.double x 10>>), !cir.ptr<!cir.double> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc328)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc330)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc330)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
      cir.if %6 {
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc333)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc26)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc335)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc28)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc29)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc336)
              cir.condition(%11) loc(#loc30)
            } body {
              cir.scope {
                %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc32)
                %10 = cir.cast(int_to_float, %9 : !s32i), !cir.double loc(#loc32)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc33)
                %12 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc34)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc35)
                cir.store %10, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc338)
              } loc(#loc337)
              cir.yield loc(#loc25)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc36)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc37)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc339)
              cir.yield loc(#loc334)
            } loc(#loc334)
          } loc(#loc334)
        } loc(#loc332)
      } loc(#loc331)
    } loc(#loc329)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc341)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc341)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc40)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc40)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc344)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc51)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc346)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc53)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc54)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc347)
              cir.condition(%11) loc(#loc55)
            } body {
              cir.scope {
                %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc57)
                %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                %11 = cir.ptr_stride(%9 : !cir.ptr<!cir.double>, %10 : !s32i), !cir.ptr<!cir.double> loc(#loc59)
                %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc57)
                cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc60)
              } loc(#loc348)
              cir.yield loc(#loc50)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc61)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc62)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc349)
              cir.yield loc(#loc345)
            } loc(#loc345)
          } loc(#loc345)
        } loc(#loc343)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc351)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc69)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc353)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc71)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc72)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc354)
              cir.condition(%11) loc(#loc73)
            } body {
              cir.scope {
                %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                %10 = cir.cast(int_to_float, %9 : !s32i), !cir.double loc(#loc75)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc76)
                %12 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc78)
                cir.store %10, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc356)
              } loc(#loc355)
              cir.yield loc(#loc68)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc80)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc357)
              cir.yield loc(#loc352)
            } loc(#loc352)
          } loc(#loc352)
        } loc(#loc350)
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc359)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc87)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc361)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc90)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc362)
              cir.condition(%11) loc(#loc91)
            } body {
              cir.scope {
                %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc93)
                %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %11 = cir.ptr_stride(%9 : !cir.ptr<!cir.double>, %10 : !s32i), !cir.ptr<!cir.double> loc(#loc95)
                %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc93)
                cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc96)
              } loc(#loc363)
              cir.yield loc(#loc86)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc98)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc364)
              cir.yield loc(#loc360)
            } loc(#loc360)
          } loc(#loc360)
        } loc(#loc358)
      } loc(#loc342)
    } loc(#loc340)
    cir.return loc(#loc6)
  } loc(#loc325)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc366)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc101)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc367)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc103)
    cir.return loc(#loc100)
  } loc(#loc365)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc368)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc369)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc370)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc114)
  cir.func @main(%arg0: !s32i loc(fused[#loc117, #loc118]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc119, #loc120])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc372)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc373)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc116)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc121)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc122)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc123)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc123)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc124)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc111)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc374)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12_good() : () -> () loc(#loc126)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc112)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc113)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc375)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12_bad() : () -> () loc(#loc130)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc114)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    cir.return %17 : !s32i loc(#loc376)
  } loc(#loc371)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc378)
    %1 = cir.alloca !cir.array<!cir.double x 10>, !cir.ptr<!cir.array<!cir.double x 10>>, ["dataUninitArray"] {alignment = 16 : i64} loc(#loc379)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.double x 10>>), !cir.ptr<!cir.double> loc(#loc141)
    cir.store %2, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc380)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc382)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc382)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc145)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc145)
      cir.if %6 {
      } else {
      } loc(#loc383)
    } loc(#loc381)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc385)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc385)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc152)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc152)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc388)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc163)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc390)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc165)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc166)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc391)
              cir.condition(%11) loc(#loc167)
            } body {
              cir.scope {
                %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc169)
                %10 = cir.cast(int_to_float, %9 : !s32i), !cir.double loc(#loc169)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc170)
                %12 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc171)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc172)
                cir.store %10, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc393)
              } loc(#loc392)
              cir.yield loc(#loc162)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc174)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc394)
              cir.yield loc(#loc389)
            } loc(#loc389)
          } loc(#loc389)
        } loc(#loc387)
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc396)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc181)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc398)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc183)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc184)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc399)
              cir.condition(%11) loc(#loc185)
            } body {
              cir.scope {
                %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc187)
                %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc188)
                %11 = cir.ptr_stride(%9 : !cir.ptr<!cir.double>, %10 : !s32i), !cir.ptr<!cir.double> loc(#loc189)
                %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc187)
                cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc190)
              } loc(#loc400)
              cir.yield loc(#loc180)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc192)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc401)
              cir.yield loc(#loc397)
            } loc(#loc397)
          } loc(#loc397)
        } loc(#loc395)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc403)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc199)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc405)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc201)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc202)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc406)
              cir.condition(%11) loc(#loc203)
            } body {
              cir.scope {
                %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc205)
                %10 = cir.cast(int_to_float, %9 : !s32i), !cir.double loc(#loc205)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc206)
                %12 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc208)
                cir.store %10, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc408)
              } loc(#loc407)
              cir.yield loc(#loc198)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc209)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc210)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc409)
              cir.yield loc(#loc404)
            } loc(#loc404)
          } loc(#loc404)
        } loc(#loc402)
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc411)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc217)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc413)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc219)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc220)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc414)
              cir.condition(%11) loc(#loc221)
            } body {
              cir.scope {
                %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc223)
                %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                %11 = cir.ptr_stride(%9 : !cir.ptr<!cir.double>, %10 : !s32i), !cir.ptr<!cir.double> loc(#loc225)
                %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc223)
                cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc226)
              } loc(#loc415)
              cir.yield loc(#loc216)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc227)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc228)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc416)
              cir.yield loc(#loc412)
            } loc(#loc412)
          } loc(#loc412)
        } loc(#loc410)
      } loc(#loc386)
    } loc(#loc384)
    cir.return loc(#loc136)
  } loc(#loc377)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc418)
    %1 = cir.alloca !cir.array<!cir.double x 10>, !cir.ptr<!cir.array<!cir.double x 10>>, ["dataUninitArray"] {alignment = 16 : i64} loc(#loc419)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.double x 10>>), !cir.ptr<!cir.double> loc(#loc235)
    cir.store %2, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc420)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc422)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc422)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc239)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc239)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc425)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc250)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc427)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc252)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc253)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc428)
              cir.condition(%11) loc(#loc254)
            } body {
              cir.scope {
                %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc256)
                %10 = cir.cast(int_to_float, %9 : !s32i), !cir.double loc(#loc256)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc257)
                %12 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc258)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc259)
                cir.store %10, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc430)
              } loc(#loc429)
              cir.yield loc(#loc249)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc260)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc261)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc431)
              cir.yield loc(#loc426)
            } loc(#loc426)
          } loc(#loc426)
        } loc(#loc424)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc433)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc268)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc435)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc270)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc271)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc436)
              cir.condition(%11) loc(#loc272)
            } body {
              cir.scope {
                %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                %10 = cir.cast(int_to_float, %9 : !s32i), !cir.double loc(#loc274)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc275)
                %12 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc277)
                cir.store %10, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc438)
              } loc(#loc437)
              cir.yield loc(#loc267)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc278)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc279)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc439)
              cir.yield loc(#loc434)
            } loc(#loc434)
          } loc(#loc434)
        } loc(#loc432)
      } loc(#loc423)
    } loc(#loc421)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc441)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc441)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc282)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc282)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc444)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc293)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc446)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc295)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc296)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc447)
              cir.condition(%11) loc(#loc297)
            } body {
              cir.scope {
                %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc299)
                %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc300)
                %11 = cir.ptr_stride(%9 : !cir.ptr<!cir.double>, %10 : !s32i), !cir.ptr<!cir.double> loc(#loc301)
                %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc299)
                cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc302)
              } loc(#loc448)
              cir.yield loc(#loc292)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc303)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc304)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc449)
              cir.yield loc(#loc445)
            } loc(#loc445)
          } loc(#loc445)
        } loc(#loc443)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc451)
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc311)
            cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc453)
            cir.for : cond {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc313)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc314)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc454)
              cir.condition(%11) loc(#loc315)
            } body {
              cir.scope {
                %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc317)
                %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc318)
                %11 = cir.ptr_stride(%9 : !cir.ptr<!cir.double>, %10 : !s32i), !cir.ptr<!cir.double> loc(#loc319)
                %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc317)
                cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc320)
              } loc(#loc455)
              cir.yield loc(#loc310)
            } step {
              %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc321)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc322)
              cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc456)
              cir.yield loc(#loc452)
            } loc(#loc452)
          } loc(#loc452)
        } loc(#loc450)
      } loc(#loc442)
    } loc(#loc440)
    cir.return loc(#loc230)
  } loc(#loc417)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":22:1)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":72:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":24:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":24:14)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":25:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":25:30)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":26:12)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":26:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":27:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":42:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":27:8)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":27:33)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":28:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":31:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":33:5)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":35:9)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":41:9)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":36:13)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":36:17)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":37:13)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":40:13)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":37:19)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":37:17)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":37:22)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":37:24)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":37:23)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":38:13)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":39:35)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":39:17)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":39:22)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":39:23)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":37:29)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":37:28)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":43:5)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":71:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":43:8)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":43:33)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":44:5)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":53:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":55:5)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":46:9)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":52:9)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":47:13)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":47:17)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":48:13)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":51:13)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":48:19)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":48:17)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":48:22)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":48:24)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":48:23)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":49:13)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":50:33)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":50:38)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":50:39)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":50:17)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":48:29)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":48:28)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":57:9)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":63:9)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":58:13)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":58:17)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":59:13)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":62:13)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":59:19)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":59:17)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":59:22)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":59:24)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":59:23)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":60:13)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":61:35)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":61:17)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":61:22)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":61:23)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":59:29)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":59:28)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":64:9)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":70:9)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":65:13)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":65:17)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":66:13)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":69:13)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":66:19)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":66:17)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":66:22)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":66:24)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":66:23)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":67:13)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":68:33)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":68:38)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":68:39)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":68:17)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":66:29)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":66:28)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":188:1)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":192:1)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":190:5)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":190:13)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":191:5)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":191:13)
#loc105 = loc("/usr/include/stdlib.h":575:1)
#loc106 = loc("/usr/include/stdlib.h":575:41)
#loc107 = loc("/usr/include/time.h":76:1)
#loc108 = loc("/usr/include/time.h":76:38)
#loc109 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc110 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":208:15)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":210:15)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":213:15)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":215:15)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":203:1)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":218:1)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":204:1)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":206:27)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":206:22)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":206:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":208:5)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":209:5)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":209:80)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":210:5)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":213:5)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":214:5)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":214:79)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":215:5)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":217:12)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":217:5)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":81:1)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":132:1)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":83:5)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":83:14)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":84:5)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":84:30)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":85:12)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":85:5)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":86:5)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":95:5)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":86:8)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":86:33)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":87:5)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":90:5)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":92:5)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":96:5)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":131:5)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":96:8)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":96:33)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":97:5)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":113:5)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":115:5)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":99:9)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":105:9)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":100:13)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":100:17)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":101:13)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":104:13)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":101:19)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":101:17)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":101:22)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":101:24)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":101:23)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":102:13)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":103:35)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":103:17)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":103:22)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":103:23)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":101:29)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":101:28)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":106:9)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":112:9)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":107:13)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":107:17)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":108:13)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":111:13)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":108:19)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":108:17)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":108:22)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":108:24)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":108:23)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":109:13)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":110:33)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":110:38)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":110:39)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":110:17)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":108:29)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":108:28)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":117:9)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":123:9)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":118:13)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":118:17)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":119:13)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":122:13)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":119:19)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":119:17)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":119:22)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":119:24)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":119:23)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":120:13)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":121:35)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":121:17)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":121:22)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":121:23)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":119:29)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":119:28)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":124:9)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":130:9)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":125:13)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":125:17)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":126:13)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":129:13)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":126:19)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":126:17)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":126:22)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":126:24)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":126:23)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":127:13)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":128:33)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":128:38)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":128:39)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":128:17)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":126:29)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":126:28)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":137:1)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":186:1)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":139:5)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":139:14)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":140:5)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":140:30)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":141:12)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":141:5)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":142:5)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":163:5)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":142:8)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":142:33)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":143:5)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":152:5)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":154:5)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":145:9)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":151:9)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":146:13)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":146:17)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":147:13)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":150:13)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":147:19)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":147:17)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":147:22)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":147:24)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":147:23)
#loc255 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":148:13)
#loc256 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":149:35)
#loc257 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":149:17)
#loc258 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":149:22)
#loc259 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":149:23)
#loc260 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":147:29)
#loc261 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":147:28)
#loc262 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":156:9)
#loc263 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":162:9)
#loc264 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":157:13)
#loc265 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":157:17)
#loc266 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":158:13)
#loc267 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":161:13)
#loc268 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":158:19)
#loc269 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":158:17)
#loc270 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":158:22)
#loc271 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":158:24)
#loc272 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":158:23)
#loc273 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":159:13)
#loc274 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":160:35)
#loc275 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":160:17)
#loc276 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":160:22)
#loc277 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":160:23)
#loc278 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":158:29)
#loc279 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":158:28)
#loc280 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":164:5)
#loc281 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":185:5)
#loc282 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":164:8)
#loc283 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":164:33)
#loc284 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":165:5)
#loc285 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":174:5)
#loc286 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":176:5)
#loc287 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":167:9)
#loc288 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":173:9)
#loc289 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":168:13)
#loc290 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":168:17)
#loc291 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":169:13)
#loc292 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":172:13)
#loc293 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":169:19)
#loc294 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":169:17)
#loc295 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":169:22)
#loc296 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":169:24)
#loc297 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":169:23)
#loc298 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":170:13)
#loc299 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":171:33)
#loc300 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":171:38)
#loc301 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":171:39)
#loc302 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":171:17)
#loc303 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":169:29)
#loc304 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":169:28)
#loc305 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":178:9)
#loc306 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":184:9)
#loc307 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":179:13)
#loc308 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":179:17)
#loc309 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":180:13)
#loc310 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":183:13)
#loc311 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":180:19)
#loc312 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":180:17)
#loc313 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":180:22)
#loc314 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":180:24)
#loc315 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":180:23)
#loc316 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":181:13)
#loc317 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":182:33)
#loc318 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":182:38)
#loc319 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":182:39)
#loc320 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":182:17)
#loc321 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":180:29)
#loc322 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_12.c":180:28)
#loc323 = loc(fused[#loc1, #loc2])
#loc324 = loc(fused[#loc3, #loc4])
#loc325 = loc(fused[#loc5, #loc6])
#loc326 = loc(fused[#loc7, #loc8])
#loc327 = loc(fused[#loc9, #loc10])
#loc328 = loc(fused[#loc12, #loc11])
#loc329 = loc(fused[#loc13, #loc14])
#loc330 = loc(fused[#loc15, #loc16])
#loc331 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc332 = loc(fused[#loc20, #loc21])
#loc333 = loc(fused[#loc22, #loc23])
#loc334 = loc(fused[#loc24, #loc25])
#loc335 = loc(fused[#loc27, #loc26])
#loc336 = loc(fused[#loc28, #loc29])
#loc337 = loc(fused[#loc31, #loc25])
#loc338 = loc(fused[#loc33, #loc32])
#loc339 = loc(fused[#loc37, #loc36])
#loc340 = loc(fused[#loc38, #loc39])
#loc341 = loc(fused[#loc40, #loc41])
#loc342 = loc(fused[#loc42, #loc43, #loc44, #loc39])
#loc343 = loc(fused[#loc45, #loc46])
#loc344 = loc(fused[#loc47, #loc48])
#loc345 = loc(fused[#loc49, #loc50])
#loc346 = loc(fused[#loc52, #loc51])
#loc347 = loc(fused[#loc53, #loc54])
#loc348 = loc(fused[#loc56, #loc50])
#loc349 = loc(fused[#loc62, #loc61])
#loc350 = loc(fused[#loc63, #loc64])
#loc351 = loc(fused[#loc65, #loc66])
#loc352 = loc(fused[#loc67, #loc68])
#loc353 = loc(fused[#loc70, #loc69])
#loc354 = loc(fused[#loc71, #loc72])
#loc355 = loc(fused[#loc74, #loc68])
#loc356 = loc(fused[#loc76, #loc75])
#loc357 = loc(fused[#loc80, #loc79])
#loc358 = loc(fused[#loc81, #loc82])
#loc359 = loc(fused[#loc83, #loc84])
#loc360 = loc(fused[#loc85, #loc86])
#loc361 = loc(fused[#loc88, #loc87])
#loc362 = loc(fused[#loc89, #loc90])
#loc363 = loc(fused[#loc92, #loc86])
#loc364 = loc(fused[#loc98, #loc97])
#loc365 = loc(fused[#loc99, #loc100])
#loc366 = loc(fused[#loc101, #loc102])
#loc367 = loc(fused[#loc103, #loc104])
#loc368 = loc(fused[#loc105, #loc106])
#loc369 = loc(fused[#loc107, #loc108])
#loc370 = loc(fused[#loc109, #loc110])
#loc371 = loc(fused[#loc115, #loc116])
#loc374 = loc(fused[#loc126, #loc127])
#loc375 = loc(fused[#loc130, #loc131])
#loc376 = loc(fused[#loc134, #loc133])
#loc377 = loc(fused[#loc135, #loc136])
#loc378 = loc(fused[#loc137, #loc138])
#loc379 = loc(fused[#loc139, #loc140])
#loc380 = loc(fused[#loc142, #loc141])
#loc381 = loc(fused[#loc143, #loc144])
#loc382 = loc(fused[#loc145, #loc146])
#loc383 = loc(fused[#loc147, #loc148, #loc149, #loc144])
#loc384 = loc(fused[#loc150, #loc151])
#loc385 = loc(fused[#loc152, #loc153])
#loc386 = loc(fused[#loc154, #loc155, #loc156, #loc151])
#loc387 = loc(fused[#loc157, #loc158])
#loc388 = loc(fused[#loc159, #loc160])
#loc389 = loc(fused[#loc161, #loc162])
#loc390 = loc(fused[#loc164, #loc163])
#loc391 = loc(fused[#loc165, #loc166])
#loc392 = loc(fused[#loc168, #loc162])
#loc393 = loc(fused[#loc170, #loc169])
#loc394 = loc(fused[#loc174, #loc173])
#loc395 = loc(fused[#loc175, #loc176])
#loc396 = loc(fused[#loc177, #loc178])
#loc397 = loc(fused[#loc179, #loc180])
#loc398 = loc(fused[#loc182, #loc181])
#loc399 = loc(fused[#loc183, #loc184])
#loc400 = loc(fused[#loc186, #loc180])
#loc401 = loc(fused[#loc192, #loc191])
#loc402 = loc(fused[#loc193, #loc194])
#loc403 = loc(fused[#loc195, #loc196])
#loc404 = loc(fused[#loc197, #loc198])
#loc405 = loc(fused[#loc200, #loc199])
#loc406 = loc(fused[#loc201, #loc202])
#loc407 = loc(fused[#loc204, #loc198])
#loc408 = loc(fused[#loc206, #loc205])
#loc409 = loc(fused[#loc210, #loc209])
#loc410 = loc(fused[#loc211, #loc212])
#loc411 = loc(fused[#loc213, #loc214])
#loc412 = loc(fused[#loc215, #loc216])
#loc413 = loc(fused[#loc218, #loc217])
#loc414 = loc(fused[#loc219, #loc220])
#loc415 = loc(fused[#loc222, #loc216])
#loc416 = loc(fused[#loc228, #loc227])
#loc417 = loc(fused[#loc229, #loc230])
#loc418 = loc(fused[#loc231, #loc232])
#loc419 = loc(fused[#loc233, #loc234])
#loc420 = loc(fused[#loc236, #loc235])
#loc421 = loc(fused[#loc237, #loc238])
#loc422 = loc(fused[#loc239, #loc240])
#loc423 = loc(fused[#loc241, #loc242, #loc243, #loc238])
#loc424 = loc(fused[#loc244, #loc245])
#loc425 = loc(fused[#loc246, #loc247])
#loc426 = loc(fused[#loc248, #loc249])
#loc427 = loc(fused[#loc251, #loc250])
#loc428 = loc(fused[#loc252, #loc253])
#loc429 = loc(fused[#loc255, #loc249])
#loc430 = loc(fused[#loc257, #loc256])
#loc431 = loc(fused[#loc261, #loc260])
#loc432 = loc(fused[#loc262, #loc263])
#loc433 = loc(fused[#loc264, #loc265])
#loc434 = loc(fused[#loc266, #loc267])
#loc435 = loc(fused[#loc269, #loc268])
#loc436 = loc(fused[#loc270, #loc271])
#loc437 = loc(fused[#loc273, #loc267])
#loc438 = loc(fused[#loc275, #loc274])
#loc439 = loc(fused[#loc279, #loc278])
#loc440 = loc(fused[#loc280, #loc281])
#loc441 = loc(fused[#loc282, #loc283])
#loc442 = loc(fused[#loc284, #loc285, #loc286, #loc281])
#loc443 = loc(fused[#loc287, #loc288])
#loc444 = loc(fused[#loc289, #loc290])
#loc445 = loc(fused[#loc291, #loc292])
#loc446 = loc(fused[#loc294, #loc293])
#loc447 = loc(fused[#loc295, #loc296])
#loc448 = loc(fused[#loc298, #loc292])
#loc449 = loc(fused[#loc304, #loc303])
#loc450 = loc(fused[#loc305, #loc306])
#loc451 = loc(fused[#loc307, #loc308])
#loc452 = loc(fused[#loc309, #loc310])
#loc453 = loc(fused[#loc312, #loc311])
#loc454 = loc(fused[#loc313, #loc314])
#loc455 = loc(fused[#loc316, #loc310])
#loc456 = loc(fused[#loc322, #loc321])
