!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":153:10)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":153:14)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":153:20)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":153:32)
#loc262 = loc(fused[#loc169, #loc170])
#loc263 = loc(fused[#loc171, #loc172])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @globalReturnsTrue() -> !s32i loc(#loc185)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc186)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc187)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_113badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc189)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
    cir.scope {
      %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc192)
      cir.if %3 {
        %4 = cir.const #cir.int<4> : !u64i loc(#loc194)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc194)
        cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
      } loc(#loc193)
    } loc(#loc191)
    cir.scope {
      %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc24)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc197)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc27)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc28)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc198)
    } loc(#loc196)
    cir.return loc(#loc8)
  } loc(#loc188)
  cir.func private @globalReturnsFalse() -> !s32i loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc200)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_11L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc203)
    cir.scope {
      %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc42)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc205)
      cir.if %3 {
        %4 = cir.const #cir.int<4> : !u64i loc(#loc207)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc47)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc207)
        cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc208)
      } loc(#loc206)
    } loc(#loc204)
    cir.scope {
      %2 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc51)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc210)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc56)
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc57)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
      } loc(#loc211)
    } loc(#loc209)
    cir.return loc(#loc35)
  } loc(#loc201)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_11L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc214)
    cir.scope {
      %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc66)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc216)
      cir.if %3 {
        %4 = cir.const #cir.int<4> : !u64i loc(#loc218)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc71)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc218)
        cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc219)
      } loc(#loc217)
    } loc(#loc215)
    cir.scope {
      %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc75)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc221)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc78)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc71)
      } loc(#loc222)
    } loc(#loc220)
    cir.return loc(#loc59)
  } loc(#loc212)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc223)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc224)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_11L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc227)
    cir.scope {
      %2 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc91)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc229)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc97)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc99)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc99)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc231)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc232)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc233)
        cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc234)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc107)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc236)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc109)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc110)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc111)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
          } loc(#loc237)
        } loc(#loc235)
      } loc(#loc230)
    } loc(#loc228)
    cir.scope {
      %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc114)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc239)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc117)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc118)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc117)
      } loc(#loc240)
    } loc(#loc238)
    cir.return loc(#loc84)
  } loc(#loc225)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_11L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc123)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc243)
    cir.scope {
      %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc127)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc245)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc130)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc131)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc131)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc247)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc248)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc249)
        cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc250)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc139)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc252)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc142)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc143)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
          } loc(#loc253)
        } loc(#loc251)
      } loc(#loc246)
    } loc(#loc244)
    cir.scope {
      %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc146)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc255)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc149)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc150)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
      } loc(#loc256)
    } loc(#loc254)
    cir.return loc(#loc120)
  } loc(#loc241)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_114goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_11L8goodB2G1Ev() : () -> () loc(#loc153)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_11L8goodB2G2Ev() : () -> () loc(#loc154)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_11L8goodG2B1Ev() : () -> () loc(#loc155)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_11L8goodG2B2Ev() : () -> () loc(#loc156)
    cir.return loc(#loc152)
  } loc(#loc257)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc258)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc259)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc166)
  cir.func @main(%arg0: !s32i loc(fused[#loc169, #loc170]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc171, #loc172])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc168)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc173)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc174)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc175)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc175)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc176)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc163)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_114goodEv() : () -> () loc(#loc178)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc164)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc165)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_113badEv() : () -> () loc(#loc181)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc166)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc182)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc183)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    cir.return %15 : !s32i loc(#loc264)
  } loc(#loc261)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":24:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":40:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":26:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":26:11)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":28:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":28:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":29:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":33:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":29:8)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":29:26)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":30:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":32:16)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":32:20)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":24:6)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":32:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":34:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":39:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":34:8)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":34:26)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":35:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":38:9)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":38:14)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":60:19)
#loc32 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc33 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":47:1)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":67:1)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":49:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":49:11)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":51:12)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":51:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":52:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":56:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":52:8)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":52:26)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":53:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":55:16)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":55:20)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":47:13)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":55:9)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":57:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":66:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":57:8)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":57:27)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":58:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":61:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":63:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":60:9)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":65:16)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":70:1)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":85:1)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":72:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":72:11)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":74:12)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":74:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":75:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":79:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":75:8)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":75:26)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":76:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":78:16)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":78:20)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":70:13)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":78:9)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":80:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":84:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":80:8)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":80:26)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":81:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":83:16)
#loc79 = loc("/usr/include/stdlib.h":672:1)
#loc80 = loc("/usr/include/stdlib.h":672:45)
#loc81 = loc("/usr/include/stdlib.h":756:1)
#loc82 = loc("/usr/include/stdlib.h":756:70)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":88:1)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":110:1)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":90:5)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":90:11)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":92:12)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":92:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":93:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":103:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":93:8)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":93:27)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":94:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":97:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":99:5)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":96:19)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":96:9)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":101:23)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":101:30)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":101:34)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":101:44)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":101:45)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":101:9)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":102:9)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":102:37)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":102:13)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":102:21)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":102:27)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":102:28)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":102:34)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":102:33)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":104:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":109:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":104:8)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":104:26)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":105:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":108:9)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":108:14)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":113:1)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":130:1)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":115:5)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":115:11)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":117:12)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":117:5)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":118:5)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":123:5)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":118:8)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":118:26)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":119:5)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":121:23)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":121:30)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":121:34)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":121:44)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":121:45)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":121:9)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":122:9)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":122:37)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":122:13)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":122:21)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":122:27)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":122:28)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":122:34)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":122:33)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":124:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":129:5)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":124:8)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":124:26)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":125:5)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":128:9)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":128:14)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":132:1)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":138:1)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":134:5)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":135:5)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":136:5)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":137:5)
#loc157 = loc("/usr/include/stdlib.h":575:1)
#loc158 = loc("/usr/include/stdlib.h":575:41)
#loc159 = loc("/usr/include/time.h":76:1)
#loc160 = loc("/usr/include/time.h":76:38)
#loc161 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc162 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":158:15)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":160:15)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":163:15)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":165:15)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":153:1)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":168:1)
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":154:1)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":156:27)
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":156:22)
#loc176 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":156:5)
#loc177 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":158:5)
#loc178 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":159:5)
#loc179 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":160:5)
#loc180 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":163:5)
#loc181 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":164:5)
#loc182 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":165:5)
#loc183 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":167:12)
#loc184 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_11.cpp":167:5)
#loc185 = loc(fused[#loc1, #loc2])
#loc186 = loc(fused[#loc3, #loc4])
#loc187 = loc(fused[#loc5, #loc6])
#loc188 = loc(fused[#loc7, #loc8])
#loc189 = loc(fused[#loc9, #loc10])
#loc190 = loc(fused[#loc12, #loc11])
#loc191 = loc(fused[#loc13, #loc14])
#loc192 = loc(fused[#loc15, #loc16])
#loc193 = loc(fused[#loc17, #loc14])
#loc194 = loc(fused[#loc18, #loc19])
#loc195 = loc(fused[#loc21, #loc19])
#loc196 = loc(fused[#loc22, #loc23])
#loc197 = loc(fused[#loc24, #loc25])
#loc198 = loc(fused[#loc26, #loc23])
#loc199 = loc(fused[#loc29, #loc30])
#loc200 = loc(fused[#loc32, #loc33])
#loc201 = loc(fused[#loc34, #loc35])
#loc202 = loc(fused[#loc36, #loc37])
#loc203 = loc(fused[#loc39, #loc38])
#loc204 = loc(fused[#loc40, #loc41])
#loc205 = loc(fused[#loc42, #loc43])
#loc206 = loc(fused[#loc44, #loc41])
#loc207 = loc(fused[#loc45, #loc46])
#loc208 = loc(fused[#loc48, #loc46])
#loc209 = loc(fused[#loc49, #loc50])
#loc210 = loc(fused[#loc51, #loc52])
#loc211 = loc(fused[#loc53, #loc54, #loc55, #loc50])
#loc212 = loc(fused[#loc58, #loc59])
#loc213 = loc(fused[#loc60, #loc61])
#loc214 = loc(fused[#loc63, #loc62])
#loc215 = loc(fused[#loc64, #loc65])
#loc216 = loc(fused[#loc66, #loc67])
#loc217 = loc(fused[#loc68, #loc65])
#loc218 = loc(fused[#loc69, #loc70])
#loc219 = loc(fused[#loc72, #loc70])
#loc220 = loc(fused[#loc73, #loc74])
#loc221 = loc(fused[#loc75, #loc76])
#loc222 = loc(fused[#loc77, #loc74])
#loc223 = loc(fused[#loc79, #loc80])
#loc224 = loc(fused[#loc81, #loc82])
#loc225 = loc(fused[#loc83, #loc84])
#loc226 = loc(fused[#loc85, #loc86])
#loc227 = loc(fused[#loc88, #loc87])
#loc228 = loc(fused[#loc89, #loc90])
#loc229 = loc(fused[#loc91, #loc92])
#loc230 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc231 = loc(fused[#loc100, #loc101])
#loc232 = loc(fused[#loc99, #loc101])
#loc233 = loc(fused[#loc98, #loc102])
#loc234 = loc(fused[#loc103, #loc102])
#loc235 = loc(fused[#loc104, #loc105])
#loc236 = loc(fused[#loc106, #loc107])
#loc237 = loc(fused[#loc108, #loc105])
#loc238 = loc(fused[#loc112, #loc113])
#loc239 = loc(fused[#loc114, #loc115])
#loc240 = loc(fused[#loc116, #loc113])
#loc241 = loc(fused[#loc119, #loc120])
#loc242 = loc(fused[#loc121, #loc122])
#loc243 = loc(fused[#loc124, #loc123])
#loc244 = loc(fused[#loc125, #loc126])
#loc245 = loc(fused[#loc127, #loc128])
#loc246 = loc(fused[#loc129, #loc126])
#loc247 = loc(fused[#loc132, #loc133])
#loc248 = loc(fused[#loc131, #loc133])
#loc249 = loc(fused[#loc130, #loc134])
#loc250 = loc(fused[#loc135, #loc134])
#loc251 = loc(fused[#loc136, #loc137])
#loc252 = loc(fused[#loc138, #loc139])
#loc253 = loc(fused[#loc140, #loc137])
#loc254 = loc(fused[#loc144, #loc145])
#loc255 = loc(fused[#loc146, #loc147])
#loc256 = loc(fused[#loc148, #loc145])
#loc257 = loc(fused[#loc151, #loc152])
#loc258 = loc(fused[#loc157, #loc158])
#loc259 = loc(fused[#loc159, #loc160])
#loc260 = loc(fused[#loc161, #loc162])
#loc261 = loc(fused[#loc167, #loc168])
#loc264 = loc(fused[#loc184, #loc183])
