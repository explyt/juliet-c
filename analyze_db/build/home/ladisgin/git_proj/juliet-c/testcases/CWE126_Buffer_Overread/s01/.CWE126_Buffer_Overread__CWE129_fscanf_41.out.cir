!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":22:21)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":22:25)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":124:10)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":124:14)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":124:20)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":124:32)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":83:25)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":83:29)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:23)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":54:25)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":54:29)
#true = #cir.bool<true> : !cir.bool
#loc149 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc58, #loc59])
#loc166 = loc(fused[#loc60, #loc61])
#loc171 = loc(fused[#loc79, #loc80])
#loc182 = loc(fused[#loc115, #loc116])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc145)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc8)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc150)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc149)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc15)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc150)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc150)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc153)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc26)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc26)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc27)
    cir.br ^bb5 loc(#loc23)
  ^bb4:  // pred: ^bb2
    %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc8)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.br ^bb5 loc(#loc19)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc19)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc10)
  } loc(#loc148)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc34)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc36)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc146)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc36)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @badSink(%9) : (!s32i) -> () loc(#loc39)
    cir.return loc(#loc30)
  } loc(#loc155)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc158)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc161)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc162)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc65)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_fscanf_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call @CWE126_Buffer_Overread__CWE129_fscanf_41_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_fscanf_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call @CWE126_Buffer_Overread__CWE129_fscanf_41_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %17 : !s32i loc(#loc169)
  } loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc76)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc79, #loc80])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc172)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc171)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc172)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc172)
    cir.br ^bb2 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc175)
    cir.brcond %5 ^bb3, ^bb8 loc(#loc90)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc92)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc176)
    cir.brcond %8 ^bb4, ^bb5 loc(#loc90)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #true loc(#loc90)
    cir.br ^bb6(%9 : !cir.bool) loc(#loc90)
  ^bb5:  // pred: ^bb3
    %10 = cir.const #false loc(#loc90)
    cir.br ^bb6(%10 : !cir.bool) loc(#loc90)
  ^bb6(%11: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc90)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%11 : !cir.bool) loc(#loc90)
  ^bb8:  // pred: ^bb2
    %12 = cir.const #false loc(#loc90)
    cir.br ^bb9(%12 : !cir.bool) loc(#loc90)
  ^bb9(%13: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc90)
  ^bb10:  // pred: ^bb9
    cir.brcond %13 ^bb11, ^bb12 loc(#loc177)
  ^bb11:  // pred: ^bb10
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc98)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc98)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc99)
    cir.br ^bb13 loc(#loc95)
  ^bb12:  // pred: ^bb10
    %18 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc76)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb13 loc(#loc87)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc87)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc85)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc78)
  } loc(#loc170)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc106)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc108)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc146)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc110)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc110)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc108)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @goodB2GSink(%9) : (!s32i) -> () loc(#loc112)
    cir.return loc(#loc102)
  } loc(#loc178)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc115, #loc116])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc183)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc182)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc183)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc183)
    cir.br ^bb2 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc186)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc187)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc130)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc130)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc131)
    cir.br ^bb5 loc(#loc127)
  ^bb4:  // pred: ^bb2
    %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc132)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    cir.br ^bb5 loc(#loc123)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc123)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc121)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc114)
  } loc(#loc181)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc139)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc141)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc144)
    cir.return loc(#loc135)
  } loc(#loc188)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":45:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":34:23)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":22:1)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":37:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":25:9)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":25:30)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":23:1)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":24:5)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":36:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":28:9)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":35:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":28:13)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":28:21)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":29:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":31:9)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":33:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":30:33)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":30:26)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":30:13)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":34:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":39:1)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":47:1)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":41:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":41:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":43:13)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":43:12)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":43:5)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":45:5)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":45:12)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":46:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":46:5)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":109:1)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":113:1)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":111:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":111:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":112:5)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":112:13)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":129:15)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":131:15)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":134:15)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":136:15)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":124:1)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":139:1)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":125:1)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":127:27)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":127:22)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":127:5)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":129:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":130:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":130:51)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":131:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":134:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":135:5)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":135:50)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":136:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":138:12)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":138:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":94:23)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":83:1)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":97:1)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":86:9)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":86:30)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":84:1)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":85:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":96:5)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:9)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":95:9)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:13)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:21)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:26)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:34)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:36)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":89:9)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":91:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":93:9)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":90:33)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":90:26)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":90:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":94:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":99:1)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":107:1)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":101:5)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":101:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":103:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":103:12)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":103:5)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":105:5)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":105:12)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":105:19)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":106:17)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":106:5)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":54:1)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":69:1)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":57:9)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":57:30)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":55:1)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":56:5)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":68:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":60:9)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":67:9)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":60:13)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":60:21)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":61:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":63:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":65:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":62:33)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":62:26)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":62:13)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":66:23)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":66:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":71:1)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":80:1)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":73:5)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":73:9)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":75:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":75:12)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":75:5)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":78:12)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":78:5)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":79:17)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":79:5)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc6, #loc7])
#loc148 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc13, #loc14])
#loc151 = loc(fused[#loc16, #loc17])
#loc152 = loc(fused[#loc18, #loc19])
#loc153 = loc(fused[#loc20, #loc21])
#loc154 = loc(fused[#loc22, #loc23, #loc24, #loc19])
#loc155 = loc(fused[#loc29, #loc30])
#loc156 = loc(fused[#loc31, #loc32])
#loc157 = loc(fused[#loc35, #loc33])
#loc158 = loc(fused[#loc40, #loc41])
#loc159 = loc(fused[#loc42, #loc43])
#loc160 = loc(fused[#loc44, #loc45])
#loc161 = loc(fused[#loc46, #loc47])
#loc162 = loc(fused[#loc48, #loc49])
#loc163 = loc(fused[#loc50, #loc51])
#loc164 = loc(fused[#loc56, #loc57])
#loc167 = loc(fused[#loc67, #loc68])
#loc168 = loc(fused[#loc71, #loc72])
#loc169 = loc(fused[#loc75, #loc74])
#loc170 = loc(fused[#loc77, #loc78])
#loc172 = loc(fused[#loc81, #loc82])
#loc173 = loc(fused[#loc84, #loc85])
#loc174 = loc(fused[#loc86, #loc87])
#loc175 = loc(fused[#loc88, #loc89])
#loc176 = loc(fused[#loc91, #loc93])
#loc177 = loc(fused[#loc94, #loc95, #loc96, #loc87])
#loc178 = loc(fused[#loc101, #loc102])
#loc179 = loc(fused[#loc103, #loc104])
#loc180 = loc(fused[#loc107, #loc105])
#loc181 = loc(fused[#loc113, #loc114])
#loc183 = loc(fused[#loc117, #loc118])
#loc184 = loc(fused[#loc120, #loc121])
#loc185 = loc(fused[#loc122, #loc123])
#loc186 = loc(fused[#loc124, #loc125])
#loc187 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc188 = loc(fused[#loc134, #loc135])
#loc189 = loc(fused[#loc136, #loc137])
#loc190 = loc(fused[#loc140, #loc138])
#loc191 = loc(fused[#loc142, #loc141])
