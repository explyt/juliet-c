!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc115)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_execlp_12_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc116)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc117)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc118)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc11)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc120)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc17)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc122)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc22)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc25)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc26)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execlp_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc116)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_execlp_12_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc116)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc116)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.scope {
      %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc129)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc129)
      %15 = cir.call %14() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc35)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc35)
      cir.if %16 {
        cir.scope {
          %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc132)
          %18 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc133)
          %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc46)
          %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
          %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc46)
          cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc132)
          cir.scope {
            %22 = cir.const #cir.int<100> : !s32i loc(#loc50)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc50)
            %24 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc135)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc52)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc52)
            %28 = cir.cmp(gt, %25, %27) : !u64i, !cir.bool loc(#loc136)
            cir.if %28 {
              %29 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc54)
              %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc11)
              %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc11)
              %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc12)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc12)
              %34 = cir.call @fopen(%31, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc54)
              cir.store %34, %18 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
              cir.scope {
                %35 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc59)
                %36 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
                %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc60)
                %38 = cir.cmp(ne, %35, %37) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc140)
                cir.if %38 {
                  cir.scope {
                    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
                    %42 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                    %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc66)
                    %44 = cir.const #cir.int<100> : !s32i loc(#loc67)
                    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc67)
                    %46 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                    %47 = cir.binop(sub, %45, %46) : !u64i loc(#loc143)
                    %48 = cir.cast(integral, %47 : !u64i), !s32i loc(#loc143)
                    %49 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
                    %50 = cir.call @fgets(%43, %48, %49) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc70)
                    %51 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
                    %52 = cir.cast(bitcast, %51 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc71)
                    %53 = cir.cmp(eq, %50, %52) : !cir.ptr<!s8i>, !cir.bool loc(#loc144)
                    cir.if %53 {
                      %54 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc17)
                      %55 = cir.cast(array_to_ptrdecay, %54 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc17)
                      cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc73)
                      %56 = cir.const #cir.int<0> : !s32i loc(#loc74)
                      %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc74)
                      %58 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                      %59 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                      %60 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                      cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc146)
                    } loc(#loc145)
                  } loc(#loc142)
                  %39 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
                  %40 = cir.call @fclose(%39) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc79)
                } loc(#loc141)
              } loc(#loc139)
            } loc(#loc137)
          } loc(#loc134)
        } loc(#loc131)
      } else {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc80)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
        %19 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc22)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc22)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc80)
      } loc(#loc130)
    } loc(#loc128)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc25)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc25)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc82)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc82)
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc26)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc26)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc85)
    cir.return loc(#loc28)
  } loc(#loc125)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execlp_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc88)
    cir.return loc(#loc87)
  } loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc115)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc115)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc115)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.scope {
      %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc153)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc153)
      %15 = cir.call %14() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc98)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc98)
      cir.if %16 {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc103)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %19 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc105)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc105)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
      } else {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc106)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
        %19 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc108)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc108)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
      } loc(#loc154)
    } loc(#loc152)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc109)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc109)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc110)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc110)
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc111)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc111)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc114)
    cir.return loc(#loc91)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_12.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":100:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":100:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":54:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":54:28)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdio.h":264:1)
#loc10 = loc("/usr/include/stdio.h":266:3)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":65:31)
#loc12 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":65:41)
#loc13 = loc("/usr/include/stdio.h":654:1)
#loc14 = loc("/usr/include/stdio.h":655:59)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":71:35)
#loc18 = loc("/usr/include/stdio.h":184:1)
#loc19 = loc("/usr/include/stdio.h":184:36)
#loc20 = loc("/usr/include/string.h":149:1)
#loc21 = loc("/usr/include/string.h":150:14)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":83:22)
#loc23 = loc("/usr/include/unistd.h":605:1)
#loc24 = loc("/usr/include/unistd.h":606:14)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":88:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":88:38)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":51:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":89:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":53:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":53:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":55:12)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":55:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":56:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":84:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":56:8)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":56:33)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":57:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":79:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":81:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":58:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":78:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":60:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":60:41)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":61:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":61:20)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":60:30)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":60:37)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":63:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":77:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":63:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":63:21)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":63:31)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":64:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":65:25)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":65:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":65:44)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":66:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":76:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":66:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":66:30)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":67:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":69:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":74:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":69:31)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":69:36)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":69:35)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":69:51)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":69:55)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":69:65)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":69:25)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":69:75)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":70:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":71:25)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":73:41)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":73:25)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":73:30)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":73:37)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":75:28)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":75:21)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":83:9)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":83:16)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":88:25)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":88:52)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":88:66)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":88:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":118:1)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":121:1)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":120:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":120:13)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":97:1)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":116:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":99:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":99:12)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":101:12)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":101:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":102:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":111:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":102:8)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":102:33)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":103:5)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":106:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":108:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":105:9)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":105:16)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":105:22)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":110:9)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":110:16)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":110:22)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":115:12)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":115:25)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":115:38)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":115:52)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":115:66)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execlp_12.c":115:5)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc13, #loc14])
#loc121 = loc(fused[#loc15, #loc16])
#loc122 = loc(fused[#loc18, #loc19])
#loc123 = loc(fused[#loc20, #loc21])
#loc124 = loc(fused[#loc23, #loc24])
#loc125 = loc(fused[#loc27, #loc28])
#loc126 = loc(fused[#loc29, #loc30])
#loc127 = loc(fused[#loc32, #loc31])
#loc128 = loc(fused[#loc33, #loc34])
#loc129 = loc(fused[#loc35, #loc36])
#loc130 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc131 = loc(fused[#loc40, #loc41])
#loc132 = loc(fused[#loc42, #loc43])
#loc133 = loc(fused[#loc44, #loc45])
#loc134 = loc(fused[#loc48, #loc49])
#loc135 = loc(fused[#loc50, #loc51])
#loc136 = loc(fused[#loc50, #loc52])
#loc137 = loc(fused[#loc53, #loc49])
#loc138 = loc(fused[#loc55, #loc56])
#loc139 = loc(fused[#loc57, #loc58])
#loc140 = loc(fused[#loc59, #loc60])
#loc141 = loc(fused[#loc61, #loc58])
#loc142 = loc(fused[#loc62, #loc63])
#loc143 = loc(fused[#loc67, #loc68])
#loc144 = loc(fused[#loc70, #loc71])
#loc145 = loc(fused[#loc72, #loc63])
#loc146 = loc(fused[#loc75, #loc74])
#loc147 = loc(fused[#loc86, #loc87])
#loc148 = loc(fused[#loc88, #loc89])
#loc149 = loc(fused[#loc90, #loc91])
#loc150 = loc(fused[#loc92, #loc93])
#loc151 = loc(fused[#loc95, #loc94])
#loc152 = loc(fused[#loc96, #loc97])
#loc153 = loc(fused[#loc98, #loc99])
#loc154 = loc(fused[#loc100, #loc101, #loc102, #loc97])
