!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fprintf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc38)
  cir.global "private"  external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc39)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fprintf_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%1) loc(#loc11)
      } do {
        %0 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc12)
        %1 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc39)
        %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc13)
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc6)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc6)
        %7 = cir.call @fprintf(%2, %4, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc12)
        cir.break loc(#loc14)
      } loc(#loc41)
    } loc(#loc41)
    cir.return loc(#loc8)
  } loc(#loc40)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fprintf_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc43)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc17)
    cir.return loc(#loc16)
  } loc(#loc42)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc44)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fprintf failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc26)
        cir.condition(%1) loc(#loc26)
      } do {
        cir.scope {
          %0 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
          %1 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc39)
          %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc31)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc31)
          %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc32)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc32)
          %7 = cir.call @fprintf(%2, %4, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc29)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc33)
          %9 = cir.cmp(lt, %7, %8) : !s32i, !s32i loc(#loc48)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc34)
          cir.if %10 {
            %11 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc21)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc36)
          } loc(#loc49)
        } loc(#loc47)
        cir.break loc(#loc37)
      } loc(#loc46)
    } loc(#loc46)
    cir.return loc(#loc23)
  } loc(#loc45)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fprintf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":357:1)
#loc2 = loc("/usr/include/stdio.h":358:45)
#loc3 = loc("/usr/include/stdio.h":150:1)
#loc4 = loc("/usr/include/stdio.h":150:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":29:25)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":29:33)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":24:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":32:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":26:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":31:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":26:11)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":29:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":29:17)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":30:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":52:1)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":55:1)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":54:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":54:11)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":46:23)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":39:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":50:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":41:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":49:5)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":41:11)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":44:9)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":47:9)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":44:13)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":44:21)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":44:29)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":44:37)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":44:49)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":44:47)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":45:9)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":46:13)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fprintf_16.c":48:9)
#loc38 = loc(fused[#loc1, #loc2])
#loc39 = loc(fused[#loc3, #loc4])
#loc40 = loc(fused[#loc7, #loc8])
#loc41 = loc(fused[#loc9, #loc10])
#loc42 = loc(fused[#loc15, #loc16])
#loc43 = loc(fused[#loc17, #loc18])
#loc44 = loc(fused[#loc19, #loc20])
#loc45 = loc(fused[#loc22, #loc23])
#loc46 = loc(fused[#loc24, #loc25])
#loc47 = loc(fused[#loc27, #loc28])
#loc48 = loc(fused[#loc29, #loc33])
#loc49 = loc(fused[#loc35, #loc28])
