!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":25:64)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":25:72)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":48:69)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":48:77)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":72:69)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":72:77)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":91:68)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":91:76)
#loc104 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc30, #loc31])
#loc123 = loc(fused[#loc59, #loc60])
#loc133 = loc(fused[#loc86, #loc87])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc101)
  cir.func private  @printLongLongLine(!s64i) loc(#loc102)
  cir.func  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badSink(%arg0: !s64i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc104)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc9)
    cir.scope {
      %1 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_badGlobal : !cir.ptr<!s32i> loc(#loc101)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc108)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc18)
          %6 = cir.unary(inc, %5) : !s64i, !s64i loc(#loc18)
          cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc109)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc17)
          cir.store %7, %4 : !s64i, !cir.ptr<!s64i> loc(#loc108)
          %8 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc20)
          cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc21)
        } loc(#loc107)
      } loc(#loc106)
    } loc(#loc105)
    cir.return loc(#loc6)
  } loc(#loc103)
  cir.global "private"  external @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Global : !s32i {alignment = 4 : i64} loc(#loc110)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc27)
  cir.func  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Sink(%arg0: !s64i loc(fused[#loc30, #loc31])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc113)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc32)
    cir.scope {
      %1 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc110)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc35)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc39)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc42)
          %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc43)
          %6 = cir.cmp(lt, %4, %5) : !s64i, !s32i loc(#loc117)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc44)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc119)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc50)
            %10 = cir.unary(inc, %9) : !s64i, !s64i loc(#loc50)
            cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc120)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc49)
            cir.store %11, %8 : !s64i, !cir.ptr<!s64i> loc(#loc119)
            %12 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc52)
            cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc53)
          } else {
            %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc27)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc27)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc54)
          } loc(#loc118)
        } loc(#loc116)
      } loc(#loc115)
    } loc(#loc114)
    cir.return loc(#loc29)
  } loc(#loc112)
  cir.global "private"  external @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Global : !s32i {alignment = 4 : i64} loc(#loc121)
  cir.func  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Sink(%arg0: !s64i loc(fused[#loc59, #loc60])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc123)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc61)
    cir.scope {
      %1 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc121)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc64)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc68)
          %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc69)
          %6 = cir.cmp(lt, %4, %5) : !s64i, !s32i loc(#loc127)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc70)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc129)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc76)
            %10 = cir.unary(inc, %9) : !s64i, !s64i loc(#loc76)
            cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc130)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc75)
            cir.store %11, %8 : !s64i, !cir.ptr<!s64i> loc(#loc129)
            %12 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc78)
            cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc79)
          } else {
            %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc80)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc80)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc81)
          } loc(#loc128)
        } loc(#loc126)
      } loc(#loc125)
    } loc(#loc124)
    cir.return loc(#loc58)
  } loc(#loc122)
  cir.global "private"  external @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BGlobal : !s32i {alignment = 4 : i64} loc(#loc131)
  cir.func  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BSink(%arg0: !s64i loc(fused[#loc86, #loc87])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc133)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc88)
    cir.scope {
      %1 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_preinc_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc131)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc91)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc91)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc137)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc97)
          %6 = cir.unary(inc, %5) : !s64i, !s64i loc(#loc97)
          cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc138)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc96)
          cir.store %7, %4 : !s64i, !cir.ptr<!s64i> loc(#loc137)
          %8 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc99)
          cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc100)
        } loc(#loc136)
      } loc(#loc135)
    } loc(#loc134)
    cir.return loc(#loc85)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":23:1)
#loc2 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":23:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":25:1)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":36:1)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":26:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":27:5)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":35:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":27:8)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":28:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":29:9)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":34:9)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":32:13)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":32:30)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":31:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":31:15)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":33:31)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":33:13)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":43:1)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":43:12)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":53:19)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":66:23)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":48:1)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":69:1)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":49:1)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":50:5)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":68:5)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":50:8)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":51:5)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":54:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":56:5)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":53:9)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":58:9)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":67:9)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":58:13)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":58:20)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":58:18)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":59:9)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":63:9)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":65:9)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":61:13)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":61:30)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":60:13)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":60:15)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":62:31)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":62:13)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":66:13)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":44:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":44:12)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":72:1)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":88:1)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":73:1)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":74:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":87:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":74:8)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":75:5)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":77:9)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":86:9)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":77:13)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":77:20)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":77:18)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":78:9)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":82:9)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":84:9)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":80:13)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":80:30)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":79:13)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":79:15)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":81:31)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":81:13)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":85:23)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":85:13)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":45:1)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":45:12)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":91:1)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":102:1)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":92:1)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":93:5)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":101:5)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":93:8)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":94:5)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":95:9)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":100:9)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":98:13)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":98:30)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":97:13)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":97:15)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":99:31)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_22b.c":99:13)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc10, #loc11])
#loc106 = loc(fused[#loc13, #loc11])
#loc107 = loc(fused[#loc14, #loc15])
#loc108 = loc(fused[#loc16, #loc17])
#loc109 = loc(fused[#loc18, #loc19])
#loc110 = loc(fused[#loc22, #loc23])
#loc111 = loc(fused[#loc24, #loc25])
#loc112 = loc(fused[#loc28, #loc29])
#loc114 = loc(fused[#loc33, #loc34])
#loc115 = loc(fused[#loc36, #loc37, #loc38, #loc34])
#loc116 = loc(fused[#loc40, #loc41])
#loc117 = loc(fused[#loc42, #loc43])
#loc118 = loc(fused[#loc45, #loc46, #loc47, #loc41])
#loc119 = loc(fused[#loc48, #loc49])
#loc120 = loc(fused[#loc50, #loc51])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc58])
#loc124 = loc(fused[#loc62, #loc63])
#loc125 = loc(fused[#loc65, #loc63])
#loc126 = loc(fused[#loc66, #loc67])
#loc127 = loc(fused[#loc68, #loc69])
#loc128 = loc(fused[#loc71, #loc72, #loc73, #loc67])
#loc129 = loc(fused[#loc74, #loc75])
#loc130 = loc(fused[#loc76, #loc77])
#loc131 = loc(fused[#loc82, #loc83])
#loc132 = loc(fused[#loc84, #loc85])
#loc134 = loc(fused[#loc89, #loc90])
#loc135 = loc(fused[#loc92, #loc90])
#loc136 = loc(fused[#loc93, #loc94])
#loc137 = loc(fused[#loc95, #loc96])
#loc138 = loc(fused[#loc97, #loc98])
