!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc136)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_fgets_add_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc139)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_add_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc144)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc144)
      cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc144)
      cir.scope {
        %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc24)
        %8 = cir.const #cir.int<3> : !s32i loc(#loc25)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc25)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc25)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc25)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc25)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc25)
        %14 = cir.binop(add, %11, %13) : !u64i loc(#loc25)
        %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc25)
        %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
        %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc27)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
        %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc33)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc36)
        } loc(#loc147)
      } loc(#loc145)
    } loc(#loc143)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_badData : !cir.ptr<!s32i> loc(#loc139)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc150)
    cir.call %4() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc13)
  } loc(#loc140)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_add_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc153)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc151)
  cir.func private @printIntLine(!s32i) loc(#loc154)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_badData : !cir.ptr<!s32i> loc(#loc139)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc158)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc57)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc158)
      %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc59)
    } loc(#loc157)
    cir.return loc(#loc50)
  } loc(#loc155)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc159)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc68)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData : !cir.ptr<!s32i> loc(#loc159)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %5 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc165)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    cir.return loc(#loc63)
  } loc(#loc160)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData : !cir.ptr<!s32i> loc(#loc159)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc169)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc81)
      %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc82)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc169)
      %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc84)
    } loc(#loc168)
    cir.return loc(#loc75)
  } loc(#loc166)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc170)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc175)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc175)
      cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc175)
      cir.scope {
        %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
        %8 = cir.const #cir.int<3> : !s32i loc(#loc100)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc100)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc100)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc100)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc100)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc100)
        %14 = cir.binop(add, %11, %13) : !u64i loc(#loc100)
        %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc100)
        %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
        %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
        %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc102)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
        %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc108)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc111)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc111)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc112)
        } loc(#loc178)
      } loc(#loc176)
    } loc(#loc174)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData : !cir.ptr<!s32i> loc(#loc170)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %4 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc181)
    cir.call %4() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc115)
    cir.return loc(#loc88)
  } loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc117)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData : !cir.ptr<!s32i> loc(#loc170)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc125)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc185)
      cir.if %5 {
        %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc187)
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc130)
        %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc131)
        cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc187)
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc133)
      } else {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc117)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc117)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc134)
      } loc(#loc186)
    } loc(#loc184)
    cir.return loc(#loc119)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":53:23)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":22:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":22:12)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":38:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":58:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":40:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":40:9)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":42:12)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":42:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":43:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":55:5)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":44:9)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":44:45)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:9)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":54:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:19)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:32)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:49)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:13)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":46:59)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":47:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":50:9)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":52:9)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":49:25)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":49:20)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":49:13)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":49:36)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":53:13)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":56:57)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":56:5)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":57:5)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":57:13)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":124:1)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":128:1)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":126:5)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":126:13)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":127:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":127:13)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":28:1)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":36:1)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":30:5)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":30:16)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":31:5)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":35:5)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":33:9)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":33:29)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":33:22)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":34:22)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":34:9)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":23:1)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":23:12)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":75:1)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":84:1)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":77:5)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":77:9)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":79:12)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":79:5)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":81:12)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":81:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":82:61)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":82:5)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":83:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":83:17)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":65:1)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":73:1)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":67:5)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":67:16)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":68:5)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":72:5)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":70:9)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":70:29)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":70:22)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":71:22)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":71:9)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":24:1)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":24:12)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":102:1)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":122:1)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":104:5)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":104:9)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":106:12)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":106:5)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":107:5)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":119:5)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":108:9)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":108:45)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:9)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":118:9)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:19)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:32)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:49)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:13)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":110:59)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":111:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":114:9)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":116:9)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":113:25)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":113:20)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":113:13)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":113:36)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":117:23)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":117:13)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":120:61)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":120:5)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":121:5)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":121:17)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":98:19)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":87:1)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":100:1)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":89:5)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":89:16)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":91:5)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":99:5)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":91:9)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":91:16)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":92:5)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":95:5)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":97:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":93:9)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":93:29)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":93:22)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":94:22)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":94:9)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_add_45.c":98:9)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc10, #loc11])
#loc140 = loc(fused[#loc12, #loc13])
#loc141 = loc(fused[#loc14, #loc15])
#loc142 = loc(fused[#loc17, #loc16])
#loc143 = loc(fused[#loc18, #loc19])
#loc144 = loc(fused[#loc20, #loc21])
#loc145 = loc(fused[#loc22, #loc23])
#loc146 = loc(fused[#loc27, #loc28])
#loc147 = loc(fused[#loc29, #loc30, #loc31, #loc23])
#loc148 = loc(fused[#loc34, #loc35])
#loc149 = loc(fused[#loc38, #loc37])
#loc150 = loc(fused[#loc39, #loc40])
#loc151 = loc(fused[#loc41, #loc42])
#loc152 = loc(fused[#loc43, #loc44])
#loc153 = loc(fused[#loc45, #loc46])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc49, #loc50])
#loc156 = loc(fused[#loc51, #loc52])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc55, #loc56])
#loc159 = loc(fused[#loc60, #loc61])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc64, #loc65])
#loc162 = loc(fused[#loc67, #loc66])
#loc163 = loc(fused[#loc69, #loc68])
#loc164 = loc(fused[#loc71, #loc70])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc74, #loc75])
#loc167 = loc(fused[#loc76, #loc77])
#loc168 = loc(fused[#loc78, #loc79])
#loc169 = loc(fused[#loc80, #loc81])
#loc170 = loc(fused[#loc85, #loc86])
#loc171 = loc(fused[#loc87, #loc88])
#loc172 = loc(fused[#loc89, #loc90])
#loc173 = loc(fused[#loc92, #loc91])
#loc174 = loc(fused[#loc93, #loc94])
#loc175 = loc(fused[#loc95, #loc96])
#loc176 = loc(fused[#loc97, #loc98])
#loc177 = loc(fused[#loc102, #loc103])
#loc178 = loc(fused[#loc104, #loc105, #loc106, #loc98])
#loc179 = loc(fused[#loc109, #loc110])
#loc180 = loc(fused[#loc114, #loc113])
#loc181 = loc(fused[#loc115, #loc116])
#loc182 = loc(fused[#loc118, #loc119])
#loc183 = loc(fused[#loc120, #loc121])
#loc184 = loc(fused[#loc122, #loc123])
#loc185 = loc(fused[#loc124, #loc125])
#loc186 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc187 = loc(fused[#loc129, #loc130])
