!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":191:10)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":191:14)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":191:20)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":191:32)
#loc271 = loc(fused[#loc73, #loc74])
#loc272 = loc(fused[#loc75, #loc76])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc241)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc242)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc243)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc244)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc246)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc248)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc24)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc251)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc254)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc254)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc254)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc33)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc33)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc33)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc33)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc33)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc33)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc33)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc33)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc243)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc256)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc44)
            } loc(#loc257)
          } loc(#loc255)
        } loc(#loc253)
      } loc(#loc252)
    } loc(#loc250)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc47)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc48)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc260)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc50)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
        %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc262)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc52)
      } loc(#loc261)
    } loc(#loc259)
    cir.return loc(#loc15)
  } loc(#loc247)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc266)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc54)
  } loc(#loc263)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc268)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc269)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc271)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc272)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc80)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_14_good : !cir.ptr<!cir.func<!void ()>> loc(#loc273)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_14_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_14_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc274)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_14_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    cir.return %17 : !s32i loc(#loc275)
  } loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc92)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc98)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc102)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc103)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc280)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc283)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc283)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc283)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc112)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc112)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc112)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc112)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc112)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc112)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc112)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc112)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc243)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc114)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc285)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc120)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc287)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc124)
            } loc(#loc286)
          } loc(#loc284)
        } loc(#loc282)
      } loc(#loc281)
    } loc(#loc279)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc127)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc128)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc289)
      cir.if %6 {
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc136)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc292)
          cir.if %9 {
            %10 = cir.const #cir.int<100> : !s32i loc(#loc140)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc294)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc142)
          } else {
            %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc92)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc92)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc143)
          } loc(#loc293)
        } loc(#loc291)
      } loc(#loc290)
    } loc(#loc288)
    cir.return loc(#loc94)
  } loc(#loc276)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc296)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc149)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc153)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc154)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc299)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc302)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc302)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc302)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc162)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc163)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc163)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc163)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc163)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc163)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc163)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc163)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc163)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc243)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc164)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc165)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc304)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc170)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc171)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc174)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc174)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc175)
            } loc(#loc305)
          } loc(#loc303)
        } loc(#loc301)
      } loc(#loc300)
    } loc(#loc298)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc178)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc179)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc308)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc184)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc311)
          cir.if %9 {
            %10 = cir.const #cir.int<100> : !s32i loc(#loc188)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
            %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc313)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc190)
          } else {
            %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc191)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc191)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc192)
          } loc(#loc312)
        } loc(#loc310)
      } loc(#loc309)
    } loc(#loc307)
    cir.return loc(#loc145)
  } loc(#loc295)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc315)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc198)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc202)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc203)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc318)
      cir.if %6 {
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc207)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc207)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc208)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc209)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
      } loc(#loc319)
    } loc(#loc317)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc213)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc214)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc322)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc216)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc217)
        %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc324)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc218)
      } loc(#loc323)
    } loc(#loc321)
    cir.return loc(#loc194)
  } loc(#loc314)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc326)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc223)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc224)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc228)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc229)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc329)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc231)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
      } loc(#loc330)
    } loc(#loc328)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc241)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc235)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc236)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc333)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc238)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc239)
        %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc335)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc240)
      } loc(#loc334)
    } loc(#loc332)
    cir.return loc(#loc220)
  } loc(#loc325)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":24:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":50:1)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":26:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":26:9)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":28:13)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":28:12)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":28:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":29:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":44:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":29:8)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":29:20)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":30:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":31:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":43:9)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":32:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":32:49)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":34:13)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":42:13)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":34:23)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":34:36)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":34:53)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":34:17)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":34:63)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":35:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":38:13)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":40:13)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":37:29)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":37:24)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":37:17)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":37:40)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":41:17)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":45:5)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":49:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":45:8)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":45:20)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":46:5)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":48:22)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":48:28)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":48:9)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":174:1)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":180:1)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":176:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":176:14)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":177:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":177:14)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":178:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":178:14)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":179:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":179:14)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":196:15)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":198:15)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":201:15)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":203:15)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":191:1)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":206:1)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":192:1)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":194:27)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":194:22)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":194:5)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":196:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":197:5)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":197:53)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":198:5)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":201:5)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":202:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":202:52)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":203:5)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":205:12)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":205:5)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":81:19)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":92:23)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":57:1)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":95:1)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":59:5)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":59:9)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":61:13)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":61:12)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":61:5)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":62:5)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":77:5)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":62:8)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":62:20)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":63:5)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":64:9)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":76:9)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":65:13)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":65:49)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":67:13)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":75:13)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":67:23)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":67:36)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":67:53)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":67:17)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":67:63)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":68:13)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":71:13)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":73:13)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":70:29)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":70:24)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":70:17)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":70:40)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":74:27)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":74:17)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":78:5)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":94:5)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":78:8)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":78:20)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":79:5)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":82:5)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":84:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":81:9)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":86:9)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":93:9)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":86:13)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":86:21)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":87:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":89:9)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":91:9)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":88:26)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":88:32)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":88:13)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":92:13)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":98:1)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":131:1)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":100:5)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":100:9)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":102:13)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":102:12)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":102:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":103:5)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":118:5)
#loc153 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":103:8)
#loc154 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":103:20)
#loc155 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":104:5)
#loc156 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":105:9)
#loc157 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":117:9)
#loc158 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":106:13)
#loc159 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":106:49)
#loc160 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":108:13)
#loc161 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":116:13)
#loc162 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":108:23)
#loc163 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":108:36)
#loc164 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":108:53)
#loc165 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":108:17)
#loc166 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":108:63)
#loc167 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":109:13)
#loc168 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":112:13)
#loc169 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":114:13)
#loc170 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":111:29)
#loc171 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":111:24)
#loc172 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":111:17)
#loc173 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":111:40)
#loc174 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":115:27)
#loc175 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":115:17)
#loc176 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":119:5)
#loc177 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":130:5)
#loc178 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":119:8)
#loc179 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":119:20)
#loc180 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":120:5)
#loc181 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":122:9)
#loc182 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":129:9)
#loc183 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":122:13)
#loc184 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":122:21)
#loc185 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":123:9)
#loc186 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":125:9)
#loc187 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":127:9)
#loc188 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":124:26)
#loc189 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":124:32)
#loc190 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":124:13)
#loc191 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":128:23)
#loc192 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":128:13)
#loc193 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":134:1)
#loc194 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":154:1)
#loc195 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":136:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":136:9)
#loc197 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":138:13)
#loc198 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":138:12)
#loc199 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":138:5)
#loc200 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":139:5)
#loc201 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":148:5)
#loc202 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":139:8)
#loc203 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":139:20)
#loc204 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":140:5)
#loc205 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":143:5)
#loc206 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":145:5)
#loc207 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":142:19)
#loc208 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":142:9)
#loc209 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":147:16)
#loc210 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":147:9)
#loc211 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":149:5)
#loc212 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":153:5)
#loc213 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":149:8)
#loc214 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":149:20)
#loc215 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":150:5)
#loc216 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":152:22)
#loc217 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":152:28)
#loc218 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":152:9)
#loc219 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":157:1)
#loc220 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":172:1)
#loc221 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":159:5)
#loc222 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":159:9)
#loc223 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":161:13)
#loc224 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":161:12)
#loc225 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":161:5)
#loc226 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":162:5)
#loc227 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":166:5)
#loc228 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":162:8)
#loc229 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":162:20)
#loc230 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":163:5)
#loc231 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":165:16)
#loc232 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":165:9)
#loc233 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":167:5)
#loc234 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":171:5)
#loc235 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":167:8)
#loc236 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":167:20)
#loc237 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":168:5)
#loc238 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":170:22)
#loc239 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":170:28)
#loc240 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_14.c":170:9)
#loc241 = loc(fused[#loc1, #loc2])
#loc242 = loc(fused[#loc3, #loc4])
#loc243 = loc(fused[#loc5, #loc6])
#loc244 = loc(fused[#loc7, #loc8])
#loc245 = loc(fused[#loc9, #loc10])
#loc246 = loc(fused[#loc12, #loc13])
#loc247 = loc(fused[#loc14, #loc15])
#loc248 = loc(fused[#loc16, #loc17])
#loc249 = loc(fused[#loc20, #loc18])
#loc250 = loc(fused[#loc21, #loc22])
#loc251 = loc(fused[#loc23, #loc24])
#loc252 = loc(fused[#loc25, #loc22])
#loc253 = loc(fused[#loc26, #loc27])
#loc254 = loc(fused[#loc28, #loc29])
#loc255 = loc(fused[#loc30, #loc31])
#loc256 = loc(fused[#loc35, #loc36])
#loc257 = loc(fused[#loc37, #loc38, #loc39, #loc31])
#loc258 = loc(fused[#loc42, #loc43])
#loc259 = loc(fused[#loc45, #loc46])
#loc260 = loc(fused[#loc47, #loc48])
#loc261 = loc(fused[#loc49, #loc46])
#loc262 = loc(fused[#loc50, #loc51])
#loc263 = loc(fused[#loc53, #loc54])
#loc264 = loc(fused[#loc55, #loc56])
#loc265 = loc(fused[#loc57, #loc58])
#loc266 = loc(fused[#loc59, #loc60])
#loc267 = loc(fused[#loc61, #loc62])
#loc268 = loc(fused[#loc63, #loc64])
#loc269 = loc(fused[#loc65, #loc66])
#loc270 = loc(fused[#loc71, #loc72])
#loc273 = loc(fused[#loc82, #loc83])
#loc274 = loc(fused[#loc86, #loc87])
#loc275 = loc(fused[#loc90, #loc89])
#loc276 = loc(fused[#loc93, #loc94])
#loc277 = loc(fused[#loc95, #loc96])
#loc278 = loc(fused[#loc99, #loc97])
#loc279 = loc(fused[#loc100, #loc101])
#loc280 = loc(fused[#loc102, #loc103])
#loc281 = loc(fused[#loc104, #loc101])
#loc282 = loc(fused[#loc105, #loc106])
#loc283 = loc(fused[#loc107, #loc108])
#loc284 = loc(fused[#loc109, #loc110])
#loc285 = loc(fused[#loc114, #loc115])
#loc286 = loc(fused[#loc116, #loc117, #loc118, #loc110])
#loc287 = loc(fused[#loc121, #loc122])
#loc288 = loc(fused[#loc125, #loc126])
#loc289 = loc(fused[#loc127, #loc128])
#loc290 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc291 = loc(fused[#loc133, #loc134])
#loc292 = loc(fused[#loc135, #loc136])
#loc293 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc294 = loc(fused[#loc140, #loc141])
#loc295 = loc(fused[#loc144, #loc145])
#loc296 = loc(fused[#loc146, #loc147])
#loc297 = loc(fused[#loc150, #loc148])
#loc298 = loc(fused[#loc151, #loc152])
#loc299 = loc(fused[#loc153, #loc154])
#loc300 = loc(fused[#loc155, #loc152])
#loc301 = loc(fused[#loc156, #loc157])
#loc302 = loc(fused[#loc158, #loc159])
#loc303 = loc(fused[#loc160, #loc161])
#loc304 = loc(fused[#loc165, #loc166])
#loc305 = loc(fused[#loc167, #loc168, #loc169, #loc161])
#loc306 = loc(fused[#loc172, #loc173])
#loc307 = loc(fused[#loc176, #loc177])
#loc308 = loc(fused[#loc178, #loc179])
#loc309 = loc(fused[#loc180, #loc177])
#loc310 = loc(fused[#loc181, #loc182])
#loc311 = loc(fused[#loc183, #loc184])
#loc312 = loc(fused[#loc185, #loc186, #loc187, #loc182])
#loc313 = loc(fused[#loc188, #loc189])
#loc314 = loc(fused[#loc193, #loc194])
#loc315 = loc(fused[#loc195, #loc196])
#loc316 = loc(fused[#loc199, #loc197])
#loc317 = loc(fused[#loc200, #loc201])
#loc318 = loc(fused[#loc202, #loc203])
#loc319 = loc(fused[#loc204, #loc205, #loc206, #loc201])
#loc320 = loc(fused[#loc210, #loc209])
#loc321 = loc(fused[#loc211, #loc212])
#loc322 = loc(fused[#loc213, #loc214])
#loc323 = loc(fused[#loc215, #loc212])
#loc324 = loc(fused[#loc216, #loc217])
#loc325 = loc(fused[#loc219, #loc220])
#loc326 = loc(fused[#loc221, #loc222])
#loc327 = loc(fused[#loc225, #loc223])
#loc328 = loc(fused[#loc226, #loc227])
#loc329 = loc(fused[#loc228, #loc229])
#loc330 = loc(fused[#loc230, #loc227])
#loc331 = loc(fused[#loc232, #loc231])
#loc332 = loc(fused[#loc233, #loc234])
#loc333 = loc(fused[#loc235, #loc236])
#loc334 = loc(fused[#loc237, #loc234])
#loc335 = loc(fused[#loc238, #loc239])
