!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":29:23)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":29:28)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":64:27)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":64:32)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":84:27)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":84:32)
#true = #cir.bool<true> : !cir.bool
#loc133 = loc(fused[#loc12, #loc13])
#loc147 = loc(fused[#loc52, #loc53])
#loc155 = loc(fused[#loc73, #loc74])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc128)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc129)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc133)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc135)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc135)
      cir.store %2, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc135)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc21)
        %4 = cir.const #cir.int<3> : !s32i loc(#loc22)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc22)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc22)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc22)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
        %10 = cir.binop(add, %7, %9) : !u64i loc(#loc22)
        %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc22)
        %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc129)
        %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc24)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
        %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc137)
        cir.if %16 {
          %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
          %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc30)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
          cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc139)
        } else {
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc33)
        } loc(#loc138)
      } loc(#loc136)
    } loc(#loc134)
    cir.return loc(#loc11)
  } loc(#loc132)
  cir.func private @printIntLine(!s32i) loc(#loc140)
  cir.func @_ZN44CWE190_Integer_Overflow__int_fgets_square_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc40)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc42)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc145)
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
      %5 = cir.binop(mul, %3, %4) nsw : !s32i loc(#loc47)
      cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
      %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc49)
    } loc(#loc144)
    cir.return loc(#loc37)
  } loc(#loc141)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc52, #loc53])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc147)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc54)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.return loc(#loc51)
  } loc(#loc146)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc63)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc153)
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
      %5 = cir.binop(mul, %3, %4) nsw : !s32i loc(#loc68)
      cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
      %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc69)
      cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc70)
    } loc(#loc152)
    cir.return loc(#loc58)
  } loc(#loc149)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc73, #loc74])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc155)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc75)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc157)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc157)
      cir.store %2, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc157)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc82)
        %4 = cir.const #cir.int<3> : !s32i loc(#loc83)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc83)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc83)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc83)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc83)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc83)
        %10 = cir.binop(add, %7, %9) : !u64i loc(#loc83)
        %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc83)
        %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc129)
        %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
        %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc85)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc86)
        %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc159)
        cir.if %16 {
          %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
          %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc91)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
          cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc161)
        } else {
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc95)
        } loc(#loc160)
      } loc(#loc158)
    } loc(#loc156)
    cir.return loc(#loc72)
  } loc(#loc154)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc97)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc104)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
      %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc108)
      %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc108)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc108)
      %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc108)
      %7 = cir.cmp(gt, %2, %6) : !s32i, !cir.bool loc(#loc166)
      %8 = cir.ternary(%7, true {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
        %10 = cir.abs %9 poison : !s32i loc(#loc111)
        %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc111)
        %12 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc112)
        %13 = cir.const #cir.int<2147483647> : !s32i loc(#loc113)
        %14 = cir.cast(int_to_float, %13 : !s32i), !cir.double loc(#loc113)
        %15 = cir.call @sqrt(%14) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc112)
        %16 = cir.cast(float_to_int, %15 : !cir.double), !s64i loc(#loc112)
        %17 = cir.cmp(lt, %11, %16) : !s64i, !cir.bool loc(#loc167)
        %18 = cir.ternary(%17, true {
          %19 = cir.const #true loc(#loc109)
          cir.yield %19 : !cir.bool loc(#loc109)
        }, false {
          %19 = cir.const #false loc(#loc109)
          cir.yield %19 : !cir.bool loc(#loc109)
        }) : (!cir.bool) -> !cir.bool loc(#loc109)
        cir.yield %18 : !cir.bool loc(#loc109)
      }, false {
        %9 = cir.const #false loc(#loc109)
        cir.yield %9 : !cir.bool loc(#loc109)
      }) : (!cir.bool) -> !cir.bool loc(#loc109)
      cir.if %8 {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc169)
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc120)
        cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc169)
        %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc121)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc122)
      } else {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc97)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc123)
      } loc(#loc168)
    } loc(#loc165)
    cir.return loc(#loc99)
  } loc(#loc162)
  cir.func @_ZN44CWE190_Integer_Overflow__int_fgets_square_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L7goodG2BEv() : () -> () loc(#loc126)
    cir.call @_ZN44CWE190_Integer_Overflow__int_fgets_square_43L7goodB2GEv() : () -> () loc(#loc127)
    cir.return loc(#loc125)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":41:23)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":29:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":44:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":30:1)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":31:5)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":43:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":32:9)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":32:45)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":34:9)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":42:9)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":34:19)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":34:32)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":34:49)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":34:13)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":34:59)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":35:9)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":38:9)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":40:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":37:25)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":37:20)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":37:13)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":37:36)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":41:13)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":46:1)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":57:1)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":48:5)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":48:9)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":50:12)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":50:5)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":51:5)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":52:5)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":56:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":54:9)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":54:29)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":54:22)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":55:22)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":55:9)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":64:1)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":68:1)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":65:1)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":67:12)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":67:5)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":70:1)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":81:1)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":72:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":72:9)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":74:12)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":74:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":75:5)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":76:5)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":80:5)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":78:9)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":78:29)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":78:22)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":79:22)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":79:9)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":84:1)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":99:1)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":85:1)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":86:5)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":98:5)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":87:9)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":87:45)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":89:9)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":97:9)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":89:19)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":89:32)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":89:49)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":89:13)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":89:59)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":90:9)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":93:9)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":95:9)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":92:25)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":92:20)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":92:13)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":92:36)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":96:23)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":96:13)
#loc96 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":115:19)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":101:1)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":117:1)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":103:5)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":103:9)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":105:12)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":105:5)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":106:5)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":108:5)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":116:5)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":108:9)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":108:16)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":108:24)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":108:31)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":108:27)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":108:45)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":108:58)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":108:65)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":109:5)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":112:5)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":114:5)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":110:9)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":110:29)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":110:22)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":111:22)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":111:9)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":115:9)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":119:1)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":123:1)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":121:5)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_square_43.cpp":122:5)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc10, #loc11])
#loc134 = loc(fused[#loc15, #loc16])
#loc135 = loc(fused[#loc17, #loc18])
#loc136 = loc(fused[#loc19, #loc20])
#loc137 = loc(fused[#loc24, #loc25])
#loc138 = loc(fused[#loc26, #loc27, #loc28, #loc20])
#loc139 = loc(fused[#loc31, #loc32])
#loc140 = loc(fused[#loc34, #loc35])
#loc141 = loc(fused[#loc36, #loc37])
#loc142 = loc(fused[#loc38, #loc39])
#loc143 = loc(fused[#loc41, #loc40])
#loc144 = loc(fused[#loc43, #loc44])
#loc145 = loc(fused[#loc45, #loc46])
#loc146 = loc(fused[#loc50, #loc51])
#loc148 = loc(fused[#loc56, #loc55])
#loc149 = loc(fused[#loc57, #loc58])
#loc150 = loc(fused[#loc59, #loc60])
#loc151 = loc(fused[#loc62, #loc61])
#loc152 = loc(fused[#loc64, #loc65])
#loc153 = loc(fused[#loc66, #loc67])
#loc154 = loc(fused[#loc71, #loc72])
#loc156 = loc(fused[#loc76, #loc77])
#loc157 = loc(fused[#loc78, #loc79])
#loc158 = loc(fused[#loc80, #loc81])
#loc159 = loc(fused[#loc85, #loc86])
#loc160 = loc(fused[#loc87, #loc88, #loc89, #loc81])
#loc161 = loc(fused[#loc92, #loc93])
#loc162 = loc(fused[#loc98, #loc99])
#loc163 = loc(fused[#loc100, #loc101])
#loc164 = loc(fused[#loc103, #loc102])
#loc165 = loc(fused[#loc105, #loc106])
#loc166 = loc(fused[#loc107, #loc108])
#loc167 = loc(fused[#loc111, #loc114])
#loc168 = loc(fused[#loc115, #loc116, #loc117, #loc106])
#loc169 = loc(fused[#loc118, #loc119])
#loc170 = loc(fused[#loc124, #loc125])
