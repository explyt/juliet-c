!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_fscanf_postdec_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc73)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc75)
  cir.func no_proto @CWE191_Integer_Underflow__short_fscanf_postdec_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc77)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc12)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc78)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc14)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc74)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc15)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc14)
    cir.scope {
      %9 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc80)
      %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc20)
      %11 = cir.unary(dec, %10) : !s16i, !s16i loc(#loc21)
      cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc81)
      %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc19)
      cir.store %12, %9 : !s16i, !cir.ptr<!s16i> loc(#loc80)
      %13 = cir.load %9 : !cir.ptr<!s16i>, !s16i loc(#loc22)
      %14 = cir.cast(integral, %13 : !s16i), !s32i loc(#loc22)
      cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc23)
    } loc(#loc79)
    cir.return loc(#loc9)
  } loc(#loc76)
  cir.func no_proto @CWE191_Integer_Underflow__short_fscanf_postdec_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc83)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc82)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc86)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc34)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc87)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc37)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc37)
    cir.store %5, %0 : !s16i, !cir.ptr<!s16i> loc(#loc88)
    cir.scope {
      %6 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc90)
      %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc43)
      %8 = cir.unary(dec, %7) : !s16i, !s16i loc(#loc44)
      cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc91)
      %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc42)
      cir.store %9, %6 : !s16i, !cir.ptr<!s16i> loc(#loc90)
      %10 = cir.load %6 : !cir.ptr<!s16i>, !s16i loc(#loc45)
      %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc45)
      cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc46)
    } loc(#loc89)
    cir.return loc(#loc31)
  } loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc94)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc54)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc95)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc56)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc74)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc58)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc56)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc61)
      %10 = cir.cast(integral, %9 : !s16i), !s32i loc(#loc61)
      %11 = cir.const #cir.int<32767> : !s32i loc(#loc62)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc62)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc62)
      %15 = cir.cmp(gt, %10, %14) : !s32i, !cir.bool loc(#loc97)
      cir.if %15 {
        %16 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc99)
        %17 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc68)
        %18 = cir.unary(dec, %17) : !s16i, !s16i loc(#loc69)
        cir.store %18, %0 : !s16i, !cir.ptr<!s16i> loc(#loc100)
        %19 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc67)
        cir.store %19, %16 : !s16i, !cir.ptr<!s16i> loc(#loc99)
        %20 = cir.load %16 : !cir.ptr<!s16i>, !s16i loc(#loc70)
        %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc70)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc71)
      } else {
        %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc49)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } loc(#loc98)
    } loc(#loc96)
    cir.return loc(#loc51)
  } loc(#loc93)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_fscanf_postdec_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":27:20)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":22:1)
#loc9 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":34:1)
#loc10 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":24:5)
#loc11 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":24:11)
#loc12 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":25:12)
#loc13 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":25:5)
#loc14 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":27:5)
#loc15 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":27:13)
#loc16 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":28:5)
#loc17 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":33:5)
#loc18 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":31:9)
#loc19 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":31:24)
#loc20 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":30:13)
#loc21 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":30:9)
#loc22 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":32:22)
#loc23 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":32:9)
#loc24 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":75:1)
#loc25 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":79:1)
#loc26 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":77:5)
#loc27 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":77:13)
#loc28 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":78:5)
#loc29 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":78:13)
#loc30 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":41:1)
#loc31 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":53:1)
#loc32 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":43:5)
#loc33 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":43:11)
#loc34 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":44:12)
#loc35 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":44:5)
#loc36 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":46:13)
#loc37 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":46:12)
#loc38 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":46:5)
#loc39 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":47:5)
#loc40 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":52:5)
#loc41 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":50:9)
#loc42 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":50:24)
#loc43 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":49:13)
#loc44 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":49:9)
#loc45 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":51:22)
#loc46 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":51:9)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":71:19)
#loc50 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":56:1)
#loc51 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":73:1)
#loc52 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":58:5)
#loc53 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":58:11)
#loc54 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":59:12)
#loc55 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":59:5)
#loc56 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":61:5)
#loc57 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":61:13)
#loc58 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":61:20)
#loc59 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":63:5)
#loc60 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":72:5)
#loc61 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":63:9)
#loc62 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":63:16)
#loc63 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":64:5)
#loc64 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":68:5)
#loc65 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":70:5)
#loc66 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":66:9)
#loc67 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":66:24)
#loc68 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":65:13)
#loc69 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":65:9)
#loc70 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":67:22)
#loc71 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":67:9)
#loc72 = loc("CWE191_Integer_Underflow__short_fscanf_postdec_01.c":71:9)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc3, #loc4])
#loc75 = loc(fused[#loc6, #loc7])
#loc76 = loc(fused[#loc8, #loc9])
#loc77 = loc(fused[#loc10, #loc11])
#loc78 = loc(fused[#loc13, #loc12])
#loc79 = loc(fused[#loc16, #loc17])
#loc80 = loc(fused[#loc18, #loc19])
#loc81 = loc(fused[#loc21, #loc20])
#loc82 = loc(fused[#loc24, #loc25])
#loc83 = loc(fused[#loc26, #loc27])
#loc84 = loc(fused[#loc28, #loc29])
#loc85 = loc(fused[#loc30, #loc31])
#loc86 = loc(fused[#loc32, #loc33])
#loc87 = loc(fused[#loc35, #loc34])
#loc88 = loc(fused[#loc38, #loc36])
#loc89 = loc(fused[#loc39, #loc40])
#loc90 = loc(fused[#loc41, #loc42])
#loc91 = loc(fused[#loc44, #loc43])
#loc92 = loc(fused[#loc47, #loc48])
#loc93 = loc(fused[#loc50, #loc51])
#loc94 = loc(fused[#loc52, #loc53])
#loc95 = loc(fused[#loc55, #loc54])
#loc96 = loc(fused[#loc59, #loc60])
#loc97 = loc(fused[#loc61, #loc62])
#loc98 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc99 = loc(fused[#loc66, #loc67])
#loc100 = loc(fused[#loc69, #loc68])
