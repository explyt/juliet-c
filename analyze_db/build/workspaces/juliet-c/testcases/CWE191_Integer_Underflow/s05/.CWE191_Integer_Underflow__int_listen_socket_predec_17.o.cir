!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_listen_socket_predec_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc378)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc379)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc380)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc381)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc382)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc383)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc384)
  cir.func private @close(!s32i) -> !s32i loc(#loc385)
  cir.func private @printIntLine(!s32i) loc(#loc386)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_predec_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc388)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc389)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc390)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc26)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc30)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc393)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc394)
        cir.condition(%7) loc(#loc34)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc397)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc398)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc399)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc400)
            %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc401)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc43)
            cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc399)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc45)
            cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc400)
            cir.scope {
              cir.do {
                cir.scope {
                  %14 = cir.const #cir.int<2> : !s32i loc(#loc52)
                  %15 = cir.const #cir.int<1> : !s32i loc(#loc53)
                  %16 = cir.const #cir.int<6> : !s32i loc(#loc54)
                  %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
                  cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc404)
                  cir.scope {
                    %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc60)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc61)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc61)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc406)
                    cir.if %62 {
                      cir.break loc(#loc63)
                    } loc(#loc407)
                  } loc(#loc405)
                  %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc408)
                  %19 = cir.const #cir.int<0> : !s32i loc(#loc66)
                  %20 = cir.const #cir.int<16> : !u64i loc(#loc409)
                  cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc410)
                  %21 = cir.const #cir.int<2> : !s32i loc(#loc71)
                  %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc71)
                  %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
                  cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc411)
                  %24 = cir.const #cir.int<0> : !s32i loc(#loc74)
                  %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc74)
                  %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
                  %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
                  cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc412)
                  %28 = cir.const #cir.int<27015> : !s32i loc(#loc78)
                  %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc78)
                  %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
                  %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                  cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc413)
                  cir.scope {
                    %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                    %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc415)
                    %61 = cir.const #cir.int<16> : !u64i loc(#loc416)
                    %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc416)
                    %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc90)
                    %64 = cir.const #cir.int<1> : !s32i loc(#loc91)
                    %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc91)
                    %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc417)
                    cir.if %66 {
                      cir.break loc(#loc93)
                    } loc(#loc418)
                  } loc(#loc414)
                  cir.scope {
                    %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                    %60 = cir.const #cir.int<5> : !s32i loc(#loc97)
                    %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc98)
                    %62 = cir.const #cir.int<1> : !s32i loc(#loc99)
                    %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc99)
                    %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc420)
                    cir.if %64 {
                      cir.break loc(#loc101)
                    } loc(#loc421)
                  } loc(#loc419)
                  %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                  %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc103)
                  %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc104)
                  %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc105)
                  cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc422)
                  cir.scope {
                    %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc111)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc111)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc424)
                    cir.if %62 {
                      cir.break loc(#loc113)
                    } loc(#loc425)
                  } loc(#loc423)
                  %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                  %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
                  %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
                  %39 = cir.const #cir.int<3> : !s32i loc(#loc116)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc116)
                  %41 = cir.const #cir.int<4> : !u64i loc(#loc116)
                  %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc116)
                  %43 = cir.const #cir.int<2> : !s32i loc(#loc116)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc116)
                  %45 = cir.binop(add, %42, %44) : !u64i loc(#loc116)
                  %46 = cir.const #cir.int<1> : !s32i loc(#loc117)
                  %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc117)
                  %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc426)
                  %49 = cir.const #cir.int<0> : !s32i loc(#loc118)
                  %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc119)
                  %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc119)
                  cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc427)
                  cir.scope {
                    %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc125)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc125)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc429)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc126)
                      cir.yield %64 : !cir.bool loc(#loc126)
                    }, false {
                      %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                      %65 = cir.const #cir.int<0> : !s32i loc(#loc128)
                      %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc430)
                      %67 = cir.ternary(%66, true {
                        %68 = cir.const #true loc(#loc126)
                        cir.yield %68 : !cir.bool loc(#loc126)
                      }, false {
                        %68 = cir.const #false loc(#loc126)
                        cir.yield %68 : !cir.bool loc(#loc126)
                      }) : (!cir.bool) -> !cir.bool loc(#loc126)
                      cir.yield %67 : !cir.bool loc(#loc126)
                    }) : (!cir.bool) -> !cir.bool loc(#loc126)
                    cir.if %63 {
                      cir.break loc(#loc130)
                    } loc(#loc431)
                  } loc(#loc428)
                  %52 = cir.const #cir.int<0> : !s32i loc(#loc131)
                  %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc131)
                  %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc132)
                  %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc133)
                  %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc133)
                  cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc432)
                  %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
                  %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc135)
                  cir.store %58, %2 : !s32i, !cir.ptr<!s32i> loc(#loc433)
                } loc(#loc403)
                cir.yield loc(#loc49)
              } while {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc138)
                %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc138)
                cir.condition(%15) loc(#loc138)
              } loc(#loc402)
            } loc(#loc402)
            cir.scope {
              %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc142)
              %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc142)
              %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc435)
              cir.if %17 {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc145)
              } loc(#loc436)
            } loc(#loc434)
            cir.scope {
              %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc148)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc149)
              %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc149)
              %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc438)
              cir.if %17 {
                %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc152)
              } loc(#loc439)
            } loc(#loc437)
          } loc(#loc396)
        } loc(#loc395)
        cir.yield loc(#loc29)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc154)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc440)
        cir.yield loc(#loc392)
      } loc(#loc392)
    } loc(#loc392)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc157)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc442)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc159)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc160)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc443)
        cir.condition(%7) loc(#loc161)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc446)
            %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
            %7 = cir.unary(dec, %6) nsw : !s32i, !s32i loc(#loc167)
            cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc447)
            %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc446)
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc169)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc170)
          } loc(#loc445)
        } loc(#loc444)
        cir.yield loc(#loc156)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc172)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc448)
        cir.yield loc(#loc441)
      } loc(#loc441)
    } loc(#loc441)
    cir.return loc(#loc20)
  } loc(#loc387)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_predec_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc450)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc175)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc451)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc177)
    cir.return loc(#loc174)
  } loc(#loc449)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc452)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc181)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc454)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc455)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc456)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc189)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc457)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc193)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc459)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc195)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc196)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc460)
        cir.condition(%7) loc(#loc197)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc463)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc464)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc465)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc466)
            %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc467)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc206)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc206)
            cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc465)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc208)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc208)
            cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc466)
            cir.scope {
              cir.do {
                cir.scope {
                  %14 = cir.const #cir.int<2> : !s32i loc(#loc215)
                  %15 = cir.const #cir.int<1> : !s32i loc(#loc216)
                  %16 = cir.const #cir.int<6> : !s32i loc(#loc217)
                  %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc218)
                  cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc470)
                  cir.scope {
                    %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc223)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc224)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc224)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc472)
                    cir.if %62 {
                      cir.break loc(#loc226)
                    } loc(#loc473)
                  } loc(#loc471)
                  %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc474)
                  %19 = cir.const #cir.int<0> : !s32i loc(#loc229)
                  %20 = cir.const #cir.int<16> : !u64i loc(#loc475)
                  cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc476)
                  %21 = cir.const #cir.int<2> : !s32i loc(#loc234)
                  %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc234)
                  %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
                  cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc477)
                  %24 = cir.const #cir.int<0> : !s32i loc(#loc236)
                  %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc236)
                  %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
                  %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
                  cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc478)
                  %28 = cir.const #cir.int<27015> : !s32i loc(#loc238)
                  %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc238)
                  %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc239)
                  %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                  cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc479)
                  cir.scope {
                    %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                    %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc481)
                    %61 = cir.const #cir.int<16> : !u64i loc(#loc482)
                    %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc482)
                    %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc249)
                    %64 = cir.const #cir.int<1> : !s32i loc(#loc250)
                    %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc250)
                    %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc483)
                    cir.if %66 {
                      cir.break loc(#loc252)
                    } loc(#loc484)
                  } loc(#loc480)
                  cir.scope {
                    %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc255)
                    %60 = cir.const #cir.int<5> : !s32i loc(#loc256)
                    %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc257)
                    %62 = cir.const #cir.int<1> : !s32i loc(#loc258)
                    %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc258)
                    %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc486)
                    cir.if %64 {
                      cir.break loc(#loc260)
                    } loc(#loc487)
                  } loc(#loc485)
                  %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                  %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc262)
                  %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc263)
                  %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc264)
                  cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc488)
                  cir.scope {
                    %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc270)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc270)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc490)
                    cir.if %62 {
                      cir.break loc(#loc272)
                    } loc(#loc491)
                  } loc(#loc489)
                  %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc273)
                  %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc274)
                  %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc274)
                  %39 = cir.const #cir.int<3> : !s32i loc(#loc275)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc275)
                  %41 = cir.const #cir.int<4> : !u64i loc(#loc275)
                  %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc275)
                  %43 = cir.const #cir.int<2> : !s32i loc(#loc275)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc275)
                  %45 = cir.binop(add, %42, %44) : !u64i loc(#loc275)
                  %46 = cir.const #cir.int<1> : !s32i loc(#loc276)
                  %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc276)
                  %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc492)
                  %49 = cir.const #cir.int<0> : !s32i loc(#loc277)
                  %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc278)
                  %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc278)
                  cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc493)
                  cir.scope {
                    %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc284)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc284)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc495)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc285)
                      cir.yield %64 : !cir.bool loc(#loc285)
                    }, false {
                      %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc286)
                      %65 = cir.const #cir.int<0> : !s32i loc(#loc287)
                      %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc496)
                      %67 = cir.ternary(%66, true {
                        %68 = cir.const #true loc(#loc285)
                        cir.yield %68 : !cir.bool loc(#loc285)
                      }, false {
                        %68 = cir.const #false loc(#loc285)
                        cir.yield %68 : !cir.bool loc(#loc285)
                      }) : (!cir.bool) -> !cir.bool loc(#loc285)
                      cir.yield %67 : !cir.bool loc(#loc285)
                    }) : (!cir.bool) -> !cir.bool loc(#loc285)
                    cir.if %63 {
                      cir.break loc(#loc289)
                    } loc(#loc497)
                  } loc(#loc494)
                  %52 = cir.const #cir.int<0> : !s32i loc(#loc290)
                  %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc290)
                  %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc291)
                  %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc292)
                  %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc292)
                  cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc498)
                  %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc293)
                  %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc294)
                  cir.store %58, %2 : !s32i, !cir.ptr<!s32i> loc(#loc499)
                } loc(#loc469)
                cir.yield loc(#loc212)
              } while {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc297)
                %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc297)
                cir.condition(%15) loc(#loc297)
              } loc(#loc468)
            } loc(#loc468)
            cir.scope {
              %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc300)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc301)
              %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc301)
              %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc501)
              cir.if %17 {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc304)
              } loc(#loc502)
            } loc(#loc500)
            cir.scope {
              %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc307)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc308)
              %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc308)
              %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc504)
              cir.if %17 {
                %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc310)
                %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc311)
              } loc(#loc505)
            } loc(#loc503)
          } loc(#loc462)
        } loc(#loc461)
        cir.yield loc(#loc192)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc312)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc313)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc506)
        cir.yield loc(#loc458)
      } loc(#loc458)
    } loc(#loc458)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc316)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc508)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc318)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc319)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc509)
        cir.condition(%7) loc(#loc320)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc324)
            %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc325)
            %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc325)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc325)
            %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc325)
            %10 = cir.cmp(gt, %5, %9) : !s32i, !cir.bool loc(#loc512)
            cir.if %10 {
              %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc514)
              %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc331)
              %13 = cir.unary(dec, %12) nsw : !s32i, !s32i loc(#loc331)
              cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc515)
              %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc330)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc514)
              %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc333)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc334)
            } else {
              %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc181)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc181)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc335)
            } loc(#loc513)
          } loc(#loc511)
        } loc(#loc510)
        cir.yield loc(#loc315)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc336)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc337)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc516)
        cir.yield loc(#loc507)
      } loc(#loc507)
    } loc(#loc507)
    cir.return loc(#loc183)
  } loc(#loc453)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc518)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc519)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc520)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc345)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc521)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc349)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc523)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc352)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc524)
        cir.condition(%7) loc(#loc353)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<2> : !s32i loc(#loc355)
          %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc356)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc526)
        } loc(#loc525)
        cir.yield loc(#loc348)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc358)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc359)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc527)
        cir.yield loc(#loc522)
      } loc(#loc522)
    } loc(#loc522)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc362)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc529)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc364)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc365)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc530)
        cir.condition(%7) loc(#loc366)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc533)
            %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc372)
            %7 = cir.unary(dec, %6) nsw : !s32i, !s32i loc(#loc372)
            cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc534)
            %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc371)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc533)
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc374)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc375)
          } loc(#loc532)
        } loc(#loc531)
        cir.yield loc(#loc361)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc376)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc377)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc535)
        cir.yield loc(#loc528)
      } loc(#loc528)
    } loc(#loc528)
    cir.return loc(#loc339)
  } loc(#loc517)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_listen_socket_predec_17.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":44:1)
#loc20 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":131:1)
#loc21 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":46:5)
#loc22 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":46:9)
#loc23 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":46:11)
#loc24 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":47:5)
#loc25 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":47:9)
#loc26 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":49:12)
#loc27 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":49:5)
#loc28 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":50:5)
#loc29 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":121:5)
#loc30 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":50:13)
#loc31 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":50:9)
#loc32 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":50:16)
#loc33 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":50:20)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":50:18)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":51:5)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":52:9)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":120:9)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":57:13)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":57:17)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":58:13)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":58:32)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":59:13)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":59:35)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":60:13)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":60:35)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":61:13)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":61:45)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":62:13)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":105:21)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":63:13)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":104:13)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":72:39)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":72:48)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":72:61)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":72:32)
#loc56 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":72:17)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":72:72)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":73:17)
#loc59 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":76:17)
#loc60 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":73:21)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":73:37)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":74:17)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":75:21)
#loc64 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":77:24)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":77:25)
#loc66 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":77:34)
#loc67 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":77:37)
#loc68 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":77:51)
#loc69 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":77:17)
#loc70 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":77:52)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":78:38)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":78:17)
#loc74 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":79:43)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":79:17)
#loc78 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":80:42)
#loc79 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":80:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":80:17)
#loc82 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":80:50)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":81:17)
#loc84 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":84:17)
#loc85 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":81:26)
#loc86 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":81:58)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":81:59)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":81:68)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":81:82)
#loc90 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":81:21)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":81:88)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":82:17)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":83:21)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":85:17)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":88:17)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":85:28)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":85:42)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":85:21)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":85:61)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":86:17)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":87:21)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":89:39)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":89:53)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":89:59)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":89:32)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":89:17)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":89:63)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":90:17)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":93:17)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":90:21)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":90:37)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":91:17)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":92:21)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":95:35)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":95:49)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":95:62)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":95:80)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":95:83)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":95:30)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":95:17)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":95:84)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":96:17)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":99:17)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":96:21)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":96:35)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":96:48)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":96:51)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":96:65)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":97:17)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":98:21)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":101:43)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":101:29)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":101:17)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":103:29)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":103:24)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":103:17)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":103:40)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":105:20)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":106:13)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":109:13)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":106:17)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":106:33)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":107:13)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":108:30)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":108:17)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":110:13)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":113:13)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":110:17)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":110:33)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":111:13)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":112:30)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":112:17)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":50:24)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":50:23)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":122:5)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":130:5)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":122:13)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":122:9)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":122:16)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":122:20)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":122:18)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":123:5)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":124:9)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":129:9)
#loc165 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":127:13)
#loc166 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":127:26)
#loc167 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":126:13)
#loc168 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":126:15)
#loc169 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":128:26)
#loc170 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":128:13)
#loc171 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":122:24)
#loc172 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":122:23)
#loc173 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":255:1)
#loc174 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":259:1)
#loc175 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":257:5)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":257:13)
#loc177 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":258:5)
#loc178 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":258:13)
#loc179 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc180 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":227:23)
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":138:1)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":230:1)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":140:5)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":140:9)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":140:11)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":141:5)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":141:9)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":143:12)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":143:5)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":144:5)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":215:5)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":144:13)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":144:9)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":144:16)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":144:20)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":144:18)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":145:5)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":146:9)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":214:9)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":151:13)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":151:17)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":152:13)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":152:32)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":153:13)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":153:35)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":154:13)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":154:35)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":155:13)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":155:45)
#loc211 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":156:13)
#loc212 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":199:21)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":157:13)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":198:13)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":166:39)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":166:48)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":166:61)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":166:32)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":166:17)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":166:72)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":167:17)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":170:17)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":167:21)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":167:37)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":168:17)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":169:21)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":171:24)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":171:25)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":171:34)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":171:37)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":171:51)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":171:17)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":171:52)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":172:38)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":172:17)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":173:43)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":173:17)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":174:42)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":174:36)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":174:17)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":174:50)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":175:17)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":178:17)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":175:26)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":175:58)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":175:59)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":175:68)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":175:82)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":175:21)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":175:88)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":176:17)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":177:21)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":179:17)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":182:17)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":179:28)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":179:42)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":179:21)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":179:61)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":180:17)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":181:21)
#loc261 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":183:39)
#loc262 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":183:53)
#loc263 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":183:59)
#loc264 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":183:32)
#loc265 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":183:17)
#loc266 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":183:63)
#loc267 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":184:17)
#loc268 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":187:17)
#loc269 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":184:21)
#loc270 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":184:37)
#loc271 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":185:17)
#loc272 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":186:21)
#loc273 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":189:35)
#loc274 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":189:49)
#loc275 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":189:62)
#loc276 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":189:80)
#loc277 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":189:83)
#loc278 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":189:30)
#loc279 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":189:17)
#loc280 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":189:84)
#loc281 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":190:17)
#loc282 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":193:17)
#loc283 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":190:21)
#loc284 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":190:35)
#loc285 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":190:48)
#loc286 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":190:51)
#loc287 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":190:65)
#loc288 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":191:17)
#loc289 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":192:21)
#loc290 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":195:43)
#loc291 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":195:29)
#loc292 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":195:17)
#loc293 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":197:29)
#loc294 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":197:24)
#loc295 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":197:17)
#loc296 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":197:40)
#loc297 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":199:20)
#loc298 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":200:13)
#loc299 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":203:13)
#loc300 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":200:17)
#loc301 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":200:33)
#loc302 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":201:13)
#loc303 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":202:30)
#loc304 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":202:17)
#loc305 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":204:13)
#loc306 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":207:13)
#loc307 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":204:17)
#loc308 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":204:33)
#loc309 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":205:13)
#loc310 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":206:30)
#loc311 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":206:17)
#loc312 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":144:24)
#loc313 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":144:23)
#loc314 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":216:5)
#loc315 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":229:5)
#loc316 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":216:13)
#loc317 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":216:9)
#loc318 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":216:16)
#loc319 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":216:20)
#loc320 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":216:18)
#loc321 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":217:5)
#loc322 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":219:9)
#loc323 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":228:9)
#loc324 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":219:13)
#loc325 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":219:20)
#loc326 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":220:9)
#loc327 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":224:9)
#loc328 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":226:9)
#loc329 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":222:13)
#loc330 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":222:26)
#loc331 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":221:13)
#loc332 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":221:15)
#loc333 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":223:26)
#loc334 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":223:13)
#loc335 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":227:13)
#loc336 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":216:24)
#loc337 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":216:23)
#loc338 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":233:1)
#loc339 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":253:1)
#loc340 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":235:5)
#loc341 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":235:9)
#loc342 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":235:11)
#loc343 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":236:5)
#loc344 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":236:9)
#loc345 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":238:12)
#loc346 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":238:5)
#loc347 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":239:5)
#loc348 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":243:5)
#loc349 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":239:13)
#loc350 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":239:9)
#loc351 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":239:16)
#loc352 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":239:20)
#loc353 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":239:18)
#loc354 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":240:5)
#loc355 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":242:17)
#loc356 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":242:16)
#loc357 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":242:9)
#loc358 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":239:24)
#loc359 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":239:23)
#loc360 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":244:5)
#loc361 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":252:5)
#loc362 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":244:13)
#loc363 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":244:9)
#loc364 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":244:16)
#loc365 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":244:20)
#loc366 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":244:18)
#loc367 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":245:5)
#loc368 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":246:9)
#loc369 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":251:9)
#loc370 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":249:13)
#loc371 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":249:26)
#loc372 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":248:13)
#loc373 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":248:15)
#loc374 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":250:26)
#loc375 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":250:13)
#loc376 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":244:24)
#loc377 = loc("CWE191_Integer_Underflow__int_listen_socket_predec_17.c":244:23)
#loc378 = loc(fused[#loc1, #loc2])
#loc379 = loc(fused[#loc3, #loc4])
#loc380 = loc(fused[#loc5, #loc6])
#loc381 = loc(fused[#loc7, #loc8])
#loc382 = loc(fused[#loc9, #loc10])
#loc383 = loc(fused[#loc11, #loc12])
#loc384 = loc(fused[#loc13, #loc14])
#loc385 = loc(fused[#loc15, #loc16])
#loc386 = loc(fused[#loc17, #loc18])
#loc387 = loc(fused[#loc19, #loc20])
#loc388 = loc(fused[#loc21, #loc22])
#loc389 = loc(fused[#loc21, #loc23])
#loc390 = loc(fused[#loc24, #loc25])
#loc391 = loc(fused[#loc27, #loc26])
#loc392 = loc(fused[#loc28, #loc29])
#loc393 = loc(fused[#loc31, #loc30])
#loc394 = loc(fused[#loc32, #loc33])
#loc395 = loc(fused[#loc35, #loc29])
#loc396 = loc(fused[#loc36, #loc37])
#loc397 = loc(fused[#loc38, #loc39])
#loc398 = loc(fused[#loc40, #loc41])
#loc399 = loc(fused[#loc42, #loc43])
#loc400 = loc(fused[#loc44, #loc45])
#loc401 = loc(fused[#loc46, #loc47])
#loc402 = loc(fused[#loc48, #loc49])
#loc403 = loc(fused[#loc50, #loc51])
#loc404 = loc(fused[#loc56, #loc57])
#loc405 = loc(fused[#loc58, #loc59])
#loc406 = loc(fused[#loc60, #loc61])
#loc407 = loc(fused[#loc62, #loc59])
#loc408 = loc(fused[#loc64, #loc65])
#loc409 = loc(fused[#loc67, #loc68])
#loc410 = loc(fused[#loc69, #loc70])
#loc411 = loc(fused[#loc73, #loc71])
#loc412 = loc(fused[#loc77, #loc74])
#loc413 = loc(fused[#loc81, #loc82])
#loc414 = loc(fused[#loc83, #loc84])
#loc415 = loc(fused[#loc86, #loc87])
#loc416 = loc(fused[#loc88, #loc89])
#loc417 = loc(fused[#loc90, #loc91])
#loc418 = loc(fused[#loc92, #loc84])
#loc419 = loc(fused[#loc94, #loc95])
#loc420 = loc(fused[#loc98, #loc99])
#loc421 = loc(fused[#loc100, #loc95])
#loc422 = loc(fused[#loc106, #loc107])
#loc423 = loc(fused[#loc108, #loc109])
#loc424 = loc(fused[#loc110, #loc111])
#loc425 = loc(fused[#loc112, #loc109])
#loc426 = loc(fused[#loc116, #loc117])
#loc427 = loc(fused[#loc120, #loc121])
#loc428 = loc(fused[#loc122, #loc123])
#loc429 = loc(fused[#loc124, #loc125])
#loc430 = loc(fused[#loc127, #loc128])
#loc431 = loc(fused[#loc129, #loc123])
#loc432 = loc(fused[#loc133, #loc131])
#loc433 = loc(fused[#loc136, #loc137])
#loc434 = loc(fused[#loc139, #loc140])
#loc435 = loc(fused[#loc141, #loc142])
#loc436 = loc(fused[#loc143, #loc140])
#loc437 = loc(fused[#loc146, #loc147])
#loc438 = loc(fused[#loc148, #loc149])
#loc439 = loc(fused[#loc150, #loc147])
#loc440 = loc(fused[#loc154, #loc153])
#loc441 = loc(fused[#loc155, #loc156])
#loc442 = loc(fused[#loc158, #loc157])
#loc443 = loc(fused[#loc159, #loc160])
#loc444 = loc(fused[#loc162, #loc156])
#loc445 = loc(fused[#loc163, #loc164])
#loc446 = loc(fused[#loc165, #loc166])
#loc447 = loc(fused[#loc167, #loc168])
#loc448 = loc(fused[#loc172, #loc171])
#loc449 = loc(fused[#loc173, #loc174])
#loc450 = loc(fused[#loc175, #loc176])
#loc451 = loc(fused[#loc177, #loc178])
#loc452 = loc(fused[#loc179, #loc180])
#loc453 = loc(fused[#loc182, #loc183])
#loc454 = loc(fused[#loc184, #loc185])
#loc455 = loc(fused[#loc184, #loc186])
#loc456 = loc(fused[#loc187, #loc188])
#loc457 = loc(fused[#loc190, #loc189])
#loc458 = loc(fused[#loc191, #loc192])
#loc459 = loc(fused[#loc194, #loc193])
#loc460 = loc(fused[#loc195, #loc196])
#loc461 = loc(fused[#loc198, #loc192])
#loc462 = loc(fused[#loc199, #loc200])
#loc463 = loc(fused[#loc201, #loc202])
#loc464 = loc(fused[#loc203, #loc204])
#loc465 = loc(fused[#loc205, #loc206])
#loc466 = loc(fused[#loc207, #loc208])
#loc467 = loc(fused[#loc209, #loc210])
#loc468 = loc(fused[#loc211, #loc212])
#loc469 = loc(fused[#loc213, #loc214])
#loc470 = loc(fused[#loc219, #loc220])
#loc471 = loc(fused[#loc221, #loc222])
#loc472 = loc(fused[#loc223, #loc224])
#loc473 = loc(fused[#loc225, #loc222])
#loc474 = loc(fused[#loc227, #loc228])
#loc475 = loc(fused[#loc230, #loc231])
#loc476 = loc(fused[#loc232, #loc233])
#loc477 = loc(fused[#loc235, #loc234])
#loc478 = loc(fused[#loc237, #loc236])
#loc479 = loc(fused[#loc240, #loc241])
#loc480 = loc(fused[#loc242, #loc243])
#loc481 = loc(fused[#loc245, #loc246])
#loc482 = loc(fused[#loc247, #loc248])
#loc483 = loc(fused[#loc249, #loc250])
#loc484 = loc(fused[#loc251, #loc243])
#loc485 = loc(fused[#loc253, #loc254])
#loc486 = loc(fused[#loc257, #loc258])
#loc487 = loc(fused[#loc259, #loc254])
#loc488 = loc(fused[#loc265, #loc266])
#loc489 = loc(fused[#loc267, #loc268])
#loc490 = loc(fused[#loc269, #loc270])
#loc491 = loc(fused[#loc271, #loc268])
#loc492 = loc(fused[#loc275, #loc276])
#loc493 = loc(fused[#loc279, #loc280])
#loc494 = loc(fused[#loc281, #loc282])
#loc495 = loc(fused[#loc283, #loc284])
#loc496 = loc(fused[#loc286, #loc287])
#loc497 = loc(fused[#loc288, #loc282])
#loc498 = loc(fused[#loc292, #loc290])
#loc499 = loc(fused[#loc295, #loc296])
#loc500 = loc(fused[#loc298, #loc299])
#loc501 = loc(fused[#loc300, #loc301])
#loc502 = loc(fused[#loc302, #loc299])
#loc503 = loc(fused[#loc305, #loc306])
#loc504 = loc(fused[#loc307, #loc308])
#loc505 = loc(fused[#loc309, #loc306])
#loc506 = loc(fused[#loc313, #loc312])
#loc507 = loc(fused[#loc314, #loc315])
#loc508 = loc(fused[#loc317, #loc316])
#loc509 = loc(fused[#loc318, #loc319])
#loc510 = loc(fused[#loc321, #loc315])
#loc511 = loc(fused[#loc322, #loc323])
#loc512 = loc(fused[#loc324, #loc325])
#loc513 = loc(fused[#loc326, #loc327, #loc328, #loc323])
#loc514 = loc(fused[#loc329, #loc330])
#loc515 = loc(fused[#loc331, #loc332])
#loc516 = loc(fused[#loc337, #loc336])
#loc517 = loc(fused[#loc338, #loc339])
#loc518 = loc(fused[#loc340, #loc341])
#loc519 = loc(fused[#loc340, #loc342])
#loc520 = loc(fused[#loc343, #loc344])
#loc521 = loc(fused[#loc346, #loc345])
#loc522 = loc(fused[#loc347, #loc348])
#loc523 = loc(fused[#loc350, #loc349])
#loc524 = loc(fused[#loc351, #loc352])
#loc525 = loc(fused[#loc354, #loc348])
#loc526 = loc(fused[#loc357, #loc355])
#loc527 = loc(fused[#loc359, #loc358])
#loc528 = loc(fused[#loc360, #loc361])
#loc529 = loc(fused[#loc363, #loc362])
#loc530 = loc(fused[#loc364, #loc365])
#loc531 = loc(fused[#loc367, #loc361])
#loc532 = loc(fused[#loc368, #loc369])
#loc533 = loc(fused[#loc370, #loc371])
#loc534 = loc(fused[#loc372, #loc373])
#loc535 = loc(fused[#loc377, #loc376])
