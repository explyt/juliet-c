!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc154)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc155)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc156)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc158)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc161)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc21)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc25)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc26)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc166)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc28)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc29)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc29)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc168)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc169)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb3 loc(#loc172)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc173)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc174)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc41)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb5 loc(#loc35)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc175)
  ^bb9:  // pred: ^bb8
    %20 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc156)
    cir.copy %20 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc156)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc45)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc46)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc46)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc48)
    %30 = cir.binop(add, %27, %29) : !u64i loc(#loc176)
    %31 = cir.const #cir.int<1> : !u64i loc(#loc177)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc178)
    cir.libc.memcpy %32 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc179)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
    cir.br ^bb10 loc(#loc43)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc18)
  } loc(#loc162)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc59)
  } loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc64)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc69)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc73)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc187)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc188)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb8 loc(#loc76)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc79)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc80)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc80)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc80)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc189)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc190)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc191)
    cir.store %16, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc194)
    cir.brcond %20 ^bb5, ^bb6 loc(#loc195)
  ^bb5:  // pred: ^bb4
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc92)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc94)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc92)
    cir.br ^bb6 loc(#loc88)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc88)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc72)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc196)
  ^bb10:  // pred: ^bb9
    %24 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc155)
    cir.copy %24 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc155)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc98)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc99)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc100)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc99)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc101)
    %34 = cir.binop(add, %31, %33) : !u64i loc(#loc197)
    %35 = cir.const #cir.int<1> : !u64i loc(#loc198)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc199)
    cir.libc.memcpy %36 bytes from %28 to %26 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc200)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc109)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb11 loc(#loc96)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc66)
  } loc(#loc183)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc115)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc119)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc120)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc205)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc206)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc122)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc123)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc123)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc123)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc207)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc208)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    cir.br ^bb3 loc(#loc211)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc212)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc213)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc137)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb5 loc(#loc131)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc118)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc118)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc214)
  ^bb9:  // pred: ^bb8
    %22 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc154)
    cir.copy %22 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc154)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc141)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
    %27 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc142)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc143)
    %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc142)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc144)
    %32 = cir.binop(add, %29, %31) : !u64i loc(#loc215)
    %33 = cir.const #cir.int<1> : !u64i loc(#loc216)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc217)
    cir.libc.memcpy %34 bytes from %26 to %24 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc218)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %36 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc152)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
    cir.br ^bb10 loc(#loc139)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc112)
  } loc(#loc201)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":94:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":94:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":73:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":73:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":43:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":43:29)
#loc7 = loc("/usr/include/stdlib.h":672:1)
#loc8 = loc("/usr/include/stdlib.h":672:45)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":32:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":50:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":34:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":34:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":35:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":35:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":36:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":41:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":36:8)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":36:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":37:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":39:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":39:31)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":39:34)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":39:45)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":39:46)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":39:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":40:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":40:37)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":40:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":40:21)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":40:27)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":40:28)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":40:34)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":40:33)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":42:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":49:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:16)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:22)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:31)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:38)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:48)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:53)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:64)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:30)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":46:65)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":47:19)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":47:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":48:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":48:14)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":103:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":107:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":105:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":105:14)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":106:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":106:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":64:19)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":57:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":80:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":59:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":59:12)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":60:12)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":60:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":61:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":71:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":61:8)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":61:27)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":62:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":65:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":67:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":64:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":69:24)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":69:32)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":69:35)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":69:38)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":69:49)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":69:31)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":69:50)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":69:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":70:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":70:37)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":70:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":70:21)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":70:27)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":70:28)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":70:34)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":70:33)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":72:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":79:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:16)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:22)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:31)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:38)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:48)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:53)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:64)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:30)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":76:65)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":77:19)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":77:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":78:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":78:14)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":83:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":101:1)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":85:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":85:12)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":86:12)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":86:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":87:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":92:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":87:8)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":87:27)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":88:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":90:24)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":90:32)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":90:35)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":90:38)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":90:49)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":90:31)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":90:50)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":90:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":91:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":91:37)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":91:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":91:21)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":91:27)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":91:28)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":91:34)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":91:33)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":93:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":100:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:16)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:22)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:31)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:38)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:48)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:53)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:64)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:30)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":97:65)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":98:19)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":98:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":99:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_06.c":99:14)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc9, #loc10])
#loc159 = loc(fused[#loc11, #loc12])
#loc160 = loc(fused[#loc13, #loc14])
#loc161 = loc(fused[#loc15, #loc16])
#loc162 = loc(fused[#loc17, #loc18])
#loc163 = loc(fused[#loc19, #loc20])
#loc164 = loc(fused[#loc22, #loc21])
#loc165 = loc(fused[#loc23, #loc24])
#loc166 = loc(fused[#loc25, #loc26])
#loc167 = loc(fused[#loc27, #loc24])
#loc168 = loc(fused[#loc30, #loc31])
#loc169 = loc(fused[#loc29, #loc31])
#loc170 = loc(fused[#loc28, #loc32])
#loc171 = loc(fused[#loc33, #loc32])
#loc172 = loc(fused[#loc34, #loc35])
#loc173 = loc(fused[#loc36, #loc37])
#loc174 = loc(fused[#loc38, #loc35])
#loc175 = loc(fused[#loc42, #loc43])
#loc176 = loc(fused[#loc46, #loc48])
#loc177 = loc(fused[#loc49, #loc50])
#loc178 = loc(fused[#loc51, #loc50])
#loc179 = loc(fused[#loc52, #loc53])
#loc180 = loc(fused[#loc58, #loc59])
#loc181 = loc(fused[#loc60, #loc61])
#loc182 = loc(fused[#loc62, #loc63])
#loc183 = loc(fused[#loc65, #loc66])
#loc184 = loc(fused[#loc67, #loc68])
#loc185 = loc(fused[#loc70, #loc69])
#loc186 = loc(fused[#loc71, #loc72])
#loc187 = loc(fused[#loc73, #loc74])
#loc188 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc189 = loc(fused[#loc82, #loc83])
#loc190 = loc(fused[#loc84, #loc83])
#loc191 = loc(fused[#loc79, #loc85])
#loc192 = loc(fused[#loc86, #loc85])
#loc193 = loc(fused[#loc87, #loc88])
#loc194 = loc(fused[#loc89, #loc90])
#loc195 = loc(fused[#loc91, #loc88])
#loc196 = loc(fused[#loc95, #loc96])
#loc197 = loc(fused[#loc99, #loc101])
#loc198 = loc(fused[#loc102, #loc103])
#loc199 = loc(fused[#loc104, #loc103])
#loc200 = loc(fused[#loc105, #loc106])
#loc201 = loc(fused[#loc111, #loc112])
#loc202 = loc(fused[#loc113, #loc114])
#loc203 = loc(fused[#loc116, #loc115])
#loc204 = loc(fused[#loc117, #loc118])
#loc205 = loc(fused[#loc119, #loc120])
#loc206 = loc(fused[#loc121, #loc118])
#loc207 = loc(fused[#loc125, #loc126])
#loc208 = loc(fused[#loc127, #loc126])
#loc209 = loc(fused[#loc122, #loc128])
#loc210 = loc(fused[#loc129, #loc128])
#loc211 = loc(fused[#loc130, #loc131])
#loc212 = loc(fused[#loc132, #loc133])
#loc213 = loc(fused[#loc134, #loc131])
#loc214 = loc(fused[#loc138, #loc139])
#loc215 = loc(fused[#loc142, #loc144])
#loc216 = loc(fused[#loc145, #loc146])
#loc217 = loc(fused[#loc147, #loc146])
#loc218 = loc(fused[#loc148, #loc149])
