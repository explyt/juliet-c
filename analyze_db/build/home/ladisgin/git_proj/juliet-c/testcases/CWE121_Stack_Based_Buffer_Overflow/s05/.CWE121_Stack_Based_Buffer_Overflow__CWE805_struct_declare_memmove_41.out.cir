!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":21:83)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":21:99)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":55:87)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":55:103)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":100:10)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":100:14)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":100:20)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":100:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc145 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc59, #loc60])
#loc187 = loc(fused[#loc113, #loc114])
#loc188 = loc(fused[#loc115, #loc116])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc143)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc146)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
    cir.store %arg0, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc11)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc149)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc150)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc151)
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc20)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc21)
    %8 = cir.cmp(lt, %5, %7) : !u64i, !cir.bool loc(#loc152)
    cir.brcond %8 ^bb5, ^bb9 loc(#loc22)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc153)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc25)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %10 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %15 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc17)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc33)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc156)
    cir.br ^bb4 loc(#loc150)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc15)
  ^bb11:  // pred: ^bb10
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc34)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc35)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc36)
    %27 = cir.const #cir.int<8> : !u64i loc(#loc157)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc158)
    cir.libc.memmove %28 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc159)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    cir.call @printStructLine(%31) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc44)
    cir.br ^bb12 loc(#loc13)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc4)
  } loc(#loc144)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc162)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc163)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc164)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_badSink(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc56)
    cir.return loc(#loc46)
  } loc(#loc160)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc59, #loc60])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc167)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    cir.store %arg0, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc65)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc170)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc72)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    cir.br ^bb4 loc(#loc171)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc75)
    %8 = cir.cmp(lt, %5, %7) : !u64i, !cir.bool loc(#loc173)
    cir.brcond %8 ^bb5, ^bb9 loc(#loc76)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc174)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc79)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %10 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %15 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc71)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc84)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc85)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.br ^bb4 loc(#loc171)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc71)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc69)
  ^bb11:  // pred: ^bb10
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc86)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc87)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc88)
    %27 = cir.const #cir.int<8> : !u64i loc(#loc178)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc179)
    cir.libc.memmove %28 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc180)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
    cir.call @printStructLine(%31) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc96)
    cir.br ^bb12 loc(#loc67)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc58)
  } loc(#loc165)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    cir.return loc(#loc98)
  } loc(#loc181)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc183)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc184)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc110)
  cir.func @main(%arg0: !s32i loc(fused[#loc113, #loc114]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc115, #loc116])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc112)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc117)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc118)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc119)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc119)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc120)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc107)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_good() : () -> () loc(#loc122)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc108)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc109)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_bad() : () -> () loc(#loc126)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc110)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc129)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.return %17 : !s32i loc(#loc191)
  } loc(#loc186)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc194)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc195)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc196)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41_goodG2BSink(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc142)
    cir.return loc(#loc132)
  } loc(#loc192)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":38:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":24:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":24:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":26:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":26:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":22:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":23:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":37:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":25:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":33:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":28:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":32:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":28:22)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":28:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":28:25)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":28:29)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":28:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":29:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":30:36)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":30:24)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":30:17)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":31:36)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":31:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":31:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":28:35)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":28:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":35:17)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":35:23)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":35:31)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":35:35)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":35:55)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":35:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":35:56)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":36:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":36:31)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":36:32)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":36:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":40:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":49:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":42:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":42:21)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":43:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":43:35)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":44:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":44:37)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":47:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":47:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":48:82)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":48:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":55:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":72:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":58:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":58:33)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":60:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":60:20)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":56:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":57:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":71:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":59:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":67:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":62:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":66:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":62:22)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":62:18)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":62:25)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":62:29)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":62:27)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":63:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":64:36)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":64:24)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":64:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":65:36)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":65:24)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":65:17)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":62:35)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":62:34)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":69:17)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":69:23)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":69:31)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":69:35)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":69:55)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":69:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":69:56)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":70:26)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":70:31)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":70:32)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":70:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":85:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":88:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":87:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":87:13)
#loc101 = loc("/usr/include/stdlib.h":575:1)
#loc102 = loc("/usr/include/stdlib.h":575:41)
#loc103 = loc("/usr/include/time.h":76:1)
#loc104 = loc("/usr/include/time.h":76:38)
#loc105 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc106 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":105:15)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":107:15)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":110:15)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":112:15)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":100:1)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":115:1)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":101:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":103:27)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":103:22)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":103:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":105:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":106:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":106:79)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":107:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":110:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":111:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":111:78)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":112:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":114:12)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":114:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":75:1)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":83:1)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":77:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":77:21)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":78:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":78:35)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":79:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":79:37)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":81:12)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":81:5)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":82:86)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_41.c":82:5)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc7, #loc8])
#loc147 = loc(fused[#loc9, #loc10])
#loc148 = loc(fused[#loc12, #loc13])
#loc149 = loc(fused[#loc14, #loc15])
#loc150 = loc(fused[#loc16, #loc17])
#loc151 = loc(fused[#loc19, #loc18])
#loc152 = loc(fused[#loc20, #loc21])
#loc153 = loc(fused[#loc23, #loc17])
#loc154 = loc(fused[#loc26, #loc24])
#loc155 = loc(fused[#loc30, #loc28])
#loc156 = loc(fused[#loc33, #loc32])
#loc157 = loc(fused[#loc37, #loc38])
#loc158 = loc(fused[#loc36, #loc38])
#loc159 = loc(fused[#loc39, #loc40])
#loc160 = loc(fused[#loc45, #loc46])
#loc161 = loc(fused[#loc47, #loc48])
#loc162 = loc(fused[#loc49, #loc50])
#loc163 = loc(fused[#loc51, #loc52])
#loc164 = loc(fused[#loc54, #loc53])
#loc165 = loc(fused[#loc57, #loc58])
#loc167 = loc(fused[#loc61, #loc62])
#loc168 = loc(fused[#loc63, #loc64])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc68, #loc69])
#loc171 = loc(fused[#loc70, #loc71])
#loc172 = loc(fused[#loc73, #loc72])
#loc173 = loc(fused[#loc74, #loc75])
#loc174 = loc(fused[#loc77, #loc71])
#loc175 = loc(fused[#loc80, #loc78])
#loc176 = loc(fused[#loc83, #loc81])
#loc177 = loc(fused[#loc85, #loc84])
#loc178 = loc(fused[#loc89, #loc90])
#loc179 = loc(fused[#loc88, #loc90])
#loc180 = loc(fused[#loc91, #loc92])
#loc181 = loc(fused[#loc97, #loc98])
#loc182 = loc(fused[#loc99, #loc100])
#loc183 = loc(fused[#loc101, #loc102])
#loc184 = loc(fused[#loc103, #loc104])
#loc185 = loc(fused[#loc105, #loc106])
#loc186 = loc(fused[#loc111, #loc112])
#loc189 = loc(fused[#loc122, #loc123])
#loc190 = loc(fused[#loc126, #loc127])
#loc191 = loc(fused[#loc130, #loc129])
#loc192 = loc(fused[#loc131, #loc132])
#loc193 = loc(fused[#loc133, #loc134])
#loc194 = loc(fused[#loc135, #loc136])
#loc195 = loc(fused[#loc137, #loc138])
#loc196 = loc(fused[#loc140, #loc139])
