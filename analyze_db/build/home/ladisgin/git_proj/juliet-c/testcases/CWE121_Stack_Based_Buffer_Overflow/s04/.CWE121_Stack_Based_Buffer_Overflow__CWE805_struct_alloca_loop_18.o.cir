!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc127)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc129)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc131)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc133)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc14)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc14)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc134)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc16)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc16)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc16)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    cir.store %20, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc138)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc139)
  ^bb4:  // pred: ^bb3
    %21 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc27)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc140)
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc30)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc141)
    cir.brcond %26 ^bb6, ^bb10 loc(#loc31)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc142)
  ^bb7:  // pred: ^bb6
    %27 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc42)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc145)
    cir.br ^bb5 loc(#loc139)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc26)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc24)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc146)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc147)
  ^bb14:  // pred: ^bb13
    %39 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc47)
    cir.store %40, %2 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    cir.br ^bb15 loc(#loc147)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %41 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc50)
    %44 = cir.cmp(lt, %41, %43) : !u64i, !cir.bool loc(#loc149)
    cir.brcond %44 ^bb16, ^bb20 loc(#loc51)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc150)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!ty__twoIntsStruct>, %46 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    %48 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %48 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    cir.copy %50 to %47 : !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    cir.br ^bb18 loc(#loc46)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc46)
  ^bb19:  // pred: ^bb18
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %52 = cir.unary(inc, %51) : !u64i, !u64i loc(#loc59)
    cir.store %52, %2 : !u64i, !cir.ptr<!u64i> loc(#loc151)
    cir.br ^bb15 loc(#loc147)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc46)
  ^bb21:  // pred: ^bb20
    %53 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %54 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    cir.call @printStructLine(%55) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc63)
    cir.br ^bb22 loc(#loc44)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc22)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc4)
  } loc(#loc128)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc65)
  } loc(#loc152)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc155)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc159)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc79)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc79)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc79)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc79)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc160)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc81)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc81)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc81)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc81)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc81)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    cir.store %20, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    cir.br ^bb2 loc(#loc163)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc164)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc165)
  ^bb4:  // pred: ^bb3
    %21 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc92)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc166)
    cir.br ^bb5 loc(#loc165)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc94)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc95)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc167)
    cir.brcond %26 ^bb6, ^bb10 loc(#loc96)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc168)
  ^bb7:  // pred: ^bb6
    %27 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb8 loc(#loc91)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc91)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc105)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc171)
    cir.br ^bb5 loc(#loc165)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc91)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc89)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc172)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc173)
  ^bb14:  // pred: ^bb13
    %39 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc110)
    cir.store %40, %2 : !u64i, !cir.ptr<!u64i> loc(#loc174)
    cir.br ^bb15 loc(#loc173)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %41 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc112)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc113)
    %44 = cir.cmp(lt, %41, %43) : !u64i, !cir.bool loc(#loc175)
    cir.brcond %44 ^bb16, ^bb20 loc(#loc114)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc176)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!ty__twoIntsStruct>, %46 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    %48 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc119)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %48 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    cir.copy %50 to %47 : !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    cir.br ^bb18 loc(#loc109)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc109)
  ^bb19:  // pred: ^bb18
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %52 = cir.unary(inc, %51) : !u64i, !u64i loc(#loc122)
    cir.store %52, %2 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.br ^bb15 loc(#loc173)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc109)
  ^bb21:  // pred: ^bb20
    %53 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %54 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
    cir.call @printStructLine(%55) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc126)
    cir.br ^bb22 loc(#loc107)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc87)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc69)
  } loc(#loc154)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":52:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":32:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":32:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":34:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":34:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":43:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":43:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":23:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":23:21)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":24:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":24:54)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":25:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":25:55)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":26:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":26:10)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":30:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":30:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":31:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":51:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":33:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":41:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":36:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":40:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":36:22)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":36:18)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":36:25)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":36:29)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":36:27)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":37:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":38:36)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":38:24)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":38:17)
#loc36 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":39:36)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":39:24)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":39:17)
#loc40 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":36:35)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":36:34)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":42:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":50:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":45:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":48:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":45:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":45:18)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":45:25)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":45:29)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":45:27)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":46:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":47:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":47:22)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":47:23)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":47:34)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":47:27)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":45:35)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":45:34)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":49:30)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":49:35)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":49:36)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":49:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":91:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":94:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":93:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":93:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":59:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":89:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":69:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":69:33)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":71:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":71:20)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":80:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":80:20)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":61:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":61:21)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":62:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":62:54)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":63:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":63:55)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":64:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":64:10)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":67:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":67:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":68:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":88:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":70:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":78:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":73:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":77:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":73:22)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":73:18)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":73:25)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":73:29)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":73:27)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":74:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":75:36)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":75:24)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":75:17)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":76:36)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":76:24)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":76:17)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":73:35)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":73:34)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":79:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":87:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":82:13)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":85:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":82:22)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":82:18)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":82:25)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":82:29)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":82:27)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":83:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":84:17)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":84:22)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":84:23)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":84:34)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":84:27)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":82:35)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":82:34)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":86:30)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":86:35)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":86:36)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_18.c":86:13)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc9, #loc10])
#loc132 = loc(fused[#loc11, #loc12])
#loc133 = loc(fused[#loc13, #loc14])
#loc134 = loc(fused[#loc15, #loc16])
#loc135 = loc(fused[#loc17, #loc18])
#loc136 = loc(fused[#loc20, #loc19])
#loc137 = loc(fused[#loc21, #loc22])
#loc138 = loc(fused[#loc23, #loc24])
#loc139 = loc(fused[#loc25, #loc26])
#loc140 = loc(fused[#loc28, #loc27])
#loc141 = loc(fused[#loc29, #loc30])
#loc142 = loc(fused[#loc32, #loc26])
#loc143 = loc(fused[#loc35, #loc33])
#loc144 = loc(fused[#loc39, #loc37])
#loc145 = loc(fused[#loc42, #loc41])
#loc146 = loc(fused[#loc43, #loc44])
#loc147 = loc(fused[#loc45, #loc46])
#loc148 = loc(fused[#loc48, #loc47])
#loc149 = loc(fused[#loc49, #loc50])
#loc150 = loc(fused[#loc52, #loc46])
#loc151 = loc(fused[#loc59, #loc58])
#loc152 = loc(fused[#loc64, #loc65])
#loc153 = loc(fused[#loc66, #loc67])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc72, #loc73])
#loc157 = loc(fused[#loc74, #loc75])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc78, #loc79])
#loc160 = loc(fused[#loc80, #loc81])
#loc161 = loc(fused[#loc82, #loc83])
#loc162 = loc(fused[#loc85, #loc84])
#loc163 = loc(fused[#loc86, #loc87])
#loc164 = loc(fused[#loc88, #loc89])
#loc165 = loc(fused[#loc90, #loc91])
#loc166 = loc(fused[#loc93, #loc92])
#loc167 = loc(fused[#loc94, #loc95])
#loc168 = loc(fused[#loc97, #loc91])
#loc169 = loc(fused[#loc100, #loc98])
#loc170 = loc(fused[#loc103, #loc101])
#loc171 = loc(fused[#loc105, #loc104])
#loc172 = loc(fused[#loc106, #loc107])
#loc173 = loc(fused[#loc108, #loc109])
#loc174 = loc(fused[#loc111, #loc110])
#loc175 = loc(fused[#loc112, #loc113])
#loc176 = loc(fused[#loc115, #loc109])
#loc177 = loc(fused[#loc122, #loc121])
