!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":137:10)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":137:14)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":137:20)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":137:32)
!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType = !cir.struct<union "CWE190_Integer_Overflow__int_fgets_postinc_34_unionType" {!s32i, !s32i}>
#loc189 = loc(fused[#loc71, #loc72])
#loc190 = loc(fused[#loc73, #loc74])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc163)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc164)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc166)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_postinc_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc168)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc169)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc170)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc171)
    %4 = cir.alloca !ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc172)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc24)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc168)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc168)
    cir.br ^bb2 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc31)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc31)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc31)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc31)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc176)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc177)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
    cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb5 loc(#loc36)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %27 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %26, %27 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb8 loc(#loc180)
  ^bb8:  // pred: ^bb7
    %28 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType> -> !cir.ptr<!s32i> loc(#loc48)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.store %29, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb9 loc(#loc181)
  ^bb9:  // pred: ^bb8
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc52)
    cir.store %31, %1 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.store %32, %2 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc54)
    cir.br ^bb10 loc(#loc50)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc47)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc13)
  } loc(#loc167)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_postinc_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc183)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc186)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_fgets_postinc_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE190_Integer_Overflow__int_fgets_postinc_34_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_fgets_postinc_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE190_Integer_Overflow__int_fgets_postinc_34_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.return %17 : !s32i loc(#loc193)
  } loc(#loc188)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc195)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc196)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc198)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc101)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %7 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType> -> !cir.ptr<!s32i> loc(#loc48)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb2 loc(#loc203)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc110)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc112)
    cir.br ^bb3 loc(#loc108)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc106)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc90)
  } loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc113)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc206)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc207)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc208)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc209)
    %4 = cir.alloca !ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc210)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc126)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc206)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc206)
    cir.br ^bb2 loc(#loc213)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc133)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc133)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc133)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc133)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc133)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc133)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc133)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc133)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc134)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc214)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc215)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc141)
    cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.br ^bb5 loc(#loc138)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc144)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb5 loc(#loc131)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc129)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %27 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %26, %27 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb8 loc(#loc218)
  ^bb8:  // pred: ^bb7
    %28 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fgets_postinc_34_unionType> -> !cir.ptr<!s32i> loc(#loc48)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.store %29, %1 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.br ^bb9 loc(#loc219)
  ^bb9:  // pred: ^bb8
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %31 = cir.const #cir.int<2147483647> : !s32i loc(#loc153)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc220)
    cir.brcond %32 ^bb10, ^bb11 loc(#loc221)
  ^bb10:  // pred: ^bb9
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %34 = cir.unary(inc, %33) : !s32i, !s32i loc(#loc158)
    cir.store %34, %1 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.store %35, %2 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc160)
    cir.br ^bb12 loc(#loc155)
  ^bb11:  // pred: ^bb9
    %37 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc113)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    cir.br ^bb12 loc(#loc151)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc151)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc149)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc115)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":46:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":30:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":59:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":37:9)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":37:45)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":51:9)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":51:28)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":55:13)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":55:26)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":32:5)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":32:9)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":33:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":33:61)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":35:12)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":35:5)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":36:5)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":48:5)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":39:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":47:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":39:19)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":39:32)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":39:49)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":39:13)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":39:59)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":40:9)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":43:9)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":45:9)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":42:25)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":42:20)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":42:13)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":42:36)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":46:13)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":49:26)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":24:9)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":49:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":50:5)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":58:5)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":25:9)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":52:9)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":57:9)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":54:17)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":54:13)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":56:26)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":56:13)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":123:1)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":127:1)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":125:5)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":125:13)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":126:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":126:13)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":142:15)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":144:15)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":147:15)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":149:15)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":137:1)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":152:1)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":138:1)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":140:27)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":140:22)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":140:5)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":142:5)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":143:5)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":143:56)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":144:5)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":147:5)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":148:5)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":148:55)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":149:5)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":151:12)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":151:5)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":66:1)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":84:1)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":76:9)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":76:28)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":80:13)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":80:26)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":68:5)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":68:9)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":69:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":69:61)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":71:12)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":71:5)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":73:12)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":73:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":74:26)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":74:5)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":75:5)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":83:5)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":77:9)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":82:9)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":79:17)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":79:13)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":81:26)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":81:13)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":118:23)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":87:1)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":121:1)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":94:9)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":94:45)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":108:9)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":108:28)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":113:13)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":113:26)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":89:5)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":89:9)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":90:5)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":90:61)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":92:12)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":92:5)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":93:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":105:5)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":96:9)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":104:9)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":96:19)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":96:32)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":96:49)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":96:13)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":96:59)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":97:9)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":100:9)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":102:9)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":99:25)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":99:20)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":99:13)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":99:36)
#loc144 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":103:23)
#loc145 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":103:13)
#loc146 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":106:26)
#loc147 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":106:5)
#loc148 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":107:5)
#loc149 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":120:5)
#loc150 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":110:9)
#loc151 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":119:9)
#loc152 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":110:13)
#loc153 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":110:20)
#loc154 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":111:9)
#loc155 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":115:9)
#loc156 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":117:9)
#loc157 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":112:17)
#loc158 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":112:13)
#loc159 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":114:26)
#loc160 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":114:13)
#loc161 = loc("CWE190_Integer_Overflow__int_fgets_postinc_34.c":118:13)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc5, #loc6])
#loc165 = loc(fused[#loc7, #loc8])
#loc166 = loc(fused[#loc10, #loc11])
#loc167 = loc(fused[#loc12, #loc13])
#loc168 = loc(fused[#loc14, #loc15])
#loc169 = loc(fused[#loc16, #loc17])
#loc170 = loc(fused[#loc18, #loc19])
#loc171 = loc(fused[#loc20, #loc21])
#loc172 = loc(fused[#loc22, #loc23])
#loc173 = loc(fused[#loc25, #loc24])
#loc174 = loc(fused[#loc26, #loc27])
#loc175 = loc(fused[#loc28, #loc29])
#loc176 = loc(fused[#loc33, #loc34])
#loc177 = loc(fused[#loc35, #loc36, #loc37, #loc29])
#loc178 = loc(fused[#loc40, #loc41])
#loc179 = loc(fused[#loc45, #loc43])
#loc180 = loc(fused[#loc46, #loc47])
#loc181 = loc(fused[#loc49, #loc50])
#loc182 = loc(fused[#loc52, #loc51])
#loc183 = loc(fused[#loc55, #loc56])
#loc184 = loc(fused[#loc57, #loc58])
#loc185 = loc(fused[#loc59, #loc60])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc69, #loc70])
#loc191 = loc(fused[#loc80, #loc81])
#loc192 = loc(fused[#loc84, #loc85])
#loc193 = loc(fused[#loc88, #loc87])
#loc194 = loc(fused[#loc89, #loc90])
#loc195 = loc(fused[#loc91, #loc92])
#loc196 = loc(fused[#loc93, #loc94])
#loc197 = loc(fused[#loc95, #loc96])
#loc198 = loc(fused[#loc97, #loc98])
#loc199 = loc(fused[#loc100, #loc99])
#loc200 = loc(fused[#loc102, #loc101])
#loc201 = loc(fused[#loc104, #loc103])
#loc202 = loc(fused[#loc105, #loc106])
#loc203 = loc(fused[#loc107, #loc108])
#loc204 = loc(fused[#loc110, #loc109])
#loc205 = loc(fused[#loc114, #loc115])
#loc206 = loc(fused[#loc116, #loc117])
#loc207 = loc(fused[#loc118, #loc119])
#loc208 = loc(fused[#loc120, #loc121])
#loc209 = loc(fused[#loc122, #loc123])
#loc210 = loc(fused[#loc124, #loc125])
#loc211 = loc(fused[#loc127, #loc126])
#loc212 = loc(fused[#loc128, #loc129])
#loc213 = loc(fused[#loc130, #loc131])
#loc214 = loc(fused[#loc135, #loc136])
#loc215 = loc(fused[#loc137, #loc138, #loc139, #loc131])
#loc216 = loc(fused[#loc142, #loc143])
#loc217 = loc(fused[#loc147, #loc146])
#loc218 = loc(fused[#loc148, #loc149])
#loc219 = loc(fused[#loc150, #loc151])
#loc220 = loc(fused[#loc152, #loc153])
#loc221 = loc(fused[#loc154, #loc155, #loc156, #loc151])
#loc222 = loc(fused[#loc158, #loc157])
