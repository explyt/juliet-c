!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":94:10)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":94:14)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":94:20)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":94:32)
#loc190 = loc(fused[#loc84, #loc85])
#loc191 = loc(fused[#loc86, #loc87])
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc161)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc163)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc167)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc168)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc172)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc30)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc173)
    } loc(#loc171)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc32)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc33)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc174)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc37)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc39)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc175)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %24 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc178)
      %26 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc180)
        %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc180)
        cir.store %29, %28 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc180)
        %30 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc54)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
        %32 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
        %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
        %35 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
        %37 = cir.const #cir.int<1> : !u64i loc(#loc181)
        %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc182)
        cir.libc.memcpy %38 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc183)
        %39 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc62)
        %41 = cir.const #cir.int<50> : !s32i loc(#loc63)
        %42 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc63)
        %44 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc65)
        %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc65)
        cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc184)
        %46 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
        cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc67)
        %47 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc68)
        %48 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
        %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
        cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
      } loc(#loc179)
    } loc(#loc177)
    cir.return loc(#loc12)
  } loc(#loc164)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    cir.return loc(#loc71)
  } loc(#loc185)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc81)
  cir.func @main(%arg0: !s32i loc(fused[#loc84, #loc85]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc86, #loc87])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc83)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc88)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc89)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc90)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc90)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc91)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc78)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_good() : () -> () loc(#loc93)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc79)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc80)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_bad() : () -> () loc(#loc97)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.return %17 : !s32i loc(#loc194)
  } loc(#loc189)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc197)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc108)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc109)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc198)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc199)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc203)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc119)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc120)
        %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc121)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
      } loc(#loc204)
    } loc(#loc202)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc123)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc124)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc124)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc124)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc205)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc128)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc130)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc130)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc132)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc206)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %24 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc209)
      %26 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc211)
        %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc211)
        cir.store %29, %28 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc211)
        %30 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc143)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
        %32 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
        %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc145)
        %35 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
        %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc145)
        %37 = cir.const #cir.int<1> : !u64i loc(#loc212)
        %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc213)
        cir.libc.memcpy %38 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc214)
        %39 = cir.const #cir.int<0> : !s32i loc(#loc151)
        %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc151)
        %41 = cir.const #cir.int<50> : !s32i loc(#loc152)
        %42 = cir.const #cir.int<1> : !s32i loc(#loc153)
        %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc152)
        %44 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc154)
        %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc154)
        cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc215)
        %46 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
        cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc156)
        %47 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc157)
        %48 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
        %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
        cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc103)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":29:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":50:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":31:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":31:12)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":32:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":32:74)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":33:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":33:27)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":33:31)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":33:42)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":33:43)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":33:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":34:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":34:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":34:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":34:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":34:23)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":34:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":34:30)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":34:29)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":36:12)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":36:18)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":36:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":36:27)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":36:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":36:28)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":37:19)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":37:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":37:10)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":37:14)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":37:15)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":38:26)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":23:12)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":38:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":39:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":49:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":40:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":40:31)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":24:12)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":41:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":48:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":42:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":42:29)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":44:20)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":44:26)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":44:32)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":44:39)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":44:45)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":44:56)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":44:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":44:57)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":45:26)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":45:18)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":45:21)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":45:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":46:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":46:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":47:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":47:18)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":80:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":83:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":82:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":82:13)
#loc74 = loc("/usr/include/stdlib.h":575:1)
#loc75 = loc("/usr/include/stdlib.h":575:41)
#loc76 = loc("/usr/include/time.h":76:1)
#loc77 = loc("/usr/include/time.h":76:38)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":99:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":101:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":104:15)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":106:15)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":94:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":109:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":95:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":97:27)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":97:22)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":97:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":99:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":100:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":100:69)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":101:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":104:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":105:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":105:68)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":106:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":108:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":108:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":57:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":78:1)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":59:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":59:12)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":60:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":60:74)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":61:20)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":61:27)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":61:31)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":61:42)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":61:43)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":61:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":62:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":62:33)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":62:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":62:17)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":62:23)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":62:24)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":62:30)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":62:29)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":64:12)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":64:18)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":64:23)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":64:26)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":64:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":64:27)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":65:18)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":65:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":65:10)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":65:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":65:14)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":66:26)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":66:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":67:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":77:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":68:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":68:31)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":69:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":76:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":70:13)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":70:29)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":72:20)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":72:26)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":72:32)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":72:39)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":72:45)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":72:56)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":72:13)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":72:57)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":73:26)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":73:18)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":73:21)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":73:13)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":74:23)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":74:13)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":75:13)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_34.c":75:18)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc19, #loc20])
#loc168 = loc(fused[#loc18, #loc20])
#loc169 = loc(fused[#loc17, #loc21])
#loc170 = loc(fused[#loc22, #loc21])
#loc171 = loc(fused[#loc23, #loc24])
#loc172 = loc(fused[#loc25, #loc26])
#loc173 = loc(fused[#loc27, #loc24])
#loc174 = loc(fused[#loc35, #loc36])
#loc175 = loc(fused[#loc38, #loc37])
#loc176 = loc(fused[#loc44, #loc42])
#loc177 = loc(fused[#loc45, #loc46])
#loc178 = loc(fused[#loc47, #loc48])
#loc179 = loc(fused[#loc50, #loc51])
#loc180 = loc(fused[#loc52, #loc53])
#loc181 = loc(fused[#loc58, #loc59])
#loc182 = loc(fused[#loc56, #loc59])
#loc183 = loc(fused[#loc60, #loc61])
#loc184 = loc(fused[#loc65, #loc62])
#loc185 = loc(fused[#loc70, #loc71])
#loc186 = loc(fused[#loc72, #loc73])
#loc187 = loc(fused[#loc74, #loc75])
#loc188 = loc(fused[#loc76, #loc77])
#loc189 = loc(fused[#loc82, #loc83])
#loc192 = loc(fused[#loc93, #loc94])
#loc193 = loc(fused[#loc97, #loc98])
#loc194 = loc(fused[#loc101, #loc100])
#loc195 = loc(fused[#loc102, #loc103])
#loc196 = loc(fused[#loc104, #loc105])
#loc197 = loc(fused[#loc106, #loc107])
#loc198 = loc(fused[#loc110, #loc111])
#loc199 = loc(fused[#loc109, #loc111])
#loc200 = loc(fused[#loc108, #loc112])
#loc201 = loc(fused[#loc113, #loc112])
#loc202 = loc(fused[#loc114, #loc115])
#loc203 = loc(fused[#loc116, #loc117])
#loc204 = loc(fused[#loc118, #loc115])
#loc205 = loc(fused[#loc126, #loc127])
#loc206 = loc(fused[#loc129, #loc128])
#loc207 = loc(fused[#loc134, #loc133])
#loc208 = loc(fused[#loc135, #loc136])
#loc209 = loc(fused[#loc137, #loc138])
#loc210 = loc(fused[#loc139, #loc140])
#loc211 = loc(fused[#loc141, #loc142])
#loc212 = loc(fused[#loc147, #loc148])
#loc213 = loc(fused[#loc145, #loc148])
#loc214 = loc(fused[#loc149, #loc150])
#loc215 = loc(fused[#loc154, #loc151])
