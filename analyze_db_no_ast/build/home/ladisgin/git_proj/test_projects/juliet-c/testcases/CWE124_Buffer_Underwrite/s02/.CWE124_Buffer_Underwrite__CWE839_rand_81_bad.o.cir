!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":25:52)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":25:59)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":25:63)
#loc43 = loc(fused[#loc9, #loc10])
!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_base = !cir.struct<class "CWE124_Buffer_Underwrite__CWE839_rand_81::CWE124_Buffer_Underwrite__CWE839_rand_81_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_bad = !cir.struct<class "CWE124_Buffer_Underwrite__CWE839_rand_81::CWE124_Buffer_Underwrite__CWE839_rand_81_bad" {!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc40)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc41)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc5)
  cir.func  @_ZNK40CWE124_Buffer_Underwrite__CWE839_rand_8144CWE124_Buffer_Underwrite__CWE839_rand_81_bad6actionEi(%arg0: !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_bad> loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":25:52), %arg1: !s32i loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc8)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc43)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_bad>> loc(#loc11)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_bad>>, !cir.ptr<!ty_CWE124_Buffer_Underwrite__CWE839_rand_813A3ACWE124_Buffer_Underwrite__CWE839_rand_81_bad> loc(#loc8)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc45)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc46)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc46)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc46)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc21)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc48)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc27)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc27)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc50)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc30)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc52)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc32)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc33)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc53)
              cir.condition(%16) loc(#loc53)
            } body {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc34)
              %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc35)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc35)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc35)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc36)
              cir.yield loc(#loc29)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc37)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc38)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc54)
              cir.yield loc(#loc51)
            } loc(#loc51)
          } loc(#loc51)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        } loc(#loc49)
      } loc(#loc47)
    } loc(#loc44)
    cir.return loc(#loc7)
  } loc(#loc42)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":43:23)
#loc6 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":25:1)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":46:1)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":26:1)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":27:5)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":45:5)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":28:9)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":28:13)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":29:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":29:30)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":32:9)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":44:9)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":32:13)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":32:20)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":33:9)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":40:9)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":42:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":34:28)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":34:20)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":34:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":36:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":39:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":36:21)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":36:17)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":36:24)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":36:28)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":38:37)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":38:30)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":38:17)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":36:33)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":36:32)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_rand_81_bad.cpp":43:13)
#loc40 = loc(fused[#loc1, #loc2])
#loc41 = loc(fused[#loc3, #loc4])
#loc42 = loc(fused[#loc6, #loc7])
#loc44 = loc(fused[#loc12, #loc13])
#loc45 = loc(fused[#loc14, #loc15])
#loc46 = loc(fused[#loc16, #loc17])
#loc47 = loc(fused[#loc18, #loc19])
#loc48 = loc(fused[#loc20, #loc21])
#loc49 = loc(fused[#loc22, #loc23, #loc24, #loc19])
#loc50 = loc(fused[#loc27, #loc25])
#loc51 = loc(fused[#loc28, #loc29])
#loc52 = loc(fused[#loc31, #loc30])
#loc53 = loc(fused[#loc32, #loc33])
#loc54 = loc(fused[#loc38, #loc37])
