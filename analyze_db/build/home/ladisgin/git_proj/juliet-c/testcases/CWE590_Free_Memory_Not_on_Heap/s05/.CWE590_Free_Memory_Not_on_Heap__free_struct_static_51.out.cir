!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":94:10)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":94:14)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":94:20)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":94:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc148 = loc(fused[#loc54, #loc55])
#loc149 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51_bad.dataBuffer = #cir.zero : !cir.array<!ty__twoIntsStruct x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51b_badSink(!cir.ptr<!ty__twoIntsStruct>) loc(#loc127)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc130)
    cir.scope {
      %3 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51_bad.dataBuffer : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>> loc(#loc1)
      cir.scope {
        %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc133)
        cir.scope {
          %6 = cir.const #cir.int<0> : !s32i loc(#loc18)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc18)
          cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc135)
          cir.for : cond {
            %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc20)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc21)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc21)
            %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc136)
            cir.condition(%11) loc(#loc22)
          } body {
            cir.scope {
              %8 = cir.const #cir.int<1> : !s32i loc(#loc24)
              %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc25)
              %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %9 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %8, %12 : !s32i, !cir.ptr<!s32i> loc(#loc138)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
              %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %15 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %14 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc139)
            } loc(#loc137)
            cir.yield loc(#loc17)
          } step {
            %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc33)
            cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc140)
            cir.yield loc(#loc134)
          } loc(#loc134)
        } loc(#loc134)
      } loc(#loc132)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
      cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
    } loc(#loc131)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51b_badSink(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc37)
    cir.return loc(#loc5)
  } loc(#loc128)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc142)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc144)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc145)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51_good : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %17 : !s32i loc(#loc152)
  } loc(#loc147)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc154)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51b_goodG2BSink(!cir.ptr<!ty__twoIntsStruct>) loc(#loc155)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc160)
      %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc89)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc90)
      %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc90)
      %7 = cir.const #cir.int<8> : !u64i loc(#loc161)
      %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc162)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc89)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc163)
      cir.store %10, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc160)
      cir.scope {
        %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
        %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc165)
        cir.if %15 {
          %16 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc99)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc100)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc99)
        } loc(#loc166)
      } loc(#loc164)
      cir.scope {
        %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc168)
        cir.scope {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc107)
          cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc170)
          cir.for : cond {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc109)
            %16 = cir.const #cir.int<100> : !s32i loc(#loc110)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc110)
            %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc171)
            cir.condition(%18) loc(#loc111)
          } body {
            cir.scope {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
              %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc115)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
              %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc173)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
              %22 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc119)
              %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
              %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc174)
            } loc(#loc172)
            cir.yield loc(#loc106)
          } step {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc121)
            %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc122)
            cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc175)
            cir.yield loc(#loc169)
          } loc(#loc169)
        } loc(#loc169)
      } loc(#loc167)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
      cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc176)
    } loc(#loc159)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_static_51b_goodG2BSink(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc126)
    cir.return loc(#loc80)
  } loc(#loc156)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":32:30)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":24:1)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":24:89)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":26:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":44:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":28:5)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":28:21)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":29:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":29:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":30:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":42:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":33:9)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":40:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":34:13)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":34:20)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":35:13)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":39:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":35:22)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":35:18)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":35:25)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":35:29)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":35:27)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":36:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":37:40)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":37:28)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":37:17)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":38:40)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":38:28)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":38:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":35:35)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":35:34)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":41:16)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":41:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":43:68)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":43:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":79:1)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":82:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":81:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":81:13)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":99:15)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":101:15)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":104:15)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":106:15)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":94:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":109:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":95:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":97:27)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":97:22)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":97:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":99:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":100:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":100:64)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":101:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":104:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":105:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":105:63)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":106:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":108:12)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":108:5)
#loc72 = loc("/usr/include/stdlib.h":672:1)
#loc73 = loc("/usr/include/stdlib.h":672:45)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":63:23)
#loc75 = loc("/usr/include/stdlib.h":756:1)
#loc76 = loc("/usr/include/stdlib.h":756:70)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":51:1)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":51:93)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":54:1)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":77:1)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":56:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":56:21)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":57:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":57:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":58:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":75:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":60:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":60:87)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":60:55)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":60:62)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":60:66)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":60:86)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":61:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":65:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":61:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":61:27)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":62:9)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":63:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":64:13)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":64:18)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":66:9)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":73:9)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":67:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":67:20)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":68:13)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":72:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":68:22)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":68:18)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":68:25)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":68:29)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":68:27)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":69:13)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":70:40)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":70:17)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":70:28)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":70:29)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":71:40)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":71:17)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":71:28)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":71:29)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":68:35)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":68:34)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":74:16)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":74:9)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":76:72)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_51a.c":76:5)
#loc127 = loc(fused[#loc2, #loc3])
#loc128 = loc(fused[#loc4, #loc5])
#loc129 = loc(fused[#loc6, #loc7])
#loc130 = loc(fused[#loc9, #loc8])
#loc131 = loc(fused[#loc10, #loc11])
#loc132 = loc(fused[#loc12, #loc13])
#loc133 = loc(fused[#loc14, #loc15])
#loc134 = loc(fused[#loc16, #loc17])
#loc135 = loc(fused[#loc19, #loc18])
#loc136 = loc(fused[#loc20, #loc21])
#loc137 = loc(fused[#loc23, #loc17])
#loc138 = loc(fused[#loc26, #loc24])
#loc139 = loc(fused[#loc30, #loc28])
#loc140 = loc(fused[#loc33, #loc32])
#loc141 = loc(fused[#loc35, #loc34])
#loc142 = loc(fused[#loc38, #loc39])
#loc143 = loc(fused[#loc40, #loc41])
#loc144 = loc(fused[#loc42, #loc43])
#loc145 = loc(fused[#loc44, #loc45])
#loc146 = loc(fused[#loc46, #loc47])
#loc147 = loc(fused[#loc52, #loc53])
#loc150 = loc(fused[#loc63, #loc64])
#loc151 = loc(fused[#loc67, #loc68])
#loc152 = loc(fused[#loc71, #loc70])
#loc153 = loc(fused[#loc72, #loc73])
#loc154 = loc(fused[#loc75, #loc76])
#loc155 = loc(fused[#loc77, #loc78])
#loc156 = loc(fused[#loc79, #loc80])
#loc157 = loc(fused[#loc81, #loc82])
#loc158 = loc(fused[#loc84, #loc83])
#loc159 = loc(fused[#loc85, #loc86])
#loc160 = loc(fused[#loc87, #loc88])
#loc161 = loc(fused[#loc91, #loc92])
#loc162 = loc(fused[#loc90, #loc92])
#loc163 = loc(fused[#loc89, #loc88])
#loc164 = loc(fused[#loc93, #loc94])
#loc165 = loc(fused[#loc95, #loc96])
#loc166 = loc(fused[#loc97, #loc94])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc105, #loc106])
#loc170 = loc(fused[#loc108, #loc107])
#loc171 = loc(fused[#loc109, #loc110])
#loc172 = loc(fused[#loc112, #loc106])
#loc173 = loc(fused[#loc114, #loc113])
#loc174 = loc(fused[#loc118, #loc117])
#loc175 = loc(fused[#loc122, #loc121])
#loc176 = loc(fused[#loc124, #loc123])
