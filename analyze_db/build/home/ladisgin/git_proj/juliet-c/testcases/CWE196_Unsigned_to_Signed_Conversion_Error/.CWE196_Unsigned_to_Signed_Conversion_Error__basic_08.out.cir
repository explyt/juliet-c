!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc52 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":124:10)
#loc53 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":124:14)
#loc54 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":124:20)
#loc55 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":124:32)
#loc180 = loc(fused[#loc52, #loc53])
#loc181 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE196_Unsigned_to_Signed_Conversion_Error/CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc156)
  cir.func private @printIntLine(!s32i) loc(#loc157)
  cir.func no_proto @CWE196_Unsigned_to_Signed_Conversion_Error__basic_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["intUnsigned"] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intSigned"] {alignment = 4 : i64} loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc162)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc13)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc13)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc163)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc164)
  ^bb3:  // pred: ^bb2
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc18)
    cir.store %6, %0 : !u32i, !cir.ptr<!u32i> loc(#loc165)
    cir.br ^bb4 loc(#loc166)
  ^bb4:  // pred: ^bb3
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc24)
    %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc167)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %11 ^bb5, ^bb6 loc(#loc169)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<2147483647> : !s32i loc(#loc27)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc27)
    %14 = cir.const #cir.int<2> : !u32i loc(#loc27)
    %15 = cir.binop(mul, %13, %14) : !u32i loc(#loc27)
    %16 = cir.const #cir.int<1> : !u32i loc(#loc27)
    %17 = cir.binop(add, %15, %16) : !u32i loc(#loc27)
    %18 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc28)
    %19 = cir.binop(sub, %17, %18) : !u32i loc(#loc170)
    cir.store %19, %0 : !u32i, !cir.ptr<!u32i> loc(#loc171)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc30)
    %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc30)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc33)
    cir.br ^bb8 loc(#loc17)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc12)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc12)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc158)
  cir.func no_proto @CWE196_Unsigned_to_Signed_Conversion_Error__basic_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc173)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc177)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc59)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE196_Unsigned_to_Signed_Conversion_Error__basic_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE196_Unsigned_to_Signed_Conversion_Error__basic_08_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE196_Unsigned_to_Signed_Conversion_Error__basic_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE196_Unsigned_to_Signed_Conversion_Error__basic_08_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.return %17 : !s32i loc(#loc184)
  } loc(#loc179)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc72)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    cir.return %2 : !s32i loc(#loc186)
  } loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc74)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc187)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["intUnsigned"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intSigned"] {alignment = 4 : i64} loc(#loc190)
    cir.br ^bb1 loc(#loc191)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc192)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc85)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc85)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc193)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb14 loc(#loc88)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc194)
  ^bb4:  // pred: ^bb3
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc93)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc93)
    cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc195)
    cir.br ^bb5 loc(#loc196)
  ^bb5:  // pred: ^bb4
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc99)
    %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc197)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc198)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc199)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #cir.int<2147483647> : !s32i loc(#loc102)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc102)
    %16 = cir.const #cir.int<2> : !u32i loc(#loc102)
    %17 = cir.binop(mul, %15, %16) : !u32i loc(#loc102)
    %18 = cir.const #cir.int<1> : !u32i loc(#loc102)
    %19 = cir.binop(add, %17, %18) : !u32i loc(#loc102)
    %20 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc103)
    %21 = cir.binop(sub, %19, %20) : !u32i loc(#loc200)
    cir.store %21, %0 : !u32i, !cir.ptr<!u32i> loc(#loc201)
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc202)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc107)
    %23 = cir.const #cir.int<2147483647> : !s32i loc(#loc108)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc108)
    %25 = cir.cmp(gt, %22, %24) : !u32i, !cir.bool loc(#loc203)
    cir.brcond %25 ^bb10, ^bb11 loc(#loc204)
  ^bb10:  // pred: ^bb9
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc110)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc111)
    cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
    cir.br ^bb11 loc(#loc106)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc106)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc112)
    %29 = cir.cast(integral, %28 : !u32i), !s32i loc(#loc112)
    cir.store %29, %1 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc115)
    cir.br ^bb13 loc(#loc92)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc84)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc84)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc78)
  } loc(#loc188)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc117)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc118)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.return %2 : !s32i loc(#loc207)
  } loc(#loc206)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["intUnsigned"] {alignment = 4 : i64} loc(#loc209)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intSigned"] {alignment = 4 : i64} loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc212)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc128)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc128)
    cir.brcond %4 ^bb2, ^bb13 loc(#loc213)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc214)
  ^bb3:  // pred: ^bb2
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc133)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc133)
    cir.store %6, %0 : !u32i, !cir.ptr<!u32i> loc(#loc215)
    cir.br ^bb4 loc(#loc216)
  ^bb4:  // pred: ^bb3
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc138)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc139)
    %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc217)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc218)
    cir.brcond %11 ^bb5, ^bb6 loc(#loc219)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<2147483647> : !s32i loc(#loc142)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc142)
    %14 = cir.const #cir.int<2> : !u32i loc(#loc142)
    %15 = cir.binop(mul, %13, %14) : !u32i loc(#loc142)
    %16 = cir.const #cir.int<1> : !u32i loc(#loc142)
    %17 = cir.binop(add, %15, %16) : !u32i loc(#loc142)
    %18 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc143)
    %19 = cir.binop(sub, %17, %18) : !u32i loc(#loc220)
    cir.store %19, %0 : !u32i, !cir.ptr<!u32i> loc(#loc221)
    cir.br ^bb6 loc(#loc137)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc137)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc222)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc147)
    %21 = cir.const #cir.int<2147483647> : !s32i loc(#loc148)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc148)
    %23 = cir.cmp(gt, %20, %22) : !u32i, !cir.bool loc(#loc223)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc224)
  ^bb9:  // pred: ^bb8
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc150)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc151)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc150)
    cir.br ^bb10 loc(#loc146)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc146)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc152)
    %27 = cir.cast(integral, %26 : !u32i), !s32i loc(#loc152)
    cir.store %27, %1 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc155)
    cir.br ^bb12 loc(#loc132)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc127)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc127)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc121)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE196_Unsigned_to_Signed_Conversion_Error/CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":33:1)
#loc6 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":50:1)
#loc7 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":38:13)
#loc8 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":38:22)
#loc9 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":39:13)
#loc10 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":39:17)
#loc11 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":35:5)
#loc12 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":49:5)
#loc13 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":35:8)
#loc14 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":35:26)
#loc15 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":36:5)
#loc16 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":37:9)
#loc17 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":48:9)
#loc18 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":40:27)
#loc19 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":40:13)
#loc20 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":40:32)
#loc21 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":41:13)
#loc22 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":44:13)
#loc23 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":41:17)
#loc24 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":41:26)
#loc25 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":41:31)
#loc26 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":42:13)
#loc27 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":43:31)
#loc28 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":43:42)
#loc29 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":43:17)
#loc30 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":46:25)
#loc31 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":46:13)
#loc32 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":47:26)
#loc33 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":47:13)
#loc34 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":109:1)
#loc35 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":113:1)
#loc36 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":111:5)
#loc37 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":111:11)
#loc38 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":112:5)
#loc39 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":112:11)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":129:15)
#loc47 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":131:15)
#loc48 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":134:15)
#loc49 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":136:15)
#loc50 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":124:1)
#loc51 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":139:1)
#loc56 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":125:1)
#loc57 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":127:27)
#loc58 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":127:22)
#loc59 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":127:5)
#loc60 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":129:5)
#loc61 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":130:5)
#loc62 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":130:63)
#loc63 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":131:5)
#loc64 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":134:5)
#loc65 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":135:5)
#loc66 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":135:62)
#loc67 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":136:5)
#loc68 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":138:12)
#loc69 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":138:5)
#loc70 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":21:1)
#loc71 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":24:1)
#loc72 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":23:12)
#loc73 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":23:5)
#loc74 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":62:19)
#loc75 = loc("/usr/include/stdlib.h":756:1)
#loc76 = loc("/usr/include/stdlib.h":756:70)
#loc77 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":57:1)
#loc78 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":83:1)
#loc79 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":67:13)
#loc80 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":67:22)
#loc81 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":68:13)
#loc82 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":68:17)
#loc83 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":59:5)
#loc84 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":82:5)
#loc85 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":59:8)
#loc86 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":59:27)
#loc87 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":60:5)
#loc88 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":63:5)
#loc89 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":65:5)
#loc90 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":62:9)
#loc91 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":66:9)
#loc92 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":81:9)
#loc93 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":69:27)
#loc94 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":69:13)
#loc95 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":69:32)
#loc96 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":70:13)
#loc97 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":73:13)
#loc98 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":70:17)
#loc99 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":70:26)
#loc100 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":70:31)
#loc101 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":71:13)
#loc102 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":72:31)
#loc103 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":72:42)
#loc104 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":72:17)
#loc105 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":75:13)
#loc106 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":78:13)
#loc107 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":75:17)
#loc108 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":75:31)
#loc109 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":76:13)
#loc110 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":77:17)
#loc111 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":77:22)
#loc112 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":79:25)
#loc113 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":79:13)
#loc114 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":80:26)
#loc115 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":80:13)
#loc116 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":26:1)
#loc117 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":29:1)
#loc118 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":28:12)
#loc119 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":28:5)
#loc120 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":86:1)
#loc121 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":107:1)
#loc122 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":91:13)
#loc123 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":91:22)
#loc124 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":92:13)
#loc125 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":92:17)
#loc126 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":88:5)
#loc127 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":106:5)
#loc128 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":88:8)
#loc129 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":88:26)
#loc130 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":89:5)
#loc131 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":90:9)
#loc132 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":105:9)
#loc133 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":93:27)
#loc134 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":93:13)
#loc135 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":93:32)
#loc136 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":94:13)
#loc137 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":97:13)
#loc138 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":94:17)
#loc139 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":94:26)
#loc140 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":94:31)
#loc141 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":95:13)
#loc142 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":96:31)
#loc143 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":96:42)
#loc144 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":96:17)
#loc145 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":99:13)
#loc146 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":102:13)
#loc147 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":99:17)
#loc148 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":99:31)
#loc149 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":100:13)
#loc150 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":101:17)
#loc151 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":101:22)
#loc152 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":103:25)
#loc153 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":103:13)
#loc154 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":104:26)
#loc155 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_08.c":104:13)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc7, #loc8])
#loc160 = loc(fused[#loc9, #loc10])
#loc161 = loc(fused[#loc11, #loc12])
#loc162 = loc(fused[#loc13, #loc14])
#loc163 = loc(fused[#loc15, #loc12])
#loc164 = loc(fused[#loc16, #loc17])
#loc165 = loc(fused[#loc19, #loc20])
#loc166 = loc(fused[#loc21, #loc22])
#loc167 = loc(fused[#loc23, #loc24])
#loc168 = loc(fused[#loc23, #loc25])
#loc169 = loc(fused[#loc26, #loc22])
#loc170 = loc(fused[#loc27, #loc28])
#loc171 = loc(fused[#loc29, #loc28])
#loc172 = loc(fused[#loc31, #loc30])
#loc173 = loc(fused[#loc34, #loc35])
#loc174 = loc(fused[#loc36, #loc37])
#loc175 = loc(fused[#loc38, #loc39])
#loc176 = loc(fused[#loc40, #loc41])
#loc177 = loc(fused[#loc42, #loc43])
#loc178 = loc(fused[#loc44, #loc45])
#loc179 = loc(fused[#loc50, #loc51])
#loc182 = loc(fused[#loc61, #loc62])
#loc183 = loc(fused[#loc65, #loc66])
#loc184 = loc(fused[#loc69, #loc68])
#loc185 = loc(fused[#loc70, #loc71])
#loc186 = loc(fused[#loc73, #loc72])
#loc187 = loc(fused[#loc75, #loc76])
#loc188 = loc(fused[#loc77, #loc78])
#loc189 = loc(fused[#loc79, #loc80])
#loc190 = loc(fused[#loc81, #loc82])
#loc191 = loc(fused[#loc83, #loc84])
#loc192 = loc(fused[#loc85, #loc86])
#loc193 = loc(fused[#loc87, #loc88, #loc89, #loc84])
#loc194 = loc(fused[#loc91, #loc92])
#loc195 = loc(fused[#loc94, #loc95])
#loc196 = loc(fused[#loc96, #loc97])
#loc197 = loc(fused[#loc98, #loc99])
#loc198 = loc(fused[#loc98, #loc100])
#loc199 = loc(fused[#loc101, #loc97])
#loc200 = loc(fused[#loc102, #loc103])
#loc201 = loc(fused[#loc104, #loc103])
#loc202 = loc(fused[#loc105, #loc106])
#loc203 = loc(fused[#loc107, #loc108])
#loc204 = loc(fused[#loc109, #loc106])
#loc205 = loc(fused[#loc113, #loc112])
#loc206 = loc(fused[#loc116, #loc117])
#loc207 = loc(fused[#loc119, #loc118])
#loc208 = loc(fused[#loc120, #loc121])
#loc209 = loc(fused[#loc122, #loc123])
#loc210 = loc(fused[#loc124, #loc125])
#loc211 = loc(fused[#loc126, #loc127])
#loc212 = loc(fused[#loc128, #loc129])
#loc213 = loc(fused[#loc130, #loc127])
#loc214 = loc(fused[#loc131, #loc132])
#loc215 = loc(fused[#loc134, #loc135])
#loc216 = loc(fused[#loc136, #loc137])
#loc217 = loc(fused[#loc138, #loc139])
#loc218 = loc(fused[#loc138, #loc140])
#loc219 = loc(fused[#loc141, #loc137])
#loc220 = loc(fused[#loc142, #loc143])
#loc221 = loc(fused[#loc144, #loc143])
#loc222 = loc(fused[#loc145, #loc146])
#loc223 = loc(fused[#loc147, #loc148])
#loc224 = loc(fused[#loc149, #loc146])
#loc225 = loc(fused[#loc153, #loc152])
