!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":23:60)
#loc8 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":23:67)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":40:64)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":40:71)
#loc56 = loc(fused[#loc7, #loc8])
#loc61 = loc(fused[#loc28, #loc29])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_calloc_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc53)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc54)
  cir.func  @CWE690_NULL_Deref_From_Return__int_calloc_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc56)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc57)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc58)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc13)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc10)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc57)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    cir.store %6, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc58)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc17)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc19)
    cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc22)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc23)
    %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc24)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc25)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc24)
    cir.return loc(#loc6)
  } loc(#loc55)
  cir.func  @CWE690_NULL_Deref_From_Return__int_calloc_64b_goodB2GSink(%arg0: !cir.ptr<!void> loc(fused[#loc28, #loc29])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc61)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc62)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc63)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc34)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc31)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc31)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc62)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc35)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    cir.store %6, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc63)
    cir.scope {
      %7 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
      %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc40)
      %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc41)
      cir.if %11 {
        %12 = cir.const #cir.int<5> : !s32i loc(#loc43)
        %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc46)
        cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc67)
        %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc48)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc49)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc47)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc50)
        %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc51)
        %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc52)
        cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
      } loc(#loc66)
    } loc(#loc64)
    cir.return loc(#loc27)
  } loc(#loc60)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_calloc_64b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":23:1)
#loc6 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":33:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":26:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":26:32)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":28:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":28:27)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":24:1)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":28:20)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":28:19)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":30:15)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":30:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":30:10)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":30:11)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":31:18)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":31:23)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":31:24)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":31:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":32:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":32:10)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":40:1)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":53:1)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":43:5)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":43:32)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":45:5)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":45:27)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":41:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":45:20)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":45:19)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":47:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":52:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":47:9)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":47:17)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":47:14)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":48:5)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":49:19)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":49:9)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":49:14)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":49:15)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":50:22)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":50:27)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":50:28)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":50:9)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":51:9)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int_calloc_64b.c":51:14)
#loc53 = loc(fused[#loc1, #loc2])
#loc54 = loc(fused[#loc3, #loc4])
#loc55 = loc(fused[#loc5, #loc6])
#loc57 = loc(fused[#loc9, #loc10])
#loc58 = loc(fused[#loc11, #loc12])
#loc59 = loc(fused[#loc17, #loc16])
#loc60 = loc(fused[#loc26, #loc27])
#loc62 = loc(fused[#loc30, #loc31])
#loc63 = loc(fused[#loc32, #loc33])
#loc64 = loc(fused[#loc37, #loc38])
#loc65 = loc(fused[#loc39, #loc40])
#loc66 = loc(fused[#loc42, #loc38])
#loc67 = loc(fused[#loc44, #loc43])
