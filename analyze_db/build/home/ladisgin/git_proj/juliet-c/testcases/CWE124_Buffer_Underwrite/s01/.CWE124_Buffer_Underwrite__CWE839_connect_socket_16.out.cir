!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":281:10)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":281:14)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":281:20)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":281:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc433 = loc(fused[#loc169, #loc170])
#loc434 = loc(fused[#loc171, #loc172])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc369)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc370)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc371)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc372)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc373)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc374)
  cir.func private @close(!s32i) -> !s32i loc(#loc375)
  cir.func private @printIntLine(!s32i) loc(#loc376)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc377)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc379)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc30)
        cir.condition(%4) loc(#loc30)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc383)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc384)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc385)
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc386)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc38)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc385)
          cir.scope {
            cir.do {
              %9 = cir.const #cir.int<2> : !s32i loc(#loc43)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %11 = cir.const #cir.int<6> : !s32i loc(#loc45)
              %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc46)
              cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc388)
              cir.scope {
                %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc51)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc52)
                %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc52)
                %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc390)
                cir.if %54 {
                  cir.break loc(#loc54)
                } loc(#loc391)
              } loc(#loc389)
              %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc392)
              %14 = cir.const #cir.int<0> : !s32i loc(#loc57)
              %15 = cir.const #cir.int<16> : !u64i loc(#loc393)
              cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc394)
              %16 = cir.const #cir.int<2> : !s32i loc(#loc62)
              %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc62)
              %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
              cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc395)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc65)
              %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
              %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
              cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc396)
              %24 = cir.const #cir.int<27015> : !s32i loc(#loc70)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc70)
              %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc71)
              %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc397)
              cir.scope {
                %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc399)
                %53 = cir.const #cir.int<16> : !u64i loc(#loc400)
                %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc400)
                %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc82)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc83)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc83)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc401)
                cir.if %58 {
                  cir.break loc(#loc85)
                } loc(#loc402)
              } loc(#loc398)
              %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc86)
              %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc87)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
              %31 = cir.const #cir.int<3> : !s32i loc(#loc88)
              %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc88)
              %33 = cir.const #cir.int<4> : !u64i loc(#loc88)
              %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc88)
              %35 = cir.const #cir.int<2> : !s32i loc(#loc88)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc88)
              %37 = cir.binop(add, %34, %36) : !u64i loc(#loc88)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc89)
              %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc403)
              %41 = cir.const #cir.int<0> : !s32i loc(#loc90)
              %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc91)
              %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc91)
              cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc404)
              cir.scope {
                %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc97)
                %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc406)
                %55 = cir.ternary(%54, true {
                  %56 = cir.const #true loc(#loc98)
                  cir.yield %56 : !cir.bool loc(#loc98)
                }, false {
                  %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                  %57 = cir.const #cir.int<0> : !s32i loc(#loc100)
                  %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc407)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc98)
                    cir.yield %60 : !cir.bool loc(#loc98)
                  }, false {
                    %60 = cir.const #false loc(#loc98)
                    cir.yield %60 : !cir.bool loc(#loc98)
                  }) : (!cir.bool) -> !cir.bool loc(#loc98)
                  cir.yield %59 : !cir.bool loc(#loc98)
                }) : (!cir.bool) -> !cir.bool loc(#loc98)
                cir.if %55 {
                  cir.break loc(#loc102)
                } loc(#loc408)
              } loc(#loc405)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc103)
              %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc103)
              %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
              %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
              %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc105)
              cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc409)
              %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
              %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc107)
              cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc410)
              cir.yield loc(#loc42)
            } while {
              %9 = cir.const #cir.int<0> : !s32i loc(#loc110)
              %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc110)
              cir.condition(%10) loc(#loc110)
            } loc(#loc387)
          } loc(#loc387)
          cir.scope {
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc114)
            %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc412)
            cir.if %12 {
              %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc117)
            } loc(#loc413)
          } loc(#loc411)
        } loc(#loc382)
        cir.break loc(#loc118)
      } loc(#loc381)
    } loc(#loc381)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc121)
        cir.condition(%4) loc(#loc121)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc416)
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc417)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc417)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc417)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
            %7 = cir.const #cir.int<10> : !s32i loc(#loc131)
            %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc419)
            cir.if %8 {
              %9 = cir.const #cir.int<1> : !s32i loc(#loc135)
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc137)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc137)
              cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc421)
              cir.scope {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc140)
                cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc423)
                cir.for : cond {
                  %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                  %15 = cir.const #cir.int<10> : !s32i loc(#loc143)
                  %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc424)
                  cir.condition(%16) loc(#loc144)
                } body {
                  cir.scope {
                    %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                    %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc147)
                    %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc147)
                    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc148)
                  } loc(#loc425)
                  cir.yield loc(#loc139)
                } step {
                  %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc150)
                  cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc426)
                  cir.yield loc(#loc422)
                } loc(#loc422)
              } loc(#loc422)
            } else {
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc151)
            } loc(#loc420)
          } loc(#loc418)
        } loc(#loc415)
        cir.break loc(#loc152)
      } loc(#loc414)
    } loc(#loc414)
    cir.return loc(#loc22)
  } loc(#loc378)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc428)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc155)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc429)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc157)
    cir.return loc(#loc154)
  } loc(#loc427)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc430)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc431)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc166)
  cir.func @main(%arg0: !s32i loc(fused[#loc169, #loc170]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc171, #loc172])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc433)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc434)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc168)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc173)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc174)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc175)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc175)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc176)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc163)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc435)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_16_good() : () -> () loc(#loc178)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc164)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc165)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc436)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_16_bad() : () -> () loc(#loc182)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc166)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc185)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc437)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc437)
    cir.return %17 : !s32i loc(#loc437)
  } loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc187)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc439)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc193)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc440)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc197)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc197)
        cir.condition(%4) loc(#loc197)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc443)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc444)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc445)
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc446)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc205)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc205)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc445)
          cir.scope {
            cir.do {
              %9 = cir.const #cir.int<2> : !s32i loc(#loc210)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc211)
              %11 = cir.const #cir.int<6> : !s32i loc(#loc212)
              %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc213)
              cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc448)
              cir.scope {
                %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc219)
                %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc219)
                %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc450)
                cir.if %54 {
                  cir.break loc(#loc221)
                } loc(#loc451)
              } loc(#loc449)
              %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc452)
              %14 = cir.const #cir.int<0> : !s32i loc(#loc224)
              %15 = cir.const #cir.int<16> : !u64i loc(#loc453)
              cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc454)
              %16 = cir.const #cir.int<2> : !s32i loc(#loc229)
              %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc229)
              %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
              cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc455)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc231)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc231)
              %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc232)
              %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
              %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
              cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc456)
              %24 = cir.const #cir.int<27015> : !s32i loc(#loc235)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc235)
              %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc236)
              %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc457)
              cir.scope {
                %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc459)
                %53 = cir.const #cir.int<16> : !u64i loc(#loc460)
                %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc460)
                %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc246)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc247)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc247)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc461)
                cir.if %58 {
                  cir.break loc(#loc249)
                } loc(#loc462)
              } loc(#loc458)
              %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc251)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
              %31 = cir.const #cir.int<3> : !s32i loc(#loc252)
              %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc252)
              %33 = cir.const #cir.int<4> : !u64i loc(#loc252)
              %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc252)
              %35 = cir.const #cir.int<2> : !s32i loc(#loc252)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc252)
              %37 = cir.binop(add, %34, %36) : !u64i loc(#loc252)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc253)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc253)
              %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc463)
              %41 = cir.const #cir.int<0> : !s32i loc(#loc254)
              %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc255)
              %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc255)
              cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc464)
              cir.scope {
                %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc260)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc261)
                %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc261)
                %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc466)
                %55 = cir.ternary(%54, true {
                  %56 = cir.const #true loc(#loc262)
                  cir.yield %56 : !cir.bool loc(#loc262)
                }, false {
                  %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc263)
                  %57 = cir.const #cir.int<0> : !s32i loc(#loc264)
                  %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc467)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc262)
                    cir.yield %60 : !cir.bool loc(#loc262)
                  }, false {
                    %60 = cir.const #false loc(#loc262)
                    cir.yield %60 : !cir.bool loc(#loc262)
                  }) : (!cir.bool) -> !cir.bool loc(#loc262)
                  cir.yield %59 : !cir.bool loc(#loc262)
                }) : (!cir.bool) -> !cir.bool loc(#loc262)
                cir.if %55 {
                  cir.break loc(#loc266)
                } loc(#loc468)
              } loc(#loc465)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc267)
              %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc267)
              %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc269)
              %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc269)
              cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc469)
              %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc270)
              %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc271)
              cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc470)
              cir.yield loc(#loc209)
            } while {
              %9 = cir.const #cir.int<0> : !s32i loc(#loc274)
              %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc274)
              cir.condition(%10) loc(#loc274)
            } loc(#loc447)
          } loc(#loc447)
          cir.scope {
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc277)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc278)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc278)
            %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc472)
            cir.if %12 {
              %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc280)
              %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc281)
            } loc(#loc473)
          } loc(#loc471)
        } loc(#loc442)
        cir.break loc(#loc282)
      } loc(#loc441)
    } loc(#loc441)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc285)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc285)
        cir.condition(%4) loc(#loc285)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc476)
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc477)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc477)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc477)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc295)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc479)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc298)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc480)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc296)
                cir.yield %14 : !cir.bool loc(#loc296)
              }, false {
                %14 = cir.const #false loc(#loc296)
                cir.yield %14 : !cir.bool loc(#loc296)
              }) : (!cir.bool) -> !cir.bool loc(#loc296)
              cir.yield %13 : !cir.bool loc(#loc296)
            }, false {
              %10 = cir.const #false loc(#loc296)
              cir.yield %10 : !cir.bool loc(#loc296)
            }) : (!cir.bool) -> !cir.bool loc(#loc296)
            cir.if %9 {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc303)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
              %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc305)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc305)
              cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc482)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc308)
                cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc484)
                cir.for : cond {
                  %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc310)
                  %16 = cir.const #cir.int<10> : !s32i loc(#loc311)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc485)
                  cir.condition(%17) loc(#loc312)
                } body {
                  cir.scope {
                    %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc314)
                    %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc315)
                    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc315)
                    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc315)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc316)
                  } loc(#loc486)
                  cir.yield loc(#loc307)
                } step {
                  %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc317)
                  %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc318)
                  cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc487)
                  cir.yield loc(#loc483)
                } loc(#loc483)
              } loc(#loc483)
            } else {
              %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc187)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc187)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc319)
            } loc(#loc481)
          } loc(#loc478)
        } loc(#loc475)
        cir.break loc(#loc320)
      } loc(#loc474)
    } loc(#loc474)
    cir.return loc(#loc189)
  } loc(#loc438)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc489)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc325)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc326)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc490)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc330)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc330)
        cir.condition(%4) loc(#loc330)
      } do {
        %3 = cir.const #cir.int<7> : !s32i loc(#loc331)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc492)
        cir.break loc(#loc333)
      } loc(#loc491)
    } loc(#loc491)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc336)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc336)
        cir.condition(%4) loc(#loc336)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc495)
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc496)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc496)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc496)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc345)
            %7 = cir.const #cir.int<10> : !s32i loc(#loc346)
            %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc498)
            cir.if %8 {
              %9 = cir.const #cir.int<1> : !s32i loc(#loc350)
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc352)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc352)
              cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc500)
              cir.scope {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc355)
                cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc502)
                cir.for : cond {
                  %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                  %15 = cir.const #cir.int<10> : !s32i loc(#loc358)
                  %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc503)
                  cir.condition(%16) loc(#loc359)
                } body {
                  cir.scope {
                    %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc361)
                    %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc362)
                    %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc362)
                    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc362)
                    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc363)
                  } loc(#loc504)
                  cir.yield loc(#loc354)
                } step {
                  %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc364)
                  %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc365)
                  cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc505)
                  cir.yield loc(#loc501)
                } loc(#loc501)
              } loc(#loc501)
            } else {
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc366)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc366)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc367)
            } loc(#loc499)
          } loc(#loc497)
        } loc(#loc494)
        cir.break loc(#loc368)
      } loc(#loc493)
    } loc(#loc493)
    cir.return loc(#loc322)
  } loc(#loc488)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":77:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":127:27)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":44:1)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":132:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":46:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":46:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":48:13)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":48:12)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":48:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":49:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":108:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":49:11)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":51:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":106:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":56:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":56:17)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":57:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":57:32)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":58:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":58:36)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":59:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":59:45)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":60:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":95:21)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":70:40)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":70:49)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":70:62)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":70:33)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":70:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":70:73)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":71:17)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":74:17)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":71:21)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":71:38)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":72:17)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":73:21)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":75:24)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":75:25)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":75:34)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":75:37)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":75:51)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":75:17)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":75:52)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":76:38)
#loc63 = loc("/usr/include/netinet/in.h":249:5)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":76:17)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":77:43)
#loc66 = loc("/usr/include/netinet/in.h":251:20)
#loc67 = loc("/usr/include/netinet/in.h":33:15)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":77:17)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":77:63)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":78:42)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":78:36)
#loc72 = loc("/usr/include/netinet/in.h":250:15)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":78:17)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":78:50)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":79:17)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":82:17)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":79:29)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":79:62)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":79:63)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":79:72)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":79:86)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":79:21)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":79:92)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":80:17)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":81:21)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":85:35)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":85:50)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":85:63)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":85:81)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":85:84)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":85:30)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":85:17)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":85:85)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":86:17)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":89:17)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":86:21)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":86:35)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":86:48)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":86:51)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":86:65)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":87:17)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":88:21)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":91:43)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":91:29)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":91:17)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":93:29)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":93:24)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":93:17)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":93:40)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":95:20)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":96:13)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":99:13)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":96:17)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":96:34)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":97:13)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":98:30)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":98:17)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":107:9)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":109:5)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":131:5)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":109:11)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":111:9)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":129:9)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":112:13)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":112:17)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":113:13)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":113:34)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":116:13)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":128:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":116:17)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":116:24)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":117:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":124:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":126:13)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":118:32)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":118:24)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":118:17)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":120:17)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":123:17)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":120:25)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":120:21)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":120:28)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":120:32)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":120:30)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":121:17)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":122:41)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":122:34)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":122:21)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":120:37)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":120:36)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":127:17)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":130:9)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":266:1)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":270:1)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":268:5)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":268:13)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":269:5)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":269:13)
#loc159 = loc("/usr/include/stdlib.h":575:1)
#loc160 = loc("/usr/include/stdlib.h":575:41)
#loc161 = loc("/usr/include/time.h":76:1)
#loc162 = loc("/usr/include/time.h":76:38)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":286:15)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":288:15)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":291:15)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":293:15)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":281:1)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":296:1)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":282:1)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":284:27)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":284:22)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":284:5)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":286:5)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":287:5)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":287:61)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":288:5)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":291:5)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":292:5)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":292:60)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":293:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":295:12)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":295:5)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":221:27)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":139:1)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":226:1)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":141:5)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":141:9)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":143:13)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":143:12)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":143:5)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":144:5)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":203:5)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":144:11)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":146:9)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":201:9)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":151:13)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":151:17)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":152:13)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":152:32)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":153:13)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":153:36)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":154:13)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":154:45)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":155:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":190:21)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":165:40)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":165:49)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":165:62)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":165:33)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":165:17)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":165:73)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":166:17)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":169:17)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":166:21)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":166:38)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":167:17)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":168:21)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":170:24)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":170:25)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":170:34)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":170:37)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":170:51)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":170:17)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":170:52)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":171:38)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":171:17)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":172:53)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":172:43)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":172:17)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":172:63)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":173:42)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":173:36)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":173:17)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":173:50)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":174:17)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":177:17)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":174:29)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":174:62)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":174:63)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":174:72)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":174:86)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":174:21)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":174:92)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":175:17)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":176:21)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":180:35)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":180:50)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":180:63)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":180:81)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":180:84)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":180:30)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":180:17)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":180:85)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":181:17)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":184:17)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":181:21)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":181:35)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":181:48)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":181:51)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":181:65)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":182:17)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":183:21)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":186:43)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":186:29)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":186:17)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":188:29)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":188:24)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":188:17)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":188:40)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":190:20)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":191:13)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":194:13)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":191:17)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":191:34)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":192:13)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":193:30)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":193:17)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":202:9)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":204:5)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":225:5)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":204:11)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":206:9)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":223:9)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":207:13)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":207:17)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":208:13)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":208:34)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":210:13)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":222:13)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":210:17)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":210:25)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":210:27)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":210:30)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":210:38)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":210:40)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":211:13)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":218:13)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":220:13)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":212:32)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":212:24)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":212:17)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":214:17)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":217:17)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":214:25)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":214:21)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":214:28)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":214:32)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":214:30)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":215:17)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":216:41)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":216:34)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":216:21)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":214:37)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":214:36)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":221:17)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":224:9)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":229:1)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":264:1)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":231:5)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":231:9)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":233:13)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":233:12)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":233:5)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":234:5)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":240:5)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":234:11)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":238:16)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":238:9)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":239:9)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":241:5)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":263:5)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":241:11)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":243:9)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":261:9)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":244:13)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":244:17)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":245:13)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":245:34)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":248:13)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":260:13)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":248:17)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":248:24)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":249:13)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":256:13)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":258:13)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":250:32)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":250:24)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":250:17)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":252:17)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":255:17)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":252:25)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":252:21)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":252:28)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":252:32)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":252:30)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":253:17)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":254:41)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":254:34)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":254:21)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":252:37)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":252:36)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":259:27)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":259:17)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_16.c":262:9)
#loc369 = loc(fused[#loc1, #loc2])
#loc370 = loc(fused[#loc3, #loc4])
#loc371 = loc(fused[#loc6, #loc7])
#loc372 = loc(fused[#loc8, #loc9])
#loc373 = loc(fused[#loc10, #loc11])
#loc374 = loc(fused[#loc12, #loc13])
#loc375 = loc(fused[#loc14, #loc15])
#loc376 = loc(fused[#loc16, #loc17])
#loc377 = loc(fused[#loc18, #loc19])
#loc378 = loc(fused[#loc21, #loc22])
#loc379 = loc(fused[#loc23, #loc24])
#loc380 = loc(fused[#loc27, #loc25])
#loc381 = loc(fused[#loc28, #loc29])
#loc382 = loc(fused[#loc31, #loc32])
#loc383 = loc(fused[#loc33, #loc34])
#loc384 = loc(fused[#loc35, #loc36])
#loc385 = loc(fused[#loc37, #loc38])
#loc386 = loc(fused[#loc39, #loc40])
#loc387 = loc(fused[#loc41, #loc42])
#loc388 = loc(fused[#loc47, #loc48])
#loc389 = loc(fused[#loc49, #loc50])
#loc390 = loc(fused[#loc51, #loc52])
#loc391 = loc(fused[#loc53, #loc50])
#loc392 = loc(fused[#loc55, #loc56])
#loc393 = loc(fused[#loc58, #loc59])
#loc394 = loc(fused[#loc60, #loc61])
#loc395 = loc(fused[#loc64, #loc62])
#loc396 = loc(fused[#loc68, #loc69])
#loc397 = loc(fused[#loc73, #loc74])
#loc398 = loc(fused[#loc75, #loc76])
#loc399 = loc(fused[#loc78, #loc79])
#loc400 = loc(fused[#loc80, #loc81])
#loc401 = loc(fused[#loc82, #loc83])
#loc402 = loc(fused[#loc84, #loc76])
#loc403 = loc(fused[#loc88, #loc89])
#loc404 = loc(fused[#loc92, #loc93])
#loc405 = loc(fused[#loc94, #loc95])
#loc406 = loc(fused[#loc96, #loc97])
#loc407 = loc(fused[#loc99, #loc100])
#loc408 = loc(fused[#loc101, #loc95])
#loc409 = loc(fused[#loc105, #loc103])
#loc410 = loc(fused[#loc108, #loc109])
#loc411 = loc(fused[#loc111, #loc112])
#loc412 = loc(fused[#loc113, #loc114])
#loc413 = loc(fused[#loc115, #loc112])
#loc414 = loc(fused[#loc119, #loc120])
#loc415 = loc(fused[#loc122, #loc123])
#loc416 = loc(fused[#loc124, #loc125])
#loc417 = loc(fused[#loc126, #loc127])
#loc418 = loc(fused[#loc128, #loc129])
#loc419 = loc(fused[#loc130, #loc131])
#loc420 = loc(fused[#loc132, #loc133, #loc134, #loc129])
#loc421 = loc(fused[#loc137, #loc135])
#loc422 = loc(fused[#loc138, #loc139])
#loc423 = loc(fused[#loc141, #loc140])
#loc424 = loc(fused[#loc142, #loc143])
#loc425 = loc(fused[#loc145, #loc139])
#loc426 = loc(fused[#loc150, #loc149])
#loc427 = loc(fused[#loc153, #loc154])
#loc428 = loc(fused[#loc155, #loc156])
#loc429 = loc(fused[#loc157, #loc158])
#loc430 = loc(fused[#loc159, #loc160])
#loc431 = loc(fused[#loc161, #loc162])
#loc432 = loc(fused[#loc167, #loc168])
#loc435 = loc(fused[#loc178, #loc179])
#loc436 = loc(fused[#loc182, #loc183])
#loc437 = loc(fused[#loc186, #loc185])
#loc438 = loc(fused[#loc188, #loc189])
#loc439 = loc(fused[#loc190, #loc191])
#loc440 = loc(fused[#loc194, #loc192])
#loc441 = loc(fused[#loc195, #loc196])
#loc442 = loc(fused[#loc198, #loc199])
#loc443 = loc(fused[#loc200, #loc201])
#loc444 = loc(fused[#loc202, #loc203])
#loc445 = loc(fused[#loc204, #loc205])
#loc446 = loc(fused[#loc206, #loc207])
#loc447 = loc(fused[#loc208, #loc209])
#loc448 = loc(fused[#loc214, #loc215])
#loc449 = loc(fused[#loc216, #loc217])
#loc450 = loc(fused[#loc218, #loc219])
#loc451 = loc(fused[#loc220, #loc217])
#loc452 = loc(fused[#loc222, #loc223])
#loc453 = loc(fused[#loc225, #loc226])
#loc454 = loc(fused[#loc227, #loc228])
#loc455 = loc(fused[#loc230, #loc229])
#loc456 = loc(fused[#loc233, #loc234])
#loc457 = loc(fused[#loc237, #loc238])
#loc458 = loc(fused[#loc239, #loc240])
#loc459 = loc(fused[#loc242, #loc243])
#loc460 = loc(fused[#loc244, #loc245])
#loc461 = loc(fused[#loc246, #loc247])
#loc462 = loc(fused[#loc248, #loc240])
#loc463 = loc(fused[#loc252, #loc253])
#loc464 = loc(fused[#loc256, #loc257])
#loc465 = loc(fused[#loc258, #loc259])
#loc466 = loc(fused[#loc260, #loc261])
#loc467 = loc(fused[#loc263, #loc264])
#loc468 = loc(fused[#loc265, #loc259])
#loc469 = loc(fused[#loc269, #loc267])
#loc470 = loc(fused[#loc272, #loc273])
#loc471 = loc(fused[#loc275, #loc276])
#loc472 = loc(fused[#loc277, #loc278])
#loc473 = loc(fused[#loc279, #loc276])
#loc474 = loc(fused[#loc283, #loc284])
#loc475 = loc(fused[#loc286, #loc287])
#loc476 = loc(fused[#loc288, #loc289])
#loc477 = loc(fused[#loc290, #loc291])
#loc478 = loc(fused[#loc292, #loc293])
#loc479 = loc(fused[#loc294, #loc295])
#loc480 = loc(fused[#loc297, #loc299])
#loc481 = loc(fused[#loc300, #loc301, #loc302, #loc293])
#loc482 = loc(fused[#loc305, #loc303])
#loc483 = loc(fused[#loc306, #loc307])
#loc484 = loc(fused[#loc309, #loc308])
#loc485 = loc(fused[#loc310, #loc311])
#loc486 = loc(fused[#loc313, #loc307])
#loc487 = loc(fused[#loc318, #loc317])
#loc488 = loc(fused[#loc321, #loc322])
#loc489 = loc(fused[#loc323, #loc324])
#loc490 = loc(fused[#loc327, #loc325])
#loc491 = loc(fused[#loc328, #loc329])
#loc492 = loc(fused[#loc332, #loc331])
#loc493 = loc(fused[#loc334, #loc335])
#loc494 = loc(fused[#loc337, #loc338])
#loc495 = loc(fused[#loc339, #loc340])
#loc496 = loc(fused[#loc341, #loc342])
#loc497 = loc(fused[#loc343, #loc344])
#loc498 = loc(fused[#loc345, #loc346])
#loc499 = loc(fused[#loc347, #loc348, #loc349, #loc344])
#loc500 = loc(fused[#loc352, #loc350])
#loc501 = loc(fused[#loc353, #loc354])
#loc502 = loc(fused[#loc356, #loc355])
#loc503 = loc(fused[#loc357, #loc358])
#loc504 = loc(fused[#loc360, #loc354])
#loc505 = loc(fused[#loc365, #loc364])
