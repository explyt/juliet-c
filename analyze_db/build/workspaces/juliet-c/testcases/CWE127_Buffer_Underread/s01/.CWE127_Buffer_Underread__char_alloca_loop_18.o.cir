!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_loop_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_loop_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc9)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc10)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc11)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc11)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc131)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc15)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc17)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    cir.goto "source" loc(#loc133)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc22)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %24 = cir.const #cir.int<8> : !s32i loc(#loc24)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc24)
    %26 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.scope {
      %27 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc136)
      %28 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc137)
      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
      %31 = cir.const #cir.int<67> : !s32i loc(#loc34)
      %32 = cir.const #cir.int<100> : !s32i loc(#loc35)
      %33 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc35)
      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc35)
      cir.libc.memset %35 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc138)
      %36 = cir.const #cir.int<0> : !s32i loc(#loc39)
      %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc39)
      %38 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %39 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc40)
      %41 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
      %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc42)
      cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc139)
      cir.scope {
        %51 = cir.const #cir.int<0> : !s32i loc(#loc45)
        %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc45)
        cir.store %52, %27 : !u64i, !cir.ptr<!u64i> loc(#loc141)
        cir.for : cond {
          %53 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc47)
          %54 = cir.const #cir.int<100> : !s32i loc(#loc48)
          %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc48)
          %56 = cir.cmp(lt, %53, %55) : !u64i, !cir.bool loc(#loc142)
          cir.condition(%56) loc(#loc49)
        } body {
          cir.scope {
            %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
            %54 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc52)
            %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc53)
            %56 = cir.load %55 : !cir.ptr<!s8i>, !s8i loc(#loc51)
            %57 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc54)
            %58 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
            %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !u64i), !cir.ptr<!s8i> loc(#loc55)
            cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc144)
          } loc(#loc143)
          cir.yield loc(#loc44)
        } step {
          %53 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc56)
          %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc57)
          cir.store %54, %27 : !u64i, !cir.ptr<!u64i> loc(#loc145)
          cir.yield loc(#loc140)
        } loc(#loc140)
      } loc(#loc140)
      %43 = cir.const #cir.int<0> : !s32i loc(#loc58)
      %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc58)
      %45 = cir.const #cir.int<100> : !s32i loc(#loc59)
      %46 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc59)
      %48 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
      %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc61)
      cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc146)
      %50 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    } loc(#loc135)
    cir.return loc(#loc4)
  } loc(#loc128)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_loop_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc66)
    cir.return loc(#loc65)
  } loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc73)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc73)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc73)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc73)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc73)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc75)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc76)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc76)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc152)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc80)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc82)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc82)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc84)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    cir.goto "source" loc(#loc154)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc87)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.scope {
      %24 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
      %25 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc158)
      %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
      %28 = cir.const #cir.int<67> : !s32i loc(#loc97)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc98)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc99)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc98)
      %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc98)
      cir.libc.memset %32 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc159)
      %33 = cir.const #cir.int<0> : !s32i loc(#loc102)
      %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc102)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc103)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc104)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc103)
      %38 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
      %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc105)
      cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc160)
      cir.scope {
        %48 = cir.const #cir.int<0> : !s32i loc(#loc108)
        %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc108)
        cir.store %49, %24 : !u64i, !cir.ptr<!u64i> loc(#loc162)
        cir.for : cond {
          %50 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc110)
          %51 = cir.const #cir.int<100> : !s32i loc(#loc111)
          %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc111)
          %53 = cir.cmp(lt, %50, %52) : !u64i, !cir.bool loc(#loc163)
          cir.condition(%53) loc(#loc112)
        } body {
          cir.scope {
            %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
            %51 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc115)
            %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc116)
            %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc114)
            %54 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc117)
            %55 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc118)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc165)
          } loc(#loc164)
          cir.yield loc(#loc107)
        } step {
          %50 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc119)
          %51 = cir.unary(inc, %50) : !u64i, !u64i loc(#loc120)
          cir.store %51, %24 : !u64i, !cir.ptr<!u64i> loc(#loc166)
          cir.yield loc(#loc161)
        } loc(#loc161)
      } loc(#loc161)
      %40 = cir.const #cir.int<0> : !s32i loc(#loc121)
      %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc121)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc122)
      %43 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc122)
      %45 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
      %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc124)
      cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc167)
      %47 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
      cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    } loc(#loc156)
    cir.return loc(#loc69)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_loop_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":23:1)
#loc4 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":47:1)
#loc5 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":25:5)
#loc6 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":25:12)
#loc7 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":26:5)
#loc8 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":26:33)
#loc9 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":27:12)
#loc10 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":27:24)
#loc11 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":27:29)
#loc12 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":27:33)
#loc13 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":27:5)
#loc14 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":27:34)
#loc15 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":28:25)
#loc16 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":28:5)
#loc17 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":28:16)
#loc18 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":28:20)
#loc19 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":28:21)
#loc20 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":29:5)
#loc21 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":29:10)
#loc22 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":30:1)
#loc23 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":32:12)
#loc24 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":32:25)
#loc25 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":32:23)
#loc26 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":32:5)
#loc27 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":33:5)
#loc28 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":46:5)
#loc29 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":34:9)
#loc30 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":34:16)
#loc31 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":35:9)
#loc32 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":35:22)
#loc33 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":36:16)
#loc34 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":36:22)
#loc35 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":36:27)
#loc36 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":36:31)
#loc37 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":36:9)
#loc38 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":36:32)
#loc39 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":37:23)
#loc40 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":37:14)
#loc41 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":37:18)
#loc42 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":37:9)
#loc43 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":39:9)
#loc44 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":42:9)
#loc45 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":39:18)
#loc46 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":39:14)
#loc47 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":39:21)
#loc48 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":39:25)
#loc49 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":39:23)
#loc50 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":40:9)
#loc51 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":41:23)
#loc52 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":41:28)
#loc53 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":41:29)
#loc54 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":41:18)
#loc55 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":41:13)
#loc56 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":39:31)
#loc57 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":39:30)
#loc58 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":44:23)
#loc59 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":44:14)
#loc60 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":44:18)
#loc61 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":44:9)
#loc62 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":45:19)
#loc63 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":45:9)
#loc64 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":80:1)
#loc65 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":83:1)
#loc66 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":82:5)
#loc67 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":82:13)
#loc68 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":54:1)
#loc69 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":78:1)
#loc70 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":56:5)
#loc71 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":56:12)
#loc72 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":57:5)
#loc73 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":57:33)
#loc74 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":58:12)
#loc75 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":58:24)
#loc76 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":58:29)
#loc77 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":58:33)
#loc78 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":58:5)
#loc79 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":58:34)
#loc80 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":59:25)
#loc81 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":59:5)
#loc82 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":59:16)
#loc83 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":59:20)
#loc84 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":59:21)
#loc85 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":60:5)
#loc86 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":60:10)
#loc87 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":61:1)
#loc88 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":63:12)
#loc89 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":63:5)
#loc90 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":64:5)
#loc91 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":77:5)
#loc92 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":65:9)
#loc93 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":65:16)
#loc94 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":66:9)
#loc95 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":66:22)
#loc96 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":67:16)
#loc97 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":67:22)
#loc98 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":67:27)
#loc99 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":67:31)
#loc100 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":67:9)
#loc101 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":67:32)
#loc102 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":68:23)
#loc103 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":68:14)
#loc104 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":68:18)
#loc105 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":68:9)
#loc106 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":70:9)
#loc107 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":73:9)
#loc108 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":70:18)
#loc109 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":70:14)
#loc110 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":70:21)
#loc111 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":70:25)
#loc112 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":70:23)
#loc113 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":71:9)
#loc114 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":72:23)
#loc115 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":72:28)
#loc116 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":72:29)
#loc117 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":72:18)
#loc118 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":72:13)
#loc119 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":70:31)
#loc120 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":70:30)
#loc121 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":75:23)
#loc122 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":75:14)
#loc123 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":75:18)
#loc124 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":75:9)
#loc125 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":76:19)
#loc126 = loc("CWE127_Buffer_Underread__char_alloca_loop_18.c":76:9)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc16, #loc15])
#loc133 = loc(fused[#loc20, #loc21])
#loc134 = loc(fused[#loc26, #loc24])
#loc135 = loc(fused[#loc27, #loc28])
#loc136 = loc(fused[#loc29, #loc30])
#loc137 = loc(fused[#loc31, #loc32])
#loc138 = loc(fused[#loc37, #loc38])
#loc139 = loc(fused[#loc42, #loc39])
#loc140 = loc(fused[#loc43, #loc44])
#loc141 = loc(fused[#loc46, #loc45])
#loc142 = loc(fused[#loc47, #loc48])
#loc143 = loc(fused[#loc50, #loc44])
#loc144 = loc(fused[#loc55, #loc53])
#loc145 = loc(fused[#loc57, #loc56])
#loc146 = loc(fused[#loc61, #loc58])
#loc147 = loc(fused[#loc64, #loc65])
#loc148 = loc(fused[#loc66, #loc67])
#loc149 = loc(fused[#loc68, #loc69])
#loc150 = loc(fused[#loc70, #loc71])
#loc151 = loc(fused[#loc72, #loc73])
#loc152 = loc(fused[#loc78, #loc79])
#loc153 = loc(fused[#loc81, #loc80])
#loc154 = loc(fused[#loc85, #loc86])
#loc155 = loc(fused[#loc89, #loc88])
#loc156 = loc(fused[#loc90, #loc91])
#loc157 = loc(fused[#loc92, #loc93])
#loc158 = loc(fused[#loc94, #loc95])
#loc159 = loc(fused[#loc100, #loc101])
#loc160 = loc(fused[#loc105, #loc102])
#loc161 = loc(fused[#loc106, #loc107])
#loc162 = loc(fused[#loc109, #loc108])
#loc163 = loc(fused[#loc110, #loc111])
#loc164 = loc(fused[#loc113, #loc107])
#loc165 = loc(fused[#loc118, #loc116])
#loc166 = loc(fused[#loc120, #loc119])
#loc167 = loc(fused[#loc124, #loc121])
