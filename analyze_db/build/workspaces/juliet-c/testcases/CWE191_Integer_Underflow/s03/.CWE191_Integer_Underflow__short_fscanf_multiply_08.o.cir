!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_fscanf_multiply_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc202)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc204)
  cir.func no_proto @CWE191_Integer_Underflow__short_fscanf_multiply_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc206)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc207)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc14)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc14)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc208)
    cir.br ^bb1 loc(#loc209)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc210)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc18)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc211)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc21)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc21)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc213)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc25)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %15 ^bb6, ^bb11 loc(#loc214)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc215)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc30)
    %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc30)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc216)
    cir.brcond %19 ^bb8, ^bb9 loc(#loc217)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc33)
    %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc33)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %23 = cir.binop(mul, %21, %22) nsw : !s32i loc(#loc33)
    %24 = cir.cast(integral, %23 : !s32i), !s16i loc(#loc33)
    cir.store %24, %0 : !s16i, !cir.ptr<!s16i> loc(#loc206)
    %25 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc34)
    %26 = cir.cast(integral, %25 : !s16i), !s32i loc(#loc34)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc35)
    cir.br ^bb9 loc(#loc29)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc29)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc24)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc24)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc9)
  } loc(#loc205)
  cir.func no_proto @CWE191_Integer_Underflow__short_fscanf_multiply_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc219)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc220)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc221)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc222)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc37)
  } loc(#loc218)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc48)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    cir.return %2 : !s32i loc(#loc224)
  } loc(#loc223)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc227)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc228)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc60)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc229)
    cir.br ^bb1 loc(#loc230)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc231)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc64)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc232)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc67)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc69)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc69)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc67)
    cir.br ^bb3 loc(#loc63)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc233)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc234)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc72)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc235)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.br ^bb17 loc(#loc75)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc236)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc80)
    %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc80)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %21 ^bb9, ^bb15 loc(#loc238)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc239)
  ^bb10:  // pred: ^bb9
    %22 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc85)
    %23 = cir.cast(integral, %22 : !s16i), !s32i loc(#loc85)
    %24 = cir.const #cir.int<32767> : !s32i loc(#loc86)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc86)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc86)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %29 = cir.binop(div, %27, %28) : !s32i loc(#loc240)
    %30 = cir.cmp(gt, %23, %29) : !s32i, !cir.bool loc(#loc241)
    cir.brcond %30 ^bb11, ^bb12 loc(#loc242)
  ^bb11:  // pred: ^bb10
    %31 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc92)
    %32 = cir.cast(integral, %31 : !s16i), !s32i loc(#loc92)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %34 = cir.binop(mul, %32, %33) nsw : !s32i loc(#loc92)
    %35 = cir.cast(integral, %34 : !s32i), !s16i loc(#loc92)
    cir.store %35, %0 : !s16i, !cir.ptr<!s16i> loc(#loc227)
    %36 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc93)
    %37 = cir.cast(integral, %36 : !s16i), !s32i loc(#loc93)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc94)
    cir.br ^bb13 loc(#loc90)
  ^bb12:  // pred: ^bb10
    %38 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc53)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb13 loc(#loc84)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc84)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc79)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc79)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc71)
  ^bb17:  // 2 preds: ^bb6, ^bb16
    cir.br ^bb18 loc(#loc71)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc55)
  } loc(#loc226)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc97)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    cir.return %2 : !s32i loc(#loc244)
  } loc(#loc243)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc246)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc247)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc106)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc248)
    cir.br ^bb1 loc(#loc249)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc250)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc110)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc251)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc113)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc114)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc115)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc115)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc113)
    cir.br ^bb3 loc(#loc109)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc252)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc253)
    %14 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc118)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc118)
    cir.brcond %15 ^bb6, ^bb16 loc(#loc254)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc255)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc123)
    %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc123)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc256)
    cir.brcond %19 ^bb8, ^bb14 loc(#loc257)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc258)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc128)
    %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc128)
    %22 = cir.const #cir.int<32767> : !s32i loc(#loc129)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc129)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc129)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc130)
    %27 = cir.binop(div, %25, %26) : !s32i loc(#loc259)
    %28 = cir.cmp(gt, %21, %27) : !s32i, !cir.bool loc(#loc260)
    cir.brcond %28 ^bb10, ^bb11 loc(#loc261)
  ^bb10:  // pred: ^bb9
    %29 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc135)
    %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc135)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc103)
    %32 = cir.binop(mul, %30, %31) nsw : !s32i loc(#loc135)
    %33 = cir.cast(integral, %32 : !s32i), !s16i loc(#loc135)
    cir.store %33, %0 : !s16i, !cir.ptr<!s16i> loc(#loc246)
    %34 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc136)
    %35 = cir.cast(integral, %34 : !s16i), !s32i loc(#loc136)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc137)
    cir.br ^bb12 loc(#loc133)
  ^bb11:  // pred: ^bb9
    %36 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc138)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.br ^bb12 loc(#loc127)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc127)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc122)
  ^bb14:  // 2 preds: ^bb7, ^bb13
    cir.br ^bb15 loc(#loc122)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc117)
  ^bb16:  // 2 preds: ^bb5, ^bb15
    cir.br ^bb17 loc(#loc117)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc101)
  } loc(#loc245)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc263)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc264)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc146)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc265)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc267)
    %5 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc150)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc155)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb4 loc(#loc153)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc157)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc158)
    %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc158)
    cir.store %11, %1 : !s16i, !cir.ptr<!s16i> loc(#loc269)
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc149)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc270)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc271)
    %13 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc162)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %14 ^bb7, ^bb12 loc(#loc272)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc273)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc167)
    %16 = cir.cast(integral, %15 : !s16i), !s32i loc(#loc167)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc274)
    cir.brcond %18 ^bb9, ^bb10 loc(#loc275)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc170)
    %20 = cir.cast(integral, %19 : !s16i), !s32i loc(#loc170)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc143)
    %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc170)
    %23 = cir.cast(integral, %22 : !s32i), !s16i loc(#loc170)
    cir.store %23, %0 : !s16i, !cir.ptr<!s16i> loc(#loc263)
    %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc171)
    %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc171)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc172)
    cir.br ^bb10 loc(#loc166)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc166)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc161)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc161)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc141)
  } loc(#loc262)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc277)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc278)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc179)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc179)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc279)
    cir.br ^bb1 loc(#loc280)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc281)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc183)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc183)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc282)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc186)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc187)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc187)
    cir.store %9, %1 : !s16i, !cir.ptr<!s16i> loc(#loc283)
    cir.br ^bb3 loc(#loc182)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc182)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc284)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc285)
    %11 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc191)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc191)
    cir.brcond %12 ^bb6, ^bb11 loc(#loc286)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc287)
  ^bb7:  // pred: ^bb6
    %13 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc196)
    %14 = cir.cast(integral, %13 : !s16i), !s32i loc(#loc196)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %16 ^bb8, ^bb9 loc(#loc289)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc199)
    %18 = cir.cast(integral, %17 : !s16i), !s32i loc(#loc199)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc176)
    %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc199)
    %21 = cir.cast(integral, %20 : !s32i), !s16i loc(#loc199)
    cir.store %21, %0 : !s16i, !cir.ptr<!s16i> loc(#loc277)
    %22 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc200)
    %23 = cir.cast(integral, %22 : !s16i), !s32i loc(#loc200)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc201)
    cir.br ^bb9 loc(#loc195)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc195)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc190)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc190)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc174)
  } loc(#loc276)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_fscanf_multiply_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":42:24)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":35:1)
#loc9 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":53:1)
#loc10 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":49:13)
#loc11 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":49:35)
#loc12 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":37:5)
#loc13 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":37:11)
#loc14 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":38:12)
#loc15 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":38:5)
#loc16 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":39:5)
#loc17 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":43:5)
#loc18 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":39:8)
#loc19 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":39:26)
#loc20 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":40:5)
#loc21 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":42:9)
#loc22 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":42:17)
#loc23 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":44:5)
#loc24 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":52:5)
#loc25 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":44:8)
#loc26 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":44:26)
#loc27 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":45:5)
#loc28 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":46:9)
#loc29 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":51:9)
#loc30 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":46:12)
#loc31 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":46:19)
#loc32 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":47:9)
#loc33 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":49:28)
#loc34 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":50:26)
#loc35 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":50:13)
#loc36 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":167:1)
#loc37 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":173:1)
#loc38 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":169:5)
#loc39 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":169:14)
#loc40 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":170:5)
#loc41 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":170:14)
#loc42 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":171:5)
#loc43 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":171:14)
#loc44 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":172:5)
#loc45 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":172:14)
#loc46 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":23:1)
#loc47 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":26:1)
#loc48 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":25:12)
#loc49 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":25:5)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":72:19)
#loc53 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":86:27)
#loc54 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":60:1)
#loc55 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":90:1)
#loc56 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":81:17)
#loc57 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":81:39)
#loc58 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":62:5)
#loc59 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":62:11)
#loc60 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":63:12)
#loc61 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":63:5)
#loc62 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":64:5)
#loc63 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":68:5)
#loc64 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":64:8)
#loc65 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":64:26)
#loc66 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":65:5)
#loc67 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":67:9)
#loc68 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":67:17)
#loc69 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":67:24)
#loc70 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":69:5)
#loc71 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":89:5)
#loc72 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":69:8)
#loc73 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":69:27)
#loc74 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":70:5)
#loc75 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":73:5)
#loc76 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":75:5)
#loc77 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":72:9)
#loc78 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":76:9)
#loc79 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":88:9)
#loc80 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":76:12)
#loc81 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":76:19)
#loc82 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":77:9)
#loc83 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":79:13)
#loc84 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":87:13)
#loc85 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":79:17)
#loc86 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":79:25)
#loc87 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":79:34)
#loc88 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":79:35)
#loc89 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":80:13)
#loc90 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":83:13)
#loc91 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":85:13)
#loc92 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":81:32)
#loc93 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":82:30)
#loc94 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":82:17)
#loc95 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":86:17)
#loc96 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":28:1)
#loc97 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":31:1)
#loc98 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":30:12)
#loc99 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":30:5)
#loc100 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":93:1)
#loc101 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":118:1)
#loc102 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":109:17)
#loc103 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":109:39)
#loc104 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":95:5)
#loc105 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":95:11)
#loc106 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":96:12)
#loc107 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":96:5)
#loc108 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":97:5)
#loc109 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":101:5)
#loc110 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":97:8)
#loc111 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":97:26)
#loc112 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":98:5)
#loc113 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":100:9)
#loc114 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":100:17)
#loc115 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":100:24)
#loc116 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":102:5)
#loc117 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":117:5)
#loc118 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":102:8)
#loc119 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":102:26)
#loc120 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":103:5)
#loc121 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":104:9)
#loc122 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":116:9)
#loc123 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":104:12)
#loc124 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":104:19)
#loc125 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":105:9)
#loc126 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":107:13)
#loc127 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":115:13)
#loc128 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":107:17)
#loc129 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":107:25)
#loc130 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":107:34)
#loc131 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":107:35)
#loc132 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":108:13)
#loc133 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":111:13)
#loc134 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":113:13)
#loc135 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":109:32)
#loc136 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":110:30)
#loc137 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":110:17)
#loc138 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":114:27)
#loc139 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":114:17)
#loc140 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":121:1)
#loc141 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":144:1)
#loc142 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":140:13)
#loc143 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":140:35)
#loc144 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":123:5)
#loc145 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":123:11)
#loc146 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":124:12)
#loc147 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":124:5)
#loc148 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":125:5)
#loc149 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":134:5)
#loc150 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":125:8)
#loc151 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":125:27)
#loc152 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":126:5)
#loc153 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":129:5)
#loc154 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":131:5)
#loc155 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":128:19)
#loc156 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":128:9)
#loc157 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":133:17)
#loc158 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":133:16)
#loc159 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":133:9)
#loc160 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":135:5)
#loc161 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":143:5)
#loc162 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":135:8)
#loc163 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":135:26)
#loc164 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":136:5)
#loc165 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":137:9)
#loc166 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":142:9)
#loc167 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":137:12)
#loc168 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":137:19)
#loc169 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":138:9)
#loc170 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":140:28)
#loc171 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":141:26)
#loc172 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":141:13)
#loc173 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":147:1)
#loc174 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":165:1)
#loc175 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":161:13)
#loc176 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":161:35)
#loc177 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":149:5)
#loc178 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":149:11)
#loc179 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":150:12)
#loc180 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":150:5)
#loc181 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":151:5)
#loc182 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":155:5)
#loc183 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":151:8)
#loc184 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":151:26)
#loc185 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":152:5)
#loc186 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":154:17)
#loc187 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":154:16)
#loc188 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":154:9)
#loc189 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":156:5)
#loc190 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":164:5)
#loc191 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":156:8)
#loc192 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":156:26)
#loc193 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":157:5)
#loc194 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":158:9)
#loc195 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":163:9)
#loc196 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":158:12)
#loc197 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":158:19)
#loc198 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":159:9)
#loc199 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":161:28)
#loc200 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":162:26)
#loc201 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_08.c":162:13)
#loc202 = loc(fused[#loc1, #loc2])
#loc203 = loc(fused[#loc3, #loc4])
#loc204 = loc(fused[#loc6, #loc7])
#loc205 = loc(fused[#loc8, #loc9])
#loc206 = loc(fused[#loc10, #loc11])
#loc207 = loc(fused[#loc12, #loc13])
#loc208 = loc(fused[#loc15, #loc14])
#loc209 = loc(fused[#loc16, #loc17])
#loc210 = loc(fused[#loc18, #loc19])
#loc211 = loc(fused[#loc20, #loc17])
#loc212 = loc(fused[#loc23, #loc24])
#loc213 = loc(fused[#loc25, #loc26])
#loc214 = loc(fused[#loc27, #loc24])
#loc215 = loc(fused[#loc28, #loc29])
#loc216 = loc(fused[#loc30, #loc31])
#loc217 = loc(fused[#loc32, #loc29])
#loc218 = loc(fused[#loc36, #loc37])
#loc219 = loc(fused[#loc38, #loc39])
#loc220 = loc(fused[#loc40, #loc41])
#loc221 = loc(fused[#loc42, #loc43])
#loc222 = loc(fused[#loc44, #loc45])
#loc223 = loc(fused[#loc46, #loc47])
#loc224 = loc(fused[#loc49, #loc48])
#loc225 = loc(fused[#loc50, #loc51])
#loc226 = loc(fused[#loc54, #loc55])
#loc227 = loc(fused[#loc56, #loc57])
#loc228 = loc(fused[#loc58, #loc59])
#loc229 = loc(fused[#loc61, #loc60])
#loc230 = loc(fused[#loc62, #loc63])
#loc231 = loc(fused[#loc64, #loc65])
#loc232 = loc(fused[#loc66, #loc63])
#loc233 = loc(fused[#loc70, #loc71])
#loc234 = loc(fused[#loc72, #loc73])
#loc235 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc236 = loc(fused[#loc78, #loc79])
#loc237 = loc(fused[#loc80, #loc81])
#loc238 = loc(fused[#loc82, #loc79])
#loc239 = loc(fused[#loc83, #loc84])
#loc240 = loc(fused[#loc86, #loc87])
#loc241 = loc(fused[#loc85, #loc88])
#loc242 = loc(fused[#loc89, #loc90, #loc91, #loc84])
#loc243 = loc(fused[#loc96, #loc97])
#loc244 = loc(fused[#loc99, #loc98])
#loc245 = loc(fused[#loc100, #loc101])
#loc246 = loc(fused[#loc102, #loc103])
#loc247 = loc(fused[#loc104, #loc105])
#loc248 = loc(fused[#loc107, #loc106])
#loc249 = loc(fused[#loc108, #loc109])
#loc250 = loc(fused[#loc110, #loc111])
#loc251 = loc(fused[#loc112, #loc109])
#loc252 = loc(fused[#loc116, #loc117])
#loc253 = loc(fused[#loc118, #loc119])
#loc254 = loc(fused[#loc120, #loc117])
#loc255 = loc(fused[#loc121, #loc122])
#loc256 = loc(fused[#loc123, #loc124])
#loc257 = loc(fused[#loc125, #loc122])
#loc258 = loc(fused[#loc126, #loc127])
#loc259 = loc(fused[#loc129, #loc130])
#loc260 = loc(fused[#loc128, #loc131])
#loc261 = loc(fused[#loc132, #loc133, #loc134, #loc127])
#loc262 = loc(fused[#loc140, #loc141])
#loc263 = loc(fused[#loc142, #loc143])
#loc264 = loc(fused[#loc144, #loc145])
#loc265 = loc(fused[#loc147, #loc146])
#loc266 = loc(fused[#loc148, #loc149])
#loc267 = loc(fused[#loc150, #loc151])
#loc268 = loc(fused[#loc152, #loc153, #loc154, #loc149])
#loc269 = loc(fused[#loc159, #loc157])
#loc270 = loc(fused[#loc160, #loc161])
#loc271 = loc(fused[#loc162, #loc163])
#loc272 = loc(fused[#loc164, #loc161])
#loc273 = loc(fused[#loc165, #loc166])
#loc274 = loc(fused[#loc167, #loc168])
#loc275 = loc(fused[#loc169, #loc166])
#loc276 = loc(fused[#loc173, #loc174])
#loc277 = loc(fused[#loc175, #loc176])
#loc278 = loc(fused[#loc177, #loc178])
#loc279 = loc(fused[#loc180, #loc179])
#loc280 = loc(fused[#loc181, #loc182])
#loc281 = loc(fused[#loc183, #loc184])
#loc282 = loc(fused[#loc185, #loc182])
#loc283 = loc(fused[#loc188, #loc186])
#loc284 = loc(fused[#loc189, #loc190])
#loc285 = loc(fused[#loc191, #loc192])
#loc286 = loc(fused[#loc193, #loc190])
#loc287 = loc(fused[#loc194, #loc195])
#loc288 = loc(fused[#loc196, #loc197])
#loc289 = loc(fused[#loc198, #loc195])
