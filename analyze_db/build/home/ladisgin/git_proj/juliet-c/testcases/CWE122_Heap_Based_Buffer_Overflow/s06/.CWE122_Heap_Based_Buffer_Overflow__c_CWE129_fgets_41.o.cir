!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":24:21)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":24:25)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":122:25)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":122:29)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":134:23)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":80:25)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":80:29)
#true = #cir.bool<true> : !cir.bool
#loc303 = loc(fused[#loc21, #loc22])
#loc341 = loc(fused[#loc121, #loc122])
#loc377 = loc(fused[#loc219, #loc220])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc294)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc295)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc296)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc298)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc299)
  cir.func private @printIntLine(!s32i) loc(#loc300)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc301)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc21, #loc22])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc304)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc305)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc303)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc27)
    cir.br ^bb1 loc(#loc306)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc31)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc307)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc308)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc309)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc305)
    cir.br ^bb2 loc(#loc310)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc37)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc311)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc312)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc41)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb4 loc(#loc35)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc35)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc313)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb7 loc(#loc313)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc47)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %20 ^bb8, ^bb12 loc(#loc48)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc316)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc53)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb10 loc(#loc43)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc43)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc55)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    cir.br ^bb7 loc(#loc313)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc43)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc319)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc320)
    cir.brcond %29 ^bb15, ^bb24 loc(#loc321)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc66)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    cir.br ^bb16 loc(#loc323)
  ^bb16:  // pred: ^bb15
    %34 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb17 loc(#loc323)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %36 = cir.const #cir.int<10> : !s32i loc(#loc72)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc325)
    cir.brcond %37 ^bb18, ^bb22 loc(#loc73)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc326)
  ^bb19:  // pred: ^bb18
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc77)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc78)
    cir.br ^bb20 loc(#loc68)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc68)
  ^bb21:  // pred: ^bb20
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %43 = cir.unary(inc, %42) : !s32i, !s32i loc(#loc80)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb17 loc(#loc323)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc68)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc61)
  ^bb24:  // pred: ^bb14
    %44 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb25 loc(#loc57)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc57)
  ^bb26:  // pred: ^bb25
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc82)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    cir.br ^bb27 loc(#loc29)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc20)
  } loc(#loc302)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc329)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc330)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc91)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.br ^bb1 loc(#loc332)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc329)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc329)
    cir.br ^bb2 loc(#loc333)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc98)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc98)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc98)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc98)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc98)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc98)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc98)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc98)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc295)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc100)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc101)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc334)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc335)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc106)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb5 loc(#loc103)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb5 loc(#loc96)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc96)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.call @badSink(%24) : (!s32i) -> () loc(#loc111)
    cir.return loc(#loc85)
  } loc(#loc328)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc338)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc114)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc339)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc116)
    cir.return loc(#loc113)
  } loc(#loc337)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc118)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc121, #loc122])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc342)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc343)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc341)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    cir.br ^bb1 loc(#loc344)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc130)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc131)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc131)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc345)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc346)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc347)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc343)
    cir.br ^bb2 loc(#loc348)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc137)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc349)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc350)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc139)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc141)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc135)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc351)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc144)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    cir.br ^bb7 loc(#loc351)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc147)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc353)
    cir.brcond %20 ^bb8, ^bb12 loc(#loc148)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc354)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc153)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.br ^bb10 loc(#loc143)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc143)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc155)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb7 loc(#loc351)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc143)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc357)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %29 ^bb15, ^bb20 loc(#loc160)
  ^bb15:  // pred: ^bb14
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc162)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc359)
    cir.brcond %32 ^bb16, ^bb17 loc(#loc160)
  ^bb16:  // pred: ^bb15
    %33 = cir.const #true loc(#loc160)
    cir.br ^bb18(%33 : !cir.bool) loc(#loc160)
  ^bb17:  // pred: ^bb15
    %34 = cir.const #false loc(#loc160)
    cir.br ^bb18(%34 : !cir.bool) loc(#loc160)
  ^bb18(%35: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":134:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc160)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%35 : !cir.bool) loc(#loc160)
  ^bb20:  // pred: ^bb14
    %36 = cir.const #false loc(#loc160)
    cir.br ^bb21(%36 : !cir.bool) loc(#loc160)
  ^bb21(%37: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":134:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc160)
  ^bb22:  // pred: ^bb21
    cir.brcond %37 ^bb23, ^bb32 loc(#loc360)
  ^bb23:  // pred: ^bb22
    %38 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc170)
    cir.store %38, %41 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb24 loc(#loc362)
  ^bb24:  // pred: ^bb23
    %42 = cir.const #cir.int<0> : !s32i loc(#loc173)
    cir.store %42, %0 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.br ^bb25 loc(#loc362)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc176)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc364)
    cir.brcond %45 ^bb26, ^bb30 loc(#loc177)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc365)
  ^bb27:  // pred: ^bb26
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc181)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc182)
    cir.br ^bb28 loc(#loc172)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc172)
  ^bb29:  // pred: ^bb28
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %51 = cir.unary(inc, %50) : !s32i, !s32i loc(#loc184)
    cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb25 loc(#loc362)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc172)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc165)
  ^bb32:  // pred: ^bb22
    %52 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc118)
    %53 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    cir.br ^bb33 loc(#loc157)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc157)
  ^bb34:  // pred: ^bb33
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc186)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc186)
    cir.call @free(%55) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc187)
    cir.br ^bb35 loc(#loc129)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc120)
  } loc(#loc340)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc368)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc369)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc195)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    cir.br ^bb1 loc(#loc371)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc368)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc368)
    cir.br ^bb2 loc(#loc372)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc201)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc202)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc202)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc202)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc202)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc202)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc202)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc202)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc202)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc295)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc203)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc204)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc205)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc205)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc373)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc374)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc209)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc210)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.br ^bb5 loc(#loc207)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc213)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc213)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc214)
    cir.br ^bb5 loc(#loc200)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc200)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc198)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.call @goodB2GSink(%24) : (!s32i) -> () loc(#loc216)
    cir.return loc(#loc189)
  } loc(#loc367)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc219, #loc220])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc378)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc379)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc377)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb1 loc(#loc380)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc228)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc229)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc229)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc381)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc382)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc228)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc383)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc379)
    cir.br ^bb2 loc(#loc384)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc234)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc235)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc235)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc385)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc386)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc237)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc239)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc237)
    cir.br ^bb4 loc(#loc233)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc233)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc387)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc242)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    cir.br ^bb7 loc(#loc387)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc245)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %20 ^bb8, ^bb12 loc(#loc246)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc390)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc248)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc249)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc251)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    cir.br ^bb10 loc(#loc241)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc241)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc253)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.br ^bb7 loc(#loc387)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc241)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc393)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc257)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc394)
    cir.brcond %29 ^bb15, ^bb24 loc(#loc395)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc262)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc264)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.br ^bb16 loc(#loc397)
  ^bb16:  // pred: ^bb15
    %34 = cir.const #cir.int<0> : !s32i loc(#loc267)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.br ^bb17 loc(#loc397)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %36 = cir.const #cir.int<10> : !s32i loc(#loc270)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc399)
    cir.brcond %37 ^bb18, ^bb22 loc(#loc271)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc400)
  ^bb19:  // pred: ^bb18
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc273)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc275)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc276)
    cir.br ^bb20 loc(#loc266)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc266)
  ^bb21:  // pred: ^bb20
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %43 = cir.unary(inc, %42) : !s32i, !s32i loc(#loc278)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    cir.br ^bb17 loc(#loc397)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc266)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc259)
  ^bb24:  // pred: ^bb14
    %44 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc279)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc279)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc280)
    cir.br ^bb25 loc(#loc255)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc255)
  ^bb26:  // pred: ^bb25
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc281)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc281)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc282)
    cir.br ^bb27 loc(#loc227)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc218)
  } loc(#loc376)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc403)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc288)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc290)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc293)
    cir.return loc(#loc284)
  } loc(#loc402)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":69:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":48:23)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":24:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":52:1)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":27:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":27:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":28:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":28:54)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":25:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":26:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":51:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":28:31)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":28:38)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":28:43)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":28:53)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":29:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":29:39)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":29:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":29:23)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":29:29)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":29:30)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":29:36)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":29:35)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":31:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":34:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":31:18)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":31:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":31:21)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":31:25)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":31:23)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":32:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":33:25)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":33:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":33:20)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":33:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":31:30)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":31:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":37:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":49:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":37:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":37:21)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":38:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":45:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":47:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":39:28)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":39:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":39:20)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":39:24)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":41:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":44:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":41:21)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":41:17)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":41:24)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":41:28)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":41:26)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":42:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":43:30)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":43:37)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":43:38)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":43:17)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":41:33)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":41:32)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":48:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":50:14)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":50:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":54:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":73:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":60:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":60:45)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":56:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":56:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":58:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":58:12)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":58:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":59:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":71:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":62:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":70:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":62:19)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":62:32)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":62:49)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":62:13)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":62:59)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":63:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":66:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":68:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":65:25)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":65:20)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":65:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":65:36)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":69:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":72:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":72:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":172:1)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":176:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":174:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":174:13)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":175:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":175:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":145:23)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":122:1)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":149:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":125:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":125:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":126:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":126:54)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":123:1)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":124:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":148:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":126:31)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":126:38)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":126:43)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":126:53)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":127:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":127:39)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":127:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":127:23)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":127:29)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":127:30)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":127:36)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":127:35)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":129:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":132:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":129:18)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":129:14)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":129:21)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":129:25)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":129:23)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":130:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":131:25)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":131:13)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":131:20)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":131:21)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":129:30)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":129:29)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":134:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":146:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":134:13)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":134:21)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":134:26)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":134:34)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":134:36)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":135:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":142:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":144:9)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":136:28)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":136:13)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":136:20)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":136:24)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":138:13)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":141:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":138:21)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":138:17)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":138:24)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":138:28)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":138:26)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":139:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":140:30)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":140:37)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":140:38)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":140:17)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":138:33)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":138:32)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":145:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":147:14)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":147:9)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":151:1)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":170:1)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":157:9)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":157:45)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":153:5)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":153:9)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":155:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":155:12)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":155:5)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":156:5)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":168:5)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":159:9)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":167:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":159:19)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":159:32)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":159:49)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":159:13)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":159:59)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":160:9)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":163:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":165:9)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":162:25)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":162:20)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":162:13)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":162:36)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":166:23)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":166:13)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":169:17)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":169:5)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":80:1)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":108:1)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":83:9)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":83:13)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":84:9)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":84:54)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":81:1)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":82:5)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":107:5)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":84:31)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":84:38)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":84:43)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":84:53)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":85:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":85:39)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":85:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":85:23)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":85:29)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":85:30)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":85:36)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":85:35)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":87:9)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":90:9)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":87:18)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":87:14)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":87:21)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":87:25)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":87:23)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":88:9)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":89:25)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":89:13)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":89:20)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":89:21)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":87:30)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":87:29)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":93:9)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":105:9)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":93:13)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":93:21)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":94:9)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":101:9)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":103:9)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":95:28)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":95:13)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":95:20)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":95:24)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":97:13)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":100:13)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":97:21)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":97:17)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":97:24)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":97:28)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":97:26)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":98:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":99:30)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":99:37)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":99:38)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":99:17)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":97:33)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":97:32)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":104:23)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":104:13)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":106:14)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":106:9)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":110:1)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":119:1)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":112:5)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":112:9)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":114:13)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":114:12)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":114:5)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":117:12)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":117:5)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":118:17)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_41.c":118:5)
#loc294 = loc(fused[#loc1, #loc2])
#loc295 = loc(fused[#loc3, #loc4])
#loc296 = loc(fused[#loc5, #loc6])
#loc297 = loc(fused[#loc7, #loc8])
#loc298 = loc(fused[#loc10, #loc11])
#loc299 = loc(fused[#loc12, #loc13])
#loc300 = loc(fused[#loc14, #loc15])
#loc301 = loc(fused[#loc17, #loc18])
#loc302 = loc(fused[#loc19, #loc20])
#loc304 = loc(fused[#loc23, #loc24])
#loc305 = loc(fused[#loc25, #loc26])
#loc306 = loc(fused[#loc28, #loc29])
#loc307 = loc(fused[#loc32, #loc33])
#loc308 = loc(fused[#loc31, #loc33])
#loc309 = loc(fused[#loc30, #loc26])
#loc310 = loc(fused[#loc34, #loc35])
#loc311 = loc(fused[#loc36, #loc37])
#loc312 = loc(fused[#loc38, #loc35])
#loc313 = loc(fused[#loc42, #loc43])
#loc314 = loc(fused[#loc45, #loc44])
#loc315 = loc(fused[#loc46, #loc47])
#loc316 = loc(fused[#loc49, #loc43])
#loc317 = loc(fused[#loc51, #loc50])
#loc318 = loc(fused[#loc55, #loc54])
#loc319 = loc(fused[#loc56, #loc57])
#loc320 = loc(fused[#loc58, #loc59])
#loc321 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc322 = loc(fused[#loc64, #loc63])
#loc323 = loc(fused[#loc67, #loc68])
#loc324 = loc(fused[#loc70, #loc69])
#loc325 = loc(fused[#loc71, #loc72])
#loc326 = loc(fused[#loc74, #loc68])
#loc327 = loc(fused[#loc80, #loc79])
#loc328 = loc(fused[#loc84, #loc85])
#loc329 = loc(fused[#loc86, #loc87])
#loc330 = loc(fused[#loc88, #loc89])
#loc331 = loc(fused[#loc92, #loc90])
#loc332 = loc(fused[#loc93, #loc94])
#loc333 = loc(fused[#loc95, #loc96])
#loc334 = loc(fused[#loc100, #loc101])
#loc335 = loc(fused[#loc102, #loc103, #loc104, #loc96])
#loc336 = loc(fused[#loc107, #loc108])
#loc337 = loc(fused[#loc112, #loc113])
#loc338 = loc(fused[#loc114, #loc115])
#loc339 = loc(fused[#loc116, #loc117])
#loc340 = loc(fused[#loc119, #loc120])
#loc342 = loc(fused[#loc123, #loc124])
#loc343 = loc(fused[#loc125, #loc126])
#loc344 = loc(fused[#loc128, #loc129])
#loc345 = loc(fused[#loc132, #loc133])
#loc346 = loc(fused[#loc131, #loc133])
#loc347 = loc(fused[#loc130, #loc126])
#loc348 = loc(fused[#loc134, #loc135])
#loc349 = loc(fused[#loc136, #loc137])
#loc350 = loc(fused[#loc138, #loc135])
#loc351 = loc(fused[#loc142, #loc143])
#loc352 = loc(fused[#loc145, #loc144])
#loc353 = loc(fused[#loc146, #loc147])
#loc354 = loc(fused[#loc149, #loc143])
#loc355 = loc(fused[#loc151, #loc150])
#loc356 = loc(fused[#loc155, #loc154])
#loc357 = loc(fused[#loc156, #loc157])
#loc358 = loc(fused[#loc158, #loc159])
#loc359 = loc(fused[#loc161, #loc163])
#loc360 = loc(fused[#loc164, #loc165, #loc166, #loc157])
#loc361 = loc(fused[#loc168, #loc167])
#loc362 = loc(fused[#loc171, #loc172])
#loc363 = loc(fused[#loc174, #loc173])
#loc364 = loc(fused[#loc175, #loc176])
#loc365 = loc(fused[#loc178, #loc172])
#loc366 = loc(fused[#loc184, #loc183])
#loc367 = loc(fused[#loc188, #loc189])
#loc368 = loc(fused[#loc190, #loc191])
#loc369 = loc(fused[#loc192, #loc193])
#loc370 = loc(fused[#loc196, #loc194])
#loc371 = loc(fused[#loc197, #loc198])
#loc372 = loc(fused[#loc199, #loc200])
#loc373 = loc(fused[#loc204, #loc205])
#loc374 = loc(fused[#loc206, #loc207, #loc208, #loc200])
#loc375 = loc(fused[#loc211, #loc212])
#loc376 = loc(fused[#loc217, #loc218])
#loc378 = loc(fused[#loc221, #loc222])
#loc379 = loc(fused[#loc223, #loc224])
#loc380 = loc(fused[#loc226, #loc227])
#loc381 = loc(fused[#loc230, #loc231])
#loc382 = loc(fused[#loc229, #loc231])
#loc383 = loc(fused[#loc228, #loc224])
#loc384 = loc(fused[#loc232, #loc233])
#loc385 = loc(fused[#loc234, #loc235])
#loc386 = loc(fused[#loc236, #loc233])
#loc387 = loc(fused[#loc240, #loc241])
#loc388 = loc(fused[#loc243, #loc242])
#loc389 = loc(fused[#loc244, #loc245])
#loc390 = loc(fused[#loc247, #loc241])
#loc391 = loc(fused[#loc249, #loc248])
#loc392 = loc(fused[#loc253, #loc252])
#loc393 = loc(fused[#loc254, #loc255])
#loc394 = loc(fused[#loc256, #loc257])
#loc395 = loc(fused[#loc258, #loc259, #loc260, #loc255])
#loc396 = loc(fused[#loc262, #loc261])
#loc397 = loc(fused[#loc265, #loc266])
#loc398 = loc(fused[#loc268, #loc267])
#loc399 = loc(fused[#loc269, #loc270])
#loc400 = loc(fused[#loc272, #loc266])
#loc401 = loc(fused[#loc278, #loc277])
#loc402 = loc(fused[#loc283, #loc284])
#loc403 = loc(fused[#loc285, #loc286])
#loc404 = loc(fused[#loc289, #loc287])
#loc405 = loc(fused[#loc291, #loc290])
