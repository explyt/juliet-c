!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc133)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc136)
  cir.func private @printIntLine(!s32i) loc(#loc137)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_313badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc142)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc142)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc142)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc28)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc28)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc28)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc28)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc28)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc28)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc28)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc28)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
        %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc144)
        cir.if %18 {
          %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
          %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc36)
          cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc146)
        } else {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        } loc(#loc145)
      } loc(#loc143)
    } loc(#loc141)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc148)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc149)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc148)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc45)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      cir.scope {
        %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc151)
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc152)
        %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc153)
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc53)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc53)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc154)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc155)
        cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc156)
        %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc57)
        %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc58)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc157)
        cir.store %17, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
        cir.scope {
          %23 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc64)
          cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc160)
          cir.for : cond {
            %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc66)
            %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc67)
            %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc161)
            cir.condition(%28) loc(#loc161)
          } body {
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc69)
              %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
              %27 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc71)
              %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc72)
              cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc163)
            } loc(#loc162)
            cir.yield loc(#loc63)
          } step {
            %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc73)
            %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc74)
            cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc164)
            cir.yield loc(#loc159)
          } loc(#loc159)
        } loc(#loc159)
        %18 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc76)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc77)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc78)
        %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
        cir.delete.array %22 : <!s32i> loc(#loc79)
      } loc(#loc150)
    } loc(#loc147)
    cir.return loc(#loc15)
  } loc(#loc138)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc166)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc85)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc87)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc170)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc171)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc170)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc171)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc173)
        %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc174)
        %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc175)
        %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc102)
        %13 = cir.const #cir.int<4> : !u64i loc(#loc176)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc177)
        cir.store %14, %8 : !u64i, !cir.ptr<!u64i> loc(#loc178)
        %15 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc106)
        %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc107)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc179)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc179)
        cir.store %18, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc180)
        cir.scope {
          %24 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc113)
          cir.store %25, %9 : !u64i, !cir.ptr<!u64i> loc(#loc182)
          cir.for : cond {
            %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc115)
            %27 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc116)
            %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc183)
            cir.condition(%29) loc(#loc183)
          } body {
            cir.scope {
              %26 = cir.const #cir.int<0> : !s32i loc(#loc118)
              %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc119)
              %28 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc120)
              %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc121)
              cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc185)
            } loc(#loc184)
            cir.yield loc(#loc112)
          } step {
            %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc122)
            %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc123)
            cir.store %27, %9 : !u64i, !cir.ptr<!u64i> loc(#loc186)
            cir.yield loc(#loc181)
          } loc(#loc181)
        } loc(#loc181)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc124)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc125)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc126)
        %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc124)
        cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc127)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
        cir.delete.array %23 : <!s32i> loc(#loc128)
      } loc(#loc172)
    } loc(#loc169)
    cir.return loc(#loc81)
  } loc(#loc165)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_314goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31L7goodG2BEv() : () -> () loc(#loc131)
    cir.return loc(#loc130)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":41:23)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":26:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":61:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":28:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":28:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":30:13)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":30:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":30:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":31:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":43:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":32:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":32:45)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":34:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":42:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":34:19)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":34:32)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":34:49)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":34:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":34:59)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":35:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":38:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":40:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":37:25)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":37:20)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":37:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":37:36)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":41:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":44:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":60:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":45:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":45:24)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":46:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":46:20)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":47:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":59:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":48:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":48:20)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":48:30)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":49:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":49:18)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":51:25)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":51:32)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":51:42)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":51:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":52:41)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":26:6)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":52:32)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":52:50)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":52:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":53:13)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":56:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":53:22)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":53:18)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":53:25)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":53:37)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":54:13)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":55:33)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":55:17)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":55:28)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":55:29)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":53:44)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":53:43)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":57:26)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":57:37)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":57:38)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":57:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":58:23)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":68:1)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":92:1)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":70:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":70:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":72:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":72:12)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":72:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":74:12)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":74:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":75:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":91:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":76:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":76:24)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":77:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":77:20)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":78:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":90:9)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":79:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":79:20)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":79:30)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":80:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":80:18)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":82:25)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":82:32)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":82:42)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":82:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":83:41)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":68:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":83:32)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":83:50)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":83:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":84:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":87:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":84:22)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":84:18)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":84:25)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":84:37)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":85:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":86:33)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":86:17)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":86:28)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":86:29)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":84:44)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":84:43)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":88:26)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":88:37)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":88:38)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":88:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":89:23)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":94:1)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":97:1)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_31.cpp":96:5)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc10, #loc11])
#loc137 = loc(fused[#loc12, #loc13])
#loc138 = loc(fused[#loc14, #loc15])
#loc139 = loc(fused[#loc16, #loc17])
#loc140 = loc(fused[#loc20, #loc18])
#loc141 = loc(fused[#loc21, #loc22])
#loc142 = loc(fused[#loc23, #loc24])
#loc143 = loc(fused[#loc25, #loc26])
#loc144 = loc(fused[#loc30, #loc31])
#loc145 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc146 = loc(fused[#loc37, #loc38])
#loc147 = loc(fused[#loc40, #loc41])
#loc148 = loc(fused[#loc42, #loc43])
#loc149 = loc(fused[#loc44, #loc45])
#loc150 = loc(fused[#loc46, #loc47])
#loc151 = loc(fused[#loc48, #loc49])
#loc152 = loc(fused[#loc48, #loc50])
#loc153 = loc(fused[#loc51, #loc52])
#loc154 = loc(fused[#loc54, #loc55])
#loc155 = loc(fused[#loc53, #loc55])
#loc156 = loc(fused[#loc56, #loc55])
#loc157 = loc(fused[#loc59, #loc60])
#loc158 = loc(fused[#loc61, #loc60])
#loc159 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc65, #loc64])
#loc161 = loc(fused[#loc66, #loc67])
#loc162 = loc(fused[#loc68, #loc63])
#loc163 = loc(fused[#loc70, #loc69])
#loc164 = loc(fused[#loc74, #loc73])
#loc165 = loc(fused[#loc80, #loc81])
#loc166 = loc(fused[#loc82, #loc83])
#loc167 = loc(fused[#loc86, #loc84])
#loc168 = loc(fused[#loc88, #loc87])
#loc169 = loc(fused[#loc89, #loc90])
#loc170 = loc(fused[#loc91, #loc92])
#loc171 = loc(fused[#loc93, #loc94])
#loc172 = loc(fused[#loc95, #loc96])
#loc173 = loc(fused[#loc97, #loc98])
#loc174 = loc(fused[#loc97, #loc99])
#loc175 = loc(fused[#loc100, #loc101])
#loc176 = loc(fused[#loc103, #loc104])
#loc177 = loc(fused[#loc102, #loc104])
#loc178 = loc(fused[#loc105, #loc104])
#loc179 = loc(fused[#loc108, #loc109])
#loc180 = loc(fused[#loc110, #loc109])
#loc181 = loc(fused[#loc111, #loc112])
#loc182 = loc(fused[#loc114, #loc113])
#loc183 = loc(fused[#loc115, #loc116])
#loc184 = loc(fused[#loc117, #loc112])
#loc185 = loc(fused[#loc119, #loc118])
#loc186 = loc(fused[#loc123, #loc122])
#loc187 = loc(fused[#loc129, #loc130])
