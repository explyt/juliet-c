!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":23:74)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":23:81)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":42:78)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":42:85)
#loc48 = loc(fused[#loc7, #loc8])
#loc54 = loc(fused[#loc27, #loc28])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc46)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc49)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc48)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc50)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc51)
    cir.store %arg0, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc12)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    cir.store %5, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc50)
    %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.store %7, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
    cir.br ^bb1 loc(#loc52)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc49)
    cir.store %8, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc49)
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc20)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc21)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %12 = cir.call @strcat(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc20)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc24)
    cir.br ^bb2 loc(#loc19)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc47)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc27, #loc28])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc55)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc54)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc56)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc57)
    cir.store %arg0, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc35)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc32)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc32)
    cir.store %5, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %7, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    cir.br ^bb1 loc(#loc58)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc55)
    cir.store %8, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc55)
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc40)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc41)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %12 = cir.call @strcat(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb2 loc(#loc39)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc26)
  } loc(#loc53)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":35:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":30:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":30:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":26:34)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":28:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":24:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":28:21)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":28:20)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":29:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":34:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":32:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":32:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":32:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":33:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":33:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":42:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":54:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":49:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":49:25)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":45:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":45:34)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":47:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":47:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":43:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":47:21)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":47:20)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":48:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":53:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":51:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":51:16)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":51:22)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":52:19)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_64b.c":52:9)
#loc45 = loc(fused[#loc1, #loc2])
#loc46 = loc(fused[#loc3, #loc4])
#loc47 = loc(fused[#loc5, #loc6])
#loc49 = loc(fused[#loc9, #loc10])
#loc50 = loc(fused[#loc11, #loc12])
#loc51 = loc(fused[#loc13, #loc14])
#loc52 = loc(fused[#loc18, #loc19])
#loc53 = loc(fused[#loc25, #loc26])
#loc55 = loc(fused[#loc29, #loc30])
#loc56 = loc(fused[#loc31, #loc32])
#loc57 = loc(fused[#loc33, #loc34])
#loc58 = loc(fused[#loc38, #loc39])
