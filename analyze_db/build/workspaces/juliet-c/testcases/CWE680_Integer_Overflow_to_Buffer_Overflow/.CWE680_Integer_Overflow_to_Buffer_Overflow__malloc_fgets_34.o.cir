!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType = !cir.record<union "CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType" {!s32i, !s32i}>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc155)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc156)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func private @printIntLine(!s32i) loc(#loc161)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc162)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc165)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc25)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc168)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc168)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc168)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc34)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc34)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc34)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc34)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc34)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc34)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc34)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc34)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc156)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc36)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc170)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc42)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc45)
        } loc(#loc171)
      } loc(#loc169)
    } loc(#loc167)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc47)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc175)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc53)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc52)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc175)
      cir.scope {
        %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc177)
        %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc178)
        %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc60)
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc61)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc61)
        %14 = cir.const #cir.int<4> : !u64i loc(#loc179)
        %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc180)
        %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc60)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc181)
        cir.store %17, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc182)
        cir.scope {
          %25 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc69)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc69)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s32i>, !cir.bool loc(#loc184)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc71)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc72)
            %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc73)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc71)
          } loc(#loc185)
        } loc(#loc183)
        cir.scope {
          %25 = cir.const #cir.int<0> : !s32i loc(#loc76)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc76)
          cir.store %26, %9 : !u64i, !cir.ptr<!u64i> loc(#loc187)
          cir.for : cond {
            %27 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc78)
            %28 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc79)
            %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc188)
            cir.condition(%30) loc(#loc80)
          } body {
            cir.scope {
              %27 = cir.const #cir.int<0> : !s32i loc(#loc82)
              %28 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
              %29 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc84)
              %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc85)
              cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc190)
            } loc(#loc189)
            cir.yield loc(#loc75)
          } step {
            %27 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc86)
            %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc87)
            cir.store %28, %9 : !u64i, !cir.ptr<!u64i> loc(#loc191)
            cir.yield loc(#loc186)
          } loc(#loc186)
        } loc(#loc186)
        %18 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc89)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc90)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc88)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc91)
        %22 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc92)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc93)
        cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc92)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc19)
  } loc(#loc163)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc96)
    cir.return loc(#loc95)
  } loc(#loc192)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc195)
    %1 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc196)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc105)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc107)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc47)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc201)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc53)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc201)
      cir.scope {
        %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc203)
        %11 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc204)
        %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc121)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc122)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc122)
        %15 = cir.const #cir.int<4> : !u64i loc(#loc205)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc206)
        %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc207)
        cir.store %18, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc208)
        cir.scope {
          %26 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc130)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc130)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s32i>, !cir.bool loc(#loc210)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc132)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc133)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc134)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc132)
          } loc(#loc211)
        } loc(#loc209)
        cir.scope {
          %26 = cir.const #cir.int<0> : !s32i loc(#loc137)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc137)
          cir.store %27, %10 : !u64i, !cir.ptr<!u64i> loc(#loc213)
          cir.for : cond {
            %28 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc139)
            %29 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc140)
            %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc214)
            cir.condition(%31) loc(#loc141)
          } body {
            cir.scope {
              %28 = cir.const #cir.int<0> : !s32i loc(#loc143)
              %29 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
              %30 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc145)
              %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc146)
              cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc216)
            } loc(#loc215)
            cir.yield loc(#loc136)
          } step {
            %28 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc147)
            %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc148)
            cir.store %29, %10 : !u64i, !cir.ptr<!u64i> loc(#loc217)
            cir.yield loc(#loc212)
          } loc(#loc212)
        } loc(#loc212)
        %19 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc150)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc151)
        %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc149)
        cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc152)
        %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc153)
        %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc154)
        cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc99)
  } loc(#loc194)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":45:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":29:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":66:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":31:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":31:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":32:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":32:75)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":34:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":34:12)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":34:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":35:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":47:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":36:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":36:45)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":38:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":46:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":38:19)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":38:32)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":38:49)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":38:13)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":38:59)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":39:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":42:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":44:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":41:25)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":41:20)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":41:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":41:36)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":45:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":48:26)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":23:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":48:5)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":49:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":65:5)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":50:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":50:28)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":24:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":51:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":64:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":52:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":52:20)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":53:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":53:18)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":56:32)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":56:39)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":56:46)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":56:56)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":56:57)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":56:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":57:13)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":57:47)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":57:17)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":57:31)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":57:37)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":57:38)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":57:44)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":57:43)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":58:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":61:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":58:22)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":58:18)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":58:25)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":58:37)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":58:27)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":59:13)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":60:33)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":60:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":60:28)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":60:29)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":58:44)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":58:43)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":62:26)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":62:37)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":62:38)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":62:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":63:13)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":63:18)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":101:1)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":104:1)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":103:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":103:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":73:1)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":99:1)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":75:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":75:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":76:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":76:75)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":78:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":78:12)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":78:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":80:12)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":80:5)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":81:26)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":81:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":82:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":98:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":83:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":83:28)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":84:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":97:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":85:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":85:20)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":86:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":86:18)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":89:32)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":89:39)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":89:46)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":89:56)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":89:57)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":89:13)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":90:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":90:47)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":90:17)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":90:31)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":90:37)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":90:38)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":90:44)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":90:43)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":91:13)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":94:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":91:22)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":91:18)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":91:25)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":91:37)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":91:27)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":92:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":93:33)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":93:17)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":93:28)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":93:29)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":91:44)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":91:43)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":95:26)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":95:37)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":95:38)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":95:13)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":96:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_34.c":96:18)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc10, #loc11])
#loc160 = loc(fused[#loc12, #loc13])
#loc161 = loc(fused[#loc14, #loc15])
#loc162 = loc(fused[#loc16, #loc17])
#loc163 = loc(fused[#loc18, #loc19])
#loc164 = loc(fused[#loc20, #loc21])
#loc165 = loc(fused[#loc22, #loc23])
#loc166 = loc(fused[#loc26, #loc24])
#loc167 = loc(fused[#loc27, #loc28])
#loc168 = loc(fused[#loc29, #loc30])
#loc169 = loc(fused[#loc31, #loc32])
#loc170 = loc(fused[#loc36, #loc37])
#loc171 = loc(fused[#loc38, #loc39, #loc40, #loc32])
#loc172 = loc(fused[#loc43, #loc44])
#loc173 = loc(fused[#loc48, #loc46])
#loc174 = loc(fused[#loc49, #loc50])
#loc175 = loc(fused[#loc51, #loc52])
#loc176 = loc(fused[#loc54, #loc55])
#loc177 = loc(fused[#loc56, #loc57])
#loc178 = loc(fused[#loc58, #loc59])
#loc179 = loc(fused[#loc62, #loc63])
#loc180 = loc(fused[#loc61, #loc63])
#loc181 = loc(fused[#loc60, #loc64])
#loc182 = loc(fused[#loc65, #loc64])
#loc183 = loc(fused[#loc66, #loc67])
#loc184 = loc(fused[#loc68, #loc69])
#loc185 = loc(fused[#loc70, #loc67])
#loc186 = loc(fused[#loc74, #loc75])
#loc187 = loc(fused[#loc77, #loc76])
#loc188 = loc(fused[#loc78, #loc79])
#loc189 = loc(fused[#loc81, #loc75])
#loc190 = loc(fused[#loc83, #loc82])
#loc191 = loc(fused[#loc87, #loc86])
#loc192 = loc(fused[#loc94, #loc95])
#loc193 = loc(fused[#loc96, #loc97])
#loc194 = loc(fused[#loc98, #loc99])
#loc195 = loc(fused[#loc100, #loc101])
#loc196 = loc(fused[#loc102, #loc103])
#loc197 = loc(fused[#loc106, #loc104])
#loc198 = loc(fused[#loc108, #loc107])
#loc199 = loc(fused[#loc110, #loc109])
#loc200 = loc(fused[#loc111, #loc112])
#loc201 = loc(fused[#loc113, #loc114])
#loc202 = loc(fused[#loc115, #loc116])
#loc203 = loc(fused[#loc117, #loc118])
#loc204 = loc(fused[#loc119, #loc120])
#loc205 = loc(fused[#loc123, #loc124])
#loc206 = loc(fused[#loc122, #loc124])
#loc207 = loc(fused[#loc121, #loc125])
#loc208 = loc(fused[#loc126, #loc125])
#loc209 = loc(fused[#loc127, #loc128])
#loc210 = loc(fused[#loc129, #loc130])
#loc211 = loc(fused[#loc131, #loc128])
#loc212 = loc(fused[#loc135, #loc136])
#loc213 = loc(fused[#loc138, #loc137])
#loc214 = loc(fused[#loc139, #loc140])
#loc215 = loc(fused[#loc142, #loc136])
#loc216 = loc(fused[#loc144, #loc143])
#loc217 = loc(fused[#loc148, #loc147])
