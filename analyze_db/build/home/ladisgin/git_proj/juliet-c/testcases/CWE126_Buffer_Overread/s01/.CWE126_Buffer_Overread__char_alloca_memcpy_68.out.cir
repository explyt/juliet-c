!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":82:10)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":82:14)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":82:20)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":82:32)
#loc134 = loc(fused[#loc57, #loc58])
#loc135 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE126_Buffer_Overread__char_alloca_memcpy_68_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc115)
  cir.func no_proto private @CWE126_Buffer_Overread__char_alloca_memcpy_68b_badSink(...) loc(#loc116)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_68_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc120)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc12)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc12)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc15)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc121)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc19)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc21)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc122)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc26)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc123)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc30)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc32)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc124)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %45, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %47 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.store %46, %47 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    %48 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_68b_badSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc127)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %49() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc6)
  } loc(#loc117)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_68_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc42)
  } loc(#loc128)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc130)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc131)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc64)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_68_good : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call @CWE126_Buffer_Overread__char_alloca_memcpy_68_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_68_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call @CWE126_Buffer_Overread__char_alloca_memcpy_68_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.return %17 : !s32i loc(#loc138)
  } loc(#loc133)
  cir.global external dsolocal @CWE126_Buffer_Overread__char_alloca_memcpy_68_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc139)
  cir.func no_proto private @CWE126_Buffer_Overread__char_alloca_memcpy_68b_goodG2BSink(...) loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc84)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc84)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc84)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc84)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc84)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc144)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc84)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc84)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc86)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc86)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc86)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc86)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc86)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc88)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc89)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc89)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc89)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc145)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc93)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc95)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc95)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc97)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc99)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc100)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc100)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc147)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc104)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc106)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc148)
    %45 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.store %45, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %47 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.store %46, %47 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %48 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_68b_goodG2BSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc151)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %49() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc113)
    cir.return loc(#loc80)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":21:1)
#loc2 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":21:8)
#loc3 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":27:1)
#loc4 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":27:61)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":29:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":42:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":31:5)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":31:12)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":32:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":32:36)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":33:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":33:37)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":34:12)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":34:27)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":34:32)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":34:35)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":34:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":34:36)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":35:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":35:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":35:19)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":35:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":35:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":36:12)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":36:28)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":36:33)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":36:37)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":36:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":36:38)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":37:29)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":37:5)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":37:20)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":37:24)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":37:25)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":39:12)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":39:5)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":40:61)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":40:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":41:5)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":41:60)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":67:1)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":70:1)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":69:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":69:13)
#loc45 = loc("/usr/include/stdlib.h":575:1)
#loc46 = loc("/usr/include/stdlib.h":575:41)
#loc47 = loc("/usr/include/time.h":76:1)
#loc48 = loc("/usr/include/time.h":76:38)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":87:15)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":89:15)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":92:15)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":94:15)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":82:1)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":97:1)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":83:1)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":85:27)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":85:22)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":85:5)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":87:5)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":88:5)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":88:56)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":89:5)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":92:5)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":93:5)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":93:55)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":94:5)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":96:12)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":96:5)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":22:1)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":22:8)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":49:1)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":49:65)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":52:1)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":65:1)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":54:5)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":54:12)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":55:5)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":55:36)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":56:5)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":56:37)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":57:12)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":57:27)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":57:32)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":57:35)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":57:5)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":57:36)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":58:27)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":58:5)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":58:19)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":58:22)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":58:23)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":59:12)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":59:28)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":59:33)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":59:37)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":59:5)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":59:38)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":60:29)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":60:5)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":60:20)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":60:24)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":60:25)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":62:12)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":62:5)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":63:65)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":63:5)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":64:5)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_68a.c":64:64)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc11, #loc12])
#loc121 = loc(fused[#loc17, #loc18])
#loc122 = loc(fused[#loc20, #loc19])
#loc123 = loc(fused[#loc28, #loc29])
#loc124 = loc(fused[#loc31, #loc30])
#loc125 = loc(fused[#loc36, #loc35])
#loc126 = loc(fused[#loc38, #loc37])
#loc127 = loc(fused[#loc39, #loc40])
#loc128 = loc(fused[#loc41, #loc42])
#loc129 = loc(fused[#loc43, #loc44])
#loc130 = loc(fused[#loc45, #loc46])
#loc131 = loc(fused[#loc47, #loc48])
#loc132 = loc(fused[#loc49, #loc50])
#loc133 = loc(fused[#loc55, #loc56])
#loc136 = loc(fused[#loc66, #loc67])
#loc137 = loc(fused[#loc70, #loc71])
#loc138 = loc(fused[#loc74, #loc73])
#loc139 = loc(fused[#loc75, #loc76])
#loc140 = loc(fused[#loc77, #loc78])
#loc141 = loc(fused[#loc79, #loc80])
#loc142 = loc(fused[#loc81, #loc82])
#loc143 = loc(fused[#loc83, #loc84])
#loc144 = loc(fused[#loc85, #loc86])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc94, #loc93])
#loc147 = loc(fused[#loc102, #loc103])
#loc148 = loc(fused[#loc105, #loc104])
#loc149 = loc(fused[#loc110, #loc109])
#loc150 = loc(fused[#loc112, #loc111])
#loc151 = loc(fused[#loc113, #loc114])
