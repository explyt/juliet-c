!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc36 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":98:10)
#loc37 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":98:14)
#loc38 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":98:20)
#loc39 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":98:32)
#loc120 = loc(fused[#loc36, #loc37])
#loc121 = loc(fused[#loc38, #loc39])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_alloca_use_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc106)
  cir.func no_proto @CWE758_Undefined_Behavior__char_alloca_use_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %3 ^bb2, ^bb5 loc(#loc111)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc112)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<1> : !u64i loc(#loc6)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc6)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc6)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc6)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc8)
    %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc15)
    cir.store %9, %1 : !s8i, !cir.ptr<!s8i> loc(#loc109)
    %10 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc16)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc17)
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc10)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc10)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc107)
  cir.func no_proto @CWE758_Undefined_Behavior__char_alloca_use_04_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc20)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc115)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc113)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc116)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc33)
  cir.func @main(%arg0: !s32i loc(fused[#loc36, #loc37]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc38, #loc39])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc35)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc40)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc40)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc41)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc42)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc42)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc43)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc30)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    %8 = cir.get_global @CWE758_Undefined_Behavior__char_alloca_use_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call @CWE758_Undefined_Behavior__char_alloca_use_04_good() : () -> () loc(#loc45)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc31)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc32)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %13 = cir.get_global @CWE758_Undefined_Behavior__char_alloca_use_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE758_Undefined_Behavior__char_alloca_use_04_bad() : () -> () loc(#loc49)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc33)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc52)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.return %17 : !s32i loc(#loc124)
  } loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc128)
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb8 loc(#loc67)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc131)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<1> : !u64i loc(#loc60)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc72)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc72)
    cir.store %12, %0 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    %13 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc74)
    %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.store %13, %14 : !s8i, !cir.ptr<!s8i> loc(#loc133)
    cir.br ^bb5 loc(#loc134)
  ^bb5:  // pred: ^bb4
    %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc79)
    cir.store %16, %2 : !s8i, !cir.ptr<!s8i> loc(#loc128)
    %17 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc80)
    cir.call @printHexCharLine(%17) : (!s8i) -> () loc(#loc81)
    cir.br ^bb6 loc(#loc78)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc64)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc64)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc56)
  } loc(#loc125)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc92)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc140)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc141)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<1> : !u64i loc(#loc87)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc96)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc96)
    cir.store %10, %0 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    %11 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc98)
    %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    cir.store %11, %12 : !s8i, !cir.ptr<!s8i> loc(#loc143)
    cir.br ^bb4 loc(#loc144)
  ^bb4:  // pred: ^bb3
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc103)
    cir.store %14, %2 : !s8i, !cir.ptr<!s8i> loc(#loc138)
    %15 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc104)
    cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc105)
    cir.br ^bb5 loc(#loc102)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc95)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc91)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc91)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc83)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_alloca_use_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":26:1)
#loc4 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":36:1)
#loc5 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":31:13)
#loc6 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":31:38)
#loc7 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":32:13)
#loc8 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":32:26)
#loc9 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":28:5)
#loc10 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":35:5)
#loc11 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":28:8)
#loc12 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":29:5)
#loc13 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":30:9)
#loc14 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":34:9)
#loc15 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":32:25)
#loc16 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":33:30)
#loc17 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":33:13)
#loc18 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":83:1)
#loc19 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":87:1)
#loc20 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":85:5)
#loc21 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":85:11)
#loc22 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":86:5)
#loc23 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":86:11)
#loc24 = loc("/usr/include/stdlib.h":575:1)
#loc25 = loc("/usr/include/stdlib.h":575:41)
#loc26 = loc("/usr/include/time.h":76:1)
#loc27 = loc("/usr/include/time.h":76:38)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":103:15)
#loc31 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":105:15)
#loc32 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":108:15)
#loc33 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":110:15)
#loc34 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":98:1)
#loc35 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":113:1)
#loc40 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":99:1)
#loc41 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":101:27)
#loc42 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":101:22)
#loc43 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":101:5)
#loc44 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":103:5)
#loc45 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":104:5)
#loc46 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":104:56)
#loc47 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":105:5)
#loc48 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":108:5)
#loc49 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":109:5)
#loc50 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":109:55)
#loc51 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":110:5)
#loc52 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":112:12)
#loc53 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":112:5)
#loc54 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":48:19)
#loc55 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":43:1)
#loc56 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":63:1)
#loc57 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":53:13)
#loc58 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":53:18)
#loc59 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":54:13)
#loc60 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":54:38)
#loc61 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":58:17)
#loc62 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":58:30)
#loc63 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":45:5)
#loc64 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":62:5)
#loc65 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":45:8)
#loc66 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":46:5)
#loc67 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":49:5)
#loc68 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":51:5)
#loc69 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":48:9)
#loc70 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":52:9)
#loc71 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":61:9)
#loc72 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":55:20)
#loc73 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":55:13)
#loc74 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":56:24)
#loc75 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":56:14)
#loc76 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":56:13)
#loc77 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":57:13)
#loc78 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":60:13)
#loc79 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":58:29)
#loc80 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":59:34)
#loc81 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":59:17)
#loc82 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":66:1)
#loc83 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":81:1)
#loc84 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":71:13)
#loc85 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":71:18)
#loc86 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":72:13)
#loc87 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":72:38)
#loc88 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":76:17)
#loc89 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":76:30)
#loc90 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":68:5)
#loc91 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":80:5)
#loc92 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":68:8)
#loc93 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":69:5)
#loc94 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":70:9)
#loc95 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":79:9)
#loc96 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":73:20)
#loc97 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":73:13)
#loc98 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":74:24)
#loc99 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":74:14)
#loc100 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":74:13)
#loc101 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":75:13)
#loc102 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":78:13)
#loc103 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":76:29)
#loc104 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":77:34)
#loc105 = loc("CWE758_Undefined_Behavior__char_alloca_use_04.c":77:17)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc7, #loc8])
#loc110 = loc(fused[#loc9, #loc10])
#loc111 = loc(fused[#loc12, #loc10])
#loc112 = loc(fused[#loc13, #loc14])
#loc113 = loc(fused[#loc18, #loc19])
#loc114 = loc(fused[#loc20, #loc21])
#loc115 = loc(fused[#loc22, #loc23])
#loc116 = loc(fused[#loc24, #loc25])
#loc117 = loc(fused[#loc26, #loc27])
#loc118 = loc(fused[#loc28, #loc29])
#loc119 = loc(fused[#loc34, #loc35])
#loc122 = loc(fused[#loc45, #loc46])
#loc123 = loc(fused[#loc49, #loc50])
#loc124 = loc(fused[#loc53, #loc52])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc57, #loc58])
#loc127 = loc(fused[#loc59, #loc60])
#loc128 = loc(fused[#loc61, #loc62])
#loc129 = loc(fused[#loc63, #loc64])
#loc130 = loc(fused[#loc66, #loc67, #loc68, #loc64])
#loc131 = loc(fused[#loc70, #loc71])
#loc132 = loc(fused[#loc73, #loc72])
#loc133 = loc(fused[#loc76, #loc74])
#loc134 = loc(fused[#loc77, #loc78])
#loc135 = loc(fused[#loc82, #loc83])
#loc136 = loc(fused[#loc84, #loc85])
#loc137 = loc(fused[#loc86, #loc87])
#loc138 = loc(fused[#loc88, #loc89])
#loc139 = loc(fused[#loc90, #loc91])
#loc140 = loc(fused[#loc93, #loc91])
#loc141 = loc(fused[#loc94, #loc95])
#loc142 = loc(fused[#loc97, #loc96])
#loc143 = loc(fused[#loc100, #loc98])
#loc144 = loc(fused[#loc101, #loc102])
