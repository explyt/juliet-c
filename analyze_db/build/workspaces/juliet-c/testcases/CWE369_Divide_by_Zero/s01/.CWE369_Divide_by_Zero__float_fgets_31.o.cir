!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc127)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc128)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc129)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc131)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc16)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc134)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc136)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc24)
        %4 = cir.const #cir.int<20> : !s32i loc(#loc25)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc128)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc27)
        %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
        %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc138)
        cir.if %10 {
          %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc32)
          %12 = cir.call @atof(%11) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc33)
          %13 = cir.cast(floating, %12 : !cir.double), !cir.float loc(#loc33)
          cir.store %13, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc140)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc36)
        } loc(#loc139)
      } loc(#loc137)
    } loc(#loc135)
    cir.scope {
      %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc142)
      %3 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc143)
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc40)
      cir.store %4, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc142)
      %5 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc42)
      cir.store %5, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc143)
      cir.scope {
        %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc145)
        %7 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc47)
        %8 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc48)
        %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc48)
        %10 = cir.binop(div, %7, %9) : !cir.double loc(#loc146)
        %11 = cir.cast(float_to_int, %10 : !cir.double), !s32i loc(#loc146)
        cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc145)
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc49)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc50)
      } loc(#loc144)
    } loc(#loc141)
    cir.return loc(#loc13)
  } loc(#loc132)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc149)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc61)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc152)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc63)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc153)
    cir.scope {
      %3 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc155)
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc156)
      %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc68)
      cir.store %5, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc155)
      %6 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc70)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc156)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc158)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc75)
        %9 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc76)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc76)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc159)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc159)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc158)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc77)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc78)
      } loc(#loc157)
    } loc(#loc154)
    cir.return loc(#loc58)
  } loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc79)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc84)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc162)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc164)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc92)
        %4 = cir.const #cir.int<20> : !s32i loc(#loc93)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc128)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc94)
        %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc95)
        %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
        %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc166)
        cir.if %10 {
          %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc100)
          %12 = cir.call @atof(%11) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc101)
          %13 = cir.cast(floating, %12 : !cir.double), !cir.float loc(#loc101)
          cir.store %13, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc168)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc105)
        } loc(#loc167)
      } loc(#loc165)
    } loc(#loc163)
    cir.scope {
      %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc170)
      %3 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc171)
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc109)
      cir.store %4, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc170)
      %5 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc111)
      cir.store %5, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc171)
      cir.scope {
        %6 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc114)
        %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc114)
        %8 = cir.fabs %7 : !cir.double loc(#loc114)
        %9 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc115)
        %10 = cir.cmp(gt, %8, %9) : !cir.double, !cir.bool loc(#loc173)
        cir.if %10 {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc175)
          %12 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc122)
          %13 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc123)
          %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc123)
          %15 = cir.binop(div, %12, %14) : !cir.double loc(#loc176)
          %16 = cir.cast(float_to_int, %15 : !cir.double), !s32i loc(#loc176)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc175)
          %17 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc124)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc125)
        } else {
          %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc79)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc79)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc126)
        } loc(#loc174)
      } loc(#loc172)
    } loc(#loc169)
    cir.return loc(#loc81)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_31.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":41:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":26:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":53:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":28:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":28:11)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":30:12)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":30:5)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":31:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":43:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":32:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":32:41)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":34:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":42:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":34:19)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":34:32)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":34:49)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":34:13)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":34:59)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":35:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":38:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":40:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":37:32)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":37:27)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":37:13)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":37:43)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":41:13)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":44:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":52:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":45:9)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":45:26)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":46:9)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":46:22)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":47:9)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":51:9)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":49:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":49:44)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":49:32)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":49:40)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":50:26)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":50:13)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":113:1)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":117:1)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":115:5)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":115:13)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":116:5)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":116:13)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":60:1)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":76:1)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":62:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":62:11)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":64:12)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":64:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":66:12)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":66:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":67:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":75:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":68:9)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":68:26)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":69:9)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":69:22)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":70:9)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":74:9)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":72:13)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":72:44)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":72:32)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":72:40)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":73:26)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":73:13)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":108:23)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":79:1)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":111:1)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":81:5)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":81:11)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":83:12)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":83:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":84:5)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":96:5)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":85:9)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":85:41)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":87:9)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":95:9)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":87:19)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":87:32)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":87:49)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":87:13)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":87:59)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":88:9)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":91:9)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":93:9)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":90:32)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":90:27)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":90:13)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":90:43)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":94:23)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":94:13)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":97:5)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":110:5)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":98:9)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":98:26)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":99:9)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":99:22)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":101:9)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":109:9)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":101:17)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":101:25)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":101:12)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":102:9)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":105:9)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":107:9)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":103:13)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":103:44)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":103:32)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":103:40)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":104:26)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":104:13)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_31.c":108:13)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc10, #loc11])
#loc132 = loc(fused[#loc12, #loc13])
#loc133 = loc(fused[#loc14, #loc15])
#loc134 = loc(fused[#loc17, #loc16])
#loc135 = loc(fused[#loc18, #loc19])
#loc136 = loc(fused[#loc20, #loc21])
#loc137 = loc(fused[#loc22, #loc23])
#loc138 = loc(fused[#loc27, #loc28])
#loc139 = loc(fused[#loc29, #loc30, #loc31, #loc23])
#loc140 = loc(fused[#loc34, #loc35])
#loc141 = loc(fused[#loc37, #loc38])
#loc142 = loc(fused[#loc39, #loc40])
#loc143 = loc(fused[#loc41, #loc42])
#loc144 = loc(fused[#loc43, #loc44])
#loc145 = loc(fused[#loc45, #loc46])
#loc146 = loc(fused[#loc47, #loc48])
#loc147 = loc(fused[#loc51, #loc52])
#loc148 = loc(fused[#loc53, #loc54])
#loc149 = loc(fused[#loc55, #loc56])
#loc150 = loc(fused[#loc57, #loc58])
#loc151 = loc(fused[#loc59, #loc60])
#loc152 = loc(fused[#loc62, #loc61])
#loc153 = loc(fused[#loc64, #loc63])
#loc154 = loc(fused[#loc65, #loc66])
#loc155 = loc(fused[#loc67, #loc68])
#loc156 = loc(fused[#loc69, #loc70])
#loc157 = loc(fused[#loc71, #loc72])
#loc158 = loc(fused[#loc73, #loc74])
#loc159 = loc(fused[#loc75, #loc76])
#loc160 = loc(fused[#loc80, #loc81])
#loc161 = loc(fused[#loc82, #loc83])
#loc162 = loc(fused[#loc85, #loc84])
#loc163 = loc(fused[#loc86, #loc87])
#loc164 = loc(fused[#loc88, #loc89])
#loc165 = loc(fused[#loc90, #loc91])
#loc166 = loc(fused[#loc95, #loc96])
#loc167 = loc(fused[#loc97, #loc98, #loc99, #loc91])
#loc168 = loc(fused[#loc102, #loc103])
#loc169 = loc(fused[#loc106, #loc107])
#loc170 = loc(fused[#loc108, #loc109])
#loc171 = loc(fused[#loc110, #loc111])
#loc172 = loc(fused[#loc112, #loc113])
#loc173 = loc(fused[#loc116, #loc115])
#loc174 = loc(fused[#loc117, #loc118, #loc119, #loc113])
#loc175 = loc(fused[#loc120, #loc121])
#loc176 = loc(fused[#loc122, #loc123])
