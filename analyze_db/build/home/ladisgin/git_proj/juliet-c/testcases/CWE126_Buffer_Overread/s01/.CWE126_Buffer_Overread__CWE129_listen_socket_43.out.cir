!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc19 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":47:23)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":47:28)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":146:27)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":146:32)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":175:27)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":175:32)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":287:10)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":287:14)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":287:20)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":287:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc379 = loc(fused[#loc19, #loc20])
#loc434 = loc(fused[#loc167, #loc168])
#loc445 = loc(fused[#loc198, #loc199])
#loc502 = loc(fused[#loc354, #loc355])
#loc503 = loc(fused[#loc356, #loc357])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc370)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc371)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc372)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc373)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc374)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc375)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc376)
  cir.func private @close(!s32i) -> !s32i loc(#loc377)
  cir.func internal private @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc379)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc21)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc381)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc382)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc383)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc384)
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc385)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc29)
      cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc383)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc31)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc384)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc37)
          %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc37)
          %13 = cir.const #cir.int<6> : !u32i loc(#loc38)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc38)
          %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc39)
          cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc387)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc44)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc45)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc389)
            cir.if %60 {
              cir.break loc(#loc47)
            } loc(#loc390)
          } loc(#loc388)
          %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc391)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc50)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc392)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc393)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc55)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc55)
          %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc394)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc58)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc58)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc395)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc62)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc62)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc63)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc396)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
            %58 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc398)
            %59 = cir.const #cir.int<16> : !u64i loc(#loc399)
            %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc399)
            %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc74)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc75)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc400)
            cir.if %64 {
              cir.break loc(#loc77)
            } loc(#loc401)
          } loc(#loc397)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %58 = cir.const #cir.int<5> : !s32i loc(#loc81)
            %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc82)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc83)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc403)
            cir.if %62 {
              cir.break loc(#loc85)
            } loc(#loc404)
          } loc(#loc402)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc87)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc88)
          %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc89)
          cir.store %33, %4 : !s32i, !cir.ptr<!s32i> loc(#loc405)
          cir.scope {
            %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc95)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc407)
            cir.if %60 {
              cir.break loc(#loc97)
            } loc(#loc408)
          } loc(#loc406)
          %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %35 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
          %37 = cir.const #cir.int<3> : !s32i loc(#loc100)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc100)
          %39 = cir.const #cir.int<4> : !u64i loc(#loc100)
          %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc100)
          %41 = cir.const #cir.int<2> : !s32i loc(#loc100)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc100)
          %43 = cir.binop(add, %40, %42) : !u64i loc(#loc100)
          %44 = cir.const #cir.int<1> : !s32i loc(#loc101)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc101)
          %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc409)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc103)
          cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc410)
          cir.scope {
            %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc109)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc412)
            %61 = cir.ternary(%60, true {
              %62 = cir.const #true loc(#loc110)
              cir.yield %62 : !cir.bool loc(#loc110)
            }, false {
              %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %63 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc413)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc110)
                cir.yield %66 : !cir.bool loc(#loc110)
              }, false {
                %66 = cir.const #false loc(#loc110)
                cir.yield %66 : !cir.bool loc(#loc110)
              }) : (!cir.bool) -> !cir.bool loc(#loc110)
              cir.yield %65 : !cir.bool loc(#loc110)
            }) : (!cir.bool) -> !cir.bool loc(#loc110)
            cir.if %61 {
              cir.break loc(#loc114)
            } loc(#loc414)
          } loc(#loc411)
          %50 = cir.const #cir.int<0> : !s8i loc(#loc115)
          %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
          %52 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
          %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc117)
          cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc415)
          %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
          %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
          %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
          cir.store %55, %56 : !s32i, !cir.ptr<!s32i> loc(#loc416)
          cir.yield loc(#loc35)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc122)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc122)
          cir.condition(%11) loc(#loc122)
        } loc(#loc386)
      } loc(#loc386)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc126)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc418)
        cir.if %13 {
          %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc129)
        } loc(#loc419)
      } loc(#loc417)
      cir.scope {
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc133)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc421)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc136)
        } loc(#loc422)
      } loc(#loc420)
    } loc(#loc380)
    cir.return loc(#loc18)
  } loc(#loc378)
  cir.func private @printIntLine(!s32i) loc(#loc423)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc424)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc141)
  cir.func @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc426)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc147)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    cir.call @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc149)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc429)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc429)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc429)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc157)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc431)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc162)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc162)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc162)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc163)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc141)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc141)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc164)
        } loc(#loc432)
      } loc(#loc430)
    } loc(#loc428)
    cir.return loc(#loc143)
  } loc(#loc425)
  cir.func internal private @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc167, #loc168])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc434)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc169)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc170)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    cir.return loc(#loc166)
  } loc(#loc433)
  cir.func internal private @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc437)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc177)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    cir.call @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc179)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc440)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc440)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc440)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc187)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc442)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc192)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc192)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc192)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc193)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc194)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc194)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc195)
        } loc(#loc443)
      } loc(#loc441)
    } loc(#loc439)
    cir.return loc(#loc173)
  } loc(#loc436)
  cir.func internal private @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc198, #loc199])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc445)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc200)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc447)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc448)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc449)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc450)
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc451)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc208)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc208)
      cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc449)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc210)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc210)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc450)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc215)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc216)
          %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc216)
          %13 = cir.const #cir.int<6> : !u32i loc(#loc217)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc217)
          %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc218)
          cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc453)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc223)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc224)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc224)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc455)
            cir.if %60 {
              cir.break loc(#loc226)
            } loc(#loc456)
          } loc(#loc454)
          %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc457)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc229)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc458)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc459)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc234)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc234)
          %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc460)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc236)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc236)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc461)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc238)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc238)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc239)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc462)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc244)
            %58 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc464)
            %59 = cir.const #cir.int<16> : !u64i loc(#loc465)
            %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc465)
            %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc249)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc250)
            %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc250)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc466)
            cir.if %64 {
              cir.break loc(#loc252)
            } loc(#loc467)
          } loc(#loc463)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc255)
            %58 = cir.const #cir.int<5> : !s32i loc(#loc256)
            %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc257)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc258)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc258)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc469)
            cir.if %62 {
              cir.break loc(#loc260)
            } loc(#loc470)
          } loc(#loc468)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc261)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc262)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc263)
          %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc264)
          cir.store %33, %4 : !s32i, !cir.ptr<!s32i> loc(#loc471)
          cir.scope {
            %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc269)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc270)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc270)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc473)
            cir.if %60 {
              cir.break loc(#loc272)
            } loc(#loc474)
          } loc(#loc472)
          %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc273)
          %35 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc274)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc274)
          %37 = cir.const #cir.int<3> : !s32i loc(#loc275)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc275)
          %39 = cir.const #cir.int<4> : !u64i loc(#loc275)
          %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc275)
          %41 = cir.const #cir.int<2> : !s32i loc(#loc275)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc275)
          %43 = cir.binop(add, %40, %42) : !u64i loc(#loc275)
          %44 = cir.const #cir.int<1> : !s32i loc(#loc276)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc276)
          %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc475)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc277)
          %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc278)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc278)
          cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc476)
          cir.scope {
            %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc283)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc284)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc284)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc478)
            %61 = cir.ternary(%60, true {
              %62 = cir.const #true loc(#loc285)
              cir.yield %62 : !cir.bool loc(#loc285)
            }, false {
              %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc286)
              %63 = cir.const #cir.int<0> : !s32i loc(#loc287)
              %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc479)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc285)
                cir.yield %66 : !cir.bool loc(#loc285)
              }, false {
                %66 = cir.const #false loc(#loc285)
                cir.yield %66 : !cir.bool loc(#loc285)
              }) : (!cir.bool) -> !cir.bool loc(#loc285)
              cir.yield %65 : !cir.bool loc(#loc285)
            }) : (!cir.bool) -> !cir.bool loc(#loc285)
            cir.if %61 {
              cir.break loc(#loc289)
            } loc(#loc480)
          } loc(#loc477)
          %50 = cir.const #cir.int<0> : !s8i loc(#loc290)
          %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc291)
          %52 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc292)
          %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc292)
          cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc481)
          %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc293)
          %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc294)
          %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc295)
          cir.store %55, %56 : !s32i, !cir.ptr<!s32i> loc(#loc482)
          cir.yield loc(#loc214)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc297)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc297)
          cir.condition(%11) loc(#loc297)
        } loc(#loc452)
      } loc(#loc452)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc300)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc301)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc301)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc484)
        cir.if %13 {
          %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc303)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc304)
        } loc(#loc485)
      } loc(#loc483)
      cir.scope {
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc307)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc308)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc308)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc487)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc310)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc311)
        } loc(#loc488)
      } loc(#loc486)
    } loc(#loc446)
    cir.return loc(#loc197)
  } loc(#loc444)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc312)
  cir.func internal private @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc490)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc317)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc318)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc491)
    cir.call @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc320)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc493)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc493)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc493)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc327)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc328)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc495)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc330)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc331)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc496)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc329)
            cir.yield %13 : !cir.bool loc(#loc329)
          }, false {
            %13 = cir.const #false loc(#loc329)
            cir.yield %13 : !cir.bool loc(#loc329)
          }) : (!cir.bool) -> !cir.bool loc(#loc329)
          cir.yield %12 : !cir.bool loc(#loc329)
        }, false {
          %9 = cir.const #false loc(#loc329)
          cir.yield %9 : !cir.bool loc(#loc329)
        }) : (!cir.bool) -> !cir.bool loc(#loc329)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc336)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc337)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc337)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc337)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc338)
        } else {
          %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc312)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc312)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc339)
        } loc(#loc497)
      } loc(#loc494)
    } loc(#loc492)
    cir.return loc(#loc314)
  } loc(#loc489)
  cir.func @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L7goodG2BEv() : () -> () loc(#loc342)
    cir.call @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_43L7goodB2GEv() : () -> () loc(#loc343)
    cir.return loc(#loc341)
  } loc(#loc498)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc499)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc500)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc348)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc349)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc350)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc351)
  cir.func @main(%arg0: !s32i loc(fused[#loc354, #loc355]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc356, #loc357])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc502)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc503)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc353)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc358)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc359)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc360)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc360)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc361)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc348)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc348)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc362)
    cir.call @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_434goodEv() : () -> () loc(#loc363)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc349)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc349)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc364)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc350)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc350)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc365)
    cir.call @_ZN47CWE126_Buffer_Overread__CWE129_listen_socket_433badEv() : () -> () loc(#loc366)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc351)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc351)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc367)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc368)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc504)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc504)
    cir.return %15 : !s32i loc(#loc504)
  } loc(#loc501)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":47:1)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":118:1)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":48:1)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":49:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":117:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":54:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":54:13)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":55:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":55:28)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":56:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":56:31)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":57:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":57:31)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":58:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":58:41)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":59:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":102:17)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":69:35)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":69:44)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":69:57)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":69:28)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":69:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":69:68)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":70:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":73:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":70:17)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":70:33)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":71:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":72:17)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":74:20)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":74:21)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":74:30)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":74:33)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":74:47)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":74:13)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":74:48)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":75:34)
#loc56 = loc("/usr/include/netinet/in.h":249:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":75:13)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":76:39)
#loc59 = loc("/usr/include/netinet/in.h":251:20)
#loc60 = loc("/usr/include/netinet/in.h":33:15)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":76:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":77:38)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":77:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":77:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":77:46)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":78:13)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":81:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":78:22)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":78:54)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":78:55)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":78:64)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":78:78)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":78:17)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":78:84)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":79:13)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":80:17)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":82:13)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":85:13)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":82:24)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":82:38)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":82:17)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":82:57)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":83:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":84:17)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":86:35)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":86:49)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":86:55)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":86:28)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":86:13)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":86:59)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":87:13)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":90:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":87:17)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":87:33)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":88:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":89:17)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":92:31)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":92:45)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":92:58)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":92:76)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":92:79)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":92:26)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":92:13)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":92:80)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":93:13)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":96:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":93:17)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":93:31)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":93:44)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":93:47)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":93:61)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":94:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":95:17)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":98:39)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":98:25)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":98:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":100:25)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":100:20)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":100:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":100:36)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":102:16)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":103:9)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":106:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":103:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":103:29)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":104:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":105:26)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":105:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":107:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":110:9)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":107:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":107:29)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":108:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":109:26)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":109:13)
#loc137 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc138 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc139 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc140 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":136:23)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":120:1)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":139:1)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":122:5)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":122:9)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":124:13)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":124:12)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":124:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":125:5)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":126:5)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":138:5)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":127:9)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":127:30)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":130:9)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":137:9)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":130:13)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":130:21)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":131:9)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":133:9)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":135:9)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":132:33)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":132:26)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":132:13)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":136:13)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":146:1)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":151:1)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":147:1)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":150:12)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":150:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":153:1)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":172:1)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":155:5)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":155:9)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":157:13)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":157:12)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":157:5)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":158:5)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":159:5)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":171:5)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":160:9)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":160:30)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":163:9)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":170:9)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":163:13)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":163:21)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":164:9)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":166:9)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":168:9)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":165:33)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":165:26)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":165:13)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":169:23)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":169:13)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":175:1)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":246:1)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":176:1)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":177:5)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":245:5)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":182:9)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":182:13)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":183:9)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":183:28)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":184:9)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":184:31)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":185:9)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":185:31)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":186:9)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":186:41)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":187:9)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":230:17)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":197:35)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":197:44)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":197:57)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":197:28)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":197:13)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":197:68)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":198:13)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":201:13)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":198:17)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":198:33)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":199:13)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":200:17)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":202:20)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":202:21)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":202:30)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":202:33)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":202:47)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":202:13)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":202:48)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":203:34)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":203:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":204:39)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":204:13)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":205:38)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":205:32)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":205:13)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":205:46)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":206:13)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":209:13)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":206:22)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":206:54)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":206:55)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":206:64)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":206:78)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":206:17)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":206:84)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":207:13)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":208:17)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":210:13)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":213:13)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":210:24)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":210:38)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":210:17)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":210:57)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":211:13)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":212:17)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":214:35)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":214:49)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":214:55)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":214:28)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":214:13)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":214:59)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":215:13)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":218:13)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":215:17)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":215:33)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":216:13)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":217:17)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":220:31)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":220:45)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":220:58)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":220:76)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":220:79)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":220:26)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":220:13)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":220:80)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":221:13)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":224:13)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":221:17)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":221:31)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":221:44)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":221:47)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":221:61)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":222:13)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":223:17)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":226:39)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":226:25)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":226:13)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":228:25)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":228:20)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":228:13)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":228:36)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":230:16)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":231:9)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":234:9)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":231:13)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":231:29)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":232:9)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":233:26)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":233:13)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":235:9)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":238:9)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":235:13)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":235:29)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":236:9)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":237:26)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":237:13)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":263:23)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":248:1)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":266:1)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":250:5)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":250:9)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":252:13)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":252:12)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":252:5)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":253:5)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":254:5)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":265:5)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":255:9)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":255:30)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":257:9)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":264:9)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":257:13)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":257:21)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":257:23)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":257:26)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":257:34)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":257:36)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":258:9)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":260:9)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":262:9)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":259:33)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":259:26)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":259:13)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":263:13)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":268:1)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":272:1)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":270:5)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":271:5)
#loc344 = loc("/usr/include/stdlib.h":575:1)
#loc345 = loc("/usr/include/stdlib.h":575:41)
#loc346 = loc("/usr/include/time.h":76:1)
#loc347 = loc("/usr/include/time.h":76:38)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":292:15)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":294:15)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":297:15)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":299:15)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":287:1)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":302:1)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":288:1)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":290:27)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":290:22)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":290:5)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":292:5)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":293:5)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":294:5)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":297:5)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":298:5)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":299:5)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":301:12)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_43.cpp":301:5)
#loc370 = loc(fused[#loc1, #loc2])
#loc371 = loc(fused[#loc3, #loc4])
#loc372 = loc(fused[#loc5, #loc6])
#loc373 = loc(fused[#loc7, #loc8])
#loc374 = loc(fused[#loc9, #loc10])
#loc375 = loc(fused[#loc11, #loc12])
#loc376 = loc(fused[#loc13, #loc14])
#loc377 = loc(fused[#loc15, #loc16])
#loc378 = loc(fused[#loc17, #loc18])
#loc380 = loc(fused[#loc22, #loc23])
#loc381 = loc(fused[#loc24, #loc25])
#loc382 = loc(fused[#loc26, #loc27])
#loc383 = loc(fused[#loc28, #loc29])
#loc384 = loc(fused[#loc30, #loc31])
#loc385 = loc(fused[#loc32, #loc33])
#loc386 = loc(fused[#loc34, #loc35])
#loc387 = loc(fused[#loc40, #loc41])
#loc388 = loc(fused[#loc42, #loc43])
#loc389 = loc(fused[#loc44, #loc45])
#loc390 = loc(fused[#loc46, #loc43])
#loc391 = loc(fused[#loc48, #loc49])
#loc392 = loc(fused[#loc51, #loc52])
#loc393 = loc(fused[#loc53, #loc54])
#loc394 = loc(fused[#loc57, #loc55])
#loc395 = loc(fused[#loc61, #loc58])
#loc396 = loc(fused[#loc65, #loc66])
#loc397 = loc(fused[#loc67, #loc68])
#loc398 = loc(fused[#loc70, #loc71])
#loc399 = loc(fused[#loc72, #loc73])
#loc400 = loc(fused[#loc74, #loc75])
#loc401 = loc(fused[#loc76, #loc68])
#loc402 = loc(fused[#loc78, #loc79])
#loc403 = loc(fused[#loc82, #loc83])
#loc404 = loc(fused[#loc84, #loc79])
#loc405 = loc(fused[#loc90, #loc91])
#loc406 = loc(fused[#loc92, #loc93])
#loc407 = loc(fused[#loc94, #loc95])
#loc408 = loc(fused[#loc96, #loc93])
#loc409 = loc(fused[#loc100, #loc101])
#loc410 = loc(fused[#loc104, #loc105])
#loc411 = loc(fused[#loc106, #loc107])
#loc412 = loc(fused[#loc108, #loc109])
#loc413 = loc(fused[#loc111, #loc112])
#loc414 = loc(fused[#loc113, #loc107])
#loc415 = loc(fused[#loc117, #loc115])
#loc416 = loc(fused[#loc120, #loc121])
#loc417 = loc(fused[#loc123, #loc124])
#loc418 = loc(fused[#loc125, #loc126])
#loc419 = loc(fused[#loc127, #loc124])
#loc420 = loc(fused[#loc130, #loc131])
#loc421 = loc(fused[#loc132, #loc133])
#loc422 = loc(fused[#loc134, #loc131])
#loc423 = loc(fused[#loc137, #loc138])
#loc424 = loc(fused[#loc139, #loc140])
#loc425 = loc(fused[#loc142, #loc143])
#loc426 = loc(fused[#loc144, #loc145])
#loc427 = loc(fused[#loc148, #loc146])
#loc428 = loc(fused[#loc150, #loc151])
#loc429 = loc(fused[#loc152, #loc153])
#loc430 = loc(fused[#loc154, #loc155])
#loc431 = loc(fused[#loc156, #loc157])
#loc432 = loc(fused[#loc158, #loc159, #loc160, #loc155])
#loc433 = loc(fused[#loc165, #loc166])
#loc435 = loc(fused[#loc171, #loc170])
#loc436 = loc(fused[#loc172, #loc173])
#loc437 = loc(fused[#loc174, #loc175])
#loc438 = loc(fused[#loc178, #loc176])
#loc439 = loc(fused[#loc180, #loc181])
#loc440 = loc(fused[#loc182, #loc183])
#loc441 = loc(fused[#loc184, #loc185])
#loc442 = loc(fused[#loc186, #loc187])
#loc443 = loc(fused[#loc188, #loc189, #loc190, #loc185])
#loc444 = loc(fused[#loc196, #loc197])
#loc446 = loc(fused[#loc201, #loc202])
#loc447 = loc(fused[#loc203, #loc204])
#loc448 = loc(fused[#loc205, #loc206])
#loc449 = loc(fused[#loc207, #loc208])
#loc450 = loc(fused[#loc209, #loc210])
#loc451 = loc(fused[#loc211, #loc212])
#loc452 = loc(fused[#loc213, #loc214])
#loc453 = loc(fused[#loc219, #loc220])
#loc454 = loc(fused[#loc221, #loc222])
#loc455 = loc(fused[#loc223, #loc224])
#loc456 = loc(fused[#loc225, #loc222])
#loc457 = loc(fused[#loc227, #loc228])
#loc458 = loc(fused[#loc230, #loc231])
#loc459 = loc(fused[#loc232, #loc233])
#loc460 = loc(fused[#loc235, #loc234])
#loc461 = loc(fused[#loc237, #loc236])
#loc462 = loc(fused[#loc240, #loc241])
#loc463 = loc(fused[#loc242, #loc243])
#loc464 = loc(fused[#loc245, #loc246])
#loc465 = loc(fused[#loc247, #loc248])
#loc466 = loc(fused[#loc249, #loc250])
#loc467 = loc(fused[#loc251, #loc243])
#loc468 = loc(fused[#loc253, #loc254])
#loc469 = loc(fused[#loc257, #loc258])
#loc470 = loc(fused[#loc259, #loc254])
#loc471 = loc(fused[#loc265, #loc266])
#loc472 = loc(fused[#loc267, #loc268])
#loc473 = loc(fused[#loc269, #loc270])
#loc474 = loc(fused[#loc271, #loc268])
#loc475 = loc(fused[#loc275, #loc276])
#loc476 = loc(fused[#loc279, #loc280])
#loc477 = loc(fused[#loc281, #loc282])
#loc478 = loc(fused[#loc283, #loc284])
#loc479 = loc(fused[#loc286, #loc287])
#loc480 = loc(fused[#loc288, #loc282])
#loc481 = loc(fused[#loc292, #loc290])
#loc482 = loc(fused[#loc295, #loc296])
#loc483 = loc(fused[#loc298, #loc299])
#loc484 = loc(fused[#loc300, #loc301])
#loc485 = loc(fused[#loc302, #loc299])
#loc486 = loc(fused[#loc305, #loc306])
#loc487 = loc(fused[#loc307, #loc308])
#loc488 = loc(fused[#loc309, #loc306])
#loc489 = loc(fused[#loc313, #loc314])
#loc490 = loc(fused[#loc315, #loc316])
#loc491 = loc(fused[#loc319, #loc317])
#loc492 = loc(fused[#loc321, #loc322])
#loc493 = loc(fused[#loc323, #loc324])
#loc494 = loc(fused[#loc325, #loc326])
#loc495 = loc(fused[#loc327, #loc328])
#loc496 = loc(fused[#loc330, #loc332])
#loc497 = loc(fused[#loc333, #loc334, #loc335, #loc326])
#loc498 = loc(fused[#loc340, #loc341])
#loc499 = loc(fused[#loc344, #loc345])
#loc500 = loc(fused[#loc346, #loc347])
#loc501 = loc(fused[#loc352, #loc353])
#loc504 = loc(fused[#loc369, #loc368])
