!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:48)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:28)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:48)
#loc337 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:48)
#loc367 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:28)
#loc385 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:28)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc437)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc438)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc439)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc440)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc441)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc442)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc443)
  cir.func private @close(!s32i) -> !s32i loc(#loc444)
  cir.func private @printIntLine(!s32i) loc(#loc445)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc20)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc446)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc448)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc449)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc450)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc451)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc452)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc453)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc454)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc40)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc455)
    cir.br ^bb1 loc(#loc456)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc457)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc457)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc44)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %11 ^bb2, ^bb36 loc(#loc458)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc459)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc31)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc450)
    cir.br ^bb4 loc(#loc460)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc460)
  ^bb5:  // pred: ^bb28
    %14 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc53)
    cir.brcond %15 ^bb6, ^bb29 loc(#loc53)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc461)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<2> : !s32i loc(#loc56)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc58)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc462)
    cir.br ^bb8 loc(#loc463)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc65)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc464)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc465)
  ^bb9:  // pred: ^bb8
    cir.br ^bb29 loc(#loc67)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc63)
  ^bb11:  // pred: ^bb10
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc466)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc467)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc468)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc75)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc75)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc469)
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
    %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc78)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc470)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc83)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc83)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc84)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc471)
    cir.br ^bb12 loc(#loc472)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc473)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc474)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc474)
    %43 = cir.call @connect(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc95)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %45 = cir.unary(minus, %44) nsw : !s32i, !s32i loc(#loc96)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc475)
    cir.brcond %46 ^bb13, ^bb14 loc(#loc476)
  ^bb13:  // pred: ^bb12
    cir.br ^bb29 loc(#loc98)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc89)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %48 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
    %50 = cir.const #cir.int<3> : !s32i loc(#loc101)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc101)
    %52 = cir.const #cir.int<4> : !u64i loc(#loc101)
    %53 = cir.binop(mul, %51, %52) : !u64i loc(#loc101)
    %54 = cir.const #cir.int<2> : !s32i loc(#loc101)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc101)
    %56 = cir.binop(add, %53, %55) : !u64i loc(#loc101)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc102)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc477)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %61 = cir.call @recv(%47, %49, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc104)
    %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc104)
    cir.store %62, %0 : !s32i, !cir.ptr<!s32i> loc(#loc478)
    cir.br ^bb16 loc(#loc479)
  ^bb16:  // pred: ^bb15
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc110)
    %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc480)
    cir.brcond %66 ^bb17, ^bb18 loc(#loc111)
  ^bb17:  // pred: ^bb16
    %67 = cir.const #true loc(#loc111)
    cir.br ^bb23(%67 : !cir.bool) loc(#loc111)
  ^bb18:  // pred: ^bb16
    %68 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %69 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %70 = cir.cmp(eq, %68, %69) : !s32i, !cir.bool loc(#loc481)
    cir.brcond %70 ^bb19, ^bb20 loc(#loc111)
  ^bb19:  // pred: ^bb18
    %71 = cir.const #true loc(#loc111)
    cir.br ^bb21(%71 : !cir.bool) loc(#loc111)
  ^bb20:  // pred: ^bb18
    %72 = cir.const #false loc(#loc111)
    cir.br ^bb21(%72 : !cir.bool) loc(#loc111)
  ^bb21(%73: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc111)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%73 : !cir.bool) loc(#loc111)
  ^bb23(%74: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc111)
  ^bb24:  // pred: ^bb23
    cir.brcond %74 ^bb25, ^bb26 loc(#loc482)
  ^bb25:  // pred: ^bb24
    cir.br ^bb29 loc(#loc115)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc108)
  ^bb27:  // pred: ^bb26
    %75 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc116)
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
    %79 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %77 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %76, %79 : !s8i, !cir.ptr<!s8i> loc(#loc483)
    %80 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
    %81 = cir.call @atoi(%80) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc120)
    cir.store %81, %6 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    cir.br ^bb28 loc(#loc55)
  ^bb28:  // pred: ^bb27
    cir.br ^bb5 loc(#loc52)
  ^bb29:  // 4 preds: ^bb5, ^bb9, ^bb13, ^bb25
    cir.br ^bb30 loc(#loc52)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc485)
  ^bb31:  // pred: ^bb30
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc126)
    %85 = cir.cmp(ne, %82, %84) : !s32i, !cir.bool loc(#loc486)
    cir.brcond %85 ^bb32, ^bb33 loc(#loc487)
  ^bb32:  // pred: ^bb31
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %87 = cir.call @close(%86) : (!s32i) -> !s32i loc(#loc129)
    cir.br ^bb33 loc(#loc124)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc124)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc50)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37 loc(#loc47)
  ^bb36:  // pred: ^bb1
    %88 = cir.const #cir.int<2> : !s32i loc(#loc130)
    cir.store %88, %6 : !s32i, !cir.ptr<!s32i> loc(#loc488)
    cir.br ^bb37 loc(#loc43)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc43)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc489)
  ^bb39:  // pred: ^bb38
    %89 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc490)
    %90 = cir.cast(bitcast, %89 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc490)
    %91 = cir.call %90() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc134)
    %92 = cir.cast(int_to_bool, %91 : !s32i), !cir.bool loc(#loc134)
    cir.brcond %92 ^bb40, ^bb43 loc(#loc491)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc492)
  ^bb41:  // pred: ^bb40
    %93 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %94 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %95 = cir.binop(mul, %93, %94) nsw : !s32i loc(#loc141)
    cir.store %95, %4 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    %96 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.call @printIntLine(%96) : (!s32i) -> () loc(#loc143)
    cir.br ^bb42 loc(#loc140)
  ^bb42:  // pred: ^bb41
    cir.br ^bb57 loc(#loc137)
  ^bb43:  // pred: ^bb39
    cir.br ^bb44 loc(#loc493)
  ^bb44:  // pred: ^bb43
    %97 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %98 = cir.const #cir.int<2147483647> : !s32i loc(#loc147)
    %99 = cir.unary(minus, %98) nsw : !s32i, !s32i loc(#loc147)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %101 = cir.binop(sub, %99, %100) nsw : !s32i loc(#loc147)
    %102 = cir.cmp(gt, %97, %101) : !s32i, !cir.bool loc(#loc494)
    cir.brcond %102 ^bb45, ^bb50 loc(#loc148)
  ^bb45:  // pred: ^bb44
    %103 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %104 = cir.abs %103 poison : !s32i loc(#loc150)
    %105 = cir.cast(integral, %104 : !s32i), !s64i loc(#loc150)
    %106 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc151)
    %107 = cir.const #cir.int<2147483647> : !s32i loc(#loc152)
    %108 = cir.cast(int_to_float, %107 : !s32i), !cir.double loc(#loc152)
    %109 = cir.call @sqrt(%108) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc151)
    %110 = cir.cast(float_to_int, %109 : !cir.double), !s64i loc(#loc151)
    %111 = cir.cmp(lt, %105, %110) : !s64i, !cir.bool loc(#loc495)
    cir.brcond %111 ^bb46, ^bb47 loc(#loc148)
  ^bb46:  // pred: ^bb45
    %112 = cir.const #true loc(#loc148)
    cir.br ^bb48(%112 : !cir.bool) loc(#loc148)
  ^bb47:  // pred: ^bb45
    %113 = cir.const #false loc(#loc148)
    cir.br ^bb48(%113 : !cir.bool) loc(#loc148)
  ^bb48(%114: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:28)):  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc148)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51(%114 : !cir.bool) loc(#loc148)
  ^bb50:  // pred: ^bb44
    %115 = cir.const #false loc(#loc148)
    cir.br ^bb51(%115 : !cir.bool) loc(#loc148)
  ^bb51(%116: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:28)):  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc148)
  ^bb52:  // pred: ^bb51
    cir.brcond %116 ^bb53, ^bb54 loc(#loc496)
  ^bb53:  // pred: ^bb52
    %117 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %118 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %119 = cir.binop(mul, %117, %118) nsw : !s32i loc(#loc157)
    cir.store %119, %5 : !s32i, !cir.ptr<!s32i> loc(#loc453)
    %120 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call @printIntLine(%120) : (!s32i) -> () loc(#loc159)
    cir.br ^bb55 loc(#loc155)
  ^bb54:  // pred: ^bb52
    %121 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc23)
    %122 = cir.cast(array_to_ptrdecay, %121 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc23)
    cir.call @printLine(%122) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    cir.br ^bb55 loc(#loc145)
  ^bb55:  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc145)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc133)
  ^bb57:  // 2 preds: ^bb42, ^bb56
    cir.br ^bb58 loc(#loc133)
  ^bb58:  // pred: ^bb57
    cir.return loc(#loc25)
  } loc(#loc447)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc498)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc163)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc499)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc165)
    cir.return loc(#loc162)
  } loc(#loc497)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc501)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc502)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc503)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc504)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc505)
    %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc506)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc507)
    %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc508)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc509)
    %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc510)
    %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc511)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc191)
    cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc512)
    cir.br ^bb1 loc(#loc513)
  ^bb1:  // pred: ^bb0
    %12 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc514)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc514)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc195)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc195)
    cir.brcond %15 ^bb2, ^bb36 loc(#loc515)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc516)
  ^bb3:  // pred: ^bb2
    %16 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc174)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc503)
    cir.br ^bb4 loc(#loc517)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc517)
  ^bb5:  // pred: ^bb28
    %18 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc204)
    cir.brcond %19 ^bb6, ^bb29 loc(#loc204)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc518)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<2> : !s32i loc(#loc207)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %22 = cir.const #cir.int<6> : !s32i loc(#loc209)
    %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc210)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    cir.br ^bb8 loc(#loc520)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc216)
    %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc216)
    %27 = cir.cmp(eq, %24, %26) : !s32i, !cir.bool loc(#loc521)
    cir.brcond %27 ^bb9, ^bb10 loc(#loc522)
  ^bb9:  // pred: ^bb8
    cir.br ^bb29 loc(#loc218)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc214)
  ^bb11:  // pred: ^bb10
    %28 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc523)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %30 = cir.const #cir.int<16> : !u64i loc(#loc524)
    cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc525)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc226)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc226)
    %33 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc526)
    %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc228)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc228)
    %36 = cir.call @inet_addr(%35) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc229)
    %37 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
    %38 = cir.get_member %37[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
    cir.store %36, %38 : !u32i, !cir.ptr<!u32i> loc(#loc527)
    %39 = cir.const #cir.int<27015> : !s32i loc(#loc232)
    %40 = cir.cast(integral, %39 : !s32i), !u16i loc(#loc232)
    %41 = cir.call @htons(%40) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc233)
    %42 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %41, %42 : !u16i, !cir.ptr<!u16i> loc(#loc528)
    cir.br ^bb12 loc(#loc529)
  ^bb12:  // pred: ^bb11
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    %44 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc530)
    %45 = cir.const #cir.int<16> : !u64i loc(#loc531)
    %46 = cir.cast(integral, %45 : !u64i), !u32i loc(#loc531)
    %47 = cir.call @connect(%43, %44, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc243)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %49 = cir.unary(minus, %48) nsw : !s32i, !s32i loc(#loc244)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc532)
    cir.brcond %50 ^bb13, ^bb14 loc(#loc533)
  ^bb13:  // pred: ^bb12
    cir.br ^bb29 loc(#loc246)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc237)
  ^bb15:  // pred: ^bb14
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %52 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc248)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc248)
    %54 = cir.const #cir.int<3> : !s32i loc(#loc249)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc249)
    %56 = cir.const #cir.int<4> : !u64i loc(#loc249)
    %57 = cir.binop(mul, %55, %56) : !u64i loc(#loc249)
    %58 = cir.const #cir.int<2> : !s32i loc(#loc249)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc249)
    %60 = cir.binop(add, %57, %59) : !u64i loc(#loc249)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc250)
    %63 = cir.binop(sub, %60, %62) : !u64i loc(#loc534)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc251)
    %65 = cir.call @recv(%51, %53, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc252)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc252)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    cir.br ^bb16 loc(#loc536)
  ^bb16:  // pred: ^bb15
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc258)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc258)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc537)
    cir.brcond %70 ^bb17, ^bb18 loc(#loc259)
  ^bb17:  // pred: ^bb16
    %71 = cir.const #true loc(#loc259)
    cir.br ^bb23(%71 : !cir.bool) loc(#loc259)
  ^bb18:  // pred: ^bb16
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc261)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc538)
    cir.brcond %74 ^bb19, ^bb20 loc(#loc259)
  ^bb19:  // pred: ^bb18
    %75 = cir.const #true loc(#loc259)
    cir.br ^bb21(%75 : !cir.bool) loc(#loc259)
  ^bb20:  // pred: ^bb18
    %76 = cir.const #false loc(#loc259)
    cir.br ^bb21(%76 : !cir.bool) loc(#loc259)
  ^bb21(%77: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc259)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%77 : !cir.bool) loc(#loc259)
  ^bb23(%78: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc259)
  ^bb24:  // pred: ^bb23
    cir.brcond %78 ^bb25, ^bb26 loc(#loc539)
  ^bb25:  // pred: ^bb24
    cir.br ^bb29 loc(#loc263)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc256)
  ^bb27:  // pred: ^bb26
    %79 = cir.const #cir.int<0> : !s32i loc(#loc264)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc264)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %82 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc266)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc266)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc540)
    %84 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc267)
    %85 = cir.call @atoi(%84) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc268)
    cir.store %85, %10 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    cir.br ^bb28 loc(#loc206)
  ^bb28:  // pred: ^bb27
    cir.br ^bb5 loc(#loc203)
  ^bb29:  // 4 preds: ^bb5, ^bb9, ^bb13, ^bb25
    cir.br ^bb30 loc(#loc203)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc542)
  ^bb31:  // pred: ^bb30
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %87 = cir.const #cir.int<1> : !s32i loc(#loc274)
    %88 = cir.unary(minus, %87) nsw : !s32i, !s32i loc(#loc274)
    %89 = cir.cmp(ne, %86, %88) : !s32i, !cir.bool loc(#loc543)
    cir.brcond %89 ^bb32, ^bb33 loc(#loc544)
  ^bb32:  // pred: ^bb31
    %90 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %91 = cir.call @close(%90) : (!s32i) -> !s32i loc(#loc277)
    cir.br ^bb33 loc(#loc272)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc272)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc201)
  ^bb35:  // pred: ^bb34
    cir.br ^bb70 loc(#loc198)
  ^bb36:  // pred: ^bb1
    cir.br ^bb37 loc(#loc545)
  ^bb37:  // pred: ^bb36
    %92 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %93 = cir.unary(minus, %92) nsw : !s32i, !s32i loc(#loc182)
    cir.store %93, %6 : !s32i, !cir.ptr<!s32i> loc(#loc507)
    cir.br ^bb38 loc(#loc546)
  ^bb38:  // pred: ^bb37
    cir.br ^bb40 loc(#loc546)
  ^bb39:  // pred: ^bb62
    %94 = cir.const #cir.int<0> : !s32i loc(#loc282)
    %95 = cir.cast(int_to_bool, %94 : !s32i), !cir.bool loc(#loc282)
    cir.brcond %95 ^bb40, ^bb63 loc(#loc282)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc547)
  ^bb41:  // pred: ^bb40
    %96 = cir.const #cir.int<2> : !s32i loc(#loc285)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %98 = cir.const #cir.int<6> : !s32i loc(#loc287)
    %99 = cir.call @socket(%96, %97, %98) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc288)
    cir.store %99, %6 : !s32i, !cir.ptr<!s32i> loc(#loc548)
    cir.br ^bb42 loc(#loc549)
  ^bb42:  // pred: ^bb41
    %100 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc294)
    %102 = cir.unary(minus, %101) nsw : !s32i, !s32i loc(#loc294)
    %103 = cir.cmp(eq, %100, %102) : !s32i, !cir.bool loc(#loc550)
    cir.brcond %103 ^bb43, ^bb44 loc(#loc551)
  ^bb43:  // pred: ^bb42
    cir.br ^bb63 loc(#loc296)
  ^bb44:  // pred: ^bb42
    cir.br ^bb45 loc(#loc292)
  ^bb45:  // pred: ^bb44
    %104 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc552)
    %105 = cir.const #cir.int<0> : !s32i loc(#loc299)
    %106 = cir.const #cir.int<16> : !u64i loc(#loc553)
    cir.libc.memset %106 bytes from %104 set to %105 : !cir.ptr<!void>, !s32i, !u64i loc(#loc554)
    %107 = cir.const #cir.int<2> : !s32i loc(#loc304)
    %108 = cir.cast(integral, %107 : !s32i), !u16i loc(#loc304)
    %109 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %108, %109 : !u16i, !cir.ptr<!u16i> loc(#loc555)
    %110 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc306)
    %111 = cir.cast(array_to_ptrdecay, %110 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc306)
    %112 = cir.call @inet_addr(%111) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc307)
    %113 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
    %114 = cir.get_member %113[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
    cir.store %112, %114 : !u32i, !cir.ptr<!u32i> loc(#loc556)
    %115 = cir.const #cir.int<27015> : !s32i loc(#loc310)
    %116 = cir.cast(integral, %115 : !s32i), !u16i loc(#loc310)
    %117 = cir.call @htons(%116) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc311)
    %118 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %117, %118 : !u16i, !cir.ptr<!u16i> loc(#loc557)
    cir.br ^bb46 loc(#loc558)
  ^bb46:  // pred: ^bb45
    %119 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %120 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc559)
    %121 = cir.const #cir.int<16> : !u64i loc(#loc560)
    %122 = cir.cast(integral, %121 : !u64i), !u32i loc(#loc560)
    %123 = cir.call @connect(%119, %120, %122) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc321)
    %124 = cir.const #cir.int<1> : !s32i loc(#loc322)
    %125 = cir.unary(minus, %124) nsw : !s32i, !s32i loc(#loc322)
    %126 = cir.cmp(eq, %123, %125) : !s32i, !cir.bool loc(#loc561)
    cir.brcond %126 ^bb47, ^bb48 loc(#loc562)
  ^bb47:  // pred: ^bb46
    cir.br ^bb63 loc(#loc324)
  ^bb48:  // pred: ^bb46
    cir.br ^bb49 loc(#loc315)
  ^bb49:  // pred: ^bb48
    %127 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc325)
    %128 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc326)
    %129 = cir.cast(bitcast, %128 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc326)
    %130 = cir.const #cir.int<3> : !s32i loc(#loc327)
    %131 = cir.cast(integral, %130 : !s32i), !u64i loc(#loc327)
    %132 = cir.const #cir.int<4> : !u64i loc(#loc327)
    %133 = cir.binop(mul, %131, %132) : !u64i loc(#loc327)
    %134 = cir.const #cir.int<2> : !s32i loc(#loc327)
    %135 = cir.cast(integral, %134 : !s32i), !u64i loc(#loc327)
    %136 = cir.binop(add, %133, %135) : !u64i loc(#loc327)
    %137 = cir.const #cir.int<1> : !s32i loc(#loc328)
    %138 = cir.cast(integral, %137 : !s32i), !u64i loc(#loc328)
    %139 = cir.binop(sub, %136, %138) : !u64i loc(#loc563)
    %140 = cir.const #cir.int<0> : !s32i loc(#loc329)
    %141 = cir.call @recv(%127, %129, %139, %140) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc330)
    %142 = cir.cast(integral, %141 : !s64i), !s32i loc(#loc330)
    cir.store %142, %4 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.br ^bb50 loc(#loc565)
  ^bb50:  // pred: ^bb49
    %143 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    %144 = cir.const #cir.int<1> : !s32i loc(#loc336)
    %145 = cir.unary(minus, %144) nsw : !s32i, !s32i loc(#loc336)
    %146 = cir.cmp(eq, %143, %145) : !s32i, !cir.bool loc(#loc566)
    cir.brcond %146 ^bb51, ^bb52 loc(#loc337)
  ^bb51:  // pred: ^bb50
    %147 = cir.const #true loc(#loc337)
    cir.br ^bb57(%147 : !cir.bool) loc(#loc337)
  ^bb52:  // pred: ^bb50
    %148 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc338)
    %149 = cir.const #cir.int<0> : !s32i loc(#loc339)
    %150 = cir.cmp(eq, %148, %149) : !s32i, !cir.bool loc(#loc567)
    cir.brcond %150 ^bb53, ^bb54 loc(#loc337)
  ^bb53:  // pred: ^bb52
    %151 = cir.const #true loc(#loc337)
    cir.br ^bb55(%151 : !cir.bool) loc(#loc337)
  ^bb54:  // pred: ^bb52
    %152 = cir.const #false loc(#loc337)
    cir.br ^bb55(%152 : !cir.bool) loc(#loc337)
  ^bb55(%153: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:48)):  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc337)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57(%153 : !cir.bool) loc(#loc337)
  ^bb57(%154: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:48)):  // 2 preds: ^bb51, ^bb56
    cir.br ^bb58 loc(#loc337)
  ^bb58:  // pred: ^bb57
    cir.brcond %154 ^bb59, ^bb60 loc(#loc568)
  ^bb59:  // pred: ^bb58
    cir.br ^bb63 loc(#loc341)
  ^bb60:  // pred: ^bb58
    cir.br ^bb61 loc(#loc334)
  ^bb61:  // pred: ^bb60
    %155 = cir.const #cir.int<0> : !s32i loc(#loc342)
    %156 = cir.cast(integral, %155 : !s32i), !s8i loc(#loc342)
    %157 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc343)
    %158 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc344)
    %159 = cir.ptr_stride(%158 : !cir.ptr<!s8i>, %157 : !s32i), !cir.ptr<!s8i> loc(#loc344)
    cir.store %156, %159 : !s8i, !cir.ptr<!s8i> loc(#loc569)
    %160 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc345)
    %161 = cir.call @atoi(%160) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc346)
    cir.store %161, %10 : !s32i, !cir.ptr<!s32i> loc(#loc570)
    cir.br ^bb62 loc(#loc284)
  ^bb62:  // pred: ^bb61
    cir.br ^bb39 loc(#loc281)
  ^bb63:  // 4 preds: ^bb39, ^bb43, ^bb47, ^bb59
    cir.br ^bb64 loc(#loc281)
  ^bb64:  // pred: ^bb63
    cir.br ^bb65 loc(#loc571)
  ^bb65:  // pred: ^bb64
    %162 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    %163 = cir.const #cir.int<1> : !s32i loc(#loc352)
    %164 = cir.unary(minus, %163) nsw : !s32i, !s32i loc(#loc352)
    %165 = cir.cmp(ne, %162, %164) : !s32i, !cir.bool loc(#loc572)
    cir.brcond %165 ^bb66, ^bb67 loc(#loc573)
  ^bb66:  // pred: ^bb65
    %166 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc354)
    %167 = cir.call @close(%166) : (!s32i) -> !s32i loc(#loc355)
    cir.br ^bb67 loc(#loc350)
  ^bb67:  // 2 preds: ^bb65, ^bb66
    cir.br ^bb68 loc(#loc350)
  ^bb68:  // pred: ^bb67
    cir.br ^bb69 loc(#loc279)
  ^bb69:  // pred: ^bb68
    cir.br ^bb70 loc(#loc194)
  ^bb70:  // 2 preds: ^bb35, ^bb69
    cir.br ^bb71 loc(#loc194)
  ^bb71:  // pred: ^bb70
    cir.br ^bb72 loc(#loc574)
  ^bb72:  // pred: ^bb71
    %168 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc575)
    %169 = cir.cast(bitcast, %168 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc575)
    %170 = cir.call %169() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc358)
    %171 = cir.cast(int_to_bool, %170 : !s32i), !cir.bool loc(#loc358)
    cir.brcond %171 ^bb73, ^bb87 loc(#loc576)
  ^bb73:  // pred: ^bb72
    cir.br ^bb74 loc(#loc577)
  ^bb74:  // pred: ^bb73
    %172 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc365)
    %173 = cir.const #cir.int<2147483647> : !s32i loc(#loc366)
    %174 = cir.unary(minus, %173) nsw : !s32i, !s32i loc(#loc366)
    %175 = cir.const #cir.int<1> : !s32i loc(#loc366)
    %176 = cir.binop(sub, %174, %175) nsw : !s32i loc(#loc366)
    %177 = cir.cmp(gt, %172, %176) : !s32i, !cir.bool loc(#loc578)
    cir.brcond %177 ^bb75, ^bb80 loc(#loc367)
  ^bb75:  // pred: ^bb74
    %178 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc368)
    %179 = cir.abs %178 poison : !s32i loc(#loc369)
    %180 = cir.cast(integral, %179 : !s32i), !s64i loc(#loc369)
    %181 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc370)
    %182 = cir.const #cir.int<2147483647> : !s32i loc(#loc371)
    %183 = cir.cast(int_to_float, %182 : !s32i), !cir.double loc(#loc371)
    %184 = cir.call @sqrt(%183) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc370)
    %185 = cir.cast(float_to_int, %184 : !cir.double), !s64i loc(#loc370)
    %186 = cir.cmp(lt, %180, %185) : !s64i, !cir.bool loc(#loc579)
    cir.brcond %186 ^bb76, ^bb77 loc(#loc367)
  ^bb76:  // pred: ^bb75
    %187 = cir.const #true loc(#loc367)
    cir.br ^bb78(%187 : !cir.bool) loc(#loc367)
  ^bb77:  // pred: ^bb75
    %188 = cir.const #false loc(#loc367)
    cir.br ^bb78(%188 : !cir.bool) loc(#loc367)
  ^bb78(%189: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:28)):  // 2 preds: ^bb76, ^bb77
    cir.br ^bb79 loc(#loc367)
  ^bb79:  // pred: ^bb78
    cir.br ^bb81(%189 : !cir.bool) loc(#loc367)
  ^bb80:  // pred: ^bb74
    %190 = cir.const #false loc(#loc367)
    cir.br ^bb81(%190 : !cir.bool) loc(#loc367)
  ^bb81(%191: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:28)):  // 2 preds: ^bb79, ^bb80
    cir.br ^bb82 loc(#loc367)
  ^bb82:  // pred: ^bb81
    cir.brcond %191 ^bb83, ^bb84 loc(#loc580)
  ^bb83:  // pred: ^bb82
    %192 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    %193 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %194 = cir.binop(mul, %192, %193) nsw : !s32i loc(#loc376)
    cir.store %194, %8 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    %195 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc377)
    cir.call @printIntLine(%195) : (!s32i) -> () loc(#loc378)
    cir.br ^bb85 loc(#loc374)
  ^bb84:  // pred: ^bb82
    %196 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc379)
    %197 = cir.cast(array_to_ptrdecay, %196 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc379)
    cir.call @printLine(%197) : (!cir.ptr<!s8i>) -> () loc(#loc380)
    cir.br ^bb85 loc(#loc364)
  ^bb85:  // 2 preds: ^bb83, ^bb84
    cir.br ^bb86 loc(#loc364)
  ^bb86:  // pred: ^bb85
    cir.br ^bb101 loc(#loc361)
  ^bb87:  // pred: ^bb72
    cir.br ^bb88 loc(#loc581)
  ^bb88:  // pred: ^bb87
    %198 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc383)
    %199 = cir.const #cir.int<2147483647> : !s32i loc(#loc384)
    %200 = cir.unary(minus, %199) nsw : !s32i, !s32i loc(#loc384)
    %201 = cir.const #cir.int<1> : !s32i loc(#loc384)
    %202 = cir.binop(sub, %200, %201) nsw : !s32i loc(#loc384)
    %203 = cir.cmp(gt, %198, %202) : !s32i, !cir.bool loc(#loc582)
    cir.brcond %203 ^bb89, ^bb94 loc(#loc385)
  ^bb89:  // pred: ^bb88
    %204 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    %205 = cir.abs %204 poison : !s32i loc(#loc387)
    %206 = cir.cast(integral, %205 : !s32i), !s64i loc(#loc387)
    %207 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc388)
    %208 = cir.const #cir.int<2147483647> : !s32i loc(#loc389)
    %209 = cir.cast(int_to_float, %208 : !s32i), !cir.double loc(#loc389)
    %210 = cir.call @sqrt(%209) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc388)
    %211 = cir.cast(float_to_int, %210 : !cir.double), !s64i loc(#loc388)
    %212 = cir.cmp(lt, %206, %211) : !s64i, !cir.bool loc(#loc583)
    cir.brcond %212 ^bb90, ^bb91 loc(#loc385)
  ^bb90:  // pred: ^bb89
    %213 = cir.const #true loc(#loc385)
    cir.br ^bb92(%213 : !cir.bool) loc(#loc385)
  ^bb91:  // pred: ^bb89
    %214 = cir.const #false loc(#loc385)
    cir.br ^bb92(%214 : !cir.bool) loc(#loc385)
  ^bb92(%215: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:28)):  // 2 preds: ^bb90, ^bb91
    cir.br ^bb93 loc(#loc385)
  ^bb93:  // pred: ^bb92
    cir.br ^bb95(%215 : !cir.bool) loc(#loc385)
  ^bb94:  // pred: ^bb88
    %216 = cir.const #false loc(#loc385)
    cir.br ^bb95(%216 : !cir.bool) loc(#loc385)
  ^bb95(%217: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:28)):  // 2 preds: ^bb93, ^bb94
    cir.br ^bb96 loc(#loc385)
  ^bb96:  // pred: ^bb95
    cir.brcond %217 ^bb97, ^bb98 loc(#loc584)
  ^bb97:  // pred: ^bb96
    %218 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc394)
    %219 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %220 = cir.binop(mul, %218, %219) nsw : !s32i loc(#loc394)
    cir.store %220, %9 : !s32i, !cir.ptr<!s32i> loc(#loc510)
    %221 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc395)
    cir.call @printIntLine(%221) : (!s32i) -> () loc(#loc396)
    cir.br ^bb99 loc(#loc392)
  ^bb98:  // pred: ^bb96
    %222 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc397)
    %223 = cir.cast(array_to_ptrdecay, %222 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc397)
    cir.call @printLine(%223) : (!cir.ptr<!s8i>) -> () loc(#loc398)
    cir.br ^bb99 loc(#loc382)
  ^bb99:  // 2 preds: ^bb97, ^bb98
    cir.br ^bb100 loc(#loc382)
  ^bb100:  // pred: ^bb99
    cir.br ^bb101 loc(#loc357)
  ^bb101:  // 2 preds: ^bb86, ^bb100
    cir.br ^bb102 loc(#loc357)
  ^bb102:  // pred: ^bb101
    cir.return loc(#loc168)
  } loc(#loc500)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc586)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc587)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc588)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc407)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc589)
    cir.br ^bb1 loc(#loc590)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc591)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc591)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc411)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc411)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc592)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc416)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc593)
    cir.br ^bb4 loc(#loc414)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc418)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    cir.br ^bb4 loc(#loc410)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc410)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc595)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc596)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc596)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc422)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc422)
    cir.brcond %13 ^bb7, ^bb10 loc(#loc597)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc598)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc429)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc402)
    %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc429)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc586)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc430)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc431)
    cir.br ^bb9 loc(#loc428)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc425)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc599)
  ^bb11:  // pred: ^bb10
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc434)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc404)
    %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc434)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc587)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc435)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc436)
    cir.br ^bb12 loc(#loc433)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc421)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc421)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc400)
  } loc(#loc585)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":79:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":133:23)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":46:1)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":136:1)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":58:13)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":58:17)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":59:13)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":59:32)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":60:13)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":60:36)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":61:13)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":61:45)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":119:13)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":119:33)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":128:13)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":128:33)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":48:5)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":48:9)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":50:12)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":50:5)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":51:5)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":114:5)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":51:8)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":51:33)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":52:5)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":109:5)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":111:5)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":53:9)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":108:9)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":62:13)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":97:21)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":97:20)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":63:13)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":96:13)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:40)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:49)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:62)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:33)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:17)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:73)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":73:17)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":76:17)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":73:21)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":73:38)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":74:17)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":75:21)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:24)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:25)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:34)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:37)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:51)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:17)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:52)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":78:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":78:17)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":79:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":79:17)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":79:63)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":80:42)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":80:36)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":80:17)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":80:50)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:17)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":84:17)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:29)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:62)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:63)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:72)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:86)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:21)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:92)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":82:17)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":83:21)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:35)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:50)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:63)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:81)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:84)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:30)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:17)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:85)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:17)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":91:17)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:21)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:35)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:51)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:65)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":89:17)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":90:21)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":93:43)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":93:29)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":93:17)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":95:29)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":95:24)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":95:17)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":95:40)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":98:13)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":101:13)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":98:17)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":98:34)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":99:13)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":100:30)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":100:17)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":113:16)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":113:9)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":115:5)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":135:5)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":115:8)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":115:33)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":116:5)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":122:5)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":124:5)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":117:9)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":121:9)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":119:26)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":120:26)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":120:13)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:9)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":134:9)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:13)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:20)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:35)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:31)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:49)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:62)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:69)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":127:9)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":130:9)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":132:9)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":128:26)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":129:26)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":129:13)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":133:13)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":332:1)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":336:1)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":334:5)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":334:13)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":335:5)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":335:13)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":145:1)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":294:1)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":157:13)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":157:17)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":158:13)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":158:32)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":159:13)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":159:36)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":160:13)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":160:45)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":216:13)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":216:17)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":217:13)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":217:32)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":218:13)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":218:36)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":219:13)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":219:45)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":273:13)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":273:33)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":286:13)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":286:33)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":147:5)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":147:9)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":149:12)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":149:5)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":150:5)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":267:5)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":150:8)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":150:33)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":151:5)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":208:5)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":210:5)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":152:9)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":207:9)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":161:13)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":196:21)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":196:20)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":162:13)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":195:13)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:40)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:49)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:62)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:33)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:17)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:73)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":172:17)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":175:17)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":172:21)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":172:38)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":173:17)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":174:21)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:24)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:25)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:34)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:37)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:51)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:17)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:52)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":177:38)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":177:17)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":178:53)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":178:43)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":178:17)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":178:63)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":179:42)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":179:36)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":179:17)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":179:50)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:17)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":183:17)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:29)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:62)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:63)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:72)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:86)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:21)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:92)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":181:17)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":182:21)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:35)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:50)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:63)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:81)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:84)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:30)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:17)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:85)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:17)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":190:17)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:21)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:35)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:51)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:65)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":188:17)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":189:21)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":192:43)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":192:29)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":192:17)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":194:29)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":194:24)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":194:17)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":194:40)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":197:13)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":200:13)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":197:17)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":197:34)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":198:13)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":199:30)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":199:17)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":211:9)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":266:9)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":220:13)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":255:21)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":255:20)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":221:13)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":254:13)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:40)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:49)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:62)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:33)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:17)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:73)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":231:17)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":234:17)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":231:21)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":231:38)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":232:17)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":233:21)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:24)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:25)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:34)
#loc300 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:37)
#loc301 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:51)
#loc302 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:17)
#loc303 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:52)
#loc304 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":236:38)
#loc305 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":236:17)
#loc306 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":237:53)
#loc307 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":237:43)
#loc308 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":237:17)
#loc309 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":237:63)
#loc310 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":238:42)
#loc311 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":238:36)
#loc312 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":238:17)
#loc313 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":238:50)
#loc314 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:17)
#loc315 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":242:17)
#loc316 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:29)
#loc317 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:62)
#loc318 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:63)
#loc319 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:72)
#loc320 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:86)
#loc321 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:21)
#loc322 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:92)
#loc323 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":240:17)
#loc324 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":241:21)
#loc325 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:35)
#loc326 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:50)
#loc327 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:63)
#loc328 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:81)
#loc329 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:84)
#loc330 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:30)
#loc331 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:17)
#loc332 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:85)
#loc333 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:17)
#loc334 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":249:17)
#loc335 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:21)
#loc336 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:35)
#loc338 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:51)
#loc339 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:65)
#loc340 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":247:17)
#loc341 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":248:21)
#loc342 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":251:43)
#loc343 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":251:29)
#loc344 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":251:17)
#loc345 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":253:29)
#loc346 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":253:24)
#loc347 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":253:17)
#loc348 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":253:40)
#loc349 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":256:13)
#loc350 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":259:13)
#loc351 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":256:17)
#loc352 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":256:34)
#loc353 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":257:13)
#loc354 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":258:30)
#loc355 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":258:17)
#loc356 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":268:5)
#loc357 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":293:5)
#loc358 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":268:8)
#loc359 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":268:33)
#loc360 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":269:5)
#loc361 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":280:5)
#loc362 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":282:5)
#loc363 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:9)
#loc364 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":279:9)
#loc365 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:13)
#loc366 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:20)
#loc368 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:35)
#loc369 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:31)
#loc370 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:49)
#loc371 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:62)
#loc372 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:69)
#loc373 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":272:9)
#loc374 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":275:9)
#loc375 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":277:9)
#loc376 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":273:26)
#loc377 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":274:26)
#loc378 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":274:13)
#loc379 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":278:23)
#loc380 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":278:13)
#loc381 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:9)
#loc382 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":292:9)
#loc383 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:13)
#loc384 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:20)
#loc386 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:35)
#loc387 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:31)
#loc388 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:49)
#loc389 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:62)
#loc390 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:69)
#loc391 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":285:9)
#loc392 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":288:9)
#loc393 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":290:9)
#loc394 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":286:26)
#loc395 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":287:26)
#loc396 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":287:13)
#loc397 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":291:23)
#loc398 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":291:13)
#loc399 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":299:1)
#loc400 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":330:1)
#loc401 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":318:13)
#loc402 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":318:33)
#loc403 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":326:13)
#loc404 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":326:33)
#loc405 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":301:5)
#loc406 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":301:9)
#loc407 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":303:12)
#loc408 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":303:5)
#loc409 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":304:5)
#loc410 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":313:5)
#loc411 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":304:8)
#loc412 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":304:33)
#loc413 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":305:5)
#loc414 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":308:5)
#loc415 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":310:5)
#loc416 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":307:16)
#loc417 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":307:9)
#loc418 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":312:16)
#loc419 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":312:9)
#loc420 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":314:5)
#loc421 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":329:5)
#loc422 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":314:8)
#loc423 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":314:33)
#loc424 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":315:5)
#loc425 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":321:5)
#loc426 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":323:5)
#loc427 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":316:9)
#loc428 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":320:9)
#loc429 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":318:26)
#loc430 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":319:26)
#loc431 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":319:13)
#loc432 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":324:9)
#loc433 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":328:9)
#loc434 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":326:26)
#loc435 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":327:26)
#loc436 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":327:13)
#loc437 = loc(fused[#loc1, #loc2])
#loc438 = loc(fused[#loc3, #loc4])
#loc439 = loc(fused[#loc5, #loc6])
#loc440 = loc(fused[#loc8, #loc9])
#loc441 = loc(fused[#loc10, #loc11])
#loc442 = loc(fused[#loc12, #loc13])
#loc443 = loc(fused[#loc14, #loc15])
#loc444 = loc(fused[#loc16, #loc17])
#loc445 = loc(fused[#loc18, #loc19])
#loc446 = loc(fused[#loc21, #loc22])
#loc447 = loc(fused[#loc24, #loc25])
#loc448 = loc(fused[#loc26, #loc27])
#loc449 = loc(fused[#loc28, #loc29])
#loc450 = loc(fused[#loc30, #loc31])
#loc451 = loc(fused[#loc32, #loc33])
#loc452 = loc(fused[#loc34, #loc35])
#loc453 = loc(fused[#loc36, #loc37])
#loc454 = loc(fused[#loc38, #loc39])
#loc455 = loc(fused[#loc41, #loc40])
#loc456 = loc(fused[#loc42, #loc43])
#loc457 = loc(fused[#loc44, #loc45])
#loc458 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc459 = loc(fused[#loc49, #loc50])
#loc460 = loc(fused[#loc51, #loc52])
#loc461 = loc(fused[#loc54, #loc55])
#loc462 = loc(fused[#loc60, #loc61])
#loc463 = loc(fused[#loc62, #loc63])
#loc464 = loc(fused[#loc64, #loc65])
#loc465 = loc(fused[#loc66, #loc63])
#loc466 = loc(fused[#loc68, #loc69])
#loc467 = loc(fused[#loc71, #loc72])
#loc468 = loc(fused[#loc73, #loc74])
#loc469 = loc(fused[#loc77, #loc75])
#loc470 = loc(fused[#loc81, #loc82])
#loc471 = loc(fused[#loc86, #loc87])
#loc472 = loc(fused[#loc88, #loc89])
#loc473 = loc(fused[#loc91, #loc92])
#loc474 = loc(fused[#loc93, #loc94])
#loc475 = loc(fused[#loc95, #loc96])
#loc476 = loc(fused[#loc97, #loc89])
#loc477 = loc(fused[#loc101, #loc102])
#loc478 = loc(fused[#loc105, #loc106])
#loc479 = loc(fused[#loc107, #loc108])
#loc480 = loc(fused[#loc109, #loc110])
#loc481 = loc(fused[#loc112, #loc113])
#loc482 = loc(fused[#loc114, #loc108])
#loc483 = loc(fused[#loc118, #loc116])
#loc484 = loc(fused[#loc121, #loc122])
#loc485 = loc(fused[#loc123, #loc124])
#loc486 = loc(fused[#loc125, #loc126])
#loc487 = loc(fused[#loc127, #loc124])
#loc488 = loc(fused[#loc131, #loc130])
#loc489 = loc(fused[#loc132, #loc133])
#loc490 = loc(fused[#loc134, #loc135])
#loc491 = loc(fused[#loc136, #loc137, #loc138, #loc133])
#loc492 = loc(fused[#loc139, #loc140])
#loc493 = loc(fused[#loc144, #loc145])
#loc494 = loc(fused[#loc146, #loc147])
#loc495 = loc(fused[#loc150, #loc153])
#loc496 = loc(fused[#loc154, #loc155, #loc156, #loc145])
#loc497 = loc(fused[#loc161, #loc162])
#loc498 = loc(fused[#loc163, #loc164])
#loc499 = loc(fused[#loc165, #loc166])
#loc500 = loc(fused[#loc167, #loc168])
#loc501 = loc(fused[#loc169, #loc170])
#loc502 = loc(fused[#loc171, #loc172])
#loc503 = loc(fused[#loc173, #loc174])
#loc504 = loc(fused[#loc175, #loc176])
#loc505 = loc(fused[#loc177, #loc178])
#loc506 = loc(fused[#loc179, #loc180])
#loc507 = loc(fused[#loc181, #loc182])
#loc508 = loc(fused[#loc183, #loc184])
#loc509 = loc(fused[#loc185, #loc186])
#loc510 = loc(fused[#loc187, #loc188])
#loc511 = loc(fused[#loc189, #loc190])
#loc512 = loc(fused[#loc192, #loc191])
#loc513 = loc(fused[#loc193, #loc194])
#loc514 = loc(fused[#loc195, #loc196])
#loc515 = loc(fused[#loc197, #loc198, #loc199, #loc194])
#loc516 = loc(fused[#loc200, #loc201])
#loc517 = loc(fused[#loc202, #loc203])
#loc518 = loc(fused[#loc205, #loc206])
#loc519 = loc(fused[#loc211, #loc212])
#loc520 = loc(fused[#loc213, #loc214])
#loc521 = loc(fused[#loc215, #loc216])
#loc522 = loc(fused[#loc217, #loc214])
#loc523 = loc(fused[#loc219, #loc220])
#loc524 = loc(fused[#loc222, #loc223])
#loc525 = loc(fused[#loc224, #loc225])
#loc526 = loc(fused[#loc227, #loc226])
#loc527 = loc(fused[#loc230, #loc231])
#loc528 = loc(fused[#loc234, #loc235])
#loc529 = loc(fused[#loc236, #loc237])
#loc530 = loc(fused[#loc239, #loc240])
#loc531 = loc(fused[#loc241, #loc242])
#loc532 = loc(fused[#loc243, #loc244])
#loc533 = loc(fused[#loc245, #loc237])
#loc534 = loc(fused[#loc249, #loc250])
#loc535 = loc(fused[#loc253, #loc254])
#loc536 = loc(fused[#loc255, #loc256])
#loc537 = loc(fused[#loc257, #loc258])
#loc538 = loc(fused[#loc260, #loc261])
#loc539 = loc(fused[#loc262, #loc256])
#loc540 = loc(fused[#loc266, #loc264])
#loc541 = loc(fused[#loc269, #loc270])
#loc542 = loc(fused[#loc271, #loc272])
#loc543 = loc(fused[#loc273, #loc274])
#loc544 = loc(fused[#loc275, #loc272])
#loc545 = loc(fused[#loc278, #loc279])
#loc546 = loc(fused[#loc280, #loc281])
#loc547 = loc(fused[#loc283, #loc284])
#loc548 = loc(fused[#loc289, #loc290])
#loc549 = loc(fused[#loc291, #loc292])
#loc550 = loc(fused[#loc293, #loc294])
#loc551 = loc(fused[#loc295, #loc292])
#loc552 = loc(fused[#loc297, #loc298])
#loc553 = loc(fused[#loc300, #loc301])
#loc554 = loc(fused[#loc302, #loc303])
#loc555 = loc(fused[#loc305, #loc304])
#loc556 = loc(fused[#loc308, #loc309])
#loc557 = loc(fused[#loc312, #loc313])
#loc558 = loc(fused[#loc314, #loc315])
#loc559 = loc(fused[#loc317, #loc318])
#loc560 = loc(fused[#loc319, #loc320])
#loc561 = loc(fused[#loc321, #loc322])
#loc562 = loc(fused[#loc323, #loc315])
#loc563 = loc(fused[#loc327, #loc328])
#loc564 = loc(fused[#loc331, #loc332])
#loc565 = loc(fused[#loc333, #loc334])
#loc566 = loc(fused[#loc335, #loc336])
#loc567 = loc(fused[#loc338, #loc339])
#loc568 = loc(fused[#loc340, #loc334])
#loc569 = loc(fused[#loc344, #loc342])
#loc570 = loc(fused[#loc347, #loc348])
#loc571 = loc(fused[#loc349, #loc350])
#loc572 = loc(fused[#loc351, #loc352])
#loc573 = loc(fused[#loc353, #loc350])
#loc574 = loc(fused[#loc356, #loc357])
#loc575 = loc(fused[#loc358, #loc359])
#loc576 = loc(fused[#loc360, #loc361, #loc362, #loc357])
#loc577 = loc(fused[#loc363, #loc364])
#loc578 = loc(fused[#loc365, #loc366])
#loc579 = loc(fused[#loc369, #loc372])
#loc580 = loc(fused[#loc373, #loc374, #loc375, #loc364])
#loc581 = loc(fused[#loc381, #loc382])
#loc582 = loc(fused[#loc383, #loc384])
#loc583 = loc(fused[#loc387, #loc390])
#loc584 = loc(fused[#loc391, #loc392, #loc393, #loc382])
#loc585 = loc(fused[#loc399, #loc400])
#loc586 = loc(fused[#loc401, #loc402])
#loc587 = loc(fused[#loc403, #loc404])
#loc588 = loc(fused[#loc405, #loc406])
#loc589 = loc(fused[#loc408, #loc407])
#loc590 = loc(fused[#loc409, #loc410])
#loc591 = loc(fused[#loc411, #loc412])
#loc592 = loc(fused[#loc413, #loc414, #loc415, #loc410])
#loc593 = loc(fused[#loc417, #loc416])
#loc594 = loc(fused[#loc419, #loc418])
#loc595 = loc(fused[#loc420, #loc421])
#loc596 = loc(fused[#loc422, #loc423])
#loc597 = loc(fused[#loc424, #loc425, #loc426, #loc421])
#loc598 = loc(fused[#loc427, #loc428])
#loc599 = loc(fused[#loc432, #loc433])
