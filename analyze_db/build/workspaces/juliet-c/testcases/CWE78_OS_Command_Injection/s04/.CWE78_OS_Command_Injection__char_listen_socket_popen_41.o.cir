!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc12 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":59:70)
#loc13 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":59:77)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":163:74)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":163:81)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc252 = loc(fused[#loc12, #loc13])
#loc331 = loc(fused[#loc211, #loc212])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc247)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_41_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc248)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc250)
  cir.func @CWE78_OS_Command_Injection__char_listen_socket_popen_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc252)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc254)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
      %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc20)
      cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc255)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc257)
        cir.if %9 {
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
          %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
        } loc(#loc258)
      } loc(#loc256)
    } loc(#loc253)
    cir.return loc(#loc11)
  } loc(#loc251)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc259)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc260)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc261)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc262)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc263)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc264)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc265)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc266)
  cir.func private @close(!s32i) -> !s32i loc(#loc267)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc269)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc248)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_41_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc248)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc248)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc272)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc273)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc274)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc275)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc276)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc277)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc63)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc63)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc275)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc65)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc276)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc68)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc68)
      cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc277)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc74)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %20 = cir.const #cir.int<6> : !s32i loc(#loc76)
            %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc77)
            cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc280)
            cir.scope {
              %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %76 = cir.const #cir.int<1> : !s32i loc(#loc83)
              %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc83)
              %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc282)
              cir.if %78 {
                cir.break loc(#loc85)
              } loc(#loc283)
            } loc(#loc281)
            %22 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc284)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc88)
            %24 = cir.const #cir.int<16> : !u64i loc(#loc285)
            cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc286)
            %25 = cir.const #cir.int<2> : !s32i loc(#loc93)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc93)
            %27 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc287)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc96)
            %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc96)
            %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc97)
            %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc98)
            cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc288)
            %32 = cir.const #cir.int<27015> : !s32i loc(#loc100)
            %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc100)
            %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc101)
            %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc289)
            cir.scope {
              %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc107)
              %76 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc291)
              %77 = cir.const #cir.int<16> : !u64i loc(#loc292)
              %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc292)
              %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc112)
              %80 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc113)
              %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc293)
              cir.if %82 {
                cir.break loc(#loc115)
              } loc(#loc294)
            } loc(#loc290)
            cir.scope {
              %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %76 = cir.const #cir.int<5> : !s32i loc(#loc119)
              %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc120)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc121)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc296)
              cir.if %80 {
                cir.break loc(#loc123)
              } loc(#loc297)
            } loc(#loc295)
            %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc125)
            %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc126)
            %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc127)
            cir.store %39, %9 : !s32i, !cir.ptr<!s32i> loc(#loc298)
            cir.scope {
              %75 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              %76 = cir.const #cir.int<1> : !s32i loc(#loc133)
              %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc133)
              %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc300)
              cir.if %78 {
                cir.break loc(#loc135)
              } loc(#loc301)
            } loc(#loc299)
            %40 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc136)
            %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
            %42 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc138)
            %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc139)
            %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc302)
            %45 = cir.const #cir.int<1> : !u64i loc(#loc303)
            %46 = cir.const #cir.int<100> : !s32i loc(#loc144)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc144)
            %48 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc145)
            %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc304)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc146)
            %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc305)
            %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc306)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc148)
            %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc149)
            %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc149)
            cir.store %56, %5 : !s32i, !cir.ptr<!s32i> loc(#loc307)
            cir.scope {
              %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              %76 = cir.const #cir.int<1> : !s32i loc(#loc155)
              %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc155)
              %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc309)
              %79 = cir.ternary(%78, true {
                %80 = cir.const #true loc(#loc156)
                cir.yield %80 : !cir.bool loc(#loc156)
              }, false {
                %80 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                %81 = cir.const #cir.int<0> : !s32i loc(#loc158)
                %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc310)
                %83 = cir.ternary(%82, true {
                  %84 = cir.const #true loc(#loc156)
                  cir.yield %84 : !cir.bool loc(#loc156)
                }, false {
                  %84 = cir.const #false loc(#loc156)
                  cir.yield %84 : !cir.bool loc(#loc156)
                }) : (!cir.bool) -> !cir.bool loc(#loc156)
                cir.yield %83 : !cir.bool loc(#loc156)
              }) : (!cir.bool) -> !cir.bool loc(#loc156)
              cir.if %79 {
                cir.break loc(#loc160)
              } loc(#loc311)
            } loc(#loc308)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc161)
            %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc161)
            %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
            %60 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc163)
            %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc164)
            %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc164)
            %63 = cir.const #cir.int<1> : !u64i loc(#loc312)
            %64 = cir.binop(div, %62, %63) : !u64i loc(#loc313)
            %65 = cir.binop(add, %60, %64) : !u64i loc(#loc314)
            %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc167)
            cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc315)
            %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc168)
            %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
            %69 = cir.const #cir.int<13> : !s32i loc(#loc170)
            %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc168)
            cir.store %70, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
            cir.scope {
              %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
              %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc175)
              cir.if %76 {
                %77 = cir.const #cir.int<0> : !s32i loc(#loc177)
                %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc177)
                %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc319)
              } loc(#loc318)
            } loc(#loc317)
            %71 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc180)
            %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
            %73 = cir.const #cir.int<10> : !s32i loc(#loc182)
            %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc180)
            cir.store %74, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc320)
            cir.scope {
              %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
              %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc187)
              cir.if %76 {
                %77 = cir.const #cir.int<0> : !s32i loc(#loc189)
                %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc189)
                %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc323)
              } loc(#loc322)
            } loc(#loc321)
          } loc(#loc279)
          cir.yield loc(#loc71)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc192)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc192)
          cir.condition(%19) loc(#loc192)
        } loc(#loc278)
      } loc(#loc278)
      cir.scope {
        %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc195)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc196)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc196)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc325)
        cir.if %21 {
          %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc198)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc199)
        } loc(#loc326)
      } loc(#loc324)
      cir.scope {
        %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc202)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc203)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc203)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc328)
        cir.if %21 {
          %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc205)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc206)
        } loc(#loc329)
      } loc(#loc327)
    } loc(#loc271)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_popen_41_badSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    cir.return loc(#loc49)
  } loc(#loc268)
  cir.func @CWE78_OS_Command_Injection__char_listen_socket_popen_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc211, #loc212])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc331)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc333)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
      %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc219)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc219)
      %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc220)
      cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc334)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc225)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc226)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc226)
        %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc336)
        cir.if %9 {
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc228)
          %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc229)
        } loc(#loc337)
      } loc(#loc335)
    } loc(#loc332)
    cir.return loc(#loc210)
  } loc(#loc330)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc339)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc232)
    cir.return loc(#loc231)
  } loc(#loc338)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc340)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc236)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc342)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc247)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc247)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc247)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc241)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc343)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc243)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc236)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc236)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc243)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_popen_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc246)
    cir.return loc(#loc238)
  } loc(#loc341)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":180:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":180:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":75:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":75:26)
#loc5 = loc("/usr/include/stdio.h":903:1)
#loc6 = loc("/usr/include/stdio.h":904:3)
#loc7 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":64:28)
#loc8 = loc("/usr/include/stdio.h":897:1)
#loc9 = loc("/usr/include/stdio.h":897:36)
#loc10 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":59:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":70:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":60:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":61:5)
#loc16 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":69:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":62:9)
#loc18 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":62:15)
#loc19 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":64:22)
#loc20 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":64:16)
#loc21 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":64:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":64:31)
#loc23 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":65:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":68:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":65:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":65:21)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":66:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":67:20)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":67:13)
#loc30 = loc("/usr/include/string.h":407:1)
#loc31 = loc("/usr/include/string.h":408:33)
#loc32 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc33 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc34 = loc("/usr/include/netinet/in.h":402:1)
#loc35 = loc("/usr/include/netinet/in.h":403:40)
#loc36 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc37 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc38 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc39 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc40 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc41 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc42 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc43 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc44 = loc("/usr/include/string.h":246:1)
#loc45 = loc("/usr/include/string.h":247:33)
#loc46 = loc("/usr/include/unistd.h":358:1)
#loc47 = loc("/usr/include/unistd.h":358:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":72:1)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":157:1)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":74:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":74:12)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":76:12)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":76:5)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":77:5)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":155:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":82:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":82:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":83:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":83:28)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":84:9)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":84:15)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":85:9)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":85:31)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":86:9)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":86:31)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":87:9)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":87:37)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":87:26)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":87:33)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":88:9)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":140:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":89:9)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":139:9)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":98:35)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":98:44)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":98:57)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":98:28)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":98:13)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":98:68)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":99:13)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":102:13)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":99:17)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":99:33)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":100:13)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":101:17)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":103:20)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":103:21)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":103:30)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":103:33)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":103:47)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":103:13)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":103:48)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":104:34)
#loc94 = loc("/usr/include/netinet/in.h":249:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":104:13)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":105:39)
#loc97 = loc("/usr/include/netinet/in.h":251:20)
#loc98 = loc("/usr/include/netinet/in.h":33:15)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":105:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":106:38)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":106:32)
#loc102 = loc("/usr/include/netinet/in.h":250:15)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":106:13)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":106:46)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":107:13)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":110:13)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":107:22)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":107:54)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":107:55)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":107:64)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":107:78)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":107:17)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":107:84)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":108:13)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":109:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":111:13)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":114:13)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":111:24)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":111:38)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":111:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":111:57)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":112:13)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":113:17)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":115:35)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":115:49)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":115:55)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":115:28)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":115:13)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":115:59)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":116:13)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":119:13)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":116:17)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":116:33)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":117:13)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":118:17)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:31)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:54)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:61)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:59)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:45)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:68)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:71)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:82)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:87)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:93)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:103)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:104)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:107)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:26)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:13)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":121:108)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":122:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":125:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":122:17)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":122:31)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":122:44)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":122:47)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":122:61)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":123:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":124:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":127:57)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":127:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":127:18)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":127:28)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":127:41)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":127:52)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":127:53)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":129:23)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":129:30)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":129:36)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":129:13)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":129:40)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":130:13)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":133:13)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":130:17)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":131:13)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":132:28)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":132:18)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":132:17)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":134:23)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":134:30)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":134:36)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":134:13)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":134:40)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":135:13)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":138:13)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":135:17)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":136:13)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":137:28)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":137:18)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":137:17)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":140:16)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":141:9)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":144:9)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":141:13)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":141:29)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":142:9)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":143:26)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":143:13)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":145:9)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":148:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":145:13)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":145:29)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":146:9)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":147:26)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":147:13)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":156:69)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":156:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":163:1)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":174:1)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":164:1)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":165:5)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":173:5)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":166:9)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":166:15)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":168:22)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":168:28)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":168:16)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":168:9)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":168:31)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":169:9)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":172:9)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":169:13)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":169:21)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":170:9)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":171:20)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":171:13)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":187:1)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":190:1)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":189:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":189:13)
#loc234 = loc("/usr/include/string.h":149:1)
#loc235 = loc("/usr/include/string.h":150:14)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":183:18)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":177:1)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":185:1)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":179:5)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":179:12)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":181:12)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":181:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":183:5)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":183:12)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":184:73)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_41.c":184:5)
#loc247 = loc(fused[#loc1, #loc2])
#loc248 = loc(fused[#loc3, #loc4])
#loc249 = loc(fused[#loc5, #loc6])
#loc250 = loc(fused[#loc8, #loc9])
#loc251 = loc(fused[#loc10, #loc11])
#loc253 = loc(fused[#loc15, #loc16])
#loc254 = loc(fused[#loc17, #loc18])
#loc255 = loc(fused[#loc21, #loc22])
#loc256 = loc(fused[#loc23, #loc24])
#loc257 = loc(fused[#loc25, #loc26])
#loc258 = loc(fused[#loc27, #loc24])
#loc259 = loc(fused[#loc30, #loc31])
#loc260 = loc(fused[#loc32, #loc33])
#loc261 = loc(fused[#loc34, #loc35])
#loc262 = loc(fused[#loc36, #loc37])
#loc263 = loc(fused[#loc38, #loc39])
#loc264 = loc(fused[#loc40, #loc41])
#loc265 = loc(fused[#loc42, #loc43])
#loc266 = loc(fused[#loc44, #loc45])
#loc267 = loc(fused[#loc46, #loc47])
#loc268 = loc(fused[#loc48, #loc49])
#loc269 = loc(fused[#loc50, #loc51])
#loc270 = loc(fused[#loc53, #loc52])
#loc271 = loc(fused[#loc54, #loc55])
#loc272 = loc(fused[#loc56, #loc57])
#loc273 = loc(fused[#loc58, #loc59])
#loc274 = loc(fused[#loc60, #loc61])
#loc275 = loc(fused[#loc62, #loc63])
#loc276 = loc(fused[#loc64, #loc65])
#loc277 = loc(fused[#loc66, #loc67])
#loc278 = loc(fused[#loc70, #loc71])
#loc279 = loc(fused[#loc72, #loc73])
#loc280 = loc(fused[#loc78, #loc79])
#loc281 = loc(fused[#loc80, #loc81])
#loc282 = loc(fused[#loc82, #loc83])
#loc283 = loc(fused[#loc84, #loc81])
#loc284 = loc(fused[#loc86, #loc87])
#loc285 = loc(fused[#loc89, #loc90])
#loc286 = loc(fused[#loc91, #loc92])
#loc287 = loc(fused[#loc95, #loc93])
#loc288 = loc(fused[#loc99, #loc96])
#loc289 = loc(fused[#loc103, #loc104])
#loc290 = loc(fused[#loc105, #loc106])
#loc291 = loc(fused[#loc108, #loc109])
#loc292 = loc(fused[#loc110, #loc111])
#loc293 = loc(fused[#loc112, #loc113])
#loc294 = loc(fused[#loc114, #loc106])
#loc295 = loc(fused[#loc116, #loc117])
#loc296 = loc(fused[#loc120, #loc121])
#loc297 = loc(fused[#loc122, #loc117])
#loc298 = loc(fused[#loc128, #loc129])
#loc299 = loc(fused[#loc130, #loc131])
#loc300 = loc(fused[#loc132, #loc133])
#loc301 = loc(fused[#loc134, #loc131])
#loc302 = loc(fused[#loc140, #loc141])
#loc303 = loc(fused[#loc142, #loc143])
#loc304 = loc(fused[#loc144, #loc145])
#loc305 = loc(fused[#loc144, #loc146])
#loc306 = loc(fused[#loc142, #loc147])
#loc307 = loc(fused[#loc150, #loc151])
#loc308 = loc(fused[#loc152, #loc153])
#loc309 = loc(fused[#loc154, #loc155])
#loc310 = loc(fused[#loc157, #loc158])
#loc311 = loc(fused[#loc159, #loc153])
#loc312 = loc(fused[#loc165, #loc166])
#loc313 = loc(fused[#loc164, #loc166])
#loc314 = loc(fused[#loc163, #loc166])
#loc315 = loc(fused[#loc162, #loc161])
#loc316 = loc(fused[#loc171, #loc172])
#loc317 = loc(fused[#loc173, #loc174])
#loc318 = loc(fused[#loc176, #loc174])
#loc319 = loc(fused[#loc179, #loc177])
#loc320 = loc(fused[#loc183, #loc184])
#loc321 = loc(fused[#loc185, #loc186])
#loc322 = loc(fused[#loc188, #loc186])
#loc323 = loc(fused[#loc191, #loc189])
#loc324 = loc(fused[#loc193, #loc194])
#loc325 = loc(fused[#loc195, #loc196])
#loc326 = loc(fused[#loc197, #loc194])
#loc327 = loc(fused[#loc200, #loc201])
#loc328 = loc(fused[#loc202, #loc203])
#loc329 = loc(fused[#loc204, #loc201])
#loc330 = loc(fused[#loc209, #loc210])
#loc332 = loc(fused[#loc214, #loc215])
#loc333 = loc(fused[#loc216, #loc217])
#loc334 = loc(fused[#loc221, #loc222])
#loc335 = loc(fused[#loc223, #loc224])
#loc336 = loc(fused[#loc225, #loc226])
#loc337 = loc(fused[#loc227, #loc224])
#loc338 = loc(fused[#loc230, #loc231])
#loc339 = loc(fused[#loc232, #loc233])
#loc340 = loc(fused[#loc234, #loc235])
#loc341 = loc(fused[#loc237, #loc238])
#loc342 = loc(fused[#loc239, #loc240])
#loc343 = loc(fused[#loc242, #loc241])
