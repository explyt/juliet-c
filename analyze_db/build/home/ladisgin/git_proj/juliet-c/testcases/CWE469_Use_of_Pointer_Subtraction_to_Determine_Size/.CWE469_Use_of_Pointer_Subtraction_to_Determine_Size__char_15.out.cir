!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc68 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":127:10)
#loc69 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":127:14)
#loc70 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":127:20)
#loc71 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":127:32)
#loc181 = loc(fused[#loc68, #loc69])
#loc182 = loc(fused[#loc70, #loc71])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good2.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc156)
  cir.global "private" constant cir_private @__const.good1.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc157)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string2 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc158)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc159)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc160)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc161)
  cir.func private @printUnsignedLine(!u32i) loc(#loc162)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc22)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc159)
            %2 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string2"] {alignment = 1 : i64} loc(#loc158)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc167)
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc168)
            %5 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc159)
            cir.copy %5 to %1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc159)
            %6 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string2 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc158)
            cir.copy %6 to %2 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc158)
            %7 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc30)
            %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc31)
            %9 = cir.const #cir.int<47> : !s32i loc(#loc32)
            %10 = cir.call @strchr(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
            cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
            cir.scope {
              %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
              %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc171)
              cir.if %20 {
                %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
                %22 = cir.const #cir.int<1> : !s32i loc(#loc41)
                cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
              } loc(#loc172)
            } loc(#loc170)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc43)
            %13 = cir.ptr_diff(%11, %12) : !cir.ptr<!s8i> -> !s64i loc(#loc173)
            %14 = cir.cast(integral, %13 : !s64i), !u64i loc(#loc173)
            cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc174)
            %15 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %16 = cir.cast(integral, %15 : !u64i), !u32i loc(#loc46)
            cir.call @printUnsignedLine(%16) : (!u32i) -> () loc(#loc47)
          } loc(#loc166)
          cir.break loc(#loc48)
        } loc(#loc23)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc17)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc17)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc50)
          cir.break loc(#loc51)
        } loc(#loc49)
        cir.yield loc(#loc20)
      } loc(#loc20)
    } loc(#loc165)
    cir.return loc(#loc19)
  } loc(#loc164)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc178)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc75)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.return %17 : !s32i loc(#loc185)
  } loc(#loc180)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc90)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc92)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc92)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc93)
          cir.break loc(#loc94)
        } loc(#loc91)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc157)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc189)
            %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc190)
            %4 = cir.get_global @__const.good1.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc157)
            cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc157)
            %5 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc102)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc103)
            %7 = cir.const #cir.int<47> : !s32i loc(#loc104)
            %8 = cir.call @strchr(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
            cir.store %8, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
            cir.scope {
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc193)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc113)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
              } loc(#loc194)
            } loc(#loc192)
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
            %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc115)
            %11 = cir.ptr_diff(%9, %10) : !cir.ptr<!s8i> -> !s64i loc(#loc195)
            %12 = cir.cast(integral, %11 : !s64i), !u64i loc(#loc195)
            cir.store %12, %3 : !u64i, !cir.ptr<!u64i> loc(#loc196)
            %13 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc118)
            %14 = cir.cast(integral, %13 : !u64i), !u32i loc(#loc118)
            cir.call @printUnsignedLine(%14) : (!u32i) -> () loc(#loc119)
          } loc(#loc188)
          cir.break loc(#loc120)
        } loc(#loc95)
        cir.yield loc(#loc88)
      } loc(#loc88)
    } loc(#loc187)
    cir.return loc(#loc87)
  } loc(#loc186)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc125)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc156)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc200)
            %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc201)
            %4 = cir.get_global @__const.good2.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc156)
            cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc156)
            %5 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc133)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc134)
            %7 = cir.const #cir.int<47> : !s32i loc(#loc135)
            %8 = cir.call @strchr(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc133)
            cir.store %8, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
            cir.scope {
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc204)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc144)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
              } loc(#loc205)
            } loc(#loc203)
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
            %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc146)
            %11 = cir.ptr_diff(%9, %10) : !cir.ptr<!s8i> -> !s64i loc(#loc206)
            %12 = cir.cast(integral, %11 : !s64i), !u64i loc(#loc206)
            cir.store %12, %3 : !u64i, !cir.ptr<!u64i> loc(#loc207)
            %13 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc149)
            %14 = cir.cast(integral, %13 : !u64i), !u32i loc(#loc149)
            cir.call @printUnsignedLine(%14) : (!u32i) -> () loc(#loc150)
          } loc(#loc199)
          cir.break loc(#loc151)
        } loc(#loc126)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc153)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc153)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc154)
          cir.break loc(#loc155)
        } loc(#loc152)
        cir.yield loc(#loc123)
      } loc(#loc123)
    } loc(#loc198)
    cir.return loc(#loc122)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":0:0)
#loc1 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":91:9)
#loc2 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":91:26)
#loc3 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":67:9)
#loc4 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":67:26)
#loc5 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":31:9)
#loc6 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":31:26)
#loc7 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":30:9)
#loc8 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":30:26)
#loc9 = loc("/usr/include/string.h":246:1)
#loc10 = loc("/usr/include/string.h":247:33)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":34:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":34:47)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":47:19)
#loc18 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":24:1)
#loc19 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":50:1)
#loc20 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":26:5)
#loc21 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":49:5)
#loc22 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":26:12)
#loc23 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":28:5)
#loc24 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":29:5)
#loc25 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":43:5)
#loc26 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":32:9)
#loc27 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":32:16)
#loc28 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":33:9)
#loc29 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":33:16)
#loc30 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:26)
#loc31 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:33)
#loc32 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:42)
#loc33 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:9)
#loc34 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:45)
#loc35 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":35:9)
#loc36 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":38:9)
#loc37 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":35:13)
#loc38 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":35:31)
#loc39 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":36:9)
#loc40 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":37:13)
#loc41 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":37:18)
#loc42 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:42)
#loc43 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:59)
#loc44 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:9)
#loc45 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:66)
#loc46 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":42:27)
#loc47 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":42:9)
#loc48 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":44:5)
#loc49 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":45:5)
#loc50 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":47:9)
#loc51 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":48:9)
#loc52 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":112:1)
#loc53 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":116:1)
#loc54 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":114:5)
#loc55 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":114:11)
#loc56 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":115:5)
#loc57 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":115:11)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":132:15)
#loc63 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":134:15)
#loc64 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":137:15)
#loc65 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":139:15)
#loc66 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":127:1)
#loc67 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":142:1)
#loc72 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":128:1)
#loc73 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":130:27)
#loc74 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":130:22)
#loc75 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":130:5)
#loc76 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":132:5)
#loc77 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":133:5)
#loc78 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":133:71)
#loc79 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":134:5)
#loc80 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":137:5)
#loc81 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":138:5)
#loc82 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":138:70)
#loc83 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":139:5)
#loc84 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":141:12)
#loc85 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":141:5)
#loc86 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":57:1)
#loc87 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":82:1)
#loc88 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":59:5)
#loc89 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":81:5)
#loc90 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":59:12)
#loc91 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":61:5)
#loc92 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":63:19)
#loc93 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":63:9)
#loc94 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":64:9)
#loc95 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":65:5)
#loc96 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":66:5)
#loc97 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":79:5)
#loc98 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":68:9)
#loc99 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":68:16)
#loc100 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":69:9)
#loc101 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":69:16)
#loc102 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:26)
#loc103 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:33)
#loc104 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:42)
#loc105 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:9)
#loc106 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:45)
#loc107 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":71:9)
#loc108 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":74:9)
#loc109 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":71:13)
#loc110 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":71:31)
#loc111 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":72:9)
#loc112 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":73:13)
#loc113 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":73:18)
#loc114 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:42)
#loc115 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:59)
#loc116 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:9)
#loc117 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:66)
#loc118 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":78:27)
#loc119 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":78:9)
#loc120 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":80:5)
#loc121 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":85:1)
#loc122 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":110:1)
#loc123 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":87:5)
#loc124 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":109:5)
#loc125 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":87:12)
#loc126 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":89:5)
#loc127 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":90:5)
#loc128 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":103:5)
#loc129 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":92:9)
#loc130 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":92:16)
#loc131 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":93:9)
#loc132 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":93:16)
#loc133 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:26)
#loc134 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:33)
#loc135 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:42)
#loc136 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:9)
#loc137 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:45)
#loc138 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":95:9)
#loc139 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":98:9)
#loc140 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":95:13)
#loc141 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":95:31)
#loc142 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":96:9)
#loc143 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":97:13)
#loc144 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":97:18)
#loc145 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:42)
#loc146 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:59)
#loc147 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:9)
#loc148 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:66)
#loc149 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":102:27)
#loc150 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":102:9)
#loc151 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":104:5)
#loc152 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":105:5)
#loc153 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":107:19)
#loc154 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":107:9)
#loc155 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":108:9)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc7, #loc8])
#loc160 = loc(fused[#loc9, #loc10])
#loc161 = loc(fused[#loc11, #loc12])
#loc162 = loc(fused[#loc13, #loc14])
#loc163 = loc(fused[#loc15, #loc16])
#loc164 = loc(fused[#loc18, #loc19])
#loc165 = loc(fused[#loc20, #loc21])
#loc166 = loc(fused[#loc24, #loc25])
#loc167 = loc(fused[#loc26, #loc27])
#loc168 = loc(fused[#loc28, #loc29])
#loc169 = loc(fused[#loc33, #loc34])
#loc170 = loc(fused[#loc35, #loc36])
#loc171 = loc(fused[#loc37, #loc38])
#loc172 = loc(fused[#loc39, #loc36])
#loc173 = loc(fused[#loc42, #loc43])
#loc174 = loc(fused[#loc44, #loc45])
#loc175 = loc(fused[#loc52, #loc53])
#loc176 = loc(fused[#loc54, #loc55])
#loc177 = loc(fused[#loc56, #loc57])
#loc178 = loc(fused[#loc58, #loc59])
#loc179 = loc(fused[#loc60, #loc61])
#loc180 = loc(fused[#loc66, #loc67])
#loc183 = loc(fused[#loc77, #loc78])
#loc184 = loc(fused[#loc81, #loc82])
#loc185 = loc(fused[#loc85, #loc84])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc96, #loc97])
#loc189 = loc(fused[#loc98, #loc99])
#loc190 = loc(fused[#loc100, #loc101])
#loc191 = loc(fused[#loc105, #loc106])
#loc192 = loc(fused[#loc107, #loc108])
#loc193 = loc(fused[#loc109, #loc110])
#loc194 = loc(fused[#loc111, #loc108])
#loc195 = loc(fused[#loc114, #loc115])
#loc196 = loc(fused[#loc116, #loc117])
#loc197 = loc(fused[#loc121, #loc122])
#loc198 = loc(fused[#loc123, #loc124])
#loc199 = loc(fused[#loc127, #loc128])
#loc200 = loc(fused[#loc129, #loc130])
#loc201 = loc(fused[#loc131, #loc132])
#loc202 = loc(fused[#loc136, #loc137])
#loc203 = loc(fused[#loc138, #loc139])
#loc204 = loc(fused[#loc140, #loc141])
#loc205 = loc(fused[#loc142, #loc139])
#loc206 = loc(fused[#loc145, #loc146])
#loc207 = loc(fused[#loc147, #loc148])
