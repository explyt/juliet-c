!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc9 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":60:21)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":60:28)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":156:25)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":156:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc231 = loc(fused[#loc9, #loc10])
#loc301 = loc(fused[#loc186, #loc187])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_44L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc227)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_443badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc228)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc229)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_44L7badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc231)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc233)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
      %3 = cir.const #cir.int<2> : !s32i loc(#loc17)
      %4 = cir.const #cir.int<64> : !s32i loc(#loc18)
      %5 = cir.binop(or, %3, %4) : !s32i loc(#loc234)
      %6 = cir.const #cir.int<256> : !s32i loc(#loc19)
      %7 = cir.const #cir.int<128> : !s32i loc(#loc20)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc235)
      %9 = cir.call @open(%2, %5, %8) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc21)
      cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc236)
      cir.scope {
        %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc28)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc238)
        cir.if %13 {
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc31)
        } loc(#loc239)
      } loc(#loc237)
    } loc(#loc232)
    cir.return loc(#loc8)
  } loc(#loc230)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc240)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc241)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc242)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc38)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc243)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc244)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc245)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc246)
  cir.func private @close(!s32i) -> !s32i loc(#loc247)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_443badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc249)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc250)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc228)
    %3 = cir.get_global @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_44L7badSinkEPc : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc54)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc250)
    %4 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_443badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc228)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc228)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc55)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc253)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc254)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc255)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc256)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc257)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc66)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc256)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc69)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc69)
      cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc257)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc75)
            %19 = cir.const #cir.int<1> : !u32i loc(#loc76)
            %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc76)
            %21 = cir.const #cir.int<6> : !u32i loc(#loc77)
            %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc77)
            %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc78)
            cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc260)
            cir.scope {
              %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc83)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc84)
              %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc84)
              %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc262)
              cir.if %76 {
                cir.break loc(#loc86)
              } loc(#loc263)
            } loc(#loc261)
            %24 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc264)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc89)
            %26 = cir.const #cir.int<16> : !u64i loc(#loc265)
            cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc266)
            %27 = cir.const #cir.int<2> : !s32i loc(#loc94)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc94)
            %29 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc95)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc267)
            %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc38)
            %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc38)
            %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc97)
            %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc98)
            %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc99)
            cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc268)
            %35 = cir.const #cir.int<27015> : !s32i loc(#loc102)
            %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc102)
            %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc103)
            %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc104)
            cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc269)
            cir.scope {
              %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %74 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc271)
              %75 = cir.const #cir.int<16> : !u64i loc(#loc272)
              %76 = cir.cast(integral, %75 : !u64i), !u32i loc(#loc272)
              %77 = cir.call @connect(%73, %74, %76) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc114)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc115)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc273)
              cir.if %80 {
                cir.break loc(#loc117)
              } loc(#loc274)
            } loc(#loc270)
            %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
            %41 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc120)
            %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc121)
            %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc275)
            %44 = cir.const #cir.int<1> : !u64i loc(#loc276)
            %45 = cir.const #cir.int<4096> : !s32i loc(#loc126)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc126)
            %47 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc127)
            %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc277)
            %49 = cir.const #cir.int<1> : !s32i loc(#loc128)
            %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc128)
            %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc278)
            %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc279)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc130)
            %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc131)
            %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc131)
            cir.store %55, %8 : !s32i, !cir.ptr<!s32i> loc(#loc280)
            cir.scope {
              %73 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc137)
              %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc137)
              %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc282)
              %77 = cir.ternary(%76, true {
                %78 = cir.const #true loc(#loc138)
                cir.yield %78 : !cir.bool loc(#loc138)
              }, false {
                %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                %79 = cir.const #cir.int<0> : !s32i loc(#loc140)
                %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc283)
                %81 = cir.ternary(%80, true {
                  %82 = cir.const #true loc(#loc138)
                  cir.yield %82 : !cir.bool loc(#loc138)
                }, false {
                  %82 = cir.const #false loc(#loc138)
                  cir.yield %82 : !cir.bool loc(#loc138)
                }) : (!cir.bool) -> !cir.bool loc(#loc138)
                cir.yield %81 : !cir.bool loc(#loc138)
              }) : (!cir.bool) -> !cir.bool loc(#loc138)
              cir.if %77 {
                cir.break loc(#loc142)
              } loc(#loc284)
            } loc(#loc281)
            %56 = cir.const #cir.int<0> : !s8i loc(#loc143)
            %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
            %58 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc145)
            %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
            %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc146)
            %61 = cir.const #cir.int<1> : !u64i loc(#loc285)
            %62 = cir.binop(div, %60, %61) : !u64i loc(#loc286)
            %63 = cir.binop(add, %58, %62) : !u64i loc(#loc287)
            %64 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc149)
            cir.store %56, %64 : !s8i, !cir.ptr<!s8i> loc(#loc288)
            %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
            %66 = cir.const #cir.int<13> : !s8i loc(#loc151)
            %67 = cir.cast(integral, %66 : !s8i), !s32i loc(#loc151)
            %68 = cir.call @strchr(%65, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc152)
            cir.store %68, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc289)
            cir.scope {
              %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
              %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc157)
              cir.if %74 {
                %75 = cir.const #cir.int<0> : !s8i loc(#loc159)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc292)
              } loc(#loc291)
            } loc(#loc290)
            %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
            %70 = cir.const #cir.int<10> : !s8i loc(#loc163)
            %71 = cir.cast(integral, %70 : !s8i), !s32i loc(#loc163)
            %72 = cir.call @strchr(%69, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc164)
            cir.store %72, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
            cir.scope {
              %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
              %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc169)
              cir.if %74 {
                %75 = cir.const #cir.int<0> : !s8i loc(#loc171)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc296)
              } loc(#loc295)
            } loc(#loc294)
          } loc(#loc259)
          cir.yield loc(#loc72)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc174)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc174)
          cir.condition(%19) loc(#loc174)
        } loc(#loc258)
      } loc(#loc258)
      cir.scope {
        %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc177)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc178)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc178)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc298)
        cir.if %21 {
          %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc180)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc181)
        } loc(#loc299)
      } loc(#loc297)
    } loc(#loc252)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc182)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc182)
    cir.return loc(#loc50)
  } loc(#loc248)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_44L11goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc186, #loc187])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc301)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc303)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
      %3 = cir.const #cir.int<2> : !s32i loc(#loc194)
      %4 = cir.const #cir.int<64> : !s32i loc(#loc195)
      %5 = cir.binop(or, %3, %4) : !s32i loc(#loc304)
      %6 = cir.const #cir.int<256> : !s32i loc(#loc196)
      %7 = cir.const #cir.int<128> : !s32i loc(#loc197)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc305)
      %9 = cir.call @open(%2, %5, %8) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc198)
      cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc306)
      cir.scope {
        %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc203)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc204)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc205)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc308)
        cir.if %13 {
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc207)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc208)
        } loc(#loc309)
      } loc(#loc307)
    } loc(#loc302)
    cir.return loc(#loc185)
  } loc(#loc300)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc211)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_44L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc312)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc313)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc227)
    %3 = cir.get_global @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_44L11goodG2BSinkEPc : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc217)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc313)
    %4 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_44L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc227)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc227)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc218)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc314)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc220)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc211)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc211)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc220)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc222)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc222)
    cir.return loc(#loc213)
  } loc(#loc311)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_444goodEv() extra(#fn_attr) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_44L7goodG2BEv() : () -> () loc(#loc226)
    cir.return loc(#loc225)
  } loc(#loc315)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":173:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":173:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":78:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":78:37)
#loc5 = loc("/usr/include/fcntl.h":209:1)
#loc6 = loc("/usr/include/fcntl.h":209:56)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":60:1)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":71:1)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":61:1)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":62:5)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":70:5)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":63:9)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":63:13)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":65:25)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":65:31)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":65:38)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":65:47)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":65:55)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":65:20)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":65:9)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":65:63)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":66:9)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":69:9)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":66:13)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":66:26)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":66:25)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":67:9)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":68:19)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":68:13)
#loc32 = loc("/usr/include/string.h":407:1)
#loc33 = loc("/usr/include/string.h":408:33)
#loc34 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc35 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc36 = loc("/usr/include/arpa/inet.h":34:1)
#loc37 = loc("/usr/include/arpa/inet.h":34:47)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":107:49)
#loc39 = loc("/usr/include/netinet/in.h":402:1)
#loc40 = loc("/usr/include/netinet/in.h":403:40)
#loc41 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc42 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc43 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc44 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc45 = loc("/usr/include/string.h":226:1)
#loc46 = loc("/usr/include/string.h":227:50)
#loc47 = loc("/usr/include/unistd.h":358:1)
#loc48 = loc("/usr/include/unistd.h":358:27)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":73:1)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":149:1)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":75:5)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":75:12)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":77:5)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":77:32)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":79:12)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":79:5)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":80:5)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":146:5)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":85:9)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":85:13)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":86:9)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":86:28)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":87:9)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":87:15)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":88:9)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":88:32)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":89:9)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":89:37)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":89:26)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":89:33)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":90:9)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":135:17)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":91:9)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":134:9)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":100:36)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":100:45)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":100:58)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":100:29)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":100:13)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":100:69)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":101:13)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":104:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":101:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":101:34)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":102:13)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":103:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":105:20)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":105:21)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":105:30)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":105:33)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":105:47)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":105:13)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":105:48)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":106:34)
#loc95 = loc("/usr/include/netinet/in.h":249:5)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":106:13)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":107:39)
#loc98 = loc("/usr/include/netinet/in.h":251:20)
#loc99 = loc("/usr/include/netinet/in.h":33:15)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":107:13)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":107:59)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":108:38)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":108:32)
#loc104 = loc("/usr/include/netinet/in.h":250:15)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":108:13)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":108:46)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":109:13)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":112:13)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":109:25)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":109:58)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":109:59)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":109:68)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":109:82)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":109:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":109:88)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":110:13)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":111:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:31)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:55)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:62)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:60)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:46)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:69)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:72)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:83)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:88)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:103)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:113)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:114)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:117)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:26)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:13)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":116:118)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":117:13)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":120:13)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":117:17)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":117:31)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":117:44)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":117:47)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":117:61)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":118:13)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":119:17)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":122:57)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":122:13)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":122:18)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":122:28)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":122:41)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":122:52)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":122:53)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":124:30)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":124:36)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":124:23)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":124:13)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":124:40)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":125:13)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":128:13)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":125:17)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":126:13)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":127:28)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":127:18)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":127:17)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":129:30)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":129:36)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":129:23)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":129:13)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":129:40)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":130:13)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":133:13)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":130:17)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":131:13)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":132:28)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":132:18)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":132:17)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":135:16)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":136:9)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":139:9)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":136:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":136:30)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":137:9)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":138:26)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":138:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":148:5)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":148:13)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":156:1)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":167:1)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":157:1)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":158:5)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":166:5)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":159:9)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":159:13)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":161:25)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":161:31)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":161:38)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":161:47)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":161:55)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":161:20)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":161:9)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":161:63)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":162:9)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":165:9)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":162:13)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":162:26)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":162:25)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":163:9)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":164:19)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":164:13)
#loc209 = loc("/usr/include/string.h":149:1)
#loc210 = loc("/usr/include/string.h":150:14)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":176:18)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":169:1)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":178:1)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":171:5)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":171:12)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":172:5)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":172:32)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":174:12)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":174:5)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":176:5)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":176:12)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":177:5)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":177:13)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":180:1)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":183:1)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_44.cpp":182:5)
#loc227 = loc(fused[#loc1, #loc2])
#loc228 = loc(fused[#loc3, #loc4])
#loc229 = loc(fused[#loc5, #loc6])
#loc230 = loc(fused[#loc7, #loc8])
#loc232 = loc(fused[#loc12, #loc13])
#loc233 = loc(fused[#loc14, #loc15])
#loc234 = loc(fused[#loc17, #loc18])
#loc235 = loc(fused[#loc19, #loc20])
#loc236 = loc(fused[#loc22, #loc23])
#loc237 = loc(fused[#loc24, #loc25])
#loc238 = loc(fused[#loc26, #loc27])
#loc239 = loc(fused[#loc29, #loc25])
#loc240 = loc(fused[#loc32, #loc33])
#loc241 = loc(fused[#loc34, #loc35])
#loc242 = loc(fused[#loc36, #loc37])
#loc243 = loc(fused[#loc39, #loc40])
#loc244 = loc(fused[#loc41, #loc42])
#loc245 = loc(fused[#loc43, #loc44])
#loc246 = loc(fused[#loc45, #loc46])
#loc247 = loc(fused[#loc47, #loc48])
#loc248 = loc(fused[#loc49, #loc50])
#loc249 = loc(fused[#loc51, #loc52])
#loc250 = loc(fused[#loc53, #loc54])
#loc251 = loc(fused[#loc56, #loc55])
#loc252 = loc(fused[#loc57, #loc58])
#loc253 = loc(fused[#loc59, #loc60])
#loc254 = loc(fused[#loc61, #loc62])
#loc255 = loc(fused[#loc63, #loc64])
#loc256 = loc(fused[#loc65, #loc66])
#loc257 = loc(fused[#loc67, #loc68])
#loc258 = loc(fused[#loc71, #loc72])
#loc259 = loc(fused[#loc73, #loc74])
#loc260 = loc(fused[#loc79, #loc80])
#loc261 = loc(fused[#loc81, #loc82])
#loc262 = loc(fused[#loc83, #loc84])
#loc263 = loc(fused[#loc85, #loc82])
#loc264 = loc(fused[#loc87, #loc88])
#loc265 = loc(fused[#loc90, #loc91])
#loc266 = loc(fused[#loc92, #loc93])
#loc267 = loc(fused[#loc96, #loc94])
#loc268 = loc(fused[#loc100, #loc101])
#loc269 = loc(fused[#loc105, #loc106])
#loc270 = loc(fused[#loc107, #loc108])
#loc271 = loc(fused[#loc110, #loc111])
#loc272 = loc(fused[#loc112, #loc113])
#loc273 = loc(fused[#loc114, #loc115])
#loc274 = loc(fused[#loc116, #loc108])
#loc275 = loc(fused[#loc122, #loc123])
#loc276 = loc(fused[#loc124, #loc125])
#loc277 = loc(fused[#loc126, #loc127])
#loc278 = loc(fused[#loc126, #loc128])
#loc279 = loc(fused[#loc124, #loc129])
#loc280 = loc(fused[#loc132, #loc133])
#loc281 = loc(fused[#loc134, #loc135])
#loc282 = loc(fused[#loc136, #loc137])
#loc283 = loc(fused[#loc139, #loc140])
#loc284 = loc(fused[#loc141, #loc135])
#loc285 = loc(fused[#loc147, #loc148])
#loc286 = loc(fused[#loc146, #loc148])
#loc287 = loc(fused[#loc145, #loc148])
#loc288 = loc(fused[#loc144, #loc143])
#loc289 = loc(fused[#loc153, #loc154])
#loc290 = loc(fused[#loc155, #loc156])
#loc291 = loc(fused[#loc158, #loc156])
#loc292 = loc(fused[#loc161, #loc159])
#loc293 = loc(fused[#loc165, #loc166])
#loc294 = loc(fused[#loc167, #loc168])
#loc295 = loc(fused[#loc170, #loc168])
#loc296 = loc(fused[#loc173, #loc171])
#loc297 = loc(fused[#loc175, #loc176])
#loc298 = loc(fused[#loc177, #loc178])
#loc299 = loc(fused[#loc179, #loc176])
#loc300 = loc(fused[#loc184, #loc185])
#loc302 = loc(fused[#loc189, #loc190])
#loc303 = loc(fused[#loc191, #loc192])
#loc304 = loc(fused[#loc194, #loc195])
#loc305 = loc(fused[#loc196, #loc197])
#loc306 = loc(fused[#loc199, #loc200])
#loc307 = loc(fused[#loc201, #loc202])
#loc308 = loc(fused[#loc203, #loc204])
#loc309 = loc(fused[#loc206, #loc202])
#loc310 = loc(fused[#loc209, #loc210])
#loc311 = loc(fused[#loc212, #loc213])
#loc312 = loc(fused[#loc214, #loc215])
#loc313 = loc(fused[#loc216, #loc217])
#loc314 = loc(fused[#loc219, #loc218])
#loc315 = loc(fused[#loc224, #loc225])
