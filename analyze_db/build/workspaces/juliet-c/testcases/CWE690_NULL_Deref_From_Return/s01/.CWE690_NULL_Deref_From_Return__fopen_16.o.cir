!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc51)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc53)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc54)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc13)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc55)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc18)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc18)
        cir.condition(%9) loc(#loc18)
      } do {
        cir.scope {
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
          %9 = cir.call @fclose(%8) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc21)
          cir.break loc(#loc22)
        } loc(#loc57)
        cir.yield loc(#loc17)
      } loc(#loc56)
    } loc(#loc56)
    cir.return loc(#loc8)
  } loc(#loc52)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc59)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc24)
  } loc(#loc58)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc61)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc31)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc62)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc33)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc34)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc34)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc35)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc35)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc33)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc63)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc40)
        cir.condition(%9) loc(#loc40)
      } do {
        cir.scope {
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
            %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc45)
            %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc67)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
              %13 = cir.call @fclose(%12) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc48)
            } loc(#loc68)
          } loc(#loc66)
          cir.break loc(#loc49)
        } loc(#loc65)
        cir.yield loc(#loc39)
      } loc(#loc64)
    } loc(#loc64)
    cir.return loc(#loc28)
  } loc(#loc60)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":27:18)
#loc4 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":27:30)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":21:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":34:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":23:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":23:12)
#loc11 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":25:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":25:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":27:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":27:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":27:34)
#loc16 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":28:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":33:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":28:11)
#loc19 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":29:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":31:16)
#loc21 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":31:9)
#loc22 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":32:9)
#loc23 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":59:1)
#loc24 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":62:1)
#loc25 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":61:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":61:13)
#loc27 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":41:1)
#loc28 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":57:1)
#loc29 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":43:5)
#loc30 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":43:12)
#loc31 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":45:12)
#loc32 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":45:5)
#loc33 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":47:12)
#loc34 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":47:18)
#loc35 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":47:30)
#loc36 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":47:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":47:34)
#loc38 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":48:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":56:5)
#loc40 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":48:11)
#loc41 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":49:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":51:9)
#loc43 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":54:9)
#loc44 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":51:13)
#loc45 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":51:21)
#loc46 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":52:9)
#loc47 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":53:20)
#loc48 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":53:13)
#loc49 = loc("CWE690_NULL_Deref_From_Return__fopen_16.c":55:9)
#loc50 = loc(fused[#loc1, #loc2])
#loc51 = loc(fused[#loc5, #loc6])
#loc52 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc9, #loc10])
#loc54 = loc(fused[#loc12, #loc11])
#loc55 = loc(fused[#loc14, #loc15])
#loc56 = loc(fused[#loc16, #loc17])
#loc57 = loc(fused[#loc19, #loc17])
#loc58 = loc(fused[#loc23, #loc24])
#loc59 = loc(fused[#loc25, #loc26])
#loc60 = loc(fused[#loc27, #loc28])
#loc61 = loc(fused[#loc29, #loc30])
#loc62 = loc(fused[#loc32, #loc31])
#loc63 = loc(fused[#loc36, #loc37])
#loc64 = loc(fused[#loc38, #loc39])
#loc65 = loc(fused[#loc41, #loc39])
#loc66 = loc(fused[#loc42, #loc43])
#loc67 = loc(fused[#loc44, #loc45])
#loc68 = loc(fused[#loc46, #loc43])
