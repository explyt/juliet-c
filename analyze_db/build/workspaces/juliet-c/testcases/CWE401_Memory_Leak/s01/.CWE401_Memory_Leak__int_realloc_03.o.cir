!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc202)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc203)
  cir.func private @printIntLine(!s32i) loc(#loc204)
  cir.func no_proto @CWE401_Memory_Leak__int_realloc_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc207)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc15)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc209)
      cir.if %4 {
        %5 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc18)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc19)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc20)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc211)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc212)
        %12 = cir.call @realloc(%7, %11) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc213)
        cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc214)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc28)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc216)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc31)
            %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc32)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
          } loc(#loc217)
        } loc(#loc215)
        %14 = cir.const #cir.int<5> : !s32i loc(#loc33)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc36)
        cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc218)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc39)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc40)
      } loc(#loc210)
    } loc(#loc208)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc43)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc44)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc220)
      cir.if %4 {
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc8)
  } loc(#loc205)
  cir.func no_proto @CWE401_Memory_Leak__int_realloc_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc223)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc224)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc225)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc226)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    cir.return loc(#loc47)
  } loc(#loc222)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc58)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc228)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc65)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc231)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc69)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc70)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc233)
      cir.if %4 {
        %5 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc72)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc73)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc74)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc74)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc235)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc236)
        %12 = cir.call @realloc(%7, %11) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc72)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc237)
        cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc238)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc82)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc240)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc84)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc86)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
          } loc(#loc241)
        } loc(#loc239)
        %14 = cir.const #cir.int<5> : !s32i loc(#loc87)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc90)
        cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc242)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc92)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc93)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc91)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc94)
      } loc(#loc234)
    } loc(#loc232)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc97)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc98)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc244)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } else {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc103)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc104)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
      } loc(#loc245)
    } loc(#loc243)
    cir.return loc(#loc62)
  } loc(#loc229)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc109)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc248)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc113)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc114)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc250)
      cir.if %4 {
        %5 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc116)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc117)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc118)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc118)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc252)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc253)
        %12 = cir.call @realloc(%7, %11) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc254)
        cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc255)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc126)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc257)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc128)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc129)
            %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc130)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
          } loc(#loc258)
        } loc(#loc256)
        %14 = cir.const #cir.int<5> : !s32i loc(#loc131)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc133)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc134)
        cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc259)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc136)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc137)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc135)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc138)
      } loc(#loc251)
    } loc(#loc249)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc141)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc142)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc261)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc144)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc145)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
      } loc(#loc262)
    } loc(#loc260)
    cir.return loc(#loc106)
  } loc(#loc246)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc264)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc150)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc265)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc154)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc155)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc267)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc159)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc159)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc160)
      } else {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc161)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc161)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc161)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc161)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc161)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc161)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc161)
        cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc269)
        %12 = cir.const #cir.int<5> : !s32i loc(#loc163)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc165)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc166)
        cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc270)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc167)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc168)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc169)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc167)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc170)
      } loc(#loc268)
    } loc(#loc266)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc173)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc174)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc272)
      cir.if %4 {
      } loc(#loc273)
    } loc(#loc271)
    cir.return loc(#loc147)
  } loc(#loc263)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc180)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc276)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc184)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc185)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc278)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc187)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc187)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc187)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc187)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc187)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc187)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc187)
        cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc280)
        %12 = cir.const #cir.int<5> : !s32i loc(#loc189)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc191)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc192)
        cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc281)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc194)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc195)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc193)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc196)
      } loc(#loc279)
    } loc(#loc277)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc199)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc200)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc283)
      cir.if %4 {
      } loc(#loc284)
    } loc(#loc282)
    cir.return loc(#loc177)
  } loc(#loc274)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_03.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_realloc_03.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__int_realloc_03.c":42:1)
#loc9 = loc("CWE401_Memory_Leak__int_realloc_03.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__int_realloc_03.c":26:11)
#loc11 = loc("CWE401_Memory_Leak__int_realloc_03.c":27:12)
#loc12 = loc("CWE401_Memory_Leak__int_realloc_03.c":27:5)
#loc13 = loc("CWE401_Memory_Leak__int_realloc_03.c":28:5)
#loc14 = loc("CWE401_Memory_Leak__int_realloc_03.c":36:5)
#loc15 = loc("CWE401_Memory_Leak__int_realloc_03.c":28:8)
#loc16 = loc("CWE401_Memory_Leak__int_realloc_03.c":28:11)
#loc17 = loc("CWE401_Memory_Leak__int_realloc_03.c":29:5)
#loc18 = loc("CWE401_Memory_Leak__int_realloc_03.c":31:23)
#loc19 = loc("CWE401_Memory_Leak__int_realloc_03.c":31:31)
#loc20 = loc("CWE401_Memory_Leak__int_realloc_03.c":31:37)
#loc21 = loc("CWE401_Memory_Leak__int_realloc_03.c":31:41)
#loc22 = loc("CWE401_Memory_Leak__int_realloc_03.c":31:51)
#loc23 = loc("CWE401_Memory_Leak__int_realloc_03.c":31:52)
#loc24 = loc("CWE401_Memory_Leak__int_realloc_03.c":31:9)
#loc25 = loc("CWE401_Memory_Leak__int_realloc_03.c":32:9)
#loc26 = loc("CWE401_Memory_Leak__int_realloc_03.c":32:37)
#loc27 = loc("CWE401_Memory_Leak__int_realloc_03.c":32:13)
#loc28 = loc("CWE401_Memory_Leak__int_realloc_03.c":32:21)
#loc29 = loc("CWE401_Memory_Leak__int_realloc_03.c":32:27)
#loc30 = loc("CWE401_Memory_Leak__int_realloc_03.c":32:28)
#loc31 = loc("CWE401_Memory_Leak__int_realloc_03.c":32:34)
#loc32 = loc("CWE401_Memory_Leak__int_realloc_03.c":32:33)
#loc33 = loc("CWE401_Memory_Leak__int_realloc_03.c":34:19)
#loc34 = loc("CWE401_Memory_Leak__int_realloc_03.c":34:9)
#loc35 = loc("CWE401_Memory_Leak__int_realloc_03.c":34:14)
#loc36 = loc("CWE401_Memory_Leak__int_realloc_03.c":34:15)
#loc37 = loc("CWE401_Memory_Leak__int_realloc_03.c":35:22)
#loc38 = loc("CWE401_Memory_Leak__int_realloc_03.c":35:27)
#loc39 = loc("CWE401_Memory_Leak__int_realloc_03.c":35:28)
#loc40 = loc("CWE401_Memory_Leak__int_realloc_03.c":35:9)
#loc41 = loc("CWE401_Memory_Leak__int_realloc_03.c":37:5)
#loc42 = loc("CWE401_Memory_Leak__int_realloc_03.c":41:5)
#loc43 = loc("CWE401_Memory_Leak__int_realloc_03.c":37:8)
#loc44 = loc("CWE401_Memory_Leak__int_realloc_03.c":37:11)
#loc45 = loc("CWE401_Memory_Leak__int_realloc_03.c":38:5)
#loc46 = loc("CWE401_Memory_Leak__int_realloc_03.c":140:1)
#loc47 = loc("CWE401_Memory_Leak__int_realloc_03.c":146:1)
#loc48 = loc("CWE401_Memory_Leak__int_realloc_03.c":142:5)
#loc49 = loc("CWE401_Memory_Leak__int_realloc_03.c":142:14)
#loc50 = loc("CWE401_Memory_Leak__int_realloc_03.c":143:5)
#loc51 = loc("CWE401_Memory_Leak__int_realloc_03.c":143:14)
#loc52 = loc("CWE401_Memory_Leak__int_realloc_03.c":144:5)
#loc53 = loc("CWE401_Memory_Leak__int_realloc_03.c":144:14)
#loc54 = loc("CWE401_Memory_Leak__int_realloc_03.c":145:5)
#loc55 = loc("CWE401_Memory_Leak__int_realloc_03.c":145:14)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE401_Memory_Leak__int_realloc_03.c":65:19)
#loc59 = loc("/usr/include/stdlib.h":687:1)
#loc60 = loc("/usr/include/stdlib.h":687:32)
#loc61 = loc("CWE401_Memory_Leak__int_realloc_03.c":49:1)
#loc62 = loc("CWE401_Memory_Leak__int_realloc_03.c":72:1)
#loc63 = loc("CWE401_Memory_Leak__int_realloc_03.c":51:5)
#loc64 = loc("CWE401_Memory_Leak__int_realloc_03.c":51:11)
#loc65 = loc("CWE401_Memory_Leak__int_realloc_03.c":52:12)
#loc66 = loc("CWE401_Memory_Leak__int_realloc_03.c":52:5)
#loc67 = loc("CWE401_Memory_Leak__int_realloc_03.c":53:5)
#loc68 = loc("CWE401_Memory_Leak__int_realloc_03.c":61:5)
#loc69 = loc("CWE401_Memory_Leak__int_realloc_03.c":53:8)
#loc70 = loc("CWE401_Memory_Leak__int_realloc_03.c":53:11)
#loc71 = loc("CWE401_Memory_Leak__int_realloc_03.c":54:5)
#loc72 = loc("CWE401_Memory_Leak__int_realloc_03.c":56:23)
#loc73 = loc("CWE401_Memory_Leak__int_realloc_03.c":56:31)
#loc74 = loc("CWE401_Memory_Leak__int_realloc_03.c":56:37)
#loc75 = loc("CWE401_Memory_Leak__int_realloc_03.c":56:41)
#loc76 = loc("CWE401_Memory_Leak__int_realloc_03.c":56:51)
#loc77 = loc("CWE401_Memory_Leak__int_realloc_03.c":56:52)
#loc78 = loc("CWE401_Memory_Leak__int_realloc_03.c":56:9)
#loc79 = loc("CWE401_Memory_Leak__int_realloc_03.c":57:9)
#loc80 = loc("CWE401_Memory_Leak__int_realloc_03.c":57:37)
#loc81 = loc("CWE401_Memory_Leak__int_realloc_03.c":57:13)
#loc82 = loc("CWE401_Memory_Leak__int_realloc_03.c":57:21)
#loc83 = loc("CWE401_Memory_Leak__int_realloc_03.c":57:27)
#loc84 = loc("CWE401_Memory_Leak__int_realloc_03.c":57:28)
#loc85 = loc("CWE401_Memory_Leak__int_realloc_03.c":57:34)
#loc86 = loc("CWE401_Memory_Leak__int_realloc_03.c":57:33)
#loc87 = loc("CWE401_Memory_Leak__int_realloc_03.c":59:19)
#loc88 = loc("CWE401_Memory_Leak__int_realloc_03.c":59:9)
#loc89 = loc("CWE401_Memory_Leak__int_realloc_03.c":59:14)
#loc90 = loc("CWE401_Memory_Leak__int_realloc_03.c":59:15)
#loc91 = loc("CWE401_Memory_Leak__int_realloc_03.c":60:22)
#loc92 = loc("CWE401_Memory_Leak__int_realloc_03.c":60:27)
#loc93 = loc("CWE401_Memory_Leak__int_realloc_03.c":60:28)
#loc94 = loc("CWE401_Memory_Leak__int_realloc_03.c":60:9)
#loc95 = loc("CWE401_Memory_Leak__int_realloc_03.c":62:5)
#loc96 = loc("CWE401_Memory_Leak__int_realloc_03.c":71:5)
#loc97 = loc("CWE401_Memory_Leak__int_realloc_03.c":62:8)
#loc98 = loc("CWE401_Memory_Leak__int_realloc_03.c":62:11)
#loc99 = loc("CWE401_Memory_Leak__int_realloc_03.c":63:5)
#loc100 = loc("CWE401_Memory_Leak__int_realloc_03.c":66:5)
#loc101 = loc("CWE401_Memory_Leak__int_realloc_03.c":68:5)
#loc102 = loc("CWE401_Memory_Leak__int_realloc_03.c":65:9)
#loc103 = loc("CWE401_Memory_Leak__int_realloc_03.c":70:9)
#loc104 = loc("CWE401_Memory_Leak__int_realloc_03.c":70:14)
#loc105 = loc("CWE401_Memory_Leak__int_realloc_03.c":75:1)
#loc106 = loc("CWE401_Memory_Leak__int_realloc_03.c":93:1)
#loc107 = loc("CWE401_Memory_Leak__int_realloc_03.c":77:5)
#loc108 = loc("CWE401_Memory_Leak__int_realloc_03.c":77:11)
#loc109 = loc("CWE401_Memory_Leak__int_realloc_03.c":78:12)
#loc110 = loc("CWE401_Memory_Leak__int_realloc_03.c":78:5)
#loc111 = loc("CWE401_Memory_Leak__int_realloc_03.c":79:5)
#loc112 = loc("CWE401_Memory_Leak__int_realloc_03.c":87:5)
#loc113 = loc("CWE401_Memory_Leak__int_realloc_03.c":79:8)
#loc114 = loc("CWE401_Memory_Leak__int_realloc_03.c":79:11)
#loc115 = loc("CWE401_Memory_Leak__int_realloc_03.c":80:5)
#loc116 = loc("CWE401_Memory_Leak__int_realloc_03.c":82:23)
#loc117 = loc("CWE401_Memory_Leak__int_realloc_03.c":82:31)
#loc118 = loc("CWE401_Memory_Leak__int_realloc_03.c":82:37)
#loc119 = loc("CWE401_Memory_Leak__int_realloc_03.c":82:41)
#loc120 = loc("CWE401_Memory_Leak__int_realloc_03.c":82:51)
#loc121 = loc("CWE401_Memory_Leak__int_realloc_03.c":82:52)
#loc122 = loc("CWE401_Memory_Leak__int_realloc_03.c":82:9)
#loc123 = loc("CWE401_Memory_Leak__int_realloc_03.c":83:9)
#loc124 = loc("CWE401_Memory_Leak__int_realloc_03.c":83:37)
#loc125 = loc("CWE401_Memory_Leak__int_realloc_03.c":83:13)
#loc126 = loc("CWE401_Memory_Leak__int_realloc_03.c":83:21)
#loc127 = loc("CWE401_Memory_Leak__int_realloc_03.c":83:27)
#loc128 = loc("CWE401_Memory_Leak__int_realloc_03.c":83:28)
#loc129 = loc("CWE401_Memory_Leak__int_realloc_03.c":83:34)
#loc130 = loc("CWE401_Memory_Leak__int_realloc_03.c":83:33)
#loc131 = loc("CWE401_Memory_Leak__int_realloc_03.c":85:19)
#loc132 = loc("CWE401_Memory_Leak__int_realloc_03.c":85:9)
#loc133 = loc("CWE401_Memory_Leak__int_realloc_03.c":85:14)
#loc134 = loc("CWE401_Memory_Leak__int_realloc_03.c":85:15)
#loc135 = loc("CWE401_Memory_Leak__int_realloc_03.c":86:22)
#loc136 = loc("CWE401_Memory_Leak__int_realloc_03.c":86:27)
#loc137 = loc("CWE401_Memory_Leak__int_realloc_03.c":86:28)
#loc138 = loc("CWE401_Memory_Leak__int_realloc_03.c":86:9)
#loc139 = loc("CWE401_Memory_Leak__int_realloc_03.c":88:5)
#loc140 = loc("CWE401_Memory_Leak__int_realloc_03.c":92:5)
#loc141 = loc("CWE401_Memory_Leak__int_realloc_03.c":88:8)
#loc142 = loc("CWE401_Memory_Leak__int_realloc_03.c":88:11)
#loc143 = loc("CWE401_Memory_Leak__int_realloc_03.c":89:5)
#loc144 = loc("CWE401_Memory_Leak__int_realloc_03.c":91:9)
#loc145 = loc("CWE401_Memory_Leak__int_realloc_03.c":91:14)
#loc146 = loc("CWE401_Memory_Leak__int_realloc_03.c":96:1)
#loc147 = loc("CWE401_Memory_Leak__int_realloc_03.c":118:1)
#loc148 = loc("CWE401_Memory_Leak__int_realloc_03.c":98:5)
#loc149 = loc("CWE401_Memory_Leak__int_realloc_03.c":98:11)
#loc150 = loc("CWE401_Memory_Leak__int_realloc_03.c":99:12)
#loc151 = loc("CWE401_Memory_Leak__int_realloc_03.c":99:5)
#loc152 = loc("CWE401_Memory_Leak__int_realloc_03.c":100:5)
#loc153 = loc("CWE401_Memory_Leak__int_realloc_03.c":112:5)
#loc154 = loc("CWE401_Memory_Leak__int_realloc_03.c":100:8)
#loc155 = loc("CWE401_Memory_Leak__int_realloc_03.c":100:11)
#loc156 = loc("CWE401_Memory_Leak__int_realloc_03.c":101:5)
#loc157 = loc("CWE401_Memory_Leak__int_realloc_03.c":104:5)
#loc158 = loc("CWE401_Memory_Leak__int_realloc_03.c":106:5)
#loc159 = loc("CWE401_Memory_Leak__int_realloc_03.c":103:19)
#loc160 = loc("CWE401_Memory_Leak__int_realloc_03.c":103:9)
#loc161 = loc("CWE401_Memory_Leak__int_realloc_03.c":108:23)
#loc162 = loc("CWE401_Memory_Leak__int_realloc_03.c":108:9)
#loc163 = loc("CWE401_Memory_Leak__int_realloc_03.c":110:19)
#loc164 = loc("CWE401_Memory_Leak__int_realloc_03.c":110:9)
#loc165 = loc("CWE401_Memory_Leak__int_realloc_03.c":110:14)
#loc166 = loc("CWE401_Memory_Leak__int_realloc_03.c":110:15)
#loc167 = loc("CWE401_Memory_Leak__int_realloc_03.c":111:22)
#loc168 = loc("CWE401_Memory_Leak__int_realloc_03.c":111:27)
#loc169 = loc("CWE401_Memory_Leak__int_realloc_03.c":111:28)
#loc170 = loc("CWE401_Memory_Leak__int_realloc_03.c":111:9)
#loc171 = loc("CWE401_Memory_Leak__int_realloc_03.c":113:5)
#loc172 = loc("CWE401_Memory_Leak__int_realloc_03.c":117:5)
#loc173 = loc("CWE401_Memory_Leak__int_realloc_03.c":113:8)
#loc174 = loc("CWE401_Memory_Leak__int_realloc_03.c":113:11)
#loc175 = loc("CWE401_Memory_Leak__int_realloc_03.c":114:5)
#loc176 = loc("CWE401_Memory_Leak__int_realloc_03.c":121:1)
#loc177 = loc("CWE401_Memory_Leak__int_realloc_03.c":138:1)
#loc178 = loc("CWE401_Memory_Leak__int_realloc_03.c":123:5)
#loc179 = loc("CWE401_Memory_Leak__int_realloc_03.c":123:11)
#loc180 = loc("CWE401_Memory_Leak__int_realloc_03.c":124:12)
#loc181 = loc("CWE401_Memory_Leak__int_realloc_03.c":124:5)
#loc182 = loc("CWE401_Memory_Leak__int_realloc_03.c":125:5)
#loc183 = loc("CWE401_Memory_Leak__int_realloc_03.c":132:5)
#loc184 = loc("CWE401_Memory_Leak__int_realloc_03.c":125:8)
#loc185 = loc("CWE401_Memory_Leak__int_realloc_03.c":125:11)
#loc186 = loc("CWE401_Memory_Leak__int_realloc_03.c":126:5)
#loc187 = loc("CWE401_Memory_Leak__int_realloc_03.c":128:23)
#loc188 = loc("CWE401_Memory_Leak__int_realloc_03.c":128:9)
#loc189 = loc("CWE401_Memory_Leak__int_realloc_03.c":130:19)
#loc190 = loc("CWE401_Memory_Leak__int_realloc_03.c":130:9)
#loc191 = loc("CWE401_Memory_Leak__int_realloc_03.c":130:14)
#loc192 = loc("CWE401_Memory_Leak__int_realloc_03.c":130:15)
#loc193 = loc("CWE401_Memory_Leak__int_realloc_03.c":131:22)
#loc194 = loc("CWE401_Memory_Leak__int_realloc_03.c":131:27)
#loc195 = loc("CWE401_Memory_Leak__int_realloc_03.c":131:28)
#loc196 = loc("CWE401_Memory_Leak__int_realloc_03.c":131:9)
#loc197 = loc("CWE401_Memory_Leak__int_realloc_03.c":133:5)
#loc198 = loc("CWE401_Memory_Leak__int_realloc_03.c":137:5)
#loc199 = loc("CWE401_Memory_Leak__int_realloc_03.c":133:8)
#loc200 = loc("CWE401_Memory_Leak__int_realloc_03.c":133:11)
#loc201 = loc("CWE401_Memory_Leak__int_realloc_03.c":134:5)
#loc202 = loc(fused[#loc1, #loc2])
#loc203 = loc(fused[#loc3, #loc4])
#loc204 = loc(fused[#loc5, #loc6])
#loc205 = loc(fused[#loc7, #loc8])
#loc206 = loc(fused[#loc9, #loc10])
#loc207 = loc(fused[#loc12, #loc11])
#loc208 = loc(fused[#loc13, #loc14])
#loc209 = loc(fused[#loc15, #loc16])
#loc210 = loc(fused[#loc17, #loc14])
#loc211 = loc(fused[#loc21, #loc22])
#loc212 = loc(fused[#loc20, #loc22])
#loc213 = loc(fused[#loc18, #loc23])
#loc214 = loc(fused[#loc24, #loc23])
#loc215 = loc(fused[#loc25, #loc26])
#loc216 = loc(fused[#loc27, #loc28])
#loc217 = loc(fused[#loc29, #loc26])
#loc218 = loc(fused[#loc34, #loc33])
#loc219 = loc(fused[#loc41, #loc42])
#loc220 = loc(fused[#loc43, #loc44])
#loc221 = loc(fused[#loc45, #loc42])
#loc222 = loc(fused[#loc46, #loc47])
#loc223 = loc(fused[#loc48, #loc49])
#loc224 = loc(fused[#loc50, #loc51])
#loc225 = loc(fused[#loc52, #loc53])
#loc226 = loc(fused[#loc54, #loc55])
#loc227 = loc(fused[#loc56, #loc57])
#loc228 = loc(fused[#loc59, #loc60])
#loc229 = loc(fused[#loc61, #loc62])
#loc230 = loc(fused[#loc63, #loc64])
#loc231 = loc(fused[#loc66, #loc65])
#loc232 = loc(fused[#loc67, #loc68])
#loc233 = loc(fused[#loc69, #loc70])
#loc234 = loc(fused[#loc71, #loc68])
#loc235 = loc(fused[#loc75, #loc76])
#loc236 = loc(fused[#loc74, #loc76])
#loc237 = loc(fused[#loc72, #loc77])
#loc238 = loc(fused[#loc78, #loc77])
#loc239 = loc(fused[#loc79, #loc80])
#loc240 = loc(fused[#loc81, #loc82])
#loc241 = loc(fused[#loc83, #loc80])
#loc242 = loc(fused[#loc88, #loc87])
#loc243 = loc(fused[#loc95, #loc96])
#loc244 = loc(fused[#loc97, #loc98])
#loc245 = loc(fused[#loc99, #loc100, #loc101, #loc96])
#loc246 = loc(fused[#loc105, #loc106])
#loc247 = loc(fused[#loc107, #loc108])
#loc248 = loc(fused[#loc110, #loc109])
#loc249 = loc(fused[#loc111, #loc112])
#loc250 = loc(fused[#loc113, #loc114])
#loc251 = loc(fused[#loc115, #loc112])
#loc252 = loc(fused[#loc119, #loc120])
#loc253 = loc(fused[#loc118, #loc120])
#loc254 = loc(fused[#loc116, #loc121])
#loc255 = loc(fused[#loc122, #loc121])
#loc256 = loc(fused[#loc123, #loc124])
#loc257 = loc(fused[#loc125, #loc126])
#loc258 = loc(fused[#loc127, #loc124])
#loc259 = loc(fused[#loc132, #loc131])
#loc260 = loc(fused[#loc139, #loc140])
#loc261 = loc(fused[#loc141, #loc142])
#loc262 = loc(fused[#loc143, #loc140])
#loc263 = loc(fused[#loc146, #loc147])
#loc264 = loc(fused[#loc148, #loc149])
#loc265 = loc(fused[#loc151, #loc150])
#loc266 = loc(fused[#loc152, #loc153])
#loc267 = loc(fused[#loc154, #loc155])
#loc268 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc269 = loc(fused[#loc162, #loc161])
#loc270 = loc(fused[#loc164, #loc163])
#loc271 = loc(fused[#loc171, #loc172])
#loc272 = loc(fused[#loc173, #loc174])
#loc273 = loc(fused[#loc175, #loc172])
#loc274 = loc(fused[#loc176, #loc177])
#loc275 = loc(fused[#loc178, #loc179])
#loc276 = loc(fused[#loc181, #loc180])
#loc277 = loc(fused[#loc182, #loc183])
#loc278 = loc(fused[#loc184, #loc185])
#loc279 = loc(fused[#loc186, #loc183])
#loc280 = loc(fused[#loc188, #loc187])
#loc281 = loc(fused[#loc190, #loc189])
#loc282 = loc(fused[#loc197, #loc198])
#loc283 = loc(fused[#loc199, #loc200])
#loc284 = loc(fused[#loc201, #loc198])
