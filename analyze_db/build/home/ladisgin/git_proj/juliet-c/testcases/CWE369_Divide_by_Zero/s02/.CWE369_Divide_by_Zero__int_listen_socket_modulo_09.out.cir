!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":95:48)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":379:10)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":379:14)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":379:20)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":379:32)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":184:48)
#loc434 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":281:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc590 = loc(fused[#loc176, #loc177])
#loc591 = loc(fused[#loc178, #loc179])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc520)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc521)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc522)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc523)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc524)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc525)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc526)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc527)
  cir.func private @close(!s32i) -> !s32i loc(#loc528)
  cir.func private @printIntLine(!s32i) loc(#loc529)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc531)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc532)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc533)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc534)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc535)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc536)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc36)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    cir.br ^bb1 loc(#loc538)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc520)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc40)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc539)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc540)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc28)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc533)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc30)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc534)
    cir.br ^bb4 loc(#loc541)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc541)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc46)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc47)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc49)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    cir.br ^bb7 loc(#loc543)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc56)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc544)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc545)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc58)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc54)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc546)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc547)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc548)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc66)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc549)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc69)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc550)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc73)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc73)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc551)
    cir.br ^bb11 loc(#loc552)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc553)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc554)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc554)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc86)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc555)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc556)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc88)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc79)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc557)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc94)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc558)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc559)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc96)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc90)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    cir.br ^bb19 loc(#loc561)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc106)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc562)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc563)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc108)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc104)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc111)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc111)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc111)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc111)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc111)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc111)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc111)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc112)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc564)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc114)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc565)
    cir.br ^bb23 loc(#loc566)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc120)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc567)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc121)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc121)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc121)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc568)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc121)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc121)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc121)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc121)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc121)
  ^bb28(%87: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":95:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc121)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc121)
  ^bb30(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":95:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc121)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc569)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc125)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc118)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc126)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc570)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
    cir.store %95, %5 : !s32i, !cir.ptr<!s32i> loc(#loc571)
    cir.br ^bb5 loc(#loc45)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc45)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc572)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc136)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc573)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc574)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc139)
    cir.br ^bb39 loc(#loc134)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc134)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc575)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc143)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc576)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc577)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc146)
    cir.br ^bb43 loc(#loc141)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc141)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc43)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc39)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc39)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc578)
  ^bb48:  // pred: ^bb47
    %108 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc520)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %110 = cir.cast(int_to_bool, %109 : !s32i), !cir.bool loc(#loc149)
    cir.brcond %110 ^bb49, ^bb50 loc(#loc579)
  ^bb49:  // pred: ^bb48
    %111 = cir.const #cir.int<100> : !s32i loc(#loc151)
    %112 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %113 = cir.binop(rem, %111, %112) : !s32i loc(#loc580)
    cir.call @printIntLine(%113) : (!s32i) -> () loc(#loc153)
    cir.br ^bb50 loc(#loc148)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc148)
  ^bb51:  // pred: ^bb50
    cir.return loc(#loc22)
  } loc(#loc530)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc582)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc156)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc583)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc158)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc584)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc585)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    cir.return loc(#loc155)
  } loc(#loc581)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc586)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc587)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc588)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc173)
  cir.func @main(%arg0: !s32i loc(fused[#loc176, #loc177]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc178, #loc179])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc590)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc591)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc175)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc180)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc181)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc182)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc182)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc183)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc170)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_09_good : !cir.ptr<!cir.func<!void ()>> loc(#loc592)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_09_good() : () -> () loc(#loc185)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc171)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc172)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_09_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc593)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_09_bad() : () -> () loc(#loc189)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc173)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc192)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc594)
    cir.return %17 : !s32i loc(#loc594)
  } loc(#loc589)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc595)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc197)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc597)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc598)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc599)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc600)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc601)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc602)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc213)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc603)
    cir.br ^bb1 loc(#loc604)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc520)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc217)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc605)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc606)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc205)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc599)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc207)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc600)
    cir.br ^bb4 loc(#loc607)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc607)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc223)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc223)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc223)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc224)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc225)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc226)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc227)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc608)
    cir.br ^bb7 loc(#loc609)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc233)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc610)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc611)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc235)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc231)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc612)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc238)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc613)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc614)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc243)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc243)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc615)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc245)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc245)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc616)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc247)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc247)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc248)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc617)
    cir.br ^bb11 loc(#loc618)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc619)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc620)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc620)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc258)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc259)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc259)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc621)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc622)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc261)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc252)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc623)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc265)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc266)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc267)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc267)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc624)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc625)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc269)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc263)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc271)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc272)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc273)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc626)
    cir.br ^bb19 loc(#loc627)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc279)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc628)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc629)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc281)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc277)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc283)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc283)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc284)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc284)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc284)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc284)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc284)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc284)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc284)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc285)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc285)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc630)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc286)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc287)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc287)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc631)
    cir.br ^bb23 loc(#loc632)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc293)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc633)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc294)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc294)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc294)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc296)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc634)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc294)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc294)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc294)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc294)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc294)
  ^bb28(%87: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":184:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc294)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc294)
  ^bb30(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":184:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc294)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc635)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc298)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc291)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc299)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc299)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc301)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc301)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc636)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc302)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc303)
    cir.store %95, %5 : !s32i, !cir.ptr<!s32i> loc(#loc637)
    cir.br ^bb5 loc(#loc222)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc222)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc638)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc309)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc309)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc639)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc640)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc311)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc312)
    cir.br ^bb39 loc(#loc307)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc307)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc641)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc316)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc316)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc642)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc643)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc319)
    cir.br ^bb43 loc(#loc314)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc314)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc220)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc216)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc216)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc644)
  ^bb48:  // pred: ^bb47
    %108 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc595)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc322)
    %110 = cir.cast(int_to_bool, %109 : !s32i), !cir.bool loc(#loc322)
    cir.brcond %110 ^bb49, ^bb50 loc(#loc645)
  ^bb49:  // pred: ^bb48
    %111 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc196)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc196)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc326)
    cir.br ^bb56 loc(#loc324)
  ^bb50:  // pred: ^bb48
    cir.br ^bb51 loc(#loc646)
  ^bb51:  // pred: ^bb50
    %113 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc329)
    %114 = cir.const #cir.int<0> : !s32i loc(#loc330)
    %115 = cir.cmp(ne, %113, %114) : !s32i, !cir.bool loc(#loc647)
    cir.brcond %115 ^bb52, ^bb53 loc(#loc648)
  ^bb52:  // pred: ^bb51
    %116 = cir.const #cir.int<100> : !s32i loc(#loc334)
    %117 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    %118 = cir.binop(rem, %116, %117) : !s32i loc(#loc649)
    cir.call @printIntLine(%118) : (!s32i) -> () loc(#loc336)
    cir.br ^bb54 loc(#loc332)
  ^bb53:  // pred: ^bb51
    %119 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc197)
    %120 = cir.cast(array_to_ptrdecay, %119 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc197)
    cir.call @printLine(%120) : (!cir.ptr<!s8i>) -> () loc(#loc337)
    cir.br ^bb54 loc(#loc328)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc328)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc321)
  ^bb56:  // 2 preds: ^bb49, ^bb55
    cir.br ^bb57 loc(#loc321)
  ^bb57:  // pred: ^bb56
    cir.return loc(#loc199)
  } loc(#loc596)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc651)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc652)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc653)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc654)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc655)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc656)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc352)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc353)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    cir.br ^bb1 loc(#loc658)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc520)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc357)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc357)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc659)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc660)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc345)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc345)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc653)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc347)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc347)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc654)
    cir.br ^bb4 loc(#loc661)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc661)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc363)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc363)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc363)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc364)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc365)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc366)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc367)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc662)
    cir.br ^bb7 loc(#loc663)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc372)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc373)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc373)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc664)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc665)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc375)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc371)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc666)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc378)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc667)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc668)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc383)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc383)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc669)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc385)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc385)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc670)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc387)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc387)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc388)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc671)
    cir.br ^bb11 loc(#loc672)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc393)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc673)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc674)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc674)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc398)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc399)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc399)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc675)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc676)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc401)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc392)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc677)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc404)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc405)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc406)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc407)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc407)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc678)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc679)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc409)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc403)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc410)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc411)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc412)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc413)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc680)
    cir.br ^bb19 loc(#loc681)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc418)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc419)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc419)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc682)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc683)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc421)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc417)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc422)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc423)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc423)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc424)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc424)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc424)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc424)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc424)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc424)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc424)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc425)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc425)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc684)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc426)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc427)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc427)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc685)
    cir.br ^bb23 loc(#loc686)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc432)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc433)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc433)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc687)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc434)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc434)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc434)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc435)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc436)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc688)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc434)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc434)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc434)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc434)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc434)
  ^bb28(%87: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":281:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc434)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc434)
  ^bb30(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":281:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc434)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc689)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc438)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc431)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc439)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc439)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc440)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc441)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc441)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc690)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc442)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc443)
    cir.store %95, %5 : !s32i, !cir.ptr<!s32i> loc(#loc691)
    cir.br ^bb5 loc(#loc362)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc362)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc692)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc448)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc449)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc449)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc693)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc694)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc451)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc452)
    cir.br ^bb39 loc(#loc447)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc447)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc695)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc455)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc456)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc456)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc696)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc697)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc458)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc459)
    cir.br ^bb43 loc(#loc454)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc454)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc360)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc356)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc356)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc698)
  ^bb48:  // pred: ^bb47
    %108 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc520)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc462)
    %110 = cir.cast(int_to_bool, %109 : !s32i), !cir.bool loc(#loc462)
    cir.brcond %110 ^bb49, ^bb55 loc(#loc699)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc700)
  ^bb50:  // pred: ^bb49
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc466)
    %112 = cir.const #cir.int<0> : !s32i loc(#loc467)
    %113 = cir.cmp(ne, %111, %112) : !s32i, !cir.bool loc(#loc701)
    cir.brcond %113 ^bb51, ^bb52 loc(#loc702)
  ^bb51:  // pred: ^bb50
    %114 = cir.const #cir.int<100> : !s32i loc(#loc471)
    %115 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc472)
    %116 = cir.binop(rem, %114, %115) : !s32i loc(#loc703)
    cir.call @printIntLine(%116) : (!s32i) -> () loc(#loc473)
    cir.br ^bb53 loc(#loc469)
  ^bb52:  // pred: ^bb50
    %117 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc474)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc474)
    cir.call @printLine(%118) : (!cir.ptr<!s8i>) -> () loc(#loc475)
    cir.br ^bb53 loc(#loc465)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc465)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc461)
  ^bb55:  // 2 preds: ^bb48, ^bb54
    cir.br ^bb56 loc(#loc461)
  ^bb56:  // pred: ^bb55
    cir.return loc(#loc339)
  } loc(#loc650)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc705)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc480)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc481)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc706)
    cir.br ^bb1 loc(#loc707)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc595)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc485)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc485)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc708)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc489)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc489)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc490)
    cir.br ^bb4 loc(#loc487)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<7> : !s32i loc(#loc491)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc709)
    cir.br ^bb4 loc(#loc484)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc484)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc710)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc520)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc495)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc495)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc711)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.int<100> : !s32i loc(#loc497)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc498)
    %14 = cir.binop(rem, %12, %13) : !s32i loc(#loc712)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc499)
    cir.br ^bb8 loc(#loc494)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc494)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc477)
  } loc(#loc704)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc714)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc504)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc505)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc715)
    cir.br ^bb1 loc(#loc716)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc520)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc509)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc509)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc717)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<7> : !s32i loc(#loc511)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc718)
    cir.br ^bb3 loc(#loc508)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc508)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc719)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc520)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc515)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc515)
    cir.brcond %9 ^bb6, ^bb7 loc(#loc720)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<100> : !s32i loc(#loc517)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc518)
    %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc721)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc519)
    cir.br ^bb7 loc(#loc514)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc514)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc501)
  } loc(#loc713)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":44:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":126:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":56:13)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":56:17)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":57:13)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":57:32)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":58:13)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":58:35)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":59:13)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":59:35)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":60:13)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":60:45)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":46:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":46:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":48:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":48:12)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":48:5)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":49:5)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":120:5)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":49:8)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":50:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":51:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":119:9)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":61:13)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":104:21)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":104:20)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":71:39)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":71:48)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":71:61)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":71:32)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":71:17)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":71:72)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":72:17)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":75:17)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":72:21)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":72:37)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":73:17)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":74:21)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":76:24)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":76:25)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":76:34)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":76:37)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":76:51)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":76:17)
#loc65 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":76:52)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":77:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":77:17)
#loc69 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":78:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":78:17)
#loc73 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":79:42)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":79:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":79:17)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":79:50)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":80:17)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":83:17)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":80:26)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":80:58)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":80:59)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":80:68)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":80:82)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":80:21)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":80:88)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":81:17)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":82:21)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":84:17)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":87:17)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":84:28)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":84:42)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":84:21)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":84:61)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":85:17)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":86:21)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":88:39)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":88:53)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":88:59)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":88:32)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":88:17)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":88:63)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":89:17)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":92:17)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":89:21)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":89:37)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":90:17)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":91:21)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":94:35)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":94:49)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":94:62)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":94:80)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":94:83)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":94:30)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":94:17)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":94:84)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":95:17)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":98:17)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":95:21)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":95:35)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":95:51)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":95:65)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":96:17)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":97:21)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":100:43)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":100:29)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":100:17)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":102:29)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":102:24)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":102:17)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":102:40)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":105:13)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":108:13)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":105:17)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":105:33)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":106:13)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":107:30)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":107:17)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":109:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":112:13)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":109:17)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":109:33)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":110:13)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":111:30)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":111:17)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":121:5)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":125:5)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":121:8)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":122:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":124:22)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":124:28)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":124:9)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":362:1)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":368:1)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":364:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":364:14)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":365:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":365:14)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":366:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":366:14)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":367:5)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":367:14)
#loc164 = loc("/usr/include/stdlib.h":575:1)
#loc165 = loc("/usr/include/stdlib.h":575:41)
#loc166 = loc("/usr/include/time.h":76:1)
#loc167 = loc("/usr/include/time.h":76:38)
#loc168 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc169 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc170 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":384:15)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":386:15)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":389:15)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":391:15)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":379:1)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":394:1)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":380:1)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":382:27)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":382:22)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":382:5)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":384:5)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":385:5)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":385:61)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":386:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":389:5)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":390:5)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":390:60)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":391:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":393:12)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":393:5)
#loc194 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc195 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":213:19)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":224:23)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":133:1)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":227:1)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":145:13)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":145:17)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":146:13)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":146:32)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":147:13)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":147:35)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":148:13)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":148:35)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":149:13)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":149:45)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":135:5)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":135:9)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":137:13)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":137:12)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":137:5)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":138:5)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":209:5)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":138:8)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":139:5)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":140:9)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":208:9)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":150:13)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":193:21)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":193:20)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":160:39)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":160:48)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":160:61)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":160:32)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":160:17)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":160:72)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":161:17)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":164:17)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":161:21)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":161:37)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":162:17)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":163:21)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":165:24)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":165:25)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":165:34)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":165:37)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":165:51)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":165:17)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":165:52)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":166:38)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":166:17)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":167:43)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":167:17)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":168:42)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":168:36)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":168:17)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":168:50)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":169:17)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":172:17)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":169:26)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":169:58)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":169:59)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":169:68)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":169:82)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":169:21)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":169:88)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":170:17)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":171:21)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":173:17)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":176:17)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":173:28)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":173:42)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":173:21)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":173:61)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":174:17)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":175:21)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":177:39)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":177:53)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":177:59)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":177:32)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":177:17)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":177:63)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":178:17)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":181:17)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":178:21)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":178:37)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":179:17)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":180:21)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":183:35)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":183:49)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":183:62)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":183:80)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":183:83)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":183:30)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":183:17)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":183:84)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":184:17)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":187:17)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":184:21)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":184:35)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":184:51)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":184:65)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":185:17)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":186:21)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":189:43)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":189:29)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":189:17)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":191:29)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":191:24)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":191:17)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":191:40)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":194:13)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":197:13)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":194:17)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":194:33)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":195:13)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":196:30)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":196:17)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":198:13)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":201:13)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":198:17)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":198:33)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":199:13)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":200:30)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":200:17)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":210:5)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":226:5)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":210:8)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":211:5)
#loc324 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":214:5)
#loc325 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":216:5)
#loc326 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":213:9)
#loc327 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":218:9)
#loc328 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":225:9)
#loc329 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":218:13)
#loc330 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":218:21)
#loc331 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":219:9)
#loc332 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":221:9)
#loc333 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":223:9)
#loc334 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":220:26)
#loc335 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":220:32)
#loc336 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":220:13)
#loc337 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":224:13)
#loc338 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":230:1)
#loc339 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":319:1)
#loc340 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":242:13)
#loc341 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":242:17)
#loc342 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":243:13)
#loc343 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":243:32)
#loc344 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":244:13)
#loc345 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":244:35)
#loc346 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":245:13)
#loc347 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":245:35)
#loc348 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":246:13)
#loc349 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":246:45)
#loc350 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":232:5)
#loc351 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":232:9)
#loc352 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":234:13)
#loc353 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":234:12)
#loc354 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":234:5)
#loc355 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":235:5)
#loc356 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":306:5)
#loc357 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":235:8)
#loc358 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":236:5)
#loc359 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":237:9)
#loc360 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":305:9)
#loc361 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":247:13)
#loc362 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":290:21)
#loc363 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":290:20)
#loc364 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":257:39)
#loc365 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":257:48)
#loc366 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":257:61)
#loc367 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":257:32)
#loc368 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":257:17)
#loc369 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":257:72)
#loc370 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":258:17)
#loc371 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":261:17)
#loc372 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":258:21)
#loc373 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":258:37)
#loc374 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":259:17)
#loc375 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":260:21)
#loc376 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":262:24)
#loc377 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":262:25)
#loc378 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":262:34)
#loc379 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":262:37)
#loc380 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":262:51)
#loc381 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":262:17)
#loc382 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":262:52)
#loc383 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":263:38)
#loc384 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":263:17)
#loc385 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":264:43)
#loc386 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":264:17)
#loc387 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":265:42)
#loc388 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":265:36)
#loc389 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":265:17)
#loc390 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":265:50)
#loc391 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":266:17)
#loc392 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":269:17)
#loc393 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":266:26)
#loc394 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":266:58)
#loc395 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":266:59)
#loc396 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":266:68)
#loc397 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":266:82)
#loc398 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":266:21)
#loc399 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":266:88)
#loc400 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":267:17)
#loc401 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":268:21)
#loc402 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":270:17)
#loc403 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":273:17)
#loc404 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":270:28)
#loc405 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":270:42)
#loc406 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":270:21)
#loc407 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":270:61)
#loc408 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":271:17)
#loc409 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":272:21)
#loc410 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":274:39)
#loc411 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":274:53)
#loc412 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":274:59)
#loc413 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":274:32)
#loc414 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":274:17)
#loc415 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":274:63)
#loc416 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":275:17)
#loc417 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":278:17)
#loc418 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":275:21)
#loc419 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":275:37)
#loc420 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":276:17)
#loc421 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":277:21)
#loc422 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":280:35)
#loc423 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":280:49)
#loc424 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":280:62)
#loc425 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":280:80)
#loc426 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":280:83)
#loc427 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":280:30)
#loc428 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":280:17)
#loc429 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":280:84)
#loc430 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":281:17)
#loc431 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":284:17)
#loc432 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":281:21)
#loc433 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":281:35)
#loc435 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":281:51)
#loc436 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":281:65)
#loc437 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":282:17)
#loc438 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":283:21)
#loc439 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":286:43)
#loc440 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":286:29)
#loc441 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":286:17)
#loc442 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":288:29)
#loc443 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":288:24)
#loc444 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":288:17)
#loc445 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":288:40)
#loc446 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":291:13)
#loc447 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":294:13)
#loc448 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":291:17)
#loc449 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":291:33)
#loc450 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":292:13)
#loc451 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":293:30)
#loc452 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":293:17)
#loc453 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":295:13)
#loc454 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":298:13)
#loc455 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":295:17)
#loc456 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":295:33)
#loc457 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":296:13)
#loc458 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":297:30)
#loc459 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":297:17)
#loc460 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":307:5)
#loc461 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":318:5)
#loc462 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":307:8)
#loc463 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":308:5)
#loc464 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":310:9)
#loc465 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":317:9)
#loc466 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":310:13)
#loc467 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":310:21)
#loc468 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":311:9)
#loc469 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":313:9)
#loc470 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":315:9)
#loc471 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":312:26)
#loc472 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":312:32)
#loc473 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":312:13)
#loc474 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":316:23)
#loc475 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":316:13)
#loc476 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":322:1)
#loc477 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":342:1)
#loc478 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":324:5)
#loc479 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":324:9)
#loc480 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":326:13)
#loc481 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":326:12)
#loc482 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":326:5)
#loc483 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":327:5)
#loc484 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":336:5)
#loc485 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":327:8)
#loc486 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":328:5)
#loc487 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":331:5)
#loc488 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":333:5)
#loc489 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":330:19)
#loc490 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":330:9)
#loc491 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":335:16)
#loc492 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":335:9)
#loc493 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":337:5)
#loc494 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":341:5)
#loc495 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":337:8)
#loc496 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":338:5)
#loc497 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":340:22)
#loc498 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":340:28)
#loc499 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":340:9)
#loc500 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":345:1)
#loc501 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":360:1)
#loc502 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":347:5)
#loc503 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":347:9)
#loc504 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":349:13)
#loc505 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":349:12)
#loc506 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":349:5)
#loc507 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":350:5)
#loc508 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":354:5)
#loc509 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":350:8)
#loc510 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":351:5)
#loc511 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":353:16)
#loc512 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":353:9)
#loc513 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":355:5)
#loc514 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":359:5)
#loc515 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":355:8)
#loc516 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":356:5)
#loc517 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":358:22)
#loc518 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":358:28)
#loc519 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_09.c":358:9)
#loc520 = loc(fused[#loc1, #loc2])
#loc521 = loc(fused[#loc3, #loc4])
#loc522 = loc(fused[#loc5, #loc6])
#loc523 = loc(fused[#loc7, #loc8])
#loc524 = loc(fused[#loc9, #loc10])
#loc525 = loc(fused[#loc11, #loc12])
#loc526 = loc(fused[#loc13, #loc14])
#loc527 = loc(fused[#loc15, #loc16])
#loc528 = loc(fused[#loc17, #loc18])
#loc529 = loc(fused[#loc19, #loc20])
#loc530 = loc(fused[#loc21, #loc22])
#loc531 = loc(fused[#loc23, #loc24])
#loc532 = loc(fused[#loc25, #loc26])
#loc533 = loc(fused[#loc27, #loc28])
#loc534 = loc(fused[#loc29, #loc30])
#loc535 = loc(fused[#loc31, #loc32])
#loc536 = loc(fused[#loc33, #loc34])
#loc537 = loc(fused[#loc37, #loc35])
#loc538 = loc(fused[#loc38, #loc39])
#loc539 = loc(fused[#loc41, #loc39])
#loc540 = loc(fused[#loc42, #loc43])
#loc541 = loc(fused[#loc44, #loc45])
#loc542 = loc(fused[#loc51, #loc52])
#loc543 = loc(fused[#loc53, #loc54])
#loc544 = loc(fused[#loc55, #loc56])
#loc545 = loc(fused[#loc57, #loc54])
#loc546 = loc(fused[#loc59, #loc60])
#loc547 = loc(fused[#loc62, #loc63])
#loc548 = loc(fused[#loc64, #loc65])
#loc549 = loc(fused[#loc68, #loc66])
#loc550 = loc(fused[#loc72, #loc69])
#loc551 = loc(fused[#loc76, #loc77])
#loc552 = loc(fused[#loc78, #loc79])
#loc553 = loc(fused[#loc81, #loc82])
#loc554 = loc(fused[#loc83, #loc84])
#loc555 = loc(fused[#loc85, #loc86])
#loc556 = loc(fused[#loc87, #loc79])
#loc557 = loc(fused[#loc89, #loc90])
#loc558 = loc(fused[#loc93, #loc94])
#loc559 = loc(fused[#loc95, #loc90])
#loc560 = loc(fused[#loc101, #loc102])
#loc561 = loc(fused[#loc103, #loc104])
#loc562 = loc(fused[#loc105, #loc106])
#loc563 = loc(fused[#loc107, #loc104])
#loc564 = loc(fused[#loc111, #loc112])
#loc565 = loc(fused[#loc115, #loc116])
#loc566 = loc(fused[#loc117, #loc118])
#loc567 = loc(fused[#loc119, #loc120])
#loc568 = loc(fused[#loc122, #loc123])
#loc569 = loc(fused[#loc124, #loc118])
#loc570 = loc(fused[#loc128, #loc126])
#loc571 = loc(fused[#loc131, #loc132])
#loc572 = loc(fused[#loc133, #loc134])
#loc573 = loc(fused[#loc135, #loc136])
#loc574 = loc(fused[#loc137, #loc134])
#loc575 = loc(fused[#loc140, #loc141])
#loc576 = loc(fused[#loc142, #loc143])
#loc577 = loc(fused[#loc144, #loc141])
#loc578 = loc(fused[#loc147, #loc148])
#loc579 = loc(fused[#loc150, #loc148])
#loc580 = loc(fused[#loc151, #loc152])
#loc581 = loc(fused[#loc154, #loc155])
#loc582 = loc(fused[#loc156, #loc157])
#loc583 = loc(fused[#loc158, #loc159])
#loc584 = loc(fused[#loc160, #loc161])
#loc585 = loc(fused[#loc162, #loc163])
#loc586 = loc(fused[#loc164, #loc165])
#loc587 = loc(fused[#loc166, #loc167])
#loc588 = loc(fused[#loc168, #loc169])
#loc589 = loc(fused[#loc174, #loc175])
#loc592 = loc(fused[#loc185, #loc186])
#loc593 = loc(fused[#loc189, #loc190])
#loc594 = loc(fused[#loc193, #loc192])
#loc595 = loc(fused[#loc194, #loc195])
#loc596 = loc(fused[#loc198, #loc199])
#loc597 = loc(fused[#loc200, #loc201])
#loc598 = loc(fused[#loc202, #loc203])
#loc599 = loc(fused[#loc204, #loc205])
#loc600 = loc(fused[#loc206, #loc207])
#loc601 = loc(fused[#loc208, #loc209])
#loc602 = loc(fused[#loc210, #loc211])
#loc603 = loc(fused[#loc214, #loc212])
#loc604 = loc(fused[#loc215, #loc216])
#loc605 = loc(fused[#loc218, #loc216])
#loc606 = loc(fused[#loc219, #loc220])
#loc607 = loc(fused[#loc221, #loc222])
#loc608 = loc(fused[#loc228, #loc229])
#loc609 = loc(fused[#loc230, #loc231])
#loc610 = loc(fused[#loc232, #loc233])
#loc611 = loc(fused[#loc234, #loc231])
#loc612 = loc(fused[#loc236, #loc237])
#loc613 = loc(fused[#loc239, #loc240])
#loc614 = loc(fused[#loc241, #loc242])
#loc615 = loc(fused[#loc244, #loc243])
#loc616 = loc(fused[#loc246, #loc245])
#loc617 = loc(fused[#loc249, #loc250])
#loc618 = loc(fused[#loc251, #loc252])
#loc619 = loc(fused[#loc254, #loc255])
#loc620 = loc(fused[#loc256, #loc257])
#loc621 = loc(fused[#loc258, #loc259])
#loc622 = loc(fused[#loc260, #loc252])
#loc623 = loc(fused[#loc262, #loc263])
#loc624 = loc(fused[#loc266, #loc267])
#loc625 = loc(fused[#loc268, #loc263])
#loc626 = loc(fused[#loc274, #loc275])
#loc627 = loc(fused[#loc276, #loc277])
#loc628 = loc(fused[#loc278, #loc279])
#loc629 = loc(fused[#loc280, #loc277])
#loc630 = loc(fused[#loc284, #loc285])
#loc631 = loc(fused[#loc288, #loc289])
#loc632 = loc(fused[#loc290, #loc291])
#loc633 = loc(fused[#loc292, #loc293])
#loc634 = loc(fused[#loc295, #loc296])
#loc635 = loc(fused[#loc297, #loc291])
#loc636 = loc(fused[#loc301, #loc299])
#loc637 = loc(fused[#loc304, #loc305])
#loc638 = loc(fused[#loc306, #loc307])
#loc639 = loc(fused[#loc308, #loc309])
#loc640 = loc(fused[#loc310, #loc307])
#loc641 = loc(fused[#loc313, #loc314])
#loc642 = loc(fused[#loc315, #loc316])
#loc643 = loc(fused[#loc317, #loc314])
#loc644 = loc(fused[#loc320, #loc321])
#loc645 = loc(fused[#loc323, #loc324, #loc325, #loc321])
#loc646 = loc(fused[#loc327, #loc328])
#loc647 = loc(fused[#loc329, #loc330])
#loc648 = loc(fused[#loc331, #loc332, #loc333, #loc328])
#loc649 = loc(fused[#loc334, #loc335])
#loc650 = loc(fused[#loc338, #loc339])
#loc651 = loc(fused[#loc340, #loc341])
#loc652 = loc(fused[#loc342, #loc343])
#loc653 = loc(fused[#loc344, #loc345])
#loc654 = loc(fused[#loc346, #loc347])
#loc655 = loc(fused[#loc348, #loc349])
#loc656 = loc(fused[#loc350, #loc351])
#loc657 = loc(fused[#loc354, #loc352])
#loc658 = loc(fused[#loc355, #loc356])
#loc659 = loc(fused[#loc358, #loc356])
#loc660 = loc(fused[#loc359, #loc360])
#loc661 = loc(fused[#loc361, #loc362])
#loc662 = loc(fused[#loc368, #loc369])
#loc663 = loc(fused[#loc370, #loc371])
#loc664 = loc(fused[#loc372, #loc373])
#loc665 = loc(fused[#loc374, #loc371])
#loc666 = loc(fused[#loc376, #loc377])
#loc667 = loc(fused[#loc379, #loc380])
#loc668 = loc(fused[#loc381, #loc382])
#loc669 = loc(fused[#loc384, #loc383])
#loc670 = loc(fused[#loc386, #loc385])
#loc671 = loc(fused[#loc389, #loc390])
#loc672 = loc(fused[#loc391, #loc392])
#loc673 = loc(fused[#loc394, #loc395])
#loc674 = loc(fused[#loc396, #loc397])
#loc675 = loc(fused[#loc398, #loc399])
#loc676 = loc(fused[#loc400, #loc392])
#loc677 = loc(fused[#loc402, #loc403])
#loc678 = loc(fused[#loc406, #loc407])
#loc679 = loc(fused[#loc408, #loc403])
#loc680 = loc(fused[#loc414, #loc415])
#loc681 = loc(fused[#loc416, #loc417])
#loc682 = loc(fused[#loc418, #loc419])
#loc683 = loc(fused[#loc420, #loc417])
#loc684 = loc(fused[#loc424, #loc425])
#loc685 = loc(fused[#loc428, #loc429])
#loc686 = loc(fused[#loc430, #loc431])
#loc687 = loc(fused[#loc432, #loc433])
#loc688 = loc(fused[#loc435, #loc436])
#loc689 = loc(fused[#loc437, #loc431])
#loc690 = loc(fused[#loc441, #loc439])
#loc691 = loc(fused[#loc444, #loc445])
#loc692 = loc(fused[#loc446, #loc447])
#loc693 = loc(fused[#loc448, #loc449])
#loc694 = loc(fused[#loc450, #loc447])
#loc695 = loc(fused[#loc453, #loc454])
#loc696 = loc(fused[#loc455, #loc456])
#loc697 = loc(fused[#loc457, #loc454])
#loc698 = loc(fused[#loc460, #loc461])
#loc699 = loc(fused[#loc463, #loc461])
#loc700 = loc(fused[#loc464, #loc465])
#loc701 = loc(fused[#loc466, #loc467])
#loc702 = loc(fused[#loc468, #loc469, #loc470, #loc465])
#loc703 = loc(fused[#loc471, #loc472])
#loc704 = loc(fused[#loc476, #loc477])
#loc705 = loc(fused[#loc478, #loc479])
#loc706 = loc(fused[#loc482, #loc480])
#loc707 = loc(fused[#loc483, #loc484])
#loc708 = loc(fused[#loc486, #loc487, #loc488, #loc484])
#loc709 = loc(fused[#loc492, #loc491])
#loc710 = loc(fused[#loc493, #loc494])
#loc711 = loc(fused[#loc496, #loc494])
#loc712 = loc(fused[#loc497, #loc498])
#loc713 = loc(fused[#loc500, #loc501])
#loc714 = loc(fused[#loc502, #loc503])
#loc715 = loc(fused[#loc506, #loc504])
#loc716 = loc(fused[#loc507, #loc508])
#loc717 = loc(fused[#loc510, #loc508])
#loc718 = loc(fused[#loc512, #loc511])
#loc719 = loc(fused[#loc513, #loc514])
#loc720 = loc(fused[#loc516, #loc514])
#loc721 = loc(fused[#loc517, #loc518])
