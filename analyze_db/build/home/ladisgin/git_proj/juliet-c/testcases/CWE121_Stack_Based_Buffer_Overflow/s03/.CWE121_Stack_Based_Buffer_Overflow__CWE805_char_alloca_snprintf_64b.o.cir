!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":29:82)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":29:89)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":50:86)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":50:93)
#loc72 = loc(fused[#loc8, #loc9])
#loc80 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc70)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc73)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc72)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc74)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc75)
    cir.store %arg0, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc16)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc13)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.store %5, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.store %7, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    cir.br ^bb1 loc(#loc76)
  ^bb1:  // pred: ^bb0
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %10 = cir.const #cir.int<67> : !s32i loc(#loc22)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc23)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc23)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc77)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc27)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc28)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc78)
    %22 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc31)
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc33)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    %29 = cir.call @snprintf(%23, %25, %27, %28) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc31)
    %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb2 loc(#loc20)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc7)
  } loc(#loc71)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc39, #loc40])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc81)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc80)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc82)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc83)
    cir.store %arg0, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc47)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc44)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
    cir.store %5, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc82)
    %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.store %7, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    cir.br ^bb1 loc(#loc84)
  ^bb1:  // pred: ^bb0
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
    %10 = cir.const #cir.int<67> : !s32i loc(#loc53)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc54)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc54)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc85)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc58)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc59)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc61)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc86)
    %22 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc62)
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc64)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc65)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc65)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    %29 = cir.call @snprintf(%23, %25, %27, %28) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc62)
    %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb2 loc(#loc51)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc38)
  } loc(#loc79)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":40:29)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":29:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":43:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":36:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":36:24)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":32:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":32:34)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":34:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":34:28)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":30:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":34:21)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":34:20)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":35:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":42:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":37:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":37:24)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":37:29)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":37:33)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":37:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":37:34)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":38:25)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":38:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":38:20)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":38:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":40:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":40:18)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":40:24)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":40:35)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":41:19)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":41:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":50:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":64:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":57:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":57:24)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":53:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":53:34)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":55:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":55:28)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":51:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":55:21)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":55:20)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":56:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":63:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":58:16)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":58:24)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":58:29)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":58:33)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":58:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":58:34)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":59:25)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":59:16)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":59:20)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":59:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":61:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":61:18)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":61:24)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":61:29)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":61:35)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":62:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_64b.c":62:9)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc4, #loc5])
#loc71 = loc(fused[#loc6, #loc7])
#loc73 = loc(fused[#loc10, #loc11])
#loc74 = loc(fused[#loc12, #loc13])
#loc75 = loc(fused[#loc14, #loc15])
#loc76 = loc(fused[#loc19, #loc20])
#loc77 = loc(fused[#loc25, #loc26])
#loc78 = loc(fused[#loc30, #loc27])
#loc79 = loc(fused[#loc37, #loc38])
#loc81 = loc(fused[#loc41, #loc42])
#loc82 = loc(fused[#loc43, #loc44])
#loc83 = loc(fused[#loc45, #loc46])
#loc84 = loc(fused[#loc50, #loc51])
#loc85 = loc(fused[#loc56, #loc57])
#loc86 = loc(fused[#loc61, #loc58])
