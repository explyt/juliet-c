!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc121)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc124)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc125)
  ^bb5:  // pred: ^bb4
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %8 = cir.const #cir.int<67> : !s32i loc(#loc22)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc23)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc23)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc27)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc28)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    %20 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc31)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %23 = cir.call @strcat(%21, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc118)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc42)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc134)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc137)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb4 loc(#loc57)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc60)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc63)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc138)
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc54)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc139)
  ^bb6:  // pred: ^bb5
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc67)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc68)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc68)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc140)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc72)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc73)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc75)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc141)
    %27 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc76)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
    %30 = cir.call @strcat(%28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb7 loc(#loc65)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc44)
  } loc(#loc131)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc148)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc95)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc98)
    cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc150)
  ^bb5:  // pred: ^bb4
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
    %13 = cir.const #cir.int<67> : !s32i loc(#loc102)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc103)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc103)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc151)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc107)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc108)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc152)
    %25 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc111)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
    %28 = cir.call @strcat(%26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb6 loc(#loc100)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc82)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_02.c":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE665_Improper_Initialization__char_cat_02.c":23:1)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_02.c":41:1)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_02.c":34:9)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_02.c":34:24)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_02.c":25:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_02.c":25:12)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_02.c":26:5)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_02.c":26:24)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_02.c":27:12)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_02.c":27:5)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_02.c":28:5)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_02.c":32:5)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_02.c":28:8)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_02.c":29:5)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_02.c":33:5)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_02.c":40:5)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_02.c":35:16)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_02.c":35:24)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_02.c":35:29)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_02.c":35:33)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_02.c":35:9)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_02.c":35:34)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_02.c":36:25)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_02.c":36:16)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_02.c":36:20)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_02.c":36:9)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_02.c":38:9)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_02.c":38:16)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_02.c":38:22)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_02.c":39:19)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_02.c":39:9)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_02.c":94:1)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_02.c":98:1)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_02.c":96:5)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_02.c":96:14)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_02.c":97:5)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_02.c":97:14)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_02.c":56:19)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_02.c":48:1)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_02.c":71:1)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_02.c":64:9)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_02.c":64:24)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_02.c":50:5)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_02.c":50:12)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_02.c":51:5)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_02.c":51:24)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_02.c":52:12)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_02.c":52:5)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_02.c":53:5)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_02.c":62:5)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_02.c":53:8)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_02.c":54:5)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_02.c":57:5)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_02.c":59:5)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_02.c":56:9)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_02.c":61:19)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_02.c":61:9)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_02.c":61:14)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_02.c":61:15)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_02.c":63:5)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_02.c":70:5)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_02.c":65:16)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_02.c":65:24)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_02.c":65:29)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_02.c":65:33)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_02.c":65:9)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_02.c":65:34)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_02.c":66:25)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_02.c":66:16)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_02.c":66:20)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_02.c":66:9)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_02.c":68:9)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_02.c":68:16)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_02.c":68:22)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_02.c":69:19)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_02.c":69:9)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_02.c":74:1)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_02.c":92:1)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_02.c":85:9)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_02.c":85:24)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_02.c":76:5)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_02.c":76:12)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_02.c":77:5)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_02.c":77:24)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_02.c":78:12)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_02.c":78:5)
#loc91 = loc("CWE665_Improper_Initialization__char_cat_02.c":79:5)
#loc92 = loc("CWE665_Improper_Initialization__char_cat_02.c":83:5)
#loc93 = loc("CWE665_Improper_Initialization__char_cat_02.c":79:8)
#loc94 = loc("CWE665_Improper_Initialization__char_cat_02.c":80:5)
#loc95 = loc("CWE665_Improper_Initialization__char_cat_02.c":82:19)
#loc96 = loc("CWE665_Improper_Initialization__char_cat_02.c":82:9)
#loc97 = loc("CWE665_Improper_Initialization__char_cat_02.c":82:14)
#loc98 = loc("CWE665_Improper_Initialization__char_cat_02.c":82:15)
#loc99 = loc("CWE665_Improper_Initialization__char_cat_02.c":84:5)
#loc100 = loc("CWE665_Improper_Initialization__char_cat_02.c":91:5)
#loc101 = loc("CWE665_Improper_Initialization__char_cat_02.c":86:16)
#loc102 = loc("CWE665_Improper_Initialization__char_cat_02.c":86:24)
#loc103 = loc("CWE665_Improper_Initialization__char_cat_02.c":86:29)
#loc104 = loc("CWE665_Improper_Initialization__char_cat_02.c":86:33)
#loc105 = loc("CWE665_Improper_Initialization__char_cat_02.c":86:9)
#loc106 = loc("CWE665_Improper_Initialization__char_cat_02.c":86:34)
#loc107 = loc("CWE665_Improper_Initialization__char_cat_02.c":87:25)
#loc108 = loc("CWE665_Improper_Initialization__char_cat_02.c":87:16)
#loc109 = loc("CWE665_Improper_Initialization__char_cat_02.c":87:20)
#loc110 = loc("CWE665_Improper_Initialization__char_cat_02.c":87:9)
#loc111 = loc("CWE665_Improper_Initialization__char_cat_02.c":89:9)
#loc112 = loc("CWE665_Improper_Initialization__char_cat_02.c":89:16)
#loc113 = loc("CWE665_Improper_Initialization__char_cat_02.c":89:22)
#loc114 = loc("CWE665_Improper_Initialization__char_cat_02.c":90:19)
#loc115 = loc("CWE665_Improper_Initialization__char_cat_02.c":90:9)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc9, #loc10])
#loc121 = loc(fused[#loc11, #loc12])
#loc122 = loc(fused[#loc14, #loc13])
#loc123 = loc(fused[#loc15, #loc16])
#loc124 = loc(fused[#loc18, #loc16])
#loc125 = loc(fused[#loc19, #loc20])
#loc126 = loc(fused[#loc25, #loc26])
#loc127 = loc(fused[#loc30, #loc27])
#loc128 = loc(fused[#loc36, #loc37])
#loc129 = loc(fused[#loc38, #loc39])
#loc130 = loc(fused[#loc40, #loc41])
#loc131 = loc(fused[#loc43, #loc44])
#loc132 = loc(fused[#loc45, #loc46])
#loc133 = loc(fused[#loc47, #loc48])
#loc134 = loc(fused[#loc49, #loc50])
#loc135 = loc(fused[#loc52, #loc51])
#loc136 = loc(fused[#loc53, #loc54])
#loc137 = loc(fused[#loc56, #loc57, #loc58, #loc54])
#loc138 = loc(fused[#loc61, #loc60])
#loc139 = loc(fused[#loc64, #loc65])
#loc140 = loc(fused[#loc70, #loc71])
#loc141 = loc(fused[#loc75, #loc72])
#loc142 = loc(fused[#loc81, #loc82])
#loc143 = loc(fused[#loc83, #loc84])
#loc144 = loc(fused[#loc85, #loc86])
#loc145 = loc(fused[#loc87, #loc88])
#loc146 = loc(fused[#loc90, #loc89])
#loc147 = loc(fused[#loc91, #loc92])
#loc148 = loc(fused[#loc94, #loc92])
#loc149 = loc(fused[#loc96, #loc95])
#loc150 = loc(fused[#loc99, #loc100])
#loc151 = loc(fused[#loc105, #loc106])
#loc152 = loc(fused[#loc110, #loc107])
