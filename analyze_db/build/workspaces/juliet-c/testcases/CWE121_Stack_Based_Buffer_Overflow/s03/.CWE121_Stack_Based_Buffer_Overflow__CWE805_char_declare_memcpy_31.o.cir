!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc103)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc106)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc107)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc13)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc16)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc109)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc111)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
      cir.scope {
        %13 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc114)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
        %16 = cir.const #cir.int<67> : !s32i loc(#loc28)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc29)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc29)
        cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc115)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc33)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc34)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc34)
        %26 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
        %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc36)
        cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc116)
        %28 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
        %30 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
        %32 = cir.const #cir.int<100> : !s32i loc(#loc39)
        %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc39)
        %34 = cir.const #cir.int<1> : !u64i loc(#loc117)
        %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc118)
        cir.libc.memcpy %35 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc119)
        %36 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc44)
        %38 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc46)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc46)
        %42 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc48)
        cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc120)
        %43 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      } loc(#loc113)
    } loc(#loc110)
    cir.return loc(#loc4)
  } loc(#loc104)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc121)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc125)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc126)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc65)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc68)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc128)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc130)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
      cir.scope {
        %13 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc133)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
        %16 = cir.const #cir.int<67> : !s32i loc(#loc80)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc81)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc81)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc81)
        cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc134)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc85)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc85)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc86)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc86)
        %26 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
        %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc88)
        cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc135)
        %28 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
        %30 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
        %32 = cir.const #cir.int<100> : !s32i loc(#loc91)
        %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc91)
        %34 = cir.const #cir.int<1> : !u64i loc(#loc136)
        %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc137)
        cir.libc.memcpy %35 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc138)
        %36 = cir.const #cir.int<0> : !s32i loc(#loc96)
        %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc96)
        %38 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc98)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc99)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc98)
        %42 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc100)
        cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc139)
        %43 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
        cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } loc(#loc132)
    } loc(#loc129)
    cir.return loc(#loc56)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":45:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":25:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":25:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":26:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":26:26)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":27:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":27:28)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":30:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":30:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":31:15)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":31:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":31:10)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":31:11)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":32:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":44:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":33:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":33:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":34:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":34:23)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":35:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":43:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":36:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":36:28)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":37:20)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":37:28)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":37:33)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":37:37)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":37:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":37:38)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":38:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":38:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":38:24)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":38:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":40:20)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":40:26)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":40:34)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":40:38)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":40:49)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":40:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":40:50)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":41:27)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":41:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":41:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":41:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":41:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":42:23)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":42:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":75:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":78:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":77:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":77:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":52:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":73:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":54:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":54:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":55:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":55:26)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":56:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":56:28)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":58:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":58:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":59:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":59:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":59:10)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":59:11)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":60:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":72:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":61:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":61:27)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":62:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":62:23)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":63:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":71:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":64:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":64:28)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":65:20)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":65:28)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":65:33)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":65:37)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":65:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":65:38)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":66:29)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":66:20)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":66:24)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":66:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":68:20)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":68:26)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":68:34)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":68:38)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":68:49)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":68:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":68:50)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":69:27)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":69:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":69:18)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":69:22)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":69:23)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":70:23)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_31.c":70:13)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc9, #loc10])
#loc108 = loc(fused[#loc12, #loc11])
#loc109 = loc(fused[#loc14, #loc13])
#loc110 = loc(fused[#loc17, #loc18])
#loc111 = loc(fused[#loc19, #loc20])
#loc112 = loc(fused[#loc21, #loc22])
#loc113 = loc(fused[#loc23, #loc24])
#loc114 = loc(fused[#loc25, #loc26])
#loc115 = loc(fused[#loc31, #loc32])
#loc116 = loc(fused[#loc36, #loc33])
#loc117 = loc(fused[#loc40, #loc41])
#loc118 = loc(fused[#loc39, #loc41])
#loc119 = loc(fused[#loc42, #loc43])
#loc120 = loc(fused[#loc45, #loc44])
#loc121 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc53, #loc54])
#loc123 = loc(fused[#loc55, #loc56])
#loc124 = loc(fused[#loc57, #loc58])
#loc125 = loc(fused[#loc59, #loc60])
#loc126 = loc(fused[#loc61, #loc62])
#loc127 = loc(fused[#loc64, #loc63])
#loc128 = loc(fused[#loc66, #loc65])
#loc129 = loc(fused[#loc69, #loc70])
#loc130 = loc(fused[#loc71, #loc72])
#loc131 = loc(fused[#loc73, #loc74])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc83, #loc84])
#loc135 = loc(fused[#loc88, #loc85])
#loc136 = loc(fused[#loc92, #loc93])
#loc137 = loc(fused[#loc91, #loc93])
#loc138 = loc(fused[#loc94, #loc95])
#loc139 = loc(fused[#loc97, #loc96])
