!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc42 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":119:10)
#loc43 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":119:14)
#loc44 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":119:20)
#loc45 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":119:32)
!ty_anon2E1_ = !cir.struct<struct "anon.1" {!s8i, !s8i, !s8i, !s8i} #cir.record.decl.ast>
#loc124 = loc(fused[#loc42, #loc43])
#loc125 = loc(fused[#loc44, #loc45])
!ty_anon2E0_ = !cir.struct<union "anon.0" {!ty_anon2E1_, !s64i}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc108)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_08_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc111)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc7)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc7)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !ty_anon2E0_, !cir.ptr<!ty_anon2E0_>, ["unionStructLong"] {alignment = 8 : i64} loc(#loc114)
          %4 = cir.const #cir.int<270544960> : !s32i loc(#loc14)
          %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc14)
          %6 = cir.get_member %3[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc15)
          cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc115)
          %7 = cir.const #cir.int<128> : !s32i loc(#loc17)
          %8 = cir.get_member %3[0] {name = "structChars"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!ty_anon2E1_> loc(#loc18)
          %9 = cir.get_member %8[3] {name = "charFourth"} : !cir.ptr<!ty_anon2E1_> -> !cir.ptr<!s8i> loc(#loc19)
          %10 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc20)
          %11 = cir.cast(integral, %10 : !s8i), !s32i loc(#loc20)
          %12 = cir.binop(or, %11, %7) : !s32i loc(#loc116)
          %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc116)
          cir.store %13, %9 : !s8i, !cir.ptr<!s8i> loc(#loc116)
          %14 = cir.get_member %3[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc15)
          %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc22)
          %16 = cir.cast(integral, %15 : !s64i), !s32i loc(#loc22)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc23)
        } loc(#loc113)
      } loc(#loc112)
    } loc(#loc110)
    cir.return loc(#loc4)
  } loc(#loc109)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc117)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc120)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc121)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc39)
  cir.func @main(%arg0: !s32i loc(fused[#loc42, #loc43]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc44, #loc45])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc46)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc48)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc48)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc49)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc36)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %8 = cir.get_global @CWE188_Reliance_on_Data_Memory_Layout__union_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call @CWE188_Reliance_on_Data_Memory_Layout__union_08_good() : () -> () loc(#loc51)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc37)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc38)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %13 = cir.get_global @CWE188_Reliance_on_Data_Memory_Layout__union_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call @CWE188_Reliance_on_Data_Memory_Layout__union_08_bad() : () -> () loc(#loc55)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.return %17 : !s32i loc(#loc128)
  } loc(#loc123)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc62)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.return %2 : !s32i loc(#loc130)
  } loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc64)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc133)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc69)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc69)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      } else {
        cir.scope {
          %3 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc136)
          %4 = cir.const #cir.int<270544960> : !s32i loc(#loc79)
          %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc79)
          cir.store %5, %3 : !s64i, !cir.ptr<!s64i> loc(#loc137)
          %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc81)
          %7 = cir.unary(minus, %6) : !s64i, !s64i loc(#loc81)
          %8 = cir.const #cir.int<1> : !s64i loc(#loc81)
          %9 = cir.binop(sub, %7, %8) nsw : !s64i loc(#loc81)
          %10 = cir.load %3 : !cir.ptr<!s64i>, !s64i loc(#loc82)
          %11 = cir.binop(or, %10, %9) : !s64i loc(#loc138)
          cir.store %11, %3 : !s64i, !cir.ptr<!s64i> loc(#loc138)
          %12 = cir.load %3 : !cir.ptr<!s64i>, !s64i loc(#loc84)
          %13 = cir.cast(integral, %12 : !s64i), !s32i loc(#loc84)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc85)
        } loc(#loc135)
      } loc(#loc134)
    } loc(#loc132)
    cir.return loc(#loc66)
  } loc(#loc131)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc87)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.return %2 : !s32i loc(#loc140)
  } loc(#loc139)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc143)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc94)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc94)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc146)
          %4 = cir.const #cir.int<270544960> : !s32i loc(#loc101)
          %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc101)
          cir.store %5, %3 : !s64i, !cir.ptr<!s64i> loc(#loc147)
          %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc103)
          %7 = cir.unary(minus, %6) : !s64i, !s64i loc(#loc103)
          %8 = cir.const #cir.int<1> : !s64i loc(#loc103)
          %9 = cir.binop(sub, %7, %8) nsw : !s64i loc(#loc103)
          %10 = cir.load %3 : !cir.ptr<!s64i>, !s64i loc(#loc104)
          %11 = cir.binop(or, %10, %9) : !s64i loc(#loc148)
          cir.store %11, %3 : !s64i, !cir.ptr<!s64i> loc(#loc148)
          %12 = cir.load %3 : !cir.ptr<!s64i>, !s64i loc(#loc106)
          %13 = cir.cast(integral, %12 : !s64i), !s32i loc(#loc106)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc107)
        } loc(#loc145)
      } loc(#loc144)
    } loc(#loc142)
    cir.return loc(#loc91)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":33:1)
#loc4 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":53:1)
#loc5 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":35:5)
#loc6 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":52:5)
#loc7 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":35:8)
#loc8 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":35:26)
#loc9 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":36:5)
#loc10 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":37:9)
#loc11 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":51:9)
#loc12 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":38:13)
#loc13 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":45:15)
#loc14 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":46:42)
#loc15 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":44:22)
#loc16 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":46:13)
#loc17 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":49:55)
#loc18 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":43:19)
#loc19 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":42:60)
#loc20 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":49:52)
#loc21 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":49:13)
#loc22 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":50:42)
#loc23 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":50:13)
#loc24 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":104:1)
#loc25 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":108:1)
#loc26 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":106:5)
#loc27 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":106:11)
#loc28 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":107:5)
#loc29 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":107:11)
#loc30 = loc("/usr/include/stdlib.h":575:1)
#loc31 = loc("/usr/include/stdlib.h":575:41)
#loc32 = loc("/usr/include/time.h":76:1)
#loc33 = loc("/usr/include/time.h":76:38)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":124:15)
#loc37 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":126:15)
#loc38 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":129:15)
#loc39 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":131:15)
#loc40 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":119:1)
#loc41 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":134:1)
#loc46 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":120:1)
#loc47 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":122:27)
#loc48 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":122:22)
#loc49 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":122:5)
#loc50 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":124:5)
#loc51 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":125:5)
#loc52 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":125:58)
#loc53 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":126:5)
#loc54 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":129:5)
#loc55 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":130:5)
#loc56 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":130:57)
#loc57 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":131:5)
#loc58 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":133:12)
#loc59 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":133:5)
#loc60 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":21:1)
#loc61 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":24:1)
#loc62 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":23:12)
#loc63 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":23:5)
#loc64 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":65:19)
#loc65 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":60:1)
#loc66 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":82:1)
#loc67 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":62:5)
#loc68 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":81:5)
#loc69 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":62:8)
#loc70 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":62:27)
#loc71 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":63:5)
#loc72 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":66:5)
#loc73 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":68:5)
#loc74 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":65:9)
#loc75 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":69:9)
#loc76 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":80:9)
#loc77 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":70:13)
#loc78 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":70:18)
#loc79 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":71:26)
#loc80 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":71:13)
#loc81 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":78:27)
#loc82 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":78:24)
#loc83 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":78:13)
#loc84 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":79:26)
#loc85 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":79:13)
#loc86 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":26:1)
#loc87 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":29:1)
#loc88 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":28:12)
#loc89 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":28:5)
#loc90 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":85:1)
#loc91 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":102:1)
#loc92 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":87:5)
#loc93 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":101:5)
#loc94 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":87:8)
#loc95 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":87:26)
#loc96 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":88:5)
#loc97 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":89:9)
#loc98 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":100:9)
#loc99 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":90:13)
#loc100 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":90:18)
#loc101 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":91:26)
#loc102 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":91:13)
#loc103 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":98:27)
#loc104 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":98:24)
#loc105 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":98:13)
#loc106 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":99:26)
#loc107 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":99:13)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc6])
#loc113 = loc(fused[#loc10, #loc11])
#loc114 = loc(fused[#loc12, #loc13])
#loc115 = loc(fused[#loc16, #loc14])
#loc116 = loc(fused[#loc21, #loc17])
#loc117 = loc(fused[#loc24, #loc25])
#loc118 = loc(fused[#loc26, #loc27])
#loc119 = loc(fused[#loc28, #loc29])
#loc120 = loc(fused[#loc30, #loc31])
#loc121 = loc(fused[#loc32, #loc33])
#loc122 = loc(fused[#loc34, #loc35])
#loc123 = loc(fused[#loc40, #loc41])
#loc126 = loc(fused[#loc51, #loc52])
#loc127 = loc(fused[#loc55, #loc56])
#loc128 = loc(fused[#loc59, #loc58])
#loc129 = loc(fused[#loc60, #loc61])
#loc130 = loc(fused[#loc63, #loc62])
#loc131 = loc(fused[#loc65, #loc66])
#loc132 = loc(fused[#loc67, #loc68])
#loc133 = loc(fused[#loc69, #loc70])
#loc134 = loc(fused[#loc71, #loc72, #loc73, #loc68])
#loc135 = loc(fused[#loc75, #loc76])
#loc136 = loc(fused[#loc77, #loc78])
#loc137 = loc(fused[#loc80, #loc79])
#loc138 = loc(fused[#loc83, #loc81])
#loc139 = loc(fused[#loc86, #loc87])
#loc140 = loc(fused[#loc89, #loc88])
#loc141 = loc(fused[#loc90, #loc91])
#loc142 = loc(fused[#loc92, #loc93])
#loc143 = loc(fused[#loc94, #loc95])
#loc144 = loc(fused[#loc96, #loc93])
#loc145 = loc(fused[#loc97, #loc98])
#loc146 = loc(fused[#loc99, #loc100])
#loc147 = loc(fused[#loc102, #loc101])
#loc148 = loc(fused[#loc105, #loc103])
