!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc100)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memmove_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc103)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc9)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc104)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc11)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc11)
    %7 = cir.ternary(%6, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc11)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc11)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc11)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc11)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc11)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc11)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc11)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc11)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc11)
      cir.yield %21 : !u32i loc(#loc11)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc11)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc11)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc11)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc11)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc11)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc11)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc11)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc11)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc11)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc11)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc11)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc11)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc11)
      cir.yield %25 : !u32i loc(#loc11)
    }) : (!cir.bool) -> !u32i loc(#loc11)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc11)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc11)
    cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc105)
    cir.scope {
      %10 = cir.alloca !s16i, !cir.ptr<!s16i>, ["dataCopy", init] {alignment = 2 : i64} loc(#loc107)
      %11 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc108)
      %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc16)
      cir.store %12, %10 : !s16i, !cir.ptr<!s16i> loc(#loc107)
      %13 = cir.load %10 : !cir.ptr<!s16i>, !s16i loc(#loc18)
      cir.store %13, %11 : !s16i, !cir.ptr<!s16i> loc(#loc108)
      cir.scope {
        %14 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc110)
        %15 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc111)
        %16 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc111)
        cir.store %16, %15 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc111)
        %17 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
        %19 = cir.const #cir.int<65> : !s32i loc(#loc26)
        %20 = cir.const #cir.int<100> : !s32i loc(#loc27)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc27)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc27)
        cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc112)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc31)
        %26 = cir.const #cir.int<100> : !s32i loc(#loc32)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc32)
        %29 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
        %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc34)
        cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc113)
        cir.scope {
          %32 = cir.load %11 : !cir.ptr<!s16i>, !s16i loc(#loc37)
          %33 = cir.cast(integral, %32 : !s16i), !s32i loc(#loc37)
          %34 = cir.const #cir.int<100> : !s32i loc(#loc38)
          %35 = cir.cmp(lt, %33, %34) : !s32i, !cir.bool loc(#loc115)
          cir.if %35 {
            %36 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
            %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
            %38 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
            %40 = cir.load %11 : !cir.ptr<!s16i>, !s16i loc(#loc42)
            %41 = cir.cast(integral, %40 : !s16i), !u64i loc(#loc42)
            cir.libc.memmove %41 bytes from %39 to %37 : !cir.ptr<!void>, !u64i loc(#loc117)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc45)
            %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc45)
            %44 = cir.load %11 : !cir.ptr<!s16i>, !s16i loc(#loc46)
            %45 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
            %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s16i), !cir.ptr<!s8i> loc(#loc47)
            cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc118)
          } loc(#loc116)
        } loc(#loc114)
        %31 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc49)
      } loc(#loc109)
    } loc(#loc106)
    cir.return loc(#loc6)
  } loc(#loc102)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memmove_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc120)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc119)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc122)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc58)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc123)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc60)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc60)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc124)
    cir.scope {
      %7 = cir.alloca !s16i, !cir.ptr<!s16i>, ["dataCopy", init] {alignment = 2 : i64} loc(#loc126)
      %8 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc127)
      %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc66)
      cir.store %9, %7 : !s16i, !cir.ptr<!s16i> loc(#loc126)
      %10 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc68)
      cir.store %10, %8 : !s16i, !cir.ptr<!s16i> loc(#loc127)
      cir.scope {
        %11 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc129)
        %12 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc130)
        %13 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc130)
        cir.store %13, %12 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc130)
        %14 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
        %16 = cir.const #cir.int<65> : !s32i loc(#loc76)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc77)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc77)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc77)
        cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc131)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc81)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc81)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc82)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc82)
        %26 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
        %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc84)
        cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc132)
        cir.scope {
          %29 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc87)
          %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc87)
          %31 = cir.const #cir.int<100> : !s32i loc(#loc88)
          %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc134)
          cir.if %32 {
            %33 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
            %35 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
            %37 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc92)
            %38 = cir.cast(integral, %37 : !s16i), !u64i loc(#loc92)
            cir.libc.memmove %38 bytes from %36 to %34 : !cir.ptr<!void>, !u64i loc(#loc136)
            %39 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc95)
            %41 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc96)
            %42 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
            %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s16i), !cir.ptr<!s8i> loc(#loc97)
            cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc137)
          } loc(#loc135)
        } loc(#loc133)
        %28 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
        cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc99)
      } loc(#loc128)
    } loc(#loc125)
    cir.return loc(#loc55)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":21:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":46:1)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":23:5)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":23:11)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":25:12)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":25:5)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":27:19)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":27:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":28:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":45:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":29:9)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":29:26)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":30:9)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":30:22)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":31:9)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":44:9)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":32:13)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":32:28)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":33:13)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":33:30)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":34:20)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":34:28)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":34:33)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":34:37)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":34:13)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":34:38)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":35:29)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":35:20)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":35:24)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":35:13)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":36:13)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":42:13)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":36:17)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":36:24)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":37:13)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":40:25)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":40:31)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":40:39)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":40:17)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":40:43)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":41:30)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":41:22)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":41:17)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":43:23)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":43:13)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":80:1)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":83:1)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":82:5)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":82:13)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":53:1)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":78:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":55:5)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":55:11)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":57:12)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":57:5)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":59:12)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":59:16)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":59:5)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":60:5)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":77:5)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":61:9)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":61:26)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":62:9)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":62:22)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":63:9)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":76:9)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":64:13)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":64:28)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":65:13)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":65:30)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":66:20)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":66:28)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":66:33)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":66:37)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":66:13)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":66:38)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":67:29)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":67:20)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":67:24)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":67:13)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":68:13)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":74:13)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":68:17)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":68:24)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":69:13)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":72:25)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":72:31)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":72:39)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":72:17)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":72:43)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":73:30)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":73:22)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":73:17)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":75:23)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_31.c":75:13)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc5, #loc6])
#loc103 = loc(fused[#loc7, #loc8])
#loc104 = loc(fused[#loc10, #loc9])
#loc105 = loc(fused[#loc12, #loc11])
#loc106 = loc(fused[#loc13, #loc14])
#loc107 = loc(fused[#loc15, #loc16])
#loc108 = loc(fused[#loc17, #loc18])
#loc109 = loc(fused[#loc19, #loc20])
#loc110 = loc(fused[#loc21, #loc22])
#loc111 = loc(fused[#loc23, #loc24])
#loc112 = loc(fused[#loc29, #loc30])
#loc113 = loc(fused[#loc34, #loc31])
#loc114 = loc(fused[#loc35, #loc36])
#loc115 = loc(fused[#loc37, #loc38])
#loc116 = loc(fused[#loc39, #loc36])
#loc117 = loc(fused[#loc43, #loc44])
#loc118 = loc(fused[#loc47, #loc45])
#loc119 = loc(fused[#loc50, #loc51])
#loc120 = loc(fused[#loc52, #loc53])
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc56, #loc57])
#loc123 = loc(fused[#loc59, #loc58])
#loc124 = loc(fused[#loc62, #loc61])
#loc125 = loc(fused[#loc63, #loc64])
#loc126 = loc(fused[#loc65, #loc66])
#loc127 = loc(fused[#loc67, #loc68])
#loc128 = loc(fused[#loc69, #loc70])
#loc129 = loc(fused[#loc71, #loc72])
#loc130 = loc(fused[#loc73, #loc74])
#loc131 = loc(fused[#loc79, #loc80])
#loc132 = loc(fused[#loc84, #loc81])
#loc133 = loc(fused[#loc85, #loc86])
#loc134 = loc(fused[#loc87, #loc88])
#loc135 = loc(fused[#loc89, #loc86])
#loc136 = loc(fused[#loc93, #loc94])
#loc137 = loc(fused[#loc97, #loc95])
