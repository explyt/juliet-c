!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_18L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc124)
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_183badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc125)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc126)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc127)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc16)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc131)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc125)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc134)
    %3 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_183badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc125)
    cir.copy %3 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc125)
    %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.goto "source" loc(#loc136)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc29)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc30)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc30)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc134)
    cir.scope {
      %8 = cir.const #cir.int<4096> : !s32i loc(#loc34)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc34)
      %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc35)
      %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc138)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc36)
      %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc139)
      cir.if %14 {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc41)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc42)
          %18 = cir.const #cir.int<4096> : !s32i loc(#loc43)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc43)
          %20 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc44)
          %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc142)
          %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc142)
          %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc128)
          %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
          %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc46)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc47)
          %27 = cir.cmp(ne, %25, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc143)
          cir.if %27 {
            %28 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc51)
            %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
            %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc51)
            cir.store %30, %2 : !u64i, !cir.ptr<!u64i> loc(#loc145)
            cir.scope {
              %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc57)
              %32 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc58)
              %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc147)
              %35 = cir.ternary(%34, true {
                %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                %37 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
                %38 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc62)
                %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc148)
                %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc63)
                %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc60)
                %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc60)
                %44 = cir.const #cir.int<10> : !s8i loc(#loc64)
                %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc64)
                %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc149)
                %47 = cir.ternary(%46, true {
                  %48 = cir.const #true loc(#loc59)
                  cir.yield %48 : !cir.bool loc(#loc59)
                }, false {
                  %48 = cir.const #false loc(#loc59)
                  cir.yield %48 : !cir.bool loc(#loc59)
                }) : (!cir.bool) -> !cir.bool loc(#loc59)
                cir.yield %47 : !cir.bool loc(#loc59)
              }, false {
                %36 = cir.const #false loc(#loc59)
                cir.yield %36 : !cir.bool loc(#loc59)
              }) : (!cir.bool) -> !cir.bool loc(#loc59)
              cir.if %35 {
                %36 = cir.const #cir.int<0> : !s8i loc(#loc66)
                %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc69)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc69)
                %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc151)
                %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                cir.store %36, %42 : !s8i, !cir.ptr<!s8i> loc(#loc152)
              } loc(#loc150)
            } loc(#loc146)
          } else {
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
            cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc71)
            %30 = cir.const #cir.int<0> : !s8i loc(#loc72)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc75)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc153)
          } loc(#loc144)
        } loc(#loc141)
      } loc(#loc140)
    } loc(#loc137)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc155)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc79)
      cir.store %9, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc155)
      %10 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc80)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc16)
      %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc16)
      %14 = cir.call @fopen(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc80)
      cir.store %14, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc156)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc87)
        %17 = cir.cmp(ne, %15, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc158)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
          %19 = cir.call @fclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc90)
        } loc(#loc159)
      } loc(#loc157)
    } loc(#loc154)
    cir.return loc(#loc20)
  } loc(#loc132)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc93)
  cir.func internal private @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc124)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_18L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc124)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc124)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.goto "source" loc(#loc164)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc102)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc103)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc93)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc93)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc166)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc108)
      cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
      %11 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc109)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc111)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc111)
      %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc109)
      cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc117)
        %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc169)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc119)
          %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc120)
        } loc(#loc170)
      } loc(#loc168)
    } loc(#loc165)
    cir.return loc(#loc95)
  } loc(#loc161)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_18L7goodG2BEv() : () -> () loc(#loc123)
    cir.return loc(#loc122)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":88:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":88:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":40:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":40:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":63:27)
#loc14 = loc("/usr/include/stdio.h":264:1)
#loc15 = loc("/usr/include/stdio.h":266:3)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":72:29)
#loc17 = loc("/usr/include/stdio.h":184:1)
#loc18 = loc("/usr/include/stdio.h":184:36)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":37:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":78:1)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":39:5)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":39:12)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":46:9)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":46:37)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":41:12)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":41:5)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":42:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":42:10)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":43:1)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":46:26)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":46:33)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":48:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":67:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":48:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":48:26)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":48:36)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":49:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":51:13)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":66:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":51:23)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":51:28)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":51:27)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":51:43)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":51:56)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":51:66)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":51:17)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":51:76)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":52:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":60:13)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":62:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":55:27)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":55:34)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":55:17)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":55:38)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":56:17)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":59:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":56:21)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":56:31)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":56:33)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":56:36)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":56:41)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":56:49)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":56:50)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":56:55)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":57:17)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":58:39)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":58:21)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":58:26)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":58:34)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":58:35)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":63:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":65:33)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":65:17)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":65:22)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":65:29)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":69:5)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":77:5)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":70:9)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":70:23)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":72:17)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":72:23)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":72:9)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":72:34)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":73:9)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":76:9)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":73:13)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":73:22)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":74:9)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":75:20)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":75:13)
#loc91 = loc("/usr/include/string.h":149:1)
#loc92 = loc("/usr/include/string.h":150:14)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":93:18)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":85:1)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":103:1)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":87:5)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":87:12)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":89:12)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":89:5)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":90:5)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":90:10)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":91:1)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":93:5)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":93:12)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":94:5)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":102:5)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":95:9)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":95:23)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":97:17)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":97:23)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":97:29)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":97:9)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":97:34)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":98:9)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":101:9)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":98:13)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":98:22)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":99:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":100:20)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":100:13)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":105:1)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":108:1)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_18.cpp":107:5)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc9, #loc10])
#loc129 = loc(fused[#loc11, #loc12])
#loc130 = loc(fused[#loc14, #loc15])
#loc131 = loc(fused[#loc17, #loc18])
#loc132 = loc(fused[#loc19, #loc20])
#loc133 = loc(fused[#loc21, #loc22])
#loc134 = loc(fused[#loc23, #loc24])
#loc135 = loc(fused[#loc26, #loc25])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc32, #loc33])
#loc138 = loc(fused[#loc34, #loc35])
#loc139 = loc(fused[#loc34, #loc36])
#loc140 = loc(fused[#loc37, #loc33])
#loc141 = loc(fused[#loc38, #loc39])
#loc142 = loc(fused[#loc43, #loc44])
#loc143 = loc(fused[#loc46, #loc47])
#loc144 = loc(fused[#loc48, #loc49, #loc50, #loc39])
#loc145 = loc(fused[#loc53, #loc54])
#loc146 = loc(fused[#loc55, #loc56])
#loc147 = loc(fused[#loc57, #loc58])
#loc148 = loc(fused[#loc61, #loc62])
#loc149 = loc(fused[#loc60, #loc64])
#loc150 = loc(fused[#loc65, #loc56])
#loc151 = loc(fused[#loc68, #loc69])
#loc152 = loc(fused[#loc67, #loc66])
#loc153 = loc(fused[#loc73, #loc72])
#loc154 = loc(fused[#loc76, #loc77])
#loc155 = loc(fused[#loc78, #loc79])
#loc156 = loc(fused[#loc82, #loc83])
#loc157 = loc(fused[#loc84, #loc85])
#loc158 = loc(fused[#loc86, #loc87])
#loc159 = loc(fused[#loc88, #loc85])
#loc160 = loc(fused[#loc91, #loc92])
#loc161 = loc(fused[#loc94, #loc95])
#loc162 = loc(fused[#loc96, #loc97])
#loc163 = loc(fused[#loc99, #loc98])
#loc164 = loc(fused[#loc100, #loc101])
#loc165 = loc(fused[#loc105, #loc106])
#loc166 = loc(fused[#loc107, #loc108])
#loc167 = loc(fused[#loc112, #loc113])
#loc168 = loc(fused[#loc114, #loc115])
#loc169 = loc(fused[#loc116, #loc117])
#loc170 = loc(fused[#loc118, #loc115])
#loc171 = loc(fused[#loc121, #loc122])
