!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc6 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @_ZZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_123badEvE10dataBuffer = #cir.zero : !ty_TwoIntsClass {alignment = 4 : i64} loc(#loc1)
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc93)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc94)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc6)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc6)
    cir.return loc(#loc6)
  } loc(#loc6)
  cir.func private @printIntLine(!s32i) loc(#loc95)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc96)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_123badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc98)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc99)
    cir.scope {
      %7 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc19)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc101)
      cir.if %8 {
        cir.scope {
          %9 = cir.get_global @_ZZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_123badEvE10dataBuffer : !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %11 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc104)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc29)
          %13 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc105)
          cir.store %9, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc106)
        } loc(#loc103)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc108)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc109)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc108)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc109)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc37)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc108)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc39)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc110)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc41)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc42)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc111)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc112)
        } loc(#loc107)
      } loc(#loc102)
    } loc(#loc100)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc47)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc48)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc49)
    cir.return loc(#loc12)
  } loc(#loc97)
  cir.func internal private @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_12L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc115)
    cir.scope {
      %7 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc58)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc117)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc120)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc121)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc120)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc121)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc66)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc120)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc68)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc122)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc70)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc123)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc72)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc124)
        } loc(#loc119)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc126)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc127)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc126)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc127)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc77)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc126)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc79)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc128)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc81)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc82)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc129)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc83)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc130)
        } loc(#loc125)
      } loc(#loc118)
    } loc(#loc116)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc87)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc88)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc88)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc89)
    cir.return loc(#loc51)
  } loc(#loc113)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_124goodEv() extra(#fn_attr2) {
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_12L7goodG2BEv() : () -> () loc(#loc92)
    cir.return loc(#loc91)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":34:33)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":26:1)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":53:1)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":28:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":28:20)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":29:12)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":29:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":30:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":49:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":30:8)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":30:33)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":31:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":39:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":41:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":32:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":38:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":35:33)
#loc27 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":35:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":36:33)
#loc30 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":36:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":37:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":37:21)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":42:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":48:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":44:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":44:45)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":44:41)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":45:34)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":45:13)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":46:34)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":46:13)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":47:20)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":47:13)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":50:18)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":50:24)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":50:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":52:12)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":26:6)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":61:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":88:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":63:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":63:20)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":64:12)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":64:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":65:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":84:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":65:8)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":65:33)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":66:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":74:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":76:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":67:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":73:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":69:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":69:45)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":69:41)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":70:34)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":70:13)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":71:34)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":71:13)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":72:20)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":72:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":77:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":83:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":79:13)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":79:45)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":79:41)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":80:34)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":80:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":81:34)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":81:13)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":82:20)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":82:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":85:18)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":85:24)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":85:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":87:12)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":61:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":90:1)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":93:1)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_12.cpp":92:5)
#loc93 = loc(fused[#loc2, #loc3])
#loc94 = loc(fused[#loc4, #loc5])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc9, #loc10])
#loc97 = loc(fused[#loc11, #loc12])
#loc98 = loc(fused[#loc13, #loc14])
#loc99 = loc(fused[#loc16, #loc15])
#loc100 = loc(fused[#loc17, #loc18])
#loc101 = loc(fused[#loc19, #loc20])
#loc102 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc103 = loc(fused[#loc24, #loc25])
#loc104 = loc(fused[#loc28, #loc26])
#loc105 = loc(fused[#loc31, #loc29])
#loc106 = loc(fused[#loc32, #loc33])
#loc107 = loc(fused[#loc34, #loc35])
#loc108 = loc(fused[#loc36, #loc37])
#loc109 = loc(fused[#loc38, #loc37])
#loc110 = loc(fused[#loc40, #loc39])
#loc111 = loc(fused[#loc42, #loc41])
#loc112 = loc(fused[#loc44, #loc43])
#loc113 = loc(fused[#loc50, #loc51])
#loc114 = loc(fused[#loc52, #loc53])
#loc115 = loc(fused[#loc55, #loc54])
#loc116 = loc(fused[#loc56, #loc57])
#loc117 = loc(fused[#loc58, #loc59])
#loc118 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc119 = loc(fused[#loc63, #loc64])
#loc120 = loc(fused[#loc65, #loc66])
#loc121 = loc(fused[#loc67, #loc66])
#loc122 = loc(fused[#loc69, #loc68])
#loc123 = loc(fused[#loc71, #loc70])
#loc124 = loc(fused[#loc73, #loc72])
#loc125 = loc(fused[#loc74, #loc75])
#loc126 = loc(fused[#loc76, #loc77])
#loc127 = loc(fused[#loc78, #loc77])
#loc128 = loc(fused[#loc80, #loc79])
#loc129 = loc(fused[#loc82, #loc81])
#loc130 = loc(fused[#loc84, #loc83])
#loc131 = loc(fused[#loc90, #loc91])
