!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc104)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc105)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fread_08_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc108)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc111)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc111)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc111)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
          %7 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc18)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc114)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc23)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
          %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc23)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc23)
          %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc105)
          %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
          %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc18)
        } loc(#loc110)
      } loc(#loc109)
    } loc(#loc107)
    cir.return loc(#loc6)
  } loc(#loc106)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fread_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc115)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc33)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc34)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.return %2 : !s32i loc(#loc119)
  } loc(#loc118)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc38)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc39)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc123)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc44)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc44)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc49)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc126)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc126)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc126)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
          cir.scope {
            %7 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc58)
            %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc129)
            %10 = cir.const #cir.int<1> : !u64i loc(#loc130)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc63)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc64)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc63)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc63)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc105)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
            %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc58)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc66)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc67)
            %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc66)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc66)
            %22 = cir.cmp(ne, %17, %21) : !u64i, !s32i loc(#loc131)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc68)
            cir.if %23 {
              %24 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc39)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc70)
            } loc(#loc132)
          } loc(#loc128)
        } loc(#loc125)
      } loc(#loc124)
    } loc(#loc122)
    cir.return loc(#loc41)
  } loc(#loc121)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.return %2 : !s32i loc(#loc134)
  } loc(#loc133)
  cir.func no_proto internal private  @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc137)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc79)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc79)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc140)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc140)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc140)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
          cir.scope {
            %7 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc90)
            %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
            %10 = cir.const #cir.int<1> : !u64i loc(#loc144)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc95)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc95)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc95)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc105)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
            %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc90)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc98)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc98)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc98)
            %22 = cir.cmp(ne, %17, %21) : !u64i, !s32i loc(#loc145)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc100)
            cir.if %23 {
              %24 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc102)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc103)
            } loc(#loc146)
          } loc(#loc142)
        } loc(#loc139)
      } loc(#loc138)
    } loc(#loc136)
    cir.return loc(#loc76)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":738:1)
#loc2 = loc("/usr/include/stdio.h":740:3)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":37:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":50:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":39:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":49:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":39:8)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":39:26)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":40:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":41:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":48:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":44:13)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":44:36)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":45:13)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":45:27)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":47:13)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":47:27)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":47:19)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":47:33)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":47:44)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":47:56)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":47:60)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":47:64)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":99:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":103:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":101:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":101:11)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":102:5)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":102:11)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":25:1)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":28:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":27:12)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":27:5)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":62:19)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":74:27)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":57:1)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":78:1)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":59:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":77:5)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":59:8)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":59:27)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":60:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":63:5)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":65:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":62:9)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":66:9)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":76:9)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":69:13)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":69:36)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":70:13)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":70:27)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:13)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":75:13)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:17)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:31)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:23)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:37)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:48)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:60)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:64)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:68)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:78)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:82)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":72:75)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":73:13)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":74:17)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":30:1)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":33:1)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":32:12)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":32:5)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":81:1)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":97:1)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":83:5)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":96:5)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":83:8)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":83:26)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":84:5)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":85:9)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":95:9)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":88:13)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":88:36)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":89:13)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":89:27)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:13)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":94:13)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:17)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:31)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:23)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:37)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:48)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:60)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:64)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:68)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:78)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:82)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":91:75)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":92:13)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":93:27)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_fread_08.c":93:17)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc3, #loc4])
#loc106 = loc(fused[#loc5, #loc6])
#loc107 = loc(fused[#loc7, #loc8])
#loc108 = loc(fused[#loc9, #loc10])
#loc109 = loc(fused[#loc11, #loc8])
#loc110 = loc(fused[#loc12, #loc13])
#loc111 = loc(fused[#loc14, #loc15])
#loc112 = loc(fused[#loc16, #loc17])
#loc113 = loc(fused[#loc20, #loc19])
#loc114 = loc(fused[#loc21, #loc22])
#loc115 = loc(fused[#loc26, #loc27])
#loc116 = loc(fused[#loc28, #loc29])
#loc117 = loc(fused[#loc30, #loc31])
#loc118 = loc(fused[#loc32, #loc33])
#loc119 = loc(fused[#loc35, #loc34])
#loc120 = loc(fused[#loc36, #loc37])
#loc121 = loc(fused[#loc40, #loc41])
#loc122 = loc(fused[#loc42, #loc43])
#loc123 = loc(fused[#loc44, #loc45])
#loc124 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc125 = loc(fused[#loc50, #loc51])
#loc126 = loc(fused[#loc52, #loc53])
#loc127 = loc(fused[#loc54, #loc55])
#loc128 = loc(fused[#loc56, #loc57])
#loc129 = loc(fused[#loc60, #loc59])
#loc130 = loc(fused[#loc61, #loc62])
#loc131 = loc(fused[#loc58, #loc67])
#loc132 = loc(fused[#loc69, #loc57])
#loc133 = loc(fused[#loc71, #loc72])
#loc134 = loc(fused[#loc74, #loc73])
#loc135 = loc(fused[#loc75, #loc76])
#loc136 = loc(fused[#loc77, #loc78])
#loc137 = loc(fused[#loc79, #loc80])
#loc138 = loc(fused[#loc81, #loc78])
#loc139 = loc(fused[#loc82, #loc83])
#loc140 = loc(fused[#loc84, #loc85])
#loc141 = loc(fused[#loc86, #loc87])
#loc142 = loc(fused[#loc88, #loc89])
#loc143 = loc(fused[#loc92, #loc91])
#loc144 = loc(fused[#loc93, #loc94])
#loc145 = loc(fused[#loc90, #loc99])
#loc146 = loc(fused[#loc101, #loc89])
