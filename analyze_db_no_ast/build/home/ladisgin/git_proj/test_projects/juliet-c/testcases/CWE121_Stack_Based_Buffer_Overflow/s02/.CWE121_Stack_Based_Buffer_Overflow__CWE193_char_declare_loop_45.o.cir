!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc117)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc120)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc121)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc13)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc16)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc123)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %10 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    %11 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc4)
  } loc(#loc118)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc22)
  } loc(#loc126)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc128)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.func no_proto internal private  @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc133)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc134)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc135)
      %6 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc133)
      cir.store %6, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc133)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc40)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc41)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc40)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc136)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc46)
        cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc138)
        cir.for : cond {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc48)
          %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc49)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc50)
          %17 = cir.binop(add, %14, %16) : !u64i loc(#loc139)
          %18 = cir.cmp(lt, %13, %17) : !u64i, !s32i loc(#loc140)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc51)
          cir.condition(%19) loc(#loc51)
        } body {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc53)
            %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc54)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc54)
            %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc54)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc56)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc57)
            cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc142)
          } loc(#loc141)
          cir.yield loc(#loc45)
        } step {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc59)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc60)
          cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc143)
          cir.yield loc(#loc137)
        } loc(#loc137)
      } loc(#loc137)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    } loc(#loc132)
    cir.return loc(#loc30)
  } loc(#loc130)
  cir.global "private"  internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc144)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc147)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc148)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc75)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc78)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc150)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %10 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %11 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    cir.return loc(#loc66)
  } loc(#loc145)
  cir.func no_proto internal private  @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc156)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc158)
      %6 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc156)
      cir.store %6, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc156)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc94)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc95)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc94)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc159)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc100)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc100)
        cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc161)
        cir.for : cond {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc102)
          %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc103)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc104)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc104)
          %17 = cir.binop(add, %14, %16) : !u64i loc(#loc162)
          %18 = cir.cmp(lt, %13, %17) : !u64i, !s32i loc(#loc163)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc105)
          cir.condition(%19) loc(#loc105)
        } body {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc107)
            %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc108)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc108)
            %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc108)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
            %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc110)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc111)
            cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc165)
          } loc(#loc164)
          cir.yield loc(#loc99)
        } step {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc113)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc114)
          cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc166)
          cir.yield loc(#loc160)
        } loc(#loc160)
      } loc(#loc160)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    } loc(#loc155)
    cir.return loc(#loc84)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":26:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":26:15)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":48:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":59:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":50:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":50:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":51:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":51:26)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":52:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":52:29)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":55:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":55:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":56:15)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":56:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":56:10)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":56:11)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":57:79)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":57:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":58:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":58:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":96:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":99:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":98:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":98:13)
#loc25 = loc("/usr/include/string.h":407:1)
#loc26 = loc("/usr/include/string.h":408:33)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":31:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":46:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":33:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":33:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":34:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":45:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":35:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":35:29)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":36:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":36:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":36:19)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":37:21)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":37:28)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":37:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":37:34)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":43:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:14)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:21)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:25)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:37)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:23)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":41:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:30)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:23)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:18)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:19)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:31)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:41)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:40)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":44:19)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":44:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":27:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":27:15)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":83:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":94:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":85:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":85:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":86:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":86:26)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":87:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":87:29)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":90:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":90:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":91:15)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":91:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":91:10)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":91:11)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":92:83)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":92:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":93:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":93:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":66:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":81:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":68:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":68:19)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":69:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":80:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":70:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":70:29)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":71:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":71:16)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":71:19)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":72:21)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":72:28)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":72:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":72:34)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":78:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:18)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:21)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:25)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:37)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:23)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":76:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:30)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:23)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:18)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:19)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:31)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:41)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:40)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":79:19)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":79:9)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc12, #loc11])
#loc123 = loc(fused[#loc14, #loc13])
#loc124 = loc(fused[#loc18, #loc17])
#loc125 = loc(fused[#loc19, #loc20])
#loc126 = loc(fused[#loc21, #loc22])
#loc127 = loc(fused[#loc23, #loc24])
#loc128 = loc(fused[#loc25, #loc26])
#loc129 = loc(fused[#loc27, #loc28])
#loc130 = loc(fused[#loc29, #loc30])
#loc131 = loc(fused[#loc31, #loc32])
#loc132 = loc(fused[#loc33, #loc34])
#loc133 = loc(fused[#loc35, #loc36])
#loc134 = loc(fused[#loc37, #loc38])
#loc135 = loc(fused[#loc37, #loc39])
#loc136 = loc(fused[#loc42, #loc43])
#loc137 = loc(fused[#loc44, #loc45])
#loc138 = loc(fused[#loc47, #loc46])
#loc139 = loc(fused[#loc49, #loc50])
#loc140 = loc(fused[#loc48, #loc50])
#loc141 = loc(fused[#loc52, #loc45])
#loc142 = loc(fused[#loc55, #loc58])
#loc143 = loc(fused[#loc60, #loc59])
#loc144 = loc(fused[#loc63, #loc64])
#loc145 = loc(fused[#loc65, #loc66])
#loc146 = loc(fused[#loc67, #loc68])
#loc147 = loc(fused[#loc69, #loc70])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc74, #loc73])
#loc150 = loc(fused[#loc76, #loc75])
#loc151 = loc(fused[#loc80, #loc79])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc83, #loc84])
#loc154 = loc(fused[#loc85, #loc86])
#loc155 = loc(fused[#loc87, #loc88])
#loc156 = loc(fused[#loc89, #loc90])
#loc157 = loc(fused[#loc91, #loc92])
#loc158 = loc(fused[#loc91, #loc93])
#loc159 = loc(fused[#loc96, #loc97])
#loc160 = loc(fused[#loc98, #loc99])
#loc161 = loc(fused[#loc101, #loc100])
#loc162 = loc(fused[#loc103, #loc104])
#loc163 = loc(fused[#loc102, #loc104])
#loc164 = loc(fused[#loc106, #loc99])
#loc165 = loc(fused[#loc109, #loc112])
#loc166 = loc(fused[#loc114, #loc113])
