!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc339)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc340)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc341)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc342)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc343)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc344)
  cir.func private @close(!s32i) -> !s32i loc(#loc345)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc346)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc347)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc348)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc22)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc349)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc350)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc352)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc32)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc353)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc355)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc356)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc357)
      %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc358)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc41)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc357)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc48)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc49)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc50)
            %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
            cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc361)
            cir.scope {
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc56)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc57)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc57)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc363)
              cir.if %57 {
                cir.break loc(#loc59)
              } loc(#loc364)
            } loc(#loc362)
            %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc365)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc366)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc367)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc67)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc67)
            %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc368)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc70)
            %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc369)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc75)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc75)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc76)
            %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc370)
            cir.scope {
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %55 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc372)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc373)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc373)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc87)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc88)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc88)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc374)
              cir.if %61 {
                cir.break loc(#loc90)
              } loc(#loc375)
            } loc(#loc371)
            %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc91)
            %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc92)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc93)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc93)
            %33 = cir.const #cir.int<8> : !u64i loc(#loc93)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc93)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc93)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc93)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc93)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc94)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc376)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc96)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc96)
            cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc377)
            cir.scope {
              %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc102)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc379)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc103)
                cir.yield %59 : !cir.bool loc(#loc103)
              }, false {
                %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc105)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc380)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc103)
                  cir.yield %63 : !cir.bool loc(#loc103)
                }, false {
                  %63 = cir.const #false loc(#loc103)
                  cir.yield %63 : !cir.bool loc(#loc103)
                }) : (!cir.bool) -> !cir.bool loc(#loc103)
                cir.yield %62 : !cir.bool loc(#loc103)
              }) : (!cir.bool) -> !cir.bool loc(#loc103)
              cir.if %58 {
                cir.break loc(#loc107)
              } loc(#loc381)
            } loc(#loc378)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc108)
            %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc108)
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc110)
            %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc110)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc382)
            %49 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc111)
            %50 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc112)
            %51 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
            %52 = cir.const #cir.int<0> : !s32i loc(#loc114)
            %53 = cir.call @strtoul(%50, %51, %52) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc111)
            cir.store %53, %0 : !u64i, !cir.ptr<!u64i> loc(#loc383)
          } loc(#loc360)
          cir.yield loc(#loc45)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc117)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc117)
          cir.condition(%10) loc(#loc117)
        } loc(#loc359)
      } loc(#loc359)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc120)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc121)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc385)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc123)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc124)
        } loc(#loc386)
      } loc(#loc384)
    } loc(#loc354)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc388)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc131)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc390)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc391)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc137)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc138)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc393)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc394)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc137)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc395)
          cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc396)
          cir.scope {
            %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc146)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc398)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc148)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc149)
              %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc150)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
            } loc(#loc399)
          } loc(#loc397)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc151)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
          %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc22)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc22)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc154)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc155)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
        } else {
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc27)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc27)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc157)
        } loc(#loc392)
      } loc(#loc389)
    } loc(#loc387)
    cir.return loc(#loc29)
  } loc(#loc351)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc401)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc160)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc402)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc162)
    cir.return loc(#loc159)
  } loc(#loc400)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc404)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc168)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc405)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc170)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc170)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc406)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc408)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc178)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc410)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc411)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc184)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc185)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc413)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc414)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc415)
          cir.store %14, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc416)
          cir.scope {
            %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc193)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc418)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc195)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc196)
              %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc197)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc195)
            } loc(#loc419)
          } loc(#loc417)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc198)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc200)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc200)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc198)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc202)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc203)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc203)
        } else {
          %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc205)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc205)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc206)
        } loc(#loc412)
      } loc(#loc409)
    } loc(#loc407)
    cir.return loc(#loc165)
  } loc(#loc403)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc207)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc421)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc212)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc212)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc422)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc424)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc425)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc426)
      %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc427)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc221)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc221)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc426)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc228)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc229)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc230)
            %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc231)
            cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc430)
            cir.scope {
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc236)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc237)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc237)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc432)
              cir.if %57 {
                cir.break loc(#loc239)
              } loc(#loc433)
            } loc(#loc431)
            %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc434)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc242)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc435)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc436)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc247)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc247)
            %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc437)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc249)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc249)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc250)
            %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc438)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc253)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc253)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc254)
            %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc439)
            cir.scope {
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc259)
              %55 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc441)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc442)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc442)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc264)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc265)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc265)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc443)
              cir.if %61 {
                cir.break loc(#loc267)
              } loc(#loc444)
            } loc(#loc440)
            %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc268)
            %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc269)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc269)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc270)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc270)
            %33 = cir.const #cir.int<8> : !u64i loc(#loc270)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc270)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc270)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc270)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc270)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc271)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc271)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc445)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc272)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc273)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc273)
            cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc446)
            cir.scope {
              %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc278)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc279)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc279)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc448)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc280)
                cir.yield %59 : !cir.bool loc(#loc280)
              }, false {
                %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc281)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc282)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc449)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc280)
                  cir.yield %63 : !cir.bool loc(#loc280)
                }, false {
                  %63 = cir.const #false loc(#loc280)
                  cir.yield %63 : !cir.bool loc(#loc280)
                }) : (!cir.bool) -> !cir.bool loc(#loc280)
                cir.yield %62 : !cir.bool loc(#loc280)
              }) : (!cir.bool) -> !cir.bool loc(#loc280)
              cir.if %58 {
                cir.break loc(#loc284)
              } loc(#loc450)
            } loc(#loc447)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc285)
            %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc285)
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc286)
            %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc287)
            %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc287)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc451)
            %49 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc288)
            %50 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc289)
            %51 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
            %52 = cir.const #cir.int<0> : !s32i loc(#loc291)
            %53 = cir.call @strtoul(%50, %51, %52) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc288)
            cir.store %53, %0 : !u64i, !cir.ptr<!u64i> loc(#loc452)
          } loc(#loc429)
          cir.yield loc(#loc225)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc294)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc294)
          cir.condition(%10) loc(#loc294)
        } loc(#loc428)
      } loc(#loc428)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc297)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc298)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc298)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc454)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc300)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc301)
        } loc(#loc455)
      } loc(#loc453)
    } loc(#loc423)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc457)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc308)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc459)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc460)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc312)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc313)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc313)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc461)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc311)
            cir.yield %13 : !cir.bool loc(#loc311)
          }, false {
            %13 = cir.const #false loc(#loc311)
            cir.yield %13 : !cir.bool loc(#loc311)
          }) : (!cir.bool) -> !cir.bool loc(#loc311)
          cir.yield %12 : !cir.bool loc(#loc311)
        }, false {
          %8 = cir.const #false loc(#loc311)
          cir.yield %8 : !cir.bool loc(#loc311)
        }) : (!cir.bool) -> !cir.bool loc(#loc311)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc317)
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc318)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc463)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc464)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc317)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc465)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc466)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc325)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc326)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc326)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc468)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc328)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc329)
              %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc330)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc328)
            } loc(#loc469)
          } loc(#loc467)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc331)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc332)
          %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc333)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc333)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc331)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc334)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc335)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc336)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc337)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc337)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc336)
        } else {
          %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc207)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc207)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc338)
        } loc(#loc462)
      } loc(#loc458)
    } loc(#loc456)
    cir.return loc(#loc209)
  } loc(#loc420)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":81:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":181:1)
#loc13 = loc("/usr/include/stdlib.h":183:14)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("/usr/include/string.h":141:1)
#loc21 = loc("/usr/include/string.h":142:14)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":121:30)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":127:23)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":50:1)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":130:1)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":52:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":52:12)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":54:12)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":54:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":55:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":110:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":60:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":60:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":61:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":61:28)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":62:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":62:32)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":63:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":63:41)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":64:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":99:17)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":65:9)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":98:9)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:36)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:45)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:58)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:29)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:69)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":75:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":78:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":75:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":75:34)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":76:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":77:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:20)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:21)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:30)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:33)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:47)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:48)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":80:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":80:13)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":81:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":81:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":81:59)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":82:38)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":82:32)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":82:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":82:46)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:13)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":86:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:25)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:58)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:59)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:68)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:82)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:17)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:88)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":84:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":85:17)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:31)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:46)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:59)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:77)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:80)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:26)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:81)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":93:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:31)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:44)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:47)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:61)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":91:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":92:17)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":95:39)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":95:25)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":95:13)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:20)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:28)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:41)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:47)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:13)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:48)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":99:16)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":100:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":103:9)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":100:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":100:30)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":101:9)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":102:26)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":102:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":111:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":129:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":112:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":112:16)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":116:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":128:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":116:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":116:20)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":116:39)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":117:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":124:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":126:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:32)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:39)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:44)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:55)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:56)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:45)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:29)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:35)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:36)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:42)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:41)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":121:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":121:20)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":122:23)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":122:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":123:13)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":123:18)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":127:13)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":248:1)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":252:1)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":250:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":250:13)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":251:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":251:13)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":137:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":163:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":139:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":139:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":141:12)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":141:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":143:12)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":143:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":144:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":162:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":145:9)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":145:16)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":149:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":161:9)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":149:13)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":149:20)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":149:39)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":150:9)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":157:9)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":159:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:32)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:39)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:44)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:55)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:56)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:45)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:17)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:29)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:35)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:36)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:42)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:41)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":154:13)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":154:20)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":154:30)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":155:23)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":155:13)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":156:13)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":156:18)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":160:23)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":160:13)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":243:23)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":166:1)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":246:1)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":168:5)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":168:12)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":170:12)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":170:5)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":171:5)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":226:5)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":176:9)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":176:13)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":177:9)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":177:28)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":178:9)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":178:32)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":179:9)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":179:41)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":180:9)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":215:17)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":181:9)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":214:9)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:36)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:45)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:58)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:29)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:13)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:69)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":191:13)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":194:13)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":191:17)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":191:34)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":192:13)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":193:17)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:20)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:21)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:30)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:33)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:47)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:13)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:48)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":196:34)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":196:13)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":197:49)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":197:39)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":197:13)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":197:59)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":198:38)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":198:32)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":198:13)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":198:46)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:13)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":202:13)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:25)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:58)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:59)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:68)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:82)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:17)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:88)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":200:13)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":201:17)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:31)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:46)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:59)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:77)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:80)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:26)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:13)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:81)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:13)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":209:13)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:17)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:31)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:44)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:47)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:61)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":207:13)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":208:17)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":211:39)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":211:25)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":211:13)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:20)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:28)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:41)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:47)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:13)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:48)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":215:16)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":216:9)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":219:9)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":216:13)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":216:30)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":217:9)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":218:26)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":218:13)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":227:5)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":245:5)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":228:9)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":228:16)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:9)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":244:9)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:13)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:20)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:39)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:41)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:44)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:51)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":233:9)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":240:9)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":242:9)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:32)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:39)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:44)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:55)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:56)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:13)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:13)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:45)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:17)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:29)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:35)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:36)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:42)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:41)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":237:13)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":237:20)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":237:30)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":238:23)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":238:13)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":239:13)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":239:18)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":243:13)
#loc339 = loc(fused[#loc1, #loc2])
#loc340 = loc(fused[#loc3, #loc4])
#loc341 = loc(fused[#loc6, #loc7])
#loc342 = loc(fused[#loc8, #loc9])
#loc343 = loc(fused[#loc10, #loc11])
#loc344 = loc(fused[#loc12, #loc13])
#loc345 = loc(fused[#loc14, #loc15])
#loc346 = loc(fused[#loc16, #loc17])
#loc347 = loc(fused[#loc18, #loc19])
#loc348 = loc(fused[#loc20, #loc21])
#loc349 = loc(fused[#loc23, #loc24])
#loc350 = loc(fused[#loc25, #loc26])
#loc351 = loc(fused[#loc28, #loc29])
#loc352 = loc(fused[#loc30, #loc31])
#loc353 = loc(fused[#loc33, #loc32])
#loc354 = loc(fused[#loc34, #loc35])
#loc355 = loc(fused[#loc36, #loc37])
#loc356 = loc(fused[#loc38, #loc39])
#loc357 = loc(fused[#loc40, #loc41])
#loc358 = loc(fused[#loc42, #loc43])
#loc359 = loc(fused[#loc44, #loc45])
#loc360 = loc(fused[#loc46, #loc47])
#loc361 = loc(fused[#loc52, #loc53])
#loc362 = loc(fused[#loc54, #loc55])
#loc363 = loc(fused[#loc56, #loc57])
#loc364 = loc(fused[#loc58, #loc55])
#loc365 = loc(fused[#loc60, #loc61])
#loc366 = loc(fused[#loc63, #loc64])
#loc367 = loc(fused[#loc65, #loc66])
#loc368 = loc(fused[#loc69, #loc67])
#loc369 = loc(fused[#loc73, #loc74])
#loc370 = loc(fused[#loc78, #loc79])
#loc371 = loc(fused[#loc80, #loc81])
#loc372 = loc(fused[#loc83, #loc84])
#loc373 = loc(fused[#loc85, #loc86])
#loc374 = loc(fused[#loc87, #loc88])
#loc375 = loc(fused[#loc89, #loc81])
#loc376 = loc(fused[#loc93, #loc94])
#loc377 = loc(fused[#loc97, #loc98])
#loc378 = loc(fused[#loc99, #loc100])
#loc379 = loc(fused[#loc101, #loc102])
#loc380 = loc(fused[#loc104, #loc105])
#loc381 = loc(fused[#loc106, #loc100])
#loc382 = loc(fused[#loc110, #loc108])
#loc383 = loc(fused[#loc115, #loc116])
#loc384 = loc(fused[#loc118, #loc119])
#loc385 = loc(fused[#loc120, #loc121])
#loc386 = loc(fused[#loc122, #loc119])
#loc387 = loc(fused[#loc125, #loc126])
#loc388 = loc(fused[#loc127, #loc128])
#loc389 = loc(fused[#loc129, #loc130])
#loc390 = loc(fused[#loc132, #loc133])
#loc391 = loc(fused[#loc131, #loc133])
#loc392 = loc(fused[#loc134, #loc135, #loc136, #loc130])
#loc393 = loc(fused[#loc139, #loc140])
#loc394 = loc(fused[#loc138, #loc140])
#loc395 = loc(fused[#loc137, #loc141])
#loc396 = loc(fused[#loc142, #loc141])
#loc397 = loc(fused[#loc143, #loc144])
#loc398 = loc(fused[#loc145, #loc146])
#loc399 = loc(fused[#loc147, #loc144])
#loc400 = loc(fused[#loc158, #loc159])
#loc401 = loc(fused[#loc160, #loc161])
#loc402 = loc(fused[#loc162, #loc163])
#loc403 = loc(fused[#loc164, #loc165])
#loc404 = loc(fused[#loc166, #loc167])
#loc405 = loc(fused[#loc169, #loc168])
#loc406 = loc(fused[#loc171, #loc170])
#loc407 = loc(fused[#loc172, #loc173])
#loc408 = loc(fused[#loc174, #loc175])
#loc409 = loc(fused[#loc176, #loc177])
#loc410 = loc(fused[#loc179, #loc180])
#loc411 = loc(fused[#loc178, #loc180])
#loc412 = loc(fused[#loc181, #loc182, #loc183, #loc177])
#loc413 = loc(fused[#loc186, #loc187])
#loc414 = loc(fused[#loc185, #loc187])
#loc415 = loc(fused[#loc184, #loc188])
#loc416 = loc(fused[#loc189, #loc188])
#loc417 = loc(fused[#loc190, #loc191])
#loc418 = loc(fused[#loc192, #loc193])
#loc419 = loc(fused[#loc194, #loc191])
#loc420 = loc(fused[#loc208, #loc209])
#loc421 = loc(fused[#loc210, #loc211])
#loc422 = loc(fused[#loc213, #loc212])
#loc423 = loc(fused[#loc214, #loc215])
#loc424 = loc(fused[#loc216, #loc217])
#loc425 = loc(fused[#loc218, #loc219])
#loc426 = loc(fused[#loc220, #loc221])
#loc427 = loc(fused[#loc222, #loc223])
#loc428 = loc(fused[#loc224, #loc225])
#loc429 = loc(fused[#loc226, #loc227])
#loc430 = loc(fused[#loc232, #loc233])
#loc431 = loc(fused[#loc234, #loc235])
#loc432 = loc(fused[#loc236, #loc237])
#loc433 = loc(fused[#loc238, #loc235])
#loc434 = loc(fused[#loc240, #loc241])
#loc435 = loc(fused[#loc243, #loc244])
#loc436 = loc(fused[#loc245, #loc246])
#loc437 = loc(fused[#loc248, #loc247])
#loc438 = loc(fused[#loc251, #loc252])
#loc439 = loc(fused[#loc255, #loc256])
#loc440 = loc(fused[#loc257, #loc258])
#loc441 = loc(fused[#loc260, #loc261])
#loc442 = loc(fused[#loc262, #loc263])
#loc443 = loc(fused[#loc264, #loc265])
#loc444 = loc(fused[#loc266, #loc258])
#loc445 = loc(fused[#loc270, #loc271])
#loc446 = loc(fused[#loc274, #loc275])
#loc447 = loc(fused[#loc276, #loc277])
#loc448 = loc(fused[#loc278, #loc279])
#loc449 = loc(fused[#loc281, #loc282])
#loc450 = loc(fused[#loc283, #loc277])
#loc451 = loc(fused[#loc287, #loc285])
#loc452 = loc(fused[#loc292, #loc293])
#loc453 = loc(fused[#loc295, #loc296])
#loc454 = loc(fused[#loc297, #loc298])
#loc455 = loc(fused[#loc299, #loc296])
#loc456 = loc(fused[#loc302, #loc303])
#loc457 = loc(fused[#loc304, #loc305])
#loc458 = loc(fused[#loc306, #loc307])
#loc459 = loc(fused[#loc309, #loc310])
#loc460 = loc(fused[#loc308, #loc310])
#loc461 = loc(fused[#loc312, #loc313])
#loc462 = loc(fused[#loc314, #loc315, #loc316, #loc307])
#loc463 = loc(fused[#loc319, #loc320])
#loc464 = loc(fused[#loc318, #loc320])
#loc465 = loc(fused[#loc317, #loc321])
#loc466 = loc(fused[#loc322, #loc321])
#loc467 = loc(fused[#loc323, #loc324])
#loc468 = loc(fused[#loc325, #loc326])
#loc469 = loc(fused[#loc327, #loc324])
