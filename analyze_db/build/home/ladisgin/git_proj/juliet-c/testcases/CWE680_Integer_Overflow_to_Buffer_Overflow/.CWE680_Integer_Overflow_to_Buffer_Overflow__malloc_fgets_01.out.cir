!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":100:10)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":100:14)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":100:20)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":100:32)
#loc203 = loc(fused[#loc98, #loc99])
#loc204 = loc(fused[#loc100, #loc101])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc165)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc166)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc169)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc170)
  cir.func private @printIntLine(!s32i) loc(#loc171)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc172)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc174)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc176)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc29)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc174)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc174)
    cir.br ^bb2 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc36)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc36)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc36)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc36)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc36)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc36)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc36)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc182)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc44)
    cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb5 loc(#loc41)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.br ^bb5 loc(#loc34)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc32)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc184)
  ^bb8:  // pred: ^bb7
    %26 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc50)
    %27 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc51)
    %29 = cir.const #cir.int<4> : !u64i loc(#loc185)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc186)
    %31 = cir.call @malloc(%30) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc187)
    cir.store %32, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc188)
    cir.br ^bb9 loc(#loc189)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc59)
    %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s32i>, !cir.bool loc(#loc190)
    cir.brcond %36 ^bb10, ^bb11 loc(#loc191)
  ^bb10:  // pred: ^bb9
    %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc63)
    cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb11 loc(#loc57)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc57)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc192)
  ^bb13:  // pred: ^bb12
    %40 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc66)
    cir.store %41, %1 : !u64i, !cir.ptr<!u64i> loc(#loc193)
    cir.br ^bb14 loc(#loc192)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %43 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc69)
    %45 = cir.cmp(lt, %42, %44) : !u64i, !cir.bool loc(#loc194)
    cir.brcond %45 ^bb15, ^bb19 loc(#loc70)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc195)
  ^bb16:  // pred: ^bb15
    %46 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
    %48 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !u64i), !cir.ptr<!s32i> loc(#loc75)
    cir.store %46, %49 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb17 loc(#loc65)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc65)
  ^bb18:  // pred: ^bb17
    %50 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %51 = cir.unary(inc, %50) : !u64i, !u64i loc(#loc77)
    cir.store %51, %1 : !u64i, !cir.ptr<!u64i> loc(#loc197)
    cir.br ^bb14 loc(#loc192)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc65)
  ^bb20:  // pred: ^bb19
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    %53 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s32i>, %53 : !s32i), !cir.ptr<!s32i> loc(#loc80)
    %55 = cir.load %54 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    cir.call @printIntLine(%55) : (!s32i) -> () loc(#loc81)
    %56 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc82)
    cir.call @free(%57) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    cir.br ^bb21 loc(#loc49)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc19)
  } loc(#loc173)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    cir.return loc(#loc85)
  } loc(#loc198)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc200)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc95)
  cir.func @main(%arg0: !s32i loc(fused[#loc98, #loc99]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc100, #loc101])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc97)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc102)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc103)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc104)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc104)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc105)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc92)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01_good() : () -> () loc(#loc107)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc93)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc94)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01_bad() : () -> () loc(#loc111)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc95)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc114)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.return %17 : !s32i loc(#loc207)
  } loc(#loc202)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc211)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc125)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc127)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc131)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc132)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc215)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc216)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc217)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc218)
    cir.br ^bb2 loc(#loc219)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc140)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc220)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc221)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc144)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc222)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc147)
    cir.store %21, %0 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    cir.br ^bb7 loc(#loc222)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc150)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc224)
    cir.brcond %25 ^bb8, ^bb12 loc(#loc151)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc225)
  ^bb9:  // pred: ^bb8
    %26 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc156)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb10 loc(#loc146)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc146)
  ^bb11:  // pred: ^bb10
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc157)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc158)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.br ^bb7 loc(#loc222)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc146)
  ^bb13:  // pred: ^bb12
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc161)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc162)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc163)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
    cir.br ^bb14 loc(#loc130)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc117)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":38:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":23:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":55:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":29:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":29:45)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":42:9)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":42:16)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":43:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":43:14)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":25:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":25:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":27:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":27:12)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":27:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":28:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":40:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":31:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":39:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":31:19)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":31:32)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":31:49)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":31:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":31:59)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":32:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":35:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":37:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":34:25)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":34:20)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":34:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":34:36)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":38:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":41:5)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":54:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":46:28)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":46:35)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":46:42)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":46:52)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":46:53)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":46:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":47:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":47:43)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":47:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":47:27)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":47:33)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":47:34)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":47:40)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":47:39)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":48:9)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":51:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":48:18)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":48:14)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":48:21)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":48:33)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":48:23)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":49:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":50:29)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":50:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":50:24)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":50:25)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":48:40)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":48:39)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":52:22)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":52:33)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":52:34)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":52:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":53:14)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":53:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":85:1)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":88:1)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":87:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":87:13)
#loc88 = loc("/usr/include/stdlib.h":575:1)
#loc89 = loc("/usr/include/stdlib.h":575:41)
#loc90 = loc("/usr/include/time.h":76:1)
#loc91 = loc("/usr/include/time.h":76:38)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":105:15)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":107:15)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":110:15)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":112:15)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":100:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":115:1)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":101:1)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":103:27)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":103:22)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":103:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":105:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":106:5)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":106:70)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":107:5)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":110:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":111:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":111:69)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":112:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":114:12)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":114:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":62:1)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":83:1)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":70:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":70:16)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":71:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":71:14)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":64:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":64:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":66:13)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":66:12)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":66:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":68:12)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":68:5)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":69:5)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":82:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":74:28)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":74:35)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":74:42)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":74:52)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":74:53)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":74:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":75:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":75:43)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":75:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":75:27)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":75:33)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":75:34)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":75:40)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":75:39)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":76:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":79:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":76:18)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":76:14)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":76:21)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":76:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":76:23)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":77:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":78:29)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":78:13)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":78:24)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":78:25)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":76:40)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":76:39)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":80:22)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":80:33)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":80:34)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":80:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":81:14)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_01.c":81:9)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc3, #loc4])
#loc167 = loc(fused[#loc5, #loc6])
#loc168 = loc(fused[#loc7, #loc8])
#loc169 = loc(fused[#loc10, #loc11])
#loc170 = loc(fused[#loc12, #loc13])
#loc171 = loc(fused[#loc14, #loc15])
#loc172 = loc(fused[#loc16, #loc17])
#loc173 = loc(fused[#loc18, #loc19])
#loc174 = loc(fused[#loc20, #loc21])
#loc175 = loc(fused[#loc22, #loc23])
#loc176 = loc(fused[#loc24, #loc25])
#loc177 = loc(fused[#loc26, #loc27])
#loc178 = loc(fused[#loc30, #loc28])
#loc179 = loc(fused[#loc31, #loc32])
#loc180 = loc(fused[#loc33, #loc34])
#loc181 = loc(fused[#loc38, #loc39])
#loc182 = loc(fused[#loc40, #loc41, #loc42, #loc34])
#loc183 = loc(fused[#loc45, #loc46])
#loc184 = loc(fused[#loc48, #loc49])
#loc185 = loc(fused[#loc52, #loc53])
#loc186 = loc(fused[#loc51, #loc53])
#loc187 = loc(fused[#loc50, #loc54])
#loc188 = loc(fused[#loc55, #loc54])
#loc189 = loc(fused[#loc56, #loc57])
#loc190 = loc(fused[#loc58, #loc59])
#loc191 = loc(fused[#loc60, #loc57])
#loc192 = loc(fused[#loc64, #loc65])
#loc193 = loc(fused[#loc67, #loc66])
#loc194 = loc(fused[#loc68, #loc69])
#loc195 = loc(fused[#loc71, #loc65])
#loc196 = loc(fused[#loc73, #loc72])
#loc197 = loc(fused[#loc77, #loc76])
#loc198 = loc(fused[#loc84, #loc85])
#loc199 = loc(fused[#loc86, #loc87])
#loc200 = loc(fused[#loc88, #loc89])
#loc201 = loc(fused[#loc90, #loc91])
#loc202 = loc(fused[#loc96, #loc97])
#loc205 = loc(fused[#loc107, #loc108])
#loc206 = loc(fused[#loc111, #loc112])
#loc207 = loc(fused[#loc115, #loc114])
#loc208 = loc(fused[#loc116, #loc117])
#loc209 = loc(fused[#loc118, #loc119])
#loc210 = loc(fused[#loc120, #loc121])
#loc211 = loc(fused[#loc122, #loc123])
#loc212 = loc(fused[#loc126, #loc124])
#loc213 = loc(fused[#loc128, #loc127])
#loc214 = loc(fused[#loc129, #loc130])
#loc215 = loc(fused[#loc133, #loc134])
#loc216 = loc(fused[#loc132, #loc134])
#loc217 = loc(fused[#loc131, #loc135])
#loc218 = loc(fused[#loc136, #loc135])
#loc219 = loc(fused[#loc137, #loc138])
#loc220 = loc(fused[#loc139, #loc140])
#loc221 = loc(fused[#loc141, #loc138])
#loc222 = loc(fused[#loc145, #loc146])
#loc223 = loc(fused[#loc148, #loc147])
#loc224 = loc(fused[#loc149, #loc150])
#loc225 = loc(fused[#loc152, #loc146])
#loc226 = loc(fused[#loc154, #loc153])
#loc227 = loc(fused[#loc158, #loc157])
