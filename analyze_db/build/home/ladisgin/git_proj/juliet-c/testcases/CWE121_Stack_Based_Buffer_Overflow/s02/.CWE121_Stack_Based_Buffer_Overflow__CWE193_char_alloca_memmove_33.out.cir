!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":98:10)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":98:14)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":98:20)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":98:32)
#loc142 = loc(fused[#loc90, #loc91])
#loc143 = loc(fused[#loc92, #loc93])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33L7goodG2BEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc106)
  cir.global "private" constant cir_private @__const._ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_333badEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc107)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc108)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc109)
  cir.func @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc113)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc16)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc114)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc18)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc18)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc18)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc18)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc18)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %19, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %21 = cir.const #cir.int<0> : !s8i loc(#loc21)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc116)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
      %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc28)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc107)
        %29 = cir.get_global @__const._ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_333badEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc107)
        cir.copy %29 to %28 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc107)
        %30 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
        %32 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc32)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
        %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc33)
        %35 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc34)
        %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc33)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc35)
        %39 = cir.binop(add, %36, %38) : !u64i loc(#loc120)
        %40 = cir.const #cir.int<1> : !u64i loc(#loc121)
        %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc122)
        cir.libc.memmove %41 bytes from %33 to %31 : !cir.ptr<!void>, !u64i loc(#loc123)
        %42 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
        cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc42)
      } loc(#loc119)
    } loc(#loc117)
    cir.return loc(#loc10)
  } loc(#loc110)
  cir.func internal private @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc126)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc127)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc50)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc50)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc50)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc50)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc50)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc128)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc50)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc52)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc52)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc52)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc52)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc52)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc52)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc52)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
    cir.store %19, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %21 = cir.const #cir.int<0> : !s8i loc(#loc55)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc58)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc130)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
      %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc106)
        %29 = cir.get_global @__const._ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33L7goodG2BEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc106)
        cir.copy %29 to %28 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc106)
        %30 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
        %32 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc66)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
        %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc67)
        %35 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc68)
        %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc67)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc69)
        %39 = cir.binop(add, %36, %38) : !u64i loc(#loc134)
        %40 = cir.const #cir.int<1> : !u64i loc(#loc135)
        %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc136)
        cir.libc.memmove %41 bytes from %33 to %31 : !cir.ptr<!void>, !u64i loc(#loc137)
        %42 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
        cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc76)
      } loc(#loc133)
    } loc(#loc131)
    cir.return loc(#loc44)
  } loc(#loc124)
  cir.func @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33L7goodG2BEv() : () -> () loc(#loc79)
    cir.return loc(#loc78)
  } loc(#loc138)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc139)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc87)
  cir.func @main(%arg0: !s32i loc(fused[#loc90, #loc91]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc92, #loc93])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc94)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc96)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc96)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc97)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.call @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_334goodEv() : () -> () loc(#loc99)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc86)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.call @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_333badEv() : () -> () loc(#loc102)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc87)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %15 : !s32i loc(#loc144)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":71:13)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":71:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":44:13)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":44:33)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":31:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":51:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":33:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":33:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":34:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":34:23)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":35:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":35:36)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":36:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":36:37)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":39:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":39:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":40:15)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":40:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":40:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":40:11)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":41:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":50:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":42:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":42:23)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":43:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":49:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:21)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:27)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:36)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:43)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:53)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:58)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:69)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:35)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":47:70)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":48:23)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":48:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":58:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":78:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":60:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":60:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":61:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":61:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":62:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":62:36)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":63:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":63:37)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":66:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":66:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":67:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":67:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":67:10)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":67:11)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":68:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":77:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":69:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":69:23)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":70:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":76:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:21)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:36)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:43)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:53)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:58)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:69)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:35)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":74:70)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":75:23)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":75:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":80:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":83:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":82:5)
#loc80 = loc("/usr/include/stdlib.h":575:1)
#loc81 = loc("/usr/include/stdlib.h":575:41)
#loc82 = loc("/usr/include/time.h":76:1)
#loc83 = loc("/usr/include/time.h":76:38)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":103:15)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":105:15)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":108:15)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":110:15)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":98:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":113:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":99:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":101:27)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":101:22)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":101:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":103:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":104:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":105:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":108:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":109:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":110:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":112:12)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_33.cpp":112:5)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc7, #loc8])
#loc110 = loc(fused[#loc9, #loc10])
#loc111 = loc(fused[#loc11, #loc12])
#loc112 = loc(fused[#loc13, #loc14])
#loc113 = loc(fused[#loc15, #loc16])
#loc114 = loc(fused[#loc17, #loc18])
#loc115 = loc(fused[#loc20, #loc19])
#loc116 = loc(fused[#loc22, #loc21])
#loc117 = loc(fused[#loc25, #loc26])
#loc118 = loc(fused[#loc27, #loc28])
#loc119 = loc(fused[#loc29, #loc30])
#loc120 = loc(fused[#loc33, #loc35])
#loc121 = loc(fused[#loc36, #loc37])
#loc122 = loc(fused[#loc38, #loc37])
#loc123 = loc(fused[#loc39, #loc40])
#loc124 = loc(fused[#loc43, #loc44])
#loc125 = loc(fused[#loc45, #loc46])
#loc126 = loc(fused[#loc47, #loc48])
#loc127 = loc(fused[#loc49, #loc50])
#loc128 = loc(fused[#loc51, #loc52])
#loc129 = loc(fused[#loc54, #loc53])
#loc130 = loc(fused[#loc56, #loc55])
#loc131 = loc(fused[#loc59, #loc60])
#loc132 = loc(fused[#loc61, #loc62])
#loc133 = loc(fused[#loc63, #loc64])
#loc134 = loc(fused[#loc67, #loc69])
#loc135 = loc(fused[#loc70, #loc71])
#loc136 = loc(fused[#loc72, #loc71])
#loc137 = loc(fused[#loc73, #loc74])
#loc138 = loc(fused[#loc77, #loc78])
#loc139 = loc(fused[#loc80, #loc81])
#loc140 = loc(fused[#loc82, #loc83])
#loc141 = loc(fused[#loc88, #loc89])
#loc144 = loc(fused[#loc105, #loc104])
