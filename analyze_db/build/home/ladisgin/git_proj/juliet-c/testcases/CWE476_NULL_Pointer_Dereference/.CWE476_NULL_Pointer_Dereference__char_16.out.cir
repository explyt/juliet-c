!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc39 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":106:10)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":106:14)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":106:20)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":106:32)
#loc115 = loc(fused[#loc39, #loc40])
#loc116 = loc(fused[#loc41, #loc42])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc102)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc105)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %2 ^bb3, ^bb4 loc(#loc9)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc10)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc8)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc107)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc107)
  ^bb7:  // pred: ^bb6
    %4 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %5 ^bb8, ^bb9 loc(#loc15)
  ^bb8:  // pred: ^bb7
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc18)
    %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc16)
    cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc19)
    cir.br ^bb9 loc(#loc20)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc14)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc103)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc110)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc108)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc111)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc112)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc36)
  cir.func @main(%arg0: !s32i loc(fused[#loc39, #loc40]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc41, #loc42])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc38)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc43)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc43)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc44)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc45)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc45)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc46)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc33)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %8 = cir.get_global @CWE476_NULL_Pointer_Dereference__char_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call @CWE476_NULL_Pointer_Dereference__char_16_good() : () -> () loc(#loc48)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc34)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc35)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %13 = cir.get_global @CWE476_NULL_Pointer_Dereference__char_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call @CWE476_NULL_Pointer_Dereference__char_16_bad() : () -> () loc(#loc52)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc36)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc55)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.return %17 : !s32i loc(#loc119)
  } loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc57)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc122)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %2 ^bb3, ^bb4 loc(#loc64)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc65)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc63)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc124)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc124)
  ^bb7:  // pred: ^bb6
    %4 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %5 ^bb8, ^bb14 loc(#loc70)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc125)
  ^bb9:  // pred: ^bb8
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!s8i>, !cir.bool loc(#loc126)
    cir.brcond %9 ^bb10, ^bb11 loc(#loc127)
  ^bb10:  // pred: ^bb9
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc80)
    %13 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc78)
    cir.call @printHexCharLine(%13) : (!s8i) -> () loc(#loc81)
    cir.br ^bb12 loc(#loc76)
  ^bb11:  // pred: ^bb9
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb12 loc(#loc72)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc72)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc83)
  ^bb14:  // 2 preds: ^bb7, ^bb13
    cir.br ^bb15 loc(#loc69)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc59)
  } loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Good\00" : !cir.array<!s8i x 5>> : !cir.array<!s8i x 5> {alignment = 1 : i64} loc(#loc84)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %2 ^bb3, ^bb4 loc(#loc91)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc84)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc84)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc90)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc132)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc132)
  ^bb7:  // pred: ^bb6
    %5 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc96)
    cir.brcond %6 ^bb8, ^bb9 loc(#loc96)
  ^bb8:  // pred: ^bb7
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc99)
    %10 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc97)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc100)
    cir.br ^bb9 loc(#loc101)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc95)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc86)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":24:1)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":40:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":26:5)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":26:12)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":27:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":32:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":27:11)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":30:16)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":30:9)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":31:9)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":33:5)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":39:5)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":33:11)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":37:26)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":37:31)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":37:32)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":37:9)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":38:9)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":91:1)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":95:1)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":93:5)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":93:13)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":94:5)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":94:13)
#loc27 = loc("/usr/include/stdlib.h":575:1)
#loc28 = loc("/usr/include/stdlib.h":575:41)
#loc29 = loc("/usr/include/time.h":76:1)
#loc30 = loc("/usr/include/time.h":76:38)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":111:15)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":113:15)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":116:15)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":118:15)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":106:1)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":121:1)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":107:1)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":109:27)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":109:22)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":109:5)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":111:5)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":112:5)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":112:51)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":113:5)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":116:5)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":117:5)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":117:50)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":118:5)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":120:12)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":120:5)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":66:23)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":47:1)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":70:1)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":49:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":49:12)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":50:5)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":55:5)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":50:11)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":53:16)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":53:9)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":54:9)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":56:5)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":69:5)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":56:11)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":59:9)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":67:9)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":59:13)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":59:21)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":60:9)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":63:9)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":65:9)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":62:30)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":62:35)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":62:36)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":62:13)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":66:13)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":68:9)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":79:16)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":73:1)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":89:1)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":75:5)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":75:12)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":76:5)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":81:5)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":76:11)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":79:9)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":80:9)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":82:5)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":88:5)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":82:11)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":86:26)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":86:31)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":86:32)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":86:9)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__char_16.c":87:9)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc11, #loc10])
#loc107 = loc(fused[#loc13, #loc14])
#loc108 = loc(fused[#loc21, #loc22])
#loc109 = loc(fused[#loc23, #loc24])
#loc110 = loc(fused[#loc25, #loc26])
#loc111 = loc(fused[#loc27, #loc28])
#loc112 = loc(fused[#loc29, #loc30])
#loc113 = loc(fused[#loc31, #loc32])
#loc114 = loc(fused[#loc37, #loc38])
#loc117 = loc(fused[#loc48, #loc49])
#loc118 = loc(fused[#loc52, #loc53])
#loc119 = loc(fused[#loc56, #loc55])
#loc120 = loc(fused[#loc58, #loc59])
#loc121 = loc(fused[#loc60, #loc61])
#loc122 = loc(fused[#loc62, #loc63])
#loc123 = loc(fused[#loc66, #loc65])
#loc124 = loc(fused[#loc68, #loc69])
#loc125 = loc(fused[#loc71, #loc72])
#loc126 = loc(fused[#loc73, #loc74])
#loc127 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc128 = loc(fused[#loc85, #loc86])
#loc129 = loc(fused[#loc87, #loc88])
#loc130 = loc(fused[#loc89, #loc90])
#loc131 = loc(fused[#loc92, #loc84])
#loc132 = loc(fused[#loc94, #loc95])
