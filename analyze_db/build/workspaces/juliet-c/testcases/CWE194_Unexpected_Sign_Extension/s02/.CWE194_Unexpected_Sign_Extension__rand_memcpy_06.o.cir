!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memcpy_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc152)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc9)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc153)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc155)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc16)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc16)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc16)
        %10 = cir.ternary(%9, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc16)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc16)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc16)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc16)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc16)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc16)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc16)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc16)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc16)
          cir.yield %24 : !u32i loc(#loc16)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc16)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc16)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc16)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc16)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc16)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc16)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc16)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc16)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc16)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc16)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc16)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc16)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc16)
          cir.yield %28 : !u32i loc(#loc16)
        }) : (!cir.bool) -> !u32i loc(#loc16)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc16)
        %12 = cir.cast(integral, %11 : !s32i), !s16i loc(#loc16)
        cir.store %12, %0 : !s16i, !cir.ptr<!s16i> loc(#loc157)
      } loc(#loc156)
    } loc(#loc154)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc159)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc160)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc160)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc160)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc25)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc26)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc26)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc161)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc30)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc30)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc31)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc33)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc162)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc36)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc36)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc37)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc164)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
          %29 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc41)
          %30 = cir.cast(integral, %29 : !s16i), !u64i loc(#loc41)
          cir.libc.memcpy %30 bytes from %28 to %26 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc166)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc44)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc45)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc46)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc167)
        } loc(#loc165)
      } loc(#loc163)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    } loc(#loc158)
    cir.return loc(#loc6)
  } loc(#loc151)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memcpy_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc170)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc172)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc60)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc173)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc64)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc65)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc175)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc70)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc71)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc70)
        %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc70)
        cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc177)
      } loc(#loc176)
    } loc(#loc174)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc179)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc180)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc180)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc180)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc80)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc81)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc81)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc181)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc85)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc85)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc86)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc87)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc86)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc88)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc182)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc91)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc91)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc92)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc184)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
          %29 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc96)
          %30 = cir.cast(integral, %29 : !s16i), !u64i loc(#loc96)
          cir.libc.memcpy %30 bytes from %28 to %26 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc186)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc99)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc99)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc100)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc101)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc187)
        } loc(#loc185)
      } loc(#loc183)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc102)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    } loc(#loc178)
    cir.return loc(#loc57)
  } loc(#loc171)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc189)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc108)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc190)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc112)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc113)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc192)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc115)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc115)
        %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc115)
        cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc194)
      } loc(#loc193)
    } loc(#loc191)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc196)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc197)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc197)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc197)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc125)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc126)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc127)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc126)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc126)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc198)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc130)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc130)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc131)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc132)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc131)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc133)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc199)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc136)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc136)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc137)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc201)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
          %29 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc141)
          %30 = cir.cast(integral, %29 : !s16i), !u64i loc(#loc141)
          cir.libc.memcpy %30 bytes from %28 to %26 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc203)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc144)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc144)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc145)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc146)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc204)
        } loc(#loc202)
      } loc(#loc200)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    } loc(#loc195)
    cir.return loc(#loc105)
  } loc(#loc188)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":25:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":49:1)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":27:5)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":27:11)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":29:12)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":29:5)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":30:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":34:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":30:8)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":30:27)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":31:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":33:23)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":33:9)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":35:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":48:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":36:9)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":36:24)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":37:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":37:26)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":38:16)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":38:24)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":38:29)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":38:33)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":38:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":38:34)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":39:25)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":39:16)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":39:20)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":39:9)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":40:9)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":46:9)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":40:13)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":40:20)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":41:9)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":44:20)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":44:26)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":44:34)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":44:13)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":44:38)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":45:26)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":45:18)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":45:13)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":47:19)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":47:9)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":114:1)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":118:1)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":116:5)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":116:14)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":117:5)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":117:14)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":64:19)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":56:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":85:1)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":58:5)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":58:11)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":60:12)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":60:5)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":61:5)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":70:5)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":61:8)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":61:27)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":62:5)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":65:5)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":67:5)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":64:9)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":69:16)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":69:20)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":69:9)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":71:5)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":84:5)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":72:9)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":72:24)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":73:9)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":73:26)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":74:16)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":74:24)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":74:29)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":74:33)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":74:9)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":74:34)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":75:25)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":75:16)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":75:20)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":75:9)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":76:9)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":82:9)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":76:13)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":76:20)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":77:9)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":80:20)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":80:26)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":80:34)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":80:13)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":80:38)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":81:26)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":81:18)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":81:13)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":83:19)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":83:9)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":88:1)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":112:1)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":90:5)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":90:11)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":92:12)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":92:5)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":93:5)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":97:5)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":93:8)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":93:27)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":94:5)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":96:16)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":96:20)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":96:9)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":98:5)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":111:5)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":99:9)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":99:24)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":100:9)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":100:26)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":101:16)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":101:24)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":101:29)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":101:33)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":101:9)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":101:34)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":102:25)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":102:16)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":102:20)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":102:9)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":103:9)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":109:9)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":103:13)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":103:20)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":104:9)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":107:20)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":107:26)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":107:34)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":107:13)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":107:38)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":108:26)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":108:18)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":108:13)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":110:19)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c":110:9)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc10, #loc9])
#loc154 = loc(fused[#loc11, #loc12])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc15, #loc12])
#loc157 = loc(fused[#loc17, #loc16])
#loc158 = loc(fused[#loc18, #loc19])
#loc159 = loc(fused[#loc20, #loc21])
#loc160 = loc(fused[#loc22, #loc23])
#loc161 = loc(fused[#loc28, #loc29])
#loc162 = loc(fused[#loc33, #loc30])
#loc163 = loc(fused[#loc34, #loc35])
#loc164 = loc(fused[#loc36, #loc37])
#loc165 = loc(fused[#loc38, #loc35])
#loc166 = loc(fused[#loc42, #loc43])
#loc167 = loc(fused[#loc46, #loc44])
#loc168 = loc(fused[#loc49, #loc50])
#loc169 = loc(fused[#loc51, #loc52])
#loc170 = loc(fused[#loc53, #loc54])
#loc171 = loc(fused[#loc56, #loc57])
#loc172 = loc(fused[#loc58, #loc59])
#loc173 = loc(fused[#loc61, #loc60])
#loc174 = loc(fused[#loc62, #loc63])
#loc175 = loc(fused[#loc64, #loc65])
#loc176 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc177 = loc(fused[#loc72, #loc71])
#loc178 = loc(fused[#loc73, #loc74])
#loc179 = loc(fused[#loc75, #loc76])
#loc180 = loc(fused[#loc77, #loc78])
#loc181 = loc(fused[#loc83, #loc84])
#loc182 = loc(fused[#loc88, #loc85])
#loc183 = loc(fused[#loc89, #loc90])
#loc184 = loc(fused[#loc91, #loc92])
#loc185 = loc(fused[#loc93, #loc90])
#loc186 = loc(fused[#loc97, #loc98])
#loc187 = loc(fused[#loc101, #loc99])
#loc188 = loc(fused[#loc104, #loc105])
#loc189 = loc(fused[#loc106, #loc107])
#loc190 = loc(fused[#loc109, #loc108])
#loc191 = loc(fused[#loc110, #loc111])
#loc192 = loc(fused[#loc112, #loc113])
#loc193 = loc(fused[#loc114, #loc111])
#loc194 = loc(fused[#loc117, #loc116])
#loc195 = loc(fused[#loc118, #loc119])
#loc196 = loc(fused[#loc120, #loc121])
#loc197 = loc(fused[#loc122, #loc123])
#loc198 = loc(fused[#loc128, #loc129])
#loc199 = loc(fused[#loc133, #loc130])
#loc200 = loc(fused[#loc134, #loc135])
#loc201 = loc(fused[#loc136, #loc137])
#loc202 = loc(fused[#loc138, #loc135])
#loc203 = loc(fused[#loc142, #loc143])
#loc204 = loc(fused[#loc146, #loc144])
