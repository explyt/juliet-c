!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc9)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc10)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc11)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc11)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc139)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc15)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc17)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    cir.scope {
      cir.while {
        %23 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc22)
        cir.condition(%24) loc(#loc22)
      } do {
        cir.scope {
          %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
          %24 = cir.const #cir.int<8> : !s32i loc(#loc25)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc25)
          %26 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc26)
          cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
          cir.break loc(#loc28)
        } loc(#loc142)
        cir.yield loc(#loc21)
      } loc(#loc141)
    } loc(#loc141)
    cir.scope {
      %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc145)
      %24 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc146)
      %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
      %27 = cir.const #cir.int<67> : !s32i loc(#loc36)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc37)
      %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc37)
      cir.libc.memset %31 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc147)
      %32 = cir.const #cir.int<0> : !s32i loc(#loc41)
      %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc41)
      %34 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %35 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc42)
      %37 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
      %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc148)
      cir.scope {
        %47 = cir.const #cir.int<0> : !s32i loc(#loc47)
        %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc47)
        cir.store %48, %23 : !u64i, !cir.ptr<!u64i> loc(#loc150)
        cir.for : cond {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc49)
          %50 = cir.const #cir.int<100> : !s32i loc(#loc50)
          %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc50)
          %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc151)
          cir.condition(%52) loc(#loc51)
        } body {
          cir.scope {
            %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc53)
            %50 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc54)
            %52 = cir.load %51 : !cir.ptr<!s8i>, !s8i loc(#loc54)
            %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %54 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc56)
            %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc57)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc153)
          } loc(#loc152)
          cir.yield loc(#loc46)
        } step {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc59)
          %50 = cir.unary(inc, %49) : !u64i, !u64i loc(#loc60)
          cir.store %50, %23 : !u64i, !cir.ptr<!u64i> loc(#loc154)
          cir.yield loc(#loc149)
        } loc(#loc149)
      } loc(#loc149)
      %39 = cir.const #cir.int<0> : !s32i loc(#loc61)
      %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc61)
      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc63)
      %43 = cir.const #cir.int<1> : !s32i loc(#loc64)
      %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc63)
      %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc65)
      cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc155)
      %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    } loc(#loc144)
    cir.return loc(#loc4)
  } loc(#loc136)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc70)
    cir.return loc(#loc69)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc77)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc77)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc77)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc79)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc80)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc80)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc161)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc84)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc86)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc88)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    cir.scope {
      cir.while {
        %23 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc91)
        cir.condition(%24) loc(#loc91)
      } do {
        cir.scope {
          %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
          cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
          cir.break loc(#loc95)
        } loc(#loc164)
        cir.yield loc(#loc90)
      } loc(#loc163)
    } loc(#loc163)
    cir.scope {
      %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
      %24 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc168)
      %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc102)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
      %27 = cir.const #cir.int<67> : !s32i loc(#loc103)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc104)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc105)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc104)
      %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc104)
      cir.libc.memset %31 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
      %32 = cir.const #cir.int<0> : !s32i loc(#loc108)
      %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc108)
      %34 = cir.const #cir.int<100> : !s32i loc(#loc109)
      %35 = cir.const #cir.int<1> : !s32i loc(#loc110)
      %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc109)
      %37 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
      %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc111)
      cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc170)
      cir.scope {
        %47 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc114)
        cir.store %48, %23 : !u64i, !cir.ptr<!u64i> loc(#loc172)
        cir.for : cond {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc116)
          %50 = cir.const #cir.int<100> : !s32i loc(#loc117)
          %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc117)
          %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc173)
          cir.condition(%52) loc(#loc118)
        } body {
          cir.scope {
            %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc120)
            %50 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc121)
            %52 = cir.load %51 : !cir.ptr<!s8i>, !s8i loc(#loc121)
            %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
            %54 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc124)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc175)
          } loc(#loc174)
          cir.yield loc(#loc113)
        } step {
          %49 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc126)
          %50 = cir.unary(inc, %49) : !u64i, !u64i loc(#loc127)
          cir.store %50, %23 : !u64i, !cir.ptr<!u64i> loc(#loc176)
          cir.yield loc(#loc171)
        } loc(#loc171)
      } loc(#loc171)
      %39 = cir.const #cir.int<0> : !s32i loc(#loc128)
      %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc128)
      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc130)
      %43 = cir.const #cir.int<1> : !s32i loc(#loc131)
      %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc130)
      %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc132)
      cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc177)
      %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
      cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    } loc(#loc166)
    cir.return loc(#loc73)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":23:1)
#loc4 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":49:1)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":25:5)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":25:12)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":26:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":26:33)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":27:12)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":27:24)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":27:29)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":27:33)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":27:5)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":27:34)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":28:25)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":28:5)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":28:16)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":28:20)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":28:21)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":29:5)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":34:5)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":29:11)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":30:5)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":32:16)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":32:29)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":32:27)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":32:9)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":33:9)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":35:5)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":48:5)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":36:9)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":36:16)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":37:9)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":37:24)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":38:16)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":38:24)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":38:29)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":38:33)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":38:9)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":38:34)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":39:25)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":39:16)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":39:20)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":39:9)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":41:9)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":44:9)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":41:18)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":41:14)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":41:21)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":41:25)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":41:23)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":42:9)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":43:30)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":43:23)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":43:13)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":43:18)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":43:19)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":43:31)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":41:31)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":41:30)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":46:23)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":46:9)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":46:14)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":46:18)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":46:19)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":47:19)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":47:9)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":84:1)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":87:1)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":86:5)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":86:13)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":56:1)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":82:1)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":58:5)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":58:12)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":59:5)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":59:33)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":60:12)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":60:24)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":60:29)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":60:33)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":60:5)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":60:34)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":61:25)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":61:5)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":61:16)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":61:20)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":61:21)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":62:5)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":67:5)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":62:11)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":63:5)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":65:16)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":65:9)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":66:9)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":68:5)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":81:5)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":69:9)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":69:16)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":70:9)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":70:24)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":71:16)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":71:24)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":71:29)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":71:33)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":71:9)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":71:34)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":72:25)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":72:16)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":72:20)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":72:9)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":74:9)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":77:9)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":74:18)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":74:14)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":74:21)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":74:25)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":74:23)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":75:9)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":76:30)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":76:23)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":76:13)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":76:18)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":76:19)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":76:31)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":74:31)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":74:30)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":79:23)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":79:9)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":79:14)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":79:18)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":79:19)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":80:19)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_16.c":80:9)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc16, #loc15])
#loc141 = loc(fused[#loc20, #loc21])
#loc142 = loc(fused[#loc23, #loc21])
#loc143 = loc(fused[#loc27, #loc25])
#loc144 = loc(fused[#loc29, #loc30])
#loc145 = loc(fused[#loc31, #loc32])
#loc146 = loc(fused[#loc33, #loc34])
#loc147 = loc(fused[#loc39, #loc40])
#loc148 = loc(fused[#loc44, #loc41])
#loc149 = loc(fused[#loc45, #loc46])
#loc150 = loc(fused[#loc48, #loc47])
#loc151 = loc(fused[#loc49, #loc50])
#loc152 = loc(fused[#loc52, #loc46])
#loc153 = loc(fused[#loc55, #loc58])
#loc154 = loc(fused[#loc60, #loc59])
#loc155 = loc(fused[#loc62, #loc61])
#loc156 = loc(fused[#loc68, #loc69])
#loc157 = loc(fused[#loc70, #loc71])
#loc158 = loc(fused[#loc72, #loc73])
#loc159 = loc(fused[#loc74, #loc75])
#loc160 = loc(fused[#loc76, #loc77])
#loc161 = loc(fused[#loc82, #loc83])
#loc162 = loc(fused[#loc85, #loc84])
#loc163 = loc(fused[#loc89, #loc90])
#loc164 = loc(fused[#loc92, #loc90])
#loc165 = loc(fused[#loc94, #loc93])
#loc166 = loc(fused[#loc96, #loc97])
#loc167 = loc(fused[#loc98, #loc99])
#loc168 = loc(fused[#loc100, #loc101])
#loc169 = loc(fused[#loc106, #loc107])
#loc170 = loc(fused[#loc111, #loc108])
#loc171 = loc(fused[#loc112, #loc113])
#loc172 = loc(fused[#loc115, #loc114])
#loc173 = loc(fused[#loc116, #loc117])
#loc174 = loc(fused[#loc119, #loc113])
#loc175 = loc(fused[#loc122, #loc125])
#loc176 = loc(fused[#loc127, #loc126])
#loc177 = loc(fused[#loc129, #loc128])
