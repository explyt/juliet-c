!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc205)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc206)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc208)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc210)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc212)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc16)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc16)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc16)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc16)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc213)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc212)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc18)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc18)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc18)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc213)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc205)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %22 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %23 = cir.cmp(eq, %21, %22) : !s32i, !cir.bool loc(#loc215)
    cir.brcond %23 ^bb2, ^bb3 loc(#loc216)
  ^bb2:  // pred: ^bb1
    %24 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    cir.store %24, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc217)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc218)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc219)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc220)
  ^bb7:  // pred: ^bb6
    %25 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc32)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc221)
    cir.br ^bb8 loc(#loc220)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc35)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc222)
    cir.brcond %30 ^bb9, ^bb13 loc(#loc36)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc223)
  ^bb10:  // pred: ^bb9
    %31 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %35 = cir.get_member %34[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!ty__twoIntsStruct>, %37 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %40 = cir.get_member %39[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
    cir.store %36, %40 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb11 loc(#loc31)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc31)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc47)
    cir.store %42, %1 : !u64i, !cir.ptr<!u64i> loc(#loc226)
    cir.br ^bb8 loc(#loc220)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc31)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc29)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc227)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc228)
  ^bb17:  // pred: ^bb16
    %43 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc52)
    cir.store %44, %2 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb18 loc(#loc228)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %45 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc55)
    %48 = cir.cmp(lt, %45, %47) : !u64i, !cir.bool loc(#loc230)
    cir.brcond %48 ^bb19, ^bb23 loc(#loc56)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc231)
  ^bb20:  // pred: ^bb19
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    %50 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %52 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %53 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    %54 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %52 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    cir.copy %54 to %51 : !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    cir.br ^bb21 loc(#loc51)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc51)
  ^bb22:  // pred: ^bb21
    %55 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc64)
    cir.store %56, %2 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    cir.br ^bb18 loc(#loc228)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc51)
  ^bb24:  // pred: ^bb23
    %57 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!ty__twoIntsStruct>, %58 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    cir.call @printStructLine(%59) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc68)
    cir.br ^bb25 loc(#loc49)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc27)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc6)
  } loc(#loc207)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc233)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc77)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc238)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc239)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc240)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc242)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc89)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc89)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc89)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc89)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc89)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc243)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc89)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc242)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc91)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc91)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc91)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc91)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc91)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc91)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc243)
    cir.br ^bb1 loc(#loc244)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc205)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %22 = cir.const #cir.int<5> : !s32i loc(#loc95)
    %23 = cir.cmp(ne, %21, %22) : !s32i, !cir.bool loc(#loc245)
    cir.brcond %23 ^bb2, ^bb3 loc(#loc246)
  ^bb2:  // pred: ^bb1
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.br ^bb4 loc(#loc97)
  ^bb3:  // pred: ^bb1
    %26 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
    cir.store %26, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc247)
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc93)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc248)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc249)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc250)
  ^bb8:  // pred: ^bb7
    %27 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc108)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc251)
    cir.br ^bb9 loc(#loc250)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc111)
    %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc252)
    cir.brcond %32 ^bb10, ^bb14 loc(#loc112)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc253)
  ^bb11:  // pred: ^bb10
    %33 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %34 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %37 = cir.get_member %36[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %33, %37 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!ty__twoIntsStruct>, %39 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    %42 = cir.get_member %41[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
    cir.store %38, %42 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.br ^bb12 loc(#loc107)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc107)
  ^bb13:  // pred: ^bb12
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %44 = cir.unary(inc, %43) : !u64i, !u64i loc(#loc121)
    cir.store %44, %1 : !u64i, !cir.ptr<!u64i> loc(#loc256)
    cir.br ^bb9 loc(#loc250)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc107)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc105)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc257)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc258)
  ^bb18:  // pred: ^bb17
    %45 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc126)
    cir.store %46, %2 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    cir.br ^bb19 loc(#loc258)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %47 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %48 = cir.const #cir.int<100> : !s32i loc(#loc129)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc129)
    %50 = cir.cmp(lt, %47, %49) : !u64i, !cir.bool loc(#loc260)
    cir.brcond %50 ^bb20, ^bb24 loc(#loc130)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc261)
  ^bb21:  // pred: ^bb20
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %52 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!ty__twoIntsStruct>, %52 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %54 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %55 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    %56 = cir.ptr_stride(%55 : !cir.ptr<!ty__twoIntsStruct>, %54 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    cir.copy %56 to %53 : !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    cir.br ^bb22 loc(#loc125)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc125)
  ^bb23:  // pred: ^bb22
    %57 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc138)
    cir.store %58, %2 : !u64i, !cir.ptr<!u64i> loc(#loc262)
    cir.br ^bb19 loc(#loc258)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc125)
  ^bb25:  // pred: ^bb24
    %59 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %61 = cir.ptr_stride(%59 : !cir.ptr<!ty__twoIntsStruct>, %60 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    cir.call @printStructLine(%61) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc142)
    cir.br ^bb26 loc(#loc123)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc103)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc79)
  } loc(#loc237)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc264)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc265)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc266)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc267)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc268)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc154)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc154)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc154)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc154)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc154)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc269)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc154)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc268)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc156)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc156)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc156)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc156)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc156)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc156)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc269)
    cir.br ^bb1 loc(#loc270)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc205)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %22 = cir.const #cir.int<5> : !s32i loc(#loc160)
    %23 = cir.cmp(eq, %21, %22) : !s32i, !cir.bool loc(#loc271)
    cir.brcond %23 ^bb2, ^bb3 loc(#loc272)
  ^bb2:  // pred: ^bb1
    %24 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
    cir.store %24, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc273)
    cir.br ^bb3 loc(#loc158)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc158)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc274)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc275)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc276)
  ^bb7:  // pred: ^bb6
    %25 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc170)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    cir.br ^bb8 loc(#loc276)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc173)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc173)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc278)
    cir.brcond %30 ^bb9, ^bb13 loc(#loc174)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc279)
  ^bb10:  // pred: ^bb9
    %31 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc178)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc178)
    %35 = cir.get_member %34[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc179)
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc181)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!ty__twoIntsStruct>, %37 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc181)
    %40 = cir.get_member %39[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
    cir.store %36, %40 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.br ^bb11 loc(#loc169)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc169)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc182)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc183)
    cir.store %42, %1 : !u64i, !cir.ptr<!u64i> loc(#loc282)
    cir.br ^bb8 loc(#loc276)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc169)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc167)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc283)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc284)
  ^bb17:  // pred: ^bb16
    %43 = cir.const #cir.int<0> : !s32i loc(#loc188)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc188)
    cir.store %44, %2 : !u64i, !cir.ptr<!u64i> loc(#loc285)
    cir.br ^bb18 loc(#loc284)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %45 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc190)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc191)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc191)
    %48 = cir.cmp(lt, %45, %47) : !u64i, !cir.bool loc(#loc286)
    cir.brcond %48 ^bb19, ^bb23 loc(#loc192)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc287)
  ^bb20:  // pred: ^bb19
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
    %50 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc195)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
    %52 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc197)
    %53 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
    %54 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %52 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
    cir.copy %54 to %51 : !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
    cir.br ^bb21 loc(#loc187)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc187)
  ^bb22:  // pred: ^bb21
    %55 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc199)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc200)
    cir.store %56, %2 : !u64i, !cir.ptr<!u64i> loc(#loc288)
    cir.br ^bb18 loc(#loc284)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc187)
  ^bb24:  // pred: ^bb23
    %57 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc202)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!ty__twoIntsStruct>, %58 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc203)
    cir.call @printStructLine(%59) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc204)
    cir.br ^bb25 loc(#loc185)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc165)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc144)
  } loc(#loc263)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":21:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":53:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":33:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":33:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":35:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":35:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":44:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":44:20)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":23:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":23:21)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":24:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":24:54)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":25:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":25:55)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":26:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":31:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":26:8)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":26:20)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":27:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":30:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":30:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":32:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":52:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":34:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":42:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":37:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":41:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":37:22)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":37:18)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":37:25)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":37:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":37:27)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":38:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":39:36)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":39:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":39:17)
#loc41 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":40:36)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":40:24)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":40:17)
#loc45 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":37:35)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":37:34)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":43:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":51:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":46:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":49:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":46:22)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":46:18)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":46:25)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":46:29)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":46:27)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":47:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":48:17)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":48:22)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":48:23)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":48:34)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":48:27)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":46:35)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":46:34)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":50:30)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":50:35)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":50:36)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":50:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":132:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":136:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":134:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":134:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":135:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":135:14)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":68:19)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":60:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":96:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":76:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":76:33)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":78:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":78:20)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":87:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":87:20)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":62:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":62:21)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":63:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":63:54)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":64:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":64:55)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":65:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":74:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":65:8)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":65:20)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":66:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":69:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":71:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":68:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":73:16)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":73:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":75:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":95:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":77:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":85:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":80:13)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":84:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":80:22)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":80:18)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":80:25)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":80:29)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":80:27)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":81:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":82:36)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":82:24)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":82:17)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":83:36)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":83:24)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":83:17)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":80:35)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":80:34)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":86:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":94:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":89:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":92:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":89:22)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":89:18)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":89:25)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":89:29)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":89:27)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":90:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":91:17)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":91:22)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":91:23)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":91:34)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":91:27)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":89:35)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":89:34)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":93:30)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":93:35)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":93:36)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":93:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":99:1)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":130:1)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":110:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":110:33)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":112:13)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":112:20)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":121:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":121:20)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":101:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":101:21)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":102:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":102:54)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":103:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":103:55)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":104:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":108:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":104:8)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":104:20)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":105:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":107:16)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":107:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":109:5)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":129:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":111:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":119:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":114:13)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":118:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":114:22)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":114:18)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":114:25)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":114:29)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":114:27)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":115:13)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":116:36)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":116:24)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":116:17)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":117:36)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":117:24)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":117:17)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":114:35)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":114:34)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":120:9)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":128:9)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":123:13)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":126:13)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":123:22)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":123:18)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":123:25)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":123:29)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":123:27)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":124:13)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":125:17)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":125:22)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":125:23)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":125:34)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":125:27)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":123:35)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":123:34)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":127:30)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":127:35)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":127:36)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_14.c":127:13)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc9, #loc10])
#loc210 = loc(fused[#loc11, #loc12])
#loc211 = loc(fused[#loc13, #loc14])
#loc212 = loc(fused[#loc15, #loc16])
#loc213 = loc(fused[#loc17, #loc18])
#loc214 = loc(fused[#loc19, #loc20])
#loc215 = loc(fused[#loc21, #loc22])
#loc216 = loc(fused[#loc23, #loc20])
#loc217 = loc(fused[#loc25, #loc24])
#loc218 = loc(fused[#loc26, #loc27])
#loc219 = loc(fused[#loc28, #loc29])
#loc220 = loc(fused[#loc30, #loc31])
#loc221 = loc(fused[#loc33, #loc32])
#loc222 = loc(fused[#loc34, #loc35])
#loc223 = loc(fused[#loc37, #loc31])
#loc224 = loc(fused[#loc40, #loc38])
#loc225 = loc(fused[#loc44, #loc42])
#loc226 = loc(fused[#loc47, #loc46])
#loc227 = loc(fused[#loc48, #loc49])
#loc228 = loc(fused[#loc50, #loc51])
#loc229 = loc(fused[#loc53, #loc52])
#loc230 = loc(fused[#loc54, #loc55])
#loc231 = loc(fused[#loc57, #loc51])
#loc232 = loc(fused[#loc64, #loc63])
#loc233 = loc(fused[#loc69, #loc70])
#loc234 = loc(fused[#loc71, #loc72])
#loc235 = loc(fused[#loc73, #loc74])
#loc236 = loc(fused[#loc75, #loc76])
#loc237 = loc(fused[#loc78, #loc79])
#loc238 = loc(fused[#loc80, #loc81])
#loc239 = loc(fused[#loc82, #loc83])
#loc240 = loc(fused[#loc84, #loc85])
#loc241 = loc(fused[#loc86, #loc87])
#loc242 = loc(fused[#loc88, #loc89])
#loc243 = loc(fused[#loc90, #loc91])
#loc244 = loc(fused[#loc92, #loc93])
#loc245 = loc(fused[#loc94, #loc95])
#loc246 = loc(fused[#loc96, #loc97, #loc98, #loc93])
#loc247 = loc(fused[#loc101, #loc100])
#loc248 = loc(fused[#loc102, #loc103])
#loc249 = loc(fused[#loc104, #loc105])
#loc250 = loc(fused[#loc106, #loc107])
#loc251 = loc(fused[#loc109, #loc108])
#loc252 = loc(fused[#loc110, #loc111])
#loc253 = loc(fused[#loc113, #loc107])
#loc254 = loc(fused[#loc116, #loc114])
#loc255 = loc(fused[#loc119, #loc117])
#loc256 = loc(fused[#loc121, #loc120])
#loc257 = loc(fused[#loc122, #loc123])
#loc258 = loc(fused[#loc124, #loc125])
#loc259 = loc(fused[#loc127, #loc126])
#loc260 = loc(fused[#loc128, #loc129])
#loc261 = loc(fused[#loc131, #loc125])
#loc262 = loc(fused[#loc138, #loc137])
#loc263 = loc(fused[#loc143, #loc144])
#loc264 = loc(fused[#loc145, #loc146])
#loc265 = loc(fused[#loc147, #loc148])
#loc266 = loc(fused[#loc149, #loc150])
#loc267 = loc(fused[#loc151, #loc152])
#loc268 = loc(fused[#loc153, #loc154])
#loc269 = loc(fused[#loc155, #loc156])
#loc270 = loc(fused[#loc157, #loc158])
#loc271 = loc(fused[#loc159, #loc160])
#loc272 = loc(fused[#loc161, #loc158])
#loc273 = loc(fused[#loc163, #loc162])
#loc274 = loc(fused[#loc164, #loc165])
#loc275 = loc(fused[#loc166, #loc167])
#loc276 = loc(fused[#loc168, #loc169])
#loc277 = loc(fused[#loc171, #loc170])
#loc278 = loc(fused[#loc172, #loc173])
#loc279 = loc(fused[#loc175, #loc169])
#loc280 = loc(fused[#loc178, #loc176])
#loc281 = loc(fused[#loc181, #loc179])
#loc282 = loc(fused[#loc183, #loc182])
#loc283 = loc(fused[#loc184, #loc185])
#loc284 = loc(fused[#loc186, #loc187])
#loc285 = loc(fused[#loc189, #loc188])
#loc286 = loc(fused[#loc190, #loc191])
#loc287 = loc(fused[#loc193, #loc187])
#loc288 = loc(fused[#loc200, #loc199])
