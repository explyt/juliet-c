!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__charVoid = !cir.record<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc159)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc159)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc14)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc160)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc161)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc3)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc3)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc3)
    %9 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    cir.store %8, %9 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc162)
    %10 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc23)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    %13 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc164)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc164)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc29)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc29)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    %19 = cir.const #cir.int<32> : !u64i loc(#loc165)
    cir.libc.memcpy %19 bytes from %18 to %15 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc166)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc34)
    %22 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc167)
    %24 = cir.const #cir.int<1> : !u64i loc(#loc168)
    %25 = cir.binop(div, %23, %24) : !u64i loc(#loc169)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc39)
    %28 = cir.binop(sub, %25, %27) : !u64i loc(#loc170)
    %29 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc41)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc42)
    cir.store %21, %30 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    %31 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %33 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %34 = cir.load %33 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc46)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc17)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc174)
  ^bb6:  // pred: ^bb5
    %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc51)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc51)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
    %39 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    cir.store %38, %39 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc175)
    %40 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %41 = cir.load %40 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc53)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %43 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc58)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc58)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    %49 = cir.const #cir.int<16> : !u64i loc(#loc178)
    cir.libc.memcpy %49 bytes from %48 to %45 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc179)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc63)
    %52 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %53 = cir.const #cir.int<16> : !u64i loc(#loc180)
    %54 = cir.const #cir.int<1> : !u64i loc(#loc181)
    %55 = cir.binop(div, %53, %54) : !u64i loc(#loc182)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc68)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc183)
    %59 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc71)
    cir.store %51, %60 : !s8i, !cir.ptr<!s8i> loc(#loc184)
    %61 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %63 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %64 = cir.load %63 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc75)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.br ^bb7 loc(#loc50)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc13)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc7)
  } loc(#loc155)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc80)
    cir.return loc(#loc79)
  } loc(#loc187)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc193)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc193)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc90)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc194)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc195)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc97)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %9 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    cir.store %8, %9 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc196)
    %10 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc99)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %13 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc198)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc198)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc104)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc104)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
    %19 = cir.const #cir.int<16> : !u64i loc(#loc199)
    cir.libc.memcpy %19 bytes from %18 to %15 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc200)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc109)
    %22 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc201)
    %24 = cir.const #cir.int<1> : !u64i loc(#loc202)
    %25 = cir.binop(div, %23, %24) : !u64i loc(#loc203)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc114)
    %28 = cir.binop(sub, %25, %27) : !u64i loc(#loc204)
    %29 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc116)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %21, %30 : !s8i, !cir.ptr<!s8i> loc(#loc205)
    %31 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %33 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %34 = cir.load %33 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc121)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc93)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc208)
  ^bb6:  // pred: ^bb5
    %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc126)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc126)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    %39 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    cir.store %38, %39 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc209)
    %40 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %41 = cir.load %40 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc128)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %43 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc211)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc211)
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc133)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc133)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
    %49 = cir.const #cir.int<16> : !u64i loc(#loc212)
    cir.libc.memcpy %49 bytes from %48 to %45 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc213)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc138)
    %52 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %53 = cir.const #cir.int<16> : !u64i loc(#loc214)
    %54 = cir.const #cir.int<1> : !u64i loc(#loc215)
    %55 = cir.binop(div, %53, %54) : !u64i loc(#loc216)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc143)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc217)
    %59 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc145)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc146)
    cir.store %51, %60 : !s8i, !cir.ptr<!s8i> loc(#loc218)
    %61 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc219)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %63 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %64 = cir.load %63 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc150)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc220)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    cir.br ^bb7 loc(#loc125)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc89)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc89)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc83)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":40:49)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":34:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":64:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":39:13)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":39:22)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":53:13)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":53:22)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":36:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":63:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":36:8)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":36:33)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":37:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":49:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":51:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":38:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":48:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":28:12)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":40:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":42:46)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":42:31)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":42:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":27:10)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:20)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:35)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:46)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:55)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:76)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:77)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:91)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:39)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:70)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:72)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:83)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:86)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:38)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:28)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":46:31)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":46:46)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":46:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":47:46)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":47:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":47:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":52:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":62:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":54:49)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":54:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":56:46)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":56:31)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":56:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:35)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:46)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:55)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:86)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:87)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:91)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:39)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:70)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:72)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:83)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:86)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:38)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:28)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":60:31)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":60:46)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":60:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":61:46)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":61:31)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":61:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":103:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":106:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":105:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":105:11)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":71:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":101:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":76:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":76:22)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":90:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":90:22)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":73:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":100:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":73:8)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":73:33)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":74:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":86:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":88:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":75:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":85:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":77:49)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":77:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":79:46)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":79:31)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":79:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:20)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:35)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:46)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:55)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:86)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:87)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:91)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:39)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:70)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:72)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:83)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:86)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:38)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:28)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":83:31)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":83:46)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":83:13)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":84:46)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":84:31)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":84:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":89:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":99:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":91:49)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":91:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":93:46)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":93:31)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":93:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:20)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:35)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:46)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:55)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:86)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:87)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:91)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:39)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:70)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:72)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:83)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:86)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:38)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:13)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:28)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":97:31)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":97:46)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":97:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":98:46)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":98:31)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":98:13)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc4, #loc5])
#loc155 = loc(fused[#loc6, #loc7])
#loc156 = loc(fused[#loc8, #loc9])
#loc157 = loc(fused[#loc10, #loc11])
#loc158 = loc(fused[#loc12, #loc13])
#loc159 = loc(fused[#loc14, #loc15])
#loc160 = loc(fused[#loc16, #loc17, #loc18, #loc13])
#loc161 = loc(fused[#loc19, #loc20])
#loc162 = loc(fused[#loc22, #loc3])
#loc163 = loc(fused[#loc24, #loc23])
#loc164 = loc(fused[#loc27, #loc28])
#loc165 = loc(fused[#loc30, #loc31])
#loc166 = loc(fused[#loc32, #loc33])
#loc167 = loc(fused[#loc35, #loc36])
#loc168 = loc(fused[#loc37, #loc38])
#loc169 = loc(fused[#loc35, #loc38])
#loc170 = loc(fused[#loc40, #loc39])
#loc171 = loc(fused[#loc41, #loc34])
#loc172 = loc(fused[#loc43, #loc44])
#loc173 = loc(fused[#loc47, #loc46])
#loc174 = loc(fused[#loc49, #loc50])
#loc175 = loc(fused[#loc52, #loc51])
#loc176 = loc(fused[#loc54, #loc53])
#loc177 = loc(fused[#loc56, #loc57])
#loc178 = loc(fused[#loc59, #loc60])
#loc179 = loc(fused[#loc61, #loc62])
#loc180 = loc(fused[#loc64, #loc65])
#loc181 = loc(fused[#loc66, #loc67])
#loc182 = loc(fused[#loc64, #loc67])
#loc183 = loc(fused[#loc69, #loc68])
#loc184 = loc(fused[#loc70, #loc63])
#loc185 = loc(fused[#loc72, #loc73])
#loc186 = loc(fused[#loc76, #loc75])
#loc187 = loc(fused[#loc78, #loc79])
#loc188 = loc(fused[#loc80, #loc81])
#loc189 = loc(fused[#loc82, #loc83])
#loc190 = loc(fused[#loc84, #loc85])
#loc191 = loc(fused[#loc86, #loc87])
#loc192 = loc(fused[#loc88, #loc89])
#loc193 = loc(fused[#loc90, #loc91])
#loc194 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc195 = loc(fused[#loc95, #loc96])
#loc196 = loc(fused[#loc98, #loc97])
#loc197 = loc(fused[#loc100, #loc99])
#loc198 = loc(fused[#loc102, #loc103])
#loc199 = loc(fused[#loc105, #loc106])
#loc200 = loc(fused[#loc107, #loc108])
#loc201 = loc(fused[#loc110, #loc111])
#loc202 = loc(fused[#loc112, #loc113])
#loc203 = loc(fused[#loc110, #loc113])
#loc204 = loc(fused[#loc115, #loc114])
#loc205 = loc(fused[#loc116, #loc109])
#loc206 = loc(fused[#loc118, #loc119])
#loc207 = loc(fused[#loc122, #loc121])
#loc208 = loc(fused[#loc124, #loc125])
#loc209 = loc(fused[#loc127, #loc126])
#loc210 = loc(fused[#loc129, #loc128])
#loc211 = loc(fused[#loc131, #loc132])
#loc212 = loc(fused[#loc134, #loc135])
#loc213 = loc(fused[#loc136, #loc137])
#loc214 = loc(fused[#loc139, #loc140])
#loc215 = loc(fused[#loc141, #loc142])
#loc216 = loc(fused[#loc139, #loc142])
#loc217 = loc(fused[#loc144, #loc143])
#loc218 = loc(fused[#loc145, #loc138])
#loc219 = loc(fused[#loc147, #loc148])
#loc220 = loc(fused[#loc151, #loc150])
