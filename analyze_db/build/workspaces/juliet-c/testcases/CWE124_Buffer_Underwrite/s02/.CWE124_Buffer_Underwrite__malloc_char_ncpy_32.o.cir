!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc172)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_ncpy_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc178)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc177)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc178)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc181)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc183)
        %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc28)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc29)
        %13 = cir.const #cir.int<1> : !u64i loc(#loc184)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc185)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
        cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
        cir.scope {
          %35 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          %36 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
          %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
          %38 = cir.cmp(eq, %35, %37) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
          cir.if %38 {
            %39 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
            %40 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc39)
            cir.call @exit(%41) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
          } loc(#loc189)
        } loc(#loc187)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
        %19 = cir.const #cir.int<65> : !s32i loc(#loc41)
        %20 = cir.const #cir.int<100> : !s32i loc(#loc42)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc42)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc42)
        cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc190)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc46)
        %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        %27 = cir.const #cir.int<100> : !s32i loc(#loc48)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc48)
        %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc50)
        cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc191)
        %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %32 = cir.const #cir.int<8> : !s32i loc(#loc52)
        %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc52)
        %34 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc53)
        cir.store %34, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
      } loc(#loc182)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
      cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    } loc(#loc180)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc195)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc61)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
      cir.scope {
        %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc197)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
        %10 = cir.const #cir.int<67> : !s32i loc(#loc68)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc69)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc70)
        %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc69)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc69)
        cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc198)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc73)
        %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc73)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc74)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc75)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc74)
        %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
        %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc76)
        cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc199)
        %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc77)
        %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
        %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc80)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc81)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc80)
        %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc80)
        %29 = cir.call @strncpy(%23, %24, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc77)
        %30 = cir.const #cir.int<0> : !s32i loc(#loc82)
        %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc82)
        %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc84)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc84)
        %36 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc86)
        cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc200)
        %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      } loc(#loc196)
    } loc(#loc194)
    cir.return loc(#loc10)
  } loc(#loc175)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_ncpy_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc202)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc201)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc205)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc206)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc205)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc206)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc101)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc209)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc211)
        %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc112)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc113)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc113)
        %13 = cir.const #cir.int<1> : !u64i loc(#loc212)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc213)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
        cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
        cir.scope {
          %32 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
          %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc216)
          cir.if %35 {
            %36 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc121)
            %37 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %38 = cir.unary(minus, %37) nsw : !s32i, !s32i loc(#loc123)
            cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
          } loc(#loc217)
        } loc(#loc215)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
        %19 = cir.const #cir.int<65> : !s32i loc(#loc125)
        %20 = cir.const #cir.int<100> : !s32i loc(#loc126)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc127)
        %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc126)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc126)
        cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc218)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc130)
        %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc130)
        %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
        %27 = cir.const #cir.int<100> : !s32i loc(#loc132)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc132)
        %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc134)
        cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc219)
        %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
        cir.store %31, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
      } loc(#loc210)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
      cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    } loc(#loc208)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc223)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
      cir.scope {
        %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc225)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc149)
        %10 = cir.const #cir.int<67> : !s32i loc(#loc150)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc151)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc152)
        %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc151)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc151)
        cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc226)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc155)
        %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc155)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc156)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc157)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc156)
        %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
        %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc158)
        cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc227)
        %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc159)
        %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
        %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc162)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc163)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc162)
        %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc162)
        %29 = cir.call @strncpy(%23, %24, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
        %30 = cir.const #cir.int<0> : !s32i loc(#loc164)
        %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc164)
        %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc166)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc167)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc166)
        %36 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc168)
        cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc228)
        %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
        cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc170)
      } loc(#loc224)
    } loc(#loc222)
    cir.return loc(#loc94)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":23:1)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":56:1)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":25:5)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":25:12)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":26:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":26:25)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":27:5)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":27:25)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":28:12)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":28:5)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":29:5)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":40:5)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":30:9)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":30:24)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":30:23)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":31:9)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":38:9)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":32:13)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":32:64)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":32:41)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":32:48)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":32:52)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":32:63)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":33:13)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":33:47)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":33:17)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":33:31)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":33:37)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":33:38)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":33:44)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":33:43)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":34:20)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":34:32)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":34:37)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":34:41)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":34:13)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":34:42)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":35:33)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":35:13)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":35:24)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":35:28)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":35:29)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":37:20)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":37:33)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":37:31)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":37:13)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":39:21)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":39:10)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":39:9)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":41:5)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":55:5)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":42:9)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":42:24)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":42:23)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":43:9)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":54:9)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":44:13)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":44:28)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":45:20)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":45:28)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":45:33)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":45:37)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":45:13)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":45:38)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":46:29)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":46:20)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":46:24)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":46:13)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":48:13)
#loc78 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":48:21)
#loc79 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":48:27)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":48:35)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":48:39)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":50:27)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":50:13)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":50:18)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":50:22)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":50:23)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":51:23)
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":51:13)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":98:1)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":101:1)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":100:5)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":100:13)
#loc93 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":63:1)
#loc94 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":96:1)
#loc95 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":65:5)
#loc96 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":65:12)
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":66:5)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":66:25)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":67:5)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":67:25)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":68:12)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":68:5)
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":69:5)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":80:5)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":70:9)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":70:24)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":70:23)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":71:9)
#loc109 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":78:9)
#loc110 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":72:13)
#loc111 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":72:64)
#loc112 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":72:41)
#loc113 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":72:48)
#loc114 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":72:52)
#loc115 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":72:63)
#loc116 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":73:13)
#loc117 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":73:47)
#loc118 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":73:17)
#loc119 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":73:31)
#loc120 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":73:37)
#loc121 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":73:38)
#loc122 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":73:44)
#loc123 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":73:43)
#loc124 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":74:20)
#loc125 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":74:32)
#loc126 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":74:37)
#loc127 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":74:41)
#loc128 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":74:13)
#loc129 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":74:42)
#loc130 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":75:33)
#loc131 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":75:13)
#loc132 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":75:24)
#loc133 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":75:28)
#loc134 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":75:29)
#loc135 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":77:20)
#loc136 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":77:13)
#loc137 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":79:21)
#loc138 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":79:10)
#loc139 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":79:9)
#loc140 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":81:5)
#loc141 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":95:5)
#loc142 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":82:9)
#loc143 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":82:24)
#loc144 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":82:23)
#loc145 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":83:9)
#loc146 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":94:9)
#loc147 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":84:13)
#loc148 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":84:28)
#loc149 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":85:20)
#loc150 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":85:28)
#loc151 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":85:33)
#loc152 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":85:37)
#loc153 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":85:13)
#loc154 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":85:38)
#loc155 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":86:29)
#loc156 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":86:20)
#loc157 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":86:24)
#loc158 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":86:13)
#loc159 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":88:13)
#loc160 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":88:21)
#loc161 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":88:27)
#loc162 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":88:35)
#loc163 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":88:39)
#loc164 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":90:27)
#loc165 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":90:13)
#loc166 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":90:18)
#loc167 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":90:22)
#loc168 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":90:23)
#loc169 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":91:23)
#loc170 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_32.c":91:13)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc13, #loc14])
#loc178 = loc(fused[#loc15, #loc16])
#loc179 = loc(fused[#loc18, #loc17])
#loc180 = loc(fused[#loc19, #loc20])
#loc181 = loc(fused[#loc21, #loc22])
#loc182 = loc(fused[#loc24, #loc25])
#loc183 = loc(fused[#loc26, #loc27])
#loc184 = loc(fused[#loc30, #loc31])
#loc185 = loc(fused[#loc29, #loc31])
#loc186 = loc(fused[#loc28, #loc27])
#loc187 = loc(fused[#loc32, #loc33])
#loc188 = loc(fused[#loc34, #loc35])
#loc189 = loc(fused[#loc36, #loc33])
#loc190 = loc(fused[#loc44, #loc45])
#loc191 = loc(fused[#loc47, #loc46])
#loc192 = loc(fused[#loc54, #loc52])
#loc193 = loc(fused[#loc57, #loc55])
#loc194 = loc(fused[#loc58, #loc59])
#loc195 = loc(fused[#loc60, #loc61])
#loc196 = loc(fused[#loc63, #loc64])
#loc197 = loc(fused[#loc65, #loc66])
#loc198 = loc(fused[#loc71, #loc72])
#loc199 = loc(fused[#loc76, #loc73])
#loc200 = loc(fused[#loc83, #loc82])
#loc201 = loc(fused[#loc89, #loc90])
#loc202 = loc(fused[#loc91, #loc92])
#loc203 = loc(fused[#loc93, #loc94])
#loc204 = loc(fused[#loc95, #loc96])
#loc205 = loc(fused[#loc97, #loc98])
#loc206 = loc(fused[#loc99, #loc100])
#loc207 = loc(fused[#loc102, #loc101])
#loc208 = loc(fused[#loc103, #loc104])
#loc209 = loc(fused[#loc105, #loc106])
#loc210 = loc(fused[#loc108, #loc109])
#loc211 = loc(fused[#loc110, #loc111])
#loc212 = loc(fused[#loc114, #loc115])
#loc213 = loc(fused[#loc113, #loc115])
#loc214 = loc(fused[#loc112, #loc111])
#loc215 = loc(fused[#loc116, #loc117])
#loc216 = loc(fused[#loc118, #loc119])
#loc217 = loc(fused[#loc120, #loc117])
#loc218 = loc(fused[#loc128, #loc129])
#loc219 = loc(fused[#loc131, #loc130])
#loc220 = loc(fused[#loc136, #loc135])
#loc221 = loc(fused[#loc139, #loc137])
#loc222 = loc(fused[#loc140, #loc141])
#loc223 = loc(fused[#loc142, #loc143])
#loc224 = loc(fused[#loc145, #loc146])
#loc225 = loc(fused[#loc147, #loc148])
#loc226 = loc(fused[#loc153, #loc154])
#loc227 = loc(fused[#loc158, #loc155])
#loc228 = loc(fused[#loc165, #loc164])
