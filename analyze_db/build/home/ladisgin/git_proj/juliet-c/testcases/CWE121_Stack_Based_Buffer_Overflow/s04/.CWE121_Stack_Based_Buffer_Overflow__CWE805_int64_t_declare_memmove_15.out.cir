!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":116:10)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":116:14)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":116:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":116:32)
#loc157 = loc(fused[#loc54, #loc55])
#loc158 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLongLongLine(!s64i) loc(#loc139)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc143)
    %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc18)
    cir.br ^bb2 loc(#loc16)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc16)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 50>>), !cir.ptr<!s64i> loc(#loc20)
    cir.store %5, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc146)
    cir.br ^bb6 loc(#loc22)
  ^bb5:  // pred: ^bb2
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc147)
  ^bb8:  // pred: ^bb7
    %8 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc141)
    cir.store %8, %0 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc141)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc27)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc28)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc28)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc29)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc148)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc149)
    cir.libc.memmove %16 bytes from %12 to %10 : !cir.ptr<!void>, !u64i loc(#loc150)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc34)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc36)
    %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc34)
    cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc37)
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc7)
  } loc(#loc140)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc151)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc154)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc61)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.return %17 : !s32i loc(#loc161)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc165)
    %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc166)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc84)
    cir.br ^bb2 loc(#loc82)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc82)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb6 loc(#loc88)
  ^bb5:  // pred: ^bb2
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc89)
    cir.store %7, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc168)
    cir.br ^bb6 loc(#loc91)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc83)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc169)
  ^bb8:  // pred: ^bb7
    %8 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc163)
    cir.store %8, %0 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc163)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc94)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc94)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc95)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc95)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc96)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc170)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc171)
    cir.libc.memmove %16 bytes from %12 to %10 : !cir.ptr<!void>, !u64i loc(#loc172)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc101)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc103)
    %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc101)
    cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc104)
    cir.br ^bb9 loc(#loc93)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc73)
  } loc(#loc162)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc176)
    %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc177)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc117)
    cir.br ^bb2 loc(#loc115)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc115)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc118)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc119)
    cir.store %5, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc179)
    cir.br ^bb6 loc(#loc121)
  ^bb5:  // pred: ^bb2
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc122)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb6 loc(#loc124)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc116)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc180)
  ^bb8:  // pred: ^bb7
    %8 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc174)
    cir.store %8, %0 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc174)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc127)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc127)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc128)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc128)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc129)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc129)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc181)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc182)
    cir.libc.memmove %16 bytes from %12 to %10 : !cir.ptr<!void>, !u64i loc(#loc183)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc134)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc136)
    %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc134)
    cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc137)
    cir.br ^bb9 loc(#loc126)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc106)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":35:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":21:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":44:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":39:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":39:33)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":23:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":23:15)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":24:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":24:29)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":25:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":25:31)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":26:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":37:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":26:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":28:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":31:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":31:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":32:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":35:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":36:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":38:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":43:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":41:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":41:23)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":41:31)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":41:35)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":41:49)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":41:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":41:50)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":42:27)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":42:32)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":42:33)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":42:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":100:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":104:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":102:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":102:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":103:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":103:14)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":121:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":123:15)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":126:15)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":128:15)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":116:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":131:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":117:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":119:27)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":119:22)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":119:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":121:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":122:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":122:80)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":123:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":126:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":127:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":127:79)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":128:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":130:12)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":130:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":51:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":73:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":68:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":68:33)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":53:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":53:15)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":54:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":54:29)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":55:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":55:31)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":56:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":66:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":56:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":58:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":60:19)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":60:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":61:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":64:16)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":64:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":65:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":67:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":72:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":70:17)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":70:23)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":70:31)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":70:35)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":70:49)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":70:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":70:50)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":71:27)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":71:32)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":71:33)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":71:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":76:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":98:1)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":93:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":93:33)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":78:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":78:15)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":79:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":79:29)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":80:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":80:31)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":81:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":91:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":81:12)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":83:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":85:16)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":85:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":86:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":89:19)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":89:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":90:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":92:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":97:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":95:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":95:23)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":95:31)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":95:35)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":95:49)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":95:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":95:50)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":96:27)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":96:32)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":96:33)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_15.c":96:9)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc4, #loc5])
#loc140 = loc(fused[#loc6, #loc7])
#loc141 = loc(fused[#loc8, #loc9])
#loc142 = loc(fused[#loc10, #loc11])
#loc143 = loc(fused[#loc12, #loc13])
#loc144 = loc(fused[#loc14, #loc15])
#loc145 = loc(fused[#loc16, #loc17])
#loc146 = loc(fused[#loc21, #loc20])
#loc147 = loc(fused[#loc25, #loc26])
#loc148 = loc(fused[#loc30, #loc31])
#loc149 = loc(fused[#loc29, #loc31])
#loc150 = loc(fused[#loc32, #loc33])
#loc151 = loc(fused[#loc38, #loc39])
#loc152 = loc(fused[#loc40, #loc41])
#loc153 = loc(fused[#loc42, #loc43])
#loc154 = loc(fused[#loc44, #loc45])
#loc155 = loc(fused[#loc46, #loc47])
#loc156 = loc(fused[#loc52, #loc53])
#loc159 = loc(fused[#loc63, #loc64])
#loc160 = loc(fused[#loc67, #loc68])
#loc161 = loc(fused[#loc71, #loc70])
#loc162 = loc(fused[#loc72, #loc73])
#loc163 = loc(fused[#loc74, #loc75])
#loc164 = loc(fused[#loc76, #loc77])
#loc165 = loc(fused[#loc78, #loc79])
#loc166 = loc(fused[#loc80, #loc81])
#loc167 = loc(fused[#loc82, #loc83])
#loc168 = loc(fused[#loc90, #loc89])
#loc169 = loc(fused[#loc92, #loc93])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc96, #loc98])
#loc172 = loc(fused[#loc99, #loc100])
#loc173 = loc(fused[#loc105, #loc106])
#loc174 = loc(fused[#loc107, #loc108])
#loc175 = loc(fused[#loc109, #loc110])
#loc176 = loc(fused[#loc111, #loc112])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc115, #loc116])
#loc179 = loc(fused[#loc120, #loc119])
#loc180 = loc(fused[#loc125, #loc126])
#loc181 = loc(fused[#loc130, #loc131])
#loc182 = loc(fused[#loc129, #loc131])
#loc183 = loc(fused[#loc132, #loc133])
