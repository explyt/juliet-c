!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc82 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":101:10)
#loc83 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":101:14)
#loc84 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":101:20)
#loc85 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":101:32)
#loc131 = loc(fused[#loc82, #loc83])
#loc132 = loc(fused[#loc84, #loc85])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_zero_modulo_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc98)
  cir.func @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc100)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc101)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc102)
    cir.store %1, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc12)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc6)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc6)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc106)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc20)
    cir.br ^bb2 loc(#loc17)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc99)
  cir.func internal private @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc108)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc109)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc110)
    cir.store %1, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc28)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc30)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc32)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.br ^bb1 loc(#loc113)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc114)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc38)
    cir.br ^bb2 loc(#loc35)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc22)
  } loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc39)
  cir.func internal private @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_33L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc117)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc118)
    cir.store %1, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc47)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc49)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc51)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.br ^bb2 loc(#loc122)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %10 = cir.cmp(ne, %8, %9) : !s32i, !cir.bool loc(#loc123)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc124)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %13 = cir.binop(rem, %11, %12) : !s32i loc(#loc125)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc64)
    cir.br ^bb5 loc(#loc60)
  ^bb4:  // pred: ^bb2
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb5 loc(#loc56)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc56)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc54)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc41)
  } loc(#loc115)
  cir.func @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_334goodEv() extra(#fn_attr) {
    cir.call @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_33L7goodG2BEv() : () -> () loc(#loc68)
    cir.call @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_33L7goodB2GEv() : () -> () loc(#loc69)
    cir.return loc(#loc67)
  } loc(#loc126)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc127)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc89)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.call @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_334goodEv() : () -> () loc(#loc91)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.call @_ZN41CWE369_Divide_by_Zero__int_zero_modulo_333badEv() : () -> () loc(#loc94)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc96)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %15 : !s32i loc(#loc133)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":25:1)
#loc4 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":38:1)
#loc5 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":34:9)
#loc6 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":34:20)
#loc7 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":27:5)
#loc8 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":27:9)
#loc9 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":28:5)
#loc10 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":28:20)
#loc11 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":30:13)
#loc12 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":30:12)
#loc13 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":30:5)
#loc14 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":32:12)
#loc15 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":32:5)
#loc16 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":33:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":37:5)
#loc18 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":36:22)
#loc19 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":36:28)
#loc20 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":36:9)
#loc21 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":45:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":58:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":54:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":54:20)
#loc25 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":47:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":47:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":48:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":48:20)
#loc29 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":50:13)
#loc30 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":50:12)
#loc31 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":50:5)
#loc32 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":52:12)
#loc33 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":52:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":53:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":57:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":56:22)
#loc37 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":56:28)
#loc38 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":56:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":78:23)
#loc40 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":61:1)
#loc41 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":81:1)
#loc42 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":70:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":70:20)
#loc44 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":63:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":63:9)
#loc46 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":64:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":64:20)
#loc48 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":66:13)
#loc49 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":66:12)
#loc50 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":66:5)
#loc51 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":68:12)
#loc52 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":68:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":69:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":80:5)
#loc55 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":72:9)
#loc56 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":79:9)
#loc57 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":72:13)
#loc58 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":72:21)
#loc59 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":73:9)
#loc60 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":75:9)
#loc61 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":77:9)
#loc62 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":74:26)
#loc63 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":74:32)
#loc64 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":74:13)
#loc65 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":78:13)
#loc66 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":83:1)
#loc67 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":87:1)
#loc68 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":85:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":86:5)
#loc70 = loc("/usr/include/stdlib.h":575:1)
#loc71 = loc("/usr/include/stdlib.h":575:41)
#loc72 = loc("/usr/include/time.h":76:1)
#loc73 = loc("/usr/include/time.h":76:38)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc76 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":106:15)
#loc77 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":108:15)
#loc78 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":111:15)
#loc79 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":113:15)
#loc80 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":101:1)
#loc81 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":116:1)
#loc86 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":102:1)
#loc87 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":104:27)
#loc88 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":104:22)
#loc89 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":104:5)
#loc90 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":106:5)
#loc91 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":107:5)
#loc92 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":108:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":111:5)
#loc94 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":112:5)
#loc95 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":113:5)
#loc96 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":115:12)
#loc97 = loc("CWE369_Divide_by_Zero__int_zero_modulo_33.cpp":115:5)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc7, #loc8])
#loc102 = loc(fused[#loc9, #loc10])
#loc103 = loc(fused[#loc13, #loc11])
#loc104 = loc(fused[#loc15, #loc14])
#loc105 = loc(fused[#loc16, #loc17])
#loc106 = loc(fused[#loc18, #loc19])
#loc107 = loc(fused[#loc21, #loc22])
#loc108 = loc(fused[#loc23, #loc24])
#loc109 = loc(fused[#loc25, #loc26])
#loc110 = loc(fused[#loc27, #loc28])
#loc111 = loc(fused[#loc31, #loc29])
#loc112 = loc(fused[#loc33, #loc32])
#loc113 = loc(fused[#loc34, #loc35])
#loc114 = loc(fused[#loc36, #loc37])
#loc115 = loc(fused[#loc40, #loc41])
#loc116 = loc(fused[#loc42, #loc43])
#loc117 = loc(fused[#loc44, #loc45])
#loc118 = loc(fused[#loc46, #loc47])
#loc119 = loc(fused[#loc50, #loc48])
#loc120 = loc(fused[#loc52, #loc51])
#loc121 = loc(fused[#loc53, #loc54])
#loc122 = loc(fused[#loc55, #loc56])
#loc123 = loc(fused[#loc57, #loc58])
#loc124 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc125 = loc(fused[#loc62, #loc63])
#loc126 = loc(fused[#loc66, #loc67])
#loc127 = loc(fused[#loc70, #loc71])
#loc128 = loc(fused[#loc72, #loc73])
#loc129 = loc(fused[#loc74, #loc75])
#loc130 = loc(fused[#loc80, #loc81])
#loc133 = loc(fused[#loc97, #loc96])
