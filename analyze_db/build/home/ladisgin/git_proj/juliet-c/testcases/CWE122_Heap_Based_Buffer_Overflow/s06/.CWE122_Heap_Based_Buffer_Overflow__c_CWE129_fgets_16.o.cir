!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:27)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc297)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc298)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc299)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc300)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc301)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc302)
  cir.func private @printIntLine(!s32i) loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc304)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc306)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc307)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc308)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc309)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc30)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb1 loc(#loc311)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc311)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc34)
    cir.brcond %7 ^bb3, ^bb11 loc(#loc34)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc312)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc306)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc306)
    cir.br ^bb5 loc(#loc313)
  ^bb5:  // pred: ^bb4
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc40)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc40)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc40)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc40)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc40)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc40)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc40)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc298)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc314)
    cir.brcond %23 ^bb6, ^bb7 loc(#loc315)
  ^bb6:  // pred: ^bb5
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc47)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    cir.br ^bb8 loc(#loc45)
  ^bb7:  // pred: ^bb5
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb8 loc(#loc38)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc38)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc36)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc52)
  ^bb11:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb12 loc(#loc33)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc317)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc317)
  ^bb14:  // pred: ^bb13
    %28 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %29 ^bb15, ^bb43 loc(#loc55)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc318)
  ^bb16:  // pred: ^bb15
    %30 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc59)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc59)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc319)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc320)
    %35 = cir.call @malloc(%34) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc321)
    cir.store %36, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc308)
    cir.br ^bb17 loc(#loc322)
  ^bb17:  // pred: ^bb16
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc65)
    %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s32i>, !cir.bool loc(#loc323)
    cir.brcond %40 ^bb18, ^bb19 loc(#loc324)
  ^bb18:  // pred: ^bb17
    %41 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc69)
    cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb19 loc(#loc63)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc63)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc325)
  ^bb21:  // pred: ^bb20
    %44 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %44, %1 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.br ^bb22 loc(#loc325)
  ^bb22:  // 2 preds: ^bb21, ^bb26
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc75)
    %47 = cir.cmp(lt, %45, %46) : !s32i, !cir.bool loc(#loc327)
    cir.brcond %47 ^bb23, ^bb27 loc(#loc76)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc328)
  ^bb24:  // pred: ^bb23
    %48 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc81)
    cir.store %48, %51 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    cir.br ^bb25 loc(#loc71)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc71)
  ^bb26:  // pred: ^bb25
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %53 = cir.unary(inc, %52) : !s32i, !s32i loc(#loc83)
    cir.store %53, %1 : !s32i, !cir.ptr<!s32i> loc(#loc330)
    cir.br ^bb22 loc(#loc325)
  ^bb27:  // pred: ^bb22
    cir.br ^bb28 loc(#loc71)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc331)
  ^bb29:  // pred: ^bb28
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %56 = cir.cmp(ge, %54, %55) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %56 ^bb30, ^bb39 loc(#loc333)
  ^bb30:  // pred: ^bb29
    %57 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %58 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %60 = cir.ptr_stride(%58 : !cir.ptr<!s32i>, %59 : !s32i), !cir.ptr<!s32i> loc(#loc94)
    cir.store %57, %60 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb31 loc(#loc335)
  ^bb31:  // pred: ^bb30
    %61 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %61, %1 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb32 loc(#loc335)
  ^bb32:  // 2 preds: ^bb31, ^bb36
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %63 = cir.const #cir.int<10> : !s32i loc(#loc100)
    %64 = cir.cmp(lt, %62, %63) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %64 ^bb33, ^bb37 loc(#loc101)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc338)
  ^bb34:  // pred: ^bb33
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %67 = cir.ptr_stride(%65 : !cir.ptr<!s32i>, %66 : !s32i), !cir.ptr<!s32i> loc(#loc105)
    %68 = cir.load %67 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.call @printIntLine(%68) : (!s32i) -> () loc(#loc106)
    cir.br ^bb35 loc(#loc96)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc96)
  ^bb36:  // pred: ^bb35
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %70 = cir.unary(inc, %69) : !s32i, !s32i loc(#loc108)
    cir.store %70, %1 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb32 loc(#loc335)
  ^bb37:  // pred: ^bb32
    cir.br ^bb38 loc(#loc96)
  ^bb38:  // pred: ^bb37
    cir.br ^bb40 loc(#loc89)
  ^bb39:  // pred: ^bb29
    %71 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %72 = cir.cast(array_to_ptrdecay, %71 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb40 loc(#loc85)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc85)
  ^bb41:  // pred: ^bb40
    %73 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    %74 = cir.cast(bitcast, %73 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc110)
    cir.call @free(%74) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
    cir.br ^bb42 loc(#loc57)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc112)
  ^bb43:  // 2 preds: ^bb14, ^bb42
    cir.br ^bb44 loc(#loc54)
  ^bb44:  // pred: ^bb43
    cir.return loc(#loc20)
  } loc(#loc305)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc341)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc115)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc342)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc117)
    cir.return loc(#loc114)
  } loc(#loc340)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc119)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc344)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc345)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc346)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc347)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc131)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.br ^bb1 loc(#loc349)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc349)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc135)
    cir.brcond %7 ^bb3, ^bb11 loc(#loc135)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc350)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc344)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc344)
    cir.br ^bb5 loc(#loc351)
  ^bb5:  // pred: ^bb4
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc141)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc141)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc141)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc141)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc141)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc141)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc141)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc141)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc298)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc142)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc143)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc144)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc144)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc352)
    cir.brcond %23 ^bb6, ^bb7 loc(#loc353)
  ^bb6:  // pred: ^bb5
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc148)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc149)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb8 loc(#loc146)
  ^bb7:  // pred: ^bb5
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc152)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.br ^bb8 loc(#loc139)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc139)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc137)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc154)
  ^bb11:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb12 loc(#loc134)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc355)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc355)
  ^bb14:  // pred: ^bb13
    %28 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc157)
    cir.brcond %29 ^bb15, ^bb51 loc(#loc157)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc356)
  ^bb16:  // pred: ^bb15
    %30 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc160)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc161)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc161)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc357)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc358)
    %35 = cir.call @malloc(%34) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc160)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc359)
    cir.store %36, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc346)
    cir.br ^bb17 loc(#loc360)
  ^bb17:  // pred: ^bb16
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc167)
    %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s32i>, !cir.bool loc(#loc361)
    cir.brcond %40 ^bb18, ^bb19 loc(#loc362)
  ^bb18:  // pred: ^bb17
    %41 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc169)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc171)
    cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc169)
    cir.br ^bb19 loc(#loc165)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc165)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc363)
  ^bb21:  // pred: ^bb20
    %44 = cir.const #cir.int<0> : !s32i loc(#loc174)
    cir.store %44, %1 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.br ^bb22 loc(#loc363)
  ^bb22:  // 2 preds: ^bb21, ^bb26
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc177)
    %47 = cir.cmp(lt, %45, %46) : !s32i, !cir.bool loc(#loc365)
    cir.brcond %47 ^bb23, ^bb27 loc(#loc178)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc366)
  ^bb24:  // pred: ^bb23
    %48 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc183)
    cir.store %48, %51 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    cir.br ^bb25 loc(#loc173)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc173)
  ^bb26:  // pred: ^bb25
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %53 = cir.unary(inc, %52) : !s32i, !s32i loc(#loc185)
    cir.store %53, %1 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb22 loc(#loc363)
  ^bb27:  // pred: ^bb22
    cir.br ^bb28 loc(#loc173)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc369)
  ^bb29:  // pred: ^bb28
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %56 = cir.cmp(ge, %54, %55) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %56 ^bb30, ^bb35 loc(#loc190)
  ^bb30:  // pred: ^bb29
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %58 = cir.const #cir.int<10> : !s32i loc(#loc192)
    %59 = cir.cmp(lt, %57, %58) : !s32i, !cir.bool loc(#loc371)
    cir.brcond %59 ^bb31, ^bb32 loc(#loc190)
  ^bb31:  // pred: ^bb30
    %60 = cir.const #true loc(#loc190)
    cir.br ^bb33(%60 : !cir.bool) loc(#loc190)
  ^bb32:  // pred: ^bb30
    %61 = cir.const #false loc(#loc190)
    cir.br ^bb33(%61 : !cir.bool) loc(#loc190)
  ^bb33(%62: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:27)):  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc190)
  ^bb34:  // pred: ^bb33
    cir.br ^bb36(%62 : !cir.bool) loc(#loc190)
  ^bb35:  // pred: ^bb29
    %63 = cir.const #false loc(#loc190)
    cir.br ^bb36(%63 : !cir.bool) loc(#loc190)
  ^bb36(%64: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:27)):  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc190)
  ^bb37:  // pred: ^bb36
    cir.brcond %64 ^bb38, ^bb47 loc(#loc372)
  ^bb38:  // pred: ^bb37
    %65 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %66 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc198)
    %67 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    %68 = cir.ptr_stride(%66 : !cir.ptr<!s32i>, %67 : !s32i), !cir.ptr<!s32i> loc(#loc200)
    cir.store %65, %68 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb39 loc(#loc374)
  ^bb39:  // pred: ^bb38
    %69 = cir.const #cir.int<0> : !s32i loc(#loc203)
    cir.store %69, %1 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.br ^bb40 loc(#loc374)
  ^bb40:  // 2 preds: ^bb39, ^bb44
    %70 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    %71 = cir.const #cir.int<10> : !s32i loc(#loc206)
    %72 = cir.cmp(lt, %70, %71) : !s32i, !cir.bool loc(#loc376)
    cir.brcond %72 ^bb41, ^bb45 loc(#loc207)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc377)
  ^bb42:  // pred: ^bb41
    %73 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc209)
    %74 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    %75 = cir.ptr_stride(%73 : !cir.ptr<!s32i>, %74 : !s32i), !cir.ptr<!s32i> loc(#loc211)
    %76 = cir.load %75 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.call @printIntLine(%76) : (!s32i) -> () loc(#loc212)
    cir.br ^bb43 loc(#loc202)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc202)
  ^bb44:  // pred: ^bb43
    %77 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    %78 = cir.unary(inc, %77) : !s32i, !s32i loc(#loc214)
    cir.store %78, %1 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb40 loc(#loc374)
  ^bb45:  // pred: ^bb40
    cir.br ^bb46 loc(#loc202)
  ^bb46:  // pred: ^bb45
    cir.br ^bb48 loc(#loc195)
  ^bb47:  // pred: ^bb37
    %79 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc119)
    %80 = cir.cast(array_to_ptrdecay, %79 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%80) : (!cir.ptr<!s8i>) -> () loc(#loc215)
    cir.br ^bb48 loc(#loc187)
  ^bb48:  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc187)
  ^bb49:  // pred: ^bb48
    %81 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc216)
    %82 = cir.cast(bitcast, %81 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc216)
    cir.call @free(%82) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc217)
    cir.br ^bb50 loc(#loc159)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc218)
  ^bb51:  // 2 preds: ^bb14, ^bb50
    cir.br ^bb52 loc(#loc156)
  ^bb52:  // pred: ^bb51
    cir.return loc(#loc121)
  } loc(#loc343)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc381)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc382)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc228)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb1 loc(#loc384)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc384)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc232)
    cir.brcond %6 ^bb3, ^bb4 loc(#loc232)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<7> : !s32i loc(#loc233)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    cir.br ^bb4 loc(#loc235)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc231)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc386)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc386)
  ^bb7:  // pred: ^bb6
    %8 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc238)
    cir.brcond %9 ^bb8, ^bb36 loc(#loc238)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc387)
  ^bb9:  // pred: ^bb8
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc241)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc242)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc242)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc388)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc389)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc241)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc390)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc381)
    cir.br ^bb10 loc(#loc391)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc247)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc248)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc248)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc392)
    cir.brcond %20 ^bb11, ^bb12 loc(#loc393)
  ^bb11:  // pred: ^bb10
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc250)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc251)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc252)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc250)
    cir.br ^bb12 loc(#loc246)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc246)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc394)
  ^bb14:  // pred: ^bb13
    %24 = cir.const #cir.int<0> : !s32i loc(#loc255)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc395)
    cir.br ^bb15 loc(#loc394)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc258)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc396)
    cir.brcond %27 ^bb16, ^bb20 loc(#loc259)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc397)
  ^bb17:  // pred: ^bb16
    %28 = cir.const #cir.int<0> : !s32i loc(#loc261)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc262)
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc264)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.br ^bb18 loc(#loc254)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc254)
  ^bb19:  // pred: ^bb18
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %33 = cir.unary(inc, %32) : !s32i, !s32i loc(#loc266)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    cir.br ^bb15 loc(#loc394)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc254)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc400)
  ^bb22:  // pred: ^bb21
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc270)
    %36 = cir.cmp(ge, %34, %35) : !s32i, !cir.bool loc(#loc401)
    cir.brcond %36 ^bb23, ^bb32 loc(#loc402)
  ^bb23:  // pred: ^bb22
    %37 = cir.const #cir.int<1> : !s32i loc(#loc274)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc275)
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc277)
    cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.br ^bb24 loc(#loc404)
  ^bb24:  // pred: ^bb23
    %41 = cir.const #cir.int<0> : !s32i loc(#loc280)
    cir.store %41, %0 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.br ^bb25 loc(#loc404)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %43 = cir.const #cir.int<10> : !s32i loc(#loc283)
    %44 = cir.cmp(lt, %42, %43) : !s32i, !cir.bool loc(#loc406)
    cir.brcond %44 ^bb26, ^bb30 loc(#loc284)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc407)
  ^bb27:  // pred: ^bb26
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc286)
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc288)
    %48 = cir.load %47 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    cir.call @printIntLine(%48) : (!s32i) -> () loc(#loc289)
    cir.br ^bb28 loc(#loc279)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc279)
  ^bb29:  // pred: ^bb28
    %49 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %50 = cir.unary(inc, %49) : !s32i, !s32i loc(#loc291)
    cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.br ^bb25 loc(#loc404)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc279)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc272)
  ^bb32:  // pred: ^bb22
    %51 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc292)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc292)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc293)
    cir.br ^bb33 loc(#loc268)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc268)
  ^bb34:  // pred: ^bb33
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc294)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc294)
    cir.call @free(%54) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc295)
    cir.br ^bb35 loc(#loc240)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc296)
  ^bb36:  // 2 preds: ^bb7, ^bb35
    cir.br ^bb37 loc(#loc237)
  ^bb37:  // pred: ^bb36
    cir.return loc(#loc220)
  } loc(#loc379)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":41:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":70:27)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":24:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":76:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":32:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":32:49)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":49:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":49:17)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:58)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":26:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":26:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":28:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":28:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":28:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":29:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":45:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":29:11)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":31:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":43:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":42:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:23)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:36)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:53)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:17)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:63)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":35:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":38:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":40:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":37:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":37:24)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":37:17)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":37:40)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":41:17)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":44:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":46:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":75:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":46:11)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":48:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":73:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:35)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:42)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:47)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:57)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:43)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:17)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:27)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:33)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:34)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:40)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:39)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":56:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:22)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:18)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:25)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:29)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:27)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":54:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":55:29)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":55:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":55:24)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":55:25)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:34)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:33)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":59:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":71:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":59:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":59:25)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":60:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":67:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":69:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":61:32)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":61:17)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":61:24)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":61:28)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:17)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":66:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:25)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:21)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:28)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:32)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:30)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":64:17)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":65:34)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":65:41)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":65:42)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":65:21)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:37)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:36)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":70:17)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":72:18)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":72:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":74:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":181:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":185:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":183:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":183:13)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":184:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":184:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":128:27)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":83:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":134:1)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":91:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":91:49)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":108:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":108:17)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:58)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":85:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":85:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":87:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":87:12)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":87:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":88:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":104:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":88:11)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":90:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":102:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":101:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:23)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:36)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:53)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:17)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:63)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":94:13)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":97:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":99:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":96:29)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":96:24)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":96:17)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":96:40)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":100:27)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":100:17)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":103:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":105:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":133:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":105:11)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":107:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":131:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:35)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:42)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:47)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:57)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:43)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:17)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:27)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:33)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:34)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:40)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:39)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":115:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:22)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:18)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:25)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:29)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:27)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":113:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":114:29)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":114:17)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":114:24)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":114:25)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:34)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:33)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:13)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":129:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:17)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:25)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:30)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:38)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:40)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":118:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":125:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":127:13)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":119:32)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":119:17)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":119:24)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":119:28)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:17)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":124:17)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:25)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:21)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:28)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:32)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:30)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":122:17)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":123:34)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":123:41)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":123:42)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":123:21)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:37)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:36)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":128:17)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":130:18)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":130:13)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":132:9)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":137:1)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":179:1)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":152:13)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":152:17)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:13)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:58)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":139:5)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":139:9)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":141:13)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":141:12)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":141:5)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":142:5)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":148:5)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":142:11)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":146:16)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":146:9)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":147:9)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":149:5)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":178:5)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":149:11)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":151:9)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":176:9)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:35)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:42)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:47)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:57)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:43)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:17)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:27)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:33)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:34)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:40)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:39)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:13)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":159:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:22)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:18)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:25)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:29)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:27)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":157:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":158:29)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":158:17)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":158:24)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":158:25)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:34)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:33)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":162:13)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":174:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":162:17)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":162:25)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":163:13)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":170:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":172:13)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":164:32)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":164:17)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":164:24)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":164:28)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:17)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":169:17)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:25)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:21)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:28)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:32)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:30)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":167:17)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":168:34)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":168:41)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":168:42)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":168:21)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:37)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:36)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":173:27)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":173:17)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":175:18)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":175:13)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":177:9)
#loc297 = loc(fused[#loc1, #loc2])
#loc298 = loc(fused[#loc3, #loc4])
#loc299 = loc(fused[#loc5, #loc6])
#loc300 = loc(fused[#loc7, #loc8])
#loc301 = loc(fused[#loc10, #loc11])
#loc302 = loc(fused[#loc12, #loc13])
#loc303 = loc(fused[#loc14, #loc15])
#loc304 = loc(fused[#loc17, #loc18])
#loc305 = loc(fused[#loc19, #loc20])
#loc306 = loc(fused[#loc21, #loc22])
#loc307 = loc(fused[#loc23, #loc24])
#loc308 = loc(fused[#loc25, #loc26])
#loc309 = loc(fused[#loc27, #loc28])
#loc310 = loc(fused[#loc31, #loc29])
#loc311 = loc(fused[#loc32, #loc33])
#loc312 = loc(fused[#loc35, #loc36])
#loc313 = loc(fused[#loc37, #loc38])
#loc314 = loc(fused[#loc42, #loc43])
#loc315 = loc(fused[#loc44, #loc45, #loc46, #loc38])
#loc316 = loc(fused[#loc49, #loc50])
#loc317 = loc(fused[#loc53, #loc54])
#loc318 = loc(fused[#loc56, #loc57])
#loc319 = loc(fused[#loc60, #loc61])
#loc320 = loc(fused[#loc59, #loc61])
#loc321 = loc(fused[#loc58, #loc26])
#loc322 = loc(fused[#loc62, #loc63])
#loc323 = loc(fused[#loc64, #loc65])
#loc324 = loc(fused[#loc66, #loc63])
#loc325 = loc(fused[#loc70, #loc71])
#loc326 = loc(fused[#loc73, #loc72])
#loc327 = loc(fused[#loc74, #loc75])
#loc328 = loc(fused[#loc77, #loc71])
#loc329 = loc(fused[#loc79, #loc78])
#loc330 = loc(fused[#loc83, #loc82])
#loc331 = loc(fused[#loc84, #loc85])
#loc332 = loc(fused[#loc86, #loc87])
#loc333 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc334 = loc(fused[#loc92, #loc91])
#loc335 = loc(fused[#loc95, #loc96])
#loc336 = loc(fused[#loc98, #loc97])
#loc337 = loc(fused[#loc99, #loc100])
#loc338 = loc(fused[#loc102, #loc96])
#loc339 = loc(fused[#loc108, #loc107])
#loc340 = loc(fused[#loc113, #loc114])
#loc341 = loc(fused[#loc115, #loc116])
#loc342 = loc(fused[#loc117, #loc118])
#loc343 = loc(fused[#loc120, #loc121])
#loc344 = loc(fused[#loc122, #loc123])
#loc345 = loc(fused[#loc124, #loc125])
#loc346 = loc(fused[#loc126, #loc127])
#loc347 = loc(fused[#loc128, #loc129])
#loc348 = loc(fused[#loc132, #loc130])
#loc349 = loc(fused[#loc133, #loc134])
#loc350 = loc(fused[#loc136, #loc137])
#loc351 = loc(fused[#loc138, #loc139])
#loc352 = loc(fused[#loc143, #loc144])
#loc353 = loc(fused[#loc145, #loc146, #loc147, #loc139])
#loc354 = loc(fused[#loc150, #loc151])
#loc355 = loc(fused[#loc155, #loc156])
#loc356 = loc(fused[#loc158, #loc159])
#loc357 = loc(fused[#loc162, #loc163])
#loc358 = loc(fused[#loc161, #loc163])
#loc359 = loc(fused[#loc160, #loc127])
#loc360 = loc(fused[#loc164, #loc165])
#loc361 = loc(fused[#loc166, #loc167])
#loc362 = loc(fused[#loc168, #loc165])
#loc363 = loc(fused[#loc172, #loc173])
#loc364 = loc(fused[#loc175, #loc174])
#loc365 = loc(fused[#loc176, #loc177])
#loc366 = loc(fused[#loc179, #loc173])
#loc367 = loc(fused[#loc181, #loc180])
#loc368 = loc(fused[#loc185, #loc184])
#loc369 = loc(fused[#loc186, #loc187])
#loc370 = loc(fused[#loc188, #loc189])
#loc371 = loc(fused[#loc191, #loc193])
#loc372 = loc(fused[#loc194, #loc195, #loc196, #loc187])
#loc373 = loc(fused[#loc198, #loc197])
#loc374 = loc(fused[#loc201, #loc202])
#loc375 = loc(fused[#loc204, #loc203])
#loc376 = loc(fused[#loc205, #loc206])
#loc377 = loc(fused[#loc208, #loc202])
#loc378 = loc(fused[#loc214, #loc213])
#loc379 = loc(fused[#loc219, #loc220])
#loc380 = loc(fused[#loc221, #loc222])
#loc381 = loc(fused[#loc223, #loc224])
#loc382 = loc(fused[#loc225, #loc226])
#loc383 = loc(fused[#loc229, #loc227])
#loc384 = loc(fused[#loc230, #loc231])
#loc385 = loc(fused[#loc234, #loc233])
#loc386 = loc(fused[#loc236, #loc237])
#loc387 = loc(fused[#loc239, #loc240])
#loc388 = loc(fused[#loc243, #loc244])
#loc389 = loc(fused[#loc242, #loc244])
#loc390 = loc(fused[#loc241, #loc224])
#loc391 = loc(fused[#loc245, #loc246])
#loc392 = loc(fused[#loc247, #loc248])
#loc393 = loc(fused[#loc249, #loc246])
#loc394 = loc(fused[#loc253, #loc254])
#loc395 = loc(fused[#loc256, #loc255])
#loc396 = loc(fused[#loc257, #loc258])
#loc397 = loc(fused[#loc260, #loc254])
#loc398 = loc(fused[#loc262, #loc261])
#loc399 = loc(fused[#loc266, #loc265])
#loc400 = loc(fused[#loc267, #loc268])
#loc401 = loc(fused[#loc269, #loc270])
#loc402 = loc(fused[#loc271, #loc272, #loc273, #loc268])
#loc403 = loc(fused[#loc275, #loc274])
#loc404 = loc(fused[#loc278, #loc279])
#loc405 = loc(fused[#loc281, #loc280])
#loc406 = loc(fused[#loc282, #loc283])
#loc407 = loc(fused[#loc285, #loc279])
#loc408 = loc(fused[#loc291, #loc290])
