!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc154)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc156)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc157)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc161)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc22)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc164)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc165)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc169)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc34)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
      } loc(#loc170)
    } loc(#loc168)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %9 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_badGlobal : !cir.ptr<!s32i> loc(#loc154)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %11 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_badSource(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc38)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.scope {
      %12 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc174)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc174)
      cir.store %13, %12 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc174)
      %14 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc45)
      %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc46)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
      %20 = cir.call @strncat(%15, %16, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc50)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc50)
      %23 = cir.const #cir.int<50> : !s32i loc(#loc51)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc52)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc51)
      %26 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc53)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc53)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc175)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc55)
      %29 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc56)
      %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
    } loc(#loc173)
    cir.return loc(#loc18)
  } loc(#loc162)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc176)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc177)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc179)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc64)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc66)
    cir.return loc(#loc63)
  } loc(#loc178)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc181)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc74)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc75)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc184)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc185)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc74)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc189)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc85)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc86)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc87)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
      } loc(#loc190)
    } loc(#loc188)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %9 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc176)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %11 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_goodG2B1Source(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc91)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.scope {
      %12 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc194)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc194)
      cir.store %13, %12 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc194)
      %14 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc98)
      %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc99)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
      %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc101)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
      %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc101)
      %20 = cir.call @strncat(%15, %16, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc103)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc103)
      %23 = cir.const #cir.int<50> : !s32i loc(#loc104)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc105)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc104)
      %26 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc106)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc106)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc195)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc108)
      %29 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc109)
      %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
      cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    } loc(#loc193)
    cir.return loc(#loc71)
  } loc(#loc182)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc196)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc117)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc118)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc199)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc200)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc204)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc128)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc130)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
      } loc(#loc205)
    } loc(#loc203)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %9 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc177)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %11 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22_goodG2B2Source(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc134)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.scope {
      %12 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc209)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc209)
      cir.store %13, %12 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc209)
      %14 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc141)
      %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc142)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
      %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc144)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
      %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc144)
      %20 = cir.call @strncat(%15, %16, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc146)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc146)
      %23 = cir.const #cir.int<50> : !s32i loc(#loc147)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc148)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc147)
      %26 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc149)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc149)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc210)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc151)
      %29 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc152)
      %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
      %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
      cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
    } loc(#loc208)
    cir.return loc(#loc114)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":24:74)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":26:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":26:86)
#loc9 = loc("/usr/include/string.h":152:1)
#loc10 = loc("/usr/include/string.h":153:29)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":28:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":43:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":30:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":30:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":31:20)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":31:27)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":31:31)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":31:42)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":31:43)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":31:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":32:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":32:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":32:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":32:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":32:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":32:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":32:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":32:29)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":33:74)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":33:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":34:79)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":34:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":34:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":34:83)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":35:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":42:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":36:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":36:25)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":38:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":38:17)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":38:23)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":38:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":38:36)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":39:22)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":39:14)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":39:17)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":39:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":40:19)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":40:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":41:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":41:14)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":50:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":50:79)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":51:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":51:79)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":93:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":97:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":95:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":95:14)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":96:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":96:14)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":54:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":54:91)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":56:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":71:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":58:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":58:12)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":59:20)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":59:27)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":59:31)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":59:42)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":59:43)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":59:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":60:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":60:33)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":60:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":60:17)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":60:23)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":60:24)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":60:30)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":60:29)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":61:79)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":61:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":62:84)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":62:12)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":62:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":62:88)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":63:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":70:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":64:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":64:25)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":66:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":66:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":66:23)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":66:29)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":66:36)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":67:22)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":67:14)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":67:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":67:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":68:19)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":68:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":69:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":69:14)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":74:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":74:91)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":76:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":91:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":78:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":78:12)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":79:20)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":79:27)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":79:31)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":79:42)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":79:43)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":79:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":80:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":80:33)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":80:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":80:17)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":80:23)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":80:24)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":80:30)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":80:29)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":81:79)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":81:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":82:84)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":82:12)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":82:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":82:88)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":83:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":90:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":84:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":84:25)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":86:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":86:17)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":86:23)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":86:29)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":86:36)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":87:22)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":87:14)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":87:17)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":87:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":88:19)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":88:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":89:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_22a.c":89:14)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc9, #loc10])
#loc159 = loc(fused[#loc11, #loc12])
#loc160 = loc(fused[#loc13, #loc14])
#loc161 = loc(fused[#loc15, #loc16])
#loc162 = loc(fused[#loc17, #loc18])
#loc163 = loc(fused[#loc19, #loc20])
#loc164 = loc(fused[#loc23, #loc24])
#loc165 = loc(fused[#loc22, #loc24])
#loc166 = loc(fused[#loc21, #loc25])
#loc167 = loc(fused[#loc26, #loc25])
#loc168 = loc(fused[#loc27, #loc28])
#loc169 = loc(fused[#loc29, #loc30])
#loc170 = loc(fused[#loc31, #loc28])
#loc171 = loc(fused[#loc36, #loc35])
#loc172 = loc(fused[#loc39, #loc40])
#loc173 = loc(fused[#loc41, #loc42])
#loc174 = loc(fused[#loc43, #loc44])
#loc175 = loc(fused[#loc53, #loc50])
#loc176 = loc(fused[#loc58, #loc59])
#loc177 = loc(fused[#loc60, #loc61])
#loc178 = loc(fused[#loc62, #loc63])
#loc179 = loc(fused[#loc64, #loc65])
#loc180 = loc(fused[#loc66, #loc67])
#loc181 = loc(fused[#loc68, #loc69])
#loc182 = loc(fused[#loc70, #loc71])
#loc183 = loc(fused[#loc72, #loc73])
#loc184 = loc(fused[#loc76, #loc77])
#loc185 = loc(fused[#loc75, #loc77])
#loc186 = loc(fused[#loc74, #loc78])
#loc187 = loc(fused[#loc79, #loc78])
#loc188 = loc(fused[#loc80, #loc81])
#loc189 = loc(fused[#loc82, #loc83])
#loc190 = loc(fused[#loc84, #loc81])
#loc191 = loc(fused[#loc89, #loc88])
#loc192 = loc(fused[#loc92, #loc93])
#loc193 = loc(fused[#loc94, #loc95])
#loc194 = loc(fused[#loc96, #loc97])
#loc195 = loc(fused[#loc106, #loc103])
#loc196 = loc(fused[#loc111, #loc112])
#loc197 = loc(fused[#loc113, #loc114])
#loc198 = loc(fused[#loc115, #loc116])
#loc199 = loc(fused[#loc119, #loc120])
#loc200 = loc(fused[#loc118, #loc120])
#loc201 = loc(fused[#loc117, #loc121])
#loc202 = loc(fused[#loc122, #loc121])
#loc203 = loc(fused[#loc123, #loc124])
#loc204 = loc(fused[#loc125, #loc126])
#loc205 = loc(fused[#loc127, #loc124])
#loc206 = loc(fused[#loc132, #loc131])
#loc207 = loc(fused[#loc135, #loc136])
#loc208 = loc(fused[#loc137, #loc138])
#loc209 = loc(fused[#loc139, #loc140])
#loc210 = loc(fused[#loc149, #loc146])
