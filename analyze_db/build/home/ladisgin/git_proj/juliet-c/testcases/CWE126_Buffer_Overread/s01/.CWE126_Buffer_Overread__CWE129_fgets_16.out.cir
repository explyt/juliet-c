!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":157:10)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":157:14)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":157:20)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":157:32)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":97:27)
#true = #cir.bool<true> : !cir.bool
#loc211 = loc(fused[#loc78, #loc79])
#loc212 = loc(fused[#loc80, #loc81])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc184)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc185)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc186)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc190)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc191)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc22)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %6 ^bb3, ^bb11 loc(#loc26)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc195)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc190)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc190)
    cir.br ^bb5 loc(#loc196)
  ^bb5:  // pred: ^bb4
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc32)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc32)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc32)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc32)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc32)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc185)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc197)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc198)
  ^bb6:  // pred: ^bb5
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.br ^bb8 loc(#loc37)
  ^bb7:  // pred: ^bb5
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc28)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc44)
  ^bb11:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb12 loc(#loc25)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc200)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc200)
  ^bb14:  // pred: ^bb13
    %27 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %28 ^bb15, ^bb23 loc(#loc47)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc201)
  ^bb16:  // pred: ^bb15
    %29 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc191)
    cir.store %29, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc191)
    cir.br ^bb17 loc(#loc202)
  ^bb17:  // pred: ^bb16
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %32 ^bb18, ^bb19 loc(#loc204)
  ^bb18:  // pred: ^bb17
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc58)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc58)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc59)
    cir.br ^bb20 loc(#loc55)
  ^bb19:  // pred: ^bb17
    %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb20 loc(#loc51)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc51)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc49)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc61)
  ^bb23:  // 2 preds: ^bb14, ^bb22
    cir.br ^bb24 loc(#loc46)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc14)
  } loc(#loc189)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc63)
  } loc(#loc205)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc208)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc75)
  cir.func @main(%arg0: !s32i loc(fused[#loc78, #loc79]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc80, #loc81])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc82)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc83)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc84)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc84)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc85)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc72)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_fgets_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE126_Buffer_Overread__CWE129_fgets_16_good() : () -> () loc(#loc87)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc73)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc74)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_fgets_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE126_Buffer_Overread__CWE129_fgets_16_bad() : () -> () loc(#loc91)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %17 : !s32i loc(#loc215)
  } loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc217)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc218)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc219)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc106)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc221)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %6 ^bb3, ^bb11 loc(#loc110)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc222)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc217)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc217)
    cir.br ^bb5 loc(#loc223)
  ^bb5:  // pred: ^bb4
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc116)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc116)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc116)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc116)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc116)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc116)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc116)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc116)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc185)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc117)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc118)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc224)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc225)
  ^bb6:  // pred: ^bb5
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc124)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb8 loc(#loc121)
  ^bb7:  // pred: ^bb5
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc127)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb8 loc(#loc114)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc114)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc112)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc129)
  ^bb11:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb12 loc(#loc109)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc227)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc227)
  ^bb14:  // pred: ^bb13
    %27 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc132)
    cir.brcond %28 ^bb15, ^bb31 loc(#loc132)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc228)
  ^bb16:  // pred: ^bb15
    %29 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc218)
    cir.store %29, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc218)
    cir.br ^bb17 loc(#loc229)
  ^bb17:  // pred: ^bb16
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc230)
    cir.brcond %32 ^bb18, ^bb23 loc(#loc139)
  ^bb18:  // pred: ^bb17
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %34 = cir.const #cir.int<10> : !s32i loc(#loc141)
    %35 = cir.cmp(lt, %33, %34) : !s32i, !cir.bool loc(#loc231)
    cir.brcond %35 ^bb19, ^bb20 loc(#loc139)
  ^bb19:  // pred: ^bb18
    %36 = cir.const #true loc(#loc139)
    cir.br ^bb21(%36 : !cir.bool) loc(#loc139)
  ^bb20:  // pred: ^bb18
    %37 = cir.const #false loc(#loc139)
    cir.br ^bb21(%37 : !cir.bool) loc(#loc139)
  ^bb21(%38: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":97:27)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc139)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%38 : !cir.bool) loc(#loc139)
  ^bb23:  // pred: ^bb17
    %39 = cir.const #false loc(#loc139)
    cir.br ^bb24(%39 : !cir.bool) loc(#loc139)
  ^bb24(%40: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":97:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc139)
  ^bb25:  // pred: ^bb24
    cir.brcond %40 ^bb26, ^bb27 loc(#loc232)
  ^bb26:  // pred: ^bb25
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %42 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc147)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc147)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc148)
    cir.br ^bb28 loc(#loc144)
  ^bb27:  // pred: ^bb25
    %45 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc96)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.br ^bb28 loc(#loc136)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc136)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc134)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc150)
  ^bb31:  // 2 preds: ^bb14, ^bb30
    cir.br ^bb32 loc(#loc131)
  ^bb32:  // pred: ^bb31
    cir.return loc(#loc98)
  } loc(#loc216)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc234)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc235)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc158)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb1 loc(#loc237)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc237)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc162)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<7> : !s32i loc(#loc163)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.br ^bb4 loc(#loc165)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc161)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc239)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc239)
  ^bb7:  // pred: ^bb6
    %7 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc168)
    cir.brcond %8 ^bb8, ^bb16 loc(#loc168)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc240)
  ^bb9:  // pred: ^bb8
    %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc234)
    cir.store %9, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc234)
    cir.br ^bb10 loc(#loc241)
  ^bb10:  // pred: ^bb9
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc242)
    cir.brcond %12 ^bb11, ^bb12 loc(#loc243)
  ^bb11:  // pred: ^bb10
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc179)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc179)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc180)
    cir.br ^bb13 loc(#loc176)
  ^bb12:  // pred: ^bb10
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc181)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc181)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc182)
    cir.br ^bb13 loc(#loc172)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc172)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc170)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc183)
  ^bb16:  // 2 preds: ^bb7, ^bb15
    cir.br ^bb17 loc(#loc167)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc152)
  } loc(#loc233)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":41:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":58:27)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":63:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":32:13)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":32:49)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":49:13)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":49:34)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":26:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":26:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":28:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":28:12)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":28:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":29:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":45:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":29:11)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":31:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":43:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":34:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":42:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":34:23)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":34:36)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":34:53)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":34:17)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":34:63)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":35:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":38:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":40:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":37:29)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":37:24)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":37:17)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":37:40)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":41:17)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":44:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":46:5)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":62:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":46:11)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":48:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":60:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":52:13)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":59:13)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":52:17)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":52:25)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":53:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":55:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":57:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":54:37)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":54:30)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":54:17)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":58:17)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":61:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":142:1)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":146:1)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":144:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":144:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":145:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":145:13)
#loc68 = loc("/usr/include/stdlib.h":575:1)
#loc69 = loc("/usr/include/stdlib.h":575:41)
#loc70 = loc("/usr/include/time.h":76:1)
#loc71 = loc("/usr/include/time.h":76:38)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":162:15)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":164:15)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":167:15)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":169:15)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":157:1)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":172:1)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":158:1)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":160:27)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":160:22)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":160:5)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":162:5)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":163:5)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":163:50)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":164:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":167:5)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":168:5)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":168:49)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":169:5)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":171:12)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":171:5)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":103:27)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":70:1)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":108:1)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":78:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":78:49)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":95:13)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":95:34)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":72:5)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":72:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":74:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":74:12)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":74:5)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":75:5)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":91:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":75:11)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":77:9)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":89:9)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":80:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":88:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":80:23)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":80:36)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":80:53)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":80:17)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":80:63)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":81:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":84:13)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":86:13)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":83:29)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":83:24)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":83:17)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":83:40)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":87:27)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":87:17)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":90:9)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":92:5)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":107:5)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":92:11)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":94:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":105:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":97:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":104:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":97:17)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":97:25)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":97:30)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":97:38)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":97:40)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":98:13)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":100:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":102:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":99:37)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":99:30)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":99:17)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":103:17)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":106:9)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":111:1)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":140:1)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":126:13)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":126:34)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":113:5)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":113:9)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":115:13)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":115:12)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":115:5)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":116:5)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":122:5)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":116:11)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":120:16)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":120:9)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":121:9)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":123:5)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":139:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":123:11)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":125:9)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":137:9)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":129:13)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":136:13)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":129:17)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":129:25)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":130:13)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":132:13)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":134:13)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":131:37)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":131:30)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":131:17)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":135:27)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":135:17)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fgets_16.c":138:9)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc10, #loc11])
#loc189 = loc(fused[#loc13, #loc14])
#loc190 = loc(fused[#loc15, #loc16])
#loc191 = loc(fused[#loc17, #loc18])
#loc192 = loc(fused[#loc19, #loc20])
#loc193 = loc(fused[#loc23, #loc21])
#loc194 = loc(fused[#loc24, #loc25])
#loc195 = loc(fused[#loc27, #loc28])
#loc196 = loc(fused[#loc29, #loc30])
#loc197 = loc(fused[#loc34, #loc35])
#loc198 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc199 = loc(fused[#loc41, #loc42])
#loc200 = loc(fused[#loc45, #loc46])
#loc201 = loc(fused[#loc48, #loc49])
#loc202 = loc(fused[#loc50, #loc51])
#loc203 = loc(fused[#loc52, #loc53])
#loc204 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc205 = loc(fused[#loc62, #loc63])
#loc206 = loc(fused[#loc64, #loc65])
#loc207 = loc(fused[#loc66, #loc67])
#loc208 = loc(fused[#loc68, #loc69])
#loc209 = loc(fused[#loc70, #loc71])
#loc210 = loc(fused[#loc76, #loc77])
#loc213 = loc(fused[#loc87, #loc88])
#loc214 = loc(fused[#loc91, #loc92])
#loc215 = loc(fused[#loc95, #loc94])
#loc216 = loc(fused[#loc97, #loc98])
#loc217 = loc(fused[#loc99, #loc100])
#loc218 = loc(fused[#loc101, #loc102])
#loc219 = loc(fused[#loc103, #loc104])
#loc220 = loc(fused[#loc107, #loc105])
#loc221 = loc(fused[#loc108, #loc109])
#loc222 = loc(fused[#loc111, #loc112])
#loc223 = loc(fused[#loc113, #loc114])
#loc224 = loc(fused[#loc118, #loc119])
#loc225 = loc(fused[#loc120, #loc121, #loc122, #loc114])
#loc226 = loc(fused[#loc125, #loc126])
#loc227 = loc(fused[#loc130, #loc131])
#loc228 = loc(fused[#loc133, #loc134])
#loc229 = loc(fused[#loc135, #loc136])
#loc230 = loc(fused[#loc137, #loc138])
#loc231 = loc(fused[#loc140, #loc142])
#loc232 = loc(fused[#loc143, #loc144, #loc145, #loc136])
#loc233 = loc(fused[#loc151, #loc152])
#loc234 = loc(fused[#loc153, #loc154])
#loc235 = loc(fused[#loc155, #loc156])
#loc236 = loc(fused[#loc159, #loc157])
#loc237 = loc(fused[#loc160, #loc161])
#loc238 = loc(fused[#loc164, #loc163])
#loc239 = loc(fused[#loc166, #loc167])
#loc240 = loc(fused[#loc169, #loc170])
#loc241 = loc(fused[#loc171, #loc172])
#loc242 = loc(fused[#loc173, #loc174])
#loc243 = loc(fused[#loc175, #loc176, #loc177, #loc172])
