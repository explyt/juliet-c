!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc287)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc288)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_11_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc289)
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc290)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc291)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc293)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc294)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc295)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc296)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc297)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc298)
  cir.func private @close(!s32i) -> !s32i loc(#loc299)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc300)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc29)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc301)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc303)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc289)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_11_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc289)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc289)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc304)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc306)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc306)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc40)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc40)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc309)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc310)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc311)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc312)
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc313)
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc314)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc52)
          cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc312)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc54)
          %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc54)
          cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc313)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc57)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc57)
          cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc314)
          cir.scope {
            cir.do {
              cir.scope {
                %21 = cir.const #cir.int<2> : !s32i loc(#loc63)
                %22 = cir.const #cir.int<1> : !s32i loc(#loc64)
                %23 = cir.const #cir.int<6> : !s32i loc(#loc65)
                %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc66)
                cir.store %24, %11 : !s32i, !cir.ptr<!s32i> loc(#loc317)
                cir.scope {
                  %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc72)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc72)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc319)
                  cir.if %81 {
                    cir.break loc(#loc74)
                  } loc(#loc320)
                } loc(#loc318)
                %25 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc321)
                %26 = cir.const #cir.int<0> : !s32i loc(#loc77)
                %27 = cir.const #cir.int<16> : !u64i loc(#loc322)
                cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc323)
                %28 = cir.const #cir.int<2> : !s32i loc(#loc82)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc82)
                %30 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc324)
                %31 = cir.const #cir.int<0> : !s32i loc(#loc85)
                %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc85)
                %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc86)
                %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc87)
                cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc325)
                %35 = cir.const #cir.int<27015> : !s32i loc(#loc89)
                %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc89)
                %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc90)
                %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
                cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc326)
                cir.scope {
                  %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                  %79 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc328)
                  %80 = cir.const #cir.int<16> : !u64i loc(#loc329)
                  %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc329)
                  %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc101)
                  %83 = cir.const #cir.int<1> : !s32i loc(#loc102)
                  %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc102)
                  %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc330)
                  cir.if %85 {
                    cir.break loc(#loc104)
                  } loc(#loc331)
                } loc(#loc327)
                cir.scope {
                  %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                  %79 = cir.const #cir.int<5> : !s32i loc(#loc108)
                  %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc109)
                  %81 = cir.const #cir.int<1> : !s32i loc(#loc110)
                  %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc110)
                  %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc333)
                  cir.if %83 {
                    cir.break loc(#loc112)
                  } loc(#loc334)
                } loc(#loc332)
                %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc114)
                %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc115)
                %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc116)
                cir.store %42, %12 : !s32i, !cir.ptr<!s32i> loc(#loc335)
                cir.scope {
                  %78 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc122)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc122)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc337)
                  cir.if %81 {
                    cir.break loc(#loc124)
                  } loc(#loc338)
                } loc(#loc336)
                %43 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
                %45 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc127)
                %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc128)
                %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc339)
                %48 = cir.const #cir.int<1> : !u64i loc(#loc340)
                %49 = cir.const #cir.int<100> : !s32i loc(#loc133)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc133)
                %51 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc134)
                %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc341)
                %53 = cir.const #cir.int<1> : !s32i loc(#loc135)
                %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc135)
                %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc342)
                %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc343)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc137)
                %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
                %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc138)
                cir.store %59, %8 : !s32i, !cir.ptr<!s32i> loc(#loc344)
                cir.scope {
                  %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc144)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc144)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc346)
                  %82 = cir.ternary(%81, true {
                    %83 = cir.const #true loc(#loc145)
                    cir.yield %83 : !cir.bool loc(#loc145)
                  }, false {
                    %83 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                    %84 = cir.const #cir.int<0> : !s32i loc(#loc147)
                    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc347)
                    %86 = cir.ternary(%85, true {
                      %87 = cir.const #true loc(#loc145)
                      cir.yield %87 : !cir.bool loc(#loc145)
                    }, false {
                      %87 = cir.const #false loc(#loc145)
                      cir.yield %87 : !cir.bool loc(#loc145)
                    }) : (!cir.bool) -> !cir.bool loc(#loc145)
                    cir.yield %86 : !cir.bool loc(#loc145)
                  }) : (!cir.bool) -> !cir.bool loc(#loc145)
                  cir.if %82 {
                    cir.break loc(#loc149)
                  } loc(#loc348)
                } loc(#loc345)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc150)
                %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc150)
                %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
                %63 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc152)
                %64 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc153)
                %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc153)
                %66 = cir.const #cir.int<1> : !u64i loc(#loc349)
                %67 = cir.binop(div, %65, %66) : !u64i loc(#loc350)
                %68 = cir.binop(add, %63, %67) : !u64i loc(#loc351)
                %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc156)
                cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc352)
                %70 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc157)
                %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                %72 = cir.const #cir.int<13> : !s32i loc(#loc159)
                %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc157)
                cir.store %73, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc353)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                  %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
                  cir.if %79 {
                    %80 = cir.const #cir.int<0> : !s32i loc(#loc166)
                    %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc166)
                    %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                    cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc356)
                  } loc(#loc355)
                } loc(#loc354)
                %74 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc169)
                %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
                %76 = cir.const #cir.int<10> : !s32i loc(#loc171)
                %77 = cir.call @strchr(%75, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc169)
                cir.store %77, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc357)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
                  %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc176)
                  cir.if %79 {
                    %80 = cir.const #cir.int<0> : !s32i loc(#loc178)
                    %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc178)
                    %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
                    cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc360)
                  } loc(#loc359)
                } loc(#loc358)
              } loc(#loc316)
              cir.yield loc(#loc60)
            } while {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc181)
              %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc181)
              cir.condition(%22) loc(#loc181)
            } loc(#loc315)
          } loc(#loc315)
          cir.scope {
            %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc185)
            %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc185)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc362)
            cir.if %24 {
              %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc188)
            } loc(#loc363)
          } loc(#loc361)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc191)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc192)
            %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc192)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc365)
            cir.if %24 {
              %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc194)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc195)
            } loc(#loc366)
          } loc(#loc364)
        } loc(#loc308)
      } loc(#loc307)
    } loc(#loc305)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc368)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc29)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc29)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc201)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc369)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc206)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc207)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc207)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc371)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc209)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc210)
        } loc(#loc372)
      } loc(#loc370)
    } loc(#loc367)
    cir.return loc(#loc33)
  } loc(#loc302)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc374)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc213)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc375)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc215)
    cir.return loc(#loc212)
  } loc(#loc373)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc376)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc377)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc221)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc224)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc380)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc288)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc288)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc288)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc381)
    cir.scope {
      %4 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc383)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc383)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc233)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc233)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc221)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc221)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc238)
      } else {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc239)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc224)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc224)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc239)
      } loc(#loc384)
    } loc(#loc382)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc386)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc246)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc246)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc247)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc387)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc252)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc253)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc253)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc389)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc255)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc256)
        } loc(#loc390)
      } loc(#loc388)
    } loc(#loc385)
    cir.return loc(#loc226)
  } loc(#loc379)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc392)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc287)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc287)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc287)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc261)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc393)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc395)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc395)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc265)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc265)
      cir.if %7 {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc268)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc270)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc270)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc268)
      } loc(#loc396)
    } loc(#loc394)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc398)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc275)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc276)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc276)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc277)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc399)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc282)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc283)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc283)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc401)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc285)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc286)
        } loc(#loc402)
      } loc(#loc400)
    } loc(#loc397)
    cir.return loc(#loc258)
  } loc(#loc391)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":192:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":192:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":165:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":165:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":62:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":62:26)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc13 = loc("/usr/include/netinet/in.h":402:1)
#loc14 = loc("/usr/include/netinet/in.h":403:40)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc21 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc22 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc23 = loc("/usr/include/string.h":246:1)
#loc24 = loc("/usr/include/string.h":247:33)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("/usr/include/stdio.h":903:1)
#loc28 = loc("/usr/include/stdio.h":904:3)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":149:28)
#loc30 = loc("/usr/include/stdio.h":897:1)
#loc31 = loc("/usr/include/stdio.h":897:36)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":59:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":155:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":61:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":61:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":63:12)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":63:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":64:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":145:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":64:8)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":64:26)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":65:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":66:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":144:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":71:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":71:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":72:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":72:32)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":73:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":73:19)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":74:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":74:35)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":75:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":75:35)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":76:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":76:41)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":76:30)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":76:37)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":77:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":129:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":78:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":128:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":87:39)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":87:48)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":87:61)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":87:32)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":87:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":87:72)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":88:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":91:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":88:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":88:37)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":89:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":90:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":92:24)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":92:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":92:34)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":92:37)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":92:51)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":92:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":92:52)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":93:38)
#loc83 = loc("/usr/include/netinet/in.h":249:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":93:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":94:43)
#loc86 = loc("/usr/include/netinet/in.h":251:20)
#loc87 = loc("/usr/include/netinet/in.h":33:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":94:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":95:42)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":95:36)
#loc91 = loc("/usr/include/netinet/in.h":250:15)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":95:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":95:50)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":96:17)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":99:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":96:26)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":96:58)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":96:59)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":96:68)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":96:82)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":96:21)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":96:88)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":97:17)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":98:21)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":100:17)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":103:17)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":100:28)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":100:42)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":100:21)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":100:61)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":101:17)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":102:21)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":104:39)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":104:53)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":104:59)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":104:32)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":104:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":104:63)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":105:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":108:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":105:21)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":105:37)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":106:17)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":107:21)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:35)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:58)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:65)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:63)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:49)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:72)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:75)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:86)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:91)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:97)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:107)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:108)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:111)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:30)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":110:112)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":111:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":114:17)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":111:21)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":111:35)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":111:48)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":111:51)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":111:65)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":112:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":113:21)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":116:61)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":116:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":116:22)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":116:32)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":116:45)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":116:56)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":116:57)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":118:27)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":118:34)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":118:40)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":118:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":118:44)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":119:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":122:17)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":119:21)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":120:17)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":121:32)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":121:22)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":121:21)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":123:27)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":123:34)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":123:40)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":123:17)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":123:44)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":124:17)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":127:17)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":124:21)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":125:17)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":126:32)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":126:22)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":126:21)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":129:20)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":130:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":133:13)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":130:17)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":130:33)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":131:13)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":132:30)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":132:17)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":134:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":137:13)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":134:17)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":134:33)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":135:13)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":136:30)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":136:17)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":146:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":154:5)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":147:9)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":147:15)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":149:22)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":149:16)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":149:9)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":149:31)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":150:9)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":153:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":150:13)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":150:21)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":151:9)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":152:20)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":152:13)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":210:1)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":214:1)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":212:5)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":212:14)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":213:5)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":213:14)
#loc217 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc218 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc219 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc220 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":170:19)
#loc222 = loc("/usr/include/string.h":149:1)
#loc223 = loc("/usr/include/string.h":150:14)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":175:22)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":162:1)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":186:1)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":164:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":164:12)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":166:12)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":166:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":167:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":176:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":167:8)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":167:27)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":168:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":171:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":173:5)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":170:9)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":175:9)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":175:16)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":177:5)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":185:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":178:9)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":178:15)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":180:22)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":180:28)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":180:16)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":180:9)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":180:31)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":181:9)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":184:9)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":181:13)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":181:21)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":182:9)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":183:20)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":183:13)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":189:1)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":208:1)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":191:5)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":191:12)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":193:12)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":193:5)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":194:5)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":198:5)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":194:8)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":194:26)
#loc267 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":195:5)
#loc268 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":197:9)
#loc269 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":197:16)
#loc270 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":197:22)
#loc271 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":199:5)
#loc272 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":207:5)
#loc273 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":200:9)
#loc274 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":200:15)
#loc275 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":202:22)
#loc276 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":202:28)
#loc277 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":202:16)
#loc278 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":202:9)
#loc279 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":202:31)
#loc280 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":203:9)
#loc281 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":206:9)
#loc282 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":203:13)
#loc283 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":203:21)
#loc284 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":204:9)
#loc285 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":205:20)
#loc286 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_11.c":205:13)
#loc287 = loc(fused[#loc1, #loc2])
#loc288 = loc(fused[#loc3, #loc4])
#loc289 = loc(fused[#loc5, #loc6])
#loc290 = loc(fused[#loc7, #loc8])
#loc291 = loc(fused[#loc9, #loc10])
#loc292 = loc(fused[#loc11, #loc12])
#loc293 = loc(fused[#loc13, #loc14])
#loc294 = loc(fused[#loc15, #loc16])
#loc295 = loc(fused[#loc17, #loc18])
#loc296 = loc(fused[#loc19, #loc20])
#loc297 = loc(fused[#loc21, #loc22])
#loc298 = loc(fused[#loc23, #loc24])
#loc299 = loc(fused[#loc25, #loc26])
#loc300 = loc(fused[#loc27, #loc28])
#loc301 = loc(fused[#loc30, #loc31])
#loc302 = loc(fused[#loc32, #loc33])
#loc303 = loc(fused[#loc34, #loc35])
#loc304 = loc(fused[#loc37, #loc36])
#loc305 = loc(fused[#loc38, #loc39])
#loc306 = loc(fused[#loc40, #loc41])
#loc307 = loc(fused[#loc42, #loc39])
#loc308 = loc(fused[#loc43, #loc44])
#loc309 = loc(fused[#loc45, #loc46])
#loc310 = loc(fused[#loc47, #loc48])
#loc311 = loc(fused[#loc49, #loc50])
#loc312 = loc(fused[#loc51, #loc52])
#loc313 = loc(fused[#loc53, #loc54])
#loc314 = loc(fused[#loc55, #loc56])
#loc315 = loc(fused[#loc59, #loc60])
#loc316 = loc(fused[#loc61, #loc62])
#loc317 = loc(fused[#loc67, #loc68])
#loc318 = loc(fused[#loc69, #loc70])
#loc319 = loc(fused[#loc71, #loc72])
#loc320 = loc(fused[#loc73, #loc70])
#loc321 = loc(fused[#loc75, #loc76])
#loc322 = loc(fused[#loc78, #loc79])
#loc323 = loc(fused[#loc80, #loc81])
#loc324 = loc(fused[#loc84, #loc82])
#loc325 = loc(fused[#loc88, #loc85])
#loc326 = loc(fused[#loc92, #loc93])
#loc327 = loc(fused[#loc94, #loc95])
#loc328 = loc(fused[#loc97, #loc98])
#loc329 = loc(fused[#loc99, #loc100])
#loc330 = loc(fused[#loc101, #loc102])
#loc331 = loc(fused[#loc103, #loc95])
#loc332 = loc(fused[#loc105, #loc106])
#loc333 = loc(fused[#loc109, #loc110])
#loc334 = loc(fused[#loc111, #loc106])
#loc335 = loc(fused[#loc117, #loc118])
#loc336 = loc(fused[#loc119, #loc120])
#loc337 = loc(fused[#loc121, #loc122])
#loc338 = loc(fused[#loc123, #loc120])
#loc339 = loc(fused[#loc129, #loc130])
#loc340 = loc(fused[#loc131, #loc132])
#loc341 = loc(fused[#loc133, #loc134])
#loc342 = loc(fused[#loc133, #loc135])
#loc343 = loc(fused[#loc131, #loc136])
#loc344 = loc(fused[#loc139, #loc140])
#loc345 = loc(fused[#loc141, #loc142])
#loc346 = loc(fused[#loc143, #loc144])
#loc347 = loc(fused[#loc146, #loc147])
#loc348 = loc(fused[#loc148, #loc142])
#loc349 = loc(fused[#loc154, #loc155])
#loc350 = loc(fused[#loc153, #loc155])
#loc351 = loc(fused[#loc152, #loc155])
#loc352 = loc(fused[#loc151, #loc150])
#loc353 = loc(fused[#loc160, #loc161])
#loc354 = loc(fused[#loc162, #loc163])
#loc355 = loc(fused[#loc165, #loc163])
#loc356 = loc(fused[#loc168, #loc166])
#loc357 = loc(fused[#loc172, #loc173])
#loc358 = loc(fused[#loc174, #loc175])
#loc359 = loc(fused[#loc177, #loc175])
#loc360 = loc(fused[#loc180, #loc178])
#loc361 = loc(fused[#loc182, #loc183])
#loc362 = loc(fused[#loc184, #loc185])
#loc363 = loc(fused[#loc186, #loc183])
#loc364 = loc(fused[#loc189, #loc190])
#loc365 = loc(fused[#loc191, #loc192])
#loc366 = loc(fused[#loc193, #loc190])
#loc367 = loc(fused[#loc196, #loc197])
#loc368 = loc(fused[#loc198, #loc199])
#loc369 = loc(fused[#loc202, #loc203])
#loc370 = loc(fused[#loc204, #loc205])
#loc371 = loc(fused[#loc206, #loc207])
#loc372 = loc(fused[#loc208, #loc205])
#loc373 = loc(fused[#loc211, #loc212])
#loc374 = loc(fused[#loc213, #loc214])
#loc375 = loc(fused[#loc215, #loc216])
#loc376 = loc(fused[#loc217, #loc218])
#loc377 = loc(fused[#loc219, #loc220])
#loc378 = loc(fused[#loc222, #loc223])
#loc379 = loc(fused[#loc225, #loc226])
#loc380 = loc(fused[#loc227, #loc228])
#loc381 = loc(fused[#loc230, #loc229])
#loc382 = loc(fused[#loc231, #loc232])
#loc383 = loc(fused[#loc233, #loc234])
#loc384 = loc(fused[#loc235, #loc236, #loc237, #loc232])
#loc385 = loc(fused[#loc241, #loc242])
#loc386 = loc(fused[#loc243, #loc244])
#loc387 = loc(fused[#loc248, #loc249])
#loc388 = loc(fused[#loc250, #loc251])
#loc389 = loc(fused[#loc252, #loc253])
#loc390 = loc(fused[#loc254, #loc251])
#loc391 = loc(fused[#loc257, #loc258])
#loc392 = loc(fused[#loc259, #loc260])
#loc393 = loc(fused[#loc262, #loc261])
#loc394 = loc(fused[#loc263, #loc264])
#loc395 = loc(fused[#loc265, #loc266])
#loc396 = loc(fused[#loc267, #loc264])
#loc397 = loc(fused[#loc271, #loc272])
#loc398 = loc(fused[#loc273, #loc274])
#loc399 = loc(fused[#loc278, #loc279])
#loc400 = loc(fused[#loc280, #loc281])
#loc401 = loc(fused[#loc282, #loc283])
#loc402 = loc(fused[#loc284, #loc281])
