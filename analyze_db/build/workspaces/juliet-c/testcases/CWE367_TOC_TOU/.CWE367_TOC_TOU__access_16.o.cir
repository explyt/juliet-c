!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc175)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc176)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc178)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc179)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc180)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc181)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc183)
  cir.func no_proto @CWE367_TOC_TOU__access_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc25)
        cir.condition(%1) loc(#loc25)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc188)
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc189)
            %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc188)
            cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc188)
            %3 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc33)
            cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc189)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
              %9 = cir.const #cir.int<100> : !s32i loc(#loc37)
              %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc176)
              %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
              %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
              %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
              %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc191)
              cir.if %15 {
                %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc42)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc43)
                %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc43)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc44)
                %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
                %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc45)
                cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc193)
              } loc(#loc192)
            } loc(#loc190)
            cir.scope {
              %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
              %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
              %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
              %11 = cir.const #cir.int<0> : !s32i loc(#loc50)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc50)
              %13 = cir.cmp(gt, %10, %12) : !u64i, !cir.bool loc(#loc195)
              cir.if %13 {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc52)
                %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc52)
                %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc53)
                %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
                %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc53)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc55)
                %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc55)
                %21 = cir.binop(sub, %18, %20) : !u64i loc(#loc197)
                %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
                %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc56)
                cir.store %15, %23 : !s8i, !cir.ptr<!s8i> loc(#loc198)
              } loc(#loc196)
            } loc(#loc194)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
              %9 = cir.const #cir.int<2> : !s32i loc(#loc60)
              %10 = cir.call @access(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc62)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc63)
              %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc200)
              cir.if %13 {
                %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc65)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc66)
                cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
              } loc(#loc201)
            } loc(#loc199)
            %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
            %6 = cir.const #cir.int<2> : !s32i loc(#loc68)
            %7 = cir.call @open(%5, %6) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc69)
            cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc202)
            cir.scope {
              %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
              %9 = cir.const #cir.int<1> : !s32i loc(#loc75)
              %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc76)
              %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc204)
              cir.if %11 {
                %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc78)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc79)
                cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
              } loc(#loc205)
            } loc(#loc203)
            cir.scope {
              %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
              %12 = cir.const #cir.int<11> : !u64i loc(#loc207)
              %13 = cir.call @write(%8, %11, %12) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc85)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc86)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc87)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc87)
              %17 = cir.cmp(eq, %13, %16) : !s64i, !cir.bool loc(#loc208)
              cir.if %17 {
                %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc89)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc90)
                cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
              } loc(#loc209)
            } loc(#loc206)
            cir.scope {
              %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
              %9 = cir.const #cir.int<1> : !s32i loc(#loc94)
              %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc95)
              %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc211)
              cir.if %11 {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc98)
              } loc(#loc212)
            } loc(#loc210)
          } loc(#loc187)
          cir.break loc(#loc99)
        } loc(#loc186)
        cir.yield loc(#loc24)
      } loc(#loc185)
    } loc(#loc185)
    cir.return loc(#loc22)
  } loc(#loc184)
  cir.func no_proto @CWE367_TOC_TOU__access_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc214)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc102)
    cir.return loc(#loc101)
  } loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc104)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc109)
        cir.condition(%1) loc(#loc109)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc219)
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc220)
            %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc219)
            cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc219)
            %3 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc117)
            cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc220)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
              %9 = cir.const #cir.int<100> : !s32i loc(#loc121)
              %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc176)
              %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc122)
              %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc123)
              %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc124)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
              %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc222)
              cir.if %15 {
                %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc126)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc126)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc127)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc128)
                %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc128)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc129)
                %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
                %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc130)
                cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc224)
              } loc(#loc223)
            } loc(#loc221)
            cir.scope {
              %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc133)
              %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
              %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc133)
              %11 = cir.const #cir.int<0> : !s32i loc(#loc135)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc135)
              %13 = cir.cmp(gt, %10, %12) : !u64i, !cir.bool loc(#loc226)
              cir.if %13 {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc137)
                %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc137)
                %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc138)
                %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
                %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc138)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc140)
                %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc140)
                %21 = cir.binop(sub, %18, %20) : !u64i loc(#loc228)
                %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
                %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc141)
                cir.store %15, %23 : !s8i, !cir.ptr<!s8i> loc(#loc229)
              } loc(#loc227)
            } loc(#loc225)
            %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
            %6 = cir.const #cir.int<2> : !s32i loc(#loc143)
            %7 = cir.call @open(%5, %6) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc144)
            cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc230)
            cir.scope {
              %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %9 = cir.const #cir.int<1> : !s32i loc(#loc150)
              %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc151)
              %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc232)
              cir.if %11 {
                %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc153)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc154)
                cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc153)
              } loc(#loc233)
            } loc(#loc231)
            cir.scope {
              %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc104)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc104)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
              %12 = cir.const #cir.int<12> : !u64i loc(#loc235)
              %13 = cir.call @write(%8, %11, %12) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc160)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc161)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc162)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc162)
              %17 = cir.cmp(eq, %13, %16) : !s64i, !cir.bool loc(#loc236)
              cir.if %17 {
                %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc164)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc165)
                cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc164)
              } loc(#loc237)
            } loc(#loc234)
            cir.scope {
              %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              %9 = cir.const #cir.int<1> : !s32i loc(#loc169)
              %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc170)
              %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc239)
              cir.if %11 {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
                %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc173)
              } loc(#loc240)
            } loc(#loc238)
          } loc(#loc218)
          cir.break loc(#loc174)
        } loc(#loc217)
        cir.yield loc(#loc108)
      } loc(#loc216)
    } loc(#loc216)
    cir.return loc(#loc106)
  } loc(#loc215)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_16.c":53:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_16.c":71:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_16.c":44:1)
#loc22 = loc("CWE367_TOC_TOU__access_16.c":82:1)
#loc23 = loc("CWE367_TOC_TOU__access_16.c":46:5)
#loc24 = loc("CWE367_TOC_TOU__access_16.c":81:5)
#loc25 = loc("CWE367_TOC_TOU__access_16.c":46:11)
#loc26 = loc("CWE367_TOC_TOU__access_16.c":47:5)
#loc27 = loc("CWE367_TOC_TOU__access_16.c":48:9)
#loc28 = loc("CWE367_TOC_TOU__access_16.c":79:9)
#loc29 = loc("CWE367_TOC_TOU__access_16.c":49:13)
#loc30 = loc("CWE367_TOC_TOU__access_16.c":49:34)
#loc31 = loc("CWE367_TOC_TOU__access_16.c":50:13)
#loc32 = loc("CWE367_TOC_TOU__access_16.c":50:29)
#loc33 = loc("CWE367_TOC_TOU__access_16.c":50:28)
#loc34 = loc("CWE367_TOC_TOU__access_16.c":51:13)
#loc35 = loc("CWE367_TOC_TOU__access_16.c":56:13)
#loc36 = loc("CWE367_TOC_TOU__access_16.c":51:23)
#loc37 = loc("CWE367_TOC_TOU__access_16.c":51:33)
#loc38 = loc("CWE367_TOC_TOU__access_16.c":51:38)
#loc39 = loc("CWE367_TOC_TOU__access_16.c":51:17)
#loc40 = loc("CWE367_TOC_TOU__access_16.c":51:48)
#loc41 = loc("CWE367_TOC_TOU__access_16.c":52:13)
#loc42 = loc("CWE367_TOC_TOU__access_16.c":53:17)
#loc43 = loc("CWE367_TOC_TOU__access_16.c":55:31)
#loc44 = loc("CWE367_TOC_TOU__access_16.c":55:26)
#loc45 = loc("CWE367_TOC_TOU__access_16.c":55:17)
#loc46 = loc("CWE367_TOC_TOU__access_16.c":57:13)
#loc47 = loc("CWE367_TOC_TOU__access_16.c":60:13)
#loc48 = loc("CWE367_TOC_TOU__access_16.c":57:17)
#loc49 = loc("CWE367_TOC_TOU__access_16.c":57:24)
#loc50 = loc("CWE367_TOC_TOU__access_16.c":57:36)
#loc51 = loc("CWE367_TOC_TOU__access_16.c":58:13)
#loc52 = loc("CWE367_TOC_TOU__access_16.c":59:48)
#loc53 = loc("CWE367_TOC_TOU__access_16.c":59:26)
#loc54 = loc("CWE367_TOC_TOU__access_16.c":59:33)
#loc55 = loc("CWE367_TOC_TOU__access_16.c":59:43)
#loc56 = loc("CWE367_TOC_TOU__access_16.c":59:17)
#loc57 = loc("CWE367_TOC_TOU__access_16.c":62:13)
#loc58 = loc("CWE367_TOC_TOU__access_16.c":65:13)
#loc59 = loc("CWE367_TOC_TOU__access_16.c":62:24)
#loc60 = loc("CWE367_TOC_TOU__access_16.c":62:34)
#loc61 = loc("CWE367_TOC_TOU__access_16.c":62:17)
#loc62 = loc("CWE367_TOC_TOU__access_16.c":62:44)
#loc63 = loc("CWE367_TOC_TOU__access_16.c":62:43)
#loc64 = loc("CWE367_TOC_TOU__access_16.c":63:13)
#loc65 = loc("CWE367_TOC_TOU__access_16.c":64:17)
#loc66 = loc("CWE367_TOC_TOU__access_16.c":64:22)
#loc67 = loc("CWE367_TOC_TOU__access_16.c":66:30)
#loc68 = loc("CWE367_TOC_TOU__access_16.c":66:40)
#loc69 = loc("CWE367_TOC_TOU__access_16.c":66:25)
#loc70 = loc("CWE367_TOC_TOU__access_16.c":66:13)
#loc71 = loc("CWE367_TOC_TOU__access_16.c":66:46)
#loc72 = loc("CWE367_TOC_TOU__access_16.c":67:13)
#loc73 = loc("CWE367_TOC_TOU__access_16.c":70:13)
#loc74 = loc("CWE367_TOC_TOU__access_16.c":67:17)
#loc75 = loc("CWE367_TOC_TOU__access_16.c":67:30)
#loc76 = loc("CWE367_TOC_TOU__access_16.c":67:29)
#loc77 = loc("CWE367_TOC_TOU__access_16.c":68:13)
#loc78 = loc("CWE367_TOC_TOU__access_16.c":69:17)
#loc79 = loc("CWE367_TOC_TOU__access_16.c":69:22)
#loc80 = loc("CWE367_TOC_TOU__access_16.c":71:13)
#loc81 = loc("CWE367_TOC_TOU__access_16.c":74:13)
#loc82 = loc("CWE367_TOC_TOU__access_16.c":71:23)
#loc83 = loc("CWE367_TOC_TOU__access_16.c":71:50)
#loc84 = loc("CWE367_TOC_TOU__access_16.c":71:72)
#loc85 = loc("CWE367_TOC_TOU__access_16.c":71:17)
#loc86 = loc("CWE367_TOC_TOU__access_16.c":71:79)
#loc87 = loc("CWE367_TOC_TOU__access_16.c":71:78)
#loc88 = loc("CWE367_TOC_TOU__access_16.c":72:13)
#loc89 = loc("CWE367_TOC_TOU__access_16.c":73:17)
#loc90 = loc("CWE367_TOC_TOU__access_16.c":73:22)
#loc91 = loc("CWE367_TOC_TOU__access_16.c":75:13)
#loc92 = loc("CWE367_TOC_TOU__access_16.c":78:13)
#loc93 = loc("CWE367_TOC_TOU__access_16.c":75:17)
#loc94 = loc("CWE367_TOC_TOU__access_16.c":75:30)
#loc95 = loc("CWE367_TOC_TOU__access_16.c":75:29)
#loc96 = loc("CWE367_TOC_TOU__access_16.c":76:13)
#loc97 = loc("CWE367_TOC_TOU__access_16.c":77:23)
#loc98 = loc("CWE367_TOC_TOU__access_16.c":77:17)
#loc99 = loc("CWE367_TOC_TOU__access_16.c":80:9)
#loc100 = loc("CWE367_TOC_TOU__access_16.c":125:1)
#loc101 = loc("CWE367_TOC_TOU__access_16.c":128:1)
#loc102 = loc("CWE367_TOC_TOU__access_16.c":127:5)
#loc103 = loc("CWE367_TOC_TOU__access_16.c":127:11)
#loc104 = loc("CWE367_TOC_TOU__access_16.c":112:33)
#loc105 = loc("CWE367_TOC_TOU__access_16.c":89:1)
#loc106 = loc("CWE367_TOC_TOU__access_16.c":123:1)
#loc107 = loc("CWE367_TOC_TOU__access_16.c":91:5)
#loc108 = loc("CWE367_TOC_TOU__access_16.c":122:5)
#loc109 = loc("CWE367_TOC_TOU__access_16.c":91:11)
#loc110 = loc("CWE367_TOC_TOU__access_16.c":92:5)
#loc111 = loc("CWE367_TOC_TOU__access_16.c":93:9)
#loc112 = loc("CWE367_TOC_TOU__access_16.c":120:9)
#loc113 = loc("CWE367_TOC_TOU__access_16.c":94:13)
#loc114 = loc("CWE367_TOC_TOU__access_16.c":94:34)
#loc115 = loc("CWE367_TOC_TOU__access_16.c":95:13)
#loc116 = loc("CWE367_TOC_TOU__access_16.c":95:29)
#loc117 = loc("CWE367_TOC_TOU__access_16.c":95:28)
#loc118 = loc("CWE367_TOC_TOU__access_16.c":96:13)
#loc119 = loc("CWE367_TOC_TOU__access_16.c":101:13)
#loc120 = loc("CWE367_TOC_TOU__access_16.c":96:23)
#loc121 = loc("CWE367_TOC_TOU__access_16.c":96:33)
#loc122 = loc("CWE367_TOC_TOU__access_16.c":96:38)
#loc123 = loc("CWE367_TOC_TOU__access_16.c":96:17)
#loc124 = loc("CWE367_TOC_TOU__access_16.c":96:48)
#loc125 = loc("CWE367_TOC_TOU__access_16.c":97:13)
#loc126 = loc("CWE367_TOC_TOU__access_16.c":98:27)
#loc127 = loc("CWE367_TOC_TOU__access_16.c":98:17)
#loc128 = loc("CWE367_TOC_TOU__access_16.c":100:31)
#loc129 = loc("CWE367_TOC_TOU__access_16.c":100:26)
#loc130 = loc("CWE367_TOC_TOU__access_16.c":100:17)
#loc131 = loc("CWE367_TOC_TOU__access_16.c":102:13)
#loc132 = loc("CWE367_TOC_TOU__access_16.c":105:13)
#loc133 = loc("CWE367_TOC_TOU__access_16.c":102:17)
#loc134 = loc("CWE367_TOC_TOU__access_16.c":102:24)
#loc135 = loc("CWE367_TOC_TOU__access_16.c":102:36)
#loc136 = loc("CWE367_TOC_TOU__access_16.c":103:13)
#loc137 = loc("CWE367_TOC_TOU__access_16.c":104:48)
#loc138 = loc("CWE367_TOC_TOU__access_16.c":104:26)
#loc139 = loc("CWE367_TOC_TOU__access_16.c":104:33)
#loc140 = loc("CWE367_TOC_TOU__access_16.c":104:43)
#loc141 = loc("CWE367_TOC_TOU__access_16.c":104:17)
#loc142 = loc("CWE367_TOC_TOU__access_16.c":107:30)
#loc143 = loc("CWE367_TOC_TOU__access_16.c":107:40)
#loc144 = loc("CWE367_TOC_TOU__access_16.c":107:25)
#loc145 = loc("CWE367_TOC_TOU__access_16.c":107:13)
#loc146 = loc("CWE367_TOC_TOU__access_16.c":107:46)
#loc147 = loc("CWE367_TOC_TOU__access_16.c":108:13)
#loc148 = loc("CWE367_TOC_TOU__access_16.c":111:13)
#loc149 = loc("CWE367_TOC_TOU__access_16.c":108:17)
#loc150 = loc("CWE367_TOC_TOU__access_16.c":108:30)
#loc151 = loc("CWE367_TOC_TOU__access_16.c":108:29)
#loc152 = loc("CWE367_TOC_TOU__access_16.c":109:13)
#loc153 = loc("CWE367_TOC_TOU__access_16.c":110:17)
#loc154 = loc("CWE367_TOC_TOU__access_16.c":110:22)
#loc155 = loc("CWE367_TOC_TOU__access_16.c":112:13)
#loc156 = loc("CWE367_TOC_TOU__access_16.c":115:13)
#loc157 = loc("CWE367_TOC_TOU__access_16.c":112:23)
#loc158 = loc("CWE367_TOC_TOU__access_16.c":112:51)
#loc159 = loc("CWE367_TOC_TOU__access_16.c":112:74)
#loc160 = loc("CWE367_TOC_TOU__access_16.c":112:17)
#loc161 = loc("CWE367_TOC_TOU__access_16.c":112:81)
#loc162 = loc("CWE367_TOC_TOU__access_16.c":112:80)
#loc163 = loc("CWE367_TOC_TOU__access_16.c":113:13)
#loc164 = loc("CWE367_TOC_TOU__access_16.c":114:17)
#loc165 = loc("CWE367_TOC_TOU__access_16.c":114:22)
#loc166 = loc("CWE367_TOC_TOU__access_16.c":116:13)
#loc167 = loc("CWE367_TOC_TOU__access_16.c":119:13)
#loc168 = loc("CWE367_TOC_TOU__access_16.c":116:17)
#loc169 = loc("CWE367_TOC_TOU__access_16.c":116:30)
#loc170 = loc("CWE367_TOC_TOU__access_16.c":116:29)
#loc171 = loc("CWE367_TOC_TOU__access_16.c":117:13)
#loc172 = loc("CWE367_TOC_TOU__access_16.c":118:23)
#loc173 = loc("CWE367_TOC_TOU__access_16.c":118:17)
#loc174 = loc("CWE367_TOC_TOU__access_16.c":121:9)
#loc175 = loc(fused[#loc1, #loc2])
#loc176 = loc(fused[#loc3, #loc4])
#loc177 = loc(fused[#loc5, #loc6])
#loc178 = loc(fused[#loc8, #loc9])
#loc179 = loc(fused[#loc10, #loc11])
#loc180 = loc(fused[#loc12, #loc13])
#loc181 = loc(fused[#loc14, #loc15])
#loc182 = loc(fused[#loc16, #loc17])
#loc183 = loc(fused[#loc19, #loc20])
#loc184 = loc(fused[#loc21, #loc22])
#loc185 = loc(fused[#loc23, #loc24])
#loc186 = loc(fused[#loc26, #loc24])
#loc187 = loc(fused[#loc27, #loc28])
#loc188 = loc(fused[#loc29, #loc30])
#loc189 = loc(fused[#loc31, #loc32])
#loc190 = loc(fused[#loc34, #loc35])
#loc191 = loc(fused[#loc39, #loc40])
#loc192 = loc(fused[#loc41, #loc35])
#loc193 = loc(fused[#loc45, #loc43])
#loc194 = loc(fused[#loc46, #loc47])
#loc195 = loc(fused[#loc48, #loc50])
#loc196 = loc(fused[#loc51, #loc47])
#loc197 = loc(fused[#loc53, #loc55])
#loc198 = loc(fused[#loc56, #loc52])
#loc199 = loc(fused[#loc57, #loc58])
#loc200 = loc(fused[#loc61, #loc62])
#loc201 = loc(fused[#loc64, #loc58])
#loc202 = loc(fused[#loc70, #loc71])
#loc203 = loc(fused[#loc72, #loc73])
#loc204 = loc(fused[#loc74, #loc75])
#loc205 = loc(fused[#loc77, #loc73])
#loc206 = loc(fused[#loc80, #loc81])
#loc207 = loc(fused[#loc83, #loc84])
#loc208 = loc(fused[#loc85, #loc86])
#loc209 = loc(fused[#loc88, #loc81])
#loc210 = loc(fused[#loc91, #loc92])
#loc211 = loc(fused[#loc93, #loc94])
#loc212 = loc(fused[#loc96, #loc92])
#loc213 = loc(fused[#loc100, #loc101])
#loc214 = loc(fused[#loc102, #loc103])
#loc215 = loc(fused[#loc105, #loc106])
#loc216 = loc(fused[#loc107, #loc108])
#loc217 = loc(fused[#loc110, #loc108])
#loc218 = loc(fused[#loc111, #loc112])
#loc219 = loc(fused[#loc113, #loc114])
#loc220 = loc(fused[#loc115, #loc116])
#loc221 = loc(fused[#loc118, #loc119])
#loc222 = loc(fused[#loc123, #loc124])
#loc223 = loc(fused[#loc125, #loc119])
#loc224 = loc(fused[#loc130, #loc128])
#loc225 = loc(fused[#loc131, #loc132])
#loc226 = loc(fused[#loc133, #loc135])
#loc227 = loc(fused[#loc136, #loc132])
#loc228 = loc(fused[#loc138, #loc140])
#loc229 = loc(fused[#loc141, #loc137])
#loc230 = loc(fused[#loc145, #loc146])
#loc231 = loc(fused[#loc147, #loc148])
#loc232 = loc(fused[#loc149, #loc150])
#loc233 = loc(fused[#loc152, #loc148])
#loc234 = loc(fused[#loc155, #loc156])
#loc235 = loc(fused[#loc158, #loc159])
#loc236 = loc(fused[#loc160, #loc161])
#loc237 = loc(fused[#loc163, #loc156])
#loc238 = loc(fused[#loc166, #loc167])
#loc239 = loc(fused[#loc168, #loc169])
#loc240 = loc(fused[#loc171, #loc167])
