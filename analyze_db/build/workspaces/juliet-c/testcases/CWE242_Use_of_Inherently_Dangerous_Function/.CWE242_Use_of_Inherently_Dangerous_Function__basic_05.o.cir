!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc120)
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc5)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc122)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_05_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc120)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc12)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc127)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc128)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc20)
          %6 = cir.get_global @gets : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc129)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>> loc(#loc129)
          %8 = cir.call %7(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>>, !cir.ptr<!s8i>) -> !s32i loc(#loc21)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc21)
          %10 = cir.cast(int_to_ptr, %9 : !u64i), !cir.ptr<!s8i> loc(#loc21)
          cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
          cir.scope {
            %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc27)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc132)
            cir.if %22 {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc5)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc5)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc29)
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc31)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
            } loc(#loc133)
          } loc(#loc131)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc32)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc32)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc33)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc33)
          %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc35)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc35)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc134)
          %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc36)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc126)
      } loc(#loc125)
    } loc(#loc124)
    cir.return loc(#loc9)
  } loc(#loc123)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc135)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc139)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc140)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc138)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc55)
      cir.if %2 {
        %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc59)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc145)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc146)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc66)
          %6 = cir.const #cir.int<10> : !s32i loc(#loc67)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc140)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
          %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc69)
          cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc149)
            cir.if %21 {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc77)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc77)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc78)
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc79)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc80)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
            } loc(#loc150)
          } loc(#loc148)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc81)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc81)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc82)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc82)
          %15 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc84)
          %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc84)
          cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc151)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc85)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc86)
        } loc(#loc144)
      } loc(#loc143)
    } loc(#loc142)
    cir.return loc(#loc52)
  } loc(#loc141)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc120)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc91)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc156)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc157)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc99)
          %6 = cir.const #cir.int<10> : !s32i loc(#loc100)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc140)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
          %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc102)
          cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc160)
            cir.if %21 {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc110)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc110)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc111)
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc112)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc113)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
            } loc(#loc161)
          } loc(#loc159)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc114)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc114)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc115)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc116)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc115)
          %15 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc117)
          %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc117)
          cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc162)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc118)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc119)
        } loc(#loc155)
      } loc(#loc154)
    } loc(#loc153)
    cir.return loc(#loc88)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":0:0)
#loc1 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":23:1)
#loc2 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":23:25)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":43:27)
#loc6 = loc("/usr/include/stdlib.h":756:1)
#loc7 = loc("/usr/include/stdlib.h":756:70)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":28:1)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":50:1)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":30:5)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":49:5)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":30:8)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":31:5)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":32:9)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":48:9)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":33:13)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":33:32)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":34:13)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":34:19)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":38:27)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":38:22)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":38:31)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":38:13)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":40:13)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":45:13)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":40:17)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":40:27)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":41:13)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":43:17)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":44:17)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":44:22)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":46:33)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":46:18)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":46:28)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":46:13)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":47:23)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":47:13)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":107:1)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":111:1)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":109:5)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":109:11)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":110:5)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":110:11)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":24:1)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":24:26)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":62:19)
#loc47 = loc("/usr/include/stdio.h":654:1)
#loc48 = loc("/usr/include/stdio.h":655:59)
#loc49 = loc("/usr/include/stdio.h":149:1)
#loc50 = loc("/usr/include/stdio.h":149:14)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":57:1)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":82:1)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":59:5)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":81:5)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":59:8)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":60:5)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":63:5)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":65:5)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":62:9)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":66:9)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":80:9)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":67:13)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":67:32)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":68:13)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":68:19)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":70:28)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":70:34)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":70:45)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":70:22)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":70:13)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":70:50)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":72:13)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":77:13)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":72:17)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":72:27)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":73:13)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":75:27)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":75:17)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":76:17)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":76:22)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":78:33)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":78:18)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":78:28)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":78:13)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":79:23)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":79:13)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":85:1)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":105:1)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":87:5)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":104:5)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":87:8)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":88:5)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":89:9)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":103:9)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":90:13)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":90:32)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":91:13)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":91:19)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":93:28)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":93:34)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":93:45)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":93:22)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":93:13)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":93:50)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":95:13)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":100:13)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":95:17)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":95:27)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":96:13)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":98:27)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":98:17)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":99:17)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":99:22)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":101:33)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":101:18)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":101:28)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":101:13)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":102:23)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_05.c":102:13)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc6, #loc7])
#loc123 = loc(fused[#loc8, #loc9])
#loc124 = loc(fused[#loc10, #loc11])
#loc125 = loc(fused[#loc13, #loc11])
#loc126 = loc(fused[#loc14, #loc15])
#loc127 = loc(fused[#loc16, #loc17])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc21, #loc22])
#loc130 = loc(fused[#loc23, #loc22])
#loc131 = loc(fused[#loc24, #loc25])
#loc132 = loc(fused[#loc26, #loc27])
#loc133 = loc(fused[#loc28, #loc25])
#loc134 = loc(fused[#loc35, #loc32])
#loc135 = loc(fused[#loc38, #loc39])
#loc136 = loc(fused[#loc40, #loc41])
#loc137 = loc(fused[#loc42, #loc43])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc47, #loc48])
#loc140 = loc(fused[#loc49, #loc50])
#loc141 = loc(fused[#loc51, #loc52])
#loc142 = loc(fused[#loc53, #loc54])
#loc143 = loc(fused[#loc56, #loc57, #loc58, #loc54])
#loc144 = loc(fused[#loc60, #loc61])
#loc145 = loc(fused[#loc62, #loc63])
#loc146 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc70, #loc71])
#loc148 = loc(fused[#loc72, #loc73])
#loc149 = loc(fused[#loc74, #loc75])
#loc150 = loc(fused[#loc76, #loc73])
#loc151 = loc(fused[#loc84, #loc81])
#loc152 = loc(fused[#loc87, #loc88])
#loc153 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc92, #loc90])
#loc155 = loc(fused[#loc93, #loc94])
#loc156 = loc(fused[#loc95, #loc96])
#loc157 = loc(fused[#loc97, #loc98])
#loc158 = loc(fused[#loc103, #loc104])
#loc159 = loc(fused[#loc105, #loc106])
#loc160 = loc(fused[#loc107, #loc108])
#loc161 = loc(fused[#loc109, #loc106])
#loc162 = loc(fused[#loc117, #loc114])
