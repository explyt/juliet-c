!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc11 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":60:14)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":60:21)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":164:18)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":164:25)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc257 = loc(fused[#loc11, #loc12])
#loc337 = loc(fused[#loc213, #loc214])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_41L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc252)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_413badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc253)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc254)
  cir.func private @close(!s32i) -> !s32i loc(#loc255)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_417badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc257)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc259)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %3 = cir.const #cir.int<2> : !s32i loc(#loc19)
      %4 = cir.const #cir.int<64> : !s32i loc(#loc20)
      %5 = cir.binop(or, %3, %4) : !s32i loc(#loc260)
      %6 = cir.const #cir.int<256> : !s32i loc(#loc21)
      %7 = cir.const #cir.int<128> : !s32i loc(#loc22)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc261)
      %9 = cir.call @open(%2, %5, %8) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc23)
      cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc262)
      cir.scope {
        %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc30)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc264)
        cir.if %13 {
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc33)
        } loc(#loc265)
      } loc(#loc263)
    } loc(#loc258)
    cir.return loc(#loc10)
  } loc(#loc256)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc266)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc267)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc268)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc269)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc270)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc271)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc272)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc273)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_413badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc253)
    %2 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_413badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc253)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc253)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc278)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc279)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc280)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc281)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc282)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc283)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc65)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc281)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc67)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc67)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc282)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc70)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc70)
      cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc283)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc76)
            %19 = cir.const #cir.int<1> : !u32i loc(#loc77)
            %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc77)
            %21 = cir.const #cir.int<6> : !u32i loc(#loc78)
            %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc78)
            %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc79)
            cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc286)
            cir.scope {
              %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc84)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc85)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc85)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc288)
              cir.if %79 {
                cir.break loc(#loc87)
              } loc(#loc289)
            } loc(#loc287)
            %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc290)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc90)
            %26 = cir.const #cir.int<16> : !u64i loc(#loc291)
            cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc292)
            %27 = cir.const #cir.int<2> : !s32i loc(#loc95)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc95)
            %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc293)
            %30 = cir.const #cir.int<0> : !s32i loc(#loc98)
            %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc98)
            %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc99)
            %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc100)
            cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc294)
            %34 = cir.const #cir.int<27015> : !s32i loc(#loc102)
            %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc102)
            %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc103)
            %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc104)
            cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc295)
            cir.scope {
              %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %77 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc297)
              %78 = cir.const #cir.int<16> : !u64i loc(#loc298)
              %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc298)
              %80 = cir.call @bind(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc114)
              %81 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc115)
              %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc299)
              cir.if %83 {
                cir.break loc(#loc117)
              } loc(#loc300)
            } loc(#loc296)
            cir.scope {
              %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %77 = cir.const #cir.int<5> : !s32i loc(#loc121)
              %78 = cir.call @listen(%76, %77) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc122)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc123)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc123)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc302)
              cir.if %81 {
                cir.break loc(#loc125)
              } loc(#loc303)
            } loc(#loc301)
            %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc127)
            %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc128)
            %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc129)
            cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc304)
            cir.scope {
              %76 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc135)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc135)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc306)
              cir.if %79 {
                cir.break loc(#loc137)
              } loc(#loc307)
            } loc(#loc305)
            %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
            %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc140)
            %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc141)
            %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc308)
            %47 = cir.const #cir.int<1> : !u64i loc(#loc309)
            %48 = cir.const #cir.int<4096> : !s32i loc(#loc146)
            %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc146)
            %50 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc147)
            %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc310)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc148)
            %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc148)
            %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc311)
            %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc312)
            %56 = cir.const #cir.int<0> : !s32i loc(#loc150)
            %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc151)
            %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc151)
            cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc313)
            cir.scope {
              %76 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc157)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc157)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc315)
              %80 = cir.ternary(%79, true {
                %81 = cir.const #true loc(#loc158)
                cir.yield %81 : !cir.bool loc(#loc158)
              }, false {
                %81 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc159)
                %82 = cir.const #cir.int<0> : !s32i loc(#loc160)
                %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc316)
                %84 = cir.ternary(%83, true {
                  %85 = cir.const #true loc(#loc158)
                  cir.yield %85 : !cir.bool loc(#loc158)
                }, false {
                  %85 = cir.const #false loc(#loc158)
                  cir.yield %85 : !cir.bool loc(#loc158)
                }) : (!cir.bool) -> !cir.bool loc(#loc158)
                cir.yield %84 : !cir.bool loc(#loc158)
              }) : (!cir.bool) -> !cir.bool loc(#loc158)
              cir.if %80 {
                cir.break loc(#loc162)
              } loc(#loc317)
            } loc(#loc314)
            %59 = cir.const #cir.int<0> : !s8i loc(#loc163)
            %60 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
            %61 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc165)
            %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc166)
            %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc166)
            %64 = cir.const #cir.int<1> : !u64i loc(#loc318)
            %65 = cir.binop(div, %63, %64) : !u64i loc(#loc319)
            %66 = cir.binop(add, %61, %65) : !u64i loc(#loc320)
            %67 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc169)
            cir.store %59, %67 : !s8i, !cir.ptr<!s8i> loc(#loc321)
            %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
            %69 = cir.const #cir.int<13> : !s8i loc(#loc171)
            %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc171)
            %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc172)
            cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
            cir.scope {
              %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc177)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc179)
                %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc325)
              } loc(#loc324)
            } loc(#loc323)
            %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
            %73 = cir.const #cir.int<10> : !s8i loc(#loc183)
            %74 = cir.cast(integral, %73 : !s8i), !s32i loc(#loc183)
            %75 = cir.call @strchr(%72, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc184)
            cir.store %75, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
            cir.scope {
              %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc189)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc191)
                %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc329)
              } loc(#loc328)
            } loc(#loc327)
          } loc(#loc285)
          cir.yield loc(#loc73)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc194)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc194)
          cir.condition(%19) loc(#loc194)
        } loc(#loc284)
      } loc(#loc284)
      cir.scope {
        %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc197)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc198)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc198)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc331)
        cir.if %21 {
          %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc200)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc201)
        } loc(#loc332)
      } loc(#loc330)
      cir.scope {
        %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc204)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc205)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc205)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc334)
        cir.if %21 {
          %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc207)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc208)
        } loc(#loc335)
      } loc(#loc333)
    } loc(#loc277)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_417badSinkEPc(%4) : (!cir.ptr<!s8i>) -> () loc(#loc210)
    cir.return loc(#loc51)
  } loc(#loc274)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_4111goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc213, #loc214])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc337)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc339)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
      %3 = cir.const #cir.int<2> : !s32i loc(#loc221)
      %4 = cir.const #cir.int<64> : !s32i loc(#loc222)
      %5 = cir.binop(or, %3, %4) : !s32i loc(#loc340)
      %6 = cir.const #cir.int<256> : !s32i loc(#loc223)
      %7 = cir.const #cir.int<128> : !s32i loc(#loc224)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc341)
      %9 = cir.call @open(%2, %5, %8) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc225)
      cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc342)
      cir.scope {
        %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc230)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc231)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc232)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc344)
        cir.if %13 {
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc234)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc235)
        } loc(#loc345)
      } loc(#loc343)
    } loc(#loc338)
    cir.return loc(#loc212)
  } loc(#loc336)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc238)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_41L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc348)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc252)
    %2 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_41L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc252)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc252)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc243)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc349)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc245)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc238)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc238)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc245)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_4111goodG2BSinkEPc(%9) : (!cir.ptr<!s8i>) -> () loc(#loc248)
    cir.return loc(#loc240)
  } loc(#loc347)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_414goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_41L7goodG2BEv() : () -> () loc(#loc251)
    cir.return loc(#loc250)
  } loc(#loc350)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":181:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":181:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":76:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":76:37)
#loc5 = loc("/usr/include/fcntl.h":209:1)
#loc6 = loc("/usr/include/fcntl.h":209:56)
#loc7 = loc("/usr/include/unistd.h":358:1)
#loc8 = loc("/usr/include/unistd.h":358:27)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":60:1)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":71:1)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":61:1)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":62:5)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":70:5)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":63:9)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":63:13)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":65:25)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":65:31)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":65:38)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":65:47)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":65:55)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":65:20)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":65:9)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":65:63)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":66:9)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":69:9)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":66:13)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":66:26)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":66:25)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":67:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":68:19)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":68:13)
#loc34 = loc("/usr/include/string.h":407:1)
#loc35 = loc("/usr/include/string.h":408:33)
#loc36 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc37 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc38 = loc("/usr/include/netinet/in.h":402:1)
#loc39 = loc("/usr/include/netinet/in.h":403:40)
#loc40 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc41 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc42 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc43 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc44 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc45 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc46 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc47 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc48 = loc("/usr/include/string.h":226:1)
#loc49 = loc("/usr/include/string.h":227:50)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":73:1)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":158:1)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":75:5)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":75:12)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":77:12)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":77:5)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":78:5)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":156:5)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":83:9)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":83:13)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":84:9)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":84:28)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":85:9)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":85:15)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":86:9)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":86:31)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":87:9)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":87:31)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":88:9)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":88:37)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":88:26)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":88:33)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":89:9)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":141:17)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":90:9)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":140:9)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":99:35)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":99:44)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":99:57)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":99:28)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":99:13)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":99:68)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":100:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":103:13)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":100:17)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":100:33)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":101:13)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":102:17)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":104:20)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":104:21)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":104:30)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":104:33)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":104:47)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":104:13)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":104:48)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":105:34)
#loc96 = loc("/usr/include/netinet/in.h":249:5)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":105:13)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":106:39)
#loc99 = loc("/usr/include/netinet/in.h":251:20)
#loc100 = loc("/usr/include/netinet/in.h":33:15)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":106:13)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":107:38)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":107:32)
#loc104 = loc("/usr/include/netinet/in.h":250:15)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":107:13)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":107:46)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":108:13)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":111:13)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":108:22)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":108:54)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":108:55)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":108:64)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":108:78)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":108:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":108:84)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":109:13)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":110:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":112:13)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":115:13)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":112:24)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":112:38)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":112:17)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":112:57)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":113:13)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":114:17)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":116:35)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":116:49)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":116:55)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":116:28)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":116:13)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":116:59)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":117:13)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":120:13)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":117:17)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":117:33)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":118:13)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":119:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:31)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:54)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:61)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:59)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:45)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:68)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:71)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:82)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:87)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:102)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:112)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:113)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:116)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:26)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:13)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":122:117)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":123:13)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":126:13)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":123:17)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":123:31)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":123:44)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":123:47)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":123:61)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":124:13)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":125:17)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":128:57)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":128:13)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":128:18)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":128:28)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":128:41)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":128:52)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":128:53)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":130:30)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":130:36)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":130:23)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":130:13)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":130:40)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":131:13)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":134:13)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":131:17)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":132:13)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":133:28)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":133:18)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":133:17)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":135:30)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":135:36)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":135:23)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":135:13)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":135:40)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":136:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":139:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":136:17)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":137:13)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":138:28)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":138:18)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":138:17)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":141:16)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":142:9)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":145:9)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":142:13)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":142:29)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":143:9)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":144:26)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":144:13)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":146:9)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":149:9)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":146:13)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":146:29)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":147:9)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":148:26)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":148:13)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":157:13)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":157:5)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":164:1)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":175:1)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":165:1)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":166:5)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":174:5)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":167:9)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":167:13)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":169:25)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":169:31)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":169:38)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":169:47)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":169:55)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":169:20)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":169:9)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":169:63)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":170:9)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":173:9)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":170:13)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":170:26)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":170:25)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":171:9)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":172:19)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":172:13)
#loc236 = loc("/usr/include/string.h":149:1)
#loc237 = loc("/usr/include/string.h":150:14)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":184:18)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":178:1)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":186:1)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":180:5)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":180:12)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":182:12)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":182:5)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":184:5)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":184:12)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":185:17)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":185:5)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":188:1)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":191:1)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_41.cpp":190:5)
#loc252 = loc(fused[#loc1, #loc2])
#loc253 = loc(fused[#loc3, #loc4])
#loc254 = loc(fused[#loc5, #loc6])
#loc255 = loc(fused[#loc7, #loc8])
#loc256 = loc(fused[#loc9, #loc10])
#loc258 = loc(fused[#loc14, #loc15])
#loc259 = loc(fused[#loc16, #loc17])
#loc260 = loc(fused[#loc19, #loc20])
#loc261 = loc(fused[#loc21, #loc22])
#loc262 = loc(fused[#loc24, #loc25])
#loc263 = loc(fused[#loc26, #loc27])
#loc264 = loc(fused[#loc28, #loc29])
#loc265 = loc(fused[#loc31, #loc27])
#loc266 = loc(fused[#loc34, #loc35])
#loc267 = loc(fused[#loc36, #loc37])
#loc268 = loc(fused[#loc38, #loc39])
#loc269 = loc(fused[#loc40, #loc41])
#loc270 = loc(fused[#loc42, #loc43])
#loc271 = loc(fused[#loc44, #loc45])
#loc272 = loc(fused[#loc46, #loc47])
#loc273 = loc(fused[#loc48, #loc49])
#loc274 = loc(fused[#loc50, #loc51])
#loc275 = loc(fused[#loc52, #loc53])
#loc276 = loc(fused[#loc55, #loc54])
#loc277 = loc(fused[#loc56, #loc57])
#loc278 = loc(fused[#loc58, #loc59])
#loc279 = loc(fused[#loc60, #loc61])
#loc280 = loc(fused[#loc62, #loc63])
#loc281 = loc(fused[#loc64, #loc65])
#loc282 = loc(fused[#loc66, #loc67])
#loc283 = loc(fused[#loc68, #loc69])
#loc284 = loc(fused[#loc72, #loc73])
#loc285 = loc(fused[#loc74, #loc75])
#loc286 = loc(fused[#loc80, #loc81])
#loc287 = loc(fused[#loc82, #loc83])
#loc288 = loc(fused[#loc84, #loc85])
#loc289 = loc(fused[#loc86, #loc83])
#loc290 = loc(fused[#loc88, #loc89])
#loc291 = loc(fused[#loc91, #loc92])
#loc292 = loc(fused[#loc93, #loc94])
#loc293 = loc(fused[#loc97, #loc95])
#loc294 = loc(fused[#loc101, #loc98])
#loc295 = loc(fused[#loc105, #loc106])
#loc296 = loc(fused[#loc107, #loc108])
#loc297 = loc(fused[#loc110, #loc111])
#loc298 = loc(fused[#loc112, #loc113])
#loc299 = loc(fused[#loc114, #loc115])
#loc300 = loc(fused[#loc116, #loc108])
#loc301 = loc(fused[#loc118, #loc119])
#loc302 = loc(fused[#loc122, #loc123])
#loc303 = loc(fused[#loc124, #loc119])
#loc304 = loc(fused[#loc130, #loc131])
#loc305 = loc(fused[#loc132, #loc133])
#loc306 = loc(fused[#loc134, #loc135])
#loc307 = loc(fused[#loc136, #loc133])
#loc308 = loc(fused[#loc142, #loc143])
#loc309 = loc(fused[#loc144, #loc145])
#loc310 = loc(fused[#loc146, #loc147])
#loc311 = loc(fused[#loc146, #loc148])
#loc312 = loc(fused[#loc144, #loc149])
#loc313 = loc(fused[#loc152, #loc153])
#loc314 = loc(fused[#loc154, #loc155])
#loc315 = loc(fused[#loc156, #loc157])
#loc316 = loc(fused[#loc159, #loc160])
#loc317 = loc(fused[#loc161, #loc155])
#loc318 = loc(fused[#loc167, #loc168])
#loc319 = loc(fused[#loc166, #loc168])
#loc320 = loc(fused[#loc165, #loc168])
#loc321 = loc(fused[#loc164, #loc163])
#loc322 = loc(fused[#loc173, #loc174])
#loc323 = loc(fused[#loc175, #loc176])
#loc324 = loc(fused[#loc178, #loc176])
#loc325 = loc(fused[#loc181, #loc179])
#loc326 = loc(fused[#loc185, #loc186])
#loc327 = loc(fused[#loc187, #loc188])
#loc328 = loc(fused[#loc190, #loc188])
#loc329 = loc(fused[#loc193, #loc191])
#loc330 = loc(fused[#loc195, #loc196])
#loc331 = loc(fused[#loc197, #loc198])
#loc332 = loc(fused[#loc199, #loc196])
#loc333 = loc(fused[#loc202, #loc203])
#loc334 = loc(fused[#loc204, #loc205])
#loc335 = loc(fused[#loc206, #loc203])
#loc336 = loc(fused[#loc211, #loc212])
#loc338 = loc(fused[#loc216, #loc217])
#loc339 = loc(fused[#loc218, #loc219])
#loc340 = loc(fused[#loc221, #loc222])
#loc341 = loc(fused[#loc223, #loc224])
#loc342 = loc(fused[#loc226, #loc227])
#loc343 = loc(fused[#loc228, #loc229])
#loc344 = loc(fused[#loc230, #loc231])
#loc345 = loc(fused[#loc233, #loc229])
#loc346 = loc(fused[#loc236, #loc237])
#loc347 = loc(fused[#loc239, #loc240])
#loc348 = loc(fused[#loc241, #loc242])
#loc349 = loc(fused[#loc244, #loc243])
#loc350 = loc(fused[#loc249, #loc250])
