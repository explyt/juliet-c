!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @CWE665_Improper_Initialization__char_ncat_66b_badSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc43)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_66_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc45)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc46)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc47)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    %7 = cir.ptr_stride(%6 : !cir.ptr<!cir.ptr<!s8i>>, %5 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.store %4, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.call @CWE665_Improper_Initialization__char_ncat_66b_badSink(%8) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc17)
    cir.return loc(#loc4)
  } loc(#loc44)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_66_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc51)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    cir.return loc(#loc19)
  } loc(#loc50)
  cir.func private @CWE665_Improper_Initialization__char_ncat_66b_goodG2BSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc52)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc54)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc55)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc56)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc34)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc58)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!cir.ptr<!s8i>>, %10 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    cir.store %9, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
    %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
    cir.call @CWE665_Improper_Initialization__char_ncat_66b_goodG2BSink(%13) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc42)
    cir.return loc(#loc25)
  } loc(#loc53)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_66a.c":0:0)
#loc1 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":24:1)
#loc2 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":24:78)
#loc3 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":26:1)
#loc4 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":37:1)
#loc5 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":28:5)
#loc6 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":28:12)
#loc7 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":29:5)
#loc8 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":29:23)
#loc9 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":30:5)
#loc10 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":30:24)
#loc11 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":31:12)
#loc12 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":31:5)
#loc13 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":35:20)
#loc14 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":35:15)
#loc15 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":35:5)
#loc16 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":36:59)
#loc17 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":36:5)
#loc18 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":58:1)
#loc19 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":61:1)
#loc20 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":60:5)
#loc21 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":60:13)
#loc22 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":44:1)
#loc23 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":44:82)
#loc24 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":46:1)
#loc25 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":56:1)
#loc26 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":48:5)
#loc27 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":48:12)
#loc28 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":49:5)
#loc29 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":49:23)
#loc30 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":50:5)
#loc31 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":50:24)
#loc32 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":51:12)
#loc33 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":51:5)
#loc34 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":53:15)
#loc35 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":53:5)
#loc36 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":53:10)
#loc37 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":53:11)
#loc38 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":54:20)
#loc39 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":54:15)
#loc40 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":54:5)
#loc41 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":55:63)
#loc42 = loc("CWE665_Improper_Initialization__char_ncat_66a.c":55:5)
#loc43 = loc(fused[#loc1, #loc2])
#loc44 = loc(fused[#loc3, #loc4])
#loc45 = loc(fused[#loc5, #loc6])
#loc46 = loc(fused[#loc7, #loc8])
#loc47 = loc(fused[#loc9, #loc10])
#loc48 = loc(fused[#loc12, #loc11])
#loc49 = loc(fused[#loc15, #loc13])
#loc50 = loc(fused[#loc18, #loc19])
#loc51 = loc(fused[#loc20, #loc21])
#loc52 = loc(fused[#loc22, #loc23])
#loc53 = loc(fused[#loc24, #loc25])
#loc54 = loc(fused[#loc26, #loc27])
#loc55 = loc(fused[#loc28, #loc29])
#loc56 = loc(fused[#loc30, #loc31])
#loc57 = loc(fused[#loc33, #loc32])
#loc58 = loc(fused[#loc35, #loc34])
#loc59 = loc(fused[#loc40, #loc38])
