!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":110:10)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":110:14)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":110:20)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":110:32)
#loc155 = loc(fused[#loc52, #loc53])
#loc156 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc134)
  cir.func private @printLongLongLine(!s64i) loc(#loc135)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc138)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc139)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc134)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc15)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s64i x 50>>), !cir.ptr<!s64i> loc(#loc17)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc142)
      } loc(#loc141)
    } loc(#loc140)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc144)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc144)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc144)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc23)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc24)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc24)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc25)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc145)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc146)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc147)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc32)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc30)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc33)
    } loc(#loc143)
    cir.return loc(#loc6)
  } loc(#loc136)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc148)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc151)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc152)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc59)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc72)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc163)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc164)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc160)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc83)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      } else {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc88)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc167)
      } loc(#loc166)
    } loc(#loc165)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc169)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc169)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc169)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc94)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc94)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc95)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc95)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc96)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc96)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc170)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc171)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc172)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc101)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc102)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc103)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc101)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc104)
    } loc(#loc168)
    cir.return loc(#loc74)
  } loc(#loc161)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc175)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc176)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc134)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc115)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc115)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc117)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc179)
      } loc(#loc178)
    } loc(#loc177)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc181)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc181)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc181)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc123)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc123)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc124)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc124)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc125)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc125)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc182)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc183)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc184)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc130)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc131)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc132)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc130)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc133)
    } loc(#loc180)
    cir.return loc(#loc106)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":23:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":23:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":28:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":45:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":30:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":30:15)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":31:29)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":32:31)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":33:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":38:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":33:8)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":37:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":37:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":39:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":44:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":40:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":40:33)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":42:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":42:22)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":42:30)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":42:34)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":42:48)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":42:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":42:49)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":43:27)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":43:32)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":43:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":43:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":94:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":98:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":96:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":96:14)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":97:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":97:14)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":115:15)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":117:15)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":120:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":122:15)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":110:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":125:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":111:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":113:27)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":113:22)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":113:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":115:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":116:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":116:79)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":117:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":120:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":121:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":121:78)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":122:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":124:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":124:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":24:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":24:26)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":60:19)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":52:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":73:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":54:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":54:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":55:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":55:29)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":56:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":56:31)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":57:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":66:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":57:8)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":58:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":61:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":63:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":60:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":65:16)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":65:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":67:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":72:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":68:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":68:33)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":70:16)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":70:22)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":70:30)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":70:34)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":70:48)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":70:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":70:49)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":71:27)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":71:32)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":71:33)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":71:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":76:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":92:1)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":78:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":78:15)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":79:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":79:29)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":80:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":80:31)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":81:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":85:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":81:8)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":82:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":84:16)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":84:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":86:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":91:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":87:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":87:33)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":89:16)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":89:22)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":89:30)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":89:34)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":89:48)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":89:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":89:49)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":90:27)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":90:32)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":90:33)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_05.c":90:9)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc5, #loc6])
#loc137 = loc(fused[#loc7, #loc8])
#loc138 = loc(fused[#loc9, #loc10])
#loc139 = loc(fused[#loc11, #loc12])
#loc140 = loc(fused[#loc13, #loc14])
#loc141 = loc(fused[#loc16, #loc14])
#loc142 = loc(fused[#loc18, #loc17])
#loc143 = loc(fused[#loc19, #loc20])
#loc144 = loc(fused[#loc21, #loc22])
#loc145 = loc(fused[#loc26, #loc27])
#loc146 = loc(fused[#loc25, #loc27])
#loc147 = loc(fused[#loc28, #loc29])
#loc148 = loc(fused[#loc34, #loc35])
#loc149 = loc(fused[#loc36, #loc37])
#loc150 = loc(fused[#loc38, #loc39])
#loc151 = loc(fused[#loc40, #loc41])
#loc152 = loc(fused[#loc42, #loc43])
#loc153 = loc(fused[#loc44, #loc45])
#loc154 = loc(fused[#loc50, #loc51])
#loc157 = loc(fused[#loc61, #loc62])
#loc158 = loc(fused[#loc65, #loc66])
#loc159 = loc(fused[#loc69, #loc68])
#loc160 = loc(fused[#loc70, #loc71])
#loc161 = loc(fused[#loc73, #loc74])
#loc162 = loc(fused[#loc75, #loc76])
#loc163 = loc(fused[#loc77, #loc78])
#loc164 = loc(fused[#loc79, #loc80])
#loc165 = loc(fused[#loc81, #loc82])
#loc166 = loc(fused[#loc84, #loc85, #loc86, #loc82])
#loc167 = loc(fused[#loc89, #loc88])
#loc168 = loc(fused[#loc90, #loc91])
#loc169 = loc(fused[#loc92, #loc93])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc96, #loc98])
#loc172 = loc(fused[#loc99, #loc100])
#loc173 = loc(fused[#loc105, #loc106])
#loc174 = loc(fused[#loc107, #loc108])
#loc175 = loc(fused[#loc109, #loc110])
#loc176 = loc(fused[#loc111, #loc112])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc116, #loc114])
#loc179 = loc(fused[#loc118, #loc117])
#loc180 = loc(fused[#loc119, #loc120])
#loc181 = loc(fused[#loc121, #loc122])
#loc182 = loc(fused[#loc126, #loc127])
#loc183 = loc(fused[#loc125, #loc127])
#loc184 = loc(fused[#loc128, #loc129])
