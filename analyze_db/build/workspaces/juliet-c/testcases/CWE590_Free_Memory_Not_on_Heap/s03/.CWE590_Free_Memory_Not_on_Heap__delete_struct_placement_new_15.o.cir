!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc107)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc108)
  cir.func @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_153badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc111)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc21)
    cir.br ^bb2 loc(#loc19)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc19)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.int<8> : !u64i loc(#loc116)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc26)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    cir.call @_ZN14_twoIntsStructC2Ev(%8) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc14)
    cir.store %8, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    cir.store %15, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc119)
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc35)
  ^bb7:  // pred: ^bb2
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc20)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    cir.call @printStructLine(%18) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc39)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc40)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc41)
    cir.return loc(#loc10)
  } loc(#loc109)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc120)
  cir.func internal private @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
    cir.br ^bb1 loc(#loc125)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc54)
    cir.br ^bb2 loc(#loc52)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc52)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc55)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb8 loc(#loc58)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc126)
  ^bb6:  // pred: ^bb5
    %6 = cir.const #cir.int<8> : !u64i loc(#loc127)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc122)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
    cir.call @_ZN14_twoIntsStructC2Ev(%8) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc47)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc122)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    cir.store %15, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc130)
    cir.br ^bb7 loc(#loc60)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc68)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc53)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.call @printStructLine(%16) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc70)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc71)
    cir.call @_ZdlPv(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc72)
    cir.return loc(#loc45)
  } loc(#loc121)
  cir.func internal private @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc83)
    cir.br ^bb2 loc(#loc81)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc81)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc84)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc136)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<8> : !u64i loc(#loc137)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc132)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    cir.call @_ZN14_twoIntsStructC2Ev(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc76)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    cir.store %13, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc140)
    cir.br ^bb6 loc(#loc86)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc94)
  ^bb7:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    cir.call @printStructLine(%16) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc99)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc100)
    cir.call @_ZdlPv(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc101)
    cir.return loc(#loc74)
  } loc(#loc131)
  cir.func @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_154goodEv() extra(#fn_attr2) {
    cir.call @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15L8goodG2B1Ev() : () -> () loc(#loc104)
    cir.call @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15L8goodG2B2Ev() : () -> () loc(#loc105)
    cir.return loc(#loc103)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":44:19)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":26:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":50:1)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":35:9)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":35:42)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":36:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":36:50)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":28:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":28:21)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":29:12)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":29:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":30:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":46:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":30:12)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":32:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":33:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":40:5)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":36:38)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":36:42)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":37:30)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":37:9)
#loc29 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":38:30)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":38:9)
#loc32 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":39:16)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":39:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":41:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":44:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":45:9)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":47:21)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":47:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":49:12)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":26:6)
#loc42 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc43 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":57:1)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":80:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":70:9)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":70:42)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":59:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":59:21)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":60:12)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":60:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":61:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":76:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":61:12)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":63:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":65:19)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":65:9)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":66:9)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":68:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":74:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":70:38)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":71:30)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":71:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":72:30)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":72:9)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":73:16)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":73:9)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":75:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":77:21)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":77:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":79:12)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":57:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":83:1)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":106:1)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":92:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":92:42)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":85:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":85:21)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":86:12)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":86:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":87:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":102:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":87:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":89:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":90:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":96:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":92:38)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":93:30)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":93:9)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":94:30)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":94:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":95:16)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":95:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":97:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":100:19)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":100:9)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":101:9)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":103:21)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":103:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":105:12)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":83:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":108:1)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":112:1)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":110:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":111:5)
#loc106 = loc(fused[#loc2, #loc3])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc13, #loc14])
#loc112 = loc(fused[#loc15, #loc16])
#loc113 = loc(fused[#loc18, #loc17])
#loc114 = loc(fused[#loc19, #loc20])
#loc115 = loc(fused[#loc23, #loc24])
#loc116 = loc(fused[#loc25, #loc14])
#loc117 = loc(fused[#loc28, #loc27])
#loc118 = loc(fused[#loc31, #loc30])
#loc119 = loc(fused[#loc34, #loc33])
#loc120 = loc(fused[#loc42, #loc43])
#loc121 = loc(fused[#loc44, #loc45])
#loc122 = loc(fused[#loc46, #loc47])
#loc123 = loc(fused[#loc48, #loc49])
#loc124 = loc(fused[#loc51, #loc50])
#loc125 = loc(fused[#loc52, #loc53])
#loc126 = loc(fused[#loc59, #loc60])
#loc127 = loc(fused[#loc61, #loc47])
#loc128 = loc(fused[#loc63, #loc62])
#loc129 = loc(fused[#loc65, #loc64])
#loc130 = loc(fused[#loc67, #loc66])
#loc131 = loc(fused[#loc73, #loc74])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc80, #loc79])
#loc135 = loc(fused[#loc81, #loc82])
#loc136 = loc(fused[#loc85, #loc86])
#loc137 = loc(fused[#loc87, #loc76])
#loc138 = loc(fused[#loc89, #loc88])
#loc139 = loc(fused[#loc91, #loc90])
#loc140 = loc(fused[#loc93, #loc92])
#loc141 = loc(fused[#loc102, #loc103])
