!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc46 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.record<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrue() -> !s32i loc(#loc189)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc190)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_113badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc11)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc194)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc13)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc13)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc13)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    cir.scope {
      %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc16)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc196)
      cir.if %12 {
        %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
      } loc(#loc197)
    } loc(#loc195)
    cir.scope {
      %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc23)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc200)
      cir.if %12 {
        cir.scope {
          %13 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc203)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc204)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc204)
          cir.call @_ZN12TwoIntsClassC2Ev(%17) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc29)
          cir.store %17, %13 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc203)
          %18 = cir.const #cir.int<5> : !s32i loc(#loc32)
          %19 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
          %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc205)
          %21 = cir.const #cir.int<10> : !s32i loc(#loc35)
          %22 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
          %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc206)
          %24 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
          %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc40)
        } loc(#loc202)
      } loc(#loc201)
    } loc(#loc199)
    cir.return loc(#loc7)
  } loc(#loc191)
  cir.func private @globalReturnsFalse() -> !s32i loc(#loc207)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc45)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc46)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc46)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc46)
    cir.return loc(#loc46)
  } loc(#loc46)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc52)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc52)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc212)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc52)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc54)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc54)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc54)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.scope {
      %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc57)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc214)
      cir.if %12 {
        %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
      } loc(#loc215)
    } loc(#loc213)
    cir.scope {
      %11 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc64)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc218)
      cir.if %12 {
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc45)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc45)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      } else {
        cir.scope {
          %13 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc221)
          %14 = cir.const #cir.int<4> : !u64i loc(#loc222)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc222)
          cir.call @_ZN11OneIntClassC2Ev(%17) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc73)
          cir.store %17, %13 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc221)
          %18 = cir.const #cir.int<5> : !s32i loc(#loc76)
          %19 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc77)
          %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc78)
          cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc223)
          %21 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc79)
          %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc78)
          %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc80)
          cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc81)
        } loc(#loc220)
      } loc(#loc219)
    } loc(#loc217)
    cir.return loc(#loc48)
  } loc(#loc209)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc87)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc227)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc89)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc89)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc89)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
    cir.scope {
      %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc92)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc229)
      cir.if %12 {
        %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
      } loc(#loc230)
    } loc(#loc228)
    cir.scope {
      %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc99)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc233)
      cir.if %12 {
        cir.scope {
          %13 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc236)
          %14 = cir.const #cir.int<4> : !u64i loc(#loc237)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc237)
          cir.call @_ZN11OneIntClassC2Ev(%17) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc105)
          cir.store %17, %13 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc236)
          %18 = cir.const #cir.int<5> : !s32i loc(#loc108)
          %19 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc109)
          %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc78)
          cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc238)
          %21 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc110)
          %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc78)
          %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc111)
          cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc112)
        } loc(#loc235)
      } loc(#loc234)
    } loc(#loc232)
    cir.return loc(#loc83)
  } loc(#loc224)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc240)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc118)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc118)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc242)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc118)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc120)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc120)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc120)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.scope {
      %11 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc123)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc244)
      cir.if %12 {
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc128)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc128)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc129)
      } else {
        %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
      } loc(#loc245)
    } loc(#loc243)
    cir.scope {
      %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc134)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc248)
      cir.if %12 {
        cir.scope {
          %13 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc251)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc252)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc252)
          cir.call @_ZN12TwoIntsClassC2Ev(%17) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc140)
          cir.store %17, %13 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc251)
          %18 = cir.const #cir.int<5> : !s32i loc(#loc143)
          %19 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc144)
          %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc253)
          %21 = cir.const #cir.int<10> : !s32i loc(#loc145)
          %22 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc146)
          %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc254)
          %24 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc147)
          %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc148)
          cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc149)
        } loc(#loc250)
      } loc(#loc249)
    } loc(#loc247)
    cir.return loc(#loc114)
  } loc(#loc239)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc256)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc257)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc155)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc155)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc258)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc155)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc157)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc157)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc157)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    cir.scope {
      %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc160)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc260)
      cir.if %12 {
        %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
      } loc(#loc261)
    } loc(#loc259)
    cir.scope {
      %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc167)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc264)
      cir.if %12 {
        cir.scope {
          %13 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc267)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc268)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc268)
          cir.call @_ZN12TwoIntsClassC2Ev(%17) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc173)
          cir.store %17, %13 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc267)
          %18 = cir.const #cir.int<5> : !s32i loc(#loc176)
          %19 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc177)
          %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc269)
          %21 = cir.const #cir.int<10> : !s32i loc(#loc178)
          %22 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc179)
          %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc270)
          %24 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc180)
          %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc181)
          cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc182)
        } loc(#loc266)
      } loc(#loc265)
    } loc(#loc263)
    cir.return loc(#loc151)
  } loc(#loc255)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_114goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11L8goodB2G1Ev() : () -> () loc(#loc185)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11L8goodB2G2Ev() : () -> () loc(#loc186)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11L8goodG2B1Ev() : () -> () loc(#loc187)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11L8goodG2B2Ev() : () -> () loc(#loc188)
    cir.return loc(#loc184)
  } loc(#loc271)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":24:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":50:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":26:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":26:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":27:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":27:36)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":28:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":28:37)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":29:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":29:8)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":29:26)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":30:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":32:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":32:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":34:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":49:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":34:8)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":34:26)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":35:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":36:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":48:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":42:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":42:49)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":42:39)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":42:43)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":44:32)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":44:13)
#loc34 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":45:32)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":45:13)
#loc37 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":46:26)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":46:36)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":46:13)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":70:19)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":57:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":86:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":59:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":59:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":60:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":60:36)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":61:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":61:37)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":62:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":66:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":62:8)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":62:26)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":63:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":65:16)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":65:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":67:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":85:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":67:8)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":67:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":68:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":71:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":73:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":70:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":74:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":84:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":80:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":80:48)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":80:38)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":80:42)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":82:32)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":82:13)
#loc78 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":83:26)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":83:36)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":83:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":89:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":113:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":91:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":91:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":92:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":92:36)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":93:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":93:37)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":94:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":98:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":94:8)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":94:26)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":95:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":97:16)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":97:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":99:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":112:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":99:8)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":99:26)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":100:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":101:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":111:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":107:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":107:48)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":107:38)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":107:42)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":109:32)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":109:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":110:26)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":110:36)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":110:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":116:1)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":147:1)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":118:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":118:12)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":119:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":119:36)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":120:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":120:37)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":121:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":130:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":121:8)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":121:27)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":122:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":125:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":127:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":124:19)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":124:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":129:16)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":129:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":131:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":146:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":131:8)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":131:26)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":132:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":133:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":145:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":139:13)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":139:49)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":139:39)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":139:43)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":141:32)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":141:13)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":142:32)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":142:13)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":143:26)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":143:36)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":143:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":150:1)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":176:1)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":152:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":152:12)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":153:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":153:36)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":154:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":154:37)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":155:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":159:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":155:8)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":155:26)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":156:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":158:16)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":158:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":160:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":175:5)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":160:8)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":160:26)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":161:5)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":162:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":174:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":168:13)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":168:49)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":168:39)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":168:43)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":170:32)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":170:13)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":171:32)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":171:13)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":172:26)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":172:36)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":172:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":178:1)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":184:1)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":180:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":181:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":182:5)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_11.cpp":183:5)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc4, #loc5])
#loc191 = loc(fused[#loc6, #loc7])
#loc192 = loc(fused[#loc8, #loc9])
#loc193 = loc(fused[#loc10, #loc11])
#loc194 = loc(fused[#loc12, #loc13])
#loc195 = loc(fused[#loc14, #loc15])
#loc196 = loc(fused[#loc16, #loc17])
#loc197 = loc(fused[#loc18, #loc15])
#loc198 = loc(fused[#loc20, #loc19])
#loc199 = loc(fused[#loc21, #loc22])
#loc200 = loc(fused[#loc23, #loc24])
#loc201 = loc(fused[#loc25, #loc22])
#loc202 = loc(fused[#loc26, #loc27])
#loc203 = loc(fused[#loc28, #loc29])
#loc204 = loc(fused[#loc30, #loc29])
#loc205 = loc(fused[#loc33, #loc32])
#loc206 = loc(fused[#loc36, #loc35])
#loc207 = loc(fused[#loc41, #loc42])
#loc208 = loc(fused[#loc43, #loc44])
#loc209 = loc(fused[#loc47, #loc48])
#loc210 = loc(fused[#loc49, #loc50])
#loc211 = loc(fused[#loc51, #loc52])
#loc212 = loc(fused[#loc53, #loc54])
#loc213 = loc(fused[#loc55, #loc56])
#loc214 = loc(fused[#loc57, #loc58])
#loc215 = loc(fused[#loc59, #loc56])
#loc216 = loc(fused[#loc61, #loc60])
#loc217 = loc(fused[#loc62, #loc63])
#loc218 = loc(fused[#loc64, #loc65])
#loc219 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc220 = loc(fused[#loc70, #loc71])
#loc221 = loc(fused[#loc72, #loc73])
#loc222 = loc(fused[#loc74, #loc73])
#loc223 = loc(fused[#loc77, #loc76])
#loc224 = loc(fused[#loc82, #loc83])
#loc225 = loc(fused[#loc84, #loc85])
#loc226 = loc(fused[#loc86, #loc87])
#loc227 = loc(fused[#loc88, #loc89])
#loc228 = loc(fused[#loc90, #loc91])
#loc229 = loc(fused[#loc92, #loc93])
#loc230 = loc(fused[#loc94, #loc91])
#loc231 = loc(fused[#loc96, #loc95])
#loc232 = loc(fused[#loc97, #loc98])
#loc233 = loc(fused[#loc99, #loc100])
#loc234 = loc(fused[#loc101, #loc98])
#loc235 = loc(fused[#loc102, #loc103])
#loc236 = loc(fused[#loc104, #loc105])
#loc237 = loc(fused[#loc106, #loc105])
#loc238 = loc(fused[#loc109, #loc108])
#loc239 = loc(fused[#loc113, #loc114])
#loc240 = loc(fused[#loc115, #loc116])
#loc241 = loc(fused[#loc117, #loc118])
#loc242 = loc(fused[#loc119, #loc120])
#loc243 = loc(fused[#loc121, #loc122])
#loc244 = loc(fused[#loc123, #loc124])
#loc245 = loc(fused[#loc125, #loc126, #loc127, #loc122])
#loc246 = loc(fused[#loc131, #loc130])
#loc247 = loc(fused[#loc132, #loc133])
#loc248 = loc(fused[#loc134, #loc135])
#loc249 = loc(fused[#loc136, #loc133])
#loc250 = loc(fused[#loc137, #loc138])
#loc251 = loc(fused[#loc139, #loc140])
#loc252 = loc(fused[#loc141, #loc140])
#loc253 = loc(fused[#loc144, #loc143])
#loc254 = loc(fused[#loc146, #loc145])
#loc255 = loc(fused[#loc150, #loc151])
#loc256 = loc(fused[#loc152, #loc153])
#loc257 = loc(fused[#loc154, #loc155])
#loc258 = loc(fused[#loc156, #loc157])
#loc259 = loc(fused[#loc158, #loc159])
#loc260 = loc(fused[#loc160, #loc161])
#loc261 = loc(fused[#loc162, #loc159])
#loc262 = loc(fused[#loc164, #loc163])
#loc263 = loc(fused[#loc165, #loc166])
#loc264 = loc(fused[#loc167, #loc168])
#loc265 = loc(fused[#loc169, #loc166])
#loc266 = loc(fused[#loc170, #loc171])
#loc267 = loc(fused[#loc172, #loc173])
#loc268 = loc(fused[#loc174, #loc173])
#loc269 = loc(fused[#loc177, #loc176])
#loc270 = loc(fused[#loc179, #loc178])
#loc271 = loc(fused[#loc183, #loc184])
