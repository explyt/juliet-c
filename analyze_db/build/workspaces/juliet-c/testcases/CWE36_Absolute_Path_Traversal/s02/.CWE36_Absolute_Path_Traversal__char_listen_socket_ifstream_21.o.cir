!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":55:25)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":55:32)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":167:30)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":167:37)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":204:30)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":204:37)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc316 = loc(fused[#loc23, #loc24])
#loc396 = loc(fused[#loc227, #loc228])
#loc410 = loc(fused[#loc267, #loc268])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_istream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ifstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L9badStaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc305)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc306)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc307)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc308)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc309)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc310)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc311)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc312)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc313)
  cir.func private @close(!s32i) -> !s32i loc(#loc314)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L9badSourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc23, #loc24])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc316)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc22)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc25)
    cir.scope {
      %4 = cir.get_global @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L9badStaticE : !cir.ptr<!s32i> loc(#loc305)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc28)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc320)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc321)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc322)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc323)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc324)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc325)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc39)
          cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc323)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc41)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc324)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc44)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc44)
          cir.store %19, %12 : !u64i, !cir.ptr<!u64i> loc(#loc325)
          cir.scope {
            cir.do {
              cir.scope {
                %20 = cir.const #cir.int<2> : !s32i loc(#loc50)
                %21 = cir.const #cir.int<1> : !u32i loc(#loc51)
                %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc51)
                %23 = cir.const #cir.int<6> : !u32i loc(#loc52)
                %24 = cir.cast(integral, %23 : !u32i), !s32i loc(#loc52)
                %25 = cir.call @socket(%20, %22, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
                cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc328)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc59)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc59)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc330)
                  cir.if %81 {
                    cir.break loc(#loc61)
                  } loc(#loc331)
                } loc(#loc329)
                %26 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc332)
                %27 = cir.const #cir.int<0> : !s32i loc(#loc64)
                %28 = cir.const #cir.int<16> : !u64i loc(#loc333)
                cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc334)
                %29 = cir.const #cir.int<2> : !s32i loc(#loc69)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc69)
                %31 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc335)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc72)
                %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc72)
                %34 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc336)
                %36 = cir.const #cir.int<27015> : !s32i loc(#loc76)
                %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc76)
                %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
                %39 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc337)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                  %79 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc339)
                  %80 = cir.const #cir.int<16> : !u64i loc(#loc340)
                  %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc340)
                  %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc88)
                  %83 = cir.const #cir.int<1> : !s32i loc(#loc89)
                  %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc89)
                  %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc341)
                  cir.if %85 {
                    cir.break loc(#loc91)
                  } loc(#loc342)
                } loc(#loc338)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                  %79 = cir.const #cir.int<5> : !s32i loc(#loc95)
                  %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc96)
                  %81 = cir.const #cir.int<1> : !s32i loc(#loc97)
                  %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc97)
                  %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc344)
                  cir.if %83 {
                    cir.break loc(#loc99)
                  } loc(#loc345)
                } loc(#loc343)
                %40 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %41 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc101)
                %42 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc102)
                %43 = cir.call @accept(%40, %41, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc103)
                cir.store %43, %11 : !s32i, !cir.ptr<!s32i> loc(#loc346)
                cir.scope {
                  %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc109)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc109)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc348)
                  cir.if %81 {
                    cir.break loc(#loc111)
                  } loc(#loc349)
                } loc(#loc347)
                %44 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
                %46 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc114)
                %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc115)
                %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc350)
                %49 = cir.const #cir.int<1> : !u64i loc(#loc351)
                %50 = cir.const #cir.int<4096> : !s32i loc(#loc120)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc120)
                %52 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc121)
                %53 = cir.binop(sub, %51, %52) : !u64i loc(#loc352)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc122)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc122)
                %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc353)
                %57 = cir.binop(mul, %49, %56) : !u64i loc(#loc354)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc124)
                %59 = cir.call @recv(%44, %48, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc125)
                %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc125)
                cir.store %60, %7 : !s32i, !cir.ptr<!s32i> loc(#loc355)
                cir.scope {
                  %78 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc131)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc131)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc357)
                  %82 = cir.ternary(%81, true {
                    %83 = cir.const #true loc(#loc132)
                    cir.yield %83 : !cir.bool loc(#loc132)
                  }, false {
                    %83 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                    %84 = cir.const #cir.int<0> : !s32i loc(#loc134)
                    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc358)
                    %86 = cir.ternary(%85, true {
                      %87 = cir.const #true loc(#loc132)
                      cir.yield %87 : !cir.bool loc(#loc132)
                    }, false {
                      %87 = cir.const #false loc(#loc132)
                      cir.yield %87 : !cir.bool loc(#loc132)
                    }) : (!cir.bool) -> !cir.bool loc(#loc132)
                    cir.yield %86 : !cir.bool loc(#loc132)
                  }) : (!cir.bool) -> !cir.bool loc(#loc132)
                  cir.if %82 {
                    cir.break loc(#loc136)
                  } loc(#loc359)
                } loc(#loc356)
                %61 = cir.const #cir.int<0> : !s8i loc(#loc137)
                %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                %63 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc139)
                %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc140)
                %66 = cir.const #cir.int<1> : !u64i loc(#loc360)
                %67 = cir.binop(div, %65, %66) : !u64i loc(#loc361)
                %68 = cir.binop(add, %63, %67) : !u64i loc(#loc362)
                %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc143)
                cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc363)
                %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
                %71 = cir.const #cir.int<13> : !s8i loc(#loc145)
                %72 = cir.cast(integral, %71 : !s8i), !s32i loc(#loc145)
                %73 = cir.call @strchr(%70, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc146)
                cir.store %73, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc364)
                cir.scope {
                  %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
                  %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc151)
                  cir.if %79 {
                    %80 = cir.const #cir.int<0> : !s8i loc(#loc153)
                    %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc367)
                  } loc(#loc366)
                } loc(#loc365)
                %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
                %75 = cir.const #cir.int<10> : !s8i loc(#loc157)
                %76 = cir.cast(integral, %75 : !s8i), !s32i loc(#loc157)
                %77 = cir.call @strchr(%74, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc158)
                cir.store %77, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc368)
                cir.scope {
                  %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                  %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc163)
                  cir.if %79 {
                    %80 = cir.const #cir.int<0> : !s8i loc(#loc165)
                    %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc371)
                  } loc(#loc370)
                } loc(#loc369)
              } loc(#loc327)
              cir.yield loc(#loc47)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc168)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc168)
              cir.condition(%21) loc(#loc168)
            } loc(#loc326)
          } loc(#loc326)
          cir.scope {
            %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc171)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc172)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc172)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc373)
            cir.if %23 {
              %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc174)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc175)
            } loc(#loc374)
          } loc(#loc372)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc178)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc179)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc179)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc376)
            cir.if %23 {
              %24 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc181)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc182)
            } loc(#loc377)
          } loc(#loc375)
        } loc(#loc319)
      } loc(#loc318)
    } loc(#loc317)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc378)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc378)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc378)
  } loc(#loc315)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc379)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc380)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc381)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc382)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_213badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc384)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc385)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc385)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc385)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc199)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc386)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %5 = cir.get_global @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L9badStaticE : !cir.ptr<!s32i> loc(#loc305)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
    %7 = cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L9badSourceEPc(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc204)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc388)
    cir.scope {
      %8 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc390)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc210)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
      %10 = cir.const #cir.int<8> : !s32i loc(#loc391)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%8, %9, %10) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc382)
          cir.yield loc(#loc215)
        } loc(#loc215)
        cir.yield loc(#loc214)
      } catch [#cir.unwind {
        cir.resume loc(#loc214)
      }] loc(#loc214)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc382)
          cir.yield loc(#loc216)
        } loc(#loc216)
        cir.yield loc(#loc214)
      } catch [#cir.unwind {
        cir.resume loc(#loc214)
      }] loc(#loc214)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc382)
    } loc(#loc389)
    cir.return loc(#loc194)
  } loc(#loc383)
  cir.global "private" internal dsolocal @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B1StaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc392)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc393)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc221)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc394)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc224)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B1SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc227, #loc228])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc396)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc226)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    cir.scope {
      %4 = cir.get_global @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B1StaticE : !cir.ptr<!s32i> loc(#loc392)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc232)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc232)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc221)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc221)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc236)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc237)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc224)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc224)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc237)
      } loc(#loc398)
    } loc(#loc397)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc399)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc399)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc399)
  } loc(#loc395)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc401)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc402)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc402)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc402)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc247)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc403)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc249)
    %5 = cir.get_global @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B1StaticE : !cir.ptr<!s32i> loc(#loc392)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc251)
    %7 = cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B1SourceEPc(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc252)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc405)
    cir.scope {
      %8 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc407)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc258)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc259)
      %10 = cir.const #cir.int<8> : !s32i loc(#loc391)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%8, %9, %10) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc382)
          cir.yield loc(#loc261)
        } loc(#loc261)
        cir.yield loc(#loc260)
      } catch [#cir.unwind {
        cir.resume loc(#loc260)
      }] loc(#loc260)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc382)
          cir.yield loc(#loc262)
        } loc(#loc262)
        cir.yield loc(#loc260)
      } catch [#cir.unwind {
        cir.resume loc(#loc260)
      }] loc(#loc260)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc382)
    } loc(#loc406)
    cir.return loc(#loc242)
  } loc(#loc400)
  cir.global "private" internal dsolocal @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B2StaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc408)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B2SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc267, #loc268])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc410)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc266)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    cir.scope {
      %4 = cir.get_global @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B2StaticE : !cir.ptr<!s32i> loc(#loc408)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc272)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc272)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc274)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc275)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc276)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc276)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc274)
      } loc(#loc412)
    } loc(#loc411)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc277)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc413)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc413)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc413)
  } loc(#loc409)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc415)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc416)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc416)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc416)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc285)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc417)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %5 = cir.get_global @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B2StaticE : !cir.ptr<!s32i> loc(#loc408)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc418)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc289)
    %7 = cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L14goodG2B2SourceEPc(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc290)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc419)
    cir.scope {
      %8 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc421)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc296)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc297)
      %10 = cir.const #cir.int<8> : !s32i loc(#loc391)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%8, %9, %10) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc382)
          cir.yield loc(#loc299)
        } loc(#loc299)
        cir.yield loc(#loc298)
      } catch [#cir.unwind {
        cir.resume loc(#loc298)
      }] loc(#loc298)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc382)
          cir.yield loc(#loc300)
        } loc(#loc300)
        cir.yield loc(#loc298)
      } catch [#cir.unwind {
        cir.resume loc(#loc298)
      }] loc(#loc298)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%8) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc382)
    } loc(#loc420)
    cir.return loc(#loc280)
  } loc(#loc414)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_214goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L8goodG2B1Ev() : () -> () loc(#loc303)
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21L8goodG2B2Ev() : () -> () loc(#loc304)
    cir.return loc(#loc302)
  } loc(#loc422)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":0:0)
#loc1 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":53:1)
#loc2 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":53:24)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc7 = loc("/usr/include/netinet/in.h":402:1)
#loc8 = loc("/usr/include/netinet/in.h":403:40)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":226:1)
#loc18 = loc("/usr/include/string.h":227:50)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":55:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":140:1)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":56:1)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":57:5)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":138:5)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":57:8)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":58:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":59:9)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":137:9)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":64:13)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":64:17)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":65:13)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":65:32)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":66:13)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":66:19)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":67:13)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":67:35)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":68:13)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":68:35)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":69:13)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":69:41)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":69:30)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":69:37)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":70:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":122:21)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":71:13)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":121:13)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":80:39)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":80:48)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":80:61)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":80:32)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":80:17)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":80:72)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":81:17)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":84:17)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":81:21)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":81:37)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":82:17)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":83:21)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":85:24)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":85:25)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":85:34)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":85:37)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":85:51)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":85:17)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":85:52)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":86:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":86:17)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":87:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":87:17)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":88:42)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":88:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":88:17)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":88:50)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":89:17)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":92:17)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":89:26)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":89:58)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":89:59)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":89:68)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":89:82)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":89:21)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":89:88)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":90:17)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":91:21)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":93:17)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":96:17)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":93:28)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":93:42)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":93:21)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":93:61)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":94:17)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":95:21)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":97:39)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":97:53)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":97:59)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":97:32)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":97:17)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":97:63)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":98:17)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":101:17)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":98:21)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":98:37)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":99:17)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":100:21)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:35)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:58)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:65)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:63)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:49)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:72)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:75)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:86)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:91)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:106)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:116)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:117)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:120)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:30)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:17)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":103:121)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":104:17)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":107:17)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":104:21)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":104:35)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":104:48)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":104:51)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":104:65)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":105:17)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":106:21)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":109:61)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":109:17)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":109:22)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":109:32)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":109:45)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":109:56)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":109:57)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":111:34)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":111:40)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":111:27)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":111:17)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":111:44)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":112:17)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":115:17)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":112:21)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":113:17)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":114:32)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":114:22)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":114:21)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":116:34)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":116:40)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":116:27)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":116:17)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":116:44)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":117:17)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":120:17)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":117:21)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":118:17)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":119:32)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":119:22)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":119:21)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":122:20)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":123:13)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":126:13)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":123:17)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":123:33)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":124:13)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":125:30)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":125:17)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":127:13)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":130:13)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":127:17)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":127:33)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":128:13)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":129:30)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":129:17)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":139:12)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":139:5)
#loc185 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":525:7)
#loc186 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":526:34)
#loc187 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":664:7)
#loc188 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":673:7)
#loc189 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":736:7)
#loc190 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":741:7)
#loc191 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":606:7)
#loc192 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":607:9)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":142:1)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":156:1)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":144:5)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":144:12)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":145:5)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":145:37)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":146:12)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":146:5)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":147:17)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":147:5)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":148:22)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":148:12)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":148:5)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":148:26)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":149:5)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":154:5)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":150:9)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":150:18)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":152:32)
#loc212 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:57)
#loc213 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:67)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":142:6)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":152:19)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":153:19)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":163:1)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":163:29)
#loc219 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc220 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":172:19)
#loc222 = loc("/usr/include/string.h":149:1)
#loc223 = loc("/usr/include/string.h":150:14)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":181:22)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":167:1)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":185:1)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":168:1)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":169:5)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":183:5)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":169:8)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":170:5)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":173:5)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":175:5)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":172:9)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":181:9)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":181:16)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":184:12)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":184:5)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":187:1)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":201:1)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":189:5)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":189:12)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":190:5)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":190:37)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":191:12)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":191:5)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":192:22)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":192:5)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":193:27)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":193:12)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":193:5)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":193:31)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":194:5)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":199:5)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":195:9)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":195:18)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":197:32)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":187:13)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":197:19)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":198:19)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":164:1)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":164:29)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":204:1)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":217:1)
#loc269 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":205:1)
#loc270 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":206:5)
#loc271 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":215:5)
#loc272 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":206:8)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":207:5)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":213:9)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":213:16)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":213:22)
#loc277 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":216:12)
#loc278 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":216:5)
#loc279 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":219:1)
#loc280 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":233:1)
#loc281 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":221:5)
#loc282 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":221:12)
#loc283 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":222:5)
#loc284 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":222:37)
#loc285 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":223:12)
#loc286 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":223:5)
#loc287 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":224:22)
#loc288 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":224:5)
#loc289 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":225:27)
#loc290 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":225:12)
#loc291 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":225:5)
#loc292 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":225:31)
#loc293 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":226:5)
#loc294 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":231:5)
#loc295 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":227:9)
#loc296 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":227:18)
#loc297 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":229:32)
#loc298 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":219:13)
#loc299 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":229:19)
#loc300 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":230:19)
#loc301 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":235:1)
#loc302 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":239:1)
#loc303 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":237:5)
#loc304 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_21.cpp":238:5)
#loc305 = loc(fused[#loc1, #loc2])
#loc306 = loc(fused[#loc3, #loc4])
#loc307 = loc(fused[#loc5, #loc6])
#loc308 = loc(fused[#loc7, #loc8])
#loc309 = loc(fused[#loc9, #loc10])
#loc310 = loc(fused[#loc11, #loc12])
#loc311 = loc(fused[#loc13, #loc14])
#loc312 = loc(fused[#loc15, #loc16])
#loc313 = loc(fused[#loc17, #loc18])
#loc314 = loc(fused[#loc19, #loc20])
#loc315 = loc(fused[#loc21, #loc22])
#loc317 = loc(fused[#loc26, #loc27])
#loc318 = loc(fused[#loc29, #loc27])
#loc319 = loc(fused[#loc30, #loc31])
#loc320 = loc(fused[#loc32, #loc33])
#loc321 = loc(fused[#loc34, #loc35])
#loc322 = loc(fused[#loc36, #loc37])
#loc323 = loc(fused[#loc38, #loc39])
#loc324 = loc(fused[#loc40, #loc41])
#loc325 = loc(fused[#loc42, #loc43])
#loc326 = loc(fused[#loc46, #loc47])
#loc327 = loc(fused[#loc48, #loc49])
#loc328 = loc(fused[#loc54, #loc55])
#loc329 = loc(fused[#loc56, #loc57])
#loc330 = loc(fused[#loc58, #loc59])
#loc331 = loc(fused[#loc60, #loc57])
#loc332 = loc(fused[#loc62, #loc63])
#loc333 = loc(fused[#loc65, #loc66])
#loc334 = loc(fused[#loc67, #loc68])
#loc335 = loc(fused[#loc71, #loc69])
#loc336 = loc(fused[#loc75, #loc72])
#loc337 = loc(fused[#loc79, #loc80])
#loc338 = loc(fused[#loc81, #loc82])
#loc339 = loc(fused[#loc84, #loc85])
#loc340 = loc(fused[#loc86, #loc87])
#loc341 = loc(fused[#loc88, #loc89])
#loc342 = loc(fused[#loc90, #loc82])
#loc343 = loc(fused[#loc92, #loc93])
#loc344 = loc(fused[#loc96, #loc97])
#loc345 = loc(fused[#loc98, #loc93])
#loc346 = loc(fused[#loc104, #loc105])
#loc347 = loc(fused[#loc106, #loc107])
#loc348 = loc(fused[#loc108, #loc109])
#loc349 = loc(fused[#loc110, #loc107])
#loc350 = loc(fused[#loc116, #loc117])
#loc351 = loc(fused[#loc118, #loc119])
#loc352 = loc(fused[#loc120, #loc121])
#loc353 = loc(fused[#loc120, #loc122])
#loc354 = loc(fused[#loc118, #loc123])
#loc355 = loc(fused[#loc126, #loc127])
#loc356 = loc(fused[#loc128, #loc129])
#loc357 = loc(fused[#loc130, #loc131])
#loc358 = loc(fused[#loc133, #loc134])
#loc359 = loc(fused[#loc135, #loc129])
#loc360 = loc(fused[#loc141, #loc142])
#loc361 = loc(fused[#loc140, #loc142])
#loc362 = loc(fused[#loc139, #loc142])
#loc363 = loc(fused[#loc138, #loc137])
#loc364 = loc(fused[#loc147, #loc148])
#loc365 = loc(fused[#loc149, #loc150])
#loc366 = loc(fused[#loc152, #loc150])
#loc367 = loc(fused[#loc155, #loc153])
#loc368 = loc(fused[#loc159, #loc160])
#loc369 = loc(fused[#loc161, #loc162])
#loc370 = loc(fused[#loc164, #loc162])
#loc371 = loc(fused[#loc167, #loc165])
#loc372 = loc(fused[#loc169, #loc170])
#loc373 = loc(fused[#loc171, #loc172])
#loc374 = loc(fused[#loc173, #loc170])
#loc375 = loc(fused[#loc176, #loc177])
#loc376 = loc(fused[#loc178, #loc179])
#loc377 = loc(fused[#loc180, #loc177])
#loc378 = loc(fused[#loc184, #loc183])
#loc379 = loc(fused[#loc185, #loc186])
#loc380 = loc(fused[#loc187, #loc188])
#loc381 = loc(fused[#loc189, #loc190])
#loc382 = loc(fused[#loc191, #loc192])
#loc383 = loc(fused[#loc193, #loc194])
#loc384 = loc(fused[#loc195, #loc196])
#loc385 = loc(fused[#loc197, #loc198])
#loc386 = loc(fused[#loc200, #loc199])
#loc387 = loc(fused[#loc202, #loc201])
#loc388 = loc(fused[#loc205, #loc206])
#loc389 = loc(fused[#loc207, #loc208])
#loc390 = loc(fused[#loc209, #loc210])
#loc391 = loc(fused[#loc212, #loc213])
#loc392 = loc(fused[#loc217, #loc218])
#loc393 = loc(fused[#loc219, #loc220])
#loc394 = loc(fused[#loc222, #loc223])
#loc395 = loc(fused[#loc225, #loc226])
#loc397 = loc(fused[#loc230, #loc231])
#loc398 = loc(fused[#loc233, #loc234, #loc235, #loc231])
#loc399 = loc(fused[#loc240, #loc239])
#loc400 = loc(fused[#loc241, #loc242])
#loc401 = loc(fused[#loc243, #loc244])
#loc402 = loc(fused[#loc245, #loc246])
#loc403 = loc(fused[#loc248, #loc247])
#loc404 = loc(fused[#loc250, #loc249])
#loc405 = loc(fused[#loc253, #loc254])
#loc406 = loc(fused[#loc255, #loc256])
#loc407 = loc(fused[#loc257, #loc258])
#loc408 = loc(fused[#loc263, #loc264])
#loc409 = loc(fused[#loc265, #loc266])
#loc411 = loc(fused[#loc270, #loc271])
#loc412 = loc(fused[#loc273, #loc271])
#loc413 = loc(fused[#loc278, #loc277])
#loc414 = loc(fused[#loc279, #loc280])
#loc415 = loc(fused[#loc281, #loc282])
#loc416 = loc(fused[#loc283, #loc284])
#loc417 = loc(fused[#loc286, #loc285])
#loc418 = loc(fused[#loc288, #loc287])
#loc419 = loc(fused[#loc291, #loc292])
#loc420 = loc(fused[#loc293, #loc294])
#loc421 = loc(fused[#loc295, #loc296])
#loc422 = loc(fused[#loc301, #loc302])
