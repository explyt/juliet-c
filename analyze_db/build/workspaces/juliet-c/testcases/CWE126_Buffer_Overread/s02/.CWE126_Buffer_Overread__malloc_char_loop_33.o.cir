!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc175)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc176)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc177)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc178)
  cir.func @_ZN43CWE126_Buffer_Overread__malloc_char_loop_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc181)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc16)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc19)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc20)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc20)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc183)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc184)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc185)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.scope {
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc28)
      %26 = cir.cmp(eq, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc32)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc189)
    } loc(#loc187)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc34)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc34)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc35)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc35)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc35)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc190)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc39)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc41)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc41)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc191)
    cir.scope {
      %24 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc193)
      %25 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
      %26 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.store %26, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
      cir.scope {
        %27 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
        %28 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc196)
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc197)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
        %32 = cir.const #cir.int<67> : !s8i loc(#loc56)
        %33 = cir.cast(integral, %32 : !s8i), !s32i loc(#loc56)
        %34 = cir.const #cir.int<100> : !s32i loc(#loc57)
        %35 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc57)
        %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc57)
        cir.libc.memset %37 bytes from %31 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc198)
        %38 = cir.const #cir.int<0> : !s8i loc(#loc61)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc62)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc63)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc62)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc64)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc199)
        %44 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc65)
        %45 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
        %46 = cir.call @strlen(%45) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc65)
        cir.store %46, %28 : !u64i, !cir.ptr<!u64i> loc(#loc200)
        cir.scope {
          %57 = cir.const #cir.int<0> : !s32i loc(#loc71)
          %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc71)
          cir.store %58, %27 : !u64i, !cir.ptr<!u64i> loc(#loc202)
          cir.for : cond {
            %59 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc73)
            %60 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %61 = cir.cmp(lt, %59, %60) : !u64i, !cir.bool loc(#loc203)
            cir.condition(%61) loc(#loc203)
          } body {
            cir.scope {
              %59 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
              %60 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc77)
              %61 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc78)
              %62 = cir.load %61 : !cir.ptr<!s8i>, !s8i loc(#loc76)
              %63 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc79)
              %64 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
              %65 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc80)
              cir.store %62, %65 : !s8i, !cir.ptr<!s8i> loc(#loc205)
            } loc(#loc204)
            cir.yield loc(#loc70)
          } step {
            %59 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc81)
            %60 = cir.unary(inc, %59) : !u64i, !u64i loc(#loc82)
            cir.store %60, %27 : !u64i, !cir.ptr<!u64i> loc(#loc206)
            cir.yield loc(#loc201)
          } loc(#loc201)
        } loc(#loc201)
        %47 = cir.const #cir.int<0> : !s8i loc(#loc83)
        %48 = cir.const #cir.int<100> : !s32i loc(#loc84)
        %49 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %50 = cir.binop(sub, %48, %49) nsw : !s32i loc(#loc84)
        %51 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
        %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc86)
        cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc207)
        %53 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc88)
        %54 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc89)
        %55 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
        %56 = cir.cast(bitcast, %55 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
        cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
      } loc(#loc194)
    } loc(#loc192)
    cir.return loc(#loc12)
  } loc(#loc179)
  cir.func internal private @_ZN43CWE126_Buffer_Overread__malloc_char_loop_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc210)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc96)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc97)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc99)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc100)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc212)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc213)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.scope {
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc108)
      %26 = cir.cmp(eq, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc217)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc112)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
      } loc(#loc218)
    } loc(#loc216)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc114)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc114)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc115)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc115)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc219)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc119)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc121)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc220)
    cir.scope {
      %24 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc222)
      %25 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
      %26 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
      cir.store %26, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
      cir.scope {
        %27 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc224)
        %28 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc225)
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc226)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
        %32 = cir.const #cir.int<67> : !s8i loc(#loc136)
        %33 = cir.cast(integral, %32 : !s8i), !s32i loc(#loc136)
        %34 = cir.const #cir.int<100> : !s32i loc(#loc137)
        %35 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc137)
        %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc137)
        cir.libc.memset %37 bytes from %31 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc227)
        %38 = cir.const #cir.int<0> : !s8i loc(#loc141)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc142)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc142)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc144)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc228)
        %44 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc145)
        %45 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
        %46 = cir.call @strlen(%45) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc145)
        cir.store %46, %28 : !u64i, !cir.ptr<!u64i> loc(#loc229)
        cir.scope {
          %57 = cir.const #cir.int<0> : !s32i loc(#loc151)
          %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc151)
          cir.store %58, %27 : !u64i, !cir.ptr<!u64i> loc(#loc231)
          cir.for : cond {
            %59 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc153)
            %60 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc154)
            %61 = cir.cmp(lt, %59, %60) : !u64i, !cir.bool loc(#loc232)
            cir.condition(%61) loc(#loc232)
          } body {
            cir.scope {
              %59 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
              %60 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc157)
              %61 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc158)
              %62 = cir.load %61 : !cir.ptr<!s8i>, !s8i loc(#loc156)
              %63 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc159)
              %64 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
              %65 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc160)
              cir.store %62, %65 : !s8i, !cir.ptr<!s8i> loc(#loc234)
            } loc(#loc233)
            cir.yield loc(#loc150)
          } step {
            %59 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc161)
            %60 = cir.unary(inc, %59) : !u64i, !u64i loc(#loc162)
            cir.store %60, %27 : !u64i, !cir.ptr<!u64i> loc(#loc235)
            cir.yield loc(#loc230)
          } loc(#loc230)
        } loc(#loc230)
        %47 = cir.const #cir.int<0> : !s8i loc(#loc163)
        %48 = cir.const #cir.int<100> : !s32i loc(#loc164)
        %49 = cir.const #cir.int<1> : !s32i loc(#loc165)
        %50 = cir.binop(sub, %48, %49) nsw : !s32i loc(#loc164)
        %51 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
        %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc166)
        cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc236)
        %53 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
        cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc168)
        %54 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc169)
        %55 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
        %56 = cir.cast(bitcast, %55 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
        cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc169)
      } loc(#loc223)
    } loc(#loc221)
    cir.return loc(#loc92)
  } loc(#loc208)
  cir.func @_ZN43CWE126_Buffer_Overread__malloc_char_loop_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN43CWE126_Buffer_Overread__malloc_char_loop_33L7goodG2BEv() : () -> () loc(#loc173)
    cir.return loc(#loc172)
  } loc(#loc237)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":26:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":55:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":28:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":28:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":29:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":29:23)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":30:12)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":30:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":32:20)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":32:27)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":32:30)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":32:41)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":32:42)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":32:5)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":33:5)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":33:33)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":33:9)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":33:17)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":33:23)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":33:24)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":33:30)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":33:29)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":34:12)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":34:18)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":34:23)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":34:26)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":34:5)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":34:27)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":35:18)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":35:5)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":35:10)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":35:13)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":35:14)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":36:5)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":54:5)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":37:9)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":37:23)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":38:9)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":53:9)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":39:13)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":39:20)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":39:23)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":40:13)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":40:26)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":41:20)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":41:26)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":41:31)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":41:35)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":41:13)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":41:36)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":42:27)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":42:18)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":42:22)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":42:13)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":43:23)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":43:30)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":43:13)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":43:34)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":46:13)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":49:13)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":46:22)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":46:18)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":46:25)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":46:29)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":47:13)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":48:27)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":48:32)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":48:33)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":48:22)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":48:17)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":46:39)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":46:38)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":50:27)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":50:18)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":50:22)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":50:13)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":51:23)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":51:13)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":52:13)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":52:18)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":62:1)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":91:1)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":64:5)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":64:12)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":65:5)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":65:23)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":66:12)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":66:5)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":68:20)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":68:27)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":68:31)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":68:42)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":68:43)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":68:5)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":69:5)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":69:33)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":69:9)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":69:17)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":69:23)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":69:24)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":69:30)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":69:29)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":70:12)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":70:18)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":70:23)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":70:27)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":70:5)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":70:28)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":71:19)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":71:5)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":71:10)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":71:14)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":71:15)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":72:5)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":90:5)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":73:9)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":73:23)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":74:9)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":89:9)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":75:13)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":75:20)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":75:23)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":76:13)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":76:26)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":77:20)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":77:26)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":77:31)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":77:35)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":77:13)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":77:36)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":78:27)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":78:18)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":78:22)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":78:13)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":79:23)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":79:30)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":79:13)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":79:34)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":82:13)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":85:13)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":82:22)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":82:18)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":82:25)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":82:29)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":83:13)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":84:27)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":84:32)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":84:33)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":84:22)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":84:17)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":82:39)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":82:38)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":86:27)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":86:18)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":86:22)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":86:13)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":87:23)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":87:13)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":88:13)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":88:18)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":93:1)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":96:1)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_33.cpp":95:5)
#loc174 = loc(fused[#loc1, #loc2])
#loc175 = loc(fused[#loc3, #loc4])
#loc176 = loc(fused[#loc5, #loc6])
#loc177 = loc(fused[#loc7, #loc8])
#loc178 = loc(fused[#loc9, #loc10])
#loc179 = loc(fused[#loc11, #loc12])
#loc180 = loc(fused[#loc13, #loc14])
#loc181 = loc(fused[#loc15, #loc16])
#loc182 = loc(fused[#loc18, #loc17])
#loc183 = loc(fused[#loc21, #loc22])
#loc184 = loc(fused[#loc20, #loc22])
#loc185 = loc(fused[#loc19, #loc23])
#loc186 = loc(fused[#loc24, #loc23])
#loc187 = loc(fused[#loc25, #loc26])
#loc188 = loc(fused[#loc27, #loc28])
#loc189 = loc(fused[#loc29, #loc26])
#loc190 = loc(fused[#loc37, #loc38])
#loc191 = loc(fused[#loc40, #loc39])
#loc192 = loc(fused[#loc44, #loc45])
#loc193 = loc(fused[#loc46, #loc47])
#loc194 = loc(fused[#loc48, #loc49])
#loc195 = loc(fused[#loc50, #loc51])
#loc196 = loc(fused[#loc50, #loc52])
#loc197 = loc(fused[#loc53, #loc54])
#loc198 = loc(fused[#loc59, #loc60])
#loc199 = loc(fused[#loc64, #loc61])
#loc200 = loc(fused[#loc67, #loc68])
#loc201 = loc(fused[#loc69, #loc70])
#loc202 = loc(fused[#loc72, #loc71])
#loc203 = loc(fused[#loc73, #loc74])
#loc204 = loc(fused[#loc75, #loc70])
#loc205 = loc(fused[#loc80, #loc78])
#loc206 = loc(fused[#loc82, #loc81])
#loc207 = loc(fused[#loc86, #loc83])
#loc208 = loc(fused[#loc91, #loc92])
#loc209 = loc(fused[#loc93, #loc94])
#loc210 = loc(fused[#loc95, #loc96])
#loc211 = loc(fused[#loc98, #loc97])
#loc212 = loc(fused[#loc101, #loc102])
#loc213 = loc(fused[#loc100, #loc102])
#loc214 = loc(fused[#loc99, #loc103])
#loc215 = loc(fused[#loc104, #loc103])
#loc216 = loc(fused[#loc105, #loc106])
#loc217 = loc(fused[#loc107, #loc108])
#loc218 = loc(fused[#loc109, #loc106])
#loc219 = loc(fused[#loc117, #loc118])
#loc220 = loc(fused[#loc120, #loc119])
#loc221 = loc(fused[#loc124, #loc125])
#loc222 = loc(fused[#loc126, #loc127])
#loc223 = loc(fused[#loc128, #loc129])
#loc224 = loc(fused[#loc130, #loc131])
#loc225 = loc(fused[#loc130, #loc132])
#loc226 = loc(fused[#loc133, #loc134])
#loc227 = loc(fused[#loc139, #loc140])
#loc228 = loc(fused[#loc144, #loc141])
#loc229 = loc(fused[#loc147, #loc148])
#loc230 = loc(fused[#loc149, #loc150])
#loc231 = loc(fused[#loc152, #loc151])
#loc232 = loc(fused[#loc153, #loc154])
#loc233 = loc(fused[#loc155, #loc150])
#loc234 = loc(fused[#loc160, #loc158])
#loc235 = loc(fused[#loc162, #loc161])
#loc236 = loc(fused[#loc166, #loc163])
#loc237 = loc(fused[#loc171, #loc172])
