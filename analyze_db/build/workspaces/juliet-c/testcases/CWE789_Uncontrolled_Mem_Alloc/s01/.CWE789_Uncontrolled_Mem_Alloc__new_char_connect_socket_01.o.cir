!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc303)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc304)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc305)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc306)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc307)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc308)
  cir.func private @close(!s32i) -> !s32i loc(#loc309)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc310)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc311)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc312)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc23)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_013badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc28)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc315)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc317)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc318)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc319)
      %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc320)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc37)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc319)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc44)
            %10 = cir.const #cir.int<1> : !u32i loc(#loc45)
            %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc45)
            %12 = cir.const #cir.int<6> : !u32i loc(#loc46)
            %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc46)
            %14 = cir.call @socket(%9, %11, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
            cir.store %14, %5 : !s32i, !cir.ptr<!s32i> loc(#loc323)
            cir.scope {
              %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc53)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc325)
              cir.if %58 {
                cir.break loc(#loc55)
              } loc(#loc326)
            } loc(#loc324)
            %15 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc327)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %17 = cir.const #cir.int<16> : !u64i loc(#loc328)
            cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc329)
            %18 = cir.const #cir.int<2> : !s32i loc(#loc63)
            %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc63)
            %20 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc330)
            %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc66)
            %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc331)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc71)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc71)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc72)
            %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc332)
            cir.scope {
              %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc78)
              %56 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc334)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc335)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc335)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc83)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc84)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc84)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc336)
              cir.if %62 {
                cir.break loc(#loc86)
              } loc(#loc337)
            } loc(#loc333)
            %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            %31 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc88)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
            %33 = cir.const #cir.int<3> : !s32i loc(#loc89)
            %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc89)
            %35 = cir.const #cir.int<8> : !u64i loc(#loc89)
            %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc89)
            %37 = cir.const #cir.int<2> : !s32i loc(#loc89)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc89)
            %39 = cir.binop(add, %36, %38) : !u64i loc(#loc89)
            %40 = cir.const #cir.int<1> : !s32i loc(#loc90)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc90)
            %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc338)
            %43 = cir.const #cir.int<0> : !s32i loc(#loc91)
            %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc92)
            %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc92)
            cir.store %45, %3 : !s32i, !cir.ptr<!s32i> loc(#loc339)
            cir.scope {
              %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc98)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc98)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc341)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc99)
                cir.yield %60 : !cir.bool loc(#loc99)
              }, false {
                %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc101)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc342)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc99)
                  cir.yield %64 : !cir.bool loc(#loc99)
                }, false {
                  %64 = cir.const #false loc(#loc99)
                  cir.yield %64 : !cir.bool loc(#loc99)
                }) : (!cir.bool) -> !cir.bool loc(#loc99)
                cir.yield %63 : !cir.bool loc(#loc99)
              }) : (!cir.bool) -> !cir.bool loc(#loc99)
              cir.if %59 {
                cir.break loc(#loc103)
              } loc(#loc343)
            } loc(#loc340)
            %46 = cir.const #cir.int<0> : !s8i loc(#loc104)
            %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
            %48 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc106)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc106)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc344)
            %50 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc107)
            %51 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc108)
            %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc110)
            %54 = cir.call @__isoc23_strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc107)
            cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc345)
          } loc(#loc322)
          cir.yield loc(#loc41)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc113)
          cir.condition(%10) loc(#loc113)
        } loc(#loc321)
      } loc(#loc321)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc117)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc117)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc347)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc120)
        } loc(#loc348)
      } loc(#loc346)
    } loc(#loc316)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc350)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc127)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc352)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc353)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc133)
          %8 = cir.call @_Znam(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc134)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc355)
          cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc138)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
          %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc20)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc20)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc141)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
          cir.delete.array %16 : <!s8i> loc(#loc142)
        } else {
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc23)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc23)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc143)
        } loc(#loc354)
      } loc(#loc351)
    } loc(#loc349)
    cir.return loc(#loc25)
  } loc(#loc313)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc358)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc148)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc359)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc150)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc150)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc360)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc362)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc158)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc364)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc365)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc164)
          %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc165)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc367)
          cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc368)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc169)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc171)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc171)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc173)
          %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
          cir.delete.array %18 : <!s8i> loc(#loc174)
        } else {
          %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc175)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc175)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc176)
        } loc(#loc366)
      } loc(#loc363)
    } loc(#loc361)
    cir.return loc(#loc145)
  } loc(#loc357)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc177)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc370)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc182)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc371)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc373)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc374)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc375)
      %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc376)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc191)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc191)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc375)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc198)
            %10 = cir.const #cir.int<1> : !u32i loc(#loc199)
            %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc199)
            %12 = cir.const #cir.int<6> : !u32i loc(#loc200)
            %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc200)
            %14 = cir.call @socket(%9, %11, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc201)
            cir.store %14, %5 : !s32i, !cir.ptr<!s32i> loc(#loc379)
            cir.scope {
              %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc206)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc207)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc207)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc381)
              cir.if %58 {
                cir.break loc(#loc209)
              } loc(#loc382)
            } loc(#loc380)
            %15 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc383)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc212)
            %17 = cir.const #cir.int<16> : !u64i loc(#loc384)
            cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc385)
            %18 = cir.const #cir.int<2> : !s32i loc(#loc217)
            %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc217)
            %20 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc386)
            %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc219)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc219)
            %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc220)
            %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc387)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc223)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc223)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc224)
            %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc388)
            cir.scope {
              %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc229)
              %56 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc390)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc391)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc391)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc234)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc235)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc235)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc392)
              cir.if %62 {
                cir.break loc(#loc237)
              } loc(#loc393)
            } loc(#loc389)
            %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc238)
            %31 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc239)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc239)
            %33 = cir.const #cir.int<3> : !s32i loc(#loc240)
            %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc240)
            %35 = cir.const #cir.int<8> : !u64i loc(#loc240)
            %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc240)
            %37 = cir.const #cir.int<2> : !s32i loc(#loc240)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc240)
            %39 = cir.binop(add, %36, %38) : !u64i loc(#loc240)
            %40 = cir.const #cir.int<1> : !s32i loc(#loc241)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc241)
            %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc394)
            %43 = cir.const #cir.int<0> : !s32i loc(#loc242)
            %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc243)
            %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc243)
            cir.store %45, %3 : !s32i, !cir.ptr<!s32i> loc(#loc395)
            cir.scope {
              %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc248)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc249)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc249)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc397)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc250)
                cir.yield %60 : !cir.bool loc(#loc250)
              }, false {
                %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc251)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc252)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc398)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc250)
                  cir.yield %64 : !cir.bool loc(#loc250)
                }, false {
                  %64 = cir.const #false loc(#loc250)
                  cir.yield %64 : !cir.bool loc(#loc250)
                }) : (!cir.bool) -> !cir.bool loc(#loc250)
                cir.yield %63 : !cir.bool loc(#loc250)
              }) : (!cir.bool) -> !cir.bool loc(#loc250)
              cir.if %59 {
                cir.break loc(#loc254)
              } loc(#loc399)
            } loc(#loc396)
            %46 = cir.const #cir.int<0> : !s8i loc(#loc255)
            %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc256)
            %48 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc257)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc257)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc400)
            %50 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc258)
            %51 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc259)
            %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc261)
            %54 = cir.call @__isoc23_strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc258)
            cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc401)
          } loc(#loc378)
          cir.yield loc(#loc195)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc264)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc264)
          cir.condition(%10) loc(#loc264)
        } loc(#loc377)
      } loc(#loc377)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc267)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc268)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc268)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc403)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc270)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc271)
        } loc(#loc404)
      } loc(#loc402)
    } loc(#loc372)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc406)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc278)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc408)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc409)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc282)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc283)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc283)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc410)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc281)
            cir.yield %13 : !cir.bool loc(#loc281)
          }, false {
            %13 = cir.const #false loc(#loc281)
            cir.yield %13 : !cir.bool loc(#loc281)
          }) : (!cir.bool) -> !cir.bool loc(#loc281)
          cir.yield %12 : !cir.bool loc(#loc281)
        }, false {
          %8 = cir.const #false loc(#loc281)
          cir.yield %8 : !cir.bool loc(#loc281)
        }) : (!cir.bool) -> !cir.bool loc(#loc281)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc287)
          %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc288)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc412)
          cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc413)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc292)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc293)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc294)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc294)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc292)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc295)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc296)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc297)
          cir.delete.array %17 : <!s8i> loc(#loc297)
        } else {
          %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc177)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc177)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc298)
        } loc(#loc411)
      } loc(#loc407)
    } loc(#loc405)
    cir.return loc(#loc179)
  } loc(#loc369)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_014goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01L7goodG2BEv() : () -> () loc(#loc301)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01L7goodB2GEv() : () -> () loc(#loc302)
    cir.return loc(#loc300)
  } loc(#loc414)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":84:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("/usr/include/string.h":141:1)
#loc19 = loc("/usr/include/string.h":142:14)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":123:30)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":129:23)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":53:1)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":132:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":55:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":55:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":57:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":57:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":58:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":113:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":63:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":63:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":64:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":64:28)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":65:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":65:32)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":66:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":66:41)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":67:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":102:17)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":68:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":101:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":77:36)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":77:45)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":77:58)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":77:29)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":77:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":77:69)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":78:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":81:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":78:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":78:34)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":79:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":80:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":82:20)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":82:21)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":82:30)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":82:33)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":82:47)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":82:13)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":82:48)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":83:34)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":83:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":84:39)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":84:13)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":84:59)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":85:38)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":85:32)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":85:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":85:46)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":86:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":89:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":86:25)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":86:58)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":86:59)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":86:68)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":86:82)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":86:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":86:88)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":87:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":88:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":92:31)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":92:46)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":92:59)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":92:77)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":92:80)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":92:26)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":92:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":92:81)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":93:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":96:13)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":93:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":93:31)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":93:44)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":93:47)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":93:61)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":94:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":95:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":98:39)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":98:25)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":98:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":100:20)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":100:28)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":100:41)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":100:47)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":100:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":100:48)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":102:16)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":103:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":106:9)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":103:13)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":103:30)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":104:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":105:26)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":105:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":114:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":131:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":115:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":115:16)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":119:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":130:9)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":119:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":119:20)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":119:39)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":120:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":126:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":128:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":121:33)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":53:6)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":121:24)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":121:37)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":121:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":123:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":123:20)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":124:23)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":124:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":125:23)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":129:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":139:1)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":164:1)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":141:5)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":141:12)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":143:12)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":143:5)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":145:12)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":145:5)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":146:5)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":163:5)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":147:9)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":147:16)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":151:9)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":162:9)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":151:13)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":151:20)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":151:39)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":152:9)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":158:9)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":160:9)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":153:33)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":139:13)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":153:24)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":153:37)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":153:13)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":155:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":155:20)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":155:30)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":156:23)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":156:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":157:23)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":161:23)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":161:13)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":243:23)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":167:1)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":246:1)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":169:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":169:12)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":171:12)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":171:5)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":172:5)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":227:5)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":177:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":177:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":178:9)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":178:28)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":179:9)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":179:32)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":180:9)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":180:41)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":181:9)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":216:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":182:9)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":215:9)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":191:36)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":191:45)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":191:58)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":191:29)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":191:13)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":191:69)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":192:13)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":195:13)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":192:17)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":192:34)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":193:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":194:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":196:20)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":196:21)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":196:30)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":196:33)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":196:47)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":196:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":196:48)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":197:34)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":197:13)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":198:49)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":198:39)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":198:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":198:59)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":199:38)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":199:32)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":199:13)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":199:46)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":200:13)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":203:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":200:25)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":200:58)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":200:59)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":200:68)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":200:82)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":200:17)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":200:88)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":201:13)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":202:17)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":206:31)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":206:46)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":206:59)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":206:77)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":206:80)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":206:26)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":206:13)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":206:81)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":207:13)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":210:13)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":207:17)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":207:31)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":207:44)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":207:47)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":207:61)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":208:13)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":209:17)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":212:39)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":212:25)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":212:13)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":214:20)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":214:28)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":214:41)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":214:47)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":214:13)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":214:48)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":216:16)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":217:9)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":220:9)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":217:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":217:30)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":218:9)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":219:26)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":219:13)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":228:5)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":245:5)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":229:9)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":229:16)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":233:9)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":244:9)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":233:13)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":233:20)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":233:39)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":233:41)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":233:44)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":233:51)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":234:9)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":240:9)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":242:9)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":235:33)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":167:13)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":235:24)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":235:37)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":235:13)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":237:13)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":237:20)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":237:30)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":238:23)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":238:13)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":239:23)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":243:13)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":248:1)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":252:1)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":250:5)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_01.cpp":251:5)
#loc303 = loc(fused[#loc1, #loc2])
#loc304 = loc(fused[#loc3, #loc4])
#loc305 = loc(fused[#loc6, #loc7])
#loc306 = loc(fused[#loc8, #loc9])
#loc307 = loc(fused[#loc10, #loc11])
#loc308 = loc(fused[#loc12, #loc13])
#loc309 = loc(fused[#loc14, #loc15])
#loc310 = loc(fused[#loc16, #loc17])
#loc311 = loc(fused[#loc18, #loc19])
#loc312 = loc(fused[#loc21, #loc22])
#loc313 = loc(fused[#loc24, #loc25])
#loc314 = loc(fused[#loc26, #loc27])
#loc315 = loc(fused[#loc29, #loc28])
#loc316 = loc(fused[#loc30, #loc31])
#loc317 = loc(fused[#loc32, #loc33])
#loc318 = loc(fused[#loc34, #loc35])
#loc319 = loc(fused[#loc36, #loc37])
#loc320 = loc(fused[#loc38, #loc39])
#loc321 = loc(fused[#loc40, #loc41])
#loc322 = loc(fused[#loc42, #loc43])
#loc323 = loc(fused[#loc48, #loc49])
#loc324 = loc(fused[#loc50, #loc51])
#loc325 = loc(fused[#loc52, #loc53])
#loc326 = loc(fused[#loc54, #loc51])
#loc327 = loc(fused[#loc56, #loc57])
#loc328 = loc(fused[#loc59, #loc60])
#loc329 = loc(fused[#loc61, #loc62])
#loc330 = loc(fused[#loc65, #loc63])
#loc331 = loc(fused[#loc69, #loc70])
#loc332 = loc(fused[#loc74, #loc75])
#loc333 = loc(fused[#loc76, #loc77])
#loc334 = loc(fused[#loc79, #loc80])
#loc335 = loc(fused[#loc81, #loc82])
#loc336 = loc(fused[#loc83, #loc84])
#loc337 = loc(fused[#loc85, #loc77])
#loc338 = loc(fused[#loc89, #loc90])
#loc339 = loc(fused[#loc93, #loc94])
#loc340 = loc(fused[#loc95, #loc96])
#loc341 = loc(fused[#loc97, #loc98])
#loc342 = loc(fused[#loc100, #loc101])
#loc343 = loc(fused[#loc102, #loc96])
#loc344 = loc(fused[#loc106, #loc104])
#loc345 = loc(fused[#loc111, #loc112])
#loc346 = loc(fused[#loc114, #loc115])
#loc347 = loc(fused[#loc116, #loc117])
#loc348 = loc(fused[#loc118, #loc115])
#loc349 = loc(fused[#loc121, #loc122])
#loc350 = loc(fused[#loc123, #loc124])
#loc351 = loc(fused[#loc125, #loc126])
#loc352 = loc(fused[#loc128, #loc129])
#loc353 = loc(fused[#loc127, #loc129])
#loc354 = loc(fused[#loc130, #loc131, #loc132, #loc126])
#loc355 = loc(fused[#loc135, #loc136])
#loc356 = loc(fused[#loc137, #loc136])
#loc357 = loc(fused[#loc144, #loc145])
#loc358 = loc(fused[#loc146, #loc147])
#loc359 = loc(fused[#loc149, #loc148])
#loc360 = loc(fused[#loc151, #loc150])
#loc361 = loc(fused[#loc152, #loc153])
#loc362 = loc(fused[#loc154, #loc155])
#loc363 = loc(fused[#loc156, #loc157])
#loc364 = loc(fused[#loc159, #loc160])
#loc365 = loc(fused[#loc158, #loc160])
#loc366 = loc(fused[#loc161, #loc162, #loc163, #loc157])
#loc367 = loc(fused[#loc166, #loc167])
#loc368 = loc(fused[#loc168, #loc167])
#loc369 = loc(fused[#loc178, #loc179])
#loc370 = loc(fused[#loc180, #loc181])
#loc371 = loc(fused[#loc183, #loc182])
#loc372 = loc(fused[#loc184, #loc185])
#loc373 = loc(fused[#loc186, #loc187])
#loc374 = loc(fused[#loc188, #loc189])
#loc375 = loc(fused[#loc190, #loc191])
#loc376 = loc(fused[#loc192, #loc193])
#loc377 = loc(fused[#loc194, #loc195])
#loc378 = loc(fused[#loc196, #loc197])
#loc379 = loc(fused[#loc202, #loc203])
#loc380 = loc(fused[#loc204, #loc205])
#loc381 = loc(fused[#loc206, #loc207])
#loc382 = loc(fused[#loc208, #loc205])
#loc383 = loc(fused[#loc210, #loc211])
#loc384 = loc(fused[#loc213, #loc214])
#loc385 = loc(fused[#loc215, #loc216])
#loc386 = loc(fused[#loc218, #loc217])
#loc387 = loc(fused[#loc221, #loc222])
#loc388 = loc(fused[#loc225, #loc226])
#loc389 = loc(fused[#loc227, #loc228])
#loc390 = loc(fused[#loc230, #loc231])
#loc391 = loc(fused[#loc232, #loc233])
#loc392 = loc(fused[#loc234, #loc235])
#loc393 = loc(fused[#loc236, #loc228])
#loc394 = loc(fused[#loc240, #loc241])
#loc395 = loc(fused[#loc244, #loc245])
#loc396 = loc(fused[#loc246, #loc247])
#loc397 = loc(fused[#loc248, #loc249])
#loc398 = loc(fused[#loc251, #loc252])
#loc399 = loc(fused[#loc253, #loc247])
#loc400 = loc(fused[#loc257, #loc255])
#loc401 = loc(fused[#loc262, #loc263])
#loc402 = loc(fused[#loc265, #loc266])
#loc403 = loc(fused[#loc267, #loc268])
#loc404 = loc(fused[#loc269, #loc266])
#loc405 = loc(fused[#loc272, #loc273])
#loc406 = loc(fused[#loc274, #loc275])
#loc407 = loc(fused[#loc276, #loc277])
#loc408 = loc(fused[#loc279, #loc280])
#loc409 = loc(fused[#loc278, #loc280])
#loc410 = loc(fused[#loc282, #loc283])
#loc411 = loc(fused[#loc284, #loc285, #loc286, #loc277])
#loc412 = loc(fused[#loc289, #loc290])
#loc413 = loc(fused[#loc291, #loc290])
#loc414 = loc(fused[#loc299, #loc300])
