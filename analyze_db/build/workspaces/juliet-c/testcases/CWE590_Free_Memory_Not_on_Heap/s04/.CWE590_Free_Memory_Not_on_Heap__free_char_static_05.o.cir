!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_05_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc140)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc142)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.scope {
      %6 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc140)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc16)
      cir.if %8 {
        cir.scope {
          %9 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_05_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc21)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc22)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc23)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc22)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc22)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc26)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc26)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc27)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc28)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc27)
          %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
          %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc29)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc150)
          %24 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
          cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
        } loc(#loc148)
      } loc(#loc147)
    } loc(#loc146)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc34)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
    cir.return loc(#loc9)
  } loc(#loc143)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc154)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc152)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc44)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc157)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.scope {
      %6 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc155)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc58)
      cir.if %8 {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc164)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc67)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc68)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc68)
          %13 = cir.const #cir.int<1> : !u64i loc(#loc165)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc166)
          %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc67)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
          cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
          cir.scope {
            %32 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc169)
            cir.if %35 {
              %36 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
              %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
              cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc76)
              %38 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc77)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc78)
              cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
            } loc(#loc170)
          } loc(#loc168)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
          %19 = cir.const #cir.int<65> : !s32i loc(#loc80)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc81)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc82)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc81)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc81)
          cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc85)
          %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc85)
          %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
          %27 = cir.const #cir.int<100> : !s32i loc(#loc87)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc88)
          %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc87)
          %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc89)
          cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc172)
          %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
          cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
        } loc(#loc163)
      } loc(#loc162)
    } loc(#loc161)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc94)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
    cir.return loc(#loc51)
  } loc(#loc158)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc100)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.scope {
      %6 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc140)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc104)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc180)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc110)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc111)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc111)
          %13 = cir.const #cir.int<1> : !u64i loc(#loc181)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc182)
          %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
          cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
          cir.scope {
            %32 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc185)
            cir.if %35 {
              %36 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
              %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
              cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc120)
              %38 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc121)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc122)
              cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
            } loc(#loc186)
          } loc(#loc184)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
          %19 = cir.const #cir.int<65> : !s32i loc(#loc124)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc125)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc126)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc125)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc125)
          cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc129)
          %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
          %27 = cir.const #cir.int<100> : !s32i loc(#loc131)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc132)
          %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc131)
          %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc133)
          cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc188)
          %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
          cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
        } loc(#loc179)
      } loc(#loc178)
    } loc(#loc177)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc138)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
    cir.return loc(#loc97)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":38:25)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":25:1)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":25:25)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("/usr/include/stdlib.h":687:1)
#loc7 = loc("/usr/include/stdlib.h":687:32)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":30:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":47:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":32:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":32:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":33:12)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":33:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":34:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":43:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":34:8)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":35:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":36:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":42:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":39:20)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":39:32)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":39:37)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":39:41)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":39:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":39:42)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":40:33)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":40:24)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":40:28)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":40:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":41:20)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":41:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":44:15)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":44:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":46:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":46:10)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":108:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":112:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":110:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":110:14)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":111:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":111:14)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":26:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":26:26)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":61:19)
#loc45 = loc("/usr/include/stdlib.h":672:1)
#loc46 = loc("/usr/include/stdlib.h":672:45)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":70:27)
#loc48 = loc("/usr/include/stdlib.h":756:1)
#loc49 = loc("/usr/include/stdlib.h":756:70)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":54:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":81:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":56:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":56:12)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":57:12)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":57:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":58:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":77:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":58:8)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":59:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":62:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":64:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":61:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":65:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":76:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":67:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":67:64)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":67:41)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":67:48)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":67:52)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":67:63)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":68:13)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":72:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":68:17)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":68:31)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":69:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":70:17)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":71:17)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":71:22)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":73:20)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":73:32)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":73:37)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":73:41)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":73:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":73:42)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":74:33)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":74:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":74:24)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":74:28)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":74:29)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":75:20)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":75:13)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":78:15)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":78:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":80:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":80:10)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":84:1)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":106:1)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":86:5)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":86:12)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":87:12)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":87:5)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":88:5)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":102:5)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":88:8)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":89:5)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":90:9)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":101:9)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":92:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":92:64)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":92:41)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":92:48)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":92:52)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":92:63)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":93:13)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":97:13)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":93:17)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":93:31)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":94:13)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":95:27)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":95:17)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":96:17)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":96:22)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":98:20)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":98:32)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":98:37)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":98:41)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":98:13)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":98:42)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":99:33)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":99:13)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":99:24)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":99:28)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":99:29)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":100:20)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":100:13)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":103:15)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":103:5)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":105:5)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_05.c":105:10)
#loc140 = loc(fused[#loc2, #loc3])
#loc141 = loc(fused[#loc4, #loc5])
#loc142 = loc(fused[#loc6, #loc7])
#loc143 = loc(fused[#loc8, #loc9])
#loc144 = loc(fused[#loc10, #loc11])
#loc145 = loc(fused[#loc13, #loc12])
#loc146 = loc(fused[#loc14, #loc15])
#loc147 = loc(fused[#loc17, #loc15])
#loc148 = loc(fused[#loc18, #loc19])
#loc149 = loc(fused[#loc24, #loc25])
#loc150 = loc(fused[#loc29, #loc26])
#loc151 = loc(fused[#loc31, #loc30])
#loc152 = loc(fused[#loc36, #loc37])
#loc153 = loc(fused[#loc38, #loc39])
#loc154 = loc(fused[#loc40, #loc41])
#loc155 = loc(fused[#loc42, #loc43])
#loc156 = loc(fused[#loc45, #loc46])
#loc157 = loc(fused[#loc48, #loc49])
#loc158 = loc(fused[#loc50, #loc51])
#loc159 = loc(fused[#loc52, #loc53])
#loc160 = loc(fused[#loc55, #loc54])
#loc161 = loc(fused[#loc56, #loc57])
#loc162 = loc(fused[#loc59, #loc60, #loc61, #loc57])
#loc163 = loc(fused[#loc63, #loc64])
#loc164 = loc(fused[#loc65, #loc66])
#loc165 = loc(fused[#loc69, #loc70])
#loc166 = loc(fused[#loc68, #loc70])
#loc167 = loc(fused[#loc67, #loc66])
#loc168 = loc(fused[#loc71, #loc72])
#loc169 = loc(fused[#loc73, #loc74])
#loc170 = loc(fused[#loc75, #loc72])
#loc171 = loc(fused[#loc83, #loc84])
#loc172 = loc(fused[#loc86, #loc85])
#loc173 = loc(fused[#loc91, #loc90])
#loc174 = loc(fused[#loc96, #loc97])
#loc175 = loc(fused[#loc98, #loc99])
#loc176 = loc(fused[#loc101, #loc100])
#loc177 = loc(fused[#loc102, #loc103])
#loc178 = loc(fused[#loc105, #loc103])
#loc179 = loc(fused[#loc106, #loc107])
#loc180 = loc(fused[#loc108, #loc109])
#loc181 = loc(fused[#loc112, #loc113])
#loc182 = loc(fused[#loc111, #loc113])
#loc183 = loc(fused[#loc110, #loc109])
#loc184 = loc(fused[#loc114, #loc115])
#loc185 = loc(fused[#loc116, #loc117])
#loc186 = loc(fused[#loc118, #loc115])
#loc187 = loc(fused[#loc127, #loc128])
#loc188 = loc(fused[#loc130, #loc129])
#loc189 = loc(fused[#loc135, #loc134])
