!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc56 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":173:10)
#loc57 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":173:14)
#loc58 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":173:20)
#loc59 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":173:32)
#loc219 = loc(fused[#loc56, #loc57])
#loc220 = loc(fused[#loc58, #loc59])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_fscanf_postinc_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc196)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc197)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc199)
  cir.func no_proto @CWE190_Integer_Overflow__short_fscanf_postinc_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc201)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc14)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc14)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc202)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc18)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc20)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc198)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc7)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc7)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc20)
      } loc(#loc204)
    } loc(#loc203)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc24)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc208)
          %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc30)
          %8 = cir.unary(inc, %7) : !s16i, !s16i loc(#loc31)
          cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc209)
          %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc29)
          cir.store %9, %6 : !s16i, !cir.ptr<!s16i> loc(#loc208)
          %10 = cir.load %6 : !cir.ptr<!s16i>, !s16i loc(#loc32)
          %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc32)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc33)
        } loc(#loc207)
      } loc(#loc206)
    } loc(#loc205)
    cir.return loc(#loc11)
  } loc(#loc200)
  cir.func no_proto @CWE190_Integer_Overflow__short_fscanf_postinc_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc210)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc215)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc216)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc220)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE190_Integer_Overflow__short_fscanf_postinc_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call @CWE190_Integer_Overflow__short_fscanf_postinc_05_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE190_Integer_Overflow__short_fscanf_postinc_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call @CWE190_Integer_Overflow__short_fscanf_postinc_05_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.return %17 : !s32i loc(#loc223)
  } loc(#loc218)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc77)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc226)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc82)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc227)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc86)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc88)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc198)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc90)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc90)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc88)
      } loc(#loc229)
    } loc(#loc228)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc93)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc97)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc100)
          %7 = cir.cast(integral, %6 : !s16i), !s32i loc(#loc100)
          %8 = cir.const #cir.int<32767> : !s32i loc(#loc101)
          %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc233)
          cir.if %9 {
            %10 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc235)
            %11 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc107)
            %12 = cir.unary(inc, %11) : !s16i, !s16i loc(#loc108)
            cir.store %12, %0 : !s16i, !cir.ptr<!s16i> loc(#loc236)
            %13 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc106)
            cir.store %13, %10 : !s16i, !cir.ptr<!s16i> loc(#loc235)
            %14 = cir.load %10 : !cir.ptr<!s16i>, !s16i loc(#loc109)
            %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc109)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc110)
          } else {
            %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc77)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc77)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc111)
          } loc(#loc234)
        } loc(#loc232)
      } loc(#loc231)
    } loc(#loc230)
    cir.return loc(#loc79)
  } loc(#loc225)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc238)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc116)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc239)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc120)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc122)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc198)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc123)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc124)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc124)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc122)
      } loc(#loc241)
    } loc(#loc240)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc127)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc127)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc131)
          %7 = cir.cast(integral, %6 : !s16i), !s32i loc(#loc131)
          %8 = cir.const #cir.int<32767> : !s32i loc(#loc132)
          %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc245)
          cir.if %9 {
            %10 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc247)
            %11 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc138)
            %12 = cir.unary(inc, %11) : !s16i, !s16i loc(#loc139)
            cir.store %12, %0 : !s16i, !cir.ptr<!s16i> loc(#loc248)
            %13 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc137)
            cir.store %13, %10 : !s16i, !cir.ptr<!s16i> loc(#loc247)
            %14 = cir.load %10 : !cir.ptr<!s16i>, !s16i loc(#loc140)
            %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc140)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc141)
          } else {
            %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc142)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc142)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc143)
          } loc(#loc246)
        } loc(#loc244)
      } loc(#loc243)
    } loc(#loc242)
    cir.return loc(#loc113)
  } loc(#loc237)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc250)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc148)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc251)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc152)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc156)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc156)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc157)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc158)
        %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc158)
        cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc254)
      } loc(#loc253)
    } loc(#loc252)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc162)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc258)
          %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc168)
          %8 = cir.unary(inc, %7) : !s16i, !s16i loc(#loc169)
          cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc259)
          %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc167)
          cir.store %9, %6 : !s16i, !cir.ptr<!s16i> loc(#loc258)
          %10 = cir.load %6 : !cir.ptr<!s16i>, !s16i loc(#loc170)
          %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc170)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc171)
        } loc(#loc257)
      } loc(#loc256)
    } loc(#loc255)
    cir.return loc(#loc145)
  } loc(#loc249)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc261)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc176)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc262)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc180)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc180)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc182)
        %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc182)
        cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc265)
      } loc(#loc264)
    } loc(#loc263)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc196)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc186)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc186)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc269)
          %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc192)
          %8 = cir.unary(inc, %7) : !s16i, !s16i loc(#loc193)
          cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc270)
          %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc191)
          cir.store %9, %6 : !s16i, !cir.ptr<!s16i> loc(#loc269)
          %10 = cir.load %6 : !cir.ptr<!s16i>, !s16i loc(#loc194)
          %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc194)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc195)
        } loc(#loc268)
      } loc(#loc267)
    } loc(#loc266)
    cir.return loc(#loc173)
  } loc(#loc260)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_fscanf_postinc_05.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":23:1)
#loc2 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":23:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":35:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":28:1)
#loc11 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":46:1)
#loc12 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":30:5)
#loc13 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":30:11)
#loc14 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":31:12)
#loc15 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":31:5)
#loc16 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":32:5)
#loc17 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":36:5)
#loc18 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":32:8)
#loc19 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":33:5)
#loc20 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":35:9)
#loc21 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":35:17)
#loc22 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":37:5)
#loc23 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":45:5)
#loc24 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":37:8)
#loc25 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":38:5)
#loc26 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":39:9)
#loc27 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":44:9)
#loc28 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":42:13)
#loc29 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":42:28)
#loc30 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":41:17)
#loc31 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":41:13)
#loc32 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":43:26)
#loc33 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":43:13)
#loc34 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":156:1)
#loc35 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":162:1)
#loc36 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":158:5)
#loc37 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":158:14)
#loc38 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":159:5)
#loc39 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":159:14)
#loc40 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":160:5)
#loc41 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":160:14)
#loc42 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":161:5)
#loc43 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":161:14)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":178:15)
#loc51 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":180:15)
#loc52 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":183:15)
#loc53 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":185:15)
#loc54 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":173:1)
#loc55 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":188:1)
#loc60 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":174:1)
#loc61 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":176:27)
#loc62 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":176:22)
#loc63 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":176:5)
#loc64 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":178:5)
#loc65 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":179:5)
#loc66 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":179:59)
#loc67 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":180:5)
#loc68 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":183:5)
#loc69 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":184:5)
#loc70 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":184:58)
#loc71 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":185:5)
#loc72 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":187:12)
#loc73 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":187:5)
#loc74 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":24:1)
#loc75 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":24:26)
#loc76 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":65:19)
#loc77 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":78:23)
#loc78 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":53:1)
#loc79 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":81:1)
#loc80 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":55:5)
#loc81 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":55:11)
#loc82 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":56:12)
#loc83 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":56:5)
#loc84 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":57:5)
#loc85 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":61:5)
#loc86 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":57:8)
#loc87 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":58:5)
#loc88 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":60:9)
#loc89 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":60:17)
#loc90 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":60:24)
#loc91 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":62:5)
#loc92 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":80:5)
#loc93 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":62:8)
#loc94 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":63:5)
#loc95 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":66:5)
#loc96 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":68:5)
#loc97 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":65:9)
#loc98 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":70:9)
#loc99 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":79:9)
#loc100 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":70:13)
#loc101 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":70:20)
#loc102 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":71:9)
#loc103 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":75:9)
#loc104 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":77:9)
#loc105 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":73:13)
#loc106 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":73:28)
#loc107 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":72:17)
#loc108 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":72:13)
#loc109 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":74:26)
#loc110 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":74:13)
#loc111 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":78:13)
#loc112 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":84:1)
#loc113 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":107:1)
#loc114 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":86:5)
#loc115 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":86:11)
#loc116 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":87:12)
#loc117 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":87:5)
#loc118 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":88:5)
#loc119 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":92:5)
#loc120 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":88:8)
#loc121 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":89:5)
#loc122 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":91:9)
#loc123 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":91:17)
#loc124 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":91:24)
#loc125 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":93:5)
#loc126 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":106:5)
#loc127 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":93:8)
#loc128 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":94:5)
#loc129 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":96:9)
#loc130 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":105:9)
#loc131 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":96:13)
#loc132 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":96:20)
#loc133 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":97:9)
#loc134 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":101:9)
#loc135 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":103:9)
#loc136 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":99:13)
#loc137 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":99:28)
#loc138 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":98:17)
#loc139 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":98:13)
#loc140 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":100:26)
#loc141 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":100:13)
#loc142 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":104:23)
#loc143 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":104:13)
#loc144 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":110:1)
#loc145 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":133:1)
#loc146 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":112:5)
#loc147 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":112:11)
#loc148 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":113:12)
#loc149 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":113:5)
#loc150 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":114:5)
#loc151 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":123:5)
#loc152 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":114:8)
#loc153 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":115:5)
#loc154 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":118:5)
#loc155 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":120:5)
#loc156 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":117:19)
#loc157 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":117:9)
#loc158 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":122:16)
#loc159 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":122:9)
#loc160 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":124:5)
#loc161 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":132:5)
#loc162 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":124:8)
#loc163 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":125:5)
#loc164 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":126:9)
#loc165 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":131:9)
#loc166 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":129:13)
#loc167 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":129:28)
#loc168 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":128:17)
#loc169 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":128:13)
#loc170 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":130:26)
#loc171 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":130:13)
#loc172 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":136:1)
#loc173 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":154:1)
#loc174 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":138:5)
#loc175 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":138:11)
#loc176 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":139:12)
#loc177 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":139:5)
#loc178 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":140:5)
#loc179 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":144:5)
#loc180 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":140:8)
#loc181 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":141:5)
#loc182 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":143:16)
#loc183 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":143:9)
#loc184 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":145:5)
#loc185 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":153:5)
#loc186 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":145:8)
#loc187 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":146:5)
#loc188 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":147:9)
#loc189 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":152:9)
#loc190 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":150:13)
#loc191 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":150:28)
#loc192 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":149:17)
#loc193 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":149:13)
#loc194 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":151:26)
#loc195 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_05.c":151:13)
#loc196 = loc(fused[#loc1, #loc2])
#loc197 = loc(fused[#loc3, #loc4])
#loc198 = loc(fused[#loc5, #loc6])
#loc199 = loc(fused[#loc8, #loc9])
#loc200 = loc(fused[#loc10, #loc11])
#loc201 = loc(fused[#loc12, #loc13])
#loc202 = loc(fused[#loc15, #loc14])
#loc203 = loc(fused[#loc16, #loc17])
#loc204 = loc(fused[#loc19, #loc17])
#loc205 = loc(fused[#loc22, #loc23])
#loc206 = loc(fused[#loc25, #loc23])
#loc207 = loc(fused[#loc26, #loc27])
#loc208 = loc(fused[#loc28, #loc29])
#loc209 = loc(fused[#loc31, #loc30])
#loc210 = loc(fused[#loc34, #loc35])
#loc211 = loc(fused[#loc36, #loc37])
#loc212 = loc(fused[#loc38, #loc39])
#loc213 = loc(fused[#loc40, #loc41])
#loc214 = loc(fused[#loc42, #loc43])
#loc215 = loc(fused[#loc44, #loc45])
#loc216 = loc(fused[#loc46, #loc47])
#loc217 = loc(fused[#loc48, #loc49])
#loc218 = loc(fused[#loc54, #loc55])
#loc221 = loc(fused[#loc65, #loc66])
#loc222 = loc(fused[#loc69, #loc70])
#loc223 = loc(fused[#loc73, #loc72])
#loc224 = loc(fused[#loc74, #loc75])
#loc225 = loc(fused[#loc78, #loc79])
#loc226 = loc(fused[#loc80, #loc81])
#loc227 = loc(fused[#loc83, #loc82])
#loc228 = loc(fused[#loc84, #loc85])
#loc229 = loc(fused[#loc87, #loc85])
#loc230 = loc(fused[#loc91, #loc92])
#loc231 = loc(fused[#loc94, #loc95, #loc96, #loc92])
#loc232 = loc(fused[#loc98, #loc99])
#loc233 = loc(fused[#loc100, #loc101])
#loc234 = loc(fused[#loc102, #loc103, #loc104, #loc99])
#loc235 = loc(fused[#loc105, #loc106])
#loc236 = loc(fused[#loc108, #loc107])
#loc237 = loc(fused[#loc112, #loc113])
#loc238 = loc(fused[#loc114, #loc115])
#loc239 = loc(fused[#loc117, #loc116])
#loc240 = loc(fused[#loc118, #loc119])
#loc241 = loc(fused[#loc121, #loc119])
#loc242 = loc(fused[#loc125, #loc126])
#loc243 = loc(fused[#loc128, #loc126])
#loc244 = loc(fused[#loc129, #loc130])
#loc245 = loc(fused[#loc131, #loc132])
#loc246 = loc(fused[#loc133, #loc134, #loc135, #loc130])
#loc247 = loc(fused[#loc136, #loc137])
#loc248 = loc(fused[#loc139, #loc138])
#loc249 = loc(fused[#loc144, #loc145])
#loc250 = loc(fused[#loc146, #loc147])
#loc251 = loc(fused[#loc149, #loc148])
#loc252 = loc(fused[#loc150, #loc151])
#loc253 = loc(fused[#loc153, #loc154, #loc155, #loc151])
#loc254 = loc(fused[#loc159, #loc158])
#loc255 = loc(fused[#loc160, #loc161])
#loc256 = loc(fused[#loc163, #loc161])
#loc257 = loc(fused[#loc164, #loc165])
#loc258 = loc(fused[#loc166, #loc167])
#loc259 = loc(fused[#loc169, #loc168])
#loc260 = loc(fused[#loc172, #loc173])
#loc261 = loc(fused[#loc174, #loc175])
#loc262 = loc(fused[#loc177, #loc176])
#loc263 = loc(fused[#loc178, #loc179])
#loc264 = loc(fused[#loc181, #loc179])
#loc265 = loc(fused[#loc183, #loc182])
#loc266 = loc(fused[#loc184, #loc185])
#loc267 = loc(fused[#loc187, #loc185])
#loc268 = loc(fused[#loc188, #loc189])
#loc269 = loc(fused[#loc190, #loc191])
#loc270 = loc(fused[#loc193, #loc192])
