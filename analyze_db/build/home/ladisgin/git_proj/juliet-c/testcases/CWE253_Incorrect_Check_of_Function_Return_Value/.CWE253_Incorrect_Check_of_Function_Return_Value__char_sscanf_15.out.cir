!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:10)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:14)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:20)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:32)
#loc133 = loc(fused[#loc47, #loc48])
#loc134 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc17)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc15)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc123)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc120)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc120)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.br ^bb6 loc(#loc124)
  ^bb6:  // pred: ^bb5
    %5 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %11 = cir.call @__isoc99_sscanf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc23)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc125)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc126)
  ^bb7:  // pred: ^bb6
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc28)
  ^bb11:  // pred: ^bb2
    %16 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb12 loc(#loc30)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc16)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc10)
  } loc(#loc119)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc127)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc130)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc54)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.return %17 : !s32i loc(#loc137)
  } loc(#loc132)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc73)
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc71)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc74)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb12 loc(#loc77)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc142)
  ^bb6:  // pred: ^bb5
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc139)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc139)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.br ^bb7 loc(#loc143)
  ^bb7:  // pred: ^bb6
    %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc82)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc83)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc83)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc84)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc84)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %13 = cir.call @__isoc99_sscanf(%9, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc82)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc86)
    %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc144)
    cir.brcond %16 ^bb8, ^bb9 loc(#loc145)
  ^bb8:  // pred: ^bb7
    %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc88)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb9 loc(#loc81)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc81)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc79)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc90)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc72)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc66)
  } loc(#loc138)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc99)
    cir.br ^bb2 loc(#loc97)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc97)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc150)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc147)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc147)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.br ^bb6 loc(#loc151)
  ^bb6:  // pred: ^bb5
    %5 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc105)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc106)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc106)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc107)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc107)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %11 = cir.call @__isoc99_sscanf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc105)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc109)
    %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc152)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc153)
  ^bb7:  // pred: ^bb6
    %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc111)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.br ^bb8 loc(#loc104)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc102)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc113)
  ^bb11:  // pred: ^bb2
    %17 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb12 loc(#loc116)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc98)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc92)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:20)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:32)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":40:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":46:19)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":26:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":49:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":34:9)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":34:32)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":35:9)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":35:23)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":28:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":48:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":28:12)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":30:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":31:5)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":42:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":41:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:42)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:51)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":39:9)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":40:13)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":43:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":46:9)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":47:9)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":105:1)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":109:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":107:5)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":107:11)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":108:5)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":108:11)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":125:15)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":127:15)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":130:15)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":132:15)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:1)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":135:1)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":121:1)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":123:27)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":123:22)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":123:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":125:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":126:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":126:74)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":127:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":130:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":131:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":131:73)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":132:5)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":134:12)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":134:5)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":56:1)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":78:1)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":68:9)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":68:32)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":69:9)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":69:23)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":58:5)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":77:5)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":58:12)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":60:5)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":62:19)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":62:9)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":63:9)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":65:5)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":75:5)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:9)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":74:9)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:13)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:20)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:32)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:42)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:51)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":72:9)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":73:23)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":73:13)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":76:5)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":81:1)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":103:1)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":89:9)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":89:32)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":90:9)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":90:23)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":83:5)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":102:5)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":83:12)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":85:5)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":86:5)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":96:5)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:9)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":95:9)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:13)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:20)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:32)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:42)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:51)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":93:9)
#loc111 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":94:23)
#loc112 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":94:13)
#loc113 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":97:5)
#loc114 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":100:19)
#loc115 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":100:9)
#loc116 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":101:9)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc11, #loc12])
#loc121 = loc(fused[#loc13, #loc14])
#loc122 = loc(fused[#loc15, #loc16])
#loc123 = loc(fused[#loc19, #loc20])
#loc124 = loc(fused[#loc21, #loc22])
#loc125 = loc(fused[#loc23, #loc25])
#loc126 = loc(fused[#loc26, #loc22])
#loc127 = loc(fused[#loc31, #loc32])
#loc128 = loc(fused[#loc33, #loc34])
#loc129 = loc(fused[#loc35, #loc36])
#loc130 = loc(fused[#loc37, #loc38])
#loc131 = loc(fused[#loc39, #loc40])
#loc132 = loc(fused[#loc45, #loc46])
#loc135 = loc(fused[#loc56, #loc57])
#loc136 = loc(fused[#loc60, #loc61])
#loc137 = loc(fused[#loc64, #loc63])
#loc138 = loc(fused[#loc65, #loc66])
#loc139 = loc(fused[#loc67, #loc68])
#loc140 = loc(fused[#loc69, #loc70])
#loc141 = loc(fused[#loc71, #loc72])
#loc142 = loc(fused[#loc78, #loc79])
#loc143 = loc(fused[#loc80, #loc81])
#loc144 = loc(fused[#loc82, #loc86])
#loc145 = loc(fused[#loc87, #loc81])
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc93, #loc94])
#loc148 = loc(fused[#loc95, #loc96])
#loc149 = loc(fused[#loc97, #loc98])
#loc150 = loc(fused[#loc101, #loc102])
#loc151 = loc(fused[#loc103, #loc104])
#loc152 = loc(fused[#loc105, #loc109])
#loc153 = loc(fused[#loc110, #loc104])
