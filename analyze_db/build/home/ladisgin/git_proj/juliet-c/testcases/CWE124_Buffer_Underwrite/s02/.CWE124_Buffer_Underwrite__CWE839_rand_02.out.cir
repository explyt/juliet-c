!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":30:16)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":227:10)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":227:14)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":227:20)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":227:32)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":69:16)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":82:27)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":108:16)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":116:27)
#true = #cir.bool<true> : !cir.bool
#loc332 = loc(fused[#loc75, #loc76])
#loc333 = loc(fused[#loc77, #loc78])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc301)
  cir.func private @printIntLine(!s32i) loc(#loc302)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc306)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc307)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc17)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.br ^bb1 loc(#loc309)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc310)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc23)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc23)
  ^bb3:  // pred: ^bb2
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc23)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc23)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc23)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc23)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc23)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc23)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc23)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc23)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc23)
    cir.br ^bb5(%22 : !u32i) loc(#loc23)
  ^bb4:  // pred: ^bb2
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc23)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc23)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc23)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc23)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc23)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc23)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc23)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc23)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc23)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc23)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc23)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc23)
    cir.br ^bb5(%38 : !u32i) loc(#loc23)
  ^bb5(%39: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":30:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc23)
    cir.store %40, %2 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.br ^bb7 loc(#loc20)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc312)
  ^bb9:  // pred: ^bb8
    %41 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc27)
    cir.brcond %42 ^bb10, ^bb26 loc(#loc313)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc314)
  ^bb11:  // pred: ^bb10
    %43 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc306)
    cir.store %43, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc306)
    cir.br ^bb12 loc(#loc315)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc34)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc316)
    cir.brcond %46 ^bb13, ^bb22 loc(#loc317)
  ^bb13:  // pred: ^bb12
    %47 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %49 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc40)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc40)
    cir.store %47, %50 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    cir.br ^bb14 loc(#loc319)
  ^bb14:  // pred: ^bb13
    %51 = cir.const #cir.int<0> : !s32i loc(#loc43)
    cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.br ^bb15 loc(#loc319)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %52 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %53 = cir.const #cir.int<10> : !s32i loc(#loc46)
    %54 = cir.cmp(lt, %52, %53) : !s32i, !cir.bool loc(#loc321)
    cir.brcond %54 ^bb16, ^bb20 loc(#loc47)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc322)
  ^bb17:  // pred: ^bb16
    %55 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %56 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc50)
    %57 = cir.ptr_stride(%56 : !cir.ptr<!s32i>, %55 : !s32i), !cir.ptr<!s32i> loc(#loc50)
    %58 = cir.load %57 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    cir.call @printIntLine(%58) : (!s32i) -> () loc(#loc51)
    cir.br ^bb18 loc(#loc42)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc42)
  ^bb19:  // pred: ^bb18
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %60 = cir.unary(inc, %59) : !s32i, !s32i loc(#loc53)
    cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb15 loc(#loc319)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc42)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23 loc(#loc36)
  ^bb22:  // pred: ^bb12
    %61 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc7)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb23 loc(#loc32)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc32)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc30)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc26)
  ^bb26:  // 2 preds: ^bb9, ^bb25
    cir.br ^bb27 loc(#loc26)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc9)
  } loc(#loc304)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc325)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc326)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc327)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc328)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc56)
  } loc(#loc324)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc329)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc72)
  cir.func @main(%arg0: !s32i loc(fused[#loc75, #loc76]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc332)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc333)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc80)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc81)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc81)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc82)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_rand_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc334)
    cir.call @CWE124_Buffer_Underwrite__CWE839_rand_02_good() : () -> () loc(#loc84)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc71)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_rand_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc335)
    cir.call @CWE124_Buffer_Underwrite__CWE839_rand_02_bad() : () -> () loc(#loc88)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    cir.return %17 : !s32i loc(#loc336)
  } loc(#loc331)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc94)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc338)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc339)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc340)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc104)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.br ^bb1 loc(#loc342)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc108)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc343)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc110)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc110)
  ^bb3:  // pred: ^bb2
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc110)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc110)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc110)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc110)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc110)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc110)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc110)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc110)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc110)
    cir.br ^bb5(%22 : !u32i) loc(#loc110)
  ^bb4:  // pred: ^bb2
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc110)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc110)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc110)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc110)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc110)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc110)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc110)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc110)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc110)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc110)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc110)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc110)
    cir.br ^bb5(%38 : !u32i) loc(#loc110)
  ^bb5(%39: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":69:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc110)
  ^bb6:  // pred: ^bb5
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc110)
    cir.store %40, %2 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.br ^bb7 loc(#loc107)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc107)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc345)
  ^bb9:  // pred: ^bb8
    %41 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %42 ^bb10, ^bb11 loc(#loc346)
  ^bb10:  // pred: ^bb9
    %43 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc93)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb35 loc(#loc116)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc347)
  ^bb12:  // pred: ^bb11
    %45 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc339)
    cir.store %45, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc339)
    cir.br ^bb13 loc(#loc348)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %48 = cir.cmp(ge, %46, %47) : !s32i, !cir.bool loc(#loc349)
    cir.brcond %48 ^bb14, ^bb19 loc(#loc125)
  ^bb14:  // pred: ^bb13
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %50 = cir.const #cir.int<10> : !s32i loc(#loc127)
    %51 = cir.cmp(lt, %49, %50) : !s32i, !cir.bool loc(#loc350)
    cir.brcond %51 ^bb15, ^bb16 loc(#loc125)
  ^bb15:  // pred: ^bb14
    %52 = cir.const #true loc(#loc125)
    cir.br ^bb17(%52 : !cir.bool) loc(#loc125)
  ^bb16:  // pred: ^bb14
    %53 = cir.const #false loc(#loc125)
    cir.br ^bb17(%53 : !cir.bool) loc(#loc125)
  ^bb17(%54: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":82:27)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc125)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20(%54 : !cir.bool) loc(#loc125)
  ^bb19:  // pred: ^bb13
    %55 = cir.const #false loc(#loc125)
    cir.br ^bb20(%55 : !cir.bool) loc(#loc125)
  ^bb20(%56: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":82:27)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc125)
  ^bb21:  // pred: ^bb20
    cir.brcond %56 ^bb22, ^bb31 loc(#loc351)
  ^bb22:  // pred: ^bb21
    %57 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %59 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc134)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s32i>, %58 : !s32i), !cir.ptr<!s32i> loc(#loc134)
    cir.store %57, %60 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    cir.br ^bb23 loc(#loc353)
  ^bb23:  // pred: ^bb22
    %61 = cir.const #cir.int<0> : !s32i loc(#loc137)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb24 loc(#loc353)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %63 = cir.const #cir.int<10> : !s32i loc(#loc140)
    %64 = cir.cmp(lt, %62, %63) : !s32i, !cir.bool loc(#loc355)
    cir.brcond %64 ^bb25, ^bb29 loc(#loc141)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc356)
  ^bb26:  // pred: ^bb25
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %66 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc144)
    %67 = cir.ptr_stride(%66 : !cir.ptr<!s32i>, %65 : !s32i), !cir.ptr<!s32i> loc(#loc144)
    %68 = cir.load %67 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.call @printIntLine(%68) : (!s32i) -> () loc(#loc145)
    cir.br ^bb27 loc(#loc136)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc136)
  ^bb28:  // pred: ^bb27
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %70 = cir.unary(inc, %69) : !s32i, !s32i loc(#loc147)
    cir.store %70, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.br ^bb24 loc(#loc353)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc136)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc130)
  ^bb31:  // pred: ^bb21
    %71 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc94)
    %72 = cir.cast(array_to_ptrdecay, %71 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb32 loc(#loc122)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc122)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc120)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc113)
  ^bb35:  // 2 preds: ^bb10, ^bb34
    cir.br ^bb36 loc(#loc113)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc96)
  } loc(#loc337)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc360)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc361)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc158)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb1 loc(#loc363)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc364)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc164)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc164)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc164)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc164)
  ^bb3:  // pred: ^bb2
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc164)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc164)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc164)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc164)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc164)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc164)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc164)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc164)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc164)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc164)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc164)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc164)
    cir.br ^bb5(%22 : !u32i) loc(#loc164)
  ^bb4:  // pred: ^bb2
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc164)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc164)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc164)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc164)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc164)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc164)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc164)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc164)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc164)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc164)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc164)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc164)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc164)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc164)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc164)
    cir.br ^bb5(%38 : !u32i) loc(#loc164)
  ^bb5(%39: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":108:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc164)
  ^bb6:  // pred: ^bb5
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc164)
    cir.store %40, %2 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb7 loc(#loc161)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc161)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc366)
  ^bb9:  // pred: ^bb8
    %41 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc168)
    cir.brcond %42 ^bb10, ^bb34 loc(#loc367)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc368)
  ^bb11:  // pred: ^bb10
    %43 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc360)
    cir.store %43, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc360)
    cir.br ^bb12 loc(#loc369)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %46 = cir.cmp(ge, %44, %45) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %46 ^bb13, ^bb18 loc(#loc176)
  ^bb13:  // pred: ^bb12
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %48 = cir.const #cir.int<10> : !s32i loc(#loc178)
    %49 = cir.cmp(lt, %47, %48) : !s32i, !cir.bool loc(#loc371)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc176)
  ^bb14:  // pred: ^bb13
    %50 = cir.const #true loc(#loc176)
    cir.br ^bb16(%50 : !cir.bool) loc(#loc176)
  ^bb15:  // pred: ^bb13
    %51 = cir.const #false loc(#loc176)
    cir.br ^bb16(%51 : !cir.bool) loc(#loc176)
  ^bb16(%52: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":116:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc176)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%52 : !cir.bool) loc(#loc176)
  ^bb18:  // pred: ^bb12
    %53 = cir.const #false loc(#loc176)
    cir.br ^bb19(%53 : !cir.bool) loc(#loc176)
  ^bb19(%54: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":116:27)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc176)
  ^bb20:  // pred: ^bb19
    cir.brcond %54 ^bb21, ^bb30 loc(#loc372)
  ^bb21:  // pred: ^bb20
    %55 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %57 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc185)
    %58 = cir.ptr_stride(%57 : !cir.ptr<!s32i>, %56 : !s32i), !cir.ptr<!s32i> loc(#loc185)
    cir.store %55, %58 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb22 loc(#loc374)
  ^bb22:  // pred: ^bb21
    %59 = cir.const #cir.int<0> : !s32i loc(#loc188)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.br ^bb23 loc(#loc374)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %61 = cir.const #cir.int<10> : !s32i loc(#loc191)
    %62 = cir.cmp(lt, %60, %61) : !s32i, !cir.bool loc(#loc376)
    cir.brcond %62 ^bb24, ^bb28 loc(#loc192)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc377)
  ^bb25:  // pred: ^bb24
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %64 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc195)
    %65 = cir.ptr_stride(%64 : !cir.ptr<!s32i>, %63 : !s32i), !cir.ptr<!s32i> loc(#loc195)
    %66 = cir.load %65 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    cir.call @printIntLine(%66) : (!s32i) -> () loc(#loc196)
    cir.br ^bb26 loc(#loc187)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc187)
  ^bb27:  // pred: ^bb26
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %68 = cir.unary(inc, %67) : !s32i, !s32i loc(#loc198)
    cir.store %68, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb23 loc(#loc374)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc187)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc181)
  ^bb30:  // pred: ^bb20
    %69 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc199)
    %70 = cir.cast(array_to_ptrdecay, %69 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc199)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    cir.br ^bb31 loc(#loc173)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc173)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc171)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc167)
  ^bb34:  // 2 preds: ^bb9, ^bb33
    cir.br ^bb35 loc(#loc167)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc150)
  } loc(#loc358)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc381)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc382)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc210)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb1 loc(#loc384)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc214)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc385)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc218)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc218)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    cir.br ^bb4 loc(#loc216)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc220)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb4 loc(#loc213)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc213)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc387)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<1> : !s32i loc(#loc224)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc224)
    cir.brcond %11 ^bb7, ^bb23 loc(#loc388)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc389)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc381)
    cir.store %12, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc381)
    cir.br ^bb9 loc(#loc390)
  ^bb9:  // pred: ^bb8
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    %14 = cir.const #cir.int<10> : !s32i loc(#loc231)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc391)
    cir.brcond %15 ^bb10, ^bb19 loc(#loc392)
  ^bb10:  // pred: ^bb9
    %16 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc237)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc237)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb11 loc(#loc394)
  ^bb11:  // pred: ^bb10
    %20 = cir.const #cir.int<0> : !s32i loc(#loc240)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc395)
    cir.br ^bb12 loc(#loc394)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc243)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc396)
    cir.brcond %23 ^bb13, ^bb17 loc(#loc244)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc397)
  ^bb14:  // pred: ^bb13
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc247)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc247)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc248)
    cir.br ^bb15 loc(#loc239)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc239)
  ^bb16:  // pred: ^bb15
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc250)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.br ^bb12 loc(#loc394)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc239)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc233)
  ^bb19:  // pred: ^bb9
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc251)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc251)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc252)
    cir.br ^bb20 loc(#loc229)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc229)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc227)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc223)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc223)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc202)
  } loc(#loc379)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc400)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc401)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc402)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc262)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.br ^bb1 loc(#loc404)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc266)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc405)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc268)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    cir.br ^bb3 loc(#loc265)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc265)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc407)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc272)
    cir.brcond %9 ^bb6, ^bb22 loc(#loc408)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc409)
  ^bb7:  // pred: ^bb6
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc401)
    cir.store %10, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc401)
    cir.br ^bb8 loc(#loc410)
  ^bb8:  // pred: ^bb7
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc279)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc411)
    cir.brcond %13 ^bb9, ^bb18 loc(#loc412)
  ^bb9:  // pred: ^bb8
    %14 = cir.const #cir.int<1> : !s32i loc(#loc283)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc285)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc285)
    cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    cir.br ^bb10 loc(#loc414)
  ^bb10:  // pred: ^bb9
    %18 = cir.const #cir.int<0> : !s32i loc(#loc288)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    cir.br ^bb11 loc(#loc414)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc291)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc416)
    cir.brcond %21 ^bb12, ^bb16 loc(#loc292)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc417)
  ^bb13:  // pred: ^bb12
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc295)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc295)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc296)
    cir.br ^bb14 loc(#loc287)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc287)
  ^bb15:  // pred: ^bb14
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc298)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc418)
    cir.br ^bb11 loc(#loc414)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc287)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc281)
  ^bb18:  // pred: ^bb8
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc299)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc299)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc300)
    cir.br ^bb19 loc(#loc277)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc277)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc275)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc271)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc271)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc254)
  } loc(#loc399)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":50:27)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":22:1)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":54:1)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":35:13)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":35:17)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":36:13)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":36:34)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":24:5)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":24:9)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":26:13)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":26:12)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":26:5)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":27:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":31:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":27:8)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":28:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":30:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":32:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":53:5)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":32:8)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":33:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":34:9)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":52:9)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":39:13)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":51:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":39:17)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":39:24)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":40:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":47:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":49:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":41:32)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":41:24)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":41:17)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":43:17)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":46:17)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":43:25)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":43:21)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":43:28)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":43:32)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":43:30)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":44:17)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":45:41)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":45:34)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":45:21)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":43:37)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":43:36)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":50:17)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":210:1)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":216:1)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":212:5)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":212:14)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":213:5)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":213:14)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":214:5)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":214:14)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":215:5)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":215:14)
#loc65 = loc("/usr/include/stdlib.h":575:1)
#loc66 = loc("/usr/include/stdlib.h":575:41)
#loc67 = loc("/usr/include/time.h":76:1)
#loc68 = loc("/usr/include/time.h":76:38)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":232:15)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":234:15)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":237:15)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":239:15)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":227:1)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":242:1)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":228:1)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":230:27)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":230:22)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":230:5)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":232:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":233:5)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":233:51)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":234:5)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":237:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":238:5)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":238:50)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":239:5)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":241:12)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":241:5)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":74:19)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":93:27)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":61:1)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":97:1)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":79:13)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":79:17)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":80:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":80:34)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":63:5)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":63:9)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":65:13)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":65:12)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":65:5)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":66:5)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":70:5)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":66:8)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":67:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":69:9)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":71:5)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":96:5)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":71:8)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":72:5)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":75:5)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":77:5)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":74:9)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":78:9)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":95:9)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":82:13)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":94:13)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":82:17)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":82:25)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":82:30)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":82:38)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":82:40)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":83:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":90:13)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":92:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":84:32)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":84:24)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":84:17)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":86:17)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":89:17)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":86:25)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":86:21)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":86:28)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":86:32)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":86:30)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":87:17)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":88:41)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":88:34)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":88:21)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":86:37)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":86:36)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":93:17)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":100:1)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":131:1)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":113:13)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":113:17)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":114:13)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":114:34)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":102:5)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":102:9)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":104:13)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":104:12)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":104:5)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":105:5)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":109:5)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":105:8)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":106:5)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":108:9)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":110:5)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":130:5)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":110:8)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":111:5)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":112:9)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":129:9)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":116:13)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":128:13)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":116:17)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":116:25)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":116:30)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":116:38)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":116:40)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":117:13)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":124:13)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":126:13)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":118:32)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":118:24)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":118:17)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":120:17)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":123:17)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":120:25)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":120:21)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":120:28)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":120:32)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":120:30)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":121:17)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":122:41)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":122:34)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":122:21)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":120:37)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":120:36)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":127:27)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":127:17)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":134:1)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":172:1)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":153:13)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":153:17)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":154:13)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":154:34)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":136:5)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":136:9)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":138:13)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":138:12)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":138:5)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":139:5)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":149:5)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":139:8)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":140:5)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":143:5)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":145:5)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":142:19)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":142:9)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":148:16)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":148:9)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":150:5)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":171:5)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":150:8)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":151:5)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":152:9)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":170:9)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":157:13)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":169:13)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":157:17)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":157:24)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":158:13)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":165:13)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":167:13)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":159:32)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":159:24)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":159:17)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":161:17)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":164:17)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":161:25)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":161:21)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":161:28)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":161:32)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":161:30)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":162:17)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":163:41)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":163:34)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":163:21)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":161:37)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":161:36)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":168:27)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":168:17)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":175:1)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":208:1)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":189:13)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":189:17)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":190:13)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":190:34)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":177:5)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":177:9)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":179:13)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":179:12)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":179:5)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":180:5)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":185:5)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":180:8)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":181:5)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":184:16)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":184:9)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":186:5)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":207:5)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":186:8)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":187:5)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":188:9)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":206:9)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":193:13)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":205:13)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":193:17)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":193:24)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":194:13)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":201:13)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":203:13)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":195:32)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":195:24)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":195:17)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":197:17)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":200:17)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":197:25)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":197:21)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":197:28)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":197:32)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":197:30)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":198:17)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":199:41)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":199:34)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":199:21)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":197:37)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":197:36)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":204:27)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_rand_02.c":204:17)
#loc301 = loc(fused[#loc1, #loc2])
#loc302 = loc(fused[#loc3, #loc4])
#loc303 = loc(fused[#loc5, #loc6])
#loc304 = loc(fused[#loc8, #loc9])
#loc305 = loc(fused[#loc10, #loc11])
#loc306 = loc(fused[#loc12, #loc13])
#loc307 = loc(fused[#loc14, #loc15])
#loc308 = loc(fused[#loc18, #loc16])
#loc309 = loc(fused[#loc19, #loc20])
#loc310 = loc(fused[#loc22, #loc20])
#loc311 = loc(fused[#loc24, #loc23])
#loc312 = loc(fused[#loc25, #loc26])
#loc313 = loc(fused[#loc28, #loc26])
#loc314 = loc(fused[#loc29, #loc30])
#loc315 = loc(fused[#loc31, #loc32])
#loc316 = loc(fused[#loc33, #loc34])
#loc317 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc318 = loc(fused[#loc40, #loc38])
#loc319 = loc(fused[#loc41, #loc42])
#loc320 = loc(fused[#loc44, #loc43])
#loc321 = loc(fused[#loc45, #loc46])
#loc322 = loc(fused[#loc48, #loc42])
#loc323 = loc(fused[#loc53, #loc52])
#loc324 = loc(fused[#loc55, #loc56])
#loc325 = loc(fused[#loc57, #loc58])
#loc326 = loc(fused[#loc59, #loc60])
#loc327 = loc(fused[#loc61, #loc62])
#loc328 = loc(fused[#loc63, #loc64])
#loc329 = loc(fused[#loc65, #loc66])
#loc330 = loc(fused[#loc67, #loc68])
#loc331 = loc(fused[#loc73, #loc74])
#loc334 = loc(fused[#loc84, #loc85])
#loc335 = loc(fused[#loc88, #loc89])
#loc336 = loc(fused[#loc92, #loc91])
#loc337 = loc(fused[#loc95, #loc96])
#loc338 = loc(fused[#loc97, #loc98])
#loc339 = loc(fused[#loc99, #loc100])
#loc340 = loc(fused[#loc101, #loc102])
#loc341 = loc(fused[#loc105, #loc103])
#loc342 = loc(fused[#loc106, #loc107])
#loc343 = loc(fused[#loc109, #loc107])
#loc344 = loc(fused[#loc111, #loc110])
#loc345 = loc(fused[#loc112, #loc113])
#loc346 = loc(fused[#loc115, #loc116, #loc117, #loc113])
#loc347 = loc(fused[#loc119, #loc120])
#loc348 = loc(fused[#loc121, #loc122])
#loc349 = loc(fused[#loc123, #loc124])
#loc350 = loc(fused[#loc126, #loc128])
#loc351 = loc(fused[#loc129, #loc130, #loc131, #loc122])
#loc352 = loc(fused[#loc134, #loc132])
#loc353 = loc(fused[#loc135, #loc136])
#loc354 = loc(fused[#loc138, #loc137])
#loc355 = loc(fused[#loc139, #loc140])
#loc356 = loc(fused[#loc142, #loc136])
#loc357 = loc(fused[#loc147, #loc146])
#loc358 = loc(fused[#loc149, #loc150])
#loc359 = loc(fused[#loc151, #loc152])
#loc360 = loc(fused[#loc153, #loc154])
#loc361 = loc(fused[#loc155, #loc156])
#loc362 = loc(fused[#loc159, #loc157])
#loc363 = loc(fused[#loc160, #loc161])
#loc364 = loc(fused[#loc163, #loc161])
#loc365 = loc(fused[#loc165, #loc164])
#loc366 = loc(fused[#loc166, #loc167])
#loc367 = loc(fused[#loc169, #loc167])
#loc368 = loc(fused[#loc170, #loc171])
#loc369 = loc(fused[#loc172, #loc173])
#loc370 = loc(fused[#loc174, #loc175])
#loc371 = loc(fused[#loc177, #loc179])
#loc372 = loc(fused[#loc180, #loc181, #loc182, #loc173])
#loc373 = loc(fused[#loc185, #loc183])
#loc374 = loc(fused[#loc186, #loc187])
#loc375 = loc(fused[#loc189, #loc188])
#loc376 = loc(fused[#loc190, #loc191])
#loc377 = loc(fused[#loc193, #loc187])
#loc378 = loc(fused[#loc198, #loc197])
#loc379 = loc(fused[#loc201, #loc202])
#loc380 = loc(fused[#loc203, #loc204])
#loc381 = loc(fused[#loc205, #loc206])
#loc382 = loc(fused[#loc207, #loc208])
#loc383 = loc(fused[#loc211, #loc209])
#loc384 = loc(fused[#loc212, #loc213])
#loc385 = loc(fused[#loc215, #loc216, #loc217, #loc213])
#loc386 = loc(fused[#loc221, #loc220])
#loc387 = loc(fused[#loc222, #loc223])
#loc388 = loc(fused[#loc225, #loc223])
#loc389 = loc(fused[#loc226, #loc227])
#loc390 = loc(fused[#loc228, #loc229])
#loc391 = loc(fused[#loc230, #loc231])
#loc392 = loc(fused[#loc232, #loc233, #loc234, #loc229])
#loc393 = loc(fused[#loc237, #loc235])
#loc394 = loc(fused[#loc238, #loc239])
#loc395 = loc(fused[#loc241, #loc240])
#loc396 = loc(fused[#loc242, #loc243])
#loc397 = loc(fused[#loc245, #loc239])
#loc398 = loc(fused[#loc250, #loc249])
#loc399 = loc(fused[#loc253, #loc254])
#loc400 = loc(fused[#loc255, #loc256])
#loc401 = loc(fused[#loc257, #loc258])
#loc402 = loc(fused[#loc259, #loc260])
#loc403 = loc(fused[#loc263, #loc261])
#loc404 = loc(fused[#loc264, #loc265])
#loc405 = loc(fused[#loc267, #loc265])
#loc406 = loc(fused[#loc269, #loc268])
#loc407 = loc(fused[#loc270, #loc271])
#loc408 = loc(fused[#loc273, #loc271])
#loc409 = loc(fused[#loc274, #loc275])
#loc410 = loc(fused[#loc276, #loc277])
#loc411 = loc(fused[#loc278, #loc279])
#loc412 = loc(fused[#loc280, #loc281, #loc282, #loc277])
#loc413 = loc(fused[#loc285, #loc283])
#loc414 = loc(fused[#loc286, #loc287])
#loc415 = loc(fused[#loc289, #loc288])
#loc416 = loc(fused[#loc290, #loc291])
#loc417 = loc(fused[#loc293, #loc287])
#loc418 = loc(fused[#loc298, #loc297])
