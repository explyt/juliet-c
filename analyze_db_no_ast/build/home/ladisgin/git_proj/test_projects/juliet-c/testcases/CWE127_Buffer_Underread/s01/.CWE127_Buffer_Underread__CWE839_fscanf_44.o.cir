!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":22:21)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":22:25)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":57:25)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":57:29)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":87:25)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":87:29)
#true = #cir.bool<true> : !cir.bool
#loc130 = loc(fused[#loc8, #loc9])
#loc146 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc89, #loc90])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fscanf_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc127)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc130)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc132)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc132)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc132)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
        %4 = cir.const #cir.int<10> : !s32i loc(#loc18)
        %5 = cir.cmp(lt, %3, %4) : !s32i, !s32i loc(#loc134)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc19)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc24)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc24)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc24)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc25)
        } else {
          %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc5)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc26)
        } loc(#loc135)
      } loc(#loc133)
    } loc(#loc131)
    cir.return loc(#loc7)
  } loc(#loc129)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc136)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc137)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc31)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fscanf_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc140)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc39)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc41)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc31)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc31)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc41)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc43)
    cir.return loc(#loc33)
  } loc(#loc138)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fscanf_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc142)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc53, #loc54])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc146)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc148)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc148)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc148)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
        %4 = cir.const #cir.int<10> : !s32i loc(#loc63)
        %5 = cir.cmp(lt, %3, %4) : !s32i, !s32i loc(#loc150)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc64)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc69)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc69)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc69)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc70)
        } else {
          %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc71)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc71)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc72)
        } loc(#loc151)
      } loc(#loc149)
    } loc(#loc147)
    cir.return loc(#loc52)
  } loc(#loc145)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc154)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc154)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc80)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc82)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc84)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc84)
    cir.return loc(#loc74)
  } loc(#loc152)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc86)
  cir.func internal private  @goodB2GSink(%arg0: !s32i loc(fused[#loc89, #loc90])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc158)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc160)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc160)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc160)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc99)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !s32i loc(#loc162)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc100)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
          %9 = cir.const #cir.int<10> : !s32i loc(#loc103)
          %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc163)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc105)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc101)
            cir.yield %13 : !cir.bool loc(#loc101)
          }, false {
            %13 = cir.const #false loc(#loc101)
            cir.yield %13 : !cir.bool loc(#loc101)
          }) : (!cir.bool) -> !cir.bool loc(#loc101)
          cir.yield %12 : !cir.bool loc(#loc101)
        }, false {
          %8 = cir.const #false loc(#loc101)
          cir.yield %8 : !cir.bool loc(#loc101)
        }) : (!cir.bool) -> !cir.bool loc(#loc101)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
          %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc110)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc110)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc111)
        } else {
          %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc86)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc86)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc112)
        } loc(#loc164)
      } loc(#loc161)
    } loc(#loc159)
    cir.return loc(#loc88)
  } loc(#loc157)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc118)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc167)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc120)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc122)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc123)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc124)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc124)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc122)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc125)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc125)
    cir.return loc(#loc114)
  } loc(#loc165)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fscanf_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":34:23)
#loc6 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":22:1)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":37:1)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":23:1)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":24:5)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":36:5)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":25:9)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":25:30)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":28:9)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":35:9)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":28:13)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":28:20)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":28:18)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":29:9)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":31:9)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":33:9)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":30:33)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":30:26)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":30:13)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":34:13)
#loc27 = loc("/usr/include/stdio.h":463:1)
#loc28 = loc("/usr/include/stdio.h":465:33)
#loc29 = loc("/usr/include/stdio.h":149:1)
#loc30 = loc("/usr/include/stdio.h":149:14)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":47:19)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":39:1)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":50:1)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":41:5)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":41:9)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":43:5)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":43:29)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":45:13)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":45:12)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":45:5)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":47:5)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":47:12)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":49:5)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":49:13)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":114:1)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":118:1)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":116:5)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":116:13)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":117:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":117:13)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":57:1)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":72:1)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":58:1)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":59:5)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":71:5)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":60:9)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":60:30)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":63:9)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":70:9)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":63:13)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":63:20)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":63:18)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":64:9)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":66:9)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":68:9)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":65:33)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":65:26)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":65:13)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":69:23)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":69:13)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":74:1)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":84:1)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":76:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":76:9)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":77:5)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":77:29)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":79:13)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":79:12)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":79:5)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":82:12)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":82:5)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":83:5)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":83:13)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":98:23)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":87:1)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":101:1)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":88:1)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":89:5)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":100:5)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":90:9)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":90:30)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":92:9)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":99:9)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":92:13)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":92:21)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":92:18)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":92:23)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":92:26)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":92:34)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":92:36)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":92:31)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":93:9)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":95:9)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":97:9)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":94:33)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":94:26)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":94:13)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":98:13)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":103:1)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":112:1)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":105:5)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":105:9)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":106:5)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":106:29)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":108:13)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":108:12)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":108:5)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":110:5)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":110:12)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":110:19)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":111:5)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_fscanf_44.c":111:13)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc6, #loc7])
#loc131 = loc(fused[#loc11, #loc12])
#loc132 = loc(fused[#loc13, #loc14])
#loc133 = loc(fused[#loc15, #loc16])
#loc134 = loc(fused[#loc17, #loc18])
#loc135 = loc(fused[#loc20, #loc21, #loc22, #loc16])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc29, #loc30])
#loc138 = loc(fused[#loc32, #loc33])
#loc139 = loc(fused[#loc34, #loc35])
#loc140 = loc(fused[#loc36, #loc37])
#loc141 = loc(fused[#loc40, #loc38])
#loc142 = loc(fused[#loc45, #loc46])
#loc143 = loc(fused[#loc47, #loc48])
#loc144 = loc(fused[#loc49, #loc50])
#loc145 = loc(fused[#loc51, #loc52])
#loc147 = loc(fused[#loc56, #loc57])
#loc148 = loc(fused[#loc58, #loc59])
#loc149 = loc(fused[#loc60, #loc61])
#loc150 = loc(fused[#loc62, #loc63])
#loc151 = loc(fused[#loc65, #loc66, #loc67, #loc61])
#loc152 = loc(fused[#loc73, #loc74])
#loc153 = loc(fused[#loc75, #loc76])
#loc154 = loc(fused[#loc77, #loc78])
#loc155 = loc(fused[#loc81, #loc79])
#loc156 = loc(fused[#loc83, #loc82])
#loc157 = loc(fused[#loc87, #loc88])
#loc159 = loc(fused[#loc92, #loc93])
#loc160 = loc(fused[#loc94, #loc95])
#loc161 = loc(fused[#loc96, #loc97])
#loc162 = loc(fused[#loc98, #loc99])
#loc163 = loc(fused[#loc102, #loc104])
#loc164 = loc(fused[#loc106, #loc107, #loc108, #loc97])
#loc165 = loc(fused[#loc113, #loc114])
#loc166 = loc(fused[#loc115, #loc116])
#loc167 = loc(fused[#loc117, #loc118])
#loc168 = loc(fused[#loc121, #loc119])
