!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_31.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_31L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc140)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_313badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc141)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc142)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc143)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc146)
  cir.func private @close(!s32i) -> !s32i loc(#loc147)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_313badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_313badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc141)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc141)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc152)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc28)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc28)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc152)
      cir.scope {
        %8 = cir.const #cir.int<4096> : !s32i loc(#loc32)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc32)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc33)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc154)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc34)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc34)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc155)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc39)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc40)
            %18 = cir.const #cir.int<4096> : !s32i loc(#loc41)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc41)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc158)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc158)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc144)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc44)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc45)
            %27 = cir.cmp(ne, %25, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc159)
            cir.if %27 {
              %28 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc49)
              %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc49)
              cir.store %30, %4 : !u64i, !cir.ptr<!u64i> loc(#loc161)
              cir.scope {
                %31 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc55)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc56)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc56)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc163)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
                  %37 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc60)
                  %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc164)
                  %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc61)
                  %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc58)
                  %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc58)
                  %44 = cir.const #cir.int<10> : !s8i loc(#loc62)
                  %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc62)
                  %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc165)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc57)
                    cir.yield %48 : !cir.bool loc(#loc57)
                  }, false {
                    %48 = cir.const #false loc(#loc57)
                    cir.yield %48 : !cir.bool loc(#loc57)
                  }) : (!cir.bool) -> !cir.bool loc(#loc57)
                  cir.yield %47 : !cir.bool loc(#loc57)
                }, false {
                  %36 = cir.const #false loc(#loc57)
                  cir.yield %36 : !cir.bool loc(#loc57)
                }) : (!cir.bool) -> !cir.bool loc(#loc57)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc64)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc66)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc67)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc67)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc167)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc68)
                  cir.store %36, %42 : !s8i, !cir.ptr<!s8i> loc(#loc168)
                } loc(#loc166)
              } loc(#loc162)
            } else {
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
              cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc69)
              %30 = cir.const #cir.int<0> : !s8i loc(#loc70)
              %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
              %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc72)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc73)
              cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc169)
            } loc(#loc160)
          } loc(#loc157)
        } loc(#loc156)
      } loc(#loc153)
    } loc(#loc151)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc171)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc174)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc85)
        %11 = cir.const #cir.int<64> : !s32i loc(#loc86)
        %12 = cir.binop(or, %10, %11) : !s32i loc(#loc175)
        %13 = cir.const #cir.int<256> : !s32i loc(#loc87)
        %14 = cir.const #cir.int<128> : !s32i loc(#loc88)
        %15 = cir.binop(or, %13, %14) : !s32i loc(#loc176)
        %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc89)
        cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc177)
        cir.scope {
          %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc95)
          %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc96)
          %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc179)
          cir.if %20 {
            %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc99)
          } loc(#loc180)
        } loc(#loc178)
      } loc(#loc173)
    } loc(#loc170)
    cir.return loc(#loc19)
  } loc(#loc148)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc102)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_31L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc140)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_31L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc140)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc140)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc107)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc109)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc102)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc102)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc186)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc187)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
      cir.scope {
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc189)
        %14 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
        %15 = cir.const #cir.int<2> : !s32i loc(#loc122)
        %16 = cir.const #cir.int<64> : !s32i loc(#loc123)
        %17 = cir.binop(or, %15, %16) : !s32i loc(#loc190)
        %18 = cir.const #cir.int<256> : !s32i loc(#loc124)
        %19 = cir.const #cir.int<128> : !s32i loc(#loc125)
        %20 = cir.binop(or, %18, %19) : !s32i loc(#loc191)
        %21 = cir.call @open(%14, %17, %20) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc126)
        cir.store %21, %13 : !s32i, !cir.ptr<!s32i> loc(#loc192)
        cir.scope {
          %22 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc131)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc132)
          %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc133)
          %25 = cir.cmp(ne, %22, %24) : !s32i, !cir.bool loc(#loc194)
          cir.if %25 {
            %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %27 = cir.call @close(%26) : (!s32i) -> !s32i loc(#loc136)
          } loc(#loc195)
        } loc(#loc193)
      } loc(#loc188)
    } loc(#loc185)
    cir.return loc(#loc104)
  } loc(#loc182)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_314goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_31L7goodG2BEv() : () -> () loc(#loc139)
    cir.return loc(#loc138)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_31.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":93:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":93:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":43:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":43:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":64:27)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":40:1)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":83:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":42:5)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":42:12)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":44:12)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":44:5)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":45:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":69:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":47:9)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":47:37)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":47:26)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":47:33)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":49:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":68:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":49:13)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":49:26)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":49:36)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":50:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":52:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":67:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":52:23)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":52:28)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":52:27)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":52:43)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":52:56)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":52:66)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":52:17)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":52:76)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":53:13)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":61:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":63:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":56:27)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":56:34)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":56:17)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":56:38)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":57:17)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":60:17)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":57:21)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":57:31)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":57:33)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":57:36)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":57:41)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":57:49)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":57:50)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":57:55)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":58:17)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":59:39)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":59:21)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":59:26)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":59:34)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":59:35)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":64:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":66:33)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":66:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":66:22)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":66:29)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":70:5)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":82:5)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":71:9)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":71:27)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":72:9)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":72:23)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":73:9)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":81:9)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":74:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":74:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":76:29)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":76:35)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":76:42)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":76:51)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":76:59)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":76:24)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":76:13)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":76:67)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":77:13)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":80:13)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":77:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":77:30)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":77:29)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":78:13)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":79:23)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":79:17)
#loc100 = loc("/usr/include/string.h":149:1)
#loc101 = loc("/usr/include/string.h":150:14)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":96:18)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":90:1)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":110:1)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":92:5)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":92:12)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":94:12)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":94:5)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":96:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":96:12)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":97:5)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":109:5)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":98:9)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":98:27)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":99:9)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":99:23)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":100:9)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":108:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":101:13)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":101:17)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":103:29)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":103:35)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":103:42)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":103:51)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":103:59)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":103:24)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":103:13)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":103:67)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":104:13)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":107:13)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":104:17)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":104:30)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":104:29)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":105:13)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":106:23)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":106:17)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":112:1)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":115:1)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_open_31.cpp":114:5)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc9, #loc10])
#loc145 = loc(fused[#loc11, #loc12])
#loc146 = loc(fused[#loc14, #loc15])
#loc147 = loc(fused[#loc16, #loc17])
#loc148 = loc(fused[#loc18, #loc19])
#loc149 = loc(fused[#loc20, #loc21])
#loc150 = loc(fused[#loc23, #loc22])
#loc151 = loc(fused[#loc24, #loc25])
#loc152 = loc(fused[#loc26, #loc27])
#loc153 = loc(fused[#loc30, #loc31])
#loc154 = loc(fused[#loc32, #loc33])
#loc155 = loc(fused[#loc32, #loc34])
#loc156 = loc(fused[#loc35, #loc31])
#loc157 = loc(fused[#loc36, #loc37])
#loc158 = loc(fused[#loc41, #loc42])
#loc159 = loc(fused[#loc44, #loc45])
#loc160 = loc(fused[#loc46, #loc47, #loc48, #loc37])
#loc161 = loc(fused[#loc51, #loc52])
#loc162 = loc(fused[#loc53, #loc54])
#loc163 = loc(fused[#loc55, #loc56])
#loc164 = loc(fused[#loc59, #loc60])
#loc165 = loc(fused[#loc58, #loc62])
#loc166 = loc(fused[#loc63, #loc54])
#loc167 = loc(fused[#loc66, #loc67])
#loc168 = loc(fused[#loc65, #loc64])
#loc169 = loc(fused[#loc71, #loc70])
#loc170 = loc(fused[#loc74, #loc75])
#loc171 = loc(fused[#loc76, #loc77])
#loc172 = loc(fused[#loc78, #loc79])
#loc173 = loc(fused[#loc80, #loc81])
#loc174 = loc(fused[#loc82, #loc83])
#loc175 = loc(fused[#loc85, #loc86])
#loc176 = loc(fused[#loc87, #loc88])
#loc177 = loc(fused[#loc90, #loc91])
#loc178 = loc(fused[#loc92, #loc93])
#loc179 = loc(fused[#loc94, #loc95])
#loc180 = loc(fused[#loc97, #loc93])
#loc181 = loc(fused[#loc100, #loc101])
#loc182 = loc(fused[#loc103, #loc104])
#loc183 = loc(fused[#loc105, #loc106])
#loc184 = loc(fused[#loc108, #loc107])
#loc185 = loc(fused[#loc111, #loc112])
#loc186 = loc(fused[#loc113, #loc114])
#loc187 = loc(fused[#loc115, #loc116])
#loc188 = loc(fused[#loc117, #loc118])
#loc189 = loc(fused[#loc119, #loc120])
#loc190 = loc(fused[#loc122, #loc123])
#loc191 = loc(fused[#loc124, #loc125])
#loc192 = loc(fused[#loc127, #loc128])
#loc193 = loc(fused[#loc129, #loc130])
#loc194 = loc(fused[#loc131, #loc132])
#loc195 = loc(fused[#loc134, #loc130])
#loc196 = loc(fused[#loc137, #loc138])
