!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc120 = loc("CWE367_TOC_TOU__access_15.c":192:10)
#loc121 = loc("CWE367_TOC_TOU__access_15.c":192:14)
#loc122 = loc("CWE367_TOC_TOU__access_15.c":192:20)
#loc123 = loc("CWE367_TOC_TOU__access_15.c":192:32)
#loc331 = loc(fused[#loc120, #loc121])
#loc332 = loc(fused[#loc122, #loc123])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc288)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc289)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc290)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc291)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc293)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc294)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc296)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE367_TOC_TOU__access_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc26)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc300)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc301)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc300)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc300)
            %4 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc34)
            cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc301)
            cir.scope {
              %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc38)
              %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc289)
              %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
              %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
              %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc303)
              cir.if %16 {
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc43)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc44)
                %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc44)
                %21 = cir.const #cir.int<0> : !s32i loc(#loc45)
                %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
                %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc46)
                cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc305)
              } loc(#loc304)
            } loc(#loc302)
            cir.scope {
              %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
              %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
              %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc51)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc51)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc307)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc53)
                %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc53)
                %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
                %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
                %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc56)
                %22 = cir.binop(sub, %19, %21) : !u64i loc(#loc309)
                %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc57)
                cir.store %16, %24 : !s8i, !cir.ptr<!s8i> loc(#loc310)
              } loc(#loc308)
            } loc(#loc306)
            cir.scope {
              %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc61)
              %11 = cir.call @access(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc63)
              %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc64)
              %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc312)
              cir.if %14 {
                %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc67)
                cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
              } loc(#loc313)
            } loc(#loc311)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
            %7 = cir.const #cir.int<2> : !s32i loc(#loc69)
            %8 = cir.call @open(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc70)
            cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc314)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc76)
              %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc77)
              %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc316)
              cir.if %12 {
                %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc80)
                cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
              } loc(#loc317)
            } loc(#loc315)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
              %13 = cir.const #cir.int<11> : !u64i loc(#loc319)
              %14 = cir.call @write(%9, %12, %13) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc86)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc87)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc88)
              %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc88)
              %18 = cir.cmp(eq, %14, %17) : !s64i, !cir.bool loc(#loc320)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc91)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
              } loc(#loc321)
            } loc(#loc318)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc96)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc323)
              cir.if %12 {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc99)
              } loc(#loc324)
            } loc(#loc322)
          } loc(#loc299)
          cir.break loc(#loc100)
        } loc(#loc27)
        cir.case(default, []) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc21)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc21)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc102)
          cir.break loc(#loc103)
        } loc(#loc101)
        cir.yield loc(#loc24)
      } loc(#loc24)
    } loc(#loc298)
    cir.return loc(#loc23)
  } loc(#loc297)
  cir.func no_proto @CWE367_TOC_TOU__access_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc326)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc106)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc327)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc108)
    cir.return loc(#loc105)
  } loc(#loc325)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc328)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc329)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc117)
  cir.func @main(%arg0: !s32i loc(fused[#loc120, #loc121]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc122, #loc123])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc331)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc332)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc119)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc124)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc125)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc126)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc126)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc127)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc114)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %8 = cir.get_global @CWE367_TOC_TOU__access_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc333)
    cir.call @CWE367_TOC_TOU__access_15_good() : () -> () loc(#loc129)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc115)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc116)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %13 = cir.get_global @CWE367_TOC_TOU__access_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc334)
    cir.call @CWE367_TOC_TOU__access_15_bad() : () -> () loc(#loc133)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc117)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc136)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    cir.return %17 : !s32i loc(#loc335)
  } loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc138)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc143)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc145)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc145)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc146)
          cir.break loc(#loc147)
        } loc(#loc144)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc339)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc340)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc339)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc339)
            %4 = cir.const #cir.int<1> : !s32i loc(#loc154)
            %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc155)
            cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc340)
            cir.scope {
              %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc159)
              %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc289)
              %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc160)
              %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc161)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc162)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
              %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc342)
              cir.if %16 {
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc164)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc164)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc165)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc166)
                %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc166)
                %21 = cir.const #cir.int<0> : !s32i loc(#loc167)
                %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
                %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc168)
                cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc344)
              } loc(#loc343)
            } loc(#loc341)
            cir.scope {
              %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc171)
              %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
              %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc171)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc173)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc173)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc346)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc175)
                %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc175)
                %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc176)
                %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
                %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc176)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc178)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc178)
                %22 = cir.binop(sub, %19, %21) : !u64i loc(#loc348)
                %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc179)
                cir.store %16, %24 : !s8i, !cir.ptr<!s8i> loc(#loc349)
              } loc(#loc347)
            } loc(#loc345)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc180)
            %7 = cir.const #cir.int<2> : !s32i loc(#loc181)
            %8 = cir.call @open(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc182)
            cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc350)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc188)
              %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc189)
              %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc352)
              cir.if %12 {
                %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc191)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc192)
                cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc191)
              } loc(#loc353)
            } loc(#loc351)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
              %10 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc138)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc138)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
              %13 = cir.const #cir.int<12> : !u64i loc(#loc355)
              %14 = cir.call @write(%9, %12, %13) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc198)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc199)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc200)
              %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc200)
              %18 = cir.cmp(eq, %14, %17) : !s64i, !cir.bool loc(#loc356)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc202)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc203)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc202)
              } loc(#loc357)
            } loc(#loc354)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc207)
              %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc208)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc359)
              cir.if %12 {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc211)
              } loc(#loc360)
            } loc(#loc358)
          } loc(#loc338)
          cir.break loc(#loc212)
        } loc(#loc148)
        cir.yield loc(#loc141)
      } loc(#loc141)
    } loc(#loc337)
    cir.return loc(#loc140)
  } loc(#loc336)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc217)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc364)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc365)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc364)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc364)
            %4 = cir.const #cir.int<1> : !s32i loc(#loc224)
            %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc225)
            cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc365)
            cir.scope {
              %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc229)
              %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc289)
              %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc230)
              %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc231)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc232)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
              %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc367)
              cir.if %16 {
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc234)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc234)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc235)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc236)
                %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc236)
                %21 = cir.const #cir.int<0> : !s32i loc(#loc237)
                %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc238)
                %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc238)
                cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc369)
              } loc(#loc368)
            } loc(#loc366)
            cir.scope {
              %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc241)
              %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc242)
              %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc241)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc243)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc243)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc371)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc245)
                %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc245)
                %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc246)
                %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc247)
                %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc246)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc248)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc248)
                %22 = cir.binop(sub, %19, %21) : !u64i loc(#loc373)
                %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc249)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc249)
                cir.store %16, %24 : !s8i, !cir.ptr<!s8i> loc(#loc374)
              } loc(#loc372)
            } loc(#loc370)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
            %7 = cir.const #cir.int<2> : !s32i loc(#loc251)
            %8 = cir.call @open(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc252)
            cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc375)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc257)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc258)
              %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc259)
              %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc377)
              cir.if %12 {
                %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc261)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc262)
                cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc261)
              } loc(#loc378)
            } loc(#loc376)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
              %10 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc266)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc266)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc266)
              %13 = cir.const #cir.int<12> : !u64i loc(#loc380)
              %14 = cir.call @write(%9, %12, %13) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc269)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc270)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc271)
              %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc271)
              %18 = cir.cmp(eq, %14, %17) : !s64i, !cir.bool loc(#loc381)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc273)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc274)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc273)
              } loc(#loc382)
            } loc(#loc379)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc277)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc278)
              %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc279)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc384)
              cir.if %12 {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc281)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc282)
              } loc(#loc385)
            } loc(#loc383)
          } loc(#loc363)
          cir.break loc(#loc283)
        } loc(#loc218)
        cir.case(default, []) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc285)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc285)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc286)
          cir.break loc(#loc287)
        } loc(#loc284)
        cir.yield loc(#loc215)
      } loc(#loc215)
    } loc(#loc362)
    cir.return loc(#loc214)
  } loc(#loc361)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_15.c":54:23)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_15.c":72:29)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_15.c":84:19)
#loc22 = loc("CWE367_TOC_TOU__access_15.c":44:1)
#loc23 = loc("CWE367_TOC_TOU__access_15.c":87:1)
#loc24 = loc("CWE367_TOC_TOU__access_15.c":46:5)
#loc25 = loc("CWE367_TOC_TOU__access_15.c":86:5)
#loc26 = loc("CWE367_TOC_TOU__access_15.c":46:12)
#loc27 = loc("CWE367_TOC_TOU__access_15.c":48:5)
#loc28 = loc("CWE367_TOC_TOU__access_15.c":49:5)
#loc29 = loc("CWE367_TOC_TOU__access_15.c":80:5)
#loc30 = loc("CWE367_TOC_TOU__access_15.c":50:9)
#loc31 = loc("CWE367_TOC_TOU__access_15.c":50:30)
#loc32 = loc("CWE367_TOC_TOU__access_15.c":51:9)
#loc33 = loc("CWE367_TOC_TOU__access_15.c":51:25)
#loc34 = loc("CWE367_TOC_TOU__access_15.c":51:24)
#loc35 = loc("CWE367_TOC_TOU__access_15.c":52:9)
#loc36 = loc("CWE367_TOC_TOU__access_15.c":57:9)
#loc37 = loc("CWE367_TOC_TOU__access_15.c":52:19)
#loc38 = loc("CWE367_TOC_TOU__access_15.c":52:29)
#loc39 = loc("CWE367_TOC_TOU__access_15.c":52:34)
#loc40 = loc("CWE367_TOC_TOU__access_15.c":52:13)
#loc41 = loc("CWE367_TOC_TOU__access_15.c":52:44)
#loc42 = loc("CWE367_TOC_TOU__access_15.c":53:9)
#loc43 = loc("CWE367_TOC_TOU__access_15.c":54:13)
#loc44 = loc("CWE367_TOC_TOU__access_15.c":56:27)
#loc45 = loc("CWE367_TOC_TOU__access_15.c":56:22)
#loc46 = loc("CWE367_TOC_TOU__access_15.c":56:13)
#loc47 = loc("CWE367_TOC_TOU__access_15.c":58:9)
#loc48 = loc("CWE367_TOC_TOU__access_15.c":61:9)
#loc49 = loc("CWE367_TOC_TOU__access_15.c":58:13)
#loc50 = loc("CWE367_TOC_TOU__access_15.c":58:20)
#loc51 = loc("CWE367_TOC_TOU__access_15.c":58:32)
#loc52 = loc("CWE367_TOC_TOU__access_15.c":59:9)
#loc53 = loc("CWE367_TOC_TOU__access_15.c":60:44)
#loc54 = loc("CWE367_TOC_TOU__access_15.c":60:22)
#loc55 = loc("CWE367_TOC_TOU__access_15.c":60:29)
#loc56 = loc("CWE367_TOC_TOU__access_15.c":60:39)
#loc57 = loc("CWE367_TOC_TOU__access_15.c":60:13)
#loc58 = loc("CWE367_TOC_TOU__access_15.c":63:9)
#loc59 = loc("CWE367_TOC_TOU__access_15.c":66:9)
#loc60 = loc("CWE367_TOC_TOU__access_15.c":63:20)
#loc61 = loc("CWE367_TOC_TOU__access_15.c":63:30)
#loc62 = loc("CWE367_TOC_TOU__access_15.c":63:13)
#loc63 = loc("CWE367_TOC_TOU__access_15.c":63:40)
#loc64 = loc("CWE367_TOC_TOU__access_15.c":63:39)
#loc65 = loc("CWE367_TOC_TOU__access_15.c":64:9)
#loc66 = loc("CWE367_TOC_TOU__access_15.c":65:13)
#loc67 = loc("CWE367_TOC_TOU__access_15.c":65:18)
#loc68 = loc("CWE367_TOC_TOU__access_15.c":67:26)
#loc69 = loc("CWE367_TOC_TOU__access_15.c":67:36)
#loc70 = loc("CWE367_TOC_TOU__access_15.c":67:21)
#loc71 = loc("CWE367_TOC_TOU__access_15.c":67:9)
#loc72 = loc("CWE367_TOC_TOU__access_15.c":67:42)
#loc73 = loc("CWE367_TOC_TOU__access_15.c":68:9)
#loc74 = loc("CWE367_TOC_TOU__access_15.c":71:9)
#loc75 = loc("CWE367_TOC_TOU__access_15.c":68:13)
#loc76 = loc("CWE367_TOC_TOU__access_15.c":68:26)
#loc77 = loc("CWE367_TOC_TOU__access_15.c":68:25)
#loc78 = loc("CWE367_TOC_TOU__access_15.c":69:9)
#loc79 = loc("CWE367_TOC_TOU__access_15.c":70:13)
#loc80 = loc("CWE367_TOC_TOU__access_15.c":70:18)
#loc81 = loc("CWE367_TOC_TOU__access_15.c":72:9)
#loc82 = loc("CWE367_TOC_TOU__access_15.c":75:9)
#loc83 = loc("CWE367_TOC_TOU__access_15.c":72:19)
#loc84 = loc("CWE367_TOC_TOU__access_15.c":72:46)
#loc85 = loc("CWE367_TOC_TOU__access_15.c":72:68)
#loc86 = loc("CWE367_TOC_TOU__access_15.c":72:13)
#loc87 = loc("CWE367_TOC_TOU__access_15.c":72:75)
#loc88 = loc("CWE367_TOC_TOU__access_15.c":72:74)
#loc89 = loc("CWE367_TOC_TOU__access_15.c":73:9)
#loc90 = loc("CWE367_TOC_TOU__access_15.c":74:13)
#loc91 = loc("CWE367_TOC_TOU__access_15.c":74:18)
#loc92 = loc("CWE367_TOC_TOU__access_15.c":76:9)
#loc93 = loc("CWE367_TOC_TOU__access_15.c":79:9)
#loc94 = loc("CWE367_TOC_TOU__access_15.c":76:13)
#loc95 = loc("CWE367_TOC_TOU__access_15.c":76:26)
#loc96 = loc("CWE367_TOC_TOU__access_15.c":76:25)
#loc97 = loc("CWE367_TOC_TOU__access_15.c":77:9)
#loc98 = loc("CWE367_TOC_TOU__access_15.c":78:19)
#loc99 = loc("CWE367_TOC_TOU__access_15.c":78:13)
#loc100 = loc("CWE367_TOC_TOU__access_15.c":81:5)
#loc101 = loc("CWE367_TOC_TOU__access_15.c":82:5)
#loc102 = loc("CWE367_TOC_TOU__access_15.c":84:9)
#loc103 = loc("CWE367_TOC_TOU__access_15.c":85:9)
#loc104 = loc("CWE367_TOC_TOU__access_15.c":177:1)
#loc105 = loc("CWE367_TOC_TOU__access_15.c":181:1)
#loc106 = loc("CWE367_TOC_TOU__access_15.c":179:5)
#loc107 = loc("CWE367_TOC_TOU__access_15.c":179:11)
#loc108 = loc("CWE367_TOC_TOU__access_15.c":180:5)
#loc109 = loc("CWE367_TOC_TOU__access_15.c":180:11)
#loc110 = loc("/usr/include/stdlib.h":575:1)
#loc111 = loc("/usr/include/stdlib.h":575:41)
#loc112 = loc("/usr/include/time.h":76:1)
#loc113 = loc("/usr/include/time.h":76:38)
#loc114 = loc("CWE367_TOC_TOU__access_15.c":197:15)
#loc115 = loc("CWE367_TOC_TOU__access_15.c":199:15)
#loc116 = loc("CWE367_TOC_TOU__access_15.c":202:15)
#loc117 = loc("CWE367_TOC_TOU__access_15.c":204:15)
#loc118 = loc("CWE367_TOC_TOU__access_15.c":192:1)
#loc119 = loc("CWE367_TOC_TOU__access_15.c":207:1)
#loc124 = loc("CWE367_TOC_TOU__access_15.c":193:1)
#loc125 = loc("CWE367_TOC_TOU__access_15.c":195:27)
#loc126 = loc("CWE367_TOC_TOU__access_15.c":195:22)
#loc127 = loc("CWE367_TOC_TOU__access_15.c":195:5)
#loc128 = loc("CWE367_TOC_TOU__access_15.c":197:5)
#loc129 = loc("CWE367_TOC_TOU__access_15.c":198:5)
#loc130 = loc("CWE367_TOC_TOU__access_15.c":198:36)
#loc131 = loc("CWE367_TOC_TOU__access_15.c":199:5)
#loc132 = loc("CWE367_TOC_TOU__access_15.c":202:5)
#loc133 = loc("CWE367_TOC_TOU__access_15.c":203:5)
#loc134 = loc("CWE367_TOC_TOU__access_15.c":203:35)
#loc135 = loc("CWE367_TOC_TOU__access_15.c":204:5)
#loc136 = loc("CWE367_TOC_TOU__access_15.c":206:12)
#loc137 = loc("CWE367_TOC_TOU__access_15.c":206:5)
#loc138 = loc("CWE367_TOC_TOU__access_15.c":122:29)
#loc139 = loc("CWE367_TOC_TOU__access_15.c":94:1)
#loc140 = loc("CWE367_TOC_TOU__access_15.c":133:1)
#loc141 = loc("CWE367_TOC_TOU__access_15.c":96:5)
#loc142 = loc("CWE367_TOC_TOU__access_15.c":132:5)
#loc143 = loc("CWE367_TOC_TOU__access_15.c":96:12)
#loc144 = loc("CWE367_TOC_TOU__access_15.c":98:5)
#loc145 = loc("CWE367_TOC_TOU__access_15.c":100:19)
#loc146 = loc("CWE367_TOC_TOU__access_15.c":100:9)
#loc147 = loc("CWE367_TOC_TOU__access_15.c":101:9)
#loc148 = loc("CWE367_TOC_TOU__access_15.c":102:5)
#loc149 = loc("CWE367_TOC_TOU__access_15.c":103:5)
#loc150 = loc("CWE367_TOC_TOU__access_15.c":130:5)
#loc151 = loc("CWE367_TOC_TOU__access_15.c":104:9)
#loc152 = loc("CWE367_TOC_TOU__access_15.c":104:30)
#loc153 = loc("CWE367_TOC_TOU__access_15.c":105:9)
#loc154 = loc("CWE367_TOC_TOU__access_15.c":105:25)
#loc155 = loc("CWE367_TOC_TOU__access_15.c":105:24)
#loc156 = loc("CWE367_TOC_TOU__access_15.c":106:9)
#loc157 = loc("CWE367_TOC_TOU__access_15.c":111:9)
#loc158 = loc("CWE367_TOC_TOU__access_15.c":106:19)
#loc159 = loc("CWE367_TOC_TOU__access_15.c":106:29)
#loc160 = loc("CWE367_TOC_TOU__access_15.c":106:34)
#loc161 = loc("CWE367_TOC_TOU__access_15.c":106:13)
#loc162 = loc("CWE367_TOC_TOU__access_15.c":106:44)
#loc163 = loc("CWE367_TOC_TOU__access_15.c":107:9)
#loc164 = loc("CWE367_TOC_TOU__access_15.c":108:23)
#loc165 = loc("CWE367_TOC_TOU__access_15.c":108:13)
#loc166 = loc("CWE367_TOC_TOU__access_15.c":110:27)
#loc167 = loc("CWE367_TOC_TOU__access_15.c":110:22)
#loc168 = loc("CWE367_TOC_TOU__access_15.c":110:13)
#loc169 = loc("CWE367_TOC_TOU__access_15.c":112:9)
#loc170 = loc("CWE367_TOC_TOU__access_15.c":115:9)
#loc171 = loc("CWE367_TOC_TOU__access_15.c":112:13)
#loc172 = loc("CWE367_TOC_TOU__access_15.c":112:20)
#loc173 = loc("CWE367_TOC_TOU__access_15.c":112:32)
#loc174 = loc("CWE367_TOC_TOU__access_15.c":113:9)
#loc175 = loc("CWE367_TOC_TOU__access_15.c":114:44)
#loc176 = loc("CWE367_TOC_TOU__access_15.c":114:22)
#loc177 = loc("CWE367_TOC_TOU__access_15.c":114:29)
#loc178 = loc("CWE367_TOC_TOU__access_15.c":114:39)
#loc179 = loc("CWE367_TOC_TOU__access_15.c":114:13)
#loc180 = loc("CWE367_TOC_TOU__access_15.c":117:26)
#loc181 = loc("CWE367_TOC_TOU__access_15.c":117:36)
#loc182 = loc("CWE367_TOC_TOU__access_15.c":117:21)
#loc183 = loc("CWE367_TOC_TOU__access_15.c":117:9)
#loc184 = loc("CWE367_TOC_TOU__access_15.c":117:42)
#loc185 = loc("CWE367_TOC_TOU__access_15.c":118:9)
#loc186 = loc("CWE367_TOC_TOU__access_15.c":121:9)
#loc187 = loc("CWE367_TOC_TOU__access_15.c":118:13)
#loc188 = loc("CWE367_TOC_TOU__access_15.c":118:26)
#loc189 = loc("CWE367_TOC_TOU__access_15.c":118:25)
#loc190 = loc("CWE367_TOC_TOU__access_15.c":119:9)
#loc191 = loc("CWE367_TOC_TOU__access_15.c":120:13)
#loc192 = loc("CWE367_TOC_TOU__access_15.c":120:18)
#loc193 = loc("CWE367_TOC_TOU__access_15.c":122:9)
#loc194 = loc("CWE367_TOC_TOU__access_15.c":125:9)
#loc195 = loc("CWE367_TOC_TOU__access_15.c":122:19)
#loc196 = loc("CWE367_TOC_TOU__access_15.c":122:47)
#loc197 = loc("CWE367_TOC_TOU__access_15.c":122:70)
#loc198 = loc("CWE367_TOC_TOU__access_15.c":122:13)
#loc199 = loc("CWE367_TOC_TOU__access_15.c":122:77)
#loc200 = loc("CWE367_TOC_TOU__access_15.c":122:76)
#loc201 = loc("CWE367_TOC_TOU__access_15.c":123:9)
#loc202 = loc("CWE367_TOC_TOU__access_15.c":124:13)
#loc203 = loc("CWE367_TOC_TOU__access_15.c":124:18)
#loc204 = loc("CWE367_TOC_TOU__access_15.c":126:9)
#loc205 = loc("CWE367_TOC_TOU__access_15.c":129:9)
#loc206 = loc("CWE367_TOC_TOU__access_15.c":126:13)
#loc207 = loc("CWE367_TOC_TOU__access_15.c":126:26)
#loc208 = loc("CWE367_TOC_TOU__access_15.c":126:25)
#loc209 = loc("CWE367_TOC_TOU__access_15.c":127:9)
#loc210 = loc("CWE367_TOC_TOU__access_15.c":128:19)
#loc211 = loc("CWE367_TOC_TOU__access_15.c":128:13)
#loc212 = loc("CWE367_TOC_TOU__access_15.c":131:5)
#loc213 = loc("CWE367_TOC_TOU__access_15.c":136:1)
#loc214 = loc("CWE367_TOC_TOU__access_15.c":175:1)
#loc215 = loc("CWE367_TOC_TOU__access_15.c":138:5)
#loc216 = loc("CWE367_TOC_TOU__access_15.c":174:5)
#loc217 = loc("CWE367_TOC_TOU__access_15.c":138:12)
#loc218 = loc("CWE367_TOC_TOU__access_15.c":140:5)
#loc219 = loc("CWE367_TOC_TOU__access_15.c":141:5)
#loc220 = loc("CWE367_TOC_TOU__access_15.c":168:5)
#loc221 = loc("CWE367_TOC_TOU__access_15.c":142:9)
#loc222 = loc("CWE367_TOC_TOU__access_15.c":142:30)
#loc223 = loc("CWE367_TOC_TOU__access_15.c":143:9)
#loc224 = loc("CWE367_TOC_TOU__access_15.c":143:25)
#loc225 = loc("CWE367_TOC_TOU__access_15.c":143:24)
#loc226 = loc("CWE367_TOC_TOU__access_15.c":144:9)
#loc227 = loc("CWE367_TOC_TOU__access_15.c":149:9)
#loc228 = loc("CWE367_TOC_TOU__access_15.c":144:19)
#loc229 = loc("CWE367_TOC_TOU__access_15.c":144:29)
#loc230 = loc("CWE367_TOC_TOU__access_15.c":144:34)
#loc231 = loc("CWE367_TOC_TOU__access_15.c":144:13)
#loc232 = loc("CWE367_TOC_TOU__access_15.c":144:44)
#loc233 = loc("CWE367_TOC_TOU__access_15.c":145:9)
#loc234 = loc("CWE367_TOC_TOU__access_15.c":146:23)
#loc235 = loc("CWE367_TOC_TOU__access_15.c":146:13)
#loc236 = loc("CWE367_TOC_TOU__access_15.c":148:27)
#loc237 = loc("CWE367_TOC_TOU__access_15.c":148:22)
#loc238 = loc("CWE367_TOC_TOU__access_15.c":148:13)
#loc239 = loc("CWE367_TOC_TOU__access_15.c":150:9)
#loc240 = loc("CWE367_TOC_TOU__access_15.c":153:9)
#loc241 = loc("CWE367_TOC_TOU__access_15.c":150:13)
#loc242 = loc("CWE367_TOC_TOU__access_15.c":150:20)
#loc243 = loc("CWE367_TOC_TOU__access_15.c":150:32)
#loc244 = loc("CWE367_TOC_TOU__access_15.c":151:9)
#loc245 = loc("CWE367_TOC_TOU__access_15.c":152:44)
#loc246 = loc("CWE367_TOC_TOU__access_15.c":152:22)
#loc247 = loc("CWE367_TOC_TOU__access_15.c":152:29)
#loc248 = loc("CWE367_TOC_TOU__access_15.c":152:39)
#loc249 = loc("CWE367_TOC_TOU__access_15.c":152:13)
#loc250 = loc("CWE367_TOC_TOU__access_15.c":155:26)
#loc251 = loc("CWE367_TOC_TOU__access_15.c":155:36)
#loc252 = loc("CWE367_TOC_TOU__access_15.c":155:21)
#loc253 = loc("CWE367_TOC_TOU__access_15.c":155:9)
#loc254 = loc("CWE367_TOC_TOU__access_15.c":155:42)
#loc255 = loc("CWE367_TOC_TOU__access_15.c":156:9)
#loc256 = loc("CWE367_TOC_TOU__access_15.c":159:9)
#loc257 = loc("CWE367_TOC_TOU__access_15.c":156:13)
#loc258 = loc("CWE367_TOC_TOU__access_15.c":156:26)
#loc259 = loc("CWE367_TOC_TOU__access_15.c":156:25)
#loc260 = loc("CWE367_TOC_TOU__access_15.c":157:9)
#loc261 = loc("CWE367_TOC_TOU__access_15.c":158:13)
#loc262 = loc("CWE367_TOC_TOU__access_15.c":158:18)
#loc263 = loc("CWE367_TOC_TOU__access_15.c":160:9)
#loc264 = loc("CWE367_TOC_TOU__access_15.c":163:9)
#loc265 = loc("CWE367_TOC_TOU__access_15.c":160:19)
#loc266 = loc("CWE367_TOC_TOU__access_15.c":160:29)
#loc267 = loc("CWE367_TOC_TOU__access_15.c":160:47)
#loc268 = loc("CWE367_TOC_TOU__access_15.c":160:70)
#loc269 = loc("CWE367_TOC_TOU__access_15.c":160:13)
#loc270 = loc("CWE367_TOC_TOU__access_15.c":160:77)
#loc271 = loc("CWE367_TOC_TOU__access_15.c":160:76)
#loc272 = loc("CWE367_TOC_TOU__access_15.c":161:9)
#loc273 = loc("CWE367_TOC_TOU__access_15.c":162:13)
#loc274 = loc("CWE367_TOC_TOU__access_15.c":162:18)
#loc275 = loc("CWE367_TOC_TOU__access_15.c":164:9)
#loc276 = loc("CWE367_TOC_TOU__access_15.c":167:9)
#loc277 = loc("CWE367_TOC_TOU__access_15.c":164:13)
#loc278 = loc("CWE367_TOC_TOU__access_15.c":164:26)
#loc279 = loc("CWE367_TOC_TOU__access_15.c":164:25)
#loc280 = loc("CWE367_TOC_TOU__access_15.c":165:9)
#loc281 = loc("CWE367_TOC_TOU__access_15.c":166:19)
#loc282 = loc("CWE367_TOC_TOU__access_15.c":166:13)
#loc283 = loc("CWE367_TOC_TOU__access_15.c":169:5)
#loc284 = loc("CWE367_TOC_TOU__access_15.c":170:5)
#loc285 = loc("CWE367_TOC_TOU__access_15.c":172:19)
#loc286 = loc("CWE367_TOC_TOU__access_15.c":172:9)
#loc287 = loc("CWE367_TOC_TOU__access_15.c":173:9)
#loc288 = loc(fused[#loc1, #loc2])
#loc289 = loc(fused[#loc3, #loc4])
#loc290 = loc(fused[#loc5, #loc6])
#loc291 = loc(fused[#loc8, #loc9])
#loc292 = loc(fused[#loc10, #loc11])
#loc293 = loc(fused[#loc12, #loc13])
#loc294 = loc(fused[#loc14, #loc15])
#loc295 = loc(fused[#loc16, #loc17])
#loc296 = loc(fused[#loc19, #loc20])
#loc297 = loc(fused[#loc22, #loc23])
#loc298 = loc(fused[#loc24, #loc25])
#loc299 = loc(fused[#loc28, #loc29])
#loc300 = loc(fused[#loc30, #loc31])
#loc301 = loc(fused[#loc32, #loc33])
#loc302 = loc(fused[#loc35, #loc36])
#loc303 = loc(fused[#loc40, #loc41])
#loc304 = loc(fused[#loc42, #loc36])
#loc305 = loc(fused[#loc46, #loc44])
#loc306 = loc(fused[#loc47, #loc48])
#loc307 = loc(fused[#loc49, #loc51])
#loc308 = loc(fused[#loc52, #loc48])
#loc309 = loc(fused[#loc54, #loc56])
#loc310 = loc(fused[#loc57, #loc53])
#loc311 = loc(fused[#loc58, #loc59])
#loc312 = loc(fused[#loc62, #loc63])
#loc313 = loc(fused[#loc65, #loc59])
#loc314 = loc(fused[#loc71, #loc72])
#loc315 = loc(fused[#loc73, #loc74])
#loc316 = loc(fused[#loc75, #loc76])
#loc317 = loc(fused[#loc78, #loc74])
#loc318 = loc(fused[#loc81, #loc82])
#loc319 = loc(fused[#loc84, #loc85])
#loc320 = loc(fused[#loc86, #loc87])
#loc321 = loc(fused[#loc89, #loc82])
#loc322 = loc(fused[#loc92, #loc93])
#loc323 = loc(fused[#loc94, #loc95])
#loc324 = loc(fused[#loc97, #loc93])
#loc325 = loc(fused[#loc104, #loc105])
#loc326 = loc(fused[#loc106, #loc107])
#loc327 = loc(fused[#loc108, #loc109])
#loc328 = loc(fused[#loc110, #loc111])
#loc329 = loc(fused[#loc112, #loc113])
#loc330 = loc(fused[#loc118, #loc119])
#loc333 = loc(fused[#loc129, #loc130])
#loc334 = loc(fused[#loc133, #loc134])
#loc335 = loc(fused[#loc137, #loc136])
#loc336 = loc(fused[#loc139, #loc140])
#loc337 = loc(fused[#loc141, #loc142])
#loc338 = loc(fused[#loc149, #loc150])
#loc339 = loc(fused[#loc151, #loc152])
#loc340 = loc(fused[#loc153, #loc154])
#loc341 = loc(fused[#loc156, #loc157])
#loc342 = loc(fused[#loc161, #loc162])
#loc343 = loc(fused[#loc163, #loc157])
#loc344 = loc(fused[#loc168, #loc166])
#loc345 = loc(fused[#loc169, #loc170])
#loc346 = loc(fused[#loc171, #loc173])
#loc347 = loc(fused[#loc174, #loc170])
#loc348 = loc(fused[#loc176, #loc178])
#loc349 = loc(fused[#loc179, #loc175])
#loc350 = loc(fused[#loc183, #loc184])
#loc351 = loc(fused[#loc185, #loc186])
#loc352 = loc(fused[#loc187, #loc188])
#loc353 = loc(fused[#loc190, #loc186])
#loc354 = loc(fused[#loc193, #loc194])
#loc355 = loc(fused[#loc196, #loc197])
#loc356 = loc(fused[#loc198, #loc199])
#loc357 = loc(fused[#loc201, #loc194])
#loc358 = loc(fused[#loc204, #loc205])
#loc359 = loc(fused[#loc206, #loc207])
#loc360 = loc(fused[#loc209, #loc205])
#loc361 = loc(fused[#loc213, #loc214])
#loc362 = loc(fused[#loc215, #loc216])
#loc363 = loc(fused[#loc219, #loc220])
#loc364 = loc(fused[#loc221, #loc222])
#loc365 = loc(fused[#loc223, #loc224])
#loc366 = loc(fused[#loc226, #loc227])
#loc367 = loc(fused[#loc231, #loc232])
#loc368 = loc(fused[#loc233, #loc227])
#loc369 = loc(fused[#loc238, #loc236])
#loc370 = loc(fused[#loc239, #loc240])
#loc371 = loc(fused[#loc241, #loc243])
#loc372 = loc(fused[#loc244, #loc240])
#loc373 = loc(fused[#loc246, #loc248])
#loc374 = loc(fused[#loc249, #loc245])
#loc375 = loc(fused[#loc253, #loc254])
#loc376 = loc(fused[#loc255, #loc256])
#loc377 = loc(fused[#loc257, #loc258])
#loc378 = loc(fused[#loc260, #loc256])
#loc379 = loc(fused[#loc263, #loc264])
#loc380 = loc(fused[#loc267, #loc268])
#loc381 = loc(fused[#loc269, #loc270])
#loc382 = loc(fused[#loc272, #loc264])
#loc383 = loc(fused[#loc275, #loc276])
#loc384 = loc(fused[#loc277, #loc278])
#loc385 = loc(fused[#loc280, #loc276])
