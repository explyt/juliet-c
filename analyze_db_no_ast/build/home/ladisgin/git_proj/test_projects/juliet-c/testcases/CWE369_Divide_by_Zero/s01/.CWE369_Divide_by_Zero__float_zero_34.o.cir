!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!ty_CWE369_Divide_by_Zero__float_zero_34_unionType = !cir.struct<union "CWE369_Divide_by_Zero__float_zero_34_unionType" {!cir.float, !cir.float}>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_zero_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc94)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_zero_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc96)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__float_zero_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__float_zero_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc97)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc9)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc98)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc11)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc99)
    %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc13)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_zero_34_unionType> -> !cir.ptr<!cir.float> loc(#loc14)
    cir.store %4, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc100)
    cir.scope {
      %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc102)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_zero_34_unionType> -> !cir.ptr<!cir.float> loc(#loc20)
      %8 = cir.load %7 : !cir.ptr<!cir.float>, !cir.float loc(#loc19)
      cir.store %8, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc102)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc104)
        %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc25)
        %11 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc26)
        %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc26)
        %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc105)
        %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc105)
        cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc104)
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc28)
      } loc(#loc103)
    } loc(#loc101)
    cir.return loc(#loc4)
  } loc(#loc95)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_zero_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc106)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc110)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__float_zero_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__float_zero_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc111)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc41)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc112)
    %3 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc43)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc113)
    %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc45)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_zero_34_unionType> -> !cir.ptr<!cir.float> loc(#loc14)
    cir.store %4, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc114)
    cir.scope {
      %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc116)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_zero_34_unionType> -> !cir.ptr<!cir.float> loc(#loc20)
      %8 = cir.load %7 : !cir.ptr<!cir.float>, !cir.float loc(#loc50)
      cir.store %8, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc116)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc118)
        %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc55)
        %11 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc56)
        %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc56)
        %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc119)
        %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc119)
        cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc118)
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc57)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc58)
      } loc(#loc117)
    } loc(#loc115)
    cir.return loc(#loc36)
  } loc(#loc109)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc61)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__float_zero_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__float_zero_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc123)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc68)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc124)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc70)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc125)
    %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc72)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_zero_34_unionType> -> !cir.ptr<!cir.float> loc(#loc14)
    cir.store %4, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc126)
    cir.scope {
      %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc128)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_zero_34_unionType> -> !cir.ptr<!cir.float> loc(#loc20)
      %8 = cir.load %7 : !cir.ptr<!cir.float>, !cir.float loc(#loc77)
      cir.store %8, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc128)
      cir.scope {
        %9 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc80)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc80)
        %11 = cir.fabs %10 : !cir.double loc(#loc80)
        %12 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc81)
        %13 = cir.cmp(gt, %11, %12) : !cir.double, !s32i loc(#loc130)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc83)
        cir.if %14 {
          %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc132)
          %16 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc89)
          %17 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc90)
          %18 = cir.cast(floating, %17 : !cir.float), !cir.double loc(#loc90)
          %19 = cir.binop(div, %16, %18) : !cir.double loc(#loc133)
          %20 = cir.cast(float_to_int, %19 : !cir.double), !s32i loc(#loc133)
          cir.store %20, %15 : !s32i, !cir.ptr<!s32i> loc(#loc132)
          %21 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc92)
        } else {
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc61)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc61)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc93)
        } loc(#loc131)
      } loc(#loc129)
    } loc(#loc127)
    cir.return loc(#loc63)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_zero_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__float_zero_34.c":30:1)
#loc4 = loc("CWE369_Divide_by_Zero__float_zero_34.c":47:1)
#loc5 = loc("CWE369_Divide_by_Zero__float_zero_34.c":32:5)
#loc6 = loc("CWE369_Divide_by_Zero__float_zero_34.c":32:11)
#loc7 = loc("CWE369_Divide_by_Zero__float_zero_34.c":33:5)
#loc8 = loc("CWE369_Divide_by_Zero__float_zero_34.c":33:52)
#loc9 = loc("CWE369_Divide_by_Zero__float_zero_34.c":35:12)
#loc10 = loc("CWE369_Divide_by_Zero__float_zero_34.c":35:5)
#loc11 = loc("CWE369_Divide_by_Zero__float_zero_34.c":37:12)
#loc12 = loc("CWE369_Divide_by_Zero__float_zero_34.c":37:5)
#loc13 = loc("CWE369_Divide_by_Zero__float_zero_34.c":38:26)
#loc14 = loc("CWE369_Divide_by_Zero__float_zero_34.c":24:11)
#loc15 = loc("CWE369_Divide_by_Zero__float_zero_34.c":38:5)
#loc16 = loc("CWE369_Divide_by_Zero__float_zero_34.c":39:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_zero_34.c":46:5)
#loc18 = loc("CWE369_Divide_by_Zero__float_zero_34.c":40:9)
#loc19 = loc("CWE369_Divide_by_Zero__float_zero_34.c":40:30)
#loc20 = loc("CWE369_Divide_by_Zero__float_zero_34.c":25:11)
#loc21 = loc("CWE369_Divide_by_Zero__float_zero_34.c":41:9)
#loc22 = loc("CWE369_Divide_by_Zero__float_zero_34.c":45:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_zero_34.c":43:13)
#loc24 = loc("CWE369_Divide_by_Zero__float_zero_34.c":43:44)
#loc25 = loc("CWE369_Divide_by_Zero__float_zero_34.c":43:32)
#loc26 = loc("CWE369_Divide_by_Zero__float_zero_34.c":43:40)
#loc27 = loc("CWE369_Divide_by_Zero__float_zero_34.c":44:26)
#loc28 = loc("CWE369_Divide_by_Zero__float_zero_34.c":44:13)
#loc29 = loc("CWE369_Divide_by_Zero__float_zero_34.c":98:1)
#loc30 = loc("CWE369_Divide_by_Zero__float_zero_34.c":102:1)
#loc31 = loc("CWE369_Divide_by_Zero__float_zero_34.c":100:5)
#loc32 = loc("CWE369_Divide_by_Zero__float_zero_34.c":100:13)
#loc33 = loc("CWE369_Divide_by_Zero__float_zero_34.c":101:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_zero_34.c":101:13)
#loc35 = loc("CWE369_Divide_by_Zero__float_zero_34.c":54:1)
#loc36 = loc("CWE369_Divide_by_Zero__float_zero_34.c":71:1)
#loc37 = loc("CWE369_Divide_by_Zero__float_zero_34.c":56:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_zero_34.c":56:11)
#loc39 = loc("CWE369_Divide_by_Zero__float_zero_34.c":57:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_zero_34.c":57:52)
#loc41 = loc("CWE369_Divide_by_Zero__float_zero_34.c":59:12)
#loc42 = loc("CWE369_Divide_by_Zero__float_zero_34.c":59:5)
#loc43 = loc("CWE369_Divide_by_Zero__float_zero_34.c":61:12)
#loc44 = loc("CWE369_Divide_by_Zero__float_zero_34.c":61:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_zero_34.c":62:26)
#loc46 = loc("CWE369_Divide_by_Zero__float_zero_34.c":62:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_zero_34.c":63:5)
#loc48 = loc("CWE369_Divide_by_Zero__float_zero_34.c":70:5)
#loc49 = loc("CWE369_Divide_by_Zero__float_zero_34.c":64:9)
#loc50 = loc("CWE369_Divide_by_Zero__float_zero_34.c":64:30)
#loc51 = loc("CWE369_Divide_by_Zero__float_zero_34.c":65:9)
#loc52 = loc("CWE369_Divide_by_Zero__float_zero_34.c":69:9)
#loc53 = loc("CWE369_Divide_by_Zero__float_zero_34.c":67:13)
#loc54 = loc("CWE369_Divide_by_Zero__float_zero_34.c":67:44)
#loc55 = loc("CWE369_Divide_by_Zero__float_zero_34.c":67:32)
#loc56 = loc("CWE369_Divide_by_Zero__float_zero_34.c":67:40)
#loc57 = loc("CWE369_Divide_by_Zero__float_zero_34.c":68:26)
#loc58 = loc("CWE369_Divide_by_Zero__float_zero_34.c":68:13)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc61 = loc("CWE369_Divide_by_Zero__float_zero_34.c":93:23)
#loc62 = loc("CWE369_Divide_by_Zero__float_zero_34.c":74:1)
#loc63 = loc("CWE369_Divide_by_Zero__float_zero_34.c":96:1)
#loc64 = loc("CWE369_Divide_by_Zero__float_zero_34.c":76:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_zero_34.c":76:11)
#loc66 = loc("CWE369_Divide_by_Zero__float_zero_34.c":77:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_zero_34.c":77:52)
#loc68 = loc("CWE369_Divide_by_Zero__float_zero_34.c":79:12)
#loc69 = loc("CWE369_Divide_by_Zero__float_zero_34.c":79:5)
#loc70 = loc("CWE369_Divide_by_Zero__float_zero_34.c":81:12)
#loc71 = loc("CWE369_Divide_by_Zero__float_zero_34.c":81:5)
#loc72 = loc("CWE369_Divide_by_Zero__float_zero_34.c":82:26)
#loc73 = loc("CWE369_Divide_by_Zero__float_zero_34.c":82:5)
#loc74 = loc("CWE369_Divide_by_Zero__float_zero_34.c":83:5)
#loc75 = loc("CWE369_Divide_by_Zero__float_zero_34.c":95:5)
#loc76 = loc("CWE369_Divide_by_Zero__float_zero_34.c":84:9)
#loc77 = loc("CWE369_Divide_by_Zero__float_zero_34.c":84:30)
#loc78 = loc("CWE369_Divide_by_Zero__float_zero_34.c":86:9)
#loc79 = loc("CWE369_Divide_by_Zero__float_zero_34.c":94:9)
#loc80 = loc("CWE369_Divide_by_Zero__float_zero_34.c":86:17)
#loc81 = loc("CWE369_Divide_by_Zero__float_zero_34.c":86:25)
#loc82 = loc("CWE369_Divide_by_Zero__float_zero_34.c":86:12)
#loc83 = loc("CWE369_Divide_by_Zero__float_zero_34.c":86:23)
#loc84 = loc("CWE369_Divide_by_Zero__float_zero_34.c":87:9)
#loc85 = loc("CWE369_Divide_by_Zero__float_zero_34.c":90:9)
#loc86 = loc("CWE369_Divide_by_Zero__float_zero_34.c":92:9)
#loc87 = loc("CWE369_Divide_by_Zero__float_zero_34.c":88:13)
#loc88 = loc("CWE369_Divide_by_Zero__float_zero_34.c":88:44)
#loc89 = loc("CWE369_Divide_by_Zero__float_zero_34.c":88:32)
#loc90 = loc("CWE369_Divide_by_Zero__float_zero_34.c":88:40)
#loc91 = loc("CWE369_Divide_by_Zero__float_zero_34.c":89:26)
#loc92 = loc("CWE369_Divide_by_Zero__float_zero_34.c":89:13)
#loc93 = loc("CWE369_Divide_by_Zero__float_zero_34.c":93:13)
#loc94 = loc(fused[#loc1, #loc2])
#loc95 = loc(fused[#loc3, #loc4])
#loc96 = loc(fused[#loc5, #loc6])
#loc97 = loc(fused[#loc7, #loc8])
#loc98 = loc(fused[#loc10, #loc9])
#loc99 = loc(fused[#loc12, #loc11])
#loc100 = loc(fused[#loc15, #loc13])
#loc101 = loc(fused[#loc16, #loc17])
#loc102 = loc(fused[#loc18, #loc19])
#loc103 = loc(fused[#loc21, #loc22])
#loc104 = loc(fused[#loc23, #loc24])
#loc105 = loc(fused[#loc25, #loc26])
#loc106 = loc(fused[#loc29, #loc30])
#loc107 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc33, #loc34])
#loc109 = loc(fused[#loc35, #loc36])
#loc110 = loc(fused[#loc37, #loc38])
#loc111 = loc(fused[#loc39, #loc40])
#loc112 = loc(fused[#loc42, #loc41])
#loc113 = loc(fused[#loc44, #loc43])
#loc114 = loc(fused[#loc46, #loc45])
#loc115 = loc(fused[#loc47, #loc48])
#loc116 = loc(fused[#loc49, #loc50])
#loc117 = loc(fused[#loc51, #loc52])
#loc118 = loc(fused[#loc53, #loc54])
#loc119 = loc(fused[#loc55, #loc56])
#loc120 = loc(fused[#loc59, #loc60])
#loc121 = loc(fused[#loc62, #loc63])
#loc122 = loc(fused[#loc64, #loc65])
#loc123 = loc(fused[#loc66, #loc67])
#loc124 = loc(fused[#loc69, #loc68])
#loc125 = loc(fused[#loc71, #loc70])
#loc126 = loc(fused[#loc73, #loc72])
#loc127 = loc(fused[#loc74, #loc75])
#loc128 = loc(fused[#loc76, #loc77])
#loc129 = loc(fused[#loc78, #loc79])
#loc130 = loc(fused[#loc82, #loc81])
#loc131 = loc(fused[#loc84, #loc85, #loc86, #loc79])
#loc132 = loc(fused[#loc87, #loc88])
#loc133 = loc(fused[#loc89, #loc90])
