!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc167)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc168)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc169)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc170)
  cir.func private  @printLongLongLine(!s64i) loc(#loc171)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc18)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc175)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc177)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc177)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc170)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc170)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc27)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc29)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc179)
      } loc(#loc178)
    } loc(#loc176)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc181)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc181)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc33)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc33)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc184)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc42)
          %8 = cir.unary(inc, %7) : !s64i, !s64i loc(#loc42)
          cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc185)
          %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc41)
          cir.store %9, %6 : !s64i, !cir.ptr<!s64i> loc(#loc184)
          %10 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc44)
          cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc45)
        } loc(#loc183)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc48)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc49)
          %8 = cir.cmp(lt, %6, %7) : !s64i, !s32i loc(#loc187)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc50)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc189)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc56)
            %12 = cir.unary(inc, %11) : !s64i, !s64i loc(#loc56)
            cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc190)
            %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc55)
            cir.store %13, %10 : !s64i, !cir.ptr<!s64i> loc(#loc189)
            %14 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc58)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc59)
          } else {
            %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc13)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc13)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc60)
          } loc(#loc188)
        } loc(#loc186)
      } loc(#loc182)
    } loc(#loc180)
    cir.return loc(#loc15)
  } loc(#loc173)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc191)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc71)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc196)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc198)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc198)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc75)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc75)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc80)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc200)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc200)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc80)
      } else {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc84)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc201)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc201)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc84)
      } loc(#loc199)
    } loc(#loc197)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc203)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc203)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc90)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc90)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc97)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc98)
          %8 = cir.cmp(lt, %6, %7) : !s64i, !s32i loc(#loc206)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc99)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc208)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc105)
            %12 = cir.unary(inc, %11) : !s64i, !s64i loc(#loc105)
            cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc209)
            %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc104)
            cir.store %13, %10 : !s64i, !cir.ptr<!s64i> loc(#loc208)
            %14 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc107)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc108)
          } else {
            %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc109)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc109)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc110)
          } loc(#loc207)
        } loc(#loc205)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc113)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc114)
          %8 = cir.cmp(lt, %6, %7) : !s64i, !s32i loc(#loc211)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc115)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc213)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc121)
            %12 = cir.unary(inc, %11) : !s64i, !s64i loc(#loc121)
            cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc214)
            %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc120)
            cir.store %13, %10 : !s64i, !cir.ptr<!s64i> loc(#loc213)
            %14 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc123)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc124)
          } else {
            %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc125)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc125)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc126)
          } loc(#loc212)
        } loc(#loc210)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc68)
  } loc(#loc194)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc131)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc217)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc219)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc219)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc135)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc135)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc140)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc140)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc221)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc142)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc142)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc222)
      } loc(#loc220)
    } loc(#loc218)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc224)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc224)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc146)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc146)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc227)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc155)
          %8 = cir.unary(inc, %7) : !s64i, !s64i loc(#loc155)
          cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc228)
          %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc154)
          cir.store %9, %6 : !s64i, !cir.ptr<!s64i> loc(#loc227)
          %10 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc157)
          cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc158)
        } loc(#loc226)
      } else {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc230)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc163)
          %8 = cir.unary(inc, %7) : !s64i, !s64i loc(#loc163)
          cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc231)
          %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc162)
          cir.store %9, %6 : !s64i, !cir.ptr<!s64i> loc(#loc230)
          %10 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc165)
          cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc166)
        } loc(#loc229)
      } loc(#loc225)
    } loc(#loc223)
    cir.return loc(#loc128)
  } loc(#loc215)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":30:24)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":57:23)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":23:1)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":60:1)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":25:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":25:13)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":26:12)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":26:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":27:5)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":36:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":27:8)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":27:33)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":28:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":31:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":33:5)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":30:9)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":30:17)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":35:16)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":35:9)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":37:5)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":59:5)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":37:8)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":37:33)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":38:5)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":45:5)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":47:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":39:9)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":44:9)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":42:13)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":42:30)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":41:13)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":41:15)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":43:31)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":43:13)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":49:9)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":58:9)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":49:13)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":49:20)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":49:18)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":50:9)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":54:9)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":56:9)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":52:13)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":52:30)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":51:13)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":51:15)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":53:31)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":53:13)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":57:13)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":150:1)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":154:1)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":152:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":152:13)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":153:5)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":153:13)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":69:1)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":111:1)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":71:5)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":71:13)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":72:12)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":72:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":73:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":82:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":73:8)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":73:33)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":74:5)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":77:5)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":79:5)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":76:9)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":76:17)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":76:24)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":76:28)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":81:9)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":81:17)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":81:24)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":81:28)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":83:5)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":110:5)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":83:8)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":83:33)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":84:5)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":96:5)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":98:5)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":86:9)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":95:9)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":86:13)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":86:20)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":86:18)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":87:9)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":91:9)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":93:9)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":89:13)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":89:30)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":88:13)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":88:15)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":90:31)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":90:13)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":94:23)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":94:13)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":100:9)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":109:9)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":100:13)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":100:20)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":100:18)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":101:9)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":105:9)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":107:9)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":103:13)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":103:30)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":102:13)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":102:15)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":104:31)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":104:13)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":108:23)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":108:13)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":116:1)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":148:1)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":118:5)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":118:13)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":119:12)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":119:5)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":120:5)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":129:5)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":120:8)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":120:33)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":121:5)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":124:5)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":126:5)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":123:16)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":123:9)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":128:16)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":128:9)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":130:5)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":147:5)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":130:8)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":130:33)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":131:5)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":138:5)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":140:5)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":132:9)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":137:9)
#loc153 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":135:13)
#loc154 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":135:30)
#loc155 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":134:13)
#loc156 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":134:15)
#loc157 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":136:31)
#loc158 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":136:13)
#loc159 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":141:9)
#loc160 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":146:9)
#loc161 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":144:13)
#loc162 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":144:30)
#loc163 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":143:13)
#loc164 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":143:15)
#loc165 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":145:31)
#loc166 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_12.c":145:13)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc5, #loc6])
#loc170 = loc(fused[#loc7, #loc8])
#loc171 = loc(fused[#loc9, #loc10])
#loc172 = loc(fused[#loc11, #loc12])
#loc173 = loc(fused[#loc14, #loc15])
#loc174 = loc(fused[#loc16, #loc17])
#loc175 = loc(fused[#loc19, #loc18])
#loc176 = loc(fused[#loc20, #loc21])
#loc177 = loc(fused[#loc22, #loc23])
#loc178 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc179 = loc(fused[#loc30, #loc29])
#loc180 = loc(fused[#loc31, #loc32])
#loc181 = loc(fused[#loc33, #loc34])
#loc182 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc183 = loc(fused[#loc38, #loc39])
#loc184 = loc(fused[#loc40, #loc41])
#loc185 = loc(fused[#loc42, #loc43])
#loc186 = loc(fused[#loc46, #loc47])
#loc187 = loc(fused[#loc48, #loc49])
#loc188 = loc(fused[#loc51, #loc52, #loc53, #loc47])
#loc189 = loc(fused[#loc54, #loc55])
#loc190 = loc(fused[#loc56, #loc57])
#loc191 = loc(fused[#loc61, #loc62])
#loc192 = loc(fused[#loc63, #loc64])
#loc193 = loc(fused[#loc65, #loc66])
#loc194 = loc(fused[#loc67, #loc68])
#loc195 = loc(fused[#loc69, #loc70])
#loc196 = loc(fused[#loc72, #loc71])
#loc197 = loc(fused[#loc73, #loc74])
#loc198 = loc(fused[#loc75, #loc76])
#loc199 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc200 = loc(fused[#loc82, #loc83])
#loc201 = loc(fused[#loc86, #loc87])
#loc202 = loc(fused[#loc88, #loc89])
#loc203 = loc(fused[#loc90, #loc91])
#loc204 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc205 = loc(fused[#loc95, #loc96])
#loc206 = loc(fused[#loc97, #loc98])
#loc207 = loc(fused[#loc100, #loc101, #loc102, #loc96])
#loc208 = loc(fused[#loc103, #loc104])
#loc209 = loc(fused[#loc105, #loc106])
#loc210 = loc(fused[#loc111, #loc112])
#loc211 = loc(fused[#loc113, #loc114])
#loc212 = loc(fused[#loc116, #loc117, #loc118, #loc112])
#loc213 = loc(fused[#loc119, #loc120])
#loc214 = loc(fused[#loc121, #loc122])
#loc215 = loc(fused[#loc127, #loc128])
#loc216 = loc(fused[#loc129, #loc130])
#loc217 = loc(fused[#loc132, #loc131])
#loc218 = loc(fused[#loc133, #loc134])
#loc219 = loc(fused[#loc135, #loc136])
#loc220 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc221 = loc(fused[#loc141, #loc140])
#loc222 = loc(fused[#loc143, #loc142])
#loc223 = loc(fused[#loc144, #loc145])
#loc224 = loc(fused[#loc146, #loc147])
#loc225 = loc(fused[#loc148, #loc149, #loc150, #loc145])
#loc226 = loc(fused[#loc151, #loc152])
#loc227 = loc(fused[#loc153, #loc154])
#loc228 = loc(fused[#loc155, #loc156])
#loc229 = loc(fused[#loc159, #loc160])
#loc230 = loc(fused[#loc161, #loc162])
#loc231 = loc(fused[#loc163, #loc164])
