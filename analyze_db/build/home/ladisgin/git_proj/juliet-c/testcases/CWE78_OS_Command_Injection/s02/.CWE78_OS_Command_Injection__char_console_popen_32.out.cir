!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:37)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":135:10)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":135:14)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":135:20)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":135:32)
#true = #cir.bool<true> : !cir.bool
#loc231 = loc(fused[#loc121, #loc122])
#loc232 = loc(fused[#loc123, #loc124])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc183)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_32_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc184)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc185)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc186)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc187)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc16)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc190)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc194)
    %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc195)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc197)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc198)
    %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc184)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc197)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc198)
    %8 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_32_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc184)
    cir.copy %8 to %7 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc184)
    %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %10 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.br ^bb2 loc(#loc201)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc42)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc42)
    cir.store %14, %1 : !u64i, !cir.ptr<!u64i> loc(#loc193)
    cir.br ^bb3 loc(#loc202)
  ^bb3:  // pred: ^bb2
    %15 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc46)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %18 = cir.binop(sub, %16, %17) : !u64i loc(#loc203)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc48)
    %21 = cir.cmp(gt, %18, %20) : !u64i, !cir.bool loc(#loc204)
    cir.brcond %21 ^bb4, ^bb22 loc(#loc205)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc206)
  ^bb5:  // pred: ^bb4
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc54)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc55)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc207)
    %29 = cir.cast(integral, %28 : !u64i), !s32i loc(#loc207)
    %30 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc187)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
    %32 = cir.call @fgets(%24, %29, %31) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc58)
    %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
    %35 = cir.cmp(ne, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc208)
    cir.brcond %35 ^bb6, ^bb19 loc(#loc209)
  ^bb6:  // pred: ^bb5
    %36 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc63)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %38 = cir.call @strlen(%37) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc63)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.br ^bb7 loc(#loc211)
  ^bb7:  // pred: ^bb6
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc70)
    %42 = cir.cmp(gt, %39, %41) : !u64i, !cir.bool loc(#loc212)
    cir.brcond %42 ^bb8, ^bb13 loc(#loc71)
  ^bb8:  // pred: ^bb7
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc74)
    %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc213)
    %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc75)
    %49 = cir.load %48 : !cir.ptr<!s8i>, !s8i loc(#loc72)
    %50 = cir.cast(integral, %49 : !s8i), !s32i loc(#loc72)
    %51 = cir.const #cir.int<10> : !s32i loc(#loc76)
    %52 = cir.cmp(eq, %50, %51) : !s32i, !cir.bool loc(#loc214)
    cir.brcond %52 ^bb9, ^bb10 loc(#loc71)
  ^bb9:  // pred: ^bb8
    %53 = cir.const #true loc(#loc71)
    cir.br ^bb11(%53 : !cir.bool) loc(#loc71)
  ^bb10:  // pred: ^bb8
    %54 = cir.const #false loc(#loc71)
    cir.br ^bb11(%54 : !cir.bool) loc(#loc71)
  ^bb11(%55: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:37)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc71)
  ^bb12:  // pred: ^bb11
    cir.br ^bb14(%55 : !cir.bool) loc(#loc71)
  ^bb13:  // pred: ^bb7
    %56 = cir.const #false loc(#loc71)
    cir.br ^bb14(%56 : !cir.bool) loc(#loc71)
  ^bb14(%57: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:37)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc71)
  ^bb15:  // pred: ^bb14
    cir.brcond %57 ^bb16, ^bb17 loc(#loc215)
  ^bb16:  // pred: ^bb15
    %58 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc78)
    %60 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %61 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc81)
    %64 = cir.binop(sub, %61, %63) : !u64i loc(#loc216)
    %65 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %59, %65 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    cir.br ^bb17 loc(#loc68)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc68)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc61)
  ^bb19:  // pred: ^bb5
    %66 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
    %67 = cir.cast(array_to_ptrdecay, %66 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%67) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %69 = cir.cast(integral, %68 : !s32i), !s8i loc(#loc84)
    %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %71 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc86)
    %72 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %71 : !u64i), !cir.ptr<!s8i> loc(#loc87)
    cir.store %69, %72 : !s8i, !cir.ptr<!s8i> loc(#loc218)
    cir.br ^bb20 loc(#loc51)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc51)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc45)
  ^bb22:  // 2 preds: ^bb3, ^bb21
    cir.br ^bb23 loc(#loc45)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc41)
  ^bb24:  // pred: ^bb23
    %73 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %74 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    cir.store %73, %74 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.br ^bb25 loc(#loc38)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc220)
  ^bb26:  // pred: ^bb25
    %75 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
    %76 = cir.load %75 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    cir.store %76, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    cir.br ^bb27 loc(#loc221)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %78 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc16)
    %79 = cir.cast(array_to_ptrdecay, %78 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc16)
    %80 = cir.call @popen(%77, %79) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc97)
    cir.store %80, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc222)
    cir.br ^bb28 loc(#loc223)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc102)
    %82 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %83 = cir.cast(bitcast, %82 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc103)
    %84 = cir.cmp(ne, %81, %83) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc224)
    cir.brcond %84 ^bb29, ^bb30 loc(#loc225)
  ^bb29:  // pred: ^bb28
    %85 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc105)
    %86 = cir.call @pclose(%85) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc106)
    cir.br ^bb30 loc(#loc101)
  ^bb30:  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc101)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc95)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc92)
  ^bb33:  // pred: ^bb32
    cir.return loc(#loc20)
  } loc(#loc191)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc109)
    cir.return loc(#loc108)
  } loc(#loc226)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc228)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc118)
  cir.func @main(%arg0: !s32i loc(fused[#loc121, #loc122]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc123, #loc124])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc232)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc120)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc125)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc126)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc127)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc127)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc128)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc115)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_32_good() : () -> () loc(#loc130)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc116)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc117)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_32_bad() : () -> () loc(#loc134)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc118)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc137)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    cir.return %17 : !s32i loc(#loc235)
  } loc(#loc230)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc141)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc239)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc240)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc242)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc243)
    %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc183)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc242)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc243)
    %7 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc183)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc183)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
    cir.br ^bb1 loc(#loc245)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    %11 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc161)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %13 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc141)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc141)
    %15 = cir.call @strcat(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc161)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.store %16, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
    cir.br ^bb2 loc(#loc159)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc247)
  ^bb3:  // pred: ^bb2
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
    cir.br ^bb4 loc(#loc248)
  ^bb4:  // pred: ^bb3
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc172)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc172)
    %23 = cir.call @popen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc173)
    cir.store %23, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc249)
    cir.br ^bb5 loc(#loc250)
  ^bb5:  // pred: ^bb4
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc178)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc179)
    %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc251)
    cir.brcond %27 ^bb6, ^bb7 loc(#loc252)
  ^bb6:  // pred: ^bb5
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc181)
    %29 = cir.call @pclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc182)
    cir.br ^bb7 loc(#loc177)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc177)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc170)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc167)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc143)
  } loc(#loc237)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":99:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":99:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":44:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":44:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":67:31)
#loc14 = loc("/usr/include/stdio.h":893:1)
#loc15 = loc("/usr/include/stdio.h":894:3)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:32)
#loc17 = loc("/usr/include/stdio.h":887:1)
#loc18 = loc("/usr/include/stdio.h":887:36)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":39:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":87:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":47:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":47:24)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":50:13)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":50:41)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":76:9)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":76:24)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":78:13)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":78:19)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":41:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":41:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":42:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":42:25)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":43:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":43:25)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":45:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":45:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":46:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":74:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":47:23)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":48:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":72:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":50:30)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":50:37)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":52:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":71:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":52:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":52:21)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":52:31)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":53:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":70:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:27)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:32)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:31)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:47)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:51)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:61)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":55:71)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":56:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":64:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":66:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":59:31)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":59:38)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":59:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":59:42)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":63:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:25)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:35)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:40)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:45)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:53)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:54)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":60:59)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":61:21)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:43)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:25)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:30)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:38)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":62:39)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":67:21)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":69:37)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":69:21)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":69:26)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":69:33)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":73:21)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":73:10)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":73:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":75:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":86:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":76:23)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":77:9)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":85:9)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:26)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:20)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:13)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":80:35)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":81:13)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":84:13)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":81:17)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":81:25)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":82:13)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":83:24)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":83:17)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":121:1)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":124:1)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":123:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":123:13)
#loc111 = loc("/usr/include/stdlib.h":575:1)
#loc112 = loc("/usr/include/stdlib.h":575:41)
#loc113 = loc("/usr/include/time.h":76:1)
#loc114 = loc("/usr/include/time.h":76:38)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":140:15)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":142:15)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":145:15)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":147:15)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":135:1)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":150:1)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":136:1)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":138:27)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":138:22)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":138:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":140:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":141:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":141:60)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":142:5)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":145:5)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":146:5)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":146:59)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":147:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":149:12)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":149:5)
#loc139 = loc("/usr/include/string.h":149:1)
#loc140 = loc("/usr/include/string.h":150:14)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":104:22)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":94:1)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":119:1)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":102:9)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":102:24)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":108:9)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":108:24)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":110:13)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":110:19)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":96:5)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":96:12)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":97:5)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":97:25)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":98:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":98:25)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":100:12)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":100:5)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":101:5)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":106:5)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":102:23)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":104:9)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":104:16)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":105:21)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":105:10)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":105:9)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":107:5)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":118:5)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":108:23)
#loc169 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":109:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":117:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:26)
#loc172 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:32)
#loc173 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:20)
#loc174 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:13)
#loc175 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":112:35)
#loc176 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":113:13)
#loc177 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":116:13)
#loc178 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":113:17)
#loc179 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":113:25)
#loc180 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":114:13)
#loc181 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":115:24)
#loc182 = loc("CWE78_OS_Command_Injection__char_console_popen_32.c":115:17)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc9, #loc10])
#loc188 = loc(fused[#loc11, #loc12])
#loc189 = loc(fused[#loc14, #loc15])
#loc190 = loc(fused[#loc17, #loc18])
#loc191 = loc(fused[#loc19, #loc20])
#loc192 = loc(fused[#loc21, #loc22])
#loc193 = loc(fused[#loc23, #loc24])
#loc194 = loc(fused[#loc25, #loc26])
#loc195 = loc(fused[#loc27, #loc28])
#loc196 = loc(fused[#loc29, #loc30])
#loc197 = loc(fused[#loc31, #loc32])
#loc198 = loc(fused[#loc33, #loc34])
#loc199 = loc(fused[#loc36, #loc35])
#loc200 = loc(fused[#loc37, #loc38])
#loc201 = loc(fused[#loc40, #loc41])
#loc202 = loc(fused[#loc44, #loc45])
#loc203 = loc(fused[#loc46, #loc47])
#loc204 = loc(fused[#loc46, #loc48])
#loc205 = loc(fused[#loc49, #loc45])
#loc206 = loc(fused[#loc50, #loc51])
#loc207 = loc(fused[#loc55, #loc56])
#loc208 = loc(fused[#loc58, #loc59])
#loc209 = loc(fused[#loc60, #loc61, #loc62, #loc51])
#loc210 = loc(fused[#loc65, #loc66])
#loc211 = loc(fused[#loc67, #loc68])
#loc212 = loc(fused[#loc69, #loc70])
#loc213 = loc(fused[#loc73, #loc74])
#loc214 = loc(fused[#loc72, #loc76])
#loc215 = loc(fused[#loc77, #loc68])
#loc216 = loc(fused[#loc80, #loc81])
#loc217 = loc(fused[#loc79, #loc78])
#loc218 = loc(fused[#loc85, #loc84])
#loc219 = loc(fused[#loc90, #loc88])
#loc220 = loc(fused[#loc91, #loc92])
#loc221 = loc(fused[#loc94, #loc95])
#loc222 = loc(fused[#loc98, #loc99])
#loc223 = loc(fused[#loc100, #loc101])
#loc224 = loc(fused[#loc102, #loc103])
#loc225 = loc(fused[#loc104, #loc101])
#loc226 = loc(fused[#loc107, #loc108])
#loc227 = loc(fused[#loc109, #loc110])
#loc228 = loc(fused[#loc111, #loc112])
#loc229 = loc(fused[#loc113, #loc114])
#loc230 = loc(fused[#loc119, #loc120])
#loc233 = loc(fused[#loc130, #loc131])
#loc234 = loc(fused[#loc134, #loc135])
#loc235 = loc(fused[#loc138, #loc137])
#loc236 = loc(fused[#loc139, #loc140])
#loc237 = loc(fused[#loc142, #loc143])
#loc238 = loc(fused[#loc144, #loc145])
#loc239 = loc(fused[#loc146, #loc147])
#loc240 = loc(fused[#loc148, #loc149])
#loc241 = loc(fused[#loc150, #loc151])
#loc242 = loc(fused[#loc152, #loc153])
#loc243 = loc(fused[#loc154, #loc155])
#loc244 = loc(fused[#loc157, #loc156])
#loc245 = loc(fused[#loc158, #loc159])
#loc246 = loc(fused[#loc165, #loc163])
#loc247 = loc(fused[#loc166, #loc167])
#loc248 = loc(fused[#loc169, #loc170])
#loc249 = loc(fused[#loc174, #loc175])
#loc250 = loc(fused[#loc176, #loc177])
#loc251 = loc(fused[#loc178, #loc179])
#loc252 = loc(fused[#loc180, #loc177])
