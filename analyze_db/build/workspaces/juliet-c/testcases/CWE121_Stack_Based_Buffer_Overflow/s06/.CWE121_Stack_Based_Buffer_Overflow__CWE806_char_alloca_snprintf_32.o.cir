!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc107)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc109)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc113)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc114)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc112)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc17)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc17)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc17)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
      %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc23)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
      %15 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
      %17 = cir.const #cir.int<65> : !s32i loc(#loc26)
      %18 = cir.const #cir.int<100> : !s32i loc(#loc27)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc27)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc27)
      cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc118)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc31)
      %24 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      %25 = cir.const #cir.int<100> : !s32i loc(#loc33)
      %26 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc33)
      %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc35)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc119)
      %29 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %30 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc37)
      cir.store %29, %30 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    } loc(#loc116)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
      %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc124)
        %16 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc124)
        cir.store %16, %15 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc124)
        %17 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc48)
        %18 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc49)
        %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc50)
        %20 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc50)
        %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %24 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
        %25 = cir.call @snprintf(%18, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc48)
        %26 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc54)
      } loc(#loc123)
    } loc(#loc121)
    cir.return loc(#loc9)
  } loc(#loc110)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc57)
    cir.return loc(#loc56)
  } loc(#loc125)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc130)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc131)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc129)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc130)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc68)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc68)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc68)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc68)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc68)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc68)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc134)
      %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
      %15 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
      %17 = cir.const #cir.int<65> : !s32i loc(#loc77)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc78)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc79)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc78)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc78)
      cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc135)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc82)
      %24 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %25 = cir.const #cir.int<50> : !s32i loc(#loc84)
      %26 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc84)
      %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc86)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc136)
      %29 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      %30 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
      cir.store %29, %30 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    } loc(#loc133)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
      %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc141)
        %16 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc141)
        cir.store %16, %15 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc141)
        %17 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc99)
        %18 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc100)
        %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc101)
        %20 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
        %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc101)
        %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc103)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc103)
        %24 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %25 = cir.call @snprintf(%18, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc99)
        %26 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc106)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc60)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":48:42)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":29:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":52:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":31:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":31:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":32:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":32:25)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":33:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":33:25)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":34:33)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":35:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":35:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":36:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":42:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":37:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":37:24)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":37:23)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":39:16)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":39:22)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":39:27)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":39:31)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":39:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":39:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":40:23)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":40:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":40:14)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":40:18)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":40:19)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":41:21)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":41:10)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":41:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":43:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":51:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":44:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":44:24)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":44:23)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":45:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":50:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":46:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":46:29)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":48:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":48:22)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":48:28)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":48:35)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":48:48)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":49:23)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":49:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":84:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":87:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":86:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":86:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":59:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":82:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":61:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":61:12)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":62:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":62:25)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":63:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":63:25)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":64:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":64:33)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":65:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":65:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":66:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":72:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":67:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":67:24)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":67:23)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":69:16)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":69:22)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":69:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":69:30)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":69:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":69:31)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":70:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":70:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":70:14)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":70:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":70:18)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":71:21)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":71:10)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":71:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":73:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":81:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":74:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":74:24)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":74:23)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":75:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":80:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":76:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":76:29)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":78:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":78:22)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":78:28)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":78:35)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":78:42)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":78:48)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":79:23)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_32.c":79:13)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc6, #loc7])
#loc110 = loc(fused[#loc8, #loc9])
#loc111 = loc(fused[#loc10, #loc11])
#loc112 = loc(fused[#loc12, #loc13])
#loc113 = loc(fused[#loc14, #loc15])
#loc114 = loc(fused[#loc16, #loc17])
#loc115 = loc(fused[#loc19, #loc18])
#loc116 = loc(fused[#loc20, #loc21])
#loc117 = loc(fused[#loc22, #loc23])
#loc118 = loc(fused[#loc29, #loc30])
#loc119 = loc(fused[#loc32, #loc31])
#loc120 = loc(fused[#loc38, #loc36])
#loc121 = loc(fused[#loc39, #loc40])
#loc122 = loc(fused[#loc41, #loc42])
#loc123 = loc(fused[#loc44, #loc45])
#loc124 = loc(fused[#loc46, #loc47])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc57, #loc58])
#loc127 = loc(fused[#loc59, #loc60])
#loc128 = loc(fused[#loc61, #loc62])
#loc129 = loc(fused[#loc63, #loc64])
#loc130 = loc(fused[#loc65, #loc66])
#loc131 = loc(fused[#loc67, #loc68])
#loc132 = loc(fused[#loc70, #loc69])
#loc133 = loc(fused[#loc71, #loc72])
#loc134 = loc(fused[#loc73, #loc74])
#loc135 = loc(fused[#loc80, #loc81])
#loc136 = loc(fused[#loc83, #loc82])
#loc137 = loc(fused[#loc89, #loc87])
#loc138 = loc(fused[#loc90, #loc91])
#loc139 = loc(fused[#loc92, #loc93])
#loc140 = loc(fused[#loc95, #loc96])
#loc141 = loc(fused[#loc97, #loc98])
