!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc74)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badSource(!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc75)
  cir.func private @printLongLongLine(!s64i) loc(#loc76)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc77)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc80)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badGlobal : !cir.ptr<!s32i> loc(#loc74)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc17)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badSource(%4) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc18)
    cir.store %5, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc82)
    %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc21)
    %7 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc22)
    cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc23)
    %8 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc24)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc25)
    cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc24)
    cir.return loc(#loc10)
  } loc(#loc78)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc83)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc84)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc87)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc85)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Source(!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc88)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc91)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc83)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc46)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Source(%4) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc47)
    cir.store %5, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc93)
    %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc50)
    %7 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc51)
    cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc52)
    %8 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc53)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc54)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc54)
    cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    cir.return loc(#loc39)
  } loc(#loc89)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Source(!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc94)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc97)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc84)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc65)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Source(%4) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc66)
    cir.store %5, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc99)
    %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc69)
    %7 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc70)
    cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc71)
    %8 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc72)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc73)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc73)
    cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    cir.return loc(#loc58)
  } loc(#loc95)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":22:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":22:70)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":24:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":24:88)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":26:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":36:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":28:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":28:15)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":30:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":30:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":31:70)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":31:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":32:75)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":32:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":32:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":32:79)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":34:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":34:23)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":34:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":35:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":35:10)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":43:1)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":43:75)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":44:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":44:75)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":76:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":80:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":78:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":78:14)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":79:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":79:14)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":47:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":47:93)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":49:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":59:1)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":51:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":51:15)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":53:12)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":53:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":54:75)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":54:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":55:80)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":55:12)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":55:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":55:84)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":57:24)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":57:23)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":57:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":58:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":58:10)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":62:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":62:93)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":64:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":74:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":66:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":66:15)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":68:12)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":68:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":69:75)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":69:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":70:80)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":70:12)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":70:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":70:84)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":72:24)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":72:23)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":72:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":73:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22a.c":73:10)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc3, #loc4])
#loc76 = loc(fused[#loc5, #loc6])
#loc77 = loc(fused[#loc7, #loc8])
#loc78 = loc(fused[#loc9, #loc10])
#loc79 = loc(fused[#loc11, #loc12])
#loc80 = loc(fused[#loc14, #loc13])
#loc81 = loc(fused[#loc16, #loc15])
#loc82 = loc(fused[#loc19, #loc20])
#loc83 = loc(fused[#loc26, #loc27])
#loc84 = loc(fused[#loc28, #loc29])
#loc85 = loc(fused[#loc30, #loc31])
#loc86 = loc(fused[#loc32, #loc33])
#loc87 = loc(fused[#loc34, #loc35])
#loc88 = loc(fused[#loc36, #loc37])
#loc89 = loc(fused[#loc38, #loc39])
#loc90 = loc(fused[#loc40, #loc41])
#loc91 = loc(fused[#loc43, #loc42])
#loc92 = loc(fused[#loc45, #loc44])
#loc93 = loc(fused[#loc48, #loc49])
#loc94 = loc(fused[#loc55, #loc56])
#loc95 = loc(fused[#loc57, #loc58])
#loc96 = loc(fused[#loc59, #loc60])
#loc97 = loc(fused[#loc62, #loc61])
#loc98 = loc(fused[#loc64, #loc63])
#loc99 = loc(fused[#loc67, #loc68])
