!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc131)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc132)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc14)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc14)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %18 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %19 ^bb2, ^bb3 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    cir.store %20, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc21)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc136)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc137)
  ^bb5:  // pred: ^bb4
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %28 = cir.const #cir.int<67> : !s32i loc(#loc28)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc29)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc29)
    cir.libc.memset %32 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc138)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc33)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc34)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %40 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc37)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %43 = cir.call @strcat(%41, %42) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc128)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc146)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc56)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc56)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc56)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc56)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc56)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc147)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc56)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc58)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc58)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc58)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %18 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc61)
    cir.brcond %19 ^bb2, ^bb3 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb4 loc(#loc63)
  ^bb3:  // pred: ^bb1
    %22 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.store %22, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc68)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc71)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    cir.br ^bb4 loc(#loc60)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc152)
  ^bb6:  // pred: ^bb5
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc75)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc76)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc76)
    cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc80)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc81)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc83)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    %42 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc84)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
    %45 = cir.call @strcat(%43, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc84)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc50)
  } loc(#loc143)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc158)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc96)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc96)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc96)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc159)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc98)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc98)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc98)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc98)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc98)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %18 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc101)
    cir.brcond %19 ^bb2, ^bb3 loc(#loc161)
  ^bb2:  // pred: ^bb1
    %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.store %20, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc105)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    cir.br ^bb3 loc(#loc100)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc164)
  ^bb5:  // pred: ^bb4
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %28 = cir.const #cir.int<67> : !s32i loc(#loc112)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc113)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc113)
    cir.libc.memset %32 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc165)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc117)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc118)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc120)
    cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    %40 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc121)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    %43 = cir.call @strcat(%41, %42) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb6 loc(#loc110)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc90)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":30:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":50:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":43:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":43:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":32:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":32:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":33:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":33:36)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":34:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":34:37)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":35:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":41:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":35:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":36:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":39:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":39:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":40:19)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":40:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":40:14)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":40:15)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":42:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":49:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":44:16)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":44:24)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":44:29)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":44:33)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":44:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":44:34)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":45:25)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":45:16)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":45:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":45:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":47:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":47:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":47:22)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":48:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":48:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":105:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":109:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":107:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":107:14)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":108:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":108:14)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":65:19)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":57:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":81:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":74:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":74:24)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":59:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":59:12)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":60:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":60:36)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":61:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":61:37)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":62:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":72:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":62:8)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":63:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":66:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":68:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":65:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":70:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":70:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":71:19)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":71:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":71:14)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":71:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":73:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":80:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":75:16)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":75:24)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":75:29)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":75:33)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":75:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":75:34)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":76:25)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":76:16)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":76:20)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":76:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":78:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":78:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":78:22)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":79:19)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":79:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":84:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":103:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":96:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":96:24)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":86:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":86:12)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":87:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":87:36)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":88:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":88:37)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":89:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":94:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":89:8)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":90:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":92:16)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":92:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":93:19)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":93:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":93:14)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":93:15)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":95:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":102:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":97:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":97:24)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":97:29)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":97:33)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":97:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":97:34)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":98:25)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":98:16)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":98:20)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":98:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":100:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":100:16)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":100:22)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":101:19)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_04.c":101:9)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc7, #loc8])
#loc130 = loc(fused[#loc9, #loc10])
#loc131 = loc(fused[#loc11, #loc12])
#loc132 = loc(fused[#loc13, #loc14])
#loc133 = loc(fused[#loc15, #loc16])
#loc134 = loc(fused[#loc18, #loc16])
#loc135 = loc(fused[#loc20, #loc19])
#loc136 = loc(fused[#loc22, #loc21])
#loc137 = loc(fused[#loc25, #loc26])
#loc138 = loc(fused[#loc31, #loc32])
#loc139 = loc(fused[#loc36, #loc33])
#loc140 = loc(fused[#loc42, #loc43])
#loc141 = loc(fused[#loc44, #loc45])
#loc142 = loc(fused[#loc46, #loc47])
#loc143 = loc(fused[#loc49, #loc50])
#loc144 = loc(fused[#loc51, #loc52])
#loc145 = loc(fused[#loc53, #loc54])
#loc146 = loc(fused[#loc55, #loc56])
#loc147 = loc(fused[#loc57, #loc58])
#loc148 = loc(fused[#loc59, #loc60])
#loc149 = loc(fused[#loc62, #loc63, #loc64, #loc60])
#loc150 = loc(fused[#loc67, #loc66])
#loc151 = loc(fused[#loc69, #loc68])
#loc152 = loc(fused[#loc72, #loc73])
#loc153 = loc(fused[#loc78, #loc79])
#loc154 = loc(fused[#loc83, #loc80])
#loc155 = loc(fused[#loc89, #loc90])
#loc156 = loc(fused[#loc91, #loc92])
#loc157 = loc(fused[#loc93, #loc94])
#loc158 = loc(fused[#loc95, #loc96])
#loc159 = loc(fused[#loc97, #loc98])
#loc160 = loc(fused[#loc99, #loc100])
#loc161 = loc(fused[#loc102, #loc100])
#loc162 = loc(fused[#loc104, #loc103])
#loc163 = loc(fused[#loc106, #loc105])
#loc164 = loc(fused[#loc109, #loc110])
#loc165 = loc(fused[#loc115, #loc116])
#loc166 = loc(fused[#loc120, #loc117])
