!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":89:10)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":89:14)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":89:20)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":89:32)
#loc135 = loc(fused[#loc94, #loc95])
#loc136 = loc(fused[#loc96, #loc97])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc110)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc113)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc15)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc118)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
      %5 = cir.const #cir.int<67> : !s8i loc(#loc21)
      %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc21)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc22)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc23)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc22)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc22)
      cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc119)
      %11 = cir.const #cir.int<0> : !s8i loc(#loc26)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc27)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc27)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc29)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc120)
      %17 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc30)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc33)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc33)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc33)
      %24 = cir.call @strncpy(%18, %19, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
      %25 = cir.const #cir.int<0> : !s8i loc(#loc35)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc37)
      %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc39)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc121)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc41)
      %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc42)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc43)
      cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc42)
    } loc(#loc117)
    cir.return loc(#loc10)
  } loc(#loc114)
  cir.func private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc122)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc50)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc52)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc127)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      %5 = cir.const #cir.int<67> : !s8i loc(#loc58)
      %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc58)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc59)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc59)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc59)
      cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc128)
      %11 = cir.const #cir.int<0> : !s8i loc(#loc63)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc64)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc129)
      %17 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc67)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc70)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc71)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc70)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc70)
      %24 = cir.call @strncpy(%18, %19, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc67)
      %25 = cir.const #cir.int<0> : !s8i loc(#loc72)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc74)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc75)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc74)
      %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc76)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc130)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc78)
      %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc79)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
      cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
    } loc(#loc126)
    cir.return loc(#loc47)
  } loc(#loc123)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62L7goodG2BEv() : () -> () loc(#loc83)
    cir.return loc(#loc82)
  } loc(#loc131)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc132)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc91)
  cir.func @main(%arg0: !s32i loc(fused[#loc94, #loc95]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc96, #loc97])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc93)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc98)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc99)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc100)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc100)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc101)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc88)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_624goodEv() : () -> () loc(#loc103)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc89)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc90)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_623badEv() : () -> () loc(#loc106)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc91)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.return %15 : !s32i loc(#loc137)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":27:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":27:28)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":29:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":44:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":31:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":31:12)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":32:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":32:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":33:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":34:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":43:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":35:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":35:24)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":36:16)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":36:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":36:29)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":36:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":36:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":36:34)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":37:25)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":37:16)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":37:20)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":37:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":39:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":39:17)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":39:23)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":39:31)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":39:35)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":40:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":40:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":40:14)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":40:18)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":40:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":41:19)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":41:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":42:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":42:14)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":51:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":51:32)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":53:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":68:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":55:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":55:12)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":56:12)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":56:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":57:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":58:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":67:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":59:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":59:24)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":60:16)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":60:24)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":60:29)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":60:33)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":60:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":60:34)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":61:25)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":61:16)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":61:20)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":61:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":63:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":63:17)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":63:23)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":63:31)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":63:35)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":64:23)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":64:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":64:14)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":64:18)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":64:19)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":65:19)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":65:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":66:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":66:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":70:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":73:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":72:5)
#loc84 = loc("/usr/include/stdlib.h":575:1)
#loc85 = loc("/usr/include/stdlib.h":575:41)
#loc86 = loc("/usr/include/time.h":76:1)
#loc87 = loc("/usr/include/time.h":76:38)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":94:15)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":96:15)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":99:15)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":101:15)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":89:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":104:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":90:1)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":92:27)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":92:22)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":92:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":94:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":95:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":96:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":99:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":100:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":101:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":103:12)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_62a.cpp":103:5)
#loc110 = loc(fused[#loc1, #loc2])
#loc111 = loc(fused[#loc3, #loc4])
#loc112 = loc(fused[#loc5, #loc6])
#loc113 = loc(fused[#loc7, #loc8])
#loc114 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc11, #loc12])
#loc116 = loc(fused[#loc14, #loc13])
#loc117 = loc(fused[#loc16, #loc17])
#loc118 = loc(fused[#loc18, #loc19])
#loc119 = loc(fused[#loc24, #loc25])
#loc120 = loc(fused[#loc29, #loc26])
#loc121 = loc(fused[#loc36, #loc35])
#loc122 = loc(fused[#loc44, #loc45])
#loc123 = loc(fused[#loc46, #loc47])
#loc124 = loc(fused[#loc48, #loc49])
#loc125 = loc(fused[#loc51, #loc50])
#loc126 = loc(fused[#loc53, #loc54])
#loc127 = loc(fused[#loc55, #loc56])
#loc128 = loc(fused[#loc61, #loc62])
#loc129 = loc(fused[#loc66, #loc63])
#loc130 = loc(fused[#loc73, #loc72])
#loc131 = loc(fused[#loc81, #loc82])
#loc132 = loc(fused[#loc84, #loc85])
#loc133 = loc(fused[#loc86, #loc87])
#loc134 = loc(fused[#loc92, #loc93])
#loc137 = loc(fused[#loc109, #loc108])
