!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc257)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_system_32_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc258)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc259)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc260)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc261)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc262)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc263)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc264)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc265)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc266)
  cir.func private @close(!s32i) -> !s32i loc(#loc267)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc268)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc269)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc27)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc270)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc272)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc273)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc274)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc258)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc273)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc274)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_system_32_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc258)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc258)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc277)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc279)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc280)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc281)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc282)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc283)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc284)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc54)
        cir.store %18, %14 : !s32i, !cir.ptr<!s32i> loc(#loc282)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc56)
        cir.store %20, %15 : !s32i, !cir.ptr<!s32i> loc(#loc283)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc59)
        %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc59)
        cir.store %23, %16 : !u64i, !cir.ptr<!u64i> loc(#loc284)
        cir.scope {
          cir.do {
            cir.scope {
              %24 = cir.const #cir.int<2> : !s32i loc(#loc65)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc66)
              %26 = cir.const #cir.int<6> : !s32i loc(#loc67)
              %27 = cir.call @socket(%24, %25, %26) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc68)
              cir.store %27, %14 : !s32i, !cir.ptr<!s32i> loc(#loc287)
              cir.scope {
                %81 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc73)
                %82 = cir.const #cir.int<1> : !s32i loc(#loc74)
                %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc74)
                %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc289)
                cir.if %84 {
                  cir.break loc(#loc76)
                } loc(#loc290)
              } loc(#loc288)
              %28 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc291)
              %29 = cir.const #cir.int<0> : !s32i loc(#loc79)
              %30 = cir.const #cir.int<16> : !u64i loc(#loc292)
              cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc293)
              %31 = cir.const #cir.int<2> : !s32i loc(#loc84)
              %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc84)
              %33 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc294)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc87)
              %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc87)
              %36 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
              %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
              cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc295)
              %38 = cir.const #cir.int<27015> : !s32i loc(#loc91)
              %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc91)
              %40 = cir.call @htons(%39) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc92)
              %41 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
              cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc296)
              cir.scope {
                %81 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %82 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc298)
                %83 = cir.const #cir.int<16> : !u64i loc(#loc299)
                %84 = cir.cast(integral, %83 : !u64i), !u32i loc(#loc299)
                %85 = cir.call @bind(%81, %82, %84) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc103)
                %86 = cir.const #cir.int<1> : !s32i loc(#loc104)
                %87 = cir.unary(minus, %86) nsw : !s32i, !s32i loc(#loc104)
                %88 = cir.cmp(eq, %85, %87) : !s32i, !cir.bool loc(#loc300)
                cir.if %88 {
                  cir.break loc(#loc106)
                } loc(#loc301)
              } loc(#loc297)
              cir.scope {
                %81 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                %82 = cir.const #cir.int<5> : !s32i loc(#loc110)
                %83 = cir.call @listen(%81, %82) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc111)
                %84 = cir.const #cir.int<1> : !s32i loc(#loc112)
                %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc112)
                %86 = cir.cmp(eq, %83, %85) : !s32i, !cir.bool loc(#loc303)
                cir.if %86 {
                  cir.break loc(#loc114)
                } loc(#loc304)
              } loc(#loc302)
              %42 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %43 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc116)
              %44 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc117)
              %45 = cir.call @accept(%42, %43, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc118)
              cir.store %45, %15 : !s32i, !cir.ptr<!s32i> loc(#loc305)
              cir.scope {
                %81 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                %82 = cir.const #cir.int<1> : !s32i loc(#loc124)
                %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc124)
                %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc307)
                cir.if %84 {
                  cir.break loc(#loc126)
                } loc(#loc308)
              } loc(#loc306)
              %46 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %47 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
              %48 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc129)
              %49 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc130)
              %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc309)
              %51 = cir.const #cir.int<1> : !u64i loc(#loc310)
              %52 = cir.const #cir.int<100> : !s32i loc(#loc135)
              %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc135)
              %54 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc136)
              %55 = cir.binop(sub, %53, %54) : !u64i loc(#loc311)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc137)
              %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc137)
              %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc312)
              %59 = cir.binop(mul, %51, %58) : !u64i loc(#loc313)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc139)
              %61 = cir.call @recv(%46, %50, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc140)
              %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc140)
              cir.store %62, %11 : !s32i, !cir.ptr<!s32i> loc(#loc314)
              cir.scope {
                %81 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                %82 = cir.const #cir.int<1> : !s32i loc(#loc146)
                %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc146)
                %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc316)
                %85 = cir.ternary(%84, true {
                  %86 = cir.const #true loc(#loc147)
                  cir.yield %86 : !cir.bool loc(#loc147)
                }, false {
                  %86 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                  %87 = cir.const #cir.int<0> : !s32i loc(#loc149)
                  %88 = cir.cmp(eq, %86, %87) : !s32i, !cir.bool loc(#loc317)
                  %89 = cir.ternary(%88, true {
                    %90 = cir.const #true loc(#loc147)
                    cir.yield %90 : !cir.bool loc(#loc147)
                  }, false {
                    %90 = cir.const #false loc(#loc147)
                    cir.yield %90 : !cir.bool loc(#loc147)
                  }) : (!cir.bool) -> !cir.bool loc(#loc147)
                  cir.yield %89 : !cir.bool loc(#loc147)
                }) : (!cir.bool) -> !cir.bool loc(#loc147)
                cir.if %85 {
                  cir.break loc(#loc151)
                } loc(#loc318)
              } loc(#loc315)
              %63 = cir.const #cir.int<0> : !s32i loc(#loc152)
              %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc152)
              %65 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
              %66 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc154)
              %67 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc155)
              %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc155)
              %69 = cir.const #cir.int<1> : !u64i loc(#loc319)
              %70 = cir.binop(div, %68, %69) : !u64i loc(#loc320)
              %71 = cir.binop(add, %66, %70) : !u64i loc(#loc321)
              %72 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %71 : !u64i), !cir.ptr<!s8i> loc(#loc158)
              cir.store %64, %72 : !s8i, !cir.ptr<!s8i> loc(#loc322)
              %73 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc159)
              %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
              %75 = cir.const #cir.int<13> : !s32i loc(#loc161)
              %76 = cir.call @strchr(%74, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc159)
              cir.store %76, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
              cir.scope {
                %81 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                %82 = cir.cast(ptr_to_bool, %81 : !cir.ptr<!s8i>), !cir.bool loc(#loc166)
                cir.if %82 {
                  %83 = cir.const #cir.int<0> : !s32i loc(#loc168)
                  %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc168)
                  %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                  cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc326)
                } loc(#loc325)
              } loc(#loc324)
              %77 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc171)
              %78 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
              %79 = cir.const #cir.int<10> : !s32i loc(#loc173)
              %80 = cir.call @strchr(%78, %79) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc171)
              cir.store %80, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc327)
              cir.scope {
                %81 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
                %82 = cir.cast(ptr_to_bool, %81 : !cir.ptr<!s8i>), !cir.bool loc(#loc178)
                cir.if %82 {
                  %83 = cir.const #cir.int<0> : !s32i loc(#loc180)
                  %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc180)
                  %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
                  cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc330)
                } loc(#loc329)
              } loc(#loc328)
            } loc(#loc286)
            cir.yield loc(#loc62)
          } while {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc183)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc183)
            cir.condition(%25) loc(#loc183)
          } loc(#loc285)
        } loc(#loc285)
        cir.scope {
          %24 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc186)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc187)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc187)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc332)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc189)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc190)
          } loc(#loc333)
        } loc(#loc331)
        cir.scope {
          %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc193)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc194)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc194)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc335)
          cir.if %27 {
            %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc196)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc197)
          } loc(#loc336)
        } loc(#loc334)
      } loc(#loc278)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc337)
    } loc(#loc276)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc339)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
      cir.scope {
        %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
        %10 = cir.call @system(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc209)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc210)
        %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc341)
        cir.if %12 {
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc27)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc27)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc212)
          %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc213)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc214)
          cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc213)
        } loc(#loc342)
      } loc(#loc340)
    } loc(#loc338)
    cir.return loc(#loc31)
  } loc(#loc271)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc344)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc217)
    cir.return loc(#loc216)
  } loc(#loc343)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc345)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc221)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc347)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc348)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc349)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc257)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc348)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc349)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc257)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc257)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc230)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc350)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc352)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc237)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc221)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc221)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc237)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc353)
    } loc(#loc351)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc355)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc355)
      cir.scope {
        %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc249)
        %10 = cir.call @system(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc250)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc251)
        %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc357)
        cir.if %12 {
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc253)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc253)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc254)
          %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc255)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc256)
          cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc255)
        } loc(#loc358)
      } loc(#loc356)
    } loc(#loc354)
    cir.return loc(#loc223)
  } loc(#loc346)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":167:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":167:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":61:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":61:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":402:1)
#loc10 = loc("/usr/include/netinet/in.h":403:40)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/stdlib.h":923:1)
#loc24 = loc("/usr/include/stdlib.h":923:41)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":151:23)
#loc28 = loc("/usr/include/stdlib.h":756:1)
#loc29 = loc("/usr/include/stdlib.h":756:70)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":56:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":155:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":58:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":58:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":59:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":59:25)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":60:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":60:25)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":62:12)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":62:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":63:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":145:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":64:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":64:24)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":64:23)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":65:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":143:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":70:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":70:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":71:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":71:32)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":72:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":72:19)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":73:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":73:35)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":74:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":74:35)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":75:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":75:41)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":75:30)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":75:37)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":76:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":128:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":77:13)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":127:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:39)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:48)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:61)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:32)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:72)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":87:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":90:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":87:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":87:37)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":88:17)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":89:21)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:24)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:25)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:34)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:37)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:51)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:17)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:52)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":92:38)
#loc85 = loc("/usr/include/netinet/in.h":249:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":92:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":93:43)
#loc88 = loc("/usr/include/netinet/in.h":251:20)
#loc89 = loc("/usr/include/netinet/in.h":33:15)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":93:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":94:42)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":94:36)
#loc93 = loc("/usr/include/netinet/in.h":250:15)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":94:17)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":94:50)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:17)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":98:17)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:26)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:58)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:59)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:68)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:82)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:21)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:88)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":96:17)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":97:21)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:17)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":102:17)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:28)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:42)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:21)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:61)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":100:17)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":101:21)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:39)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:53)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:59)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:32)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:63)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":104:17)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":107:17)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":104:21)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":104:37)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":105:17)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":106:21)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:35)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:58)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:65)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:63)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:49)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:72)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:75)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:86)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:91)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:97)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:107)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:108)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:111)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:30)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:112)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":113:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:21)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:35)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:48)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:51)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:65)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":111:17)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":112:21)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:61)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:22)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:32)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:45)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:56)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:57)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:27)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:34)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:40)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:44)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":118:17)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":121:17)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":118:21)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":119:17)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":120:32)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":120:22)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":120:21)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:27)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:34)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:40)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:17)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:44)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":123:17)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":126:17)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":123:21)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":124:17)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":125:32)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":125:22)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":125:21)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":128:20)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":129:13)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":132:13)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":129:17)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":129:33)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":130:13)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":131:30)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":131:17)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":133:13)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":136:13)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":133:17)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":133:33)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":134:13)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":135:30)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":135:17)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":144:21)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":144:10)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":144:9)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":146:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":154:5)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":147:9)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":147:24)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":147:23)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":149:9)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":153:9)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":149:20)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":149:13)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":149:29)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":150:9)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":151:13)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":152:13)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":152:18)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":186:1)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":189:1)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":188:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":188:13)
#loc219 = loc("/usr/include/string.h":149:1)
#loc220 = loc("/usr/include/string.h":150:14)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":172:22)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":162:1)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":184:1)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":164:5)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":164:12)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":165:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":165:25)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":166:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":166:25)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":168:12)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":168:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":169:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":174:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":170:9)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":170:24)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":170:23)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":172:9)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":172:16)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":173:21)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":173:10)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":173:9)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":175:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":183:5)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":176:9)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":176:24)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":176:23)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":178:9)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":182:9)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":178:20)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":178:13)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":178:29)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":179:9)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":180:23)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":180:13)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":181:13)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":181:18)
#loc257 = loc(fused[#loc1, #loc2])
#loc258 = loc(fused[#loc3, #loc4])
#loc259 = loc(fused[#loc5, #loc6])
#loc260 = loc(fused[#loc7, #loc8])
#loc261 = loc(fused[#loc9, #loc10])
#loc262 = loc(fused[#loc11, #loc12])
#loc263 = loc(fused[#loc13, #loc14])
#loc264 = loc(fused[#loc15, #loc16])
#loc265 = loc(fused[#loc17, #loc18])
#loc266 = loc(fused[#loc19, #loc20])
#loc267 = loc(fused[#loc21, #loc22])
#loc268 = loc(fused[#loc23, #loc24])
#loc269 = loc(fused[#loc25, #loc26])
#loc270 = loc(fused[#loc28, #loc29])
#loc271 = loc(fused[#loc30, #loc31])
#loc272 = loc(fused[#loc32, #loc33])
#loc273 = loc(fused[#loc34, #loc35])
#loc274 = loc(fused[#loc36, #loc37])
#loc275 = loc(fused[#loc39, #loc38])
#loc276 = loc(fused[#loc40, #loc41])
#loc277 = loc(fused[#loc42, #loc43])
#loc278 = loc(fused[#loc45, #loc46])
#loc279 = loc(fused[#loc47, #loc48])
#loc280 = loc(fused[#loc49, #loc50])
#loc281 = loc(fused[#loc51, #loc52])
#loc282 = loc(fused[#loc53, #loc54])
#loc283 = loc(fused[#loc55, #loc56])
#loc284 = loc(fused[#loc57, #loc58])
#loc285 = loc(fused[#loc61, #loc62])
#loc286 = loc(fused[#loc63, #loc64])
#loc287 = loc(fused[#loc69, #loc70])
#loc288 = loc(fused[#loc71, #loc72])
#loc289 = loc(fused[#loc73, #loc74])
#loc290 = loc(fused[#loc75, #loc72])
#loc291 = loc(fused[#loc77, #loc78])
#loc292 = loc(fused[#loc80, #loc81])
#loc293 = loc(fused[#loc82, #loc83])
#loc294 = loc(fused[#loc86, #loc84])
#loc295 = loc(fused[#loc90, #loc87])
#loc296 = loc(fused[#loc94, #loc95])
#loc297 = loc(fused[#loc96, #loc97])
#loc298 = loc(fused[#loc99, #loc100])
#loc299 = loc(fused[#loc101, #loc102])
#loc300 = loc(fused[#loc103, #loc104])
#loc301 = loc(fused[#loc105, #loc97])
#loc302 = loc(fused[#loc107, #loc108])
#loc303 = loc(fused[#loc111, #loc112])
#loc304 = loc(fused[#loc113, #loc108])
#loc305 = loc(fused[#loc119, #loc120])
#loc306 = loc(fused[#loc121, #loc122])
#loc307 = loc(fused[#loc123, #loc124])
#loc308 = loc(fused[#loc125, #loc122])
#loc309 = loc(fused[#loc131, #loc132])
#loc310 = loc(fused[#loc133, #loc134])
#loc311 = loc(fused[#loc135, #loc136])
#loc312 = loc(fused[#loc135, #loc137])
#loc313 = loc(fused[#loc133, #loc138])
#loc314 = loc(fused[#loc141, #loc142])
#loc315 = loc(fused[#loc143, #loc144])
#loc316 = loc(fused[#loc145, #loc146])
#loc317 = loc(fused[#loc148, #loc149])
#loc318 = loc(fused[#loc150, #loc144])
#loc319 = loc(fused[#loc156, #loc157])
#loc320 = loc(fused[#loc155, #loc157])
#loc321 = loc(fused[#loc154, #loc157])
#loc322 = loc(fused[#loc153, #loc152])
#loc323 = loc(fused[#loc162, #loc163])
#loc324 = loc(fused[#loc164, #loc165])
#loc325 = loc(fused[#loc167, #loc165])
#loc326 = loc(fused[#loc170, #loc168])
#loc327 = loc(fused[#loc174, #loc175])
#loc328 = loc(fused[#loc176, #loc177])
#loc329 = loc(fused[#loc179, #loc177])
#loc330 = loc(fused[#loc182, #loc180])
#loc331 = loc(fused[#loc184, #loc185])
#loc332 = loc(fused[#loc186, #loc187])
#loc333 = loc(fused[#loc188, #loc185])
#loc334 = loc(fused[#loc191, #loc192])
#loc335 = loc(fused[#loc193, #loc194])
#loc336 = loc(fused[#loc195, #loc192])
#loc337 = loc(fused[#loc200, #loc198])
#loc338 = loc(fused[#loc201, #loc202])
#loc339 = loc(fused[#loc203, #loc204])
#loc340 = loc(fused[#loc206, #loc207])
#loc341 = loc(fused[#loc209, #loc210])
#loc342 = loc(fused[#loc211, #loc207])
#loc343 = loc(fused[#loc215, #loc216])
#loc344 = loc(fused[#loc217, #loc218])
#loc345 = loc(fused[#loc219, #loc220])
#loc346 = loc(fused[#loc222, #loc223])
#loc347 = loc(fused[#loc224, #loc225])
#loc348 = loc(fused[#loc226, #loc227])
#loc349 = loc(fused[#loc228, #loc229])
#loc350 = loc(fused[#loc231, #loc230])
#loc351 = loc(fused[#loc232, #loc233])
#loc352 = loc(fused[#loc234, #loc235])
#loc353 = loc(fused[#loc241, #loc239])
#loc354 = loc(fused[#loc242, #loc243])
#loc355 = loc(fused[#loc244, #loc245])
#loc356 = loc(fused[#loc247, #loc248])
#loc357 = loc(fused[#loc250, #loc251])
#loc358 = loc(fused[#loc252, #loc248])
