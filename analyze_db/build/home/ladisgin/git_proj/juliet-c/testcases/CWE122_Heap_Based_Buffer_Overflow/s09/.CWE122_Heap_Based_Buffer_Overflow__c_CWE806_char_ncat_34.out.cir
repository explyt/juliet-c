!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":94:10)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":94:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":94:20)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":94:32)
#loc184 = loc(fused[#loc83, #loc84])
#loc185 = loc(fused[#loc85, #loc86])
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc156)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc160)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc20)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc164)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc165)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc169)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc32)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc170)
    } loc(#loc168)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc34)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc35)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc35)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc39)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc41)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %24 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc175)
      %26 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc177)
        %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc177)
        cir.store %29, %28 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc177)
        %30 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc56)
        %31 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc57)
        %32 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
        %34 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
        %36 = cir.call @strncat(%31, %32, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc56)
        %37 = cir.const #cir.int<0> : !s32i loc(#loc61)
        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc61)
        %39 = cir.const #cir.int<50> : !s32i loc(#loc62)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc63)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc62)
        %42 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc64)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc64)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc178)
        %44 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc66)
        %45 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc67)
        %46 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
        %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
        cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc14)
  } loc(#loc161)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc70)
  } loc(#loc179)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc181)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc185)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc90)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_good() : () -> () loc(#loc92)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_bad() : () -> () loc(#loc96)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    cir.return %17 : !s32i loc(#loc188)
  } loc(#loc183)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc107)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc108)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc192)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc193)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc194)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc197)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc118)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc119)
        %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc120)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc118)
      } loc(#loc198)
    } loc(#loc196)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc122)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc123)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc123)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc123)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc199)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc127)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc129)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc129)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc131)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc200)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %24 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc203)
      %26 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc205)
        %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc205)
        cir.store %29, %28 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc205)
        %30 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc142)
        %31 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc143)
        %32 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
        %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc145)
        %34 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
        %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc145)
        %36 = cir.call @strncat(%31, %32, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc142)
        %37 = cir.const #cir.int<0> : !s32i loc(#loc147)
        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc147)
        %39 = cir.const #cir.int<50> : !s32i loc(#loc148)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc149)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc148)
        %42 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc150)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc150)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc206)
        %44 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
        cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc152)
        %45 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc153)
        %46 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
        %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
        cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc102)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":152:1)
#loc6 = loc("/usr/include/string.h":153:29)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":29:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":50:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":31:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":31:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":32:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":32:72)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":33:20)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":33:27)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":33:31)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":33:42)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":33:43)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":33:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":34:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":34:33)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":34:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":34:17)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":34:23)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":34:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":34:30)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":34:29)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":36:12)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":36:18)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":36:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":36:27)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":36:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":36:28)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":37:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":37:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":37:10)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":37:14)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":37:15)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":38:26)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":23:12)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":38:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":39:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":49:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":40:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":40:31)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":24:12)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":41:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":48:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":42:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":42:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":44:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":44:21)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":44:27)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":44:33)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":44:40)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":45:26)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":45:18)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":45:21)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":45:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":46:23)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":46:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":47:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":47:18)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":80:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":83:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":82:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":82:13)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":99:15)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":101:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":104:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":106:15)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":94:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":109:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":95:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":97:27)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":97:22)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":97:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":99:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":100:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":100:67)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":101:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":104:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":105:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":105:66)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":106:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":108:12)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":108:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":57:1)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":78:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":59:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":59:12)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":60:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":60:72)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":61:20)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":61:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":61:31)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":61:42)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":61:43)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":61:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":62:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":62:33)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":62:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":62:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":62:23)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":62:24)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":62:30)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":62:29)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":64:12)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":64:18)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":64:23)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":64:26)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":64:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":64:27)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":65:18)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":65:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":65:10)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":65:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":65:14)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":66:26)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":66:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":67:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":77:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":68:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":68:31)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":69:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":76:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":70:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":70:29)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":72:13)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":72:21)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":72:27)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":72:33)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":72:40)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":73:26)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":73:18)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":73:21)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":73:13)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":74:23)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":74:13)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":75:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_34.c":75:18)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc9, #loc10])
#loc160 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc13, #loc14])
#loc162 = loc(fused[#loc15, #loc16])
#loc163 = loc(fused[#loc17, #loc18])
#loc164 = loc(fused[#loc21, #loc22])
#loc165 = loc(fused[#loc20, #loc22])
#loc166 = loc(fused[#loc19, #loc23])
#loc167 = loc(fused[#loc24, #loc23])
#loc168 = loc(fused[#loc25, #loc26])
#loc169 = loc(fused[#loc27, #loc28])
#loc170 = loc(fused[#loc29, #loc26])
#loc171 = loc(fused[#loc37, #loc38])
#loc172 = loc(fused[#loc40, #loc39])
#loc173 = loc(fused[#loc46, #loc44])
#loc174 = loc(fused[#loc47, #loc48])
#loc175 = loc(fused[#loc49, #loc50])
#loc176 = loc(fused[#loc52, #loc53])
#loc177 = loc(fused[#loc54, #loc55])
#loc178 = loc(fused[#loc64, #loc61])
#loc179 = loc(fused[#loc69, #loc70])
#loc180 = loc(fused[#loc71, #loc72])
#loc181 = loc(fused[#loc73, #loc74])
#loc182 = loc(fused[#loc75, #loc76])
#loc183 = loc(fused[#loc81, #loc82])
#loc186 = loc(fused[#loc92, #loc93])
#loc187 = loc(fused[#loc96, #loc97])
#loc188 = loc(fused[#loc100, #loc99])
#loc189 = loc(fused[#loc101, #loc102])
#loc190 = loc(fused[#loc103, #loc104])
#loc191 = loc(fused[#loc105, #loc106])
#loc192 = loc(fused[#loc109, #loc110])
#loc193 = loc(fused[#loc108, #loc110])
#loc194 = loc(fused[#loc107, #loc111])
#loc195 = loc(fused[#loc112, #loc111])
#loc196 = loc(fused[#loc113, #loc114])
#loc197 = loc(fused[#loc115, #loc116])
#loc198 = loc(fused[#loc117, #loc114])
#loc199 = loc(fused[#loc125, #loc126])
#loc200 = loc(fused[#loc128, #loc127])
#loc201 = loc(fused[#loc133, #loc132])
#loc202 = loc(fused[#loc134, #loc135])
#loc203 = loc(fused[#loc136, #loc137])
#loc204 = loc(fused[#loc138, #loc139])
#loc205 = loc(fused[#loc140, #loc141])
#loc206 = loc(fused[#loc150, #loc147])
