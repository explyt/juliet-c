!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":46:14)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":46:20)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":69:18)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":69:24)
#loc92 = loc(fused[#loc7, #loc8])
#loc110 = loc(fused[#loc49, #loc50])
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc89)
  cir.func private @printIntLine(!s32i) loc(#loc90)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_637badSinkEPi(%arg0: !cir.ptr<!s32i> loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc95)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc92)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc96)
    cir.store %arg0, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc16)
    %5 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.br ^bb1 loc(#loc97)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc20)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc98)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc99)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc100)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc24)
    %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc25)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc101)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc101)
    cir.store %14, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc102)
    cir.br ^bb2 loc(#loc103)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc31)
    cir.store %16, %1 : !u64i, !cir.ptr<!u64i> loc(#loc104)
    cir.br ^bb3 loc(#loc103)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %18 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc34)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc105)
    cir.brcond %20 ^bb4, ^bb8 loc(#loc105)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc106)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc39)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc41)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc108)
    cir.br ^bb3 loc(#loc103)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc44)
    %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc45)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    cir.delete.array %31 : <!s32i> loc(#loc46)
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc91)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_6311goodG2BSinkEPi(%arg0: !cir.ptr<!s32i> loc(fused[#loc49, #loc50])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc113)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc110)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc114)
    cir.store %arg0, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc58)
    %5 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.br ^bb1 loc(#loc115)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc62)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc116)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc117)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc118)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc67)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc119)
    cir.store %14, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc120)
    cir.br ^bb2 loc(#loc121)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc73)
    cir.store %16, %1 : !u64i, !cir.ptr<!u64i> loc(#loc122)
    cir.br ^bb3 loc(#loc121)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %18 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc76)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc123)
    cir.brcond %20 ^bb4, ^bb8 loc(#loc123)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc124)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc81)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc72)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc83)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc126)
    cir.br ^bb3 loc(#loc121)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc72)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc86)
    %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc87)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
    cir.delete.array %31 : <!s32i> loc(#loc88)
    cir.br ^bb10 loc(#loc61)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc48)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":46:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":62:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":50:9)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":50:16)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":50:26)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":51:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":51:14)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":48:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":48:17)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":47:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":48:16)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":49:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":61:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":53:21)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":53:28)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":53:38)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":53:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":54:37)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":46:6)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":54:28)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":54:46)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":54:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":55:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":58:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":55:18)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":55:14)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":55:21)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":55:33)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":56:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":57:29)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":57:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":57:24)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":57:25)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":55:40)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":55:39)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":59:22)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":59:33)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":59:34)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":59:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":60:19)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":69:1)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":85:1)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":73:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":73:16)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":73:26)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":74:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":74:14)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":71:5)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":71:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":70:1)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":71:16)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":72:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":84:5)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":76:21)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":76:28)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":76:38)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":76:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":77:37)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":69:6)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":77:28)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":77:46)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":77:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":78:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":81:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":78:18)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":78:14)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":78:21)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":78:33)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":79:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":80:29)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":80:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":80:24)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":80:25)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":78:40)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":78:39)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":82:22)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":82:33)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":82:34)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":82:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_63b.cpp":83:19)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc9, #loc11])
#loc95 = loc(fused[#loc12, #loc13])
#loc96 = loc(fused[#loc14, #loc15])
#loc97 = loc(fused[#loc18, #loc19])
#loc98 = loc(fused[#loc21, #loc22])
#loc99 = loc(fused[#loc20, #loc22])
#loc100 = loc(fused[#loc23, #loc22])
#loc101 = loc(fused[#loc26, #loc27])
#loc102 = loc(fused[#loc28, #loc27])
#loc103 = loc(fused[#loc29, #loc30])
#loc104 = loc(fused[#loc32, #loc31])
#loc105 = loc(fused[#loc33, #loc34])
#loc106 = loc(fused[#loc35, #loc30])
#loc107 = loc(fused[#loc37, #loc36])
#loc108 = loc(fused[#loc41, #loc40])
#loc109 = loc(fused[#loc47, #loc48])
#loc111 = loc(fused[#loc51, #loc52])
#loc112 = loc(fused[#loc51, #loc53])
#loc113 = loc(fused[#loc54, #loc55])
#loc114 = loc(fused[#loc56, #loc57])
#loc115 = loc(fused[#loc60, #loc61])
#loc116 = loc(fused[#loc63, #loc64])
#loc117 = loc(fused[#loc62, #loc64])
#loc118 = loc(fused[#loc65, #loc64])
#loc119 = loc(fused[#loc68, #loc69])
#loc120 = loc(fused[#loc70, #loc69])
#loc121 = loc(fused[#loc71, #loc72])
#loc122 = loc(fused[#loc74, #loc73])
#loc123 = loc(fused[#loc75, #loc76])
#loc124 = loc(fused[#loc77, #loc72])
#loc125 = loc(fused[#loc79, #loc78])
#loc126 = loc(fused[#loc83, #loc82])
