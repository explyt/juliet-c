!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":30:22)
#loc9 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":30:26)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":72:26)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":72:30)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":53:26)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":53:30)
#true = #cir.bool<true> : !cir.bool
#loc104 = loc(fused[#loc8, #loc9])
#loc116 = loc(fused[#loc42, #loc43])
#loc127 = loc(fused[#loc79, #loc80])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc101)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc8, #loc9])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc7)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc11)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc102)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc11)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    cir.return %9 : !s32i loc(#loc105)
  } loc(#loc103)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc106)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_42_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc109)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc25)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc28)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc31)
    %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc32)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc19)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.return loc(#loc21)
  } loc(#loc108)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_42_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc114)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc112)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc42, #loc43])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc45)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc102)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc47)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc47)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc45)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.return %9 : !s32i loc(#loc117)
  } loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc57)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc60)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.scope {
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc66)
      %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc123)
      %8 = cir.ternary(%7, true {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        %10 = cir.const #cir.int<2000> : !s32i loc(#loc69)
        %11 = cir.cmp(le, %9, %10) : !s32i, !cir.bool loc(#loc124)
        %12 = cir.ternary(%11, true {
          %13 = cir.const #true loc(#loc67)
          cir.yield %13 : !cir.bool loc(#loc67)
        }, false {
          %13 = cir.const #false loc(#loc67)
          cir.yield %13 : !cir.bool loc(#loc67)
        }) : (!cir.bool) -> !cir.bool loc(#loc67)
        cir.yield %12 : !cir.bool loc(#loc67)
      }, false {
        %9 = cir.const #false loc(#loc67)
        cir.yield %9 : !cir.bool loc(#loc67)
      }) : (!cir.bool) -> !cir.bool loc(#loc67)
      cir.if %8 {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
        %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc73)
        %11 = cir.call @usleep(%10) : (!u32i) -> !s32i loc(#loc74)
        %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc50)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc50)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc75)
      } else {
        %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc51)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc76)
      } loc(#loc125)
    } loc(#loc122)
    cir.return loc(#loc53)
  } loc(#loc118)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc79, #loc80])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc82)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.return %4 : !s32i loc(#loc129)
  } loc(#loc126)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc91)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc94)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc97)
    %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc98)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc99)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.return loc(#loc87)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":33:19)
#loc6 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":30:1)
#loc7 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":35:1)
#loc10 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":31:1)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":33:5)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":33:12)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":34:12)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":34:5)
#loc15 = loc("/usr/include/unistd.h":480:1)
#loc16 = loc("/usr/include/unistd.h":480:43)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":45:15)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":37:1)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":46:1)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":39:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":39:9)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":41:14)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":41:13)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":41:5)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":42:23)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":42:13)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":42:5)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":42:28)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":44:11)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":44:5)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":45:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":97:1)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":101:1)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":99:5)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":99:13)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":100:5)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":100:13)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":72:1)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":77:1)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":73:1)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":75:5)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":75:12)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":75:19)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":76:12)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":76:5)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":89:19)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":93:19)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":79:1)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":95:1)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":81:5)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":81:9)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":83:14)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":83:13)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":83:5)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":84:27)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":84:13)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":84:5)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":84:32)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":86:5)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":94:5)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":86:9)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":86:17)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":86:19)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":86:22)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":86:31)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":87:5)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":90:5)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":92:5)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":88:15)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":88:9)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":89:9)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":93:9)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":53:1)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":58:1)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":54:1)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":56:13)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":56:5)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":57:12)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":57:5)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":60:1)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":69:1)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":62:5)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":62:9)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":64:14)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":64:13)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":64:5)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":65:27)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":65:13)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":65:5)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":65:32)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":67:11)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":67:5)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":68:15)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_42.c":68:5)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc6, #loc7])
#loc105 = loc(fused[#loc14, #loc13])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc17, #loc18])
#loc108 = loc(fused[#loc20, #loc21])
#loc109 = loc(fused[#loc22, #loc23])
#loc110 = loc(fused[#loc26, #loc24])
#loc111 = loc(fused[#loc29, #loc30])
#loc112 = loc(fused[#loc34, #loc35])
#loc113 = loc(fused[#loc36, #loc37])
#loc114 = loc(fused[#loc38, #loc39])
#loc115 = loc(fused[#loc40, #loc41])
#loc117 = loc(fused[#loc49, #loc48])
#loc118 = loc(fused[#loc52, #loc53])
#loc119 = loc(fused[#loc54, #loc55])
#loc120 = loc(fused[#loc58, #loc56])
#loc121 = loc(fused[#loc61, #loc62])
#loc122 = loc(fused[#loc63, #loc64])
#loc123 = loc(fused[#loc65, #loc66])
#loc124 = loc(fused[#loc68, #loc69])
#loc125 = loc(fused[#loc70, #loc71, #loc72, #loc64])
#loc126 = loc(fused[#loc77, #loc78])
#loc128 = loc(fused[#loc83, #loc82])
#loc129 = loc(fused[#loc85, #loc84])
#loc130 = loc(fused[#loc86, #loc87])
#loc131 = loc(fused[#loc88, #loc89])
#loc132 = loc(fused[#loc92, #loc90])
#loc133 = loc(fused[#loc95, #loc96])
