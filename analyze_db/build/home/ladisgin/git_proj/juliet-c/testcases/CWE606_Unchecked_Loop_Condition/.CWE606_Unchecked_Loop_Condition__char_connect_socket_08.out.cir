!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":443:10)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":443:14)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":443:20)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":443:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc784 = loc(fused[#loc214, #loc215])
#loc785 = loc(fused[#loc216, #loc217])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc694)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc695)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc696)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc697)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc698)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc699)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc700)
  cir.func private @close(!s32i) -> !s32i loc(#loc701)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc702)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printIntLine(!s32i) loc(#loc703)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc705)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc706)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc706)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc706)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc707)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc709)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc33)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc33)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc712)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc713)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc714)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc715)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc716)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc45)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc715)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc48)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc716)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc52)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc54)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc718)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc60)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc61)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc61)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc720)
                cir.if %74 {
                  cir.break loc(#loc63)
                } loc(#loc721)
              } loc(#loc719)
              %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc722)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc66)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc723)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc724)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc71)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc71)
              %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc725)
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
              %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc74)
              %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
              %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
              cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc726)
              %32 = cir.const #cir.int<27015> : !s32i loc(#loc79)
              %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc79)
              %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc80)
              %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc727)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc729)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc730)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc730)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc91)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc92)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc92)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc731)
                cir.if %78 {
                  cir.break loc(#loc94)
                } loc(#loc732)
              } loc(#loc728)
              %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
              %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc97)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc98)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc733)
              %41 = cir.const #cir.int<1> : !u64i loc(#loc734)
              %42 = cir.const #cir.int<100> : !s32i loc(#loc103)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc103)
              %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc104)
              %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc735)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc105)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc736)
              %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc737)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc107)
              %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc108)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc108)
              cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc738)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc114)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc114)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc740)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc115)
                  cir.yield %76 : !cir.bool loc(#loc115)
                }, false {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc117)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc741)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc115)
                    cir.yield %80 : !cir.bool loc(#loc115)
                  }, false {
                    %80 = cir.const #false loc(#loc115)
                    cir.yield %80 : !cir.bool loc(#loc115)
                  }) : (!cir.bool) -> !cir.bool loc(#loc115)
                  cir.yield %79 : !cir.bool loc(#loc115)
                }) : (!cir.bool) -> !cir.bool loc(#loc115)
                cir.if %75 {
                  cir.break loc(#loc119)
                } loc(#loc742)
              } loc(#loc739)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc120)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc120)
              %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
              %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc122)
              %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc123)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc743)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc744)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc745)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc126)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc746)
              %63 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc127)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
              %65 = cir.const #cir.int<13> : !s32i loc(#loc129)
              %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
              cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc747)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc134)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc136)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc136)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc750)
                } loc(#loc749)
              } loc(#loc748)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc139)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
              %69 = cir.const #cir.int<10> : !s32i loc(#loc141)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
              cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc751)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc146)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc148)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc148)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc754)
                } loc(#loc753)
              } loc(#loc752)
              cir.yield loc(#loc51)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc151)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc151)
              cir.condition(%18) loc(#loc151)
            } loc(#loc717)
          } loc(#loc717)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc155)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc155)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc756)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc157)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc158)
            } loc(#loc757)
          } loc(#loc755)
        } loc(#loc711)
      } loc(#loc710)
    } loc(#loc708)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc759)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc161)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc161)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc762)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc763)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc764)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc172)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc172)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc174)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc766)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc176)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc768)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc180)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc770)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc771)
                  cir.condition(%22) loc(#loc184)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc186)
                    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc187)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc773)
                  } loc(#loc772)
                  cir.yield loc(#loc179)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc188)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc189)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc774)
                  cir.yield loc(#loc769)
                } loc(#loc769)
              } loc(#loc769)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc191)
            } loc(#loc767)
          } loc(#loc765)
        } loc(#loc761)
      } loc(#loc760)
    } loc(#loc758)
    cir.return loc(#loc24)
  } loc(#loc704)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc776)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc194)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc777)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc196)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc778)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc198)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc779)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc200)
    cir.return loc(#loc193)
  } loc(#loc775)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc780)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc781)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc782)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc211)
  cir.func @main(%arg0: !s32i loc(fused[#loc214, #loc215]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc216, #loc217])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc784)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc785)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc213)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc218)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc219)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc220)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc220)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc221)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc208)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc786)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_08_good() : () -> () loc(#loc223)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc209)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc210)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc787)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_08_bad() : () -> () loc(#loc227)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc211)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc229)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc230)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc788)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc788)
    cir.return %17 : !s32i loc(#loc788)
  } loc(#loc783)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc234)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc790)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc790)
    cir.return %2 : !s32i loc(#loc790)
  } loc(#loc789)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc236)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc792)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc793)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc793)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc793)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc243)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc794)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc796)
      %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc247)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc247)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc799)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc800)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc801)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc802)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc803)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc259)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc259)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc802)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc262)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc263)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc262)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc803)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc266)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc267)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc268)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc269)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc805)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc275)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc275)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc807)
                cir.if %74 {
                  cir.break loc(#loc277)
                } loc(#loc808)
              } loc(#loc806)
              %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc809)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc280)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc810)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc811)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc285)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc285)
              %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc812)
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc287)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc287)
              %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc288)
              %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
              %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
              cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc813)
              %32 = cir.const #cir.int<27015> : !s32i loc(#loc291)
              %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc291)
              %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc292)
              %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc814)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc816)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc817)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc817)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc302)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc303)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc303)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc818)
                cir.if %78 {
                  cir.break loc(#loc305)
                } loc(#loc819)
              } loc(#loc815)
              %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc306)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc307)
              %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc308)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc309)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc820)
              %41 = cir.const #cir.int<1> : !u64i loc(#loc821)
              %42 = cir.const #cir.int<100> : !s32i loc(#loc314)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc314)
              %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc315)
              %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc822)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc316)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc316)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc823)
              %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc824)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc318)
              %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc319)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc319)
              cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc825)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc325)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc325)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc827)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc326)
                  cir.yield %76 : !cir.bool loc(#loc326)
                }, false {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc328)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc828)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc326)
                    cir.yield %80 : !cir.bool loc(#loc326)
                  }, false {
                    %80 = cir.const #false loc(#loc326)
                    cir.yield %80 : !cir.bool loc(#loc326)
                  }) : (!cir.bool) -> !cir.bool loc(#loc326)
                  cir.yield %79 : !cir.bool loc(#loc326)
                }) : (!cir.bool) -> !cir.bool loc(#loc326)
                cir.if %75 {
                  cir.break loc(#loc330)
                } loc(#loc829)
              } loc(#loc826)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc331)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc331)
              %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc332)
              %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc333)
              %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc334)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc334)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc830)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc831)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc832)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc337)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc833)
              %63 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc338)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc339)
              %65 = cir.const #cir.int<13> : !s32i loc(#loc340)
              %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc338)
              cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc834)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc345)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc345)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc347)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc347)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc348)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc837)
                } loc(#loc836)
              } loc(#loc835)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc350)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc351)
              %69 = cir.const #cir.int<10> : !s32i loc(#loc352)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc350)
              cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc838)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc357)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc357)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc359)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc359)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc360)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc841)
                } loc(#loc840)
              } loc(#loc839)
              cir.yield loc(#loc265)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc362)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc362)
              cir.condition(%18) loc(#loc362)
            } loc(#loc804)
          } loc(#loc804)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc365)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc366)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc366)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc843)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc368)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc369)
            } loc(#loc844)
          } loc(#loc842)
        } loc(#loc798)
      } loc(#loc797)
    } loc(#loc795)
    cir.scope {
      %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc846)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc372)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc372)
      cir.if %6 {
        %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc236)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc236)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc377)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc849)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc850)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc851)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc386)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc387)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc388)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc388)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc386)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc389)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc853)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc393)
                %18 = cir.const #cir.int<10000> : !s32i loc(#loc394)
                %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc856)
                cir.if %19 {
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc396)
                  cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc858)
                  cir.scope {
                    %22 = cir.const #cir.int<0> : !s32i loc(#loc400)
                    cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc860)
                    cir.for : cond {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc402)
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc403)
                      %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc861)
                      cir.condition(%25) loc(#loc404)
                    } body {
                      cir.scope {
                        %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc406)
                        %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc407)
                        cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc863)
                      } loc(#loc862)
                      cir.yield loc(#loc399)
                    } step {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc408)
                      %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc409)
                      cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc864)
                      cir.yield loc(#loc859)
                    } loc(#loc859)
                  } loc(#loc859)
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc410)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc411)
                } loc(#loc857)
              } loc(#loc855)
            } loc(#loc854)
          } loc(#loc852)
        } loc(#loc848)
      } loc(#loc847)
    } loc(#loc845)
    cir.return loc(#loc238)
  } loc(#loc791)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc413)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc414)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc866)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc866)
    cir.return %2 : !s32i loc(#loc866)
  } loc(#loc865)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc868)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc869)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc869)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc869)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc422)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc870)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc872)
      %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc426)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc426)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc875)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc876)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc877)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc878)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc879)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc438)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc438)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc878)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc441)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc442)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc441)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc879)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc445)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc446)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc447)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc448)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc881)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc453)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc454)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc454)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc883)
                cir.if %74 {
                  cir.break loc(#loc456)
                } loc(#loc884)
              } loc(#loc882)
              %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc885)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc459)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc886)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc887)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc464)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc464)
              %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc888)
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc466)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc466)
              %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc467)
              %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
              %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
              cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc889)
              %32 = cir.const #cir.int<27015> : !s32i loc(#loc470)
              %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc470)
              %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc471)
              %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc890)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc476)
                %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc892)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc893)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc893)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc481)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc482)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc482)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc894)
                cir.if %78 {
                  cir.break loc(#loc484)
                } loc(#loc895)
              } loc(#loc891)
              %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc485)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc486)
              %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc487)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc488)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc896)
              %41 = cir.const #cir.int<1> : !u64i loc(#loc897)
              %42 = cir.const #cir.int<100> : !s32i loc(#loc493)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc493)
              %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc494)
              %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc898)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc495)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc495)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc899)
              %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc900)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc497)
              %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc498)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc498)
              cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc901)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc503)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc504)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc504)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc903)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc505)
                  cir.yield %76 : !cir.bool loc(#loc505)
                }, false {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc506)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc507)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc904)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc505)
                    cir.yield %80 : !cir.bool loc(#loc505)
                  }, false {
                    %80 = cir.const #false loc(#loc505)
                    cir.yield %80 : !cir.bool loc(#loc505)
                  }) : (!cir.bool) -> !cir.bool loc(#loc505)
                  cir.yield %79 : !cir.bool loc(#loc505)
                }) : (!cir.bool) -> !cir.bool loc(#loc505)
                cir.if %75 {
                  cir.break loc(#loc509)
                } loc(#loc905)
              } loc(#loc902)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc510)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc510)
              %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc511)
              %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc512)
              %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc513)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc513)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc906)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc907)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc908)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc516)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc909)
              %63 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc517)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc518)
              %65 = cir.const #cir.int<13> : !s32i loc(#loc519)
              %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc517)
              cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc910)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc524)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc524)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc526)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc526)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc527)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc913)
                } loc(#loc912)
              } loc(#loc911)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc529)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc530)
              %69 = cir.const #cir.int<10> : !s32i loc(#loc531)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc529)
              cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc914)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc536)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc536)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc538)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc538)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc539)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc917)
                } loc(#loc916)
              } loc(#loc915)
              cir.yield loc(#loc444)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc541)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc541)
              cir.condition(%18) loc(#loc541)
            } loc(#loc880)
          } loc(#loc880)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc544)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc545)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc545)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc919)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc547)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc548)
            } loc(#loc920)
          } loc(#loc918)
        } loc(#loc874)
      } loc(#loc873)
    } loc(#loc871)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc922)
      %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc551)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc551)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc925)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc926)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc927)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc562)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc563)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc564)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc564)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc562)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc565)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc929)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc569)
                %18 = cir.const #cir.int<10000> : !s32i loc(#loc570)
                %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc932)
                cir.if %19 {
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc572)
                  cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc934)
                  cir.scope {
                    %22 = cir.const #cir.int<0> : !s32i loc(#loc576)
                    cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc936)
                    cir.for : cond {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc578)
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc579)
                      %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc937)
                      cir.condition(%25) loc(#loc580)
                    } body {
                      cir.scope {
                        %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc582)
                        %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc583)
                        cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc939)
                      } loc(#loc938)
                      cir.yield loc(#loc575)
                    } step {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc584)
                      %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc585)
                      cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc940)
                      cir.yield loc(#loc935)
                    } loc(#loc935)
                  } loc(#loc935)
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc586)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc587)
                } loc(#loc933)
              } loc(#loc931)
            } loc(#loc930)
          } loc(#loc928)
        } loc(#loc924)
      } loc(#loc923)
    } loc(#loc921)
    cir.return loc(#loc417)
  } loc(#loc867)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc941)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc590)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc943)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc944)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc944)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc944)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc597)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc945)
    cir.scope {
      %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc947)
      %5 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc601)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc601)
      cir.if %6 {
        %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc606)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc606)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc607)
      } else {
        %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc608)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc609)
        %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc590)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc590)
        %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc608)
      } loc(#loc948)
    } loc(#loc946)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc950)
      %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc612)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc612)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc953)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc954)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc955)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc623)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc624)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc625)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc625)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc623)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc626)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc957)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc628)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc959)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc632)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc961)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc634)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc635)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc962)
                  cir.condition(%22) loc(#loc636)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc638)
                    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc639)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc964)
                  } loc(#loc963)
                  cir.yield loc(#loc631)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc640)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc641)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc965)
                  cir.yield loc(#loc960)
                } loc(#loc960)
              } loc(#loc960)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc642)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc643)
            } loc(#loc958)
          } loc(#loc956)
        } loc(#loc952)
      } loc(#loc951)
    } loc(#loc949)
    cir.return loc(#loc592)
  } loc(#loc942)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc967)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc968)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc968)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc968)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc650)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc969)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc971)
      %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc654)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc654)
      cir.if %6 {
        %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc657)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc658)
        %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc659)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc659)
        %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc657)
      } loc(#loc972)
    } loc(#loc970)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc974)
      %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc662)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc662)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc977)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc978)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc979)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc673)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc674)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc675)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc675)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc673)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc676)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc981)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc678)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc983)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc682)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc985)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc684)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc685)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc986)
                  cir.condition(%22) loc(#loc686)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc688)
                    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc689)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc988)
                  } loc(#loc987)
                  cir.yield loc(#loc681)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc690)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc691)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc989)
                  cir.yield loc(#loc984)
                } loc(#loc984)
              } loc(#loc984)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc692)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc693)
            } loc(#loc982)
          } loc(#loc980)
        } loc(#loc976)
      } loc(#loc975)
    } loc(#loc973)
    cir.return loc(#loc645)
  } loc(#loc966)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":96:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":246:1)
#loc15 = loc("/usr/include/string.h":247:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdio.h":468:1)
#loc19 = loc("/usr/include/stdio.h":468:12)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":141:30)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":62:1)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":154:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":64:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":64:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":65:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":65:28)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":66:12)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":66:5)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":67:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":136:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":67:8)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":67:26)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":68:5)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":69:9)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":135:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":74:13)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":74:17)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":75:13)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":75:32)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":76:13)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":76:19)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":77:13)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":77:36)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":78:13)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":78:41)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":78:30)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":78:37)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":79:13)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":124:21)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":89:40)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":89:49)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":89:62)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":89:33)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":89:17)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":89:73)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":90:17)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":93:17)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":90:21)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":90:38)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":91:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":92:21)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":94:24)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":94:25)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":94:34)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":94:37)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":94:51)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":94:17)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":94:52)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":95:38)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":95:17)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":96:43)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":96:17)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":96:63)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":97:42)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":97:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":97:17)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":97:50)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":98:17)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":101:17)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":98:29)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":98:62)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":98:63)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":98:72)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":98:86)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":98:21)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":98:92)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":99:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":100:21)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:35)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:59)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:66)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:64)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:50)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:73)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:76)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:87)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:92)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:98)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:108)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:109)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:112)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:30)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":105:113)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":106:17)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":109:17)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":106:21)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":106:35)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":106:48)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":106:51)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":106:65)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":107:17)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":108:21)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":111:61)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":111:17)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":111:22)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":111:32)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":111:45)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":111:56)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":111:57)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":113:27)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":113:34)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":113:40)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":113:17)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":113:44)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":114:17)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":117:17)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":114:21)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":115:17)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":116:32)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":116:22)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":116:21)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":118:27)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":118:34)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":118:40)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":118:17)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":118:44)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":119:17)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":122:17)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":119:21)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":120:17)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":121:32)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":121:22)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":121:21)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":124:20)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":125:13)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":128:13)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":125:17)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":125:34)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":126:13)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":127:30)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":127:17)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":137:5)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":153:5)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":137:8)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":137:26)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":138:5)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":139:9)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":152:9)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":140:13)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":140:17)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":140:20)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":140:23)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":141:13)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":151:13)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":141:17)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":141:24)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":141:43)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":142:13)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":144:31)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":144:17)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":145:17)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":149:17)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":145:26)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":145:22)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":145:29)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":145:33)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":145:31)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":146:17)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":148:32)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":148:21)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":145:37)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":145:36)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":150:30)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":150:17)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":426:1)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":432:1)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":428:5)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":428:14)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":429:5)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":429:14)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":430:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":430:14)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":431:5)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":431:14)
#loc202 = loc("/usr/include/stdlib.h":575:1)
#loc203 = loc("/usr/include/stdlib.h":575:41)
#loc204 = loc("/usr/include/time.h":76:1)
#loc205 = loc("/usr/include/time.h":76:38)
#loc206 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc207 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":448:15)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":450:15)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":453:15)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":455:15)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":443:1)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":458:1)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":444:1)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":446:27)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":446:22)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":446:5)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":448:5)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":449:5)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":449:66)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":450:5)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":453:5)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":454:5)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":454:65)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":455:5)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":457:12)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":457:5)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":50:1)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":53:1)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":52:12)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":52:5)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":239:19)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":161:1)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":261:1)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":163:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":163:12)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":164:5)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":164:28)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":165:12)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":165:5)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":166:5)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":235:5)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":166:8)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":166:26)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":167:5)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":168:9)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":234:9)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":173:13)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":173:17)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":174:13)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":174:32)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":175:13)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":175:19)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":176:13)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":176:36)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":177:13)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":177:41)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":177:30)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":177:37)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":178:13)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":223:21)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":188:40)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":188:49)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":188:62)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":188:33)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":188:17)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":188:73)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":189:17)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":192:17)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":189:21)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":189:38)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":190:17)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":191:21)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":193:24)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":193:25)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":193:34)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":193:37)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":193:51)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":193:17)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":193:52)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":194:38)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":194:17)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":195:53)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":195:43)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":195:17)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":195:63)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":196:42)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":196:36)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":196:17)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":196:50)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":197:17)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":200:17)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":197:29)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":197:62)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":197:63)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":197:72)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":197:86)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":197:21)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":197:92)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":198:17)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":199:21)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:35)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:59)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:66)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:64)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:50)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:73)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:76)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:87)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:92)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:98)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:108)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:109)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:112)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:30)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:17)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":204:113)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":205:17)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":208:17)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":205:21)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":205:35)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":205:48)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":205:51)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":205:65)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":206:17)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":207:21)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":210:61)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":210:17)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":210:22)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":210:32)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":210:45)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":210:56)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":210:57)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":212:27)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":212:34)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":212:40)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":212:17)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":212:44)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":213:17)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":216:17)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":213:21)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":214:17)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":215:32)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":215:22)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":215:21)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":217:27)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":217:34)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":217:40)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":217:17)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":217:44)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":218:17)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":221:17)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":218:21)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":219:17)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":220:32)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":220:22)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":220:21)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":223:20)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":224:13)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":227:13)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":224:17)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":224:34)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":225:13)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":226:30)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":226:17)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":236:5)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":260:5)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":236:8)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":236:27)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":237:5)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":240:5)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":242:5)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":239:9)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":243:9)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":259:9)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":244:13)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":244:17)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":244:20)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":244:23)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":245:13)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":258:13)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":245:17)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":245:24)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":245:30)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":245:43)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":246:13)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":248:17)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":257:17)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":248:21)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":248:25)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":249:17)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":250:35)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":250:21)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":251:21)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":255:21)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":251:30)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":251:26)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":251:33)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":251:37)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":251:35)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":252:21)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":254:36)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":254:25)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":251:41)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":251:40)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":256:34)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":256:21)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":55:1)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":58:1)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":57:12)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":57:5)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":264:1)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":359:1)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":266:5)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":266:12)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":267:5)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":267:28)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":268:12)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":268:5)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":269:5)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":338:5)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":269:8)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":269:26)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":270:5)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":271:9)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":337:9)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":276:13)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":276:17)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":277:13)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":277:32)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":278:13)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":278:19)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":279:13)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":279:36)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":280:13)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":280:41)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":280:30)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":280:37)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":281:13)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":326:21)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":291:40)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":291:49)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":291:62)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":291:33)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":291:17)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":291:73)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":292:17)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":295:17)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":292:21)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":292:38)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":293:17)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":294:21)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":296:24)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":296:25)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":296:34)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":296:37)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":296:51)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":296:17)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":296:52)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":297:38)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":297:17)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":298:53)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":298:43)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":298:17)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":298:63)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":299:42)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":299:36)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":299:17)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":299:50)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":300:17)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":303:17)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":300:29)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":300:62)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":300:63)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":300:72)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":300:86)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":300:21)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":300:92)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":301:17)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":302:21)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:35)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:59)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:66)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:64)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:50)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:73)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:76)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:87)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:92)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:98)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:108)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:109)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:112)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:30)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:17)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":307:113)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":308:17)
#loc502 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":311:17)
#loc503 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":308:21)
#loc504 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":308:35)
#loc505 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":308:48)
#loc506 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":308:51)
#loc507 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":308:65)
#loc508 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":309:17)
#loc509 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":310:21)
#loc510 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":313:61)
#loc511 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":313:17)
#loc512 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":313:22)
#loc513 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":313:32)
#loc514 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":313:45)
#loc515 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":313:56)
#loc516 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":313:57)
#loc517 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":315:27)
#loc518 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":315:34)
#loc519 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":315:40)
#loc520 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":315:17)
#loc521 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":315:44)
#loc522 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":316:17)
#loc523 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":319:17)
#loc524 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":316:21)
#loc525 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":317:17)
#loc526 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":318:32)
#loc527 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":318:22)
#loc528 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":318:21)
#loc529 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":320:27)
#loc530 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":320:34)
#loc531 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":320:40)
#loc532 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":320:17)
#loc533 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":320:44)
#loc534 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":321:17)
#loc535 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":324:17)
#loc536 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":321:21)
#loc537 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":322:17)
#loc538 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":323:32)
#loc539 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":323:22)
#loc540 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":323:21)
#loc541 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":326:20)
#loc542 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":327:13)
#loc543 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":330:13)
#loc544 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":327:17)
#loc545 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":327:34)
#loc546 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":328:13)
#loc547 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":329:30)
#loc548 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":329:17)
#loc549 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":339:5)
#loc550 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":358:5)
#loc551 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":339:8)
#loc552 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":339:26)
#loc553 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":340:5)
#loc554 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":341:9)
#loc555 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":357:9)
#loc556 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":342:13)
#loc557 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":342:17)
#loc558 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":342:20)
#loc559 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":342:23)
#loc560 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":343:13)
#loc561 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":356:13)
#loc562 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":343:17)
#loc563 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":343:24)
#loc564 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":343:30)
#loc565 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":343:43)
#loc566 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":344:13)
#loc567 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":346:17)
#loc568 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":355:17)
#loc569 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":346:21)
#loc570 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":346:25)
#loc571 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":347:17)
#loc572 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":348:35)
#loc573 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":348:21)
#loc574 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":349:21)
#loc575 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":353:21)
#loc576 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":349:30)
#loc577 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":349:26)
#loc578 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":349:33)
#loc579 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":349:37)
#loc580 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":349:35)
#loc581 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":350:21)
#loc582 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":352:36)
#loc583 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":352:25)
#loc584 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":349:41)
#loc585 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":349:40)
#loc586 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":354:34)
#loc587 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":354:21)
#loc588 = loc("/usr/include/string.h":141:1)
#loc589 = loc("/usr/include/string.h":142:14)
#loc590 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":375:22)
#loc591 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":362:1)
#loc592 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":394:1)
#loc593 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":364:5)
#loc594 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":364:12)
#loc595 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":365:5)
#loc596 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":365:28)
#loc597 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":366:12)
#loc598 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":366:5)
#loc599 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":367:5)
#loc600 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":376:5)
#loc601 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":367:8)
#loc602 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":367:27)
#loc603 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":368:5)
#loc604 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":371:5)
#loc605 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":373:5)
#loc606 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":370:19)
#loc607 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":370:9)
#loc608 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":375:9)
#loc609 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":375:16)
#loc610 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":377:5)
#loc611 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":393:5)
#loc612 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":377:8)
#loc613 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":377:26)
#loc614 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":378:5)
#loc615 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":379:9)
#loc616 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":392:9)
#loc617 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":380:13)
#loc618 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":380:17)
#loc619 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":380:20)
#loc620 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":380:23)
#loc621 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":381:13)
#loc622 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":391:13)
#loc623 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":381:17)
#loc624 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":381:24)
#loc625 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":381:30)
#loc626 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":381:43)
#loc627 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":382:13)
#loc628 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":384:31)
#loc629 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":384:17)
#loc630 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":385:17)
#loc631 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":389:17)
#loc632 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":385:26)
#loc633 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":385:22)
#loc634 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":385:29)
#loc635 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":385:33)
#loc636 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":385:31)
#loc637 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":386:17)
#loc638 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":388:32)
#loc639 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":388:21)
#loc640 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":385:37)
#loc641 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":385:36)
#loc642 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":390:30)
#loc643 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":390:17)
#loc644 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":397:1)
#loc645 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":424:1)
#loc646 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":399:5)
#loc647 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":399:12)
#loc648 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":400:5)
#loc649 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":400:28)
#loc650 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":401:12)
#loc651 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":401:5)
#loc652 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":402:5)
#loc653 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":406:5)
#loc654 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":402:8)
#loc655 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":402:26)
#loc656 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":403:5)
#loc657 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":405:9)
#loc658 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":405:16)
#loc659 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":405:22)
#loc660 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":407:5)
#loc661 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":423:5)
#loc662 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":407:8)
#loc663 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":407:26)
#loc664 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":408:5)
#loc665 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":409:9)
#loc666 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":422:9)
#loc667 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":410:13)
#loc668 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":410:17)
#loc669 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":410:20)
#loc670 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":410:23)
#loc671 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":411:13)
#loc672 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":421:13)
#loc673 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":411:17)
#loc674 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":411:24)
#loc675 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":411:30)
#loc676 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":411:43)
#loc677 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":412:13)
#loc678 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":414:31)
#loc679 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":414:17)
#loc680 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":415:17)
#loc681 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":419:17)
#loc682 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":415:26)
#loc683 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":415:22)
#loc684 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":415:29)
#loc685 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":415:33)
#loc686 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":415:31)
#loc687 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":416:17)
#loc688 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":418:32)
#loc689 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":418:21)
#loc690 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":415:37)
#loc691 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":415:36)
#loc692 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":420:30)
#loc693 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_08.c":420:17)
#loc694 = loc(fused[#loc1, #loc2])
#loc695 = loc(fused[#loc3, #loc4])
#loc696 = loc(fused[#loc5, #loc6])
#loc697 = loc(fused[#loc8, #loc9])
#loc698 = loc(fused[#loc10, #loc11])
#loc699 = loc(fused[#loc12, #loc13])
#loc700 = loc(fused[#loc14, #loc15])
#loc701 = loc(fused[#loc16, #loc17])
#loc702 = loc(fused[#loc18, #loc19])
#loc703 = loc(fused[#loc21, #loc22])
#loc704 = loc(fused[#loc23, #loc24])
#loc705 = loc(fused[#loc25, #loc26])
#loc706 = loc(fused[#loc27, #loc28])
#loc707 = loc(fused[#loc30, #loc29])
#loc708 = loc(fused[#loc31, #loc32])
#loc709 = loc(fused[#loc33, #loc34])
#loc710 = loc(fused[#loc35, #loc32])
#loc711 = loc(fused[#loc36, #loc37])
#loc712 = loc(fused[#loc38, #loc39])
#loc713 = loc(fused[#loc40, #loc41])
#loc714 = loc(fused[#loc42, #loc43])
#loc715 = loc(fused[#loc44, #loc45])
#loc716 = loc(fused[#loc46, #loc47])
#loc717 = loc(fused[#loc50, #loc51])
#loc718 = loc(fused[#loc56, #loc57])
#loc719 = loc(fused[#loc58, #loc59])
#loc720 = loc(fused[#loc60, #loc61])
#loc721 = loc(fused[#loc62, #loc59])
#loc722 = loc(fused[#loc64, #loc65])
#loc723 = loc(fused[#loc67, #loc68])
#loc724 = loc(fused[#loc69, #loc70])
#loc725 = loc(fused[#loc73, #loc71])
#loc726 = loc(fused[#loc77, #loc78])
#loc727 = loc(fused[#loc82, #loc83])
#loc728 = loc(fused[#loc84, #loc85])
#loc729 = loc(fused[#loc87, #loc88])
#loc730 = loc(fused[#loc89, #loc90])
#loc731 = loc(fused[#loc91, #loc92])
#loc732 = loc(fused[#loc93, #loc85])
#loc733 = loc(fused[#loc99, #loc100])
#loc734 = loc(fused[#loc101, #loc102])
#loc735 = loc(fused[#loc103, #loc104])
#loc736 = loc(fused[#loc103, #loc105])
#loc737 = loc(fused[#loc101, #loc106])
#loc738 = loc(fused[#loc109, #loc110])
#loc739 = loc(fused[#loc111, #loc112])
#loc740 = loc(fused[#loc113, #loc114])
#loc741 = loc(fused[#loc116, #loc117])
#loc742 = loc(fused[#loc118, #loc112])
#loc743 = loc(fused[#loc124, #loc125])
#loc744 = loc(fused[#loc123, #loc125])
#loc745 = loc(fused[#loc122, #loc125])
#loc746 = loc(fused[#loc121, #loc120])
#loc747 = loc(fused[#loc130, #loc131])
#loc748 = loc(fused[#loc132, #loc133])
#loc749 = loc(fused[#loc135, #loc133])
#loc750 = loc(fused[#loc138, #loc136])
#loc751 = loc(fused[#loc142, #loc143])
#loc752 = loc(fused[#loc144, #loc145])
#loc753 = loc(fused[#loc147, #loc145])
#loc754 = loc(fused[#loc150, #loc148])
#loc755 = loc(fused[#loc152, #loc153])
#loc756 = loc(fused[#loc154, #loc155])
#loc757 = loc(fused[#loc156, #loc153])
#loc758 = loc(fused[#loc159, #loc160])
#loc759 = loc(fused[#loc161, #loc162])
#loc760 = loc(fused[#loc163, #loc160])
#loc761 = loc(fused[#loc164, #loc165])
#loc762 = loc(fused[#loc166, #loc167])
#loc763 = loc(fused[#loc166, #loc168])
#loc764 = loc(fused[#loc166, #loc169])
#loc765 = loc(fused[#loc170, #loc171])
#loc766 = loc(fused[#loc172, #loc174])
#loc767 = loc(fused[#loc175, #loc171])
#loc768 = loc(fused[#loc177, #loc176])
#loc769 = loc(fused[#loc178, #loc179])
#loc770 = loc(fused[#loc181, #loc180])
#loc771 = loc(fused[#loc182, #loc183])
#loc772 = loc(fused[#loc185, #loc179])
#loc773 = loc(fused[#loc187, #loc186])
#loc774 = loc(fused[#loc189, #loc188])
#loc775 = loc(fused[#loc192, #loc193])
#loc776 = loc(fused[#loc194, #loc195])
#loc777 = loc(fused[#loc196, #loc197])
#loc778 = loc(fused[#loc198, #loc199])
#loc779 = loc(fused[#loc200, #loc201])
#loc780 = loc(fused[#loc202, #loc203])
#loc781 = loc(fused[#loc204, #loc205])
#loc782 = loc(fused[#loc206, #loc207])
#loc783 = loc(fused[#loc212, #loc213])
#loc786 = loc(fused[#loc223, #loc224])
#loc787 = loc(fused[#loc227, #loc228])
#loc788 = loc(fused[#loc231, #loc230])
#loc789 = loc(fused[#loc232, #loc233])
#loc790 = loc(fused[#loc235, #loc234])
#loc791 = loc(fused[#loc237, #loc238])
#loc792 = loc(fused[#loc239, #loc240])
#loc793 = loc(fused[#loc241, #loc242])
#loc794 = loc(fused[#loc244, #loc243])
#loc795 = loc(fused[#loc245, #loc246])
#loc796 = loc(fused[#loc247, #loc248])
#loc797 = loc(fused[#loc249, #loc246])
#loc798 = loc(fused[#loc250, #loc251])
#loc799 = loc(fused[#loc252, #loc253])
#loc800 = loc(fused[#loc254, #loc255])
#loc801 = loc(fused[#loc256, #loc257])
#loc802 = loc(fused[#loc258, #loc259])
#loc803 = loc(fused[#loc260, #loc261])
#loc804 = loc(fused[#loc264, #loc265])
#loc805 = loc(fused[#loc270, #loc271])
#loc806 = loc(fused[#loc272, #loc273])
#loc807 = loc(fused[#loc274, #loc275])
#loc808 = loc(fused[#loc276, #loc273])
#loc809 = loc(fused[#loc278, #loc279])
#loc810 = loc(fused[#loc281, #loc282])
#loc811 = loc(fused[#loc283, #loc284])
#loc812 = loc(fused[#loc286, #loc285])
#loc813 = loc(fused[#loc289, #loc290])
#loc814 = loc(fused[#loc293, #loc294])
#loc815 = loc(fused[#loc295, #loc296])
#loc816 = loc(fused[#loc298, #loc299])
#loc817 = loc(fused[#loc300, #loc301])
#loc818 = loc(fused[#loc302, #loc303])
#loc819 = loc(fused[#loc304, #loc296])
#loc820 = loc(fused[#loc310, #loc311])
#loc821 = loc(fused[#loc312, #loc313])
#loc822 = loc(fused[#loc314, #loc315])
#loc823 = loc(fused[#loc314, #loc316])
#loc824 = loc(fused[#loc312, #loc317])
#loc825 = loc(fused[#loc320, #loc321])
#loc826 = loc(fused[#loc322, #loc323])
#loc827 = loc(fused[#loc324, #loc325])
#loc828 = loc(fused[#loc327, #loc328])
#loc829 = loc(fused[#loc329, #loc323])
#loc830 = loc(fused[#loc335, #loc336])
#loc831 = loc(fused[#loc334, #loc336])
#loc832 = loc(fused[#loc333, #loc336])
#loc833 = loc(fused[#loc332, #loc331])
#loc834 = loc(fused[#loc341, #loc342])
#loc835 = loc(fused[#loc343, #loc344])
#loc836 = loc(fused[#loc346, #loc344])
#loc837 = loc(fused[#loc349, #loc347])
#loc838 = loc(fused[#loc353, #loc354])
#loc839 = loc(fused[#loc355, #loc356])
#loc840 = loc(fused[#loc358, #loc356])
#loc841 = loc(fused[#loc361, #loc359])
#loc842 = loc(fused[#loc363, #loc364])
#loc843 = loc(fused[#loc365, #loc366])
#loc844 = loc(fused[#loc367, #loc364])
#loc845 = loc(fused[#loc370, #loc371])
#loc846 = loc(fused[#loc372, #loc373])
#loc847 = loc(fused[#loc374, #loc375, #loc376, #loc371])
#loc848 = loc(fused[#loc378, #loc379])
#loc849 = loc(fused[#loc380, #loc381])
#loc850 = loc(fused[#loc380, #loc382])
#loc851 = loc(fused[#loc380, #loc383])
#loc852 = loc(fused[#loc384, #loc385])
#loc853 = loc(fused[#loc386, #loc389])
#loc854 = loc(fused[#loc390, #loc385])
#loc855 = loc(fused[#loc391, #loc392])
#loc856 = loc(fused[#loc393, #loc394])
#loc857 = loc(fused[#loc395, #loc392])
#loc858 = loc(fused[#loc397, #loc396])
#loc859 = loc(fused[#loc398, #loc399])
#loc860 = loc(fused[#loc401, #loc400])
#loc861 = loc(fused[#loc402, #loc403])
#loc862 = loc(fused[#loc405, #loc399])
#loc863 = loc(fused[#loc407, #loc406])
#loc864 = loc(fused[#loc409, #loc408])
#loc865 = loc(fused[#loc412, #loc413])
#loc866 = loc(fused[#loc415, #loc414])
#loc867 = loc(fused[#loc416, #loc417])
#loc868 = loc(fused[#loc418, #loc419])
#loc869 = loc(fused[#loc420, #loc421])
#loc870 = loc(fused[#loc423, #loc422])
#loc871 = loc(fused[#loc424, #loc425])
#loc872 = loc(fused[#loc426, #loc427])
#loc873 = loc(fused[#loc428, #loc425])
#loc874 = loc(fused[#loc429, #loc430])
#loc875 = loc(fused[#loc431, #loc432])
#loc876 = loc(fused[#loc433, #loc434])
#loc877 = loc(fused[#loc435, #loc436])
#loc878 = loc(fused[#loc437, #loc438])
#loc879 = loc(fused[#loc439, #loc440])
#loc880 = loc(fused[#loc443, #loc444])
#loc881 = loc(fused[#loc449, #loc450])
#loc882 = loc(fused[#loc451, #loc452])
#loc883 = loc(fused[#loc453, #loc454])
#loc884 = loc(fused[#loc455, #loc452])
#loc885 = loc(fused[#loc457, #loc458])
#loc886 = loc(fused[#loc460, #loc461])
#loc887 = loc(fused[#loc462, #loc463])
#loc888 = loc(fused[#loc465, #loc464])
#loc889 = loc(fused[#loc468, #loc469])
#loc890 = loc(fused[#loc472, #loc473])
#loc891 = loc(fused[#loc474, #loc475])
#loc892 = loc(fused[#loc477, #loc478])
#loc893 = loc(fused[#loc479, #loc480])
#loc894 = loc(fused[#loc481, #loc482])
#loc895 = loc(fused[#loc483, #loc475])
#loc896 = loc(fused[#loc489, #loc490])
#loc897 = loc(fused[#loc491, #loc492])
#loc898 = loc(fused[#loc493, #loc494])
#loc899 = loc(fused[#loc493, #loc495])
#loc900 = loc(fused[#loc491, #loc496])
#loc901 = loc(fused[#loc499, #loc500])
#loc902 = loc(fused[#loc501, #loc502])
#loc903 = loc(fused[#loc503, #loc504])
#loc904 = loc(fused[#loc506, #loc507])
#loc905 = loc(fused[#loc508, #loc502])
#loc906 = loc(fused[#loc514, #loc515])
#loc907 = loc(fused[#loc513, #loc515])
#loc908 = loc(fused[#loc512, #loc515])
#loc909 = loc(fused[#loc511, #loc510])
#loc910 = loc(fused[#loc520, #loc521])
#loc911 = loc(fused[#loc522, #loc523])
#loc912 = loc(fused[#loc525, #loc523])
#loc913 = loc(fused[#loc528, #loc526])
#loc914 = loc(fused[#loc532, #loc533])
#loc915 = loc(fused[#loc534, #loc535])
#loc916 = loc(fused[#loc537, #loc535])
#loc917 = loc(fused[#loc540, #loc538])
#loc918 = loc(fused[#loc542, #loc543])
#loc919 = loc(fused[#loc544, #loc545])
#loc920 = loc(fused[#loc546, #loc543])
#loc921 = loc(fused[#loc549, #loc550])
#loc922 = loc(fused[#loc551, #loc552])
#loc923 = loc(fused[#loc553, #loc550])
#loc924 = loc(fused[#loc554, #loc555])
#loc925 = loc(fused[#loc556, #loc557])
#loc926 = loc(fused[#loc556, #loc558])
#loc927 = loc(fused[#loc556, #loc559])
#loc928 = loc(fused[#loc560, #loc561])
#loc929 = loc(fused[#loc562, #loc565])
#loc930 = loc(fused[#loc566, #loc561])
#loc931 = loc(fused[#loc567, #loc568])
#loc932 = loc(fused[#loc569, #loc570])
#loc933 = loc(fused[#loc571, #loc568])
#loc934 = loc(fused[#loc573, #loc572])
#loc935 = loc(fused[#loc574, #loc575])
#loc936 = loc(fused[#loc577, #loc576])
#loc937 = loc(fused[#loc578, #loc579])
#loc938 = loc(fused[#loc581, #loc575])
#loc939 = loc(fused[#loc583, #loc582])
#loc940 = loc(fused[#loc585, #loc584])
#loc941 = loc(fused[#loc588, #loc589])
#loc942 = loc(fused[#loc591, #loc592])
#loc943 = loc(fused[#loc593, #loc594])
#loc944 = loc(fused[#loc595, #loc596])
#loc945 = loc(fused[#loc598, #loc597])
#loc946 = loc(fused[#loc599, #loc600])
#loc947 = loc(fused[#loc601, #loc602])
#loc948 = loc(fused[#loc603, #loc604, #loc605, #loc600])
#loc949 = loc(fused[#loc610, #loc611])
#loc950 = loc(fused[#loc612, #loc613])
#loc951 = loc(fused[#loc614, #loc611])
#loc952 = loc(fused[#loc615, #loc616])
#loc953 = loc(fused[#loc617, #loc618])
#loc954 = loc(fused[#loc617, #loc619])
#loc955 = loc(fused[#loc617, #loc620])
#loc956 = loc(fused[#loc621, #loc622])
#loc957 = loc(fused[#loc623, #loc626])
#loc958 = loc(fused[#loc627, #loc622])
#loc959 = loc(fused[#loc629, #loc628])
#loc960 = loc(fused[#loc630, #loc631])
#loc961 = loc(fused[#loc633, #loc632])
#loc962 = loc(fused[#loc634, #loc635])
#loc963 = loc(fused[#loc637, #loc631])
#loc964 = loc(fused[#loc639, #loc638])
#loc965 = loc(fused[#loc641, #loc640])
#loc966 = loc(fused[#loc644, #loc645])
#loc967 = loc(fused[#loc646, #loc647])
#loc968 = loc(fused[#loc648, #loc649])
#loc969 = loc(fused[#loc651, #loc650])
#loc970 = loc(fused[#loc652, #loc653])
#loc971 = loc(fused[#loc654, #loc655])
#loc972 = loc(fused[#loc656, #loc653])
#loc973 = loc(fused[#loc660, #loc661])
#loc974 = loc(fused[#loc662, #loc663])
#loc975 = loc(fused[#loc664, #loc661])
#loc976 = loc(fused[#loc665, #loc666])
#loc977 = loc(fused[#loc667, #loc668])
#loc978 = loc(fused[#loc667, #loc669])
#loc979 = loc(fused[#loc667, #loc670])
#loc980 = loc(fused[#loc671, #loc672])
#loc981 = loc(fused[#loc673, #loc676])
#loc982 = loc(fused[#loc677, #loc672])
#loc983 = loc(fused[#loc679, #loc678])
#loc984 = loc(fused[#loc680, #loc681])
#loc985 = loc(fused[#loc683, #loc682])
#loc986 = loc(fused[#loc684, #loc685])
#loc987 = loc(fused[#loc687, #loc681])
#loc988 = loc(fused[#loc689, #loc688])
#loc989 = loc(fused[#loc691, #loc690])
