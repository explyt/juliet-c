!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":91:10)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":91:14)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":91:20)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":91:32)
#loc120 = loc(fused[#loc32, #loc33])
#loc121 = loc(fused[#loc34, #loc35])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc108)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %1 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc11)
    %2 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc12)
    cir.call @printDoubleLine(%2) : (!cir.double) -> () loc(#loc13)
    cir.return loc(#loc4)
  } loc(#loc109)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc16)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc115)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    cir.return loc(#loc15)
  } loc(#loc113)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc116)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc27)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc28)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc29)
  cir.func @main(%arg0: !s32i loc(fused[#loc32, #loc33]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc34, #loc35])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc31)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc36)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc36)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc37)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc38)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc38)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc39)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc26)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_pointer_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_pointer_18_good() : () -> () loc(#loc41)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc27)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc28)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_pointer_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_pointer_18_bad() : () -> () loc(#loc45)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc29)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc48)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.return %17 : !s32i loc(#loc124)
  } loc(#loc119)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc125)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc126)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc62)
    %2 = cir.const #cir.int<8> : !u64i loc(#loc131)
    %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc62)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc132)
    cir.store %4, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc133)
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc69)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc70)
    %8 = cir.cmp(eq, %5, %7) : !cir.ptr<!cir.double>, !cir.bool loc(#loc135)
    cir.brcond %8 ^bb4, ^bb5 loc(#loc136)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc72)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc74)
    cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr1) loc(#loc72)
    cir.br ^bb5 loc(#loc68)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc75)
    %13 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc76)
    cir.store %12, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc137)
    %14 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc78)
    %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc79)
    cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc80)
    cir.return loc(#loc55)
  } loc(#loc127)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc87)
    %2 = cir.const #cir.int<8> : !u64i loc(#loc141)
    %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc87)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc142)
    cir.store %4, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc143)
    cir.br ^bb2 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc94)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc95)
    %8 = cir.cmp(eq, %5, %7) : !cir.ptr<!cir.double>, !cir.bool loc(#loc145)
    cir.brcond %8 ^bb3, ^bb4 loc(#loc146)
  ^bb3:  // pred: ^bb2
    %9 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc97)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc99)
    cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr1) loc(#loc97)
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc93)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc100)
    %13 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc101)
    cir.store %12, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc147)
    cir.br ^bb6 loc(#loc148)
  ^bb6:  // pred: ^bb5
    %14 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc105)
    %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc106)
    cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc107)
    cir.return loc(#loc82)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":24:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":35:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":26:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":26:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":27:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":27:10)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":31:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":31:10)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":34:22)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":34:21)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":34:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":76:1)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":80:1)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":78:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":78:13)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":79:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":79:13)
#loc20 = loc("/usr/include/stdlib.h":575:1)
#loc21 = loc("/usr/include/stdlib.h":575:41)
#loc22 = loc("/usr/include/time.h":76:1)
#loc23 = loc("/usr/include/time.h":76:38)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":96:15)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":98:15)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":101:15)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":103:15)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":91:1)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":106:1)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":92:1)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":94:27)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":94:22)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":94:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":96:5)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":97:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":97:66)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":98:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":101:5)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":102:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":102:65)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":103:5)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":105:12)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":105:5)
#loc50 = loc("/usr/include/stdlib.h":672:1)
#loc51 = loc("/usr/include/stdlib.h":672:45)
#loc52 = loc("/usr/include/stdlib.h":756:1)
#loc53 = loc("/usr/include/stdlib.h":756:70)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":42:1)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":57:1)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":44:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":44:14)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":45:5)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":45:10)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":49:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":49:10)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":53:22)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":53:29)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":53:42)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":53:43)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":53:5)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":54:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":54:33)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":54:9)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":54:17)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":54:23)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":54:24)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":54:30)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":54:29)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":55:13)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":55:6)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":55:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":56:22)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":56:21)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":56:5)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":60:1)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":74:1)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":62:5)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":62:14)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":63:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":63:10)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":67:22)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":67:29)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":67:42)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":67:43)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":67:5)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":68:5)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":68:33)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":68:9)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":68:17)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":68:23)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":68:24)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":68:30)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":68:29)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":69:13)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":69:6)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":69:5)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":70:5)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":70:10)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":73:22)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":73:21)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_18.c":73:5)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc14, #loc15])
#loc114 = loc(fused[#loc16, #loc17])
#loc115 = loc(fused[#loc18, #loc19])
#loc116 = loc(fused[#loc20, #loc21])
#loc117 = loc(fused[#loc22, #loc23])
#loc118 = loc(fused[#loc24, #loc25])
#loc119 = loc(fused[#loc30, #loc31])
#loc122 = loc(fused[#loc41, #loc42])
#loc123 = loc(fused[#loc45, #loc46])
#loc124 = loc(fused[#loc49, #loc48])
#loc125 = loc(fused[#loc50, #loc51])
#loc126 = loc(fused[#loc52, #loc53])
#loc127 = loc(fused[#loc54, #loc55])
#loc128 = loc(fused[#loc56, #loc57])
#loc129 = loc(fused[#loc58, #loc59])
#loc130 = loc(fused[#loc60, #loc61])
#loc131 = loc(fused[#loc63, #loc64])
#loc132 = loc(fused[#loc62, #loc65])
#loc133 = loc(fused[#loc66, #loc65])
#loc134 = loc(fused[#loc67, #loc68])
#loc135 = loc(fused[#loc69, #loc70])
#loc136 = loc(fused[#loc71, #loc68])
#loc137 = loc(fused[#loc77, #loc75])
#loc138 = loc(fused[#loc81, #loc82])
#loc139 = loc(fused[#loc83, #loc84])
#loc140 = loc(fused[#loc85, #loc86])
#loc141 = loc(fused[#loc88, #loc89])
#loc142 = loc(fused[#loc87, #loc90])
#loc143 = loc(fused[#loc91, #loc90])
#loc144 = loc(fused[#loc92, #loc93])
#loc145 = loc(fused[#loc94, #loc95])
#loc146 = loc(fused[#loc96, #loc93])
#loc147 = loc(fused[#loc102, #loc100])
#loc148 = loc(fused[#loc103, #loc104])
