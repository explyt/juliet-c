!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":21:79)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":21:95)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":61:83)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":61:99)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc139 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc71, #loc72])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc137)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41_badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc140)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc142)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
    cir.store %arg0, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc13)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc144)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc145)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc20)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc146)
    cir.br ^bb4 loc(#loc145)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc23)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc147)
    cir.brcond %9 ^bb5, ^bb9 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc148)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc35)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc151)
    cir.br ^bb4 loc(#loc145)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc17)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc152)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc153)
  ^bb13:  // pred: ^bb12
    %22 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc40)
    cir.store %23, %2 : !u64i, !cir.ptr<!u64i> loc(#loc154)
    cir.br ^bb14 loc(#loc153)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc43)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc155)
    cir.brcond %27 ^bb15, ^bb19 loc(#loc44)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc156)
  ^bb16:  // pred: ^bb15
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.copy %33 to %30 : !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    cir.br ^bb17 loc(#loc39)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc39)
  ^bb18:  // pred: ^bb17
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc52)
    cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.br ^bb14 loc(#loc153)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc39)
  ^bb20:  // pred: ^bb19
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %37 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    cir.call @printStructLine(%38) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc56)
    cir.br ^bb21 loc(#loc37)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc15)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc4)
  } loc(#loc138)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc62)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc62)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc62)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc62)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc62)
    %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc161)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc62)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc160)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc64)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc64)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc64)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc64)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc64)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    cir.store %16, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41_badSink(%18) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc68)
    cir.return loc(#loc58)
  } loc(#loc158)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41_goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc71, #loc72])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc165)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
    cir.store %arg0, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc79)
    cir.br ^bb1 loc(#loc168)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc169)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc170)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc86)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc171)
    cir.br ^bb4 loc(#loc170)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc89)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc172)
    cir.brcond %9 ^bb5, ^bb9 loc(#loc90)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc173)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc96)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    cir.br ^bb7 loc(#loc85)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc85)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc99)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc176)
    cir.br ^bb4 loc(#loc170)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc85)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc83)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc177)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc178)
  ^bb13:  // pred: ^bb12
    %22 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc104)
    cir.store %23, %2 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    cir.br ^bb14 loc(#loc178)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc107)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc180)
    cir.brcond %27 ^bb15, ^bb19 loc(#loc108)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc181)
  ^bb16:  // pred: ^bb15
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    cir.copy %33 to %30 : !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
    cir.br ^bb17 loc(#loc103)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc103)
  ^bb18:  // pred: ^bb17
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc116)
    cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.br ^bb14 loc(#loc178)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc103)
  ^bb20:  // pred: ^bb19
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %37 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    cir.call @printStructLine(%38) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc120)
    cir.br ^bb21 loc(#loc101)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc81)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc70)
  } loc(#loc163)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc123)
    cir.return loc(#loc122)
  } loc(#loc183)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc187)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc130)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc130)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc130)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc130)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc130)
    %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc188)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc130)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc187)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc132)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc132)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc132)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc132)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc132)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    cir.store %16, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc188)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc189)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41_goodG2BSink(%18) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc136)
    cir.return loc(#loc126)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":44:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":24:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":24:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":26:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":26:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":35:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":35:20)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":22:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":23:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":43:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":25:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":33:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":28:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":32:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":28:22)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":28:18)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":28:25)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":28:29)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":28:27)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":29:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":30:36)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":30:24)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":30:17)
#loc29 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":31:36)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":31:24)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":31:17)
#loc33 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":28:35)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":28:34)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":34:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":42:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":37:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":40:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":37:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":37:18)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":37:25)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":37:29)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":37:27)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":38:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":39:17)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":39:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":39:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":39:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":39:27)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":37:35)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":37:34)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":41:30)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":41:35)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":41:36)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":41:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":46:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":55:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":48:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":48:21)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":49:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":49:54)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":50:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":50:55)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":53:12)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":53:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":54:78)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":54:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":61:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":84:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":64:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":64:33)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":66:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":66:20)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":75:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":75:20)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":62:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":63:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":83:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":65:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":73:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":68:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":72:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":68:22)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":68:18)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":68:25)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":68:29)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":68:27)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":69:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":70:36)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":70:24)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":70:17)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":71:36)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":71:24)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":71:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":68:35)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":68:34)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":74:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":82:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":77:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":80:13)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":77:22)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":77:18)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":77:25)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":77:29)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":77:27)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":78:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":79:17)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":79:22)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":79:23)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":79:34)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":79:27)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":77:35)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":77:34)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":81:30)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":81:35)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":81:36)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":81:13)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":97:1)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":100:1)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":99:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":99:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":87:1)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":95:1)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":89:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":89:21)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":90:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":90:54)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":91:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":91:55)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":93:12)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":93:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":94:82)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_41.c":94:5)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc9, #loc10])
#loc142 = loc(fused[#loc11, #loc12])
#loc143 = loc(fused[#loc14, #loc15])
#loc144 = loc(fused[#loc16, #loc17])
#loc145 = loc(fused[#loc18, #loc19])
#loc146 = loc(fused[#loc21, #loc20])
#loc147 = loc(fused[#loc22, #loc23])
#loc148 = loc(fused[#loc25, #loc19])
#loc149 = loc(fused[#loc28, #loc26])
#loc150 = loc(fused[#loc32, #loc30])
#loc151 = loc(fused[#loc35, #loc34])
#loc152 = loc(fused[#loc36, #loc37])
#loc153 = loc(fused[#loc38, #loc39])
#loc154 = loc(fused[#loc41, #loc40])
#loc155 = loc(fused[#loc42, #loc43])
#loc156 = loc(fused[#loc45, #loc39])
#loc157 = loc(fused[#loc52, #loc51])
#loc158 = loc(fused[#loc57, #loc58])
#loc159 = loc(fused[#loc59, #loc60])
#loc160 = loc(fused[#loc61, #loc62])
#loc161 = loc(fused[#loc63, #loc64])
#loc162 = loc(fused[#loc66, #loc65])
#loc163 = loc(fused[#loc69, #loc70])
#loc165 = loc(fused[#loc73, #loc74])
#loc166 = loc(fused[#loc75, #loc76])
#loc167 = loc(fused[#loc77, #loc78])
#loc168 = loc(fused[#loc80, #loc81])
#loc169 = loc(fused[#loc82, #loc83])
#loc170 = loc(fused[#loc84, #loc85])
#loc171 = loc(fused[#loc87, #loc86])
#loc172 = loc(fused[#loc88, #loc89])
#loc173 = loc(fused[#loc91, #loc85])
#loc174 = loc(fused[#loc94, #loc92])
#loc175 = loc(fused[#loc97, #loc95])
#loc176 = loc(fused[#loc99, #loc98])
#loc177 = loc(fused[#loc100, #loc101])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc105, #loc104])
#loc180 = loc(fused[#loc106, #loc107])
#loc181 = loc(fused[#loc109, #loc103])
#loc182 = loc(fused[#loc116, #loc115])
#loc183 = loc(fused[#loc121, #loc122])
#loc184 = loc(fused[#loc123, #loc124])
#loc185 = loc(fused[#loc125, #loc126])
#loc186 = loc(fused[#loc127, #loc128])
#loc187 = loc(fused[#loc129, #loc130])
#loc188 = loc(fused[#loc131, #loc132])
#loc189 = loc(fused[#loc134, #loc133])
