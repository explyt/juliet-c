!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc6 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":24:21)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":24:25)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":170:10)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":170:14)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":170:20)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":170:32)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":76:25)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":76:29)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":112:25)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":112:29)
#true = #cir.bool<true> : !cir.bool
#loc234 = loc(fused[#loc6, #loc7])
#loc267 = loc(fused[#loc94, #loc95])
#loc268 = loc(fused[#loc96, #loc97])
#loc273 = loc(fused[#loc114, #loc115])
#loc292 = loc(fused[#loc164, #loc165])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc3)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc234)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc236)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc237)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc237)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc237)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
        %5 = cir.const #cir.int<10> : !s32i loc(#loc18)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc239)
        cir.if %6 {
          %7 = cir.const #cir.int<1> : !s32i loc(#loc22)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
          %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc24)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc24)
          cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc241)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc27)
            cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc243)
            cir.for : cond {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc30)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc244)
              cir.condition(%14) loc(#loc31)
            } body {
              cir.scope {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
                %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc34)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc34)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc34)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc35)
              } loc(#loc245)
              cir.yield loc(#loc26)
            } step {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc36)
              %13 = cir.unary(inc, %12) : !s32i, !s32i loc(#loc37)
              cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc246)
              cir.yield loc(#loc242)
            } loc(#loc242)
          } loc(#loc242)
        } else {
          %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc3)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc38)
        } loc(#loc240)
      } loc(#loc238)
    } loc(#loc235)
    cir.return loc(#loc5)
  } loc(#loc233)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc247)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc248)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc249)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc252)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc253)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc53)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc253)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc55)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc256)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc256)
      cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc256)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc63)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc64)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc64)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc64)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc64)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc64)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc64)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc64)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc64)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc66)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc67)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc258)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc71)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc72)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc75)
        } loc(#loc259)
      } loc(#loc257)
    } loc(#loc255)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc76)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc76)
    cir.return loc(#loc49)
  } loc(#loc251)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    cir.return loc(#loc79)
  } loc(#loc261)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc264)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc91)
  cir.func @main(%arg0: !s32i loc(fused[#loc94, #loc95]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc96, #loc97])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc268)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc93)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc98)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc99)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc100)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc100)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc101)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc88)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fgets_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fgets_44_good() : () -> () loc(#loc103)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc89)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc90)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fgets_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fgets_44_bad() : () -> () loc(#loc107)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc91)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc110)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %17 : !s32i loc(#loc271)
  } loc(#loc266)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc114, #loc115])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc273)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc275)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc276)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc276)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc276)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %5 = cir.const #cir.int<10> : !s32i loc(#loc126)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc278)
        cir.if %6 {
          %7 = cir.const #cir.int<1> : !s32i loc(#loc130)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
          %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc132)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc132)
          cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc280)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc135)
            cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc282)
            cir.for : cond {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc138)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc283)
              cir.condition(%14) loc(#loc139)
            } body {
              cir.scope {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc142)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc142)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc143)
              } loc(#loc284)
              cir.yield loc(#loc134)
            } step {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %13 = cir.unary(inc, %12) : !s32i, !s32i loc(#loc145)
              cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc285)
              cir.yield loc(#loc281)
            } loc(#loc281)
          } loc(#loc281)
        } else {
          %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc146)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc146)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc147)
        } loc(#loc279)
      } loc(#loc277)
    } loc(#loc274)
    cir.return loc(#loc113)
  } loc(#loc272)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc287)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc288)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc153)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc288)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc155)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc157)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc159)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc159)
    cir.return loc(#loc149)
  } loc(#loc286)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc161)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc164, #loc165])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc292)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc294)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc295)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc295)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc295)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc176)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc297)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
          %9 = cir.const #cir.int<10> : !s32i loc(#loc179)
          %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc298)
          %11 = cir.ternary(%10, true {
            %12 = cir.const #true loc(#loc177)
            cir.yield %12 : !cir.bool loc(#loc177)
          }, false {
            %12 = cir.const #false loc(#loc177)
            cir.yield %12 : !cir.bool loc(#loc177)
          }) : (!cir.bool) -> !cir.bool loc(#loc177)
          cir.yield %11 : !cir.bool loc(#loc177)
        }, false {
          %8 = cir.const #false loc(#loc177)
          cir.yield %8 : !cir.bool loc(#loc177)
        }) : (!cir.bool) -> !cir.bool loc(#loc177)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc184)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc186)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc186)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc300)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc189)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc302)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc192)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc303)
              cir.condition(%15) loc(#loc193)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc196)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc196)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc196)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc197)
              } loc(#loc304)
              cir.yield loc(#loc188)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc198)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc199)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc305)
              cir.yield loc(#loc301)
            } loc(#loc301)
          } loc(#loc301)
        } else {
          %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc161)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc161)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc200)
        } loc(#loc299)
      } loc(#loc296)
    } loc(#loc293)
    cir.return loc(#loc163)
  } loc(#loc291)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc307)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc308)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc206)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc308)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc208)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc311)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc311)
      cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc311)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc216)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc217)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc217)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc217)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc217)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc217)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc217)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc217)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc217)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc218)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc219)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc220)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc220)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc313)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc224)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc225)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc228)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc228)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc229)
        } loc(#loc314)
      } loc(#loc312)
    } loc(#loc310)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc230)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc230)
    cir.return loc(#loc202)
  } loc(#loc306)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":42:23)
#loc4 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":24:1)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":45:1)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":25:1)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":26:5)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":44:5)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":27:9)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":27:13)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":28:9)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":28:30)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":31:9)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":43:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":31:13)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":31:20)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":32:9)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":39:9)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":41:9)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":33:28)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":33:20)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":33:13)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:13)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":38:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:21)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:17)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:24)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:28)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:26)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":36:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":37:37)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":37:30)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":37:17)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:33)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:32)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":42:13)
#loc39 = loc("/usr/include/stdio.h":654:1)
#loc40 = loc("/usr/include/stdio.h":655:59)
#loc41 = loc("/usr/include/stdio.h":149:1)
#loc42 = loc("/usr/include/stdio.h":149:14)
#loc43 = loc("/usr/include/stdlib.h":105:1)
#loc44 = loc("/usr/include/stdlib.h":106:33)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":64:23)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":47:1)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":69:1)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":49:5)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":49:9)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":51:5)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":51:29)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":53:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":53:12)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":53:5)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":54:5)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":66:5)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":55:9)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":55:45)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:9)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":65:9)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:19)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:32)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:49)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:13)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:59)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":58:9)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":61:9)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":63:9)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":60:25)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":60:20)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":60:13)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":60:36)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":64:13)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":68:5)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":68:13)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":156:1)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":160:1)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":158:5)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":158:13)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":159:5)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":159:13)
#loc84 = loc("/usr/include/stdlib.h":575:1)
#loc85 = loc("/usr/include/stdlib.h":575:41)
#loc86 = loc("/usr/include/time.h":76:1)
#loc87 = loc("/usr/include/time.h":76:38)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":175:15)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":177:15)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":180:15)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":182:15)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":170:1)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":185:1)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":171:1)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":173:27)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":173:22)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":173:5)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":175:5)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":176:5)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":176:52)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":177:5)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":180:5)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":181:5)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":181:51)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":182:5)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":184:12)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":184:5)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":76:1)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":97:1)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":77:1)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":78:5)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":96:5)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":79:9)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":79:13)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":80:9)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":80:30)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":83:9)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":95:9)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":83:13)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":83:20)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":84:9)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":91:9)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":93:9)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":85:28)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":85:20)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":85:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":90:13)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:21)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:17)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:24)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:28)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:26)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":88:13)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":89:37)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":89:30)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":89:17)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:33)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:32)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":94:23)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":94:13)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":99:1)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":109:1)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":101:5)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":101:9)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":102:5)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":102:29)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":104:13)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":104:12)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":104:5)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":107:12)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":107:5)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":108:5)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":108:13)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":129:23)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":112:1)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":132:1)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":113:1)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":114:5)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":131:5)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":115:9)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":115:13)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":116:9)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":116:30)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:9)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":130:9)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:13)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:21)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:23)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:26)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:34)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:36)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":119:9)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":126:9)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":128:9)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":120:28)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":120:20)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":120:13)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:13)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":125:13)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:21)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:17)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:24)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:28)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:26)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":123:13)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":124:37)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":124:30)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":124:17)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:33)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:32)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":129:13)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":134:1)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":154:1)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":136:5)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":136:9)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":137:5)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":137:29)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":139:13)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":139:12)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":139:5)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":140:5)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":152:5)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":141:9)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":141:45)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:9)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":151:9)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:19)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:32)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:49)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:13)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:59)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":144:9)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":147:9)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":149:9)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":146:25)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":146:20)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":146:13)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":146:36)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":150:23)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":150:13)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":153:5)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":153:13)
#loc232 = loc(fused[#loc1, #loc2])
#loc233 = loc(fused[#loc4, #loc5])
#loc235 = loc(fused[#loc9, #loc10])
#loc236 = loc(fused[#loc11, #loc12])
#loc237 = loc(fused[#loc13, #loc14])
#loc238 = loc(fused[#loc15, #loc16])
#loc239 = loc(fused[#loc17, #loc18])
#loc240 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc241 = loc(fused[#loc24, #loc22])
#loc242 = loc(fused[#loc25, #loc26])
#loc243 = loc(fused[#loc28, #loc27])
#loc244 = loc(fused[#loc29, #loc30])
#loc245 = loc(fused[#loc32, #loc26])
#loc246 = loc(fused[#loc37, #loc36])
#loc247 = loc(fused[#loc39, #loc40])
#loc248 = loc(fused[#loc41, #loc42])
#loc249 = loc(fused[#loc43, #loc44])
#loc250 = loc(fused[#loc45, #loc46])
#loc251 = loc(fused[#loc48, #loc49])
#loc252 = loc(fused[#loc50, #loc51])
#loc253 = loc(fused[#loc52, #loc53])
#loc254 = loc(fused[#loc56, #loc54])
#loc255 = loc(fused[#loc57, #loc58])
#loc256 = loc(fused[#loc59, #loc60])
#loc257 = loc(fused[#loc61, #loc62])
#loc258 = loc(fused[#loc66, #loc67])
#loc259 = loc(fused[#loc68, #loc69, #loc70, #loc62])
#loc260 = loc(fused[#loc73, #loc74])
#loc261 = loc(fused[#loc78, #loc79])
#loc262 = loc(fused[#loc80, #loc81])
#loc263 = loc(fused[#loc82, #loc83])
#loc264 = loc(fused[#loc84, #loc85])
#loc265 = loc(fused[#loc86, #loc87])
#loc266 = loc(fused[#loc92, #loc93])
#loc269 = loc(fused[#loc103, #loc104])
#loc270 = loc(fused[#loc107, #loc108])
#loc271 = loc(fused[#loc111, #loc110])
#loc272 = loc(fused[#loc112, #loc113])
#loc274 = loc(fused[#loc117, #loc118])
#loc275 = loc(fused[#loc119, #loc120])
#loc276 = loc(fused[#loc121, #loc122])
#loc277 = loc(fused[#loc123, #loc124])
#loc278 = loc(fused[#loc125, #loc126])
#loc279 = loc(fused[#loc127, #loc128, #loc129, #loc124])
#loc280 = loc(fused[#loc132, #loc130])
#loc281 = loc(fused[#loc133, #loc134])
#loc282 = loc(fused[#loc136, #loc135])
#loc283 = loc(fused[#loc137, #loc138])
#loc284 = loc(fused[#loc140, #loc134])
#loc285 = loc(fused[#loc145, #loc144])
#loc286 = loc(fused[#loc148, #loc149])
#loc287 = loc(fused[#loc150, #loc151])
#loc288 = loc(fused[#loc152, #loc153])
#loc289 = loc(fused[#loc156, #loc154])
#loc290 = loc(fused[#loc158, #loc157])
#loc291 = loc(fused[#loc162, #loc163])
#loc293 = loc(fused[#loc167, #loc168])
#loc294 = loc(fused[#loc169, #loc170])
#loc295 = loc(fused[#loc171, #loc172])
#loc296 = loc(fused[#loc173, #loc174])
#loc297 = loc(fused[#loc175, #loc176])
#loc298 = loc(fused[#loc178, #loc180])
#loc299 = loc(fused[#loc181, #loc182, #loc183, #loc174])
#loc300 = loc(fused[#loc186, #loc184])
#loc301 = loc(fused[#loc187, #loc188])
#loc302 = loc(fused[#loc190, #loc189])
#loc303 = loc(fused[#loc191, #loc192])
#loc304 = loc(fused[#loc194, #loc188])
#loc305 = loc(fused[#loc199, #loc198])
#loc306 = loc(fused[#loc201, #loc202])
#loc307 = loc(fused[#loc203, #loc204])
#loc308 = loc(fused[#loc205, #loc206])
#loc309 = loc(fused[#loc209, #loc207])
#loc310 = loc(fused[#loc210, #loc211])
#loc311 = loc(fused[#loc212, #loc213])
#loc312 = loc(fused[#loc214, #loc215])
#loc313 = loc(fused[#loc219, #loc220])
#loc314 = loc(fused[#loc221, #loc222, #loc223, #loc215])
#loc315 = loc(fused[#loc226, #loc227])
