!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__rand_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc39)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc40)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc41)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"important_file.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE511_Logic_Time_Bomb__rand_01_bad() extra(#fn_attr1) {
    %0 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc12)
    %1 = cir.call @time(%0) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc13)
    %2 = cir.cast(integral, %1 : !s64i), !u32i loc(#loc13)
    cir.call @srand(%2) : (!u32i) -> () extra(#fn_attr) loc(#loc14)
    cir.br ^bb1 loc(#loc44)
  ^bb1:  // pred: ^bb0
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %4 = cir.const #cir.int<20000> : !s32i loc(#loc18)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc45)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc46)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc9)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc9)
    %8 = cir.call @unlink(%7) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc20)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc11)
  } loc(#loc43)
  cir.func no_proto @CWE511_Logic_Time_Bomb__rand_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc48)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    cir.return loc(#loc22)
  } loc(#loc47)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Happy New Year!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc30)
    %1 = cir.call @time(%0) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc31)
    %2 = cir.cast(integral, %1 : !s64i), !u32i loc(#loc31)
    cir.call @srand(%2) : (!u32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb1 loc(#loc51)
  ^bb1:  // pred: ^bb0
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc35)
    %4 = cir.const #cir.int<20000> : !s32i loc(#loc36)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc52)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc53)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc27)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb3 loc(#loc34)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc34)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc29)
  } loc(#loc50)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__rand_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":575:1)
#loc2 = loc("/usr/include/stdlib.h":575:41)
#loc3 = loc("/usr/include/time.h":76:1)
#loc4 = loc("/usr/include/time.h":76:38)
#loc5 = loc("/usr/include/stdlib.h":573:1)
#loc6 = loc("/usr/include/stdlib.h":573:24)
#loc7 = loc("/usr/include/unistd.h":858:1)
#loc8 = loc("/usr/include/unistd.h":858:48)
#loc9 = loc("CWE511_Logic_Time_Bomb__rand_01.c":35:16)
#loc10 = loc("CWE511_Logic_Time_Bomb__rand_01.c":29:1)
#loc11 = loc("CWE511_Logic_Time_Bomb__rand_01.c":37:1)
#loc12 = loc("CWE511_Logic_Time_Bomb__rand_01.c":31:26)
#loc13 = loc("CWE511_Logic_Time_Bomb__rand_01.c":31:21)
#loc14 = loc("CWE511_Logic_Time_Bomb__rand_01.c":31:5)
#loc15 = loc("CWE511_Logic_Time_Bomb__rand_01.c":33:5)
#loc16 = loc("CWE511_Logic_Time_Bomb__rand_01.c":36:5)
#loc17 = loc("CWE511_Logic_Time_Bomb__rand_01.c":33:9)
#loc18 = loc("CWE511_Logic_Time_Bomb__rand_01.c":33:19)
#loc19 = loc("CWE511_Logic_Time_Bomb__rand_01.c":34:5)
#loc20 = loc("CWE511_Logic_Time_Bomb__rand_01.c":35:9)
#loc21 = loc("CWE511_Logic_Time_Bomb__rand_01.c":53:1)
#loc22 = loc("CWE511_Logic_Time_Bomb__rand_01.c":56:1)
#loc23 = loc("CWE511_Logic_Time_Bomb__rand_01.c":55:5)
#loc24 = loc("CWE511_Logic_Time_Bomb__rand_01.c":55:11)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE511_Logic_Time_Bomb__rand_01.c":49:19)
#loc28 = loc("CWE511_Logic_Time_Bomb__rand_01.c":43:1)
#loc29 = loc("CWE511_Logic_Time_Bomb__rand_01.c":51:1)
#loc30 = loc("CWE511_Logic_Time_Bomb__rand_01.c":45:26)
#loc31 = loc("CWE511_Logic_Time_Bomb__rand_01.c":45:21)
#loc32 = loc("CWE511_Logic_Time_Bomb__rand_01.c":45:5)
#loc33 = loc("CWE511_Logic_Time_Bomb__rand_01.c":47:5)
#loc34 = loc("CWE511_Logic_Time_Bomb__rand_01.c":50:5)
#loc35 = loc("CWE511_Logic_Time_Bomb__rand_01.c":47:9)
#loc36 = loc("CWE511_Logic_Time_Bomb__rand_01.c":47:19)
#loc37 = loc("CWE511_Logic_Time_Bomb__rand_01.c":48:5)
#loc38 = loc("CWE511_Logic_Time_Bomb__rand_01.c":49:9)
#loc39 = loc(fused[#loc1, #loc2])
#loc40 = loc(fused[#loc3, #loc4])
#loc41 = loc(fused[#loc5, #loc6])
#loc42 = loc(fused[#loc7, #loc8])
#loc43 = loc(fused[#loc10, #loc11])
#loc44 = loc(fused[#loc15, #loc16])
#loc45 = loc(fused[#loc17, #loc18])
#loc46 = loc(fused[#loc19, #loc16])
#loc47 = loc(fused[#loc21, #loc22])
#loc48 = loc(fused[#loc23, #loc24])
#loc49 = loc(fused[#loc25, #loc26])
#loc50 = loc(fused[#loc28, #loc29])
#loc51 = loc(fused[#loc33, #loc34])
#loc52 = loc(fused[#loc35, #loc36])
#loc53 = loc(fused[#loc37, #loc34])
