!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:44)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:44)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":257:10)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":257:14)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":257:20)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":257:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc461 = loc(fused[#loc320, #loc321])
#loc462 = loc(fused[#loc322, #loc323])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc336)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc337)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc338)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc339)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc340)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc341)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc342)
  cir.func private @close(!s32i) -> !s32i loc(#loc343)
  cir.func private @printIntLine(!s32i) loc(#loc344)
  cir.func @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc346)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc347)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc348)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc349)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc350)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc351)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc352)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc353)
    cir.store %6, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc36)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc38)
    cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb1 loc(#loc355)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc26)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc28)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.br ^bb2 loc(#loc356)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc356)
  ^bb3:  // pred: ^bb32
    %14 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %15 ^bb4, ^bb33 loc(#loc44)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %16 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc46)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc46)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc47)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc47)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.br ^bb5 loc(#loc358)
  ^bb5:  // pred: ^bb4
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc54)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc359)
    cir.brcond %25 ^bb6, ^bb7 loc(#loc360)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc56)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc52)
  ^bb8:  // pred: ^bb7
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc361)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc362)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc363)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc64)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc364)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc67)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc365)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc71)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc71)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc72)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc366)
    cir.br ^bb9 loc(#loc367)
  ^bb9:  // pred: ^bb8
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc368)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc369)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc369)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc83)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc84)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %47 ^bb10, ^bb11 loc(#loc371)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc86)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc77)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc372)
  ^bb13:  // pred: ^bb12
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc90)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc91)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc92)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc373)
    cir.brcond %53 ^bb14, ^bb15 loc(#loc374)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc94)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc88)
  ^bb16:  // pred: ^bb15
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc96)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc97)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc98)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.br ^bb17 loc(#loc376)
  ^bb17:  // pred: ^bb16
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc104)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc377)
    cir.brcond %61 ^bb18, ^bb19 loc(#loc378)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc106)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc102)
  ^bb20:  // pred: ^bb19
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %65 = cir.const #cir.int<3> : !s32i loc(#loc109)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc109)
    %67 = cir.const #cir.int<4> : !u64i loc(#loc109)
    %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc109)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc109)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc109)
    %71 = cir.binop(add, %68, %70) : !u64i loc(#loc109)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc110)
    %74 = cir.binop(sub, %71, %73) : !u64i loc(#loc379)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %76 = cir.call @recv(%62, %64, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc112)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    cir.br ^bb21 loc(#loc381)
  ^bb21:  // pred: ^bb20
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc118)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc382)
    cir.brcond %81 ^bb22, ^bb23 loc(#loc119)
  ^bb22:  // pred: ^bb21
    %82 = cir.const #true loc(#loc119)
    cir.br ^bb28(%82 : !cir.bool) loc(#loc119)
  ^bb23:  // pred: ^bb21
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc383)
    cir.brcond %85 ^bb24, ^bb25 loc(#loc119)
  ^bb24:  // pred: ^bb23
    %86 = cir.const #true loc(#loc119)
    cir.br ^bb26(%86 : !cir.bool) loc(#loc119)
  ^bb25:  // pred: ^bb23
    %87 = cir.const #false loc(#loc119)
    cir.br ^bb26(%87 : !cir.bool) loc(#loc119)
  ^bb26(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc119)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%88 : !cir.bool) loc(#loc119)
  ^bb28(%89: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc119)
  ^bb29:  // pred: ^bb28
    cir.brcond %89 ^bb30, ^bb31 loc(#loc384)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc123)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc116)
  ^bb32:  // pred: ^bb31
    %90 = cir.const #cir.int<0> : !s8i loc(#loc124)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc385)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc128)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb3 loc(#loc43)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc43)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc387)
  ^bb35:  // pred: ^bb34
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc134)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc388)
    cir.brcond %99 ^bb36, ^bb37 loc(#loc389)
  ^bb36:  // pred: ^bb35
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc137)
    cir.br ^bb37 loc(#loc132)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc132)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc390)
  ^bb39:  // pred: ^bb38
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc141)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc391)
    cir.brcond %105 ^bb40, ^bb41 loc(#loc392)
  ^bb40:  // pred: ^bb39
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc144)
    cir.br ^bb41 loc(#loc139)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc139)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc41)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc393)
  ^bb44:  // pred: ^bb43
    %108 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %109, %5 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %110 = cir.const #cir.int<100> : !s32i loc(#loc147)
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %112 = cir.binop(rem, %110, %111) : !s32i loc(#loc394)
    cir.call @printIntLine(%112) : (!s32i) -> () loc(#loc149)
    cir.br ^bb45 loc(#loc146)
  ^bb45:  // pred: ^bb44
    cir.return loc(#loc20)
  } loc(#loc345)
  cir.func internal private @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc396)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc397)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc398)
    cir.store %1, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc159)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc161)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    cir.br ^bb1 loc(#loc401)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc165)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc402)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc167)
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc151)
  } loc(#loc395)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc168)
  cir.func internal private @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc404)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc405)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc406)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc407)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc408)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc409)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc410)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc411)
    cir.store %6, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc188)
    cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb1 loc(#loc413)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc176)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc178)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc407)
    cir.br ^bb2 loc(#loc414)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc414)
  ^bb3:  // pred: ^bb32
    %14 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc194)
    cir.brcond %15 ^bb4, ^bb33 loc(#loc194)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %16 = cir.const #cir.int<2> : !s32i loc(#loc195)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc196)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc196)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc197)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc197)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc198)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    cir.br ^bb5 loc(#loc416)
  ^bb5:  // pred: ^bb4
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc204)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc417)
    cir.brcond %25 ^bb6, ^bb7 loc(#loc418)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc206)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc202)
  ^bb8:  // pred: ^bb7
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc419)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc420)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc421)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc214)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc214)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc422)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc216)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc216)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc423)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc218)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc218)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc219)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc424)
    cir.br ^bb9 loc(#loc425)
  ^bb9:  // pred: ^bb8
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc426)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc427)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc427)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc229)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc230)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc428)
    cir.brcond %47 ^bb10, ^bb11 loc(#loc429)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc232)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc223)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc430)
  ^bb13:  // pred: ^bb12
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc236)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc237)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc238)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc431)
    cir.brcond %53 ^bb14, ^bb15 loc(#loc432)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc240)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc234)
  ^bb16:  // pred: ^bb15
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc242)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc243)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc244)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc433)
    cir.br ^bb17 loc(#loc434)
  ^bb17:  // pred: ^bb16
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc250)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc435)
    cir.brcond %61 ^bb18, ^bb19 loc(#loc436)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc252)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc248)
  ^bb20:  // pred: ^bb19
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc254)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc254)
    %65 = cir.const #cir.int<3> : !s32i loc(#loc255)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc255)
    %67 = cir.const #cir.int<4> : !u64i loc(#loc255)
    %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc255)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc255)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc255)
    %71 = cir.binop(add, %68, %70) : !u64i loc(#loc255)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc256)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc256)
    %74 = cir.binop(sub, %71, %73) : !u64i loc(#loc437)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc257)
    %76 = cir.call @recv(%62, %64, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc258)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc258)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    cir.br ^bb21 loc(#loc439)
  ^bb21:  // pred: ^bb20
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc264)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc440)
    cir.brcond %81 ^bb22, ^bb23 loc(#loc265)
  ^bb22:  // pred: ^bb21
    %82 = cir.const #true loc(#loc265)
    cir.br ^bb28(%82 : !cir.bool) loc(#loc265)
  ^bb23:  // pred: ^bb21
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc267)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc441)
    cir.brcond %85 ^bb24, ^bb25 loc(#loc265)
  ^bb24:  // pred: ^bb23
    %86 = cir.const #true loc(#loc265)
    cir.br ^bb26(%86 : !cir.bool) loc(#loc265)
  ^bb25:  // pred: ^bb23
    %87 = cir.const #false loc(#loc265)
    cir.br ^bb26(%87 : !cir.bool) loc(#loc265)
  ^bb26(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc265)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%88 : !cir.bool) loc(#loc265)
  ^bb28(%89: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc265)
  ^bb29:  // pred: ^bb28
    cir.brcond %89 ^bb30, ^bb31 loc(#loc442)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc269)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc262)
  ^bb32:  // pred: ^bb31
    %90 = cir.const #cir.int<0> : !s8i loc(#loc270)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc272)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc272)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc443)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc273)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc274)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc444)
    cir.br ^bb3 loc(#loc193)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc193)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc445)
  ^bb35:  // pred: ^bb34
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc280)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc446)
    cir.brcond %99 ^bb36, ^bb37 loc(#loc447)
  ^bb36:  // pred: ^bb35
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc283)
    cir.br ^bb37 loc(#loc278)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc278)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc448)
  ^bb39:  // pred: ^bb38
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc287)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc449)
    cir.brcond %105 ^bb40, ^bb41 loc(#loc450)
  ^bb40:  // pred: ^bb39
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc290)
    cir.br ^bb41 loc(#loc285)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc285)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc191)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc451)
  ^bb44:  // pred: ^bb43
    %108 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.store %109, %5 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    cir.br ^bb45 loc(#loc452)
  ^bb45:  // pred: ^bb44
    %110 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %111 = cir.const #cir.int<0> : !s32i loc(#loc296)
    %112 = cir.cmp(ne, %110, %111) : !s32i, !cir.bool loc(#loc453)
    cir.brcond %112 ^bb46, ^bb47 loc(#loc454)
  ^bb46:  // pred: ^bb45
    %113 = cir.const #cir.int<100> : !s32i loc(#loc300)
    %114 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %115 = cir.binop(rem, %113, %114) : !s32i loc(#loc455)
    cir.call @printIntLine(%115) : (!s32i) -> () loc(#loc302)
    cir.br ^bb48 loc(#loc298)
  ^bb47:  // pred: ^bb45
    %116 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc168)
    %117 = cir.cast(array_to_ptrdecay, %116 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%117) : (!cir.ptr<!s8i>) -> () loc(#loc303)
    cir.br ^bb48 loc(#loc294)
  ^bb48:  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc294)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc292)
  ^bb50:  // pred: ^bb49
    cir.return loc(#loc170)
  } loc(#loc403)
  cir.func @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_33L7goodG2BEv() : () -> () loc(#loc306)
    cir.call @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_33L7goodB2GEv() : () -> () loc(#loc307)
    cir.return loc(#loc305)
  } loc(#loc456)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc457)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc458)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc459)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc314)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc315)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc317)
  cir.func @main(%arg0: !s32i loc(fused[#loc320, #loc321]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc322, #loc323])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc461)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc462)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc319)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc324)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc325)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc326)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc326)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc327)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc314)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc314)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc328)
    cir.call @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_334goodEv() : () -> () loc(#loc329)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc315)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc315)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc330)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc316)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc316)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc331)
    cir.call @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_333badEv() : () -> () loc(#loc332)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc317)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc317)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc333)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc334)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc463)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc463)
    cir.return %15 : !s32i loc(#loc463)
  } loc(#loc460)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":47:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":127:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":58:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":58:13)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":59:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":59:28)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":60:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":60:31)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":61:9)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":61:31)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":62:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":62:41)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":123:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":123:20)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":49:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":49:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":50:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":50:20)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":52:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":52:12)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":52:5)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":53:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":121:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":63:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":106:17)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":106:16)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:35)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:44)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:57)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:28)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:13)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:68)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":74:13)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":77:13)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":74:17)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":74:33)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":75:13)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":76:17)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:20)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:21)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:30)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:33)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:47)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:13)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:48)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":79:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":79:13)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":80:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":80:13)
#loc71 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":81:38)
#loc72 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":81:32)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":81:13)
#loc75 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":81:46)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":85:13)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:22)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:54)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:55)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:64)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:78)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:17)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:84)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":83:13)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":84:17)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:13)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":89:13)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:24)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:38)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:17)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:57)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":87:13)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":88:17)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:35)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:49)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:55)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:28)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:13)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:59)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":91:13)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":94:13)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":91:17)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":91:33)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":92:13)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":93:17)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:31)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:45)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:58)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:76)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:79)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:26)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:13)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:80)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":100:13)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:17)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:31)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:47)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:61)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":98:13)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":99:17)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":102:39)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":102:25)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":102:13)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":104:25)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":104:20)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":104:13)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":104:36)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":107:9)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":110:9)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":107:13)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":107:29)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":108:9)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":109:26)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":109:13)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":111:9)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":114:9)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":111:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":111:29)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":112:9)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":113:26)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":113:13)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":122:5)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":126:5)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":125:22)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":125:28)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":125:9)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":134:1)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":147:1)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":143:9)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":143:20)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":136:5)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":136:9)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":137:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":137:20)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":139:13)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":139:12)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":139:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":141:12)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":141:5)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":142:5)
#loc164 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":146:5)
#loc165 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":145:22)
#loc166 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":145:28)
#loc167 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":145:9)
#loc168 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":234:23)
#loc169 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":150:1)
#loc170 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":237:1)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":161:9)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":161:13)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":162:9)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":162:28)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":163:9)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":163:31)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":164:9)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":164:31)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":165:9)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":165:41)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":226:9)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":226:20)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":152:5)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":152:9)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":153:5)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":153:20)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":155:13)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":155:12)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":155:5)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":156:5)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":224:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":166:9)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":209:17)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":209:16)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:35)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:44)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:57)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:28)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:13)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:68)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":177:13)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":180:13)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":177:17)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":177:33)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":178:13)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":179:17)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:20)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:21)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:30)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:33)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:47)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:13)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:48)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":182:34)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":182:13)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":183:39)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":183:13)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":184:38)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":184:32)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":184:13)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":184:46)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:13)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":188:13)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:22)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:54)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:55)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:64)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:78)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:17)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:84)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":186:13)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":187:17)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:13)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":192:13)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:24)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:38)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:17)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:57)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":190:13)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":191:17)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:35)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:49)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:55)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:28)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:13)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:59)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":194:13)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":197:13)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":194:17)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":194:33)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":195:13)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":196:17)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:31)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:45)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:58)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:76)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:79)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:26)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:13)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:80)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:13)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":203:13)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:17)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:31)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:47)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:61)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":201:13)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":202:17)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":205:39)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":205:25)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":205:13)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":207:25)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":207:20)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":207:13)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":207:36)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":210:9)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":213:9)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":210:13)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":210:29)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":211:9)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":212:26)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":212:13)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":214:9)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":217:9)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":214:13)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":214:29)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":215:9)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":216:26)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":216:13)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":225:5)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":236:5)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":228:9)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":235:9)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":228:13)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":228:21)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":229:9)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":231:9)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":233:9)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":230:26)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":230:32)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":230:13)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":234:13)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":239:1)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":243:1)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":241:5)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":242:5)
#loc308 = loc("/usr/include/stdlib.h":575:1)
#loc309 = loc("/usr/include/stdlib.h":575:41)
#loc310 = loc("/usr/include/time.h":76:1)
#loc311 = loc("/usr/include/time.h":76:38)
#loc312 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc313 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":262:15)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":264:15)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":267:15)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":269:15)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":257:1)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":272:1)
#loc324 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":258:1)
#loc325 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":260:27)
#loc326 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":260:22)
#loc327 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":260:5)
#loc328 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":262:5)
#loc329 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":263:5)
#loc330 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":264:5)
#loc331 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":267:5)
#loc332 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":268:5)
#loc333 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":269:5)
#loc334 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":271:12)
#loc335 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":271:5)
#loc336 = loc(fused[#loc1, #loc2])
#loc337 = loc(fused[#loc3, #loc4])
#loc338 = loc(fused[#loc5, #loc6])
#loc339 = loc(fused[#loc7, #loc8])
#loc340 = loc(fused[#loc9, #loc10])
#loc341 = loc(fused[#loc11, #loc12])
#loc342 = loc(fused[#loc13, #loc14])
#loc343 = loc(fused[#loc15, #loc16])
#loc344 = loc(fused[#loc17, #loc18])
#loc345 = loc(fused[#loc19, #loc20])
#loc346 = loc(fused[#loc21, #loc22])
#loc347 = loc(fused[#loc23, #loc24])
#loc348 = loc(fused[#loc25, #loc26])
#loc349 = loc(fused[#loc27, #loc28])
#loc350 = loc(fused[#loc29, #loc30])
#loc351 = loc(fused[#loc31, #loc32])
#loc352 = loc(fused[#loc33, #loc34])
#loc353 = loc(fused[#loc35, #loc36])
#loc354 = loc(fused[#loc39, #loc37])
#loc355 = loc(fused[#loc40, #loc41])
#loc356 = loc(fused[#loc42, #loc43])
#loc357 = loc(fused[#loc49, #loc50])
#loc358 = loc(fused[#loc51, #loc52])
#loc359 = loc(fused[#loc53, #loc54])
#loc360 = loc(fused[#loc55, #loc52])
#loc361 = loc(fused[#loc57, #loc58])
#loc362 = loc(fused[#loc60, #loc61])
#loc363 = loc(fused[#loc62, #loc63])
#loc364 = loc(fused[#loc66, #loc64])
#loc365 = loc(fused[#loc70, #loc67])
#loc366 = loc(fused[#loc74, #loc75])
#loc367 = loc(fused[#loc76, #loc77])
#loc368 = loc(fused[#loc79, #loc80])
#loc369 = loc(fused[#loc81, #loc82])
#loc370 = loc(fused[#loc83, #loc84])
#loc371 = loc(fused[#loc85, #loc77])
#loc372 = loc(fused[#loc87, #loc88])
#loc373 = loc(fused[#loc91, #loc92])
#loc374 = loc(fused[#loc93, #loc88])
#loc375 = loc(fused[#loc99, #loc100])
#loc376 = loc(fused[#loc101, #loc102])
#loc377 = loc(fused[#loc103, #loc104])
#loc378 = loc(fused[#loc105, #loc102])
#loc379 = loc(fused[#loc109, #loc110])
#loc380 = loc(fused[#loc113, #loc114])
#loc381 = loc(fused[#loc115, #loc116])
#loc382 = loc(fused[#loc117, #loc118])
#loc383 = loc(fused[#loc120, #loc121])
#loc384 = loc(fused[#loc122, #loc116])
#loc385 = loc(fused[#loc126, #loc124])
#loc386 = loc(fused[#loc129, #loc130])
#loc387 = loc(fused[#loc131, #loc132])
#loc388 = loc(fused[#loc133, #loc134])
#loc389 = loc(fused[#loc135, #loc132])
#loc390 = loc(fused[#loc138, #loc139])
#loc391 = loc(fused[#loc140, #loc141])
#loc392 = loc(fused[#loc142, #loc139])
#loc393 = loc(fused[#loc145, #loc146])
#loc394 = loc(fused[#loc147, #loc148])
#loc395 = loc(fused[#loc150, #loc151])
#loc396 = loc(fused[#loc152, #loc153])
#loc397 = loc(fused[#loc154, #loc155])
#loc398 = loc(fused[#loc156, #loc157])
#loc399 = loc(fused[#loc160, #loc158])
#loc400 = loc(fused[#loc162, #loc161])
#loc401 = loc(fused[#loc163, #loc164])
#loc402 = loc(fused[#loc165, #loc166])
#loc403 = loc(fused[#loc169, #loc170])
#loc404 = loc(fused[#loc171, #loc172])
#loc405 = loc(fused[#loc173, #loc174])
#loc406 = loc(fused[#loc175, #loc176])
#loc407 = loc(fused[#loc177, #loc178])
#loc408 = loc(fused[#loc179, #loc180])
#loc409 = loc(fused[#loc181, #loc182])
#loc410 = loc(fused[#loc183, #loc184])
#loc411 = loc(fused[#loc185, #loc186])
#loc412 = loc(fused[#loc189, #loc187])
#loc413 = loc(fused[#loc190, #loc191])
#loc414 = loc(fused[#loc192, #loc193])
#loc415 = loc(fused[#loc199, #loc200])
#loc416 = loc(fused[#loc201, #loc202])
#loc417 = loc(fused[#loc203, #loc204])
#loc418 = loc(fused[#loc205, #loc202])
#loc419 = loc(fused[#loc207, #loc208])
#loc420 = loc(fused[#loc210, #loc211])
#loc421 = loc(fused[#loc212, #loc213])
#loc422 = loc(fused[#loc215, #loc214])
#loc423 = loc(fused[#loc217, #loc216])
#loc424 = loc(fused[#loc220, #loc221])
#loc425 = loc(fused[#loc222, #loc223])
#loc426 = loc(fused[#loc225, #loc226])
#loc427 = loc(fused[#loc227, #loc228])
#loc428 = loc(fused[#loc229, #loc230])
#loc429 = loc(fused[#loc231, #loc223])
#loc430 = loc(fused[#loc233, #loc234])
#loc431 = loc(fused[#loc237, #loc238])
#loc432 = loc(fused[#loc239, #loc234])
#loc433 = loc(fused[#loc245, #loc246])
#loc434 = loc(fused[#loc247, #loc248])
#loc435 = loc(fused[#loc249, #loc250])
#loc436 = loc(fused[#loc251, #loc248])
#loc437 = loc(fused[#loc255, #loc256])
#loc438 = loc(fused[#loc259, #loc260])
#loc439 = loc(fused[#loc261, #loc262])
#loc440 = loc(fused[#loc263, #loc264])
#loc441 = loc(fused[#loc266, #loc267])
#loc442 = loc(fused[#loc268, #loc262])
#loc443 = loc(fused[#loc272, #loc270])
#loc444 = loc(fused[#loc275, #loc276])
#loc445 = loc(fused[#loc277, #loc278])
#loc446 = loc(fused[#loc279, #loc280])
#loc447 = loc(fused[#loc281, #loc278])
#loc448 = loc(fused[#loc284, #loc285])
#loc449 = loc(fused[#loc286, #loc287])
#loc450 = loc(fused[#loc288, #loc285])
#loc451 = loc(fused[#loc291, #loc292])
#loc452 = loc(fused[#loc293, #loc294])
#loc453 = loc(fused[#loc295, #loc296])
#loc454 = loc(fused[#loc297, #loc298, #loc299, #loc294])
#loc455 = loc(fused[#loc300, #loc301])
#loc456 = loc(fused[#loc304, #loc305])
#loc457 = loc(fused[#loc308, #loc309])
#loc458 = loc(fused[#loc310, #loc311])
#loc459 = loc(fused[#loc312, #loc313])
#loc460 = loc(fused[#loc318, #loc319])
#loc463 = loc(fused[#loc335, #loc334])
