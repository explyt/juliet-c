!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":252:10)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":252:14)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":252:20)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":252:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc474 = loc(fused[#loc215, #loc216])
#loc475 = loc(fused[#loc217, #loc218])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc389)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc390)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc391)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc392)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc393)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc394)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc395)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc396)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc397)
  cir.func private @close(!s32i) -> !s32i loc(#loc398)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc399)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc401)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc29)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc404)
        cir.condition(%4) loc(#loc33)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc407)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc408)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc409)
            %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc410)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc411)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc412)
            %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc413)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc414)
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc415)
            %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc407)
            cir.store %11, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc407)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc46)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc411)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc48)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc48)
            cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc412)
            %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc55)
            %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
            %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc55)
            cir.store %18, %8 : !u64i, !cir.ptr<!u64i> loc(#loc413)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc52)
            cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc414)
            %20 = cir.const #cir.int<4> : !u64i loc(#loc416)
            %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc416)
            cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc415)
            cir.scope {
              cir.do {
                %23 = cir.const #cir.int<2> : !s32i loc(#loc60)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc61)
                %25 = cir.const #cir.int<6> : !s32i loc(#loc62)
                %26 = cir.call @socket(%23, %24, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc63)
                cir.store %26, %6 : !s32i, !cir.ptr<!s32i> loc(#loc418)
                cir.scope {
                  %75 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc69)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc69)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc420)
                  cir.if %78 {
                    cir.break loc(#loc71)
                  } loc(#loc421)
                } loc(#loc419)
                cir.scope {
                  %75 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc74)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc75)
                  %77 = cir.const #cir.int<2> : !s32i loc(#loc76)
                  %78 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc423)
                  %79 = cir.cast(bitcast, %78 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc424)
                  %80 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                  %81 = cir.cast(integral, %80 : !s32i), !u32i loc(#loc80)
                  %82 = cir.call @setsockopt(%75, %76, %77, %79, %81) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc81)
                  %83 = cir.const #cir.int<0> : !s32i loc(#loc82)
                  %84 = cir.cmp(ne, %82, %83) : !s32i, !cir.bool loc(#loc425)
                  cir.if %84 {
                    cir.break loc(#loc84)
                  } loc(#loc426)
                } loc(#loc422)
                %27 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc427)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc87)
                %29 = cir.const #cir.int<16> : !u64i loc(#loc428)
                cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc429)
                %30 = cir.const #cir.int<2> : !s32i loc(#loc92)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc92)
                %32 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc430)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc95)
                %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc95)
                %35 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc96)
                %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc97)
                cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc431)
                %37 = cir.const #cir.int<27015> : !s32i loc(#loc99)
                %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc99)
                %39 = cir.call @htons(%38) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc100)
                %40 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc101)
                cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc432)
                cir.scope {
                  %75 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %76 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc434)
                  %77 = cir.const #cir.int<16> : !u64i loc(#loc435)
                  %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc435)
                  %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc111)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc112)
                  %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc112)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc436)
                  cir.if %82 {
                    cir.break loc(#loc114)
                  } loc(#loc437)
                } loc(#loc433)
                cir.scope {
                  %75 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                  %76 = cir.const #cir.int<5> : !s32i loc(#loc118)
                  %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc119)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc120)
                  %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc120)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc439)
                  cir.if %80 {
                    cir.break loc(#loc122)
                  } loc(#loc440)
                } loc(#loc438)
                %41 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                %42 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc124)
                %43 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc125)
                %44 = cir.call @accept(%41, %42, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc126)
                cir.store %44, %7 : !s32i, !cir.ptr<!s32i> loc(#loc441)
                cir.scope {
                  %75 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc132)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc132)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc443)
                  cir.if %78 {
                    cir.break loc(#loc134)
                  } loc(#loc444)
                } loc(#loc442)
                %45 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc135)
                %46 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
                %47 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc137)
                %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc138)
                %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc445)
                %50 = cir.const #cir.int<100> : !s32i loc(#loc139)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc139)
                %52 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc140)
                %53 = cir.binop(sub, %51, %52) : !u64i loc(#loc446)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc141)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc141)
                %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc447)
                %57 = cir.cast(integral, %56 : !u64i), !s32i loc(#loc447)
                %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc447)
                %59 = cir.const #cir.int<0> : !s32i loc(#loc142)
                %60 = cir.call @recv(%45, %49, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc143)
                %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc143)
                cir.store %61, %3 : !s32i, !cir.ptr<!s32i> loc(#loc448)
                cir.scope {
                  %75 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc149)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc149)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc450)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc150)
                    cir.yield %80 : !cir.bool loc(#loc150)
                  }, false {
                    %80 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                    %81 = cir.const #cir.int<0> : !s32i loc(#loc152)
                    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc451)
                    %83 = cir.ternary(%82, true {
                      %84 = cir.const #true loc(#loc150)
                      cir.yield %84 : !cir.bool loc(#loc150)
                    }, false {
                      %84 = cir.const #false loc(#loc150)
                      cir.yield %84 : !cir.bool loc(#loc150)
                    }) : (!cir.bool) -> !cir.bool loc(#loc150)
                    cir.yield %83 : !cir.bool loc(#loc150)
                  }) : (!cir.bool) -> !cir.bool loc(#loc150)
                  cir.if %79 {
                    cir.break loc(#loc154)
                  } loc(#loc452)
                } loc(#loc449)
                %62 = cir.const #cir.int<0> : !s32i loc(#loc155)
                %63 = cir.cast(integral, %62 : !s32i), !s8i loc(#loc155)
                %64 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc156)
                %65 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
                %66 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc157)
                cir.store %63, %66 : !s8i, !cir.ptr<!s8i> loc(#loc453)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc158)
                %68 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc159)
                %69 = cir.const #cir.int<13> : !s32i loc(#loc160)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
                cir.store %70, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc454)
                cir.scope {
                  %75 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc165)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc167)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc167)
                    %79 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc457)
                  } loc(#loc456)
                } loc(#loc455)
                %71 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc170)
                %72 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
                %73 = cir.const #cir.int<10> : !s32i loc(#loc172)
                %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
                cir.store %74, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc458)
                cir.scope {
                  %75 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc177)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc179)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc179)
                    %79 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc461)
                  } loc(#loc460)
                } loc(#loc459)
                cir.yield loc(#loc59)
              } while {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc182)
                %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc182)
                cir.condition(%24) loc(#loc182)
              } loc(#loc417)
            } loc(#loc417)
            cir.scope {
              %23 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc185)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc186)
              %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc186)
              %26 = cir.cmp(ne, %23, %25) : !s32i, !cir.bool loc(#loc463)
              cir.if %26 {
                %27 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc188)
                %28 = cir.call @close(%27) : (!s32i) -> !s32i loc(#loc189)
              } loc(#loc464)
            } loc(#loc462)
            cir.scope {
              %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc192)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc193)
              %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc193)
              %26 = cir.cmp(ne, %23, %25) : !s32i, !cir.bool loc(#loc466)
              cir.if %26 {
                %27 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                %28 = cir.call @close(%27) : (!s32i) -> !s32i loc(#loc196)
              } loc(#loc467)
            } loc(#loc465)
            %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc197)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc198)
          } loc(#loc406)
        } loc(#loc405)
        cir.yield loc(#loc28)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc200)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc468)
        cir.yield loc(#loc402)
      } loc(#loc402)
    } loc(#loc402)
    cir.return loc(#loc24)
  } loc(#loc400)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc470)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc203)
    cir.return loc(#loc202)
  } loc(#loc469)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc471)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc472)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc212)
  cir.func @main(%arg0: !s32i loc(fused[#loc215, #loc216]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc217, #loc218])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc474)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc475)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc214)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc219)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc220)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc221)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc221)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc222)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc209)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc223)
    %8 = cir.get_global @CWE605_Multiple_Binds_Same_Port__basic_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc476)
    cir.call @CWE605_Multiple_Binds_Same_Port__basic_17_good() : () -> () loc(#loc224)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc210)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc211)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc227)
    %13 = cir.get_global @CWE605_Multiple_Binds_Same_Port__basic_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc477)
    cir.call @CWE605_Multiple_Binds_Same_Port__basic_17_bad() : () -> () loc(#loc228)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc212)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc230)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc231)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc478)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc478)
    cir.return %17 : !s32i loc(#loc478)
  } loc(#loc473)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc480)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc239)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc482)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc242)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc483)
        cir.condition(%4) loc(#loc243)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc486)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc487)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc488)
            %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc489)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc490)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc491)
            %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc492)
            %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc486)
            cir.store %9, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc486)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc256)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc256)
            cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc490)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc258)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc258)
            cir.store %13, %7 : !s32i, !cir.ptr<!s32i> loc(#loc491)
            %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc261)
            %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc262)
            %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc261)
            cir.store %16, %8 : !u64i, !cir.ptr<!u64i> loc(#loc492)
            cir.scope {
              cir.do {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc265)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc266)
                %20 = cir.const #cir.int<6> : !s32i loc(#loc267)
                %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc268)
                cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc494)
                cir.scope {
                  %70 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc273)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc274)
                  %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc274)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc496)
                  cir.if %73 {
                    cir.break loc(#loc276)
                  } loc(#loc497)
                } loc(#loc495)
                %22 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc498)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc279)
                %24 = cir.const #cir.int<16> : !u64i loc(#loc499)
                cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc500)
                %25 = cir.const #cir.int<2> : !s32i loc(#loc284)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc284)
                %27 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
                cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc501)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc286)
                %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc286)
                %30 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc96)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc97)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc502)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc288)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc288)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc289)
                %35 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc101)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc503)
                cir.scope {
                  %70 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc294)
                  %71 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc505)
                  %72 = cir.const #cir.int<16> : !u64i loc(#loc506)
                  %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc506)
                  %74 = cir.call @bind(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc299)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc300)
                  %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc300)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc507)
                  cir.if %77 {
                    cir.break loc(#loc302)
                  } loc(#loc508)
                } loc(#loc504)
                cir.scope {
                  %70 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc305)
                  %71 = cir.const #cir.int<5> : !s32i loc(#loc306)
                  %72 = cir.call @listen(%70, %71) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc307)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc308)
                  %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc308)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc510)
                  cir.if %75 {
                    cir.break loc(#loc310)
                  } loc(#loc511)
                } loc(#loc509)
                %36 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc311)
                %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc312)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc313)
                %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc314)
                cir.store %39, %7 : !s32i, !cir.ptr<!s32i> loc(#loc512)
                cir.scope {
                  %70 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc319)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc320)
                  %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc320)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc514)
                  cir.if %73 {
                    cir.break loc(#loc322)
                  } loc(#loc515)
                } loc(#loc513)
                %40 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc323)
                %41 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc324)
                %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc325)
                %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc326)
                %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc516)
                %45 = cir.const #cir.int<100> : !s32i loc(#loc327)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc327)
                %47 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc328)
                %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc517)
                %49 = cir.const #cir.int<1> : !s32i loc(#loc329)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc329)
                %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc518)
                %52 = cir.cast(integral, %51 : !u64i), !s32i loc(#loc518)
                %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc518)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc330)
                %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc331)
                %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc331)
                cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc519)
                cir.scope {
                  %70 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc337)
                  %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc337)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc521)
                  %74 = cir.ternary(%73, true {
                    %75 = cir.const #true loc(#loc338)
                    cir.yield %75 : !cir.bool loc(#loc338)
                  }, false {
                    %75 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc339)
                    %76 = cir.const #cir.int<0> : !s32i loc(#loc340)
                    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc522)
                    %78 = cir.ternary(%77, true {
                      %79 = cir.const #true loc(#loc338)
                      cir.yield %79 : !cir.bool loc(#loc338)
                    }, false {
                      %79 = cir.const #false loc(#loc338)
                      cir.yield %79 : !cir.bool loc(#loc338)
                    }) : (!cir.bool) -> !cir.bool loc(#loc338)
                    cir.yield %78 : !cir.bool loc(#loc338)
                  }) : (!cir.bool) -> !cir.bool loc(#loc338)
                  cir.if %74 {
                    cir.break loc(#loc342)
                  } loc(#loc523)
                } loc(#loc520)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc343)
                %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc343)
                %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc344)
                %60 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc345)
                %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc345)
                cir.store %58, %61 : !s8i, !cir.ptr<!s8i> loc(#loc524)
                %62 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc346)
                %63 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc347)
                %64 = cir.const #cir.int<13> : !s32i loc(#loc348)
                %65 = cir.call @strchr(%63, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc346)
                cir.store %65, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc525)
                cir.scope {
                  %70 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc353)
                  %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc353)
                  cir.if %71 {
                    %72 = cir.const #cir.int<0> : !s32i loc(#loc355)
                    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc355)
                    %74 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc356)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc528)
                  } loc(#loc527)
                } loc(#loc526)
                %66 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc358)
                %67 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc359)
                %68 = cir.const #cir.int<10> : !s32i loc(#loc360)
                %69 = cir.call @strchr(%67, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc358)
                cir.store %69, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc529)
                cir.scope {
                  %70 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc365)
                  %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc365)
                  cir.if %71 {
                    %72 = cir.const #cir.int<0> : !s32i loc(#loc367)
                    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc367)
                    %74 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc368)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc532)
                  } loc(#loc531)
                } loc(#loc530)
                cir.yield loc(#loc264)
              } while {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc370)
                %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc370)
                cir.condition(%19) loc(#loc370)
              } loc(#loc493)
            } loc(#loc493)
            cir.scope {
              %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc373)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc374)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc374)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc534)
              cir.if %21 {
                %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc376)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc377)
              } loc(#loc535)
            } loc(#loc533)
            cir.scope {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc380)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc381)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc381)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc537)
              cir.if %21 {
                %22 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc383)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc384)
              } loc(#loc538)
            } loc(#loc536)
            %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc385)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc386)
          } loc(#loc485)
        } loc(#loc484)
        cir.yield loc(#loc238)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc387)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc388)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc539)
        cir.yield loc(#loc481)
      } loc(#loc481)
    } loc(#loc481)
    cir.return loc(#loc234)
  } loc(#loc479)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_17.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/sys/socket.h":277:1)
#loc6 = loc("/usr/include/sys/socket.h":278:52)
#loc7 = loc("/usr/include/netinet/in.h":404:1)
#loc8 = loc("/usr/include/netinet/in.h":405:40)
#loc9 = loc("/usr/include/sys/socket.h":112:1)
#loc10 = loc("/usr/include/sys/socket.h":113:6)
#loc11 = loc("/usr/include/sys/socket.h":296:1)
#loc12 = loc("/usr/include/sys/socket.h":296:39)
#loc13 = loc("/usr/include/sys/socket.h":306:1)
#loc14 = loc("/usr/include/sys/socket.h":307:38)
#loc15 = loc("/usr/include/sys/socket.h":145:1)
#loc16 = loc("/usr/include/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":44:1)
#loc24 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":142:1)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":46:5)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":46:9)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":47:5)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":141:5)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":47:13)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":47:9)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":47:16)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":47:20)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":47:18)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":48:5)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":49:9)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":140:9)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":50:13)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":50:30)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":55:13)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":55:17)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":56:13)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":56:32)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":57:13)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":57:19)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":58:13)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":58:35)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":59:13)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":59:35)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":60:13)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":60:41)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":65:13)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":65:27)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":66:13)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":66:37)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":60:30)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":60:37)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":66:27)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":68:13)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":124:21)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":77:39)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":77:48)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":77:61)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":77:32)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":77:17)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":77:72)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":78:17)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":81:17)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":78:21)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":78:37)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":79:17)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":80:21)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:17)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":86:17)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:32)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:46)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:58)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:79)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:80)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:72)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:89)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:21)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":83:101)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":84:17)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":85:21)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":87:24)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":87:25)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":87:34)
#loc88 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":87:37)
#loc89 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":87:51)
#loc90 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":87:17)
#loc91 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":87:52)
#loc92 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":88:38)
#loc93 = loc("/usr/include/netinet/in.h":249:5)
#loc94 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":88:17)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":89:43)
#loc96 = loc("/usr/include/netinet/in.h":251:20)
#loc97 = loc("/usr/include/netinet/in.h":33:15)
#loc98 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":89:17)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":90:42)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":90:36)
#loc101 = loc("/usr/include/netinet/in.h":250:15)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":90:17)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":90:50)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":91:17)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":94:17)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":91:26)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":91:58)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":91:59)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":91:68)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":91:82)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":91:21)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":91:88)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":92:17)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":93:21)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":95:17)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":98:17)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":95:28)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":95:42)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":95:21)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":95:61)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":96:17)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":97:21)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":99:39)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":99:53)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":99:59)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":99:32)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":99:17)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":99:63)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":100:17)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":103:17)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":100:21)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":100:37)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":101:17)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":102:21)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:35)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:49)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:54)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:53)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:69)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:73)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:81)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:85)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:30)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:17)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":105:86)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":106:17)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":109:17)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":106:21)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":106:35)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":106:48)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":106:51)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":106:65)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":107:17)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":108:21)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":111:36)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":111:22)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":111:17)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":113:27)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":113:34)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":113:40)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":113:17)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":113:44)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":114:17)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":117:17)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":114:21)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":115:17)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":116:32)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":116:22)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":116:21)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":118:27)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":118:34)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":118:40)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":118:17)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":118:44)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":119:17)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":122:17)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":119:21)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":120:17)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":121:32)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":121:22)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":121:21)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":124:20)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":125:13)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":128:13)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":125:17)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":125:33)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":126:13)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":127:30)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":127:17)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":129:13)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":132:13)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":129:17)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":129:33)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":130:13)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":131:30)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":131:17)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":139:23)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":139:13)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":47:24)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":47:23)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":238:1)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":241:1)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":240:5)
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":240:11)
#loc205 = loc("/usr/include/stdlib.h":575:1)
#loc206 = loc("/usr/include/stdlib.h":575:41)
#loc207 = loc("/usr/include/time.h":76:1)
#loc208 = loc("/usr/include/time.h":76:38)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":257:15)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":259:15)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":262:15)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":264:15)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":252:1)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":267:1)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":253:1)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":255:27)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":255:22)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":255:5)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":257:5)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":258:5)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":258:52)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":259:5)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":262:5)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":263:5)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":263:51)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":264:5)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":266:12)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":266:5)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":149:1)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":236:1)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":151:5)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":151:9)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":152:5)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":235:5)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":152:13)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":152:9)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":152:16)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":152:20)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":152:18)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":153:5)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":154:9)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":234:9)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":155:13)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":155:30)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":160:13)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":160:17)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":161:13)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":161:32)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":162:13)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":162:19)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":163:13)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":163:35)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":164:13)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":164:35)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":165:13)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":165:41)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":165:30)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":165:37)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":166:13)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":218:21)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":175:39)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":175:48)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":175:61)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":175:32)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":175:17)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":175:72)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":176:17)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":179:17)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":176:21)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":176:37)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":177:17)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":178:21)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":181:24)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":181:25)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":181:34)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":181:37)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":181:51)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":181:17)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":181:52)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":182:38)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":182:17)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":183:43)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":183:17)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":184:42)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":184:36)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":184:17)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":184:50)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":185:17)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":188:17)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":185:26)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":185:58)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":185:59)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":185:68)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":185:82)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":185:21)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":185:88)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":186:17)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":187:21)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":189:17)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":192:17)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":189:28)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":189:42)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":189:21)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":189:61)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":190:17)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":191:21)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":193:39)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":193:53)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":193:59)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":193:32)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":193:17)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":193:63)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":194:17)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":197:17)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":194:21)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":194:37)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":195:17)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":196:21)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:35)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:49)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:54)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:53)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:69)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:73)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:81)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:85)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:30)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:17)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":199:86)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":200:17)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":203:17)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":200:21)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":200:35)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":200:48)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":200:51)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":200:65)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":201:17)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":202:21)
#loc343 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":205:36)
#loc344 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":205:22)
#loc345 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":205:17)
#loc346 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":207:27)
#loc347 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":207:34)
#loc348 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":207:40)
#loc349 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":207:17)
#loc350 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":207:44)
#loc351 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":208:17)
#loc352 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":211:17)
#loc353 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":208:21)
#loc354 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":209:17)
#loc355 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":210:32)
#loc356 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":210:22)
#loc357 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":210:21)
#loc358 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":212:27)
#loc359 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":212:34)
#loc360 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":212:40)
#loc361 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":212:17)
#loc362 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":212:44)
#loc363 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":213:17)
#loc364 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":216:17)
#loc365 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":213:21)
#loc366 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":214:17)
#loc367 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":215:32)
#loc368 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":215:22)
#loc369 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":215:21)
#loc370 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":218:20)
#loc371 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":219:13)
#loc372 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":222:13)
#loc373 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":219:17)
#loc374 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":219:33)
#loc375 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":220:13)
#loc376 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":221:30)
#loc377 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":221:17)
#loc378 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":223:13)
#loc379 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":226:13)
#loc380 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":223:17)
#loc381 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":223:33)
#loc382 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":224:13)
#loc383 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":225:30)
#loc384 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":225:17)
#loc385 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":233:23)
#loc386 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":233:13)
#loc387 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":152:24)
#loc388 = loc("CWE605_Multiple_Binds_Same_Port__basic_17.c":152:23)
#loc389 = loc(fused[#loc1, #loc2])
#loc390 = loc(fused[#loc3, #loc4])
#loc391 = loc(fused[#loc5, #loc6])
#loc392 = loc(fused[#loc7, #loc8])
#loc393 = loc(fused[#loc9, #loc10])
#loc394 = loc(fused[#loc11, #loc12])
#loc395 = loc(fused[#loc13, #loc14])
#loc396 = loc(fused[#loc15, #loc16])
#loc397 = loc(fused[#loc17, #loc18])
#loc398 = loc(fused[#loc19, #loc20])
#loc399 = loc(fused[#loc21, #loc22])
#loc400 = loc(fused[#loc23, #loc24])
#loc401 = loc(fused[#loc25, #loc26])
#loc402 = loc(fused[#loc27, #loc28])
#loc403 = loc(fused[#loc30, #loc29])
#loc404 = loc(fused[#loc31, #loc32])
#loc405 = loc(fused[#loc34, #loc28])
#loc406 = loc(fused[#loc35, #loc36])
#loc407 = loc(fused[#loc37, #loc38])
#loc408 = loc(fused[#loc39, #loc40])
#loc409 = loc(fused[#loc41, #loc42])
#loc410 = loc(fused[#loc43, #loc44])
#loc411 = loc(fused[#loc45, #loc46])
#loc412 = loc(fused[#loc47, #loc48])
#loc413 = loc(fused[#loc49, #loc50])
#loc414 = loc(fused[#loc51, #loc52])
#loc415 = loc(fused[#loc53, #loc54])
#loc416 = loc(fused[#loc57, #loc54])
#loc417 = loc(fused[#loc58, #loc59])
#loc418 = loc(fused[#loc64, #loc65])
#loc419 = loc(fused[#loc66, #loc67])
#loc420 = loc(fused[#loc68, #loc69])
#loc421 = loc(fused[#loc70, #loc67])
#loc422 = loc(fused[#loc72, #loc73])
#loc423 = loc(fused[#loc77, #loc78])
#loc424 = loc(fused[#loc79, #loc78])
#loc425 = loc(fused[#loc81, #loc82])
#loc426 = loc(fused[#loc83, #loc73])
#loc427 = loc(fused[#loc85, #loc86])
#loc428 = loc(fused[#loc88, #loc89])
#loc429 = loc(fused[#loc90, #loc91])
#loc430 = loc(fused[#loc94, #loc92])
#loc431 = loc(fused[#loc98, #loc95])
#loc432 = loc(fused[#loc102, #loc103])
#loc433 = loc(fused[#loc104, #loc105])
#loc434 = loc(fused[#loc107, #loc108])
#loc435 = loc(fused[#loc109, #loc110])
#loc436 = loc(fused[#loc111, #loc112])
#loc437 = loc(fused[#loc113, #loc105])
#loc438 = loc(fused[#loc115, #loc116])
#loc439 = loc(fused[#loc119, #loc120])
#loc440 = loc(fused[#loc121, #loc116])
#loc441 = loc(fused[#loc127, #loc128])
#loc442 = loc(fused[#loc129, #loc130])
#loc443 = loc(fused[#loc131, #loc132])
#loc444 = loc(fused[#loc133, #loc130])
#loc445 = loc(fused[#loc136, #loc137])
#loc446 = loc(fused[#loc139, #loc140])
#loc447 = loc(fused[#loc139, #loc141])
#loc448 = loc(fused[#loc144, #loc145])
#loc449 = loc(fused[#loc146, #loc147])
#loc450 = loc(fused[#loc148, #loc149])
#loc451 = loc(fused[#loc151, #loc152])
#loc452 = loc(fused[#loc153, #loc147])
#loc453 = loc(fused[#loc157, #loc155])
#loc454 = loc(fused[#loc161, #loc162])
#loc455 = loc(fused[#loc163, #loc164])
#loc456 = loc(fused[#loc166, #loc164])
#loc457 = loc(fused[#loc169, #loc167])
#loc458 = loc(fused[#loc173, #loc174])
#loc459 = loc(fused[#loc175, #loc176])
#loc460 = loc(fused[#loc178, #loc176])
#loc461 = loc(fused[#loc181, #loc179])
#loc462 = loc(fused[#loc183, #loc184])
#loc463 = loc(fused[#loc185, #loc186])
#loc464 = loc(fused[#loc187, #loc184])
#loc465 = loc(fused[#loc190, #loc191])
#loc466 = loc(fused[#loc192, #loc193])
#loc467 = loc(fused[#loc194, #loc191])
#loc468 = loc(fused[#loc200, #loc199])
#loc469 = loc(fused[#loc201, #loc202])
#loc470 = loc(fused[#loc203, #loc204])
#loc471 = loc(fused[#loc205, #loc206])
#loc472 = loc(fused[#loc207, #loc208])
#loc473 = loc(fused[#loc213, #loc214])
#loc476 = loc(fused[#loc224, #loc225])
#loc477 = loc(fused[#loc228, #loc229])
#loc478 = loc(fused[#loc232, #loc231])
#loc479 = loc(fused[#loc233, #loc234])
#loc480 = loc(fused[#loc235, #loc236])
#loc481 = loc(fused[#loc237, #loc238])
#loc482 = loc(fused[#loc240, #loc239])
#loc483 = loc(fused[#loc241, #loc242])
#loc484 = loc(fused[#loc244, #loc238])
#loc485 = loc(fused[#loc245, #loc246])
#loc486 = loc(fused[#loc247, #loc248])
#loc487 = loc(fused[#loc249, #loc250])
#loc488 = loc(fused[#loc251, #loc252])
#loc489 = loc(fused[#loc253, #loc254])
#loc490 = loc(fused[#loc255, #loc256])
#loc491 = loc(fused[#loc257, #loc258])
#loc492 = loc(fused[#loc259, #loc260])
#loc493 = loc(fused[#loc263, #loc264])
#loc494 = loc(fused[#loc269, #loc270])
#loc495 = loc(fused[#loc271, #loc272])
#loc496 = loc(fused[#loc273, #loc274])
#loc497 = loc(fused[#loc275, #loc272])
#loc498 = loc(fused[#loc277, #loc278])
#loc499 = loc(fused[#loc280, #loc281])
#loc500 = loc(fused[#loc282, #loc283])
#loc501 = loc(fused[#loc285, #loc284])
#loc502 = loc(fused[#loc287, #loc286])
#loc503 = loc(fused[#loc290, #loc291])
#loc504 = loc(fused[#loc292, #loc293])
#loc505 = loc(fused[#loc295, #loc296])
#loc506 = loc(fused[#loc297, #loc298])
#loc507 = loc(fused[#loc299, #loc300])
#loc508 = loc(fused[#loc301, #loc293])
#loc509 = loc(fused[#loc303, #loc304])
#loc510 = loc(fused[#loc307, #loc308])
#loc511 = loc(fused[#loc309, #loc304])
#loc512 = loc(fused[#loc315, #loc316])
#loc513 = loc(fused[#loc317, #loc318])
#loc514 = loc(fused[#loc319, #loc320])
#loc515 = loc(fused[#loc321, #loc318])
#loc516 = loc(fused[#loc324, #loc325])
#loc517 = loc(fused[#loc327, #loc328])
#loc518 = loc(fused[#loc327, #loc329])
#loc519 = loc(fused[#loc332, #loc333])
#loc520 = loc(fused[#loc334, #loc335])
#loc521 = loc(fused[#loc336, #loc337])
#loc522 = loc(fused[#loc339, #loc340])
#loc523 = loc(fused[#loc341, #loc335])
#loc524 = loc(fused[#loc345, #loc343])
#loc525 = loc(fused[#loc349, #loc350])
#loc526 = loc(fused[#loc351, #loc352])
#loc527 = loc(fused[#loc354, #loc352])
#loc528 = loc(fused[#loc357, #loc355])
#loc529 = loc(fused[#loc361, #loc362])
#loc530 = loc(fused[#loc363, #loc364])
#loc531 = loc(fused[#loc366, #loc364])
#loc532 = loc(fused[#loc369, #loc367])
#loc533 = loc(fused[#loc371, #loc372])
#loc534 = loc(fused[#loc373, #loc374])
#loc535 = loc(fused[#loc375, #loc372])
#loc536 = loc(fused[#loc378, #loc379])
#loc537 = loc(fused[#loc380, #loc381])
#loc538 = loc(fused[#loc382, #loc379])
#loc539 = loc(fused[#loc388, #loc387])
