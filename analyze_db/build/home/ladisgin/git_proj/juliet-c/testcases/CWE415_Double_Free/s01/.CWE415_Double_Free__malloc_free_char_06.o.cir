!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc189)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc190)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc191)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc197)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc18)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc19)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc198)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc199)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    cir.br ^bb3 loc(#loc202)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc27)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc203)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc204)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc31)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc205)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<5> : !s32i loc(#loc36)
    %22 = cir.const #cir.int<5> : !s32i loc(#loc37)
    %23 = cir.cmp(eq, %21, %22) : !s32i, !cir.bool loc(#loc206)
    cir.brcond %23 ^bb10, ^bb11 loc(#loc207)
  ^bb10:  // pred: ^bb9
    %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc39)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
    cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc35)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc8)
  } loc(#loc192)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc42)
  } loc(#loc208)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc58)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    cir.br ^bb1 loc(#loc217)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc62)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc63)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc218)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc219)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc65)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc66)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc66)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc220)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc221)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc65)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.br ^bb3 loc(#loc224)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc226)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc76)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc78)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
    cir.br ^bb5 loc(#loc72)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc80)
    cir.br ^bb7 loc(#loc61)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc61)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc227)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<5> : !s32i loc(#loc83)
    %22 = cir.const #cir.int<5> : !s32i loc(#loc84)
    %23 = cir.cmp(ne, %21, %22) : !s32i, !cir.bool loc(#loc228)
    cir.brcond %23 ^bb10, ^bb11 loc(#loc229)
  ^bb10:  // pred: ^bb9
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb12 loc(#loc86)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc82)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc82)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc55)
  } loc(#loc214)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc93)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
    cir.br ^bb1 loc(#loc233)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc97)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc98)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc234)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc235)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc100)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc101)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc101)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc236)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc237)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc238)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
    cir.br ^bb3 loc(#loc240)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc241)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc242)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc111)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc113)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
    cir.br ^bb5 loc(#loc107)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc107)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb7 loc(#loc96)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc96)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc243)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<5> : !s32i loc(#loc118)
    %22 = cir.const #cir.int<5> : !s32i loc(#loc119)
    %23 = cir.cmp(eq, %21, %22) : !s32i, !cir.bool loc(#loc244)
    cir.brcond %23 ^bb10, ^bb11 loc(#loc245)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc117)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc117)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc90)
  } loc(#loc230)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc125)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    cir.br ^bb1 loc(#loc249)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc129)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc130)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc250)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc251)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.br ^bb8 loc(#loc132)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc136)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc137)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc252)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc253)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc254)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    cir.br ^bb4 loc(#loc256)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc257)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc258)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc149)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
    cir.br ^bb6 loc(#loc143)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc143)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc128)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc128)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc259)
  ^bb10:  // pred: ^bb9
    %21 = cir.const #cir.int<5> : !s32i loc(#loc152)
    %22 = cir.const #cir.int<5> : !s32i loc(#loc153)
    %23 = cir.cmp(eq, %21, %22) : !s32i, !cir.bool loc(#loc260)
    cir.brcond %23 ^bb11, ^bb12 loc(#loc261)
  ^bb11:  // pred: ^bb10
    %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc155)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
    cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
    cir.br ^bb12 loc(#loc151)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc151)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc122)
  } loc(#loc246)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc161)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    cir.br ^bb1 loc(#loc265)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc165)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc166)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc266)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc267)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc168)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc169)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc169)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc268)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc269)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc168)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc270)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
    cir.br ^bb3 loc(#loc272)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc177)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc177)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc273)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc274)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc179)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc181)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc179)
    cir.br ^bb5 loc(#loc175)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc175)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc164)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc164)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc275)
  ^bb9:  // pred: ^bb8
    %19 = cir.const #cir.int<5> : !s32i loc(#loc184)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc185)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc276)
    cir.brcond %21 ^bb10, ^bb11 loc(#loc277)
  ^bb10:  // pred: ^bb9
    %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc187)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc188)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc187)
    cir.br ^bb11 loc(#loc183)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc183)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc158)
  } loc(#loc262)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_char_06.c":29:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_char_06.c":46:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_char_06.c":31:5)
#loc10 = loc("CWE415_Double_Free__malloc_free_char_06.c":31:12)
#loc11 = loc("CWE415_Double_Free__malloc_free_char_06.c":33:12)
#loc12 = loc("CWE415_Double_Free__malloc_free_char_06.c":33:5)
#loc13 = loc("CWE415_Double_Free__malloc_free_char_06.c":34:5)
#loc14 = loc("CWE415_Double_Free__malloc_free_char_06.c":40:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_char_06.c":34:8)
#loc16 = loc("CWE415_Double_Free__malloc_free_char_06.c":34:27)
#loc17 = loc("CWE415_Double_Free__malloc_free_char_06.c":35:5)
#loc18 = loc("CWE415_Double_Free__malloc_free_char_06.c":36:24)
#loc19 = loc("CWE415_Double_Free__malloc_free_char_06.c":36:31)
#loc20 = loc("CWE415_Double_Free__malloc_free_char_06.c":36:35)
#loc21 = loc("CWE415_Double_Free__malloc_free_char_06.c":36:46)
#loc22 = loc("CWE415_Double_Free__malloc_free_char_06.c":36:47)
#loc23 = loc("CWE415_Double_Free__malloc_free_char_06.c":36:9)
#loc24 = loc("CWE415_Double_Free__malloc_free_char_06.c":37:9)
#loc25 = loc("CWE415_Double_Free__malloc_free_char_06.c":37:37)
#loc26 = loc("CWE415_Double_Free__malloc_free_char_06.c":37:13)
#loc27 = loc("CWE415_Double_Free__malloc_free_char_06.c":37:21)
#loc28 = loc("CWE415_Double_Free__malloc_free_char_06.c":37:27)
#loc29 = loc("CWE415_Double_Free__malloc_free_char_06.c":37:28)
#loc30 = loc("CWE415_Double_Free__malloc_free_char_06.c":37:34)
#loc31 = loc("CWE415_Double_Free__malloc_free_char_06.c":37:33)
#loc32 = loc("CWE415_Double_Free__malloc_free_char_06.c":39:14)
#loc33 = loc("CWE415_Double_Free__malloc_free_char_06.c":39:9)
#loc34 = loc("CWE415_Double_Free__malloc_free_char_06.c":41:5)
#loc35 = loc("CWE415_Double_Free__malloc_free_char_06.c":45:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_char_06.c":41:8)
#loc37 = loc("CWE415_Double_Free__malloc_free_char_06.c":41:27)
#loc38 = loc("CWE415_Double_Free__malloc_free_char_06.c":42:5)
#loc39 = loc("CWE415_Double_Free__malloc_free_char_06.c":44:9)
#loc40 = loc("CWE415_Double_Free__malloc_free_char_06.c":44:14)
#loc41 = loc("CWE415_Double_Free__malloc_free_char_06.c":142:1)
#loc42 = loc("CWE415_Double_Free__malloc_free_char_06.c":148:1)
#loc43 = loc("CWE415_Double_Free__malloc_free_char_06.c":144:5)
#loc44 = loc("CWE415_Double_Free__malloc_free_char_06.c":144:14)
#loc45 = loc("CWE415_Double_Free__malloc_free_char_06.c":145:5)
#loc46 = loc("CWE415_Double_Free__malloc_free_char_06.c":145:14)
#loc47 = loc("CWE415_Double_Free__malloc_free_char_06.c":146:5)
#loc48 = loc("CWE415_Double_Free__malloc_free_char_06.c":146:14)
#loc49 = loc("CWE415_Double_Free__malloc_free_char_06.c":147:5)
#loc50 = loc("CWE415_Double_Free__malloc_free_char_06.c":147:14)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE415_Double_Free__malloc_free_char_06.c":68:19)
#loc54 = loc("CWE415_Double_Free__malloc_free_char_06.c":53:1)
#loc55 = loc("CWE415_Double_Free__malloc_free_char_06.c":76:1)
#loc56 = loc("CWE415_Double_Free__malloc_free_char_06.c":55:5)
#loc57 = loc("CWE415_Double_Free__malloc_free_char_06.c":55:12)
#loc58 = loc("CWE415_Double_Free__malloc_free_char_06.c":57:12)
#loc59 = loc("CWE415_Double_Free__malloc_free_char_06.c":57:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_char_06.c":58:5)
#loc61 = loc("CWE415_Double_Free__malloc_free_char_06.c":64:5)
#loc62 = loc("CWE415_Double_Free__malloc_free_char_06.c":58:8)
#loc63 = loc("CWE415_Double_Free__malloc_free_char_06.c":58:27)
#loc64 = loc("CWE415_Double_Free__malloc_free_char_06.c":59:5)
#loc65 = loc("CWE415_Double_Free__malloc_free_char_06.c":60:24)
#loc66 = loc("CWE415_Double_Free__malloc_free_char_06.c":60:31)
#loc67 = loc("CWE415_Double_Free__malloc_free_char_06.c":60:35)
#loc68 = loc("CWE415_Double_Free__malloc_free_char_06.c":60:46)
#loc69 = loc("CWE415_Double_Free__malloc_free_char_06.c":60:47)
#loc70 = loc("CWE415_Double_Free__malloc_free_char_06.c":60:9)
#loc71 = loc("CWE415_Double_Free__malloc_free_char_06.c":61:9)
#loc72 = loc("CWE415_Double_Free__malloc_free_char_06.c":61:37)
#loc73 = loc("CWE415_Double_Free__malloc_free_char_06.c":61:13)
#loc74 = loc("CWE415_Double_Free__malloc_free_char_06.c":61:21)
#loc75 = loc("CWE415_Double_Free__malloc_free_char_06.c":61:27)
#loc76 = loc("CWE415_Double_Free__malloc_free_char_06.c":61:28)
#loc77 = loc("CWE415_Double_Free__malloc_free_char_06.c":61:34)
#loc78 = loc("CWE415_Double_Free__malloc_free_char_06.c":61:33)
#loc79 = loc("CWE415_Double_Free__malloc_free_char_06.c":63:14)
#loc80 = loc("CWE415_Double_Free__malloc_free_char_06.c":63:9)
#loc81 = loc("CWE415_Double_Free__malloc_free_char_06.c":65:5)
#loc82 = loc("CWE415_Double_Free__malloc_free_char_06.c":75:5)
#loc83 = loc("CWE415_Double_Free__malloc_free_char_06.c":65:8)
#loc84 = loc("CWE415_Double_Free__malloc_free_char_06.c":65:27)
#loc85 = loc("CWE415_Double_Free__malloc_free_char_06.c":66:5)
#loc86 = loc("CWE415_Double_Free__malloc_free_char_06.c":69:5)
#loc87 = loc("CWE415_Double_Free__malloc_free_char_06.c":71:5)
#loc88 = loc("CWE415_Double_Free__malloc_free_char_06.c":68:9)
#loc89 = loc("CWE415_Double_Free__malloc_free_char_06.c":79:1)
#loc90 = loc("CWE415_Double_Free__malloc_free_char_06.c":97:1)
#loc91 = loc("CWE415_Double_Free__malloc_free_char_06.c":81:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_char_06.c":81:12)
#loc93 = loc("CWE415_Double_Free__malloc_free_char_06.c":83:12)
#loc94 = loc("CWE415_Double_Free__malloc_free_char_06.c":83:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_char_06.c":84:5)
#loc96 = loc("CWE415_Double_Free__malloc_free_char_06.c":90:5)
#loc97 = loc("CWE415_Double_Free__malloc_free_char_06.c":84:8)
#loc98 = loc("CWE415_Double_Free__malloc_free_char_06.c":84:27)
#loc99 = loc("CWE415_Double_Free__malloc_free_char_06.c":85:5)
#loc100 = loc("CWE415_Double_Free__malloc_free_char_06.c":86:24)
#loc101 = loc("CWE415_Double_Free__malloc_free_char_06.c":86:31)
#loc102 = loc("CWE415_Double_Free__malloc_free_char_06.c":86:35)
#loc103 = loc("CWE415_Double_Free__malloc_free_char_06.c":86:46)
#loc104 = loc("CWE415_Double_Free__malloc_free_char_06.c":86:47)
#loc105 = loc("CWE415_Double_Free__malloc_free_char_06.c":86:9)
#loc106 = loc("CWE415_Double_Free__malloc_free_char_06.c":87:9)
#loc107 = loc("CWE415_Double_Free__malloc_free_char_06.c":87:37)
#loc108 = loc("CWE415_Double_Free__malloc_free_char_06.c":87:13)
#loc109 = loc("CWE415_Double_Free__malloc_free_char_06.c":87:21)
#loc110 = loc("CWE415_Double_Free__malloc_free_char_06.c":87:27)
#loc111 = loc("CWE415_Double_Free__malloc_free_char_06.c":87:28)
#loc112 = loc("CWE415_Double_Free__malloc_free_char_06.c":87:34)
#loc113 = loc("CWE415_Double_Free__malloc_free_char_06.c":87:33)
#loc114 = loc("CWE415_Double_Free__malloc_free_char_06.c":89:14)
#loc115 = loc("CWE415_Double_Free__malloc_free_char_06.c":89:9)
#loc116 = loc("CWE415_Double_Free__malloc_free_char_06.c":91:5)
#loc117 = loc("CWE415_Double_Free__malloc_free_char_06.c":96:5)
#loc118 = loc("CWE415_Double_Free__malloc_free_char_06.c":91:8)
#loc119 = loc("CWE415_Double_Free__malloc_free_char_06.c":91:27)
#loc120 = loc("CWE415_Double_Free__malloc_free_char_06.c":92:5)
#loc121 = loc("CWE415_Double_Free__malloc_free_char_06.c":100:1)
#loc122 = loc("CWE415_Double_Free__malloc_free_char_06.c":121:1)
#loc123 = loc("CWE415_Double_Free__malloc_free_char_06.c":102:5)
#loc124 = loc("CWE415_Double_Free__malloc_free_char_06.c":102:12)
#loc125 = loc("CWE415_Double_Free__malloc_free_char_06.c":104:12)
#loc126 = loc("CWE415_Double_Free__malloc_free_char_06.c":104:5)
#loc127 = loc("CWE415_Double_Free__malloc_free_char_06.c":105:5)
#loc128 = loc("CWE415_Double_Free__malloc_free_char_06.c":115:5)
#loc129 = loc("CWE415_Double_Free__malloc_free_char_06.c":105:8)
#loc130 = loc("CWE415_Double_Free__malloc_free_char_06.c":105:27)
#loc131 = loc("CWE415_Double_Free__malloc_free_char_06.c":106:5)
#loc132 = loc("CWE415_Double_Free__malloc_free_char_06.c":109:5)
#loc133 = loc("CWE415_Double_Free__malloc_free_char_06.c":111:5)
#loc134 = loc("CWE415_Double_Free__malloc_free_char_06.c":108:19)
#loc135 = loc("CWE415_Double_Free__malloc_free_char_06.c":108:9)
#loc136 = loc("CWE415_Double_Free__malloc_free_char_06.c":112:24)
#loc137 = loc("CWE415_Double_Free__malloc_free_char_06.c":112:31)
#loc138 = loc("CWE415_Double_Free__malloc_free_char_06.c":112:35)
#loc139 = loc("CWE415_Double_Free__malloc_free_char_06.c":112:46)
#loc140 = loc("CWE415_Double_Free__malloc_free_char_06.c":112:47)
#loc141 = loc("CWE415_Double_Free__malloc_free_char_06.c":112:9)
#loc142 = loc("CWE415_Double_Free__malloc_free_char_06.c":113:9)
#loc143 = loc("CWE415_Double_Free__malloc_free_char_06.c":113:37)
#loc144 = loc("CWE415_Double_Free__malloc_free_char_06.c":113:13)
#loc145 = loc("CWE415_Double_Free__malloc_free_char_06.c":113:21)
#loc146 = loc("CWE415_Double_Free__malloc_free_char_06.c":113:27)
#loc147 = loc("CWE415_Double_Free__malloc_free_char_06.c":113:28)
#loc148 = loc("CWE415_Double_Free__malloc_free_char_06.c":113:34)
#loc149 = loc("CWE415_Double_Free__malloc_free_char_06.c":113:33)
#loc150 = loc("CWE415_Double_Free__malloc_free_char_06.c":116:5)
#loc151 = loc("CWE415_Double_Free__malloc_free_char_06.c":120:5)
#loc152 = loc("CWE415_Double_Free__malloc_free_char_06.c":116:8)
#loc153 = loc("CWE415_Double_Free__malloc_free_char_06.c":116:27)
#loc154 = loc("CWE415_Double_Free__malloc_free_char_06.c":117:5)
#loc155 = loc("CWE415_Double_Free__malloc_free_char_06.c":119:9)
#loc156 = loc("CWE415_Double_Free__malloc_free_char_06.c":119:14)
#loc157 = loc("CWE415_Double_Free__malloc_free_char_06.c":124:1)
#loc158 = loc("CWE415_Double_Free__malloc_free_char_06.c":140:1)
#loc159 = loc("CWE415_Double_Free__malloc_free_char_06.c":126:5)
#loc160 = loc("CWE415_Double_Free__malloc_free_char_06.c":126:12)
#loc161 = loc("CWE415_Double_Free__malloc_free_char_06.c":128:12)
#loc162 = loc("CWE415_Double_Free__malloc_free_char_06.c":128:5)
#loc163 = loc("CWE415_Double_Free__malloc_free_char_06.c":129:5)
#loc164 = loc("CWE415_Double_Free__malloc_free_char_06.c":134:5)
#loc165 = loc("CWE415_Double_Free__malloc_free_char_06.c":129:8)
#loc166 = loc("CWE415_Double_Free__malloc_free_char_06.c":129:27)
#loc167 = loc("CWE415_Double_Free__malloc_free_char_06.c":130:5)
#loc168 = loc("CWE415_Double_Free__malloc_free_char_06.c":131:24)
#loc169 = loc("CWE415_Double_Free__malloc_free_char_06.c":131:31)
#loc170 = loc("CWE415_Double_Free__malloc_free_char_06.c":131:35)
#loc171 = loc("CWE415_Double_Free__malloc_free_char_06.c":131:46)
#loc172 = loc("CWE415_Double_Free__malloc_free_char_06.c":131:47)
#loc173 = loc("CWE415_Double_Free__malloc_free_char_06.c":131:9)
#loc174 = loc("CWE415_Double_Free__malloc_free_char_06.c":132:9)
#loc175 = loc("CWE415_Double_Free__malloc_free_char_06.c":132:37)
#loc176 = loc("CWE415_Double_Free__malloc_free_char_06.c":132:13)
#loc177 = loc("CWE415_Double_Free__malloc_free_char_06.c":132:21)
#loc178 = loc("CWE415_Double_Free__malloc_free_char_06.c":132:27)
#loc179 = loc("CWE415_Double_Free__malloc_free_char_06.c":132:28)
#loc180 = loc("CWE415_Double_Free__malloc_free_char_06.c":132:34)
#loc181 = loc("CWE415_Double_Free__malloc_free_char_06.c":132:33)
#loc182 = loc("CWE415_Double_Free__malloc_free_char_06.c":135:5)
#loc183 = loc("CWE415_Double_Free__malloc_free_char_06.c":139:5)
#loc184 = loc("CWE415_Double_Free__malloc_free_char_06.c":135:8)
#loc185 = loc("CWE415_Double_Free__malloc_free_char_06.c":135:27)
#loc186 = loc("CWE415_Double_Free__malloc_free_char_06.c":136:5)
#loc187 = loc("CWE415_Double_Free__malloc_free_char_06.c":138:9)
#loc188 = loc("CWE415_Double_Free__malloc_free_char_06.c":138:14)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc3, #loc4])
#loc191 = loc(fused[#loc5, #loc6])
#loc192 = loc(fused[#loc7, #loc8])
#loc193 = loc(fused[#loc9, #loc10])
#loc194 = loc(fused[#loc12, #loc11])
#loc195 = loc(fused[#loc13, #loc14])
#loc196 = loc(fused[#loc15, #loc16])
#loc197 = loc(fused[#loc17, #loc14])
#loc198 = loc(fused[#loc20, #loc21])
#loc199 = loc(fused[#loc19, #loc21])
#loc200 = loc(fused[#loc18, #loc22])
#loc201 = loc(fused[#loc23, #loc22])
#loc202 = loc(fused[#loc24, #loc25])
#loc203 = loc(fused[#loc26, #loc27])
#loc204 = loc(fused[#loc28, #loc25])
#loc205 = loc(fused[#loc34, #loc35])
#loc206 = loc(fused[#loc36, #loc37])
#loc207 = loc(fused[#loc38, #loc35])
#loc208 = loc(fused[#loc41, #loc42])
#loc209 = loc(fused[#loc43, #loc44])
#loc210 = loc(fused[#loc45, #loc46])
#loc211 = loc(fused[#loc47, #loc48])
#loc212 = loc(fused[#loc49, #loc50])
#loc213 = loc(fused[#loc51, #loc52])
#loc214 = loc(fused[#loc54, #loc55])
#loc215 = loc(fused[#loc56, #loc57])
#loc216 = loc(fused[#loc59, #loc58])
#loc217 = loc(fused[#loc60, #loc61])
#loc218 = loc(fused[#loc62, #loc63])
#loc219 = loc(fused[#loc64, #loc61])
#loc220 = loc(fused[#loc67, #loc68])
#loc221 = loc(fused[#loc66, #loc68])
#loc222 = loc(fused[#loc65, #loc69])
#loc223 = loc(fused[#loc70, #loc69])
#loc224 = loc(fused[#loc71, #loc72])
#loc225 = loc(fused[#loc73, #loc74])
#loc226 = loc(fused[#loc75, #loc72])
#loc227 = loc(fused[#loc81, #loc82])
#loc228 = loc(fused[#loc83, #loc84])
#loc229 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc230 = loc(fused[#loc89, #loc90])
#loc231 = loc(fused[#loc91, #loc92])
#loc232 = loc(fused[#loc94, #loc93])
#loc233 = loc(fused[#loc95, #loc96])
#loc234 = loc(fused[#loc97, #loc98])
#loc235 = loc(fused[#loc99, #loc96])
#loc236 = loc(fused[#loc102, #loc103])
#loc237 = loc(fused[#loc101, #loc103])
#loc238 = loc(fused[#loc100, #loc104])
#loc239 = loc(fused[#loc105, #loc104])
#loc240 = loc(fused[#loc106, #loc107])
#loc241 = loc(fused[#loc108, #loc109])
#loc242 = loc(fused[#loc110, #loc107])
#loc243 = loc(fused[#loc116, #loc117])
#loc244 = loc(fused[#loc118, #loc119])
#loc245 = loc(fused[#loc120, #loc117])
#loc246 = loc(fused[#loc121, #loc122])
#loc247 = loc(fused[#loc123, #loc124])
#loc248 = loc(fused[#loc126, #loc125])
#loc249 = loc(fused[#loc127, #loc128])
#loc250 = loc(fused[#loc129, #loc130])
#loc251 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc252 = loc(fused[#loc138, #loc139])
#loc253 = loc(fused[#loc137, #loc139])
#loc254 = loc(fused[#loc136, #loc140])
#loc255 = loc(fused[#loc141, #loc140])
#loc256 = loc(fused[#loc142, #loc143])
#loc257 = loc(fused[#loc144, #loc145])
#loc258 = loc(fused[#loc146, #loc143])
#loc259 = loc(fused[#loc150, #loc151])
#loc260 = loc(fused[#loc152, #loc153])
#loc261 = loc(fused[#loc154, #loc151])
#loc262 = loc(fused[#loc157, #loc158])
#loc263 = loc(fused[#loc159, #loc160])
#loc264 = loc(fused[#loc162, #loc161])
#loc265 = loc(fused[#loc163, #loc164])
#loc266 = loc(fused[#loc165, #loc166])
#loc267 = loc(fused[#loc167, #loc164])
#loc268 = loc(fused[#loc170, #loc171])
#loc269 = loc(fused[#loc169, #loc171])
#loc270 = loc(fused[#loc168, #loc172])
#loc271 = loc(fused[#loc173, #loc172])
#loc272 = loc(fused[#loc174, #loc175])
#loc273 = loc(fused[#loc176, #loc177])
#loc274 = loc(fused[#loc178, #loc175])
#loc275 = loc(fused[#loc182, #loc183])
#loc276 = loc(fused[#loc184, #loc185])
#loc277 = loc(fused[#loc186, #loc183])
