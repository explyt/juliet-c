!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc57 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":90:10)
#loc58 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":90:14)
#loc59 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":90:20)
#loc60 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":90:32)
#loc148 = loc(fused[#loc57, #loc58])
#loc149 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_51a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc128)
  cir.func private @printLongLongLine(!s64i) loc(#loc129)
  cir.func private @CWE401_Memory_Leak__int64_t_calloc_51b_badSink(!cir.ptr<!s64i>) loc(#loc130)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_calloc_51_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc133)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc134)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc135)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc24)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s64i>, !cir.bool loc(#loc138)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc139)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc28)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
    cir.br ^bb3 loc(#loc22)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.int<5> : !s64i loc(#loc29)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc32)
    cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc140)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc35)
    %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc33)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc36)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
    cir.call @CWE401_Memory_Leak__int64_t_calloc_51b_badSink(%23) : (!cir.ptr<!s64i>) -> () loc(#loc38)
    cir.return loc(#loc10)
  } loc(#loc131)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_calloc_51_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc40)
  } loc(#loc141)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc144)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc145)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc64)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE401_Memory_Leak__int64_t_calloc_51_good : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call @CWE401_Memory_Leak__int64_t_calloc_51_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE401_Memory_Leak__int64_t_calloc_51_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE401_Memory_Leak__int64_t_calloc_51_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %17 : !s32i loc(#loc152)
  } loc(#loc147)
  cir.func private @CWE401_Memory_Leak__int64_t_calloc_51b_goodG2BSink(!cir.ptr<!s64i>) loc(#loc153)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc156)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc83)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc83)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc83)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc83)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc83)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc83)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc157)
    %9 = cir.const #cir.int<5> : !s64i loc(#loc85)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc86)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s64i>, %11 : !s32i), !cir.ptr<!s64i> loc(#loc88)
    cir.store %9, %12 : !s64i, !cir.ptr<!s64i> loc(#loc158)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc89)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc91)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc89)
    cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc92)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc93)
    cir.call @CWE401_Memory_Leak__int64_t_calloc_51b_goodG2BSink(%17) : (!cir.ptr<!s64i>) -> () loc(#loc94)
    cir.return loc(#loc78)
  } loc(#loc154)
  cir.func private @CWE401_Memory_Leak__int64_t_calloc_51b_goodB2GSink(!cir.ptr<!s64i>) loc(#loc159)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc101)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc162)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc103)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc104)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc163)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc164)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc111)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc112)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s64i>, !cir.bool loc(#loc167)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc114)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc116)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
    cir.br ^bb3 loc(#loc110)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.int<5> : !s64i loc(#loc117)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc118)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc120)
    cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc169)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc121)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc123)
    %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc121)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc124)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc125)
    cir.call @CWE401_Memory_Leak__int64_t_calloc_51b_goodB2GSink(%23) : (!cir.ptr<!s64i>) -> () loc(#loc126)
    cir.return loc(#loc98)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_51a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":25:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":25:67)
#loc9 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":27:1)
#loc10 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":38:1)
#loc11 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":29:5)
#loc12 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":29:15)
#loc13 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":30:12)
#loc14 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":30:5)
#loc15 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":32:23)
#loc16 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":32:30)
#loc17 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":32:35)
#loc18 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":32:49)
#loc19 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":32:50)
#loc20 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":32:5)
#loc21 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":33:5)
#loc22 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":33:33)
#loc23 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":33:9)
#loc24 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":33:17)
#loc25 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":33:23)
#loc26 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":33:24)
#loc27 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":33:30)
#loc28 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":33:29)
#loc29 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":35:15)
#loc30 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":35:5)
#loc31 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":35:10)
#loc32 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":35:11)
#loc33 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":36:23)
#loc34 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":36:28)
#loc35 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":36:29)
#loc36 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":36:5)
#loc37 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":37:52)
#loc38 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":37:5)
#loc39 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":75:1)
#loc40 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":79:1)
#loc41 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":77:5)
#loc42 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":77:13)
#loc43 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":78:5)
#loc44 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":78:13)
#loc45 = loc("/usr/include/stdlib.h":575:1)
#loc46 = loc("/usr/include/stdlib.h":575:41)
#loc47 = loc("/usr/include/time.h":76:1)
#loc48 = loc("/usr/include/time.h":76:38)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":95:15)
#loc52 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":97:15)
#loc53 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":100:15)
#loc54 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":102:15)
#loc55 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":90:1)
#loc56 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":105:1)
#loc61 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":91:1)
#loc62 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":93:27)
#loc63 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":93:22)
#loc64 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":93:5)
#loc65 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":95:5)
#loc66 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":96:5)
#loc67 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":96:48)
#loc68 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":97:5)
#loc69 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":100:5)
#loc70 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":101:5)
#loc71 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":101:47)
#loc72 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":102:5)
#loc73 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":104:12)
#loc74 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":104:5)
#loc75 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":45:1)
#loc76 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":45:71)
#loc77 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":47:1)
#loc78 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":57:1)
#loc79 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":49:5)
#loc80 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":49:15)
#loc81 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":50:12)
#loc82 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":50:5)
#loc83 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":52:23)
#loc84 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":52:5)
#loc85 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":54:15)
#loc86 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":54:5)
#loc87 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":54:10)
#loc88 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":54:11)
#loc89 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":55:23)
#loc90 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":55:28)
#loc91 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":55:29)
#loc92 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":55:5)
#loc93 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":56:56)
#loc94 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":56:5)
#loc95 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":60:1)
#loc96 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":60:71)
#loc97 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":62:1)
#loc98 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":73:1)
#loc99 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":64:5)
#loc100 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":64:15)
#loc101 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":65:12)
#loc102 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":65:5)
#loc103 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":67:23)
#loc104 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":67:30)
#loc105 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":67:35)
#loc106 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":67:49)
#loc107 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":67:50)
#loc108 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":67:5)
#loc109 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":68:5)
#loc110 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":68:33)
#loc111 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":68:9)
#loc112 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":68:17)
#loc113 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":68:23)
#loc114 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":68:24)
#loc115 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":68:30)
#loc116 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":68:29)
#loc117 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":70:15)
#loc118 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":70:5)
#loc119 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":70:10)
#loc120 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":70:11)
#loc121 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":71:23)
#loc122 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":71:28)
#loc123 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":71:29)
#loc124 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":71:5)
#loc125 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":72:56)
#loc126 = loc("CWE401_Memory_Leak__int64_t_calloc_51a.c":72:5)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc9, #loc10])
#loc132 = loc(fused[#loc11, #loc12])
#loc133 = loc(fused[#loc14, #loc13])
#loc134 = loc(fused[#loc17, #loc18])
#loc135 = loc(fused[#loc15, #loc19])
#loc136 = loc(fused[#loc20, #loc19])
#loc137 = loc(fused[#loc21, #loc22])
#loc138 = loc(fused[#loc23, #loc24])
#loc139 = loc(fused[#loc25, #loc22])
#loc140 = loc(fused[#loc30, #loc29])
#loc141 = loc(fused[#loc39, #loc40])
#loc142 = loc(fused[#loc41, #loc42])
#loc143 = loc(fused[#loc43, #loc44])
#loc144 = loc(fused[#loc45, #loc46])
#loc145 = loc(fused[#loc47, #loc48])
#loc146 = loc(fused[#loc49, #loc50])
#loc147 = loc(fused[#loc55, #loc56])
#loc150 = loc(fused[#loc66, #loc67])
#loc151 = loc(fused[#loc70, #loc71])
#loc152 = loc(fused[#loc74, #loc73])
#loc153 = loc(fused[#loc75, #loc76])
#loc154 = loc(fused[#loc77, #loc78])
#loc155 = loc(fused[#loc79, #loc80])
#loc156 = loc(fused[#loc82, #loc81])
#loc157 = loc(fused[#loc84, #loc83])
#loc158 = loc(fused[#loc86, #loc85])
#loc159 = loc(fused[#loc95, #loc96])
#loc160 = loc(fused[#loc97, #loc98])
#loc161 = loc(fused[#loc99, #loc100])
#loc162 = loc(fused[#loc102, #loc101])
#loc163 = loc(fused[#loc105, #loc106])
#loc164 = loc(fused[#loc103, #loc107])
#loc165 = loc(fused[#loc108, #loc107])
#loc166 = loc(fused[#loc109, #loc110])
#loc167 = loc(fused[#loc111, #loc112])
#loc168 = loc(fused[#loc113, #loc110])
#loc169 = loc(fused[#loc118, #loc117])
