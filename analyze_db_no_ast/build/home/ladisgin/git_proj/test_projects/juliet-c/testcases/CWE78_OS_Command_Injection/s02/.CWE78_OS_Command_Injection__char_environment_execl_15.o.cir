!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc112)
  cir.func private  @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc114)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private  @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc116)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc13)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execl_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc119)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc119)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      %13 = cir.const #cir.int<6> : !s32i loc(#loc25)
      cir.switch (%13 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc123)
          %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc124)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
          cir.store %18, %14 : !u64i, !cir.ptr<!u64i> loc(#loc123)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
          %21 = cir.call @getenv(%20) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
          cir.store %21, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
          cir.scope {
            %22 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
            %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!s8i>, !s32i loc(#loc126)
            %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc39)
            cir.if %26 {
              %27 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc41)
              %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
              %29 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc44)
              %31 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
              %32 = cir.const #cir.int<100> : !s32i loc(#loc46)
              %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc46)
              %34 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc128)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc48)
              %38 = cir.binop(sub, %35, %37) : !u64i loc(#loc129)
              %39 = cir.call @strncat(%30, %31, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
            } loc(#loc127)
          } loc(#loc125)
        } loc(#loc122)
        cir.break loc(#loc49)
      },
      case (default) {
        %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc50)
        cir.break loc(#loc51)
      }
      ] loc(#loc23)
    } loc(#loc121)
    %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc13)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc13)
    %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc52)
    %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc14)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc14)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc55)
    cir.return loc(#loc16)
  } loc(#loc117)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execl_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc130)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc133)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc64)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc136)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc136)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc136)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.scope {
      %13 = cir.const #cir.int<5> : !s32i loc(#loc75)
      cir.switch (%13 : !s32i) [
      case (equal, 6) {
        %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
        cir.break loc(#loc78)
      },
      case (default) {
        %14 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc79)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
        %16 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc64)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc64)
        %18 = cir.call @strcat(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc79)
        cir.break loc(#loc81)
      }
      ] loc(#loc73)
    } loc(#loc138)
    %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc82)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc82)
    %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc83)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc83)
    %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc84)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc84)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc87)
    cir.return loc(#loc66)
  } loc(#loc134)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc141)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      %13 = cir.const #cir.int<6> : !s32i loc(#loc98)
      cir.switch (%13 : !s32i) [
      case (equal, 6) {
        %14 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc99)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
        %16 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc101)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc101)
        %18 = cir.call @strcat(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc99)
        cir.break loc(#loc102)
      },
      case (default) {
        %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc104)
        cir.break loc(#loc105)
      }
      ] loc(#loc96)
    } loc(#loc143)
    %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc106)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc106)
    %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc107)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc107)
    %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc108)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc108)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc111)
    cir.return loc(#loc89)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdlib.h":773:1)
#loc4 = loc("/usr/include/stdlib.h":773:50)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":64:37)
#loc6 = loc("/usr/include/string.h":152:1)
#loc7 = loc("/usr/include/string.h":153:29)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":75:19)
#loc11 = loc("/usr/include/unistd.h":594:1)
#loc12 = loc("/usr/include/unistd.h":595:14)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":80:11)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":80:47)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":53:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":81:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":55:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":55:12)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":56:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":56:28)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":57:12)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":57:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":58:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":77:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":58:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":61:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":71:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":63:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":63:37)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":64:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":64:49)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":63:26)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":63:33)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":64:30)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":66:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":70:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":66:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":66:28)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":66:25)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":67:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":69:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":69:21)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":69:26)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":69:25)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":69:35)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":69:48)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":69:52)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":69:60)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":72:5)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":75:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":76:9)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":80:29)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":80:61)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":80:75)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":80:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":131:1)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":135:1)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":133:5)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":133:14)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":134:5)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":134:14)
#loc62 = loc("/usr/include/string.h":149:1)
#loc63 = loc("/usr/include/string.h":150:14)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":101:22)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":88:1)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":107:1)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":90:5)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":90:12)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":91:5)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":91:28)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":92:12)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":92:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":93:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":103:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":93:12)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":97:19)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":97:9)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":98:9)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":101:9)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":101:16)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":102:9)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":106:11)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":106:29)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":106:47)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":106:61)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":106:75)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":106:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":110:1)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":129:1)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":112:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":112:12)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":113:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":113:28)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":114:12)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":114:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":115:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":125:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":115:12)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":119:9)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":119:16)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":119:22)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":120:9)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":123:19)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":123:9)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":124:9)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":128:11)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":128:29)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":128:47)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":128:61)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":128:75)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_execl_15.c":128:5)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc3, #loc4])
#loc114 = loc(fused[#loc6, #loc7])
#loc115 = loc(fused[#loc8, #loc9])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc15, #loc16])
#loc118 = loc(fused[#loc17, #loc18])
#loc119 = loc(fused[#loc19, #loc20])
#loc120 = loc(fused[#loc22, #loc21])
#loc121 = loc(fused[#loc23, #loc24])
#loc122 = loc(fused[#loc26, #loc27])
#loc123 = loc(fused[#loc28, #loc29])
#loc124 = loc(fused[#loc30, #loc31])
#loc125 = loc(fused[#loc35, #loc36])
#loc126 = loc(fused[#loc37, #loc38])
#loc127 = loc(fused[#loc40, #loc36])
#loc128 = loc(fused[#loc46, #loc47])
#loc129 = loc(fused[#loc46, #loc48])
#loc130 = loc(fused[#loc56, #loc57])
#loc131 = loc(fused[#loc58, #loc59])
#loc132 = loc(fused[#loc60, #loc61])
#loc133 = loc(fused[#loc62, #loc63])
#loc134 = loc(fused[#loc65, #loc66])
#loc135 = loc(fused[#loc67, #loc68])
#loc136 = loc(fused[#loc69, #loc70])
#loc137 = loc(fused[#loc72, #loc71])
#loc138 = loc(fused[#loc73, #loc74])
#loc139 = loc(fused[#loc88, #loc89])
#loc140 = loc(fused[#loc90, #loc91])
#loc141 = loc(fused[#loc92, #loc93])
#loc142 = loc(fused[#loc95, #loc94])
#loc143 = loc(fused[#loc96, #loc97])
