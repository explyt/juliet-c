!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_listen_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc591)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc592)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc593)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc594)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc595)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc596)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc597)
  cir.func private @close(!s32i) -> !s32i loc(#loc598)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc599)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.func private @printIntLine(!s32i) loc(#loc600)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_listen_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc602)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc603)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc32)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc606)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc607)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc608)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc609)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc610)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc41)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc608)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc43)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc609)
            cir.scope {
              cir.do {
                cir.scope {
                  %13 = cir.const #cir.int<2> : !s32i loc(#loc50)
                  %14 = cir.const #cir.int<1> : !s32i loc(#loc51)
                  %15 = cir.const #cir.int<6> : !s32i loc(#loc52)
                  %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc613)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc59)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc59)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc615)
                    cir.if %61 {
                      cir.break loc(#loc61)
                    } loc(#loc616)
                  } loc(#loc614)
                  %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc617)
                  %18 = cir.const #cir.int<0> : !s32i loc(#loc64)
                  %19 = cir.const #cir.int<16> : !u64i loc(#loc618)
                  cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc619)
                  %20 = cir.const #cir.int<2> : !s32i loc(#loc69)
                  %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc69)
                  %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                  cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc620)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc72)
                  %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc72)
                  %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc621)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc76)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc76)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
                  %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc622)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                    %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc624)
                    %60 = cir.const #cir.int<16> : !u64i loc(#loc625)
                    %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc625)
                    %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc88)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc89)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc89)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc626)
                    cir.if %65 {
                      cir.break loc(#loc91)
                    } loc(#loc627)
                  } loc(#loc623)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                    %59 = cir.const #cir.int<5> : !s32i loc(#loc95)
                    %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc96)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc97)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc97)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc629)
                    cir.if %63 {
                      cir.break loc(#loc99)
                    } loc(#loc630)
                  } loc(#loc628)
                  %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                  %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc101)
                  %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc102)
                  %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc103)
                  cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc631)
                  cir.scope {
                    %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc109)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc109)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc633)
                    cir.if %61 {
                      cir.break loc(#loc111)
                    } loc(#loc634)
                  } loc(#loc632)
                  %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
                  %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
                  %38 = cir.const #cir.int<3> : !s32i loc(#loc114)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc114)
                  %40 = cir.const #cir.int<4> : !u64i loc(#loc114)
                  %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc114)
                  %42 = cir.const #cir.int<2> : !s32i loc(#loc114)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc114)
                  %44 = cir.binop(add, %41, %43) : !u64i loc(#loc114)
                  %45 = cir.const #cir.int<1> : !s32i loc(#loc115)
                  %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc115)
                  %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc635)
                  %48 = cir.const #cir.int<0> : !s32i loc(#loc116)
                  %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
                  %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc117)
                  cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc636)
                  cir.scope {
                    %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc123)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc123)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc638)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc124)
                      cir.yield %63 : !cir.bool loc(#loc124)
                    }, false {
                      %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                      %64 = cir.const #cir.int<0> : !s32i loc(#loc126)
                      %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc639)
                      %66 = cir.ternary(%65, true {
                        %67 = cir.const #true loc(#loc124)
                        cir.yield %67 : !cir.bool loc(#loc124)
                      }, false {
                        %67 = cir.const #false loc(#loc124)
                        cir.yield %67 : !cir.bool loc(#loc124)
                      }) : (!cir.bool) -> !cir.bool loc(#loc124)
                      cir.yield %66 : !cir.bool loc(#loc124)
                    }) : (!cir.bool) -> !cir.bool loc(#loc124)
                    cir.if %62 {
                      cir.break loc(#loc128)
                    } loc(#loc640)
                  } loc(#loc637)
                  %51 = cir.const #cir.int<0> : !s32i loc(#loc129)
                  %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc129)
                  %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                  %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
                  %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc131)
                  cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc641)
                  %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
                  %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc133)
                  cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc642)
                } loc(#loc612)
                cir.yield loc(#loc47)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc136)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc136)
                cir.condition(%14) loc(#loc136)
              } loc(#loc611)
            } loc(#loc611)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc140)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc140)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc644)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc143)
              } loc(#loc645)
            } loc(#loc643)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc147)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc147)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc647)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc150)
              } loc(#loc648)
            } loc(#loc646)
          } loc(#loc605)
          cir.break loc(#loc151)
        } loc(#loc33)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc153)
          cir.break loc(#loc154)
        } loc(#loc152)
        cir.yield loc(#loc30)
      } loc(#loc30)
    } loc(#loc604)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc157)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc651)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc651)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc651)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
              %7 = cir.const #cir.int<10> : !s32i loc(#loc166)
              %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc653)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc171)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc171)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc171)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc172)
              } else {
                %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc22)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc22)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc173)
              } loc(#loc654)
            } loc(#loc652)
          } loc(#loc650)
          cir.break loc(#loc174)
        } loc(#loc158)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc176)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc176)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc177)
          cir.break loc(#loc178)
        } loc(#loc175)
        cir.yield loc(#loc155)
      } loc(#loc155)
    } loc(#loc649)
    cir.return loc(#loc24)
  } loc(#loc601)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_listen_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc656)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc181)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc657)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc183)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc658)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc185)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc659)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc187)
    cir.return loc(#loc180)
  } loc(#loc655)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc189)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc661)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc195)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc662)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc199)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc665)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc666)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc667)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc668)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc669)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc208)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc208)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc667)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc210)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc210)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc668)
            cir.scope {
              cir.do {
                cir.scope {
                  %13 = cir.const #cir.int<2> : !s32i loc(#loc217)
                  %14 = cir.const #cir.int<1> : !s32i loc(#loc218)
                  %15 = cir.const #cir.int<6> : !s32i loc(#loc219)
                  %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc220)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc672)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc226)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc226)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc674)
                    cir.if %61 {
                      cir.break loc(#loc228)
                    } loc(#loc675)
                  } loc(#loc673)
                  %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc676)
                  %18 = cir.const #cir.int<0> : !s32i loc(#loc231)
                  %19 = cir.const #cir.int<16> : !u64i loc(#loc677)
                  cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc678)
                  %20 = cir.const #cir.int<2> : !s32i loc(#loc236)
                  %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc236)
                  %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                  cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc679)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc238)
                  %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc238)
                  %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc680)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc240)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc240)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc241)
                  %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc681)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                    %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc683)
                    %60 = cir.const #cir.int<16> : !u64i loc(#loc684)
                    %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc684)
                    %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc251)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc252)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc252)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc685)
                    cir.if %65 {
                      cir.break loc(#loc254)
                    } loc(#loc686)
                  } loc(#loc682)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                    %59 = cir.const #cir.int<5> : !s32i loc(#loc258)
                    %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc259)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc260)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc260)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc688)
                    cir.if %63 {
                      cir.break loc(#loc262)
                    } loc(#loc689)
                  } loc(#loc687)
                  %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc263)
                  %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc264)
                  %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc265)
                  %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc266)
                  cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc690)
                  cir.scope {
                    %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc271)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc272)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc272)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc692)
                    cir.if %61 {
                      cir.break loc(#loc274)
                    } loc(#loc693)
                  } loc(#loc691)
                  %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc275)
                  %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc276)
                  %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc276)
                  %38 = cir.const #cir.int<3> : !s32i loc(#loc277)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc277)
                  %40 = cir.const #cir.int<4> : !u64i loc(#loc277)
                  %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc277)
                  %42 = cir.const #cir.int<2> : !s32i loc(#loc277)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc277)
                  %44 = cir.binop(add, %41, %43) : !u64i loc(#loc277)
                  %45 = cir.const #cir.int<1> : !s32i loc(#loc278)
                  %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc278)
                  %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc694)
                  %48 = cir.const #cir.int<0> : !s32i loc(#loc279)
                  %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc280)
                  %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc280)
                  cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc695)
                  cir.scope {
                    %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc286)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc286)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc697)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc287)
                      cir.yield %63 : !cir.bool loc(#loc287)
                    }, false {
                      %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc288)
                      %64 = cir.const #cir.int<0> : !s32i loc(#loc289)
                      %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc698)
                      %66 = cir.ternary(%65, true {
                        %67 = cir.const #true loc(#loc287)
                        cir.yield %67 : !cir.bool loc(#loc287)
                      }, false {
                        %67 = cir.const #false loc(#loc287)
                        cir.yield %67 : !cir.bool loc(#loc287)
                      }) : (!cir.bool) -> !cir.bool loc(#loc287)
                      cir.yield %66 : !cir.bool loc(#loc287)
                    }) : (!cir.bool) -> !cir.bool loc(#loc287)
                    cir.if %62 {
                      cir.break loc(#loc291)
                    } loc(#loc699)
                  } loc(#loc696)
                  %51 = cir.const #cir.int<0> : !s32i loc(#loc292)
                  %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc292)
                  %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                  %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc294)
                  %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc294)
                  cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc700)
                  %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc295)
                  %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc296)
                  cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc701)
                } loc(#loc671)
                cir.yield loc(#loc214)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc299)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc299)
                cir.condition(%14) loc(#loc299)
              } loc(#loc670)
            } loc(#loc670)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc302)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc303)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc303)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc703)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc305)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc306)
              } loc(#loc704)
            } loc(#loc702)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc309)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc310)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc310)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc706)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc313)
              } loc(#loc707)
            } loc(#loc705)
          } loc(#loc664)
          cir.break loc(#loc314)
        } loc(#loc200)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc316)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc316)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc317)
          cir.break loc(#loc318)
        } loc(#loc315)
        cir.yield loc(#loc197)
      } loc(#loc197)
    } loc(#loc663)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc321)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc323)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc323)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc324)
          cir.break loc(#loc325)
        } loc(#loc322)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc710)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc710)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc710)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc333)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc334)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc712)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc337)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc713)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc335)
                  cir.yield %14 : !cir.bool loc(#loc335)
                }, false {
                  %14 = cir.const #false loc(#loc335)
                  cir.yield %14 : !cir.bool loc(#loc335)
                }) : (!cir.bool) -> !cir.bool loc(#loc335)
                cir.yield %13 : !cir.bool loc(#loc335)
              }, false {
                %10 = cir.const #false loc(#loc335)
                cir.yield %10 : !cir.bool loc(#loc335)
              }) : (!cir.bool) -> !cir.bool loc(#loc335)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc342)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc343)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc343)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc343)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc344)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc189)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc189)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc345)
              } loc(#loc714)
            } loc(#loc711)
          } loc(#loc709)
          cir.break loc(#loc346)
        } loc(#loc326)
        cir.yield loc(#loc319)
      } loc(#loc319)
    } loc(#loc708)
    cir.return loc(#loc191)
  } loc(#loc660)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc716)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc351)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc352)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc717)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc356)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc720)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc721)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc722)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc723)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc724)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc365)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc365)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc722)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc367)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc367)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc723)
            cir.scope {
              cir.do {
                cir.scope {
                  %13 = cir.const #cir.int<2> : !s32i loc(#loc374)
                  %14 = cir.const #cir.int<1> : !s32i loc(#loc375)
                  %15 = cir.const #cir.int<6> : !s32i loc(#loc376)
                  %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc377)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc727)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc382)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc383)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc383)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc729)
                    cir.if %61 {
                      cir.break loc(#loc385)
                    } loc(#loc730)
                  } loc(#loc728)
                  %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc731)
                  %18 = cir.const #cir.int<0> : !s32i loc(#loc388)
                  %19 = cir.const #cir.int<16> : !u64i loc(#loc732)
                  cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc733)
                  %20 = cir.const #cir.int<2> : !s32i loc(#loc393)
                  %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc393)
                  %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                  cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc734)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc395)
                  %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc395)
                  %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc735)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc397)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc397)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc398)
                  %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc736)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc403)
                    %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc738)
                    %60 = cir.const #cir.int<16> : !u64i loc(#loc739)
                    %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc739)
                    %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc408)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc409)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc409)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc740)
                    cir.if %65 {
                      cir.break loc(#loc411)
                    } loc(#loc741)
                  } loc(#loc737)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc414)
                    %59 = cir.const #cir.int<5> : !s32i loc(#loc415)
                    %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc416)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc417)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc417)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc743)
                    cir.if %63 {
                      cir.break loc(#loc419)
                    } loc(#loc744)
                  } loc(#loc742)
                  %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc420)
                  %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc421)
                  %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc422)
                  %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc423)
                  cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc745)
                  cir.scope {
                    %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc428)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc429)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc429)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc747)
                    cir.if %61 {
                      cir.break loc(#loc431)
                    } loc(#loc748)
                  } loc(#loc746)
                  %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                  %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc433)
                  %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc433)
                  %38 = cir.const #cir.int<3> : !s32i loc(#loc434)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc434)
                  %40 = cir.const #cir.int<4> : !u64i loc(#loc434)
                  %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc434)
                  %42 = cir.const #cir.int<2> : !s32i loc(#loc434)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc434)
                  %44 = cir.binop(add, %41, %43) : !u64i loc(#loc434)
                  %45 = cir.const #cir.int<1> : !s32i loc(#loc435)
                  %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc435)
                  %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc749)
                  %48 = cir.const #cir.int<0> : !s32i loc(#loc436)
                  %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc437)
                  %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc437)
                  cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc750)
                  cir.scope {
                    %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc442)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc443)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc443)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc752)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc444)
                      cir.yield %63 : !cir.bool loc(#loc444)
                    }, false {
                      %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc445)
                      %64 = cir.const #cir.int<0> : !s32i loc(#loc446)
                      %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc753)
                      %66 = cir.ternary(%65, true {
                        %67 = cir.const #true loc(#loc444)
                        cir.yield %67 : !cir.bool loc(#loc444)
                      }, false {
                        %67 = cir.const #false loc(#loc444)
                        cir.yield %67 : !cir.bool loc(#loc444)
                      }) : (!cir.bool) -> !cir.bool loc(#loc444)
                      cir.yield %66 : !cir.bool loc(#loc444)
                    }) : (!cir.bool) -> !cir.bool loc(#loc444)
                    cir.if %62 {
                      cir.break loc(#loc448)
                    } loc(#loc754)
                  } loc(#loc751)
                  %51 = cir.const #cir.int<0> : !s32i loc(#loc449)
                  %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc449)
                  %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc450)
                  %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc451)
                  %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc451)
                  cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc755)
                  %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc452)
                  %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc453)
                  cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc756)
                } loc(#loc726)
                cir.yield loc(#loc371)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc456)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc456)
                cir.condition(%14) loc(#loc456)
              } loc(#loc725)
            } loc(#loc725)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc459)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc460)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc460)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc758)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc462)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc463)
              } loc(#loc759)
            } loc(#loc757)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc466)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc467)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc467)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc761)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc469)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc470)
              } loc(#loc762)
            } loc(#loc760)
          } loc(#loc719)
          cir.break loc(#loc471)
        } loc(#loc357)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc473)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc473)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc474)
          cir.break loc(#loc475)
        } loc(#loc472)
        cir.yield loc(#loc354)
      } loc(#loc354)
    } loc(#loc718)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc478)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc765)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc765)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc765)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc486)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc487)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc767)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc489)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc490)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc768)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc488)
                  cir.yield %14 : !cir.bool loc(#loc488)
                }, false {
                  %14 = cir.const #false loc(#loc488)
                  cir.yield %14 : !cir.bool loc(#loc488)
                }) : (!cir.bool) -> !cir.bool loc(#loc488)
                cir.yield %13 : !cir.bool loc(#loc488)
              }, false {
                %10 = cir.const #false loc(#loc488)
                cir.yield %10 : !cir.bool loc(#loc488)
              }) : (!cir.bool) -> !cir.bool loc(#loc488)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc495)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc496)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc496)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc496)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc497)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc498)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc498)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc499)
              } loc(#loc769)
            } loc(#loc766)
          } loc(#loc764)
          cir.break loc(#loc500)
        } loc(#loc479)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc502)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc502)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc503)
          cir.break loc(#loc504)
        } loc(#loc501)
        cir.yield loc(#loc476)
      } loc(#loc476)
    } loc(#loc763)
    cir.return loc(#loc348)
  } loc(#loc715)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc771)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc509)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc510)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc772)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc514)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc516)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc516)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc517)
          cir.break loc(#loc518)
        } loc(#loc515)
        cir.case(default, []) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc520)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc774)
          cir.break loc(#loc522)
        } loc(#loc519)
        cir.yield loc(#loc512)
      } loc(#loc512)
    } loc(#loc773)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc525)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc777)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc777)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc777)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc533)
              %7 = cir.const #cir.int<10> : !s32i loc(#loc534)
              %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc779)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc538)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc539)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc539)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc539)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc540)
              } else {
                %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc541)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc541)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc542)
              } loc(#loc780)
            } loc(#loc778)
          } loc(#loc776)
          cir.break loc(#loc543)
        } loc(#loc526)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc545)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc545)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc546)
          cir.break loc(#loc547)
        } loc(#loc544)
        cir.yield loc(#loc523)
      } loc(#loc523)
    } loc(#loc775)
    cir.return loc(#loc506)
  } loc(#loc770)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc782)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc552)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc553)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc783)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc557)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc559)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc785)
          cir.break loc(#loc561)
        } loc(#loc558)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc563)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc563)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc564)
          cir.break loc(#loc565)
        } loc(#loc562)
        cir.yield loc(#loc555)
      } loc(#loc555)
    } loc(#loc784)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc568)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc788)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc788)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc788)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc576)
              %7 = cir.const #cir.int<10> : !s32i loc(#loc577)
              %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc790)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc581)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc582)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc582)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc582)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc583)
              } else {
                %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc584)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc584)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc585)
              } loc(#loc791)
            } loc(#loc789)
          } loc(#loc787)
          cir.break loc(#loc586)
        } loc(#loc569)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc588)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc588)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc589)
          cir.break loc(#loc590)
        } loc(#loc587)
        cir.yield loc(#loc566)
      } loc(#loc566)
    } loc(#loc786)
    cir.return loc(#loc549)
  } loc(#loc781)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_listen_socket_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":124:19)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":140:23)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":44:1)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":149:1)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":46:5)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":46:9)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":48:13)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":48:12)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":48:5)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":49:5)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":126:5)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":49:12)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":51:5)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":52:5)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":120:5)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":57:9)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":57:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":58:9)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":58:28)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":59:9)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":59:31)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":60:9)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":60:31)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":61:9)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":61:41)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":62:9)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":105:17)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":63:9)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":104:9)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:35)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:44)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:57)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:28)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:13)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:68)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":73:13)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":76:13)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":73:17)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":73:33)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":74:13)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":75:17)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:20)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:21)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:30)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:33)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:47)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:13)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:48)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":78:34)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":78:13)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":79:39)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":79:13)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":80:38)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":80:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":80:13)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":80:46)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:13)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":84:13)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:22)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:54)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:55)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:64)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:78)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:17)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:84)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":82:13)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":83:17)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:13)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":88:13)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:24)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:38)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:17)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:57)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":86:13)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":87:17)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:35)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:49)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:55)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:28)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:13)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:59)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":90:13)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":93:13)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":90:17)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":90:33)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":91:13)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":92:17)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:31)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:45)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:58)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:76)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:79)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:26)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:80)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:13)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":99:13)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:17)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:31)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:44)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:47)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:61)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":97:13)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":98:17)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":101:39)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":101:25)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":101:13)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":103:25)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":103:20)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":103:13)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":103:36)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":105:16)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":106:9)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":109:9)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":106:13)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":106:29)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":107:9)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":108:26)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":108:13)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":110:9)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":113:9)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":110:13)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":110:29)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":111:9)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":112:26)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":112:13)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":121:5)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":122:5)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":124:9)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":125:9)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":127:5)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":148:5)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":127:12)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":129:5)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":130:5)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":142:5)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":131:9)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":131:30)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":134:9)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":141:9)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":134:13)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":134:20)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":135:9)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":137:9)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":139:9)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":136:33)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":136:26)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":136:13)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":140:13)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":143:5)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":144:5)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":146:19)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":146:9)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":147:9)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":453:1)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":459:1)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":455:5)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":455:14)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":456:5)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":456:14)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":457:5)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":457:14)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":458:5)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":458:14)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":255:23)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":156:1)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":260:1)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":158:5)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":158:9)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":160:13)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":160:12)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":160:5)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":161:5)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":238:5)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":161:12)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":163:5)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":164:5)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":232:5)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":169:9)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":169:13)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":170:9)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":170:28)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":171:9)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":171:31)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":172:9)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":172:31)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":173:9)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":173:41)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":174:9)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":217:17)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":175:9)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":216:9)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:35)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:44)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:57)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:28)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:13)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:68)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":185:13)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":188:13)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":185:17)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":185:33)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":186:13)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":187:17)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:20)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:21)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:30)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:33)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:47)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:13)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:48)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":190:34)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":190:13)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":191:39)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":191:13)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":192:38)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":192:32)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":192:13)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":192:46)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:13)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":196:13)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:22)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:54)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:55)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:64)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:78)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:17)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:84)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":194:13)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":195:17)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:13)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":200:13)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:24)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:38)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:17)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:57)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":198:13)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":199:17)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:35)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:49)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:55)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:28)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:13)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:59)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":202:13)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":205:13)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":202:17)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":202:33)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":203:13)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":204:17)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:31)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:45)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:58)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:76)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:79)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:26)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:13)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:80)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:13)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":211:13)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:17)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:31)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:44)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:47)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:61)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":209:13)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":210:17)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":213:39)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":213:25)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":213:13)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":215:25)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":215:20)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":215:13)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":215:36)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":217:16)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":218:9)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":221:9)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":218:13)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":218:29)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":219:9)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":220:26)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":220:13)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":222:9)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":225:9)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":222:13)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":222:29)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":223:9)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":224:26)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":224:13)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":233:5)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":234:5)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":236:19)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":236:9)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":237:9)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":239:5)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":259:5)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":239:12)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":241:5)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":243:19)
#loc324 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":243:9)
#loc325 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":244:9)
#loc326 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":245:5)
#loc327 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":246:5)
#loc328 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":257:5)
#loc329 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":247:9)
#loc330 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":247:30)
#loc331 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:9)
#loc332 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":256:9)
#loc333 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:13)
#loc334 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:21)
#loc335 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:23)
#loc336 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:26)
#loc337 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:34)
#loc338 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:36)
#loc339 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":250:9)
#loc340 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":252:9)
#loc341 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":254:9)
#loc342 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":251:33)
#loc343 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":251:26)
#loc344 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":251:13)
#loc345 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":255:13)
#loc346 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":258:5)
#loc347 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":263:1)
#loc348 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":367:1)
#loc349 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":265:5)
#loc350 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":265:9)
#loc351 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":267:13)
#loc352 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":267:12)
#loc353 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":267:5)
#loc354 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":268:5)
#loc355 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":345:5)
#loc356 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":268:12)
#loc357 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":270:5)
#loc358 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":271:5)
#loc359 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":339:5)
#loc360 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":276:9)
#loc361 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":276:13)
#loc362 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":277:9)
#loc363 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":277:28)
#loc364 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":278:9)
#loc365 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":278:31)
#loc366 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":279:9)
#loc367 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":279:31)
#loc368 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":280:9)
#loc369 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":280:41)
#loc370 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":281:9)
#loc371 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":324:17)
#loc372 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":282:9)
#loc373 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":323:9)
#loc374 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:35)
#loc375 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:44)
#loc376 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:57)
#loc377 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:28)
#loc378 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:13)
#loc379 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:68)
#loc380 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":292:13)
#loc381 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":295:13)
#loc382 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":292:17)
#loc383 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":292:33)
#loc384 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":293:13)
#loc385 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":294:17)
#loc386 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:20)
#loc387 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:21)
#loc388 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:30)
#loc389 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:33)
#loc390 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:47)
#loc391 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:13)
#loc392 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:48)
#loc393 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":297:34)
#loc394 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":297:13)
#loc395 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":298:39)
#loc396 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":298:13)
#loc397 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":299:38)
#loc398 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":299:32)
#loc399 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":299:13)
#loc400 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":299:46)
#loc401 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:13)
#loc402 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":303:13)
#loc403 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:22)
#loc404 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:54)
#loc405 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:55)
#loc406 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:64)
#loc407 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:78)
#loc408 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:17)
#loc409 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:84)
#loc410 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":301:13)
#loc411 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":302:17)
#loc412 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:13)
#loc413 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":307:13)
#loc414 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:24)
#loc415 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:38)
#loc416 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:17)
#loc417 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:57)
#loc418 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":305:13)
#loc419 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":306:17)
#loc420 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:35)
#loc421 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:49)
#loc422 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:55)
#loc423 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:28)
#loc424 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:13)
#loc425 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:59)
#loc426 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":309:13)
#loc427 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":312:13)
#loc428 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":309:17)
#loc429 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":309:33)
#loc430 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":310:13)
#loc431 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":311:17)
#loc432 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:31)
#loc433 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:45)
#loc434 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:58)
#loc435 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:76)
#loc436 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:79)
#loc437 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:26)
#loc438 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:13)
#loc439 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:80)
#loc440 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:13)
#loc441 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":318:13)
#loc442 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:17)
#loc443 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:31)
#loc444 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:44)
#loc445 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:47)
#loc446 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:61)
#loc447 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":316:13)
#loc448 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":317:17)
#loc449 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":320:39)
#loc450 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":320:25)
#loc451 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":320:13)
#loc452 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":322:25)
#loc453 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":322:20)
#loc454 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":322:13)
#loc455 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":322:36)
#loc456 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":324:16)
#loc457 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":325:9)
#loc458 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":328:9)
#loc459 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":325:13)
#loc460 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":325:29)
#loc461 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":326:9)
#loc462 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":327:26)
#loc463 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":327:13)
#loc464 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":329:9)
#loc465 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":332:9)
#loc466 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":329:13)
#loc467 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":329:29)
#loc468 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":330:9)
#loc469 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":331:26)
#loc470 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":331:13)
#loc471 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":340:5)
#loc472 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":341:5)
#loc473 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":343:19)
#loc474 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":343:9)
#loc475 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":344:9)
#loc476 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":346:5)
#loc477 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":366:5)
#loc478 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":346:12)
#loc479 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":348:5)
#loc480 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":349:5)
#loc481 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":360:5)
#loc482 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":350:9)
#loc483 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":350:30)
#loc484 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:9)
#loc485 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":359:9)
#loc486 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:13)
#loc487 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:21)
#loc488 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:23)
#loc489 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:26)
#loc490 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:34)
#loc491 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:36)
#loc492 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":353:9)
#loc493 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":355:9)
#loc494 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":357:9)
#loc495 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":354:33)
#loc496 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":354:26)
#loc497 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":354:13)
#loc498 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":358:23)
#loc499 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":358:13)
#loc500 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":361:5)
#loc501 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":362:5)
#loc502 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":364:19)
#loc503 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":364:9)
#loc504 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":365:9)
#loc505 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":370:1)
#loc506 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":409:1)
#loc507 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":372:5)
#loc508 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":372:9)
#loc509 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":374:13)
#loc510 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":374:12)
#loc511 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":374:5)
#loc512 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":375:5)
#loc513 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":386:5)
#loc514 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":375:12)
#loc515 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":377:5)
#loc516 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":379:19)
#loc517 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":379:9)
#loc518 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":380:9)
#loc519 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":381:5)
#loc520 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":384:16)
#loc521 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":384:9)
#loc522 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":385:9)
#loc523 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":387:5)
#loc524 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":408:5)
#loc525 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":387:12)
#loc526 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":389:5)
#loc527 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":390:5)
#loc528 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":402:5)
#loc529 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":391:9)
#loc530 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":391:30)
#loc531 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":394:9)
#loc532 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":401:9)
#loc533 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":394:13)
#loc534 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":394:20)
#loc535 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":395:9)
#loc536 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":397:9)
#loc537 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":399:9)
#loc538 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":396:33)
#loc539 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":396:26)
#loc540 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":396:13)
#loc541 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":400:23)
#loc542 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":400:13)
#loc543 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":403:5)
#loc544 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":404:5)
#loc545 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":406:19)
#loc546 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":406:9)
#loc547 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":407:9)
#loc548 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":412:1)
#loc549 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":451:1)
#loc550 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":414:5)
#loc551 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":414:9)
#loc552 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":416:13)
#loc553 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":416:12)
#loc554 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":416:5)
#loc555 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":417:5)
#loc556 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":428:5)
#loc557 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":417:12)
#loc558 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":419:5)
#loc559 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":422:16)
#loc560 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":422:9)
#loc561 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":423:9)
#loc562 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":424:5)
#loc563 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":426:19)
#loc564 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":426:9)
#loc565 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":427:9)
#loc566 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":429:5)
#loc567 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":450:5)
#loc568 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":429:12)
#loc569 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":431:5)
#loc570 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":432:5)
#loc571 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":444:5)
#loc572 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":433:9)
#loc573 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":433:30)
#loc574 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":436:9)
#loc575 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":443:9)
#loc576 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":436:13)
#loc577 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":436:20)
#loc578 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":437:9)
#loc579 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":439:9)
#loc580 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":441:9)
#loc581 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":438:33)
#loc582 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":438:26)
#loc583 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":438:13)
#loc584 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":442:23)
#loc585 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":442:13)
#loc586 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":445:5)
#loc587 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":446:5)
#loc588 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":448:19)
#loc589 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":448:9)
#loc590 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":449:9)
#loc591 = loc(fused[#loc1, #loc2])
#loc592 = loc(fused[#loc3, #loc4])
#loc593 = loc(fused[#loc5, #loc6])
#loc594 = loc(fused[#loc7, #loc8])
#loc595 = loc(fused[#loc9, #loc10])
#loc596 = loc(fused[#loc11, #loc12])
#loc597 = loc(fused[#loc13, #loc14])
#loc598 = loc(fused[#loc15, #loc16])
#loc599 = loc(fused[#loc17, #loc18])
#loc600 = loc(fused[#loc20, #loc21])
#loc601 = loc(fused[#loc23, #loc24])
#loc602 = loc(fused[#loc25, #loc26])
#loc603 = loc(fused[#loc29, #loc27])
#loc604 = loc(fused[#loc30, #loc31])
#loc605 = loc(fused[#loc34, #loc35])
#loc606 = loc(fused[#loc36, #loc37])
#loc607 = loc(fused[#loc38, #loc39])
#loc608 = loc(fused[#loc40, #loc41])
#loc609 = loc(fused[#loc42, #loc43])
#loc610 = loc(fused[#loc44, #loc45])
#loc611 = loc(fused[#loc46, #loc47])
#loc612 = loc(fused[#loc48, #loc49])
#loc613 = loc(fused[#loc54, #loc55])
#loc614 = loc(fused[#loc56, #loc57])
#loc615 = loc(fused[#loc58, #loc59])
#loc616 = loc(fused[#loc60, #loc57])
#loc617 = loc(fused[#loc62, #loc63])
#loc618 = loc(fused[#loc65, #loc66])
#loc619 = loc(fused[#loc67, #loc68])
#loc620 = loc(fused[#loc71, #loc69])
#loc621 = loc(fused[#loc75, #loc72])
#loc622 = loc(fused[#loc79, #loc80])
#loc623 = loc(fused[#loc81, #loc82])
#loc624 = loc(fused[#loc84, #loc85])
#loc625 = loc(fused[#loc86, #loc87])
#loc626 = loc(fused[#loc88, #loc89])
#loc627 = loc(fused[#loc90, #loc82])
#loc628 = loc(fused[#loc92, #loc93])
#loc629 = loc(fused[#loc96, #loc97])
#loc630 = loc(fused[#loc98, #loc93])
#loc631 = loc(fused[#loc104, #loc105])
#loc632 = loc(fused[#loc106, #loc107])
#loc633 = loc(fused[#loc108, #loc109])
#loc634 = loc(fused[#loc110, #loc107])
#loc635 = loc(fused[#loc114, #loc115])
#loc636 = loc(fused[#loc118, #loc119])
#loc637 = loc(fused[#loc120, #loc121])
#loc638 = loc(fused[#loc122, #loc123])
#loc639 = loc(fused[#loc125, #loc126])
#loc640 = loc(fused[#loc127, #loc121])
#loc641 = loc(fused[#loc131, #loc129])
#loc642 = loc(fused[#loc134, #loc135])
#loc643 = loc(fused[#loc137, #loc138])
#loc644 = loc(fused[#loc139, #loc140])
#loc645 = loc(fused[#loc141, #loc138])
#loc646 = loc(fused[#loc144, #loc145])
#loc647 = loc(fused[#loc146, #loc147])
#loc648 = loc(fused[#loc148, #loc145])
#loc649 = loc(fused[#loc155, #loc156])
#loc650 = loc(fused[#loc159, #loc160])
#loc651 = loc(fused[#loc161, #loc162])
#loc652 = loc(fused[#loc163, #loc164])
#loc653 = loc(fused[#loc165, #loc166])
#loc654 = loc(fused[#loc167, #loc168, #loc169, #loc164])
#loc655 = loc(fused[#loc179, #loc180])
#loc656 = loc(fused[#loc181, #loc182])
#loc657 = loc(fused[#loc183, #loc184])
#loc658 = loc(fused[#loc185, #loc186])
#loc659 = loc(fused[#loc187, #loc188])
#loc660 = loc(fused[#loc190, #loc191])
#loc661 = loc(fused[#loc192, #loc193])
#loc662 = loc(fused[#loc196, #loc194])
#loc663 = loc(fused[#loc197, #loc198])
#loc664 = loc(fused[#loc201, #loc202])
#loc665 = loc(fused[#loc203, #loc204])
#loc666 = loc(fused[#loc205, #loc206])
#loc667 = loc(fused[#loc207, #loc208])
#loc668 = loc(fused[#loc209, #loc210])
#loc669 = loc(fused[#loc211, #loc212])
#loc670 = loc(fused[#loc213, #loc214])
#loc671 = loc(fused[#loc215, #loc216])
#loc672 = loc(fused[#loc221, #loc222])
#loc673 = loc(fused[#loc223, #loc224])
#loc674 = loc(fused[#loc225, #loc226])
#loc675 = loc(fused[#loc227, #loc224])
#loc676 = loc(fused[#loc229, #loc230])
#loc677 = loc(fused[#loc232, #loc233])
#loc678 = loc(fused[#loc234, #loc235])
#loc679 = loc(fused[#loc237, #loc236])
#loc680 = loc(fused[#loc239, #loc238])
#loc681 = loc(fused[#loc242, #loc243])
#loc682 = loc(fused[#loc244, #loc245])
#loc683 = loc(fused[#loc247, #loc248])
#loc684 = loc(fused[#loc249, #loc250])
#loc685 = loc(fused[#loc251, #loc252])
#loc686 = loc(fused[#loc253, #loc245])
#loc687 = loc(fused[#loc255, #loc256])
#loc688 = loc(fused[#loc259, #loc260])
#loc689 = loc(fused[#loc261, #loc256])
#loc690 = loc(fused[#loc267, #loc268])
#loc691 = loc(fused[#loc269, #loc270])
#loc692 = loc(fused[#loc271, #loc272])
#loc693 = loc(fused[#loc273, #loc270])
#loc694 = loc(fused[#loc277, #loc278])
#loc695 = loc(fused[#loc281, #loc282])
#loc696 = loc(fused[#loc283, #loc284])
#loc697 = loc(fused[#loc285, #loc286])
#loc698 = loc(fused[#loc288, #loc289])
#loc699 = loc(fused[#loc290, #loc284])
#loc700 = loc(fused[#loc294, #loc292])
#loc701 = loc(fused[#loc297, #loc298])
#loc702 = loc(fused[#loc300, #loc301])
#loc703 = loc(fused[#loc302, #loc303])
#loc704 = loc(fused[#loc304, #loc301])
#loc705 = loc(fused[#loc307, #loc308])
#loc706 = loc(fused[#loc309, #loc310])
#loc707 = loc(fused[#loc311, #loc308])
#loc708 = loc(fused[#loc319, #loc320])
#loc709 = loc(fused[#loc327, #loc328])
#loc710 = loc(fused[#loc329, #loc330])
#loc711 = loc(fused[#loc331, #loc332])
#loc712 = loc(fused[#loc333, #loc334])
#loc713 = loc(fused[#loc336, #loc338])
#loc714 = loc(fused[#loc339, #loc340, #loc341, #loc332])
#loc715 = loc(fused[#loc347, #loc348])
#loc716 = loc(fused[#loc349, #loc350])
#loc717 = loc(fused[#loc353, #loc351])
#loc718 = loc(fused[#loc354, #loc355])
#loc719 = loc(fused[#loc358, #loc359])
#loc720 = loc(fused[#loc360, #loc361])
#loc721 = loc(fused[#loc362, #loc363])
#loc722 = loc(fused[#loc364, #loc365])
#loc723 = loc(fused[#loc366, #loc367])
#loc724 = loc(fused[#loc368, #loc369])
#loc725 = loc(fused[#loc370, #loc371])
#loc726 = loc(fused[#loc372, #loc373])
#loc727 = loc(fused[#loc378, #loc379])
#loc728 = loc(fused[#loc380, #loc381])
#loc729 = loc(fused[#loc382, #loc383])
#loc730 = loc(fused[#loc384, #loc381])
#loc731 = loc(fused[#loc386, #loc387])
#loc732 = loc(fused[#loc389, #loc390])
#loc733 = loc(fused[#loc391, #loc392])
#loc734 = loc(fused[#loc394, #loc393])
#loc735 = loc(fused[#loc396, #loc395])
#loc736 = loc(fused[#loc399, #loc400])
#loc737 = loc(fused[#loc401, #loc402])
#loc738 = loc(fused[#loc404, #loc405])
#loc739 = loc(fused[#loc406, #loc407])
#loc740 = loc(fused[#loc408, #loc409])
#loc741 = loc(fused[#loc410, #loc402])
#loc742 = loc(fused[#loc412, #loc413])
#loc743 = loc(fused[#loc416, #loc417])
#loc744 = loc(fused[#loc418, #loc413])
#loc745 = loc(fused[#loc424, #loc425])
#loc746 = loc(fused[#loc426, #loc427])
#loc747 = loc(fused[#loc428, #loc429])
#loc748 = loc(fused[#loc430, #loc427])
#loc749 = loc(fused[#loc434, #loc435])
#loc750 = loc(fused[#loc438, #loc439])
#loc751 = loc(fused[#loc440, #loc441])
#loc752 = loc(fused[#loc442, #loc443])
#loc753 = loc(fused[#loc445, #loc446])
#loc754 = loc(fused[#loc447, #loc441])
#loc755 = loc(fused[#loc451, #loc449])
#loc756 = loc(fused[#loc454, #loc455])
#loc757 = loc(fused[#loc457, #loc458])
#loc758 = loc(fused[#loc459, #loc460])
#loc759 = loc(fused[#loc461, #loc458])
#loc760 = loc(fused[#loc464, #loc465])
#loc761 = loc(fused[#loc466, #loc467])
#loc762 = loc(fused[#loc468, #loc465])
#loc763 = loc(fused[#loc476, #loc477])
#loc764 = loc(fused[#loc480, #loc481])
#loc765 = loc(fused[#loc482, #loc483])
#loc766 = loc(fused[#loc484, #loc485])
#loc767 = loc(fused[#loc486, #loc487])
#loc768 = loc(fused[#loc489, #loc491])
#loc769 = loc(fused[#loc492, #loc493, #loc494, #loc485])
#loc770 = loc(fused[#loc505, #loc506])
#loc771 = loc(fused[#loc507, #loc508])
#loc772 = loc(fused[#loc511, #loc509])
#loc773 = loc(fused[#loc512, #loc513])
#loc774 = loc(fused[#loc521, #loc520])
#loc775 = loc(fused[#loc523, #loc524])
#loc776 = loc(fused[#loc527, #loc528])
#loc777 = loc(fused[#loc529, #loc530])
#loc778 = loc(fused[#loc531, #loc532])
#loc779 = loc(fused[#loc533, #loc534])
#loc780 = loc(fused[#loc535, #loc536, #loc537, #loc532])
#loc781 = loc(fused[#loc548, #loc549])
#loc782 = loc(fused[#loc550, #loc551])
#loc783 = loc(fused[#loc554, #loc552])
#loc784 = loc(fused[#loc555, #loc556])
#loc785 = loc(fused[#loc560, #loc559])
#loc786 = loc(fused[#loc566, #loc567])
#loc787 = loc(fused[#loc570, #loc571])
#loc788 = loc(fused[#loc572, #loc573])
#loc789 = loc(fused[#loc574, #loc575])
#loc790 = loc(fused[#loc576, #loc577])
#loc791 = loc(fused[#loc578, #loc579, #loc580, #loc575])
