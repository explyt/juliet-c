!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":23:21)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":23:28)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":60:25)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":60:32)
#loc145 = loc(fused[#loc5, #loc6])
#loc168 = loc(fused[#loc78, #loc79])
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc147)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc148)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc15)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc16)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc16)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc16)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc20)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc20)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc21)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc23)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc150)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc26)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc26)
        cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc152)
        cir.for : cond {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc29)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc29)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc153)
          cir.condition(%30) loc(#loc30)
        } body {
          cir.scope {
            %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %28 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
            %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc33)
            %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc33)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
            %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc36)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc155)
          } loc(#loc154)
          cir.yield loc(#loc25)
        } step {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc39)
          cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc156)
          cir.yield loc(#loc151)
        } loc(#loc151)
      } loc(#loc151)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc40)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc42)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc157)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc146)
    cir.return loc(#loc4)
  } loc(#loc144)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc161)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc52)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc160)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc54)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc54)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc54)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc54)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc54)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc56)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc57)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc57)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc61)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc63)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc65)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %26 = cir.const #cir.int<8> : !s32i loc(#loc67)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc67)
    %28 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc68)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc70)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    cir.call %29(%30) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc70)
    cir.return loc(#loc48)
  } loc(#loc158)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc73)
  } loc(#loc165)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc78, #loc79])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc170)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc171)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc88)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc89)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc90)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc89)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc89)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc172)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc93)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc93)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc94)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc95)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc94)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc96)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc173)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc99)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc99)
        cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc175)
        cir.for : cond {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc101)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc102)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc102)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc176)
          cir.condition(%30) loc(#loc103)
        } body {
          cir.scope {
            %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc105)
            %28 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
            %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc106)
            %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc106)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
            %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc108)
            %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc109)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc178)
          } loc(#loc177)
          cir.yield loc(#loc98)
        } step {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc111)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc112)
          cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc179)
          cir.yield loc(#loc174)
        } loc(#loc174)
      } loc(#loc174)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc113)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc113)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc115)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc116)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc115)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc117)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc180)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    } loc(#loc169)
    cir.return loc(#loc77)
  } loc(#loc167)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc184)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc125)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc183)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc127)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc127)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc127)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc127)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc127)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc129)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc130)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc130)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc130)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc185)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc134)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc136)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc186)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc141)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    cir.call %26(%27) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc141)
    cir.return loc(#loc121)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":23:1)
#loc4 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":39:1)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":24:1)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":25:5)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":38:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":26:9)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":26:16)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":27:9)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":27:24)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:16)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:24)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:29)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:33)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:9)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:34)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":29:25)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":29:16)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":29:20)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":29:9)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:9)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":34:9)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:18)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:14)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:21)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:25)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:23)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":32:9)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:30)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:23)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:13)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:18)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:19)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:31)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:31)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:30)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:23)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:9)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:14)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:18)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:19)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":37:19)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":37:9)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":41:1)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":53:1)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":43:5)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":43:12)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":45:5)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":45:32)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":46:5)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":46:33)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:12)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:24)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:29)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:33)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:5)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:34)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:25)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:5)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:16)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:20)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:21)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":50:12)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":50:25)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":50:23)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":50:5)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":52:5)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":52:13)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":90:1)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":93:1)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":92:5)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":92:13)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":60:1)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":76:1)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":61:1)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":62:5)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":75:5)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":63:9)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":63:16)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":64:9)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":64:24)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:16)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:24)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:29)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:33)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:9)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:34)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":66:25)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":66:16)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":66:20)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":66:9)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:9)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":71:9)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:18)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:14)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:21)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:25)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:23)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":69:9)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:30)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:23)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:13)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:18)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:19)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:31)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:31)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:30)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:23)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:9)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:14)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:18)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:19)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":74:19)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":74:9)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":78:1)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":88:1)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":80:5)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":80:12)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":81:5)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":81:32)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":82:5)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":82:33)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:12)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:24)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:29)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:33)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:5)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:34)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:25)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:5)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:16)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:20)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:21)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":86:12)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":86:5)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":87:5)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":87:13)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc8, #loc9])
#loc147 = loc(fused[#loc10, #loc11])
#loc148 = loc(fused[#loc12, #loc13])
#loc149 = loc(fused[#loc18, #loc19])
#loc150 = loc(fused[#loc23, #loc20])
#loc151 = loc(fused[#loc24, #loc25])
#loc152 = loc(fused[#loc27, #loc26])
#loc153 = loc(fused[#loc28, #loc29])
#loc154 = loc(fused[#loc31, #loc25])
#loc155 = loc(fused[#loc34, #loc37])
#loc156 = loc(fused[#loc39, #loc38])
#loc157 = loc(fused[#loc41, #loc40])
#loc158 = loc(fused[#loc47, #loc48])
#loc159 = loc(fused[#loc49, #loc50])
#loc160 = loc(fused[#loc51, #loc52])
#loc161 = loc(fused[#loc53, #loc54])
#loc162 = loc(fused[#loc59, #loc60])
#loc163 = loc(fused[#loc62, #loc61])
#loc164 = loc(fused[#loc69, #loc67])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc74, #loc75])
#loc167 = loc(fused[#loc76, #loc77])
#loc169 = loc(fused[#loc81, #loc82])
#loc170 = loc(fused[#loc83, #loc84])
#loc171 = loc(fused[#loc85, #loc86])
#loc172 = loc(fused[#loc91, #loc92])
#loc173 = loc(fused[#loc96, #loc93])
#loc174 = loc(fused[#loc97, #loc98])
#loc175 = loc(fused[#loc100, #loc99])
#loc176 = loc(fused[#loc101, #loc102])
#loc177 = loc(fused[#loc104, #loc98])
#loc178 = loc(fused[#loc107, #loc110])
#loc179 = loc(fused[#loc112, #loc111])
#loc180 = loc(fused[#loc114, #loc113])
#loc181 = loc(fused[#loc120, #loc121])
#loc182 = loc(fused[#loc122, #loc123])
#loc183 = loc(fused[#loc124, #loc125])
#loc184 = loc(fused[#loc126, #loc127])
#loc185 = loc(fused[#loc132, #loc133])
#loc186 = loc(fused[#loc135, #loc134])
#loc187 = loc(fused[#loc140, #loc139])
