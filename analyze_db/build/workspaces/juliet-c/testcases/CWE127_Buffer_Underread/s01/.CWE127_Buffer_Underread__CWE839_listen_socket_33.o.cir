!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc348)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc349)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc350)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc351)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc352)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc353)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc354)
  cir.func private @close(!s32i) -> !s32i loc(#loc355)
  cir.func private @printIntLine(!s32i) loc(#loc356)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc357)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc21)
  cir.func @_ZN48CWE127_Buffer_Underread__CWE839_listen_socket_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc360)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc27)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc29)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc363)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc364)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc365)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc366)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc367)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc38)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc365)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc40)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc366)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc47)
            %14 = cir.const #cir.int<1> : !u32i loc(#loc48)
            %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc48)
            %16 = cir.const #cir.int<6> : !u32i loc(#loc49)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc49)
            %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
            cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc370)
            cir.scope {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc55)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc56)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc56)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc372)
              cir.if %62 {
                cir.break loc(#loc58)
              } loc(#loc373)
            } loc(#loc371)
            %19 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc374)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc61)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc375)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc376)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc66)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc66)
            %24 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc377)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc69)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc69)
            %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc378)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc73)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc73)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc74)
            %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc379)
            cir.scope {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc80)
              %60 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc381)
              %61 = cir.const #cir.int<16> : !u64i loc(#loc382)
              %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc382)
              %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc86)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc86)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc383)
              cir.if %66 {
                cir.break loc(#loc88)
              } loc(#loc384)
            } loc(#loc380)
            cir.scope {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              %60 = cir.const #cir.int<5> : !s32i loc(#loc92)
              %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc94)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc94)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc386)
              cir.if %64 {
                cir.break loc(#loc96)
              } loc(#loc387)
            } loc(#loc385)
            %33 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
            cir.store %36, %7 : !s32i, !cir.ptr<!s32i> loc(#loc388)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc105)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc106)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc106)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc390)
              cir.if %62 {
                cir.break loc(#loc108)
              } loc(#loc391)
            } loc(#loc389)
            %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %38 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc111)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc111)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc111)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc111)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc111)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc111)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc111)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc112)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc392)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc113)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc114)
            cir.store %52, %4 : !s32i, !cir.ptr<!s32i> loc(#loc393)
            cir.scope {
              %59 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc119)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc120)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc120)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc395)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc121)
                cir.yield %64 : !cir.bool loc(#loc121)
              }, false {
                %64 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                %65 = cir.const #cir.int<0> : !s32i loc(#loc123)
                %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc396)
                %67 = cir.ternary(%66, true {
                  %68 = cir.const #true loc(#loc121)
                  cir.yield %68 : !cir.bool loc(#loc121)
                }, false {
                  %68 = cir.const #false loc(#loc121)
                  cir.yield %68 : !cir.bool loc(#loc121)
                }) : (!cir.bool) -> !cir.bool loc(#loc121)
                cir.yield %67 : !cir.bool loc(#loc121)
              }) : (!cir.bool) -> !cir.bool loc(#loc121)
              cir.if %63 {
                cir.break loc(#loc125)
              } loc(#loc397)
            } loc(#loc394)
            %53 = cir.const #cir.int<0> : !s8i loc(#loc126)
            %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            %55 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc128)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc398)
            %57 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
            %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc130)
            cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc399)
          } loc(#loc369)
          cir.yield loc(#loc44)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc133)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc133)
          cir.condition(%14) loc(#loc133)
        } loc(#loc368)
      } loc(#loc368)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc137)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc401)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc140)
        } loc(#loc402)
      } loc(#loc400)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc143)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc144)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc144)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc404)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc147)
        } loc(#loc405)
      } loc(#loc403)
    } loc(#loc362)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc407)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc151)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc407)
      cir.scope {
        %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc409)
        %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc409)
        cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc409)
        cir.scope {
          %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc158)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc159)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc411)
          cir.if %11 {
            %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc163)
            %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc164)
            %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc164)
            %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc164)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc165)
          } else {
            %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc21)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc21)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc166)
          } loc(#loc412)
        } loc(#loc410)
      } loc(#loc408)
    } loc(#loc406)
    cir.return loc(#loc23)
  } loc(#loc358)
  cir.func internal private @_ZN48CWE127_Buffer_Underread__CWE839_listen_socket_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc414)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc415)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc172)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc174)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc176)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc419)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc181)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc419)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc421)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc421)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc421)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc188)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc189)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc423)
          cir.if %12 {
            %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc193)
            %14 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc194)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc194)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc194)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc195)
          } else {
            %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc196)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc196)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc197)
          } loc(#loc424)
        } loc(#loc422)
      } loc(#loc420)
    } loc(#loc418)
    cir.return loc(#loc168)
  } loc(#loc413)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc198)
  cir.func internal private @_ZN48CWE127_Buffer_Underread__CWE839_listen_socket_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc426)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc427)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc204)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc206)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc428)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc430)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc431)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc432)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc433)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc434)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc215)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc215)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc432)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc217)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc217)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc433)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc224)
            %14 = cir.const #cir.int<1> : !u32i loc(#loc225)
            %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc225)
            %16 = cir.const #cir.int<6> : !u32i loc(#loc226)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc226)
            %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc227)
            cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc437)
            cir.scope {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc232)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc233)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc233)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc439)
              cir.if %62 {
                cir.break loc(#loc235)
              } loc(#loc440)
            } loc(#loc438)
            %19 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc441)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc238)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc442)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc443)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc243)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc243)
            %24 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc444)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc245)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc245)
            %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc445)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc247)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc247)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc248)
            %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc446)
            cir.scope {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc253)
              %60 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc448)
              %61 = cir.const #cir.int<16> : !u64i loc(#loc449)
              %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc449)
              %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc258)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc259)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc259)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc450)
              cir.if %66 {
                cir.break loc(#loc261)
              } loc(#loc451)
            } loc(#loc447)
            cir.scope {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc264)
              %60 = cir.const #cir.int<5> : !s32i loc(#loc265)
              %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc266)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc267)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc267)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc453)
              cir.if %64 {
                cir.break loc(#loc269)
              } loc(#loc454)
            } loc(#loc452)
            %33 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc270)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc271)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc272)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc273)
            cir.store %36, %7 : !s32i, !cir.ptr<!s32i> loc(#loc455)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc278)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc279)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc279)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc457)
              cir.if %62 {
                cir.break loc(#loc281)
              } loc(#loc458)
            } loc(#loc456)
            %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc282)
            %38 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc283)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc283)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc284)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc284)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc284)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc284)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc284)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc284)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc284)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc285)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc285)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc459)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc286)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc287)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc287)
            cir.store %52, %4 : !s32i, !cir.ptr<!s32i> loc(#loc460)
            cir.scope {
              %59 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc292)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc293)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc293)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc462)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc294)
                cir.yield %64 : !cir.bool loc(#loc294)
              }, false {
                %64 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc295)
                %65 = cir.const #cir.int<0> : !s32i loc(#loc296)
                %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc463)
                %67 = cir.ternary(%66, true {
                  %68 = cir.const #true loc(#loc294)
                  cir.yield %68 : !cir.bool loc(#loc294)
                }, false {
                  %68 = cir.const #false loc(#loc294)
                  cir.yield %68 : !cir.bool loc(#loc294)
                }) : (!cir.bool) -> !cir.bool loc(#loc294)
                cir.yield %67 : !cir.bool loc(#loc294)
              }) : (!cir.bool) -> !cir.bool loc(#loc294)
              cir.if %63 {
                cir.break loc(#loc298)
              } loc(#loc464)
            } loc(#loc461)
            %53 = cir.const #cir.int<0> : !s8i loc(#loc299)
            %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc300)
            %55 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc301)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc301)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc465)
            %57 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc302)
            %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc303)
            cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc466)
          } loc(#loc436)
          cir.yield loc(#loc221)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc306)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc306)
          cir.condition(%14) loc(#loc306)
        } loc(#loc435)
      } loc(#loc435)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc309)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc310)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc310)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc468)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc312)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc313)
        } loc(#loc469)
      } loc(#loc467)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc316)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc317)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc317)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc471)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc319)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc320)
        } loc(#loc472)
      } loc(#loc470)
    } loc(#loc429)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc474)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc324)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc324)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc474)
      cir.scope {
        %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc476)
        %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc476)
        cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc476)
        cir.scope {
          %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc331)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc332)
          %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc478)
          %12 = cir.ternary(%11, true {
            %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc334)
            %14 = cir.const #cir.int<10> : !s32i loc(#loc335)
            %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc479)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc333)
              cir.yield %17 : !cir.bool loc(#loc333)
            }, false {
              %17 = cir.const #false loc(#loc333)
              cir.yield %17 : !cir.bool loc(#loc333)
            }) : (!cir.bool) -> !cir.bool loc(#loc333)
            cir.yield %16 : !cir.bool loc(#loc333)
          }, false {
            %13 = cir.const #false loc(#loc333)
            cir.yield %13 : !cir.bool loc(#loc333)
          }) : (!cir.bool) -> !cir.bool loc(#loc333)
          cir.if %12 {
            %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc340)
            %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc341)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc341)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc341)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc342)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc198)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc198)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc343)
          } loc(#loc480)
        } loc(#loc477)
      } loc(#loc475)
    } loc(#loc473)
    cir.return loc(#loc200)
  } loc(#loc425)
  cir.func @_ZN48CWE127_Buffer_Underread__CWE839_listen_socket_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN48CWE127_Buffer_Underread__CWE839_listen_socket_33L7goodG2BEv() : () -> () loc(#loc346)
    cir.call @_ZN48CWE127_Buffer_Underread__CWE839_listen_socket_33L7goodB2GEv() : () -> () loc(#loc347)
    cir.return loc(#loc345)
  } loc(#loc481)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":134:27)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":47:1)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":138:1)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":49:5)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":49:9)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":50:5)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":50:20)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":52:13)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":52:12)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":52:5)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":53:5)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":121:5)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":58:9)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":58:13)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":59:9)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":59:28)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":60:9)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":60:31)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":61:9)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":61:31)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":62:9)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":62:41)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":63:9)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":106:17)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":64:9)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":105:9)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":73:35)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":73:44)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":73:57)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":73:28)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":73:13)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":73:68)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":74:13)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":77:13)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":74:17)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":74:33)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":75:13)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":76:17)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":78:20)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":78:21)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":78:30)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":78:33)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":78:47)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":78:13)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":78:48)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":79:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":79:13)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":80:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":80:13)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":81:38)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":81:32)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":81:13)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":81:46)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":82:13)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":85:13)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":82:22)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":82:54)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":82:55)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":82:64)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":82:78)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":82:17)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":82:84)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":83:13)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":84:17)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":86:13)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":89:13)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":86:24)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":86:38)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":86:17)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":86:57)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":87:13)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":88:17)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":90:35)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":90:49)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":90:55)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":90:28)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":90:13)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":90:59)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":91:13)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":94:13)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":91:17)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":91:33)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":92:13)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":93:17)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":96:31)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":96:45)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":96:58)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":96:76)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":96:79)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":96:26)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":96:13)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":96:80)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":97:13)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":100:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":97:17)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":97:31)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":97:44)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":97:47)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":97:61)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":98:13)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":99:17)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":102:39)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":102:25)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":102:13)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":104:25)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":104:20)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":104:13)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":104:36)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":106:16)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":107:9)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":110:9)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":107:13)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":107:29)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":108:9)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":109:26)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":109:13)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":111:9)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":114:9)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":111:13)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":111:29)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":112:9)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":113:26)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":113:13)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":122:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":137:5)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":123:9)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":123:20)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":124:9)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":136:9)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":125:13)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":125:34)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":128:13)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":135:13)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":128:17)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":128:24)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":129:13)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":131:13)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":133:13)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":130:37)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":130:30)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":130:17)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":134:17)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":145:1)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":170:1)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":147:5)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":147:9)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":148:5)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":148:20)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":150:13)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":150:12)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":150:5)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":153:12)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":153:5)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":154:5)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":169:5)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":155:9)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":155:20)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":156:9)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":168:9)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":157:13)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":157:34)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":160:13)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":167:13)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":160:17)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":160:24)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":161:13)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":163:13)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":165:13)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":162:37)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":162:30)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":162:17)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":166:27)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":166:17)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":259:27)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":173:1)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":263:1)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":175:5)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":175:9)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":176:5)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":176:20)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":178:13)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":178:12)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":178:5)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":179:5)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":247:5)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":184:9)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":184:13)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":185:9)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":185:28)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":186:9)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":186:31)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":187:9)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":187:31)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":188:9)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":188:41)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":189:9)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":232:17)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":190:9)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":231:9)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":199:35)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":199:44)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":199:57)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":199:28)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":199:13)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":199:68)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":200:13)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":203:13)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":200:17)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":200:33)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":201:13)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":202:17)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":204:20)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":204:21)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":204:30)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":204:33)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":204:47)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":204:13)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":204:48)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":205:34)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":205:13)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":206:39)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":206:13)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":207:38)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":207:32)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":207:13)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":207:46)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":208:13)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":211:13)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":208:22)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":208:54)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":208:55)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":208:64)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":208:78)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":208:17)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":208:84)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":209:13)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":210:17)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":212:13)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":215:13)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":212:24)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":212:38)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":212:17)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":212:57)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":213:13)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":214:17)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":216:35)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":216:49)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":216:55)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":216:28)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":216:13)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":216:59)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":217:13)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":220:13)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":217:17)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":217:33)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":218:13)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":219:17)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":222:31)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":222:45)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":222:58)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":222:76)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":222:79)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":222:26)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":222:13)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":222:80)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":223:13)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":226:13)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":223:17)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":223:31)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":223:44)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":223:47)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":223:61)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":224:13)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":225:17)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":228:39)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":228:25)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":228:13)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":230:25)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":230:20)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":230:13)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":230:36)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":232:16)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":233:9)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":236:9)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":233:13)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":233:29)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":234:9)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":235:26)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":235:13)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":237:9)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":240:9)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":237:13)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":237:29)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":238:9)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":239:26)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":239:13)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":248:5)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":262:5)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":249:9)
#loc324 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":249:20)
#loc325 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":250:9)
#loc326 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":261:9)
#loc327 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":251:13)
#loc328 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":251:34)
#loc329 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":253:13)
#loc330 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":260:13)
#loc331 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":253:17)
#loc332 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":253:25)
#loc333 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":253:27)
#loc334 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":253:30)
#loc335 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":253:38)
#loc336 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":253:40)
#loc337 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":254:13)
#loc338 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":256:13)
#loc339 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":258:13)
#loc340 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":255:37)
#loc341 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":255:30)
#loc342 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":255:17)
#loc343 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":259:17)
#loc344 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":265:1)
#loc345 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":269:1)
#loc346 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":267:5)
#loc347 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_33.cpp":268:5)
#loc348 = loc(fused[#loc1, #loc2])
#loc349 = loc(fused[#loc3, #loc4])
#loc350 = loc(fused[#loc5, #loc6])
#loc351 = loc(fused[#loc7, #loc8])
#loc352 = loc(fused[#loc9, #loc10])
#loc353 = loc(fused[#loc11, #loc12])
#loc354 = loc(fused[#loc13, #loc14])
#loc355 = loc(fused[#loc15, #loc16])
#loc356 = loc(fused[#loc17, #loc18])
#loc357 = loc(fused[#loc19, #loc20])
#loc358 = loc(fused[#loc22, #loc23])
#loc359 = loc(fused[#loc24, #loc25])
#loc360 = loc(fused[#loc26, #loc27])
#loc361 = loc(fused[#loc30, #loc28])
#loc362 = loc(fused[#loc31, #loc32])
#loc363 = loc(fused[#loc33, #loc34])
#loc364 = loc(fused[#loc35, #loc36])
#loc365 = loc(fused[#loc37, #loc38])
#loc366 = loc(fused[#loc39, #loc40])
#loc367 = loc(fused[#loc41, #loc42])
#loc368 = loc(fused[#loc43, #loc44])
#loc369 = loc(fused[#loc45, #loc46])
#loc370 = loc(fused[#loc51, #loc52])
#loc371 = loc(fused[#loc53, #loc54])
#loc372 = loc(fused[#loc55, #loc56])
#loc373 = loc(fused[#loc57, #loc54])
#loc374 = loc(fused[#loc59, #loc60])
#loc375 = loc(fused[#loc62, #loc63])
#loc376 = loc(fused[#loc64, #loc65])
#loc377 = loc(fused[#loc68, #loc66])
#loc378 = loc(fused[#loc72, #loc69])
#loc379 = loc(fused[#loc76, #loc77])
#loc380 = loc(fused[#loc78, #loc79])
#loc381 = loc(fused[#loc81, #loc82])
#loc382 = loc(fused[#loc83, #loc84])
#loc383 = loc(fused[#loc85, #loc86])
#loc384 = loc(fused[#loc87, #loc79])
#loc385 = loc(fused[#loc89, #loc90])
#loc386 = loc(fused[#loc93, #loc94])
#loc387 = loc(fused[#loc95, #loc90])
#loc388 = loc(fused[#loc101, #loc102])
#loc389 = loc(fused[#loc103, #loc104])
#loc390 = loc(fused[#loc105, #loc106])
#loc391 = loc(fused[#loc107, #loc104])
#loc392 = loc(fused[#loc111, #loc112])
#loc393 = loc(fused[#loc115, #loc116])
#loc394 = loc(fused[#loc117, #loc118])
#loc395 = loc(fused[#loc119, #loc120])
#loc396 = loc(fused[#loc122, #loc123])
#loc397 = loc(fused[#loc124, #loc118])
#loc398 = loc(fused[#loc128, #loc126])
#loc399 = loc(fused[#loc131, #loc132])
#loc400 = loc(fused[#loc134, #loc135])
#loc401 = loc(fused[#loc136, #loc137])
#loc402 = loc(fused[#loc138, #loc135])
#loc403 = loc(fused[#loc141, #loc142])
#loc404 = loc(fused[#loc143, #loc144])
#loc405 = loc(fused[#loc145, #loc142])
#loc406 = loc(fused[#loc148, #loc149])
#loc407 = loc(fused[#loc150, #loc151])
#loc408 = loc(fused[#loc152, #loc153])
#loc409 = loc(fused[#loc154, #loc155])
#loc410 = loc(fused[#loc156, #loc157])
#loc411 = loc(fused[#loc158, #loc159])
#loc412 = loc(fused[#loc160, #loc161, #loc162, #loc157])
#loc413 = loc(fused[#loc167, #loc168])
#loc414 = loc(fused[#loc169, #loc170])
#loc415 = loc(fused[#loc171, #loc172])
#loc416 = loc(fused[#loc175, #loc173])
#loc417 = loc(fused[#loc177, #loc176])
#loc418 = loc(fused[#loc178, #loc179])
#loc419 = loc(fused[#loc180, #loc181])
#loc420 = loc(fused[#loc182, #loc183])
#loc421 = loc(fused[#loc184, #loc185])
#loc422 = loc(fused[#loc186, #loc187])
#loc423 = loc(fused[#loc188, #loc189])
#loc424 = loc(fused[#loc190, #loc191, #loc192, #loc187])
#loc425 = loc(fused[#loc199, #loc200])
#loc426 = loc(fused[#loc201, #loc202])
#loc427 = loc(fused[#loc203, #loc204])
#loc428 = loc(fused[#loc207, #loc205])
#loc429 = loc(fused[#loc208, #loc209])
#loc430 = loc(fused[#loc210, #loc211])
#loc431 = loc(fused[#loc212, #loc213])
#loc432 = loc(fused[#loc214, #loc215])
#loc433 = loc(fused[#loc216, #loc217])
#loc434 = loc(fused[#loc218, #loc219])
#loc435 = loc(fused[#loc220, #loc221])
#loc436 = loc(fused[#loc222, #loc223])
#loc437 = loc(fused[#loc228, #loc229])
#loc438 = loc(fused[#loc230, #loc231])
#loc439 = loc(fused[#loc232, #loc233])
#loc440 = loc(fused[#loc234, #loc231])
#loc441 = loc(fused[#loc236, #loc237])
#loc442 = loc(fused[#loc239, #loc240])
#loc443 = loc(fused[#loc241, #loc242])
#loc444 = loc(fused[#loc244, #loc243])
#loc445 = loc(fused[#loc246, #loc245])
#loc446 = loc(fused[#loc249, #loc250])
#loc447 = loc(fused[#loc251, #loc252])
#loc448 = loc(fused[#loc254, #loc255])
#loc449 = loc(fused[#loc256, #loc257])
#loc450 = loc(fused[#loc258, #loc259])
#loc451 = loc(fused[#loc260, #loc252])
#loc452 = loc(fused[#loc262, #loc263])
#loc453 = loc(fused[#loc266, #loc267])
#loc454 = loc(fused[#loc268, #loc263])
#loc455 = loc(fused[#loc274, #loc275])
#loc456 = loc(fused[#loc276, #loc277])
#loc457 = loc(fused[#loc278, #loc279])
#loc458 = loc(fused[#loc280, #loc277])
#loc459 = loc(fused[#loc284, #loc285])
#loc460 = loc(fused[#loc288, #loc289])
#loc461 = loc(fused[#loc290, #loc291])
#loc462 = loc(fused[#loc292, #loc293])
#loc463 = loc(fused[#loc295, #loc296])
#loc464 = loc(fused[#loc297, #loc291])
#loc465 = loc(fused[#loc301, #loc299])
#loc466 = loc(fused[#loc304, #loc305])
#loc467 = loc(fused[#loc307, #loc308])
#loc468 = loc(fused[#loc309, #loc310])
#loc469 = loc(fused[#loc311, #loc308])
#loc470 = loc(fused[#loc314, #loc315])
#loc471 = loc(fused[#loc316, #loc317])
#loc472 = loc(fused[#loc318, #loc315])
#loc473 = loc(fused[#loc321, #loc322])
#loc474 = loc(fused[#loc323, #loc324])
#loc475 = loc(fused[#loc325, #loc326])
#loc476 = loc(fused[#loc327, #loc328])
#loc477 = loc(fused[#loc329, #loc330])
#loc478 = loc(fused[#loc331, #loc332])
#loc479 = loc(fused[#loc334, #loc336])
#loc480 = loc(fused[#loc337, #loc338, #loc339, #loc330])
#loc481 = loc(fused[#loc344, #loc345])
