!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc8 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":39:64)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":39:71)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":89:68)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":89:75)
#true = #cir.bool<true> : !cir.bool
#loc144 = loc(fused[#loc8, #loc9])
#loc179 = loc(fused[#loc102, #loc103])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc141)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc142)
  cir.func  @CWE78_OS_Command_Injection__char_console_popen_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc146)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
      %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc3)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc3)
      %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc16)
      cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc147)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc22)
        %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc149)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc23)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
          %12 = cir.call @pclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc26)
        } loc(#loc150)
      } loc(#loc148)
    } loc(#loc145)
    cir.return loc(#loc7)
  } loc(#loc143)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc151)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc152)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc153)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc35)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_popen_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc157)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc157)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc157)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc160)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc48)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc48)
      cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc160)
      cir.scope {
        %9 = cir.const #cir.int<100> : !s32i loc(#loc52)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc52)
        %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc53)
        %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc162)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc54)
        %15 = cir.cmp(gt, %12, %14) : !u64i, !s32i loc(#loc163)
        %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc55)
        cir.if %16 {
          cir.scope {
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
            %18 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc60)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc61)
            %20 = cir.const #cir.int<100> : !s32i loc(#loc62)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc62)
            %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc63)
            %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc166)
            %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc166)
            %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc153)
            %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
            %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc65)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc167)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc67)
            cir.if %31 {
              %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc71)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
              %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc71)
              cir.store %34, %5 : !u64i, !cir.ptr<!u64i> loc(#loc169)
              cir.scope {
                %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc77)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc78)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc78)
                %38 = cir.cmp(gt, %35, %37) : !u64i, !s32i loc(#loc171)
                %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc79)
                %40 = cir.ternary(%39, true {
                  %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
                  %42 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc82)
                  %43 = cir.const #cir.int<1> : !s32i loc(#loc83)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc83)
                  %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc172)
                  %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc84)
                  %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc81)
                  %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc81)
                  %49 = cir.const #cir.int<10> : !s32i loc(#loc85)
                  %50 = cir.cmp(eq, %48, %49) : !s32i, !s32i loc(#loc173)
                  %51 = cir.cast(int_to_bool, %50 : !s32i), !cir.bool loc(#loc86)
                  %52 = cir.ternary(%51, true {
                    %53 = cir.const #true loc(#loc80)
                    cir.yield %53 : !cir.bool loc(#loc80)
                  }, false {
                    %53 = cir.const #false loc(#loc80)
                    cir.yield %53 : !cir.bool loc(#loc80)
                  }) : (!cir.bool) -> !cir.bool loc(#loc80)
                  cir.yield %52 : !cir.bool loc(#loc80)
                }, false {
                  %41 = cir.const #false loc(#loc80)
                  cir.yield %41 : !cir.bool loc(#loc80)
                }) : (!cir.bool) -> !cir.bool loc(#loc80)
                cir.if %40 {
                  %41 = cir.const #cir.int<0> : !s32i loc(#loc88)
                  %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc88)
                  %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
                  %44 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc90)
                  %45 = cir.const #cir.int<1> : !s32i loc(#loc91)
                  %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc91)
                  %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc175)
                  %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc92)
                  cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc176)
                } loc(#loc174)
              } loc(#loc170)
            } else {
              %32 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc35)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc35)
              cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc93)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc94)
              %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc94)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
              %37 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc96)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc97)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc177)
            } loc(#loc168)
          } loc(#loc165)
        } loc(#loc164)
      } loc(#loc161)
    } loc(#loc159)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_41_badSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.return loc(#loc37)
  } loc(#loc155)
  cir.func  @CWE78_OS_Command_Injection__char_console_popen_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc102, #loc103])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc179)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc181)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
      %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc110)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc110)
      %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc111)
      cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc117)
        %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc184)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc118)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc120)
          %12 = cir.call @pclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc121)
        } loc(#loc185)
      } loc(#loc183)
    } loc(#loc180)
    cir.return loc(#loc101)
  } loc(#loc178)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_popen_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc124)
    cir.return loc(#loc123)
  } loc(#loc186)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc188)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc128)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc191)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc191)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc191)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc137)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc128)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc128)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc137)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.return loc(#loc130)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":903:1)
#loc2 = loc("/usr/include/stdio.h":904:3)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:28)
#loc4 = loc("/usr/include/stdio.h":897:1)
#loc5 = loc("/usr/include/stdio.h":897:36)
#loc6 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":39:1)
#loc7 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":50:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":40:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":41:5)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":49:5)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":42:9)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":42:15)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:22)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:16)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:9)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:31)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":45:9)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":48:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":45:13)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":45:21)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":45:18)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":46:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":47:20)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":47:13)
#loc27 = loc("/usr/include/string.h":407:1)
#loc28 = loc("/usr/include/string.h":408:33)
#loc29 = loc("/usr/include/stdio.h":654:1)
#loc30 = loc("/usr/include/stdio.h":655:59)
#loc31 = loc("/usr/include/stdio.h":149:1)
#loc32 = loc("/usr/include/stdio.h":149:14)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":76:27)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":52:1)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":83:1)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":54:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":54:12)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":55:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":55:26)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":56:12)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":56:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":57:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":81:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":59:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":59:37)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":59:26)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":59:33)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":61:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":80:9)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":61:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":61:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":61:27)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":61:25)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":62:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":79:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:23)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:28)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:27)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:43)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:47)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:57)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:67)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:64)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":65:13)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":73:13)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":75:13)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":68:27)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":68:34)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":68:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":68:38)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:17)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":72:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:21)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:31)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:29)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:33)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:36)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:41)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:49)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:50)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:55)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:52)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":70:17)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:39)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:21)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:26)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:34)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:35)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":76:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":78:33)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":78:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":78:22)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":78:29)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":82:63)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":82:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":89:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":100:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":90:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":91:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":99:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":92:9)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":92:15)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:22)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:28)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:16)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:9)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:31)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":95:9)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":98:9)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":95:13)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":95:21)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":95:18)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":96:9)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":97:20)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":97:13)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":113:1)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":116:1)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":115:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":115:13)
#loc126 = loc("/usr/include/string.h":149:1)
#loc127 = loc("/usr/include/string.h":150:14)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":109:18)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":103:1)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":111:1)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":105:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":105:12)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":106:5)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":106:26)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":107:12)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":107:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":109:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":109:12)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":110:67)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":110:5)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc4, #loc5])
#loc143 = loc(fused[#loc6, #loc7])
#loc145 = loc(fused[#loc11, #loc12])
#loc146 = loc(fused[#loc13, #loc14])
#loc147 = loc(fused[#loc17, #loc18])
#loc148 = loc(fused[#loc19, #loc20])
#loc149 = loc(fused[#loc21, #loc22])
#loc150 = loc(fused[#loc24, #loc20])
#loc151 = loc(fused[#loc27, #loc28])
#loc152 = loc(fused[#loc29, #loc30])
#loc153 = loc(fused[#loc31, #loc32])
#loc154 = loc(fused[#loc33, #loc34])
#loc155 = loc(fused[#loc36, #loc37])
#loc156 = loc(fused[#loc38, #loc39])
#loc157 = loc(fused[#loc40, #loc41])
#loc158 = loc(fused[#loc43, #loc42])
#loc159 = loc(fused[#loc44, #loc45])
#loc160 = loc(fused[#loc46, #loc47])
#loc161 = loc(fused[#loc50, #loc51])
#loc162 = loc(fused[#loc52, #loc53])
#loc163 = loc(fused[#loc52, #loc54])
#loc164 = loc(fused[#loc56, #loc51])
#loc165 = loc(fused[#loc57, #loc58])
#loc166 = loc(fused[#loc62, #loc63])
#loc167 = loc(fused[#loc65, #loc66])
#loc168 = loc(fused[#loc68, #loc69, #loc70, #loc58])
#loc169 = loc(fused[#loc73, #loc74])
#loc170 = loc(fused[#loc75, #loc76])
#loc171 = loc(fused[#loc77, #loc78])
#loc172 = loc(fused[#loc82, #loc83])
#loc173 = loc(fused[#loc81, #loc85])
#loc174 = loc(fused[#loc87, #loc76])
#loc175 = loc(fused[#loc90, #loc91])
#loc176 = loc(fused[#loc89, #loc88])
#loc177 = loc(fused[#loc95, #loc94])
#loc178 = loc(fused[#loc100, #loc101])
#loc180 = loc(fused[#loc105, #loc106])
#loc181 = loc(fused[#loc107, #loc108])
#loc182 = loc(fused[#loc112, #loc113])
#loc183 = loc(fused[#loc114, #loc115])
#loc184 = loc(fused[#loc116, #loc117])
#loc185 = loc(fused[#loc119, #loc115])
#loc186 = loc(fused[#loc122, #loc123])
#loc187 = loc(fused[#loc124, #loc125])
#loc188 = loc(fused[#loc126, #loc127])
#loc189 = loc(fused[#loc129, #loc130])
#loc190 = loc(fused[#loc131, #loc132])
#loc191 = loc(fused[#loc133, #loc134])
#loc192 = loc(fused[#loc136, #loc135])
