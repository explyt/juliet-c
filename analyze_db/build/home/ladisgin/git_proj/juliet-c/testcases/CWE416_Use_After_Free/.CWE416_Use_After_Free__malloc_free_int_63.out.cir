!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc68 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":108:10)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":108:14)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":108:20)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":108:32)
#loc199 = loc(fused[#loc68, #loc69])
#loc200 = loc(fused[#loc70, #loc71])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc170)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc171)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc172)
  cir.func private @CWE416_Use_After_Free__malloc_free_int_63b_badSink(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc173)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int_63_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc176)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc177)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc178)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc179)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc180)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc24)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc182)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc28)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc183)
    } loc(#loc181)
    cir.scope {
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc185)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc35)
        cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc187)
        cir.for : cond {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc38)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc38)
          %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc188)
          cir.condition(%18) loc(#loc39)
        } body {
          cir.scope {
            %15 = cir.const #cir.int<5> : !s32i loc(#loc41)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
            %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc44)
            cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc190)
          } loc(#loc189)
          cir.yield loc(#loc34)
        } step {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc45)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc46)
          cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc191)
          cir.yield loc(#loc186)
        } loc(#loc186)
      } loc(#loc186)
    } loc(#loc184)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc47)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.call @CWE416_Use_After_Free__malloc_free_int_63b_badSink(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc49)
    cir.return loc(#loc10)
  } loc(#loc174)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int_63_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc192)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc195)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc196)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc200)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc75)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE416_Use_After_Free__malloc_free_int_63_good : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call @CWE416_Use_After_Free__malloc_free_int_63_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE416_Use_After_Free__malloc_free_int_63_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call @CWE416_Use_After_Free__malloc_free_int_63_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.return %17 : !s32i loc(#loc203)
  } loc(#loc198)
  cir.func private @CWE416_Use_After_Free__malloc_free_int_63b_goodG2BSink(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc204)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc92)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc207)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc94)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc95)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc208)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc209)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc210)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc211)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc103)
      %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc213)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc107)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
      } loc(#loc214)
    } loc(#loc212)
    cir.scope {
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc216)
      cir.scope {
        %10 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc114)
        cir.store %11, %9 : !u64i, !cir.ptr<!u64i> loc(#loc218)
        cir.for : cond {
          %12 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc116)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc117)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc117)
          %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc219)
          cir.condition(%15) loc(#loc118)
        } body {
          cir.scope {
            %12 = cir.const #cir.int<5> : !s32i loc(#loc120)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
            %14 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc122)
            %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !u64i), !cir.ptr<!s32i> loc(#loc123)
            cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc221)
          } loc(#loc220)
          cir.yield loc(#loc113)
        } step {
          %12 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc124)
          %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc125)
          cir.store %13, %9 : !u64i, !cir.ptr<!u64i> loc(#loc222)
          cir.yield loc(#loc217)
        } loc(#loc217)
      } loc(#loc217)
    } loc(#loc215)
    cir.call @CWE416_Use_After_Free__malloc_free_int_63b_goodG2BSink(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc126)
    cir.return loc(#loc89)
  } loc(#loc205)
  cir.func private @CWE416_Use_After_Free__malloc_free_int_63b_goodB2GSink(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc223)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc133)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc226)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc135)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc136)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc227)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc228)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc229)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc230)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc143)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc144)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc144)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc232)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc146)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc147)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc148)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc146)
      } loc(#loc233)
    } loc(#loc231)
    cir.scope {
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc235)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc155)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc155)
        cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc237)
        cir.for : cond {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc157)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc158)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc158)
          %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc238)
          cir.condition(%18) loc(#loc159)
        } body {
          cir.scope {
            %15 = cir.const #cir.int<5> : !s32i loc(#loc161)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
            %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc163)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc164)
            cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc240)
          } loc(#loc239)
          cir.yield loc(#loc154)
        } step {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc165)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc166)
          cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc241)
          cir.yield loc(#loc236)
        } loc(#loc236)
      } loc(#loc236)
    } loc(#loc234)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc167)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc168)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc167)
    cir.call @CWE416_Use_After_Free__malloc_free_int_63b_goodB2GSink(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc169)
    cir.return loc(#loc130)
  } loc(#loc224)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int_63a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":25:1)
#loc8 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":25:72)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":27:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":44:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":29:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":29:11)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":31:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":31:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":32:19)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":32:26)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":32:30)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":32:40)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":32:41)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":32:5)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":33:5)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":33:33)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":33:9)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":33:17)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":33:23)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":33:24)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":33:30)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":33:29)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":34:5)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":40:5)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":35:9)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":35:16)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":36:9)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":39:9)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":36:17)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":36:13)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":36:20)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":36:24)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":36:22)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":37:9)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":38:23)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":38:13)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":38:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":38:19)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":36:30)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":36:29)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":42:5)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":42:10)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":43:5)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":93:1)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":97:1)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":95:5)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":95:13)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":96:5)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":96:13)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc61 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":113:15)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":115:15)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":118:15)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":120:15)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":108:1)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":123:1)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":109:1)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":111:27)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":111:22)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":111:5)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":113:5)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":114:5)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":114:52)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":115:5)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":118:5)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":119:5)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":119:51)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":120:5)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":122:12)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":122:5)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":51:1)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":51:73)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":53:1)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":69:1)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":55:5)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":55:11)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":57:12)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":57:5)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":58:19)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":58:26)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":58:30)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":58:40)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":58:41)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":58:5)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":59:5)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":59:33)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":59:9)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":59:17)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":59:23)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":59:24)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":59:30)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":59:29)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":60:5)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":66:5)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":61:9)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":61:16)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":62:9)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":65:9)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":62:17)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":62:13)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":62:20)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":62:24)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":62:22)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":63:9)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":64:23)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":64:13)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":64:18)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":64:19)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":62:30)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":62:29)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":68:5)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":72:1)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":72:73)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":74:1)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":91:1)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":76:5)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":76:11)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":78:12)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":78:5)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":79:19)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":79:26)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":79:30)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":79:40)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":79:41)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":79:5)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":80:5)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":80:33)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":80:9)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":80:17)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":80:23)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":80:24)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":80:30)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":80:29)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":81:5)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":87:5)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":82:9)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":82:16)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":83:9)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":86:9)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":83:17)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":83:13)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":83:20)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":83:24)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":83:22)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":84:9)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":85:23)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":85:13)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":85:18)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":85:19)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":83:30)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":83:29)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":89:5)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":89:10)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_int_63a.c":90:5)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc7, #loc8])
#loc174 = loc(fused[#loc9, #loc10])
#loc175 = loc(fused[#loc11, #loc12])
#loc176 = loc(fused[#loc14, #loc13])
#loc177 = loc(fused[#loc17, #loc18])
#loc178 = loc(fused[#loc16, #loc18])
#loc179 = loc(fused[#loc15, #loc19])
#loc180 = loc(fused[#loc20, #loc19])
#loc181 = loc(fused[#loc21, #loc22])
#loc182 = loc(fused[#loc23, #loc24])
#loc183 = loc(fused[#loc25, #loc22])
#loc184 = loc(fused[#loc29, #loc30])
#loc185 = loc(fused[#loc31, #loc32])
#loc186 = loc(fused[#loc33, #loc34])
#loc187 = loc(fused[#loc36, #loc35])
#loc188 = loc(fused[#loc37, #loc38])
#loc189 = loc(fused[#loc40, #loc34])
#loc190 = loc(fused[#loc42, #loc41])
#loc191 = loc(fused[#loc46, #loc45])
#loc192 = loc(fused[#loc50, #loc51])
#loc193 = loc(fused[#loc52, #loc53])
#loc194 = loc(fused[#loc54, #loc55])
#loc195 = loc(fused[#loc56, #loc57])
#loc196 = loc(fused[#loc58, #loc59])
#loc197 = loc(fused[#loc60, #loc61])
#loc198 = loc(fused[#loc66, #loc67])
#loc201 = loc(fused[#loc77, #loc78])
#loc202 = loc(fused[#loc81, #loc82])
#loc203 = loc(fused[#loc85, #loc84])
#loc204 = loc(fused[#loc86, #loc87])
#loc205 = loc(fused[#loc88, #loc89])
#loc206 = loc(fused[#loc90, #loc91])
#loc207 = loc(fused[#loc93, #loc92])
#loc208 = loc(fused[#loc96, #loc97])
#loc209 = loc(fused[#loc95, #loc97])
#loc210 = loc(fused[#loc94, #loc98])
#loc211 = loc(fused[#loc99, #loc98])
#loc212 = loc(fused[#loc100, #loc101])
#loc213 = loc(fused[#loc102, #loc103])
#loc214 = loc(fused[#loc104, #loc101])
#loc215 = loc(fused[#loc108, #loc109])
#loc216 = loc(fused[#loc110, #loc111])
#loc217 = loc(fused[#loc112, #loc113])
#loc218 = loc(fused[#loc115, #loc114])
#loc219 = loc(fused[#loc116, #loc117])
#loc220 = loc(fused[#loc119, #loc113])
#loc221 = loc(fused[#loc121, #loc120])
#loc222 = loc(fused[#loc125, #loc124])
#loc223 = loc(fused[#loc127, #loc128])
#loc224 = loc(fused[#loc129, #loc130])
#loc225 = loc(fused[#loc131, #loc132])
#loc226 = loc(fused[#loc134, #loc133])
#loc227 = loc(fused[#loc137, #loc138])
#loc228 = loc(fused[#loc136, #loc138])
#loc229 = loc(fused[#loc135, #loc139])
#loc230 = loc(fused[#loc140, #loc139])
#loc231 = loc(fused[#loc141, #loc142])
#loc232 = loc(fused[#loc143, #loc144])
#loc233 = loc(fused[#loc145, #loc142])
#loc234 = loc(fused[#loc149, #loc150])
#loc235 = loc(fused[#loc151, #loc152])
#loc236 = loc(fused[#loc153, #loc154])
#loc237 = loc(fused[#loc156, #loc155])
#loc238 = loc(fused[#loc157, #loc158])
#loc239 = loc(fused[#loc160, #loc154])
#loc240 = loc(fused[#loc162, #loc161])
#loc241 = loc(fused[#loc166, #loc165])
