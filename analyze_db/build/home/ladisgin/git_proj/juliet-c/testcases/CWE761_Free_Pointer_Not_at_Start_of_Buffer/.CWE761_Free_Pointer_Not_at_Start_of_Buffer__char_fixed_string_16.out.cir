!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":98:10)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":98:14)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":98:20)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":98:32)
#loc179 = loc(fused[#loc74, #loc75])
#loc180 = loc(fused[#loc76, #loc77])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc152)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Fixed String\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc10)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc155)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc18)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc158)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc159)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc163)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc30)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc164)
    } loc(#loc162)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc31)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc35)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc7)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc7)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc35)
    cir.scope {
      cir.while {
        %18 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc39)
        cir.condition(%19) loc(#loc39)
      } do {
        cir.scope {
          cir.for : cond {
            %21 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc43)
            %23 = cir.cast(integral, %22 : !s8i), !s32i loc(#loc43)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc44)
            %25 = cir.cmp(ne, %23, %24) : !s32i, !cir.bool loc(#loc168)
            cir.condition(%25) loc(#loc45)
          } body {
            cir.scope {
              cir.scope {
                %21 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc50)
                %23 = cir.cast(integral, %22 : !s8i), !s32i loc(#loc50)
                %24 = cir.const #cir.int<83> : !s32i loc(#loc51)
                %25 = cir.cmp(eq, %23, %24) : !s32i, !cir.bool loc(#loc171)
                cir.if %25 {
                  %26 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc10)
                  %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc10)
                  cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc53)
                  cir.break loc(#loc54)
                } loc(#loc172)
              } loc(#loc170)
            } loc(#loc169)
            cir.yield loc(#loc41)
          } step {
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc173)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc173)
            cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
            cir.yield loc(#loc167)
          } loc(#loc167)
        } loc(#loc167)
        %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc57)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
        cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
        cir.break loc(#loc59)
      } loc(#loc166)
    } loc(#loc166)
    cir.return loc(#loc14)
  } loc(#loc156)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc174)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.return %17 : !s32i loc(#loc183)
  } loc(#loc178)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc184)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc99)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc187)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc188)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc192)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc109)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc111)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
      } loc(#loc193)
    } loc(#loc191)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc112)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc194)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc116)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc118)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc118)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc116)
    cir.scope {
      cir.while {
        %18 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc121)
        cir.condition(%19) loc(#loc121)
      } do {
        cir.scope {
          %18 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc197)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc128)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc128)
            cir.store %23, %18 : !u64i, !cir.ptr<!u64i> loc(#loc199)
            cir.for : cond {
              %24 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc130)
              %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc131)
              %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
              %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
              %28 = cir.cmp(lt, %24, %27) : !u64i, !cir.bool loc(#loc200)
              cir.condition(%28) loc(#loc134)
            } body {
              cir.scope {
                cir.scope {
                  %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                  %25 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc139)
                  %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc140)
                  %27 = cir.load %26 : !cir.ptr<!s8i>, !s8i loc(#loc138)
                  %28 = cir.cast(integral, %27 : !s8i), !s32i loc(#loc138)
                  %29 = cir.const #cir.int<83> : !s32i loc(#loc141)
                  %30 = cir.cmp(eq, %28, %29) : !s32i, !cir.bool loc(#loc203)
                  cir.if %30 {
                    %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc143)
                    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc143)
                    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc144)
                    cir.break loc(#loc145)
                  } loc(#loc204)
                } loc(#loc202)
              } loc(#loc201)
              cir.yield loc(#loc127)
            } step {
              %24 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc146)
              %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc147)
              cir.store %25, %18 : !u64i, !cir.ptr<!u64i> loc(#loc205)
              cir.yield loc(#loc198)
            } loc(#loc198)
          } loc(#loc198)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc148)
          %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc149)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc148)
        } loc(#loc196)
        cir.break loc(#loc150)
      } loc(#loc195)
    } loc(#loc195)
    cir.return loc(#loc95)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":34:18)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":43:27)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":27:1)
#loc14 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":50:1)
#loc15 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":29:5)
#loc16 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":29:12)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":30:20)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":30:27)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":30:31)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":30:42)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":30:43)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":30:5)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":31:5)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":31:33)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":31:9)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":31:17)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":31:23)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":31:24)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":31:30)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":31:29)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":32:15)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":32:5)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":32:10)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":32:11)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":34:5)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":34:12)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":35:5)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":49:5)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":35:11)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":39:9)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":46:9)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":39:17)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":39:16)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":39:25)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":39:22)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":40:9)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":41:13)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":45:13)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":41:18)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":41:17)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":41:26)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":42:13)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":43:17)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":44:17)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":39:35)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":39:31)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":47:9)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":47:14)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":48:9)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":84:1)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":87:1)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":86:5)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":86:13)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":103:15)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":105:15)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":108:15)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":110:15)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":98:1)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":113:1)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":99:1)
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":101:27)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":101:22)
#loc81 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":101:5)
#loc82 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":103:5)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":104:5)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":104:75)
#loc85 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":105:5)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":108:5)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":109:5)
#loc88 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":109:74)
#loc89 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":110:5)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":112:12)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":112:5)
#loc92 = loc("/usr/include/string.h":407:1)
#loc93 = loc("/usr/include/string.h":408:33)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":57:1)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":82:1)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":59:5)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":59:12)
#loc98 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":60:20)
#loc99 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":60:27)
#loc100 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":60:31)
#loc101 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":60:42)
#loc102 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":60:43)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":60:5)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":61:5)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":61:33)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":61:9)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":61:17)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":61:23)
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":61:24)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":61:30)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":61:29)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":62:15)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":62:5)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":62:10)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":62:11)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":64:5)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":64:12)
#loc118 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":64:18)
#loc119 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":65:5)
#loc120 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":81:5)
#loc121 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":65:11)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":67:9)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":79:9)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":68:13)
#loc125 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":68:20)
#loc126 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:13)
#loc127 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":77:13)
#loc128 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:20)
#loc129 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:18)
#loc130 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:23)
#loc131 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:27)
#loc132 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:34)
#loc133 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:38)
#loc134 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:25)
#loc135 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":71:13)
#loc136 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":72:17)
#loc137 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":76:17)
#loc138 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":72:21)
#loc139 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":72:26)
#loc140 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":72:27)
#loc141 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":72:32)
#loc142 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":73:17)
#loc143 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":74:31)
#loc144 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":74:21)
#loc145 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":75:21)
#loc146 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:42)
#loc147 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":70:41)
#loc148 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":78:13)
#loc149 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":78:18)
#loc150 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_16.c":80:9)
#loc151 = loc(fused[#loc1, #loc2])
#loc152 = loc(fused[#loc3, #loc4])
#loc153 = loc(fused[#loc5, #loc6])
#loc154 = loc(fused[#loc8, #loc9])
#loc155 = loc(fused[#loc11, #loc12])
#loc156 = loc(fused[#loc13, #loc14])
#loc157 = loc(fused[#loc15, #loc16])
#loc158 = loc(fused[#loc19, #loc20])
#loc159 = loc(fused[#loc18, #loc20])
#loc160 = loc(fused[#loc17, #loc21])
#loc161 = loc(fused[#loc22, #loc21])
#loc162 = loc(fused[#loc23, #loc24])
#loc163 = loc(fused[#loc25, #loc26])
#loc164 = loc(fused[#loc27, #loc24])
#loc165 = loc(fused[#loc32, #loc31])
#loc166 = loc(fused[#loc37, #loc38])
#loc167 = loc(fused[#loc40, #loc41])
#loc168 = loc(fused[#loc43, #loc44])
#loc169 = loc(fused[#loc46, #loc41])
#loc170 = loc(fused[#loc47, #loc48])
#loc171 = loc(fused[#loc50, #loc51])
#loc172 = loc(fused[#loc52, #loc48])
#loc173 = loc(fused[#loc56, #loc55])
#loc174 = loc(fused[#loc60, #loc61])
#loc175 = loc(fused[#loc62, #loc63])
#loc176 = loc(fused[#loc64, #loc65])
#loc177 = loc(fused[#loc66, #loc67])
#loc178 = loc(fused[#loc72, #loc73])
#loc181 = loc(fused[#loc83, #loc84])
#loc182 = loc(fused[#loc87, #loc88])
#loc183 = loc(fused[#loc91, #loc90])
#loc184 = loc(fused[#loc92, #loc93])
#loc185 = loc(fused[#loc94, #loc95])
#loc186 = loc(fused[#loc96, #loc97])
#loc187 = loc(fused[#loc100, #loc101])
#loc188 = loc(fused[#loc99, #loc101])
#loc189 = loc(fused[#loc98, #loc102])
#loc190 = loc(fused[#loc103, #loc102])
#loc191 = loc(fused[#loc104, #loc105])
#loc192 = loc(fused[#loc106, #loc107])
#loc193 = loc(fused[#loc108, #loc105])
#loc194 = loc(fused[#loc113, #loc112])
#loc195 = loc(fused[#loc119, #loc120])
#loc196 = loc(fused[#loc122, #loc123])
#loc197 = loc(fused[#loc124, #loc125])
#loc198 = loc(fused[#loc126, #loc127])
#loc199 = loc(fused[#loc129, #loc128])
#loc200 = loc(fused[#loc130, #loc133])
#loc201 = loc(fused[#loc135, #loc127])
#loc202 = loc(fused[#loc136, #loc137])
#loc203 = loc(fused[#loc138, #loc141])
#loc204 = loc(fused[#loc142, #loc137])
#loc205 = loc(fused[#loc147, #loc146])
