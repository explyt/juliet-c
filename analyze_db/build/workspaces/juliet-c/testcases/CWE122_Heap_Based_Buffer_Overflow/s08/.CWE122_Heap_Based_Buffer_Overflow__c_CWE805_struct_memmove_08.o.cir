!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc217)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc218)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc219)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc220)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc222)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc225)
    cir.br ^bb1 loc(#loc226)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc227)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc228)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc24)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc25)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc25)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc229)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc230)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc231)
    cir.store %13, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc232)
    cir.br ^bb3 loc(#loc233)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc234)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc235)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc35)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc37)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc20)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc236)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc237)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc238)
  ^bb11:  // pred: ^bb10
    %21 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc44)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    cir.br ^bb12 loc(#loc238)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc47)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc240)
    cir.brcond %26 ^bb13, ^bb17 loc(#loc48)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc241)
  ^bb14:  // pred: ^bb13
    %27 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc57)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.br ^bb15 loc(#loc43)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc43)
  ^bb16:  // pred: ^bb15
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc59)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.br ^bb12 loc(#loc238)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc43)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc41)
  ^bb19:  // pred: ^bb18
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc60)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc61)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc62)
    %45 = cir.const #cir.int<8> : !u64i loc(#loc245)
    %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc246)
    cir.libc.memmove %46 bytes from %42 to %40 : !cir.ptr<!void>, !u64i loc(#loc247)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!ty__twoIntsStruct>, %48 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.call @printStructLine(%49) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc70)
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc71)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    cir.br ^bb20 loc(#loc39)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc10)
  } loc(#loc221)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc249)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc75)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc250)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc77)
    cir.return loc(#loc74)
  } loc(#loc248)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc80)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc81)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    cir.return %2 : !s32i loc(#loc252)
  } loc(#loc251)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc85)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc255)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc256)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc257)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc258)
    cir.br ^bb1 loc(#loc259)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc260)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc98)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc98)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc261)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc85)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.br ^bb8 loc(#loc101)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc104)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc105)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc262)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc263)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc264)
    cir.store %15, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc265)
    cir.br ^bb4 loc(#loc266)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc267)
    cir.brcond %19 ^bb5, ^bb6 loc(#loc268)
  ^bb5:  // pred: ^bb4
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc115)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc117)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb6 loc(#loc111)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc111)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc97)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc269)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc270)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc271)
  ^bb12:  // pred: ^bb11
    %23 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc124)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc272)
    cir.br ^bb13 loc(#loc271)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc127)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc273)
    cir.brcond %28 ^bb14, ^bb18 loc(#loc128)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc274)
  ^bb15:  // pred: ^bb14
    %29 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %33 = cir.get_member %32[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
    cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %35 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %38 = cir.get_member %37[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc57)
    cir.store %34, %38 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb16 loc(#loc123)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc123)
  ^bb17:  // pred: ^bb16
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc137)
    cir.store %40, %1 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    cir.br ^bb13 loc(#loc271)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc123)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc121)
  ^bb20:  // pred: ^bb19
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc138)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc139)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc140)
    %47 = cir.const #cir.int<8> : !u64i loc(#loc278)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc279)
    cir.libc.memmove %48 bytes from %44 to %42 : !cir.ptr<!void>, !u64i loc(#loc280)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    cir.call @printStructLine(%51) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc148)
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc149)
    cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc150)
    cir.br ^bb21 loc(#loc119)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc87)
  } loc(#loc254)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc153)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    cir.return %2 : !s32i loc(#loc282)
  } loc(#loc281)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc284)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc285)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc286)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc163)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc287)
    cir.br ^bb1 loc(#loc288)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc289)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc167)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc167)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc290)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc170)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc171)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc171)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc291)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc292)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc170)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc293)
    cir.store %13, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc294)
    cir.br ^bb3 loc(#loc295)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc178)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc179)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc296)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc297)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc181)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc183)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc181)
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc177)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc166)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc166)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc298)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc299)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc300)
  ^bb11:  // pred: ^bb10
    %21 = cir.const #cir.int<0> : !s32i loc(#loc190)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc190)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc301)
    cir.br ^bb12 loc(#loc300)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc192)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc193)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc193)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc302)
    cir.brcond %26 ^bb13, ^bb17 loc(#loc194)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc303)
  ^bb14:  // pred: ^bb13
    %27 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc197)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc199)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc200)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc57)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb15 loc(#loc189)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc189)
  ^bb16:  // pred: ^bb15
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc202)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc203)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc306)
    cir.br ^bb12 loc(#loc300)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc189)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc187)
  ^bb19:  // pred: ^bb18
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc204)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc204)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc205)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc205)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc206)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc206)
    %45 = cir.const #cir.int<8> : !u64i loc(#loc307)
    %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc308)
    cir.libc.memmove %46 bytes from %42 to %40 : !cir.ptr<!void>, !u64i loc(#loc309)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc211)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc212)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!ty__twoIntsStruct>, %48 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc213)
    cir.call @printStructLine(%49) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc214)
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc215)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc215)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc216)
    cir.br ^bb20 loc(#loc185)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc156)
  } loc(#loc283)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":35:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":61:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":46:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":46:33)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":48:13)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":48:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":37:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":37:21)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":38:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":38:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":39:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":44:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":39:8)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":39:26)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":40:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":42:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":42:40)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":42:43)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":42:63)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":42:64)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":42:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":43:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":43:37)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":43:13)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":43:21)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":43:27)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":43:28)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":43:34)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":43:33)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":45:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":60:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":47:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":55:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":50:13)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":54:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":50:22)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":50:18)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":50:25)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":50:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":50:27)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":51:13)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":52:36)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":52:24)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":52:17)
#loc53 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":53:36)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":53:24)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":53:17)
#loc57 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":50:35)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":50:34)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":57:17)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":57:23)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":57:31)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":57:35)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":57:55)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":57:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":57:56)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":58:26)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":58:31)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":58:32)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":58:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":59:14)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":59:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":130:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":134:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":132:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":132:14)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":133:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":133:14)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":23:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":26:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":25:12)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":25:5)
#loc83 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc84 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":75:19)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":68:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":99:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":84:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":84:33)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":86:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":86:20)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":70:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":70:21)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":71:12)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":71:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":72:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":82:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":72:8)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":72:27)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":73:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":76:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":78:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":75:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":80:33)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":80:40)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":80:44)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":80:64)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":80:65)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":80:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":81:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":81:37)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":81:13)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":81:21)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":81:27)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":81:28)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":81:34)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":81:33)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":83:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":98:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":85:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":93:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":88:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":92:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":88:22)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":88:18)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":88:25)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":88:29)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":88:27)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":89:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":90:36)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":90:24)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":90:17)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":91:36)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":91:24)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":91:17)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":88:35)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":88:34)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":95:17)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":95:23)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":95:31)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":95:35)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":95:55)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":95:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":95:56)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":96:26)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":96:31)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":96:32)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":96:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":97:14)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":97:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":28:1)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":31:1)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":30:12)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":30:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":102:1)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":128:1)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":113:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":113:33)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":115:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":115:20)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":104:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":104:21)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":105:12)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":105:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":106:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":111:5)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":106:8)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":106:26)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":107:5)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":109:33)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":109:40)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":109:44)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":109:64)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":109:65)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":109:9)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":110:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":110:37)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":110:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":110:21)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":110:27)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":110:28)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":110:34)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":110:33)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":112:5)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":127:5)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":114:9)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":122:9)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":117:13)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":121:13)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":117:22)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":117:18)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":117:25)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":117:29)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":117:27)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":118:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":119:36)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":119:24)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":119:17)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":120:36)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":120:24)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":120:17)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":117:35)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":117:34)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":124:17)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":124:23)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":124:31)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":124:35)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":124:55)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":124:9)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":124:56)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":125:26)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":125:31)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":125:32)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":125:9)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":126:14)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_08.c":126:9)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc7, #loc8])
#loc221 = loc(fused[#loc9, #loc10])
#loc222 = loc(fused[#loc11, #loc12])
#loc223 = loc(fused[#loc13, #loc14])
#loc224 = loc(fused[#loc15, #loc16])
#loc225 = loc(fused[#loc18, #loc17])
#loc226 = loc(fused[#loc19, #loc20])
#loc227 = loc(fused[#loc21, #loc22])
#loc228 = loc(fused[#loc23, #loc20])
#loc229 = loc(fused[#loc26, #loc27])
#loc230 = loc(fused[#loc25, #loc27])
#loc231 = loc(fused[#loc24, #loc28])
#loc232 = loc(fused[#loc29, #loc28])
#loc233 = loc(fused[#loc30, #loc31])
#loc234 = loc(fused[#loc32, #loc33])
#loc235 = loc(fused[#loc34, #loc31])
#loc236 = loc(fused[#loc38, #loc39])
#loc237 = loc(fused[#loc40, #loc41])
#loc238 = loc(fused[#loc42, #loc43])
#loc239 = loc(fused[#loc45, #loc44])
#loc240 = loc(fused[#loc46, #loc47])
#loc241 = loc(fused[#loc49, #loc43])
#loc242 = loc(fused[#loc52, #loc50])
#loc243 = loc(fused[#loc56, #loc54])
#loc244 = loc(fused[#loc59, #loc58])
#loc245 = loc(fused[#loc63, #loc64])
#loc246 = loc(fused[#loc62, #loc64])
#loc247 = loc(fused[#loc65, #loc66])
#loc248 = loc(fused[#loc73, #loc74])
#loc249 = loc(fused[#loc75, #loc76])
#loc250 = loc(fused[#loc77, #loc78])
#loc251 = loc(fused[#loc79, #loc80])
#loc252 = loc(fused[#loc82, #loc81])
#loc253 = loc(fused[#loc83, #loc84])
#loc254 = loc(fused[#loc86, #loc87])
#loc255 = loc(fused[#loc88, #loc89])
#loc256 = loc(fused[#loc90, #loc91])
#loc257 = loc(fused[#loc92, #loc93])
#loc258 = loc(fused[#loc95, #loc94])
#loc259 = loc(fused[#loc96, #loc97])
#loc260 = loc(fused[#loc98, #loc99])
#loc261 = loc(fused[#loc100, #loc101, #loc102, #loc97])
#loc262 = loc(fused[#loc106, #loc107])
#loc263 = loc(fused[#loc105, #loc107])
#loc264 = loc(fused[#loc104, #loc108])
#loc265 = loc(fused[#loc109, #loc108])
#loc266 = loc(fused[#loc110, #loc111])
#loc267 = loc(fused[#loc112, #loc113])
#loc268 = loc(fused[#loc114, #loc111])
#loc269 = loc(fused[#loc118, #loc119])
#loc270 = loc(fused[#loc120, #loc121])
#loc271 = loc(fused[#loc122, #loc123])
#loc272 = loc(fused[#loc125, #loc124])
#loc273 = loc(fused[#loc126, #loc127])
#loc274 = loc(fused[#loc129, #loc123])
#loc275 = loc(fused[#loc132, #loc130])
#loc276 = loc(fused[#loc135, #loc133])
#loc277 = loc(fused[#loc137, #loc136])
#loc278 = loc(fused[#loc141, #loc142])
#loc279 = loc(fused[#loc140, #loc142])
#loc280 = loc(fused[#loc143, #loc144])
#loc281 = loc(fused[#loc151, #loc152])
#loc282 = loc(fused[#loc154, #loc153])
#loc283 = loc(fused[#loc155, #loc156])
#loc284 = loc(fused[#loc157, #loc158])
#loc285 = loc(fused[#loc159, #loc160])
#loc286 = loc(fused[#loc161, #loc162])
#loc287 = loc(fused[#loc164, #loc163])
#loc288 = loc(fused[#loc165, #loc166])
#loc289 = loc(fused[#loc167, #loc168])
#loc290 = loc(fused[#loc169, #loc166])
#loc291 = loc(fused[#loc172, #loc173])
#loc292 = loc(fused[#loc171, #loc173])
#loc293 = loc(fused[#loc170, #loc174])
#loc294 = loc(fused[#loc175, #loc174])
#loc295 = loc(fused[#loc176, #loc177])
#loc296 = loc(fused[#loc178, #loc179])
#loc297 = loc(fused[#loc180, #loc177])
#loc298 = loc(fused[#loc184, #loc185])
#loc299 = loc(fused[#loc186, #loc187])
#loc300 = loc(fused[#loc188, #loc189])
#loc301 = loc(fused[#loc191, #loc190])
#loc302 = loc(fused[#loc192, #loc193])
#loc303 = loc(fused[#loc195, #loc189])
#loc304 = loc(fused[#loc198, #loc196])
#loc305 = loc(fused[#loc201, #loc199])
#loc306 = loc(fused[#loc203, #loc202])
#loc307 = loc(fused[#loc207, #loc208])
#loc308 = loc(fused[#loc206, #loc208])
#loc309 = loc(fused[#loc209, #loc210])
