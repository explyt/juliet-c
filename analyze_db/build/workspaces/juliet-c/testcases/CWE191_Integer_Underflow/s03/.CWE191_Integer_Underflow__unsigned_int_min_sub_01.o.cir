!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_min_sub_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printUnsignedLine(!u32i) loc(#loc64)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_sub_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc66)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc67)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc9)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc68)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc11)
    cir.store %5, %1 : !u32i, !cir.ptr<!u32i> loc(#loc69)
    cir.br ^bb1 loc(#loc70)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc6)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc6)
    %9 = cir.binop(sub, %6, %8) : !u32i loc(#loc71)
    cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc66)
    %10 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc16)
    cir.call @printUnsignedLine(%10) : (!u32i) -> () loc(#loc17)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc65)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_sub_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc73)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc74)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc72)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc76)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc77)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc30)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc78)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc33)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc33)
    cir.store %6, %1 : !u32i, !cir.ptr<!u32i> loc(#loc79)
    cir.br ^bb1 loc(#loc80)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc37)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc27)
    %10 = cir.binop(sub, %7, %9) : !u32i loc(#loc81)
    cir.store %10, %0 : !u32i, !cir.ptr<!u32i> loc(#loc76)
    %11 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc38)
    cir.call @printUnsignedLine(%11) : (!u32i) -> () loc(#loc39)
    cir.br ^bb2 loc(#loc36)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc25)
  } loc(#loc75)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc42)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc84)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc85)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc49)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc86)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc51)
    cir.store %5, %1 : !u32i, !cir.ptr<!u32i> loc(#loc87)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc55)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc56)
    %9 = cir.cmp(gt, %6, %8) : !u32i, !cir.bool loc(#loc89)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc90)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc60)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc46)
    %13 = cir.binop(sub, %10, %12) : !u32i loc(#loc91)
    cir.store %13, %0 : !u32i, !cir.ptr<!u32i> loc(#loc84)
    %14 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc61)
    cir.call @printUnsignedLine(%14) : (!u32i) -> () loc(#loc62)
    cir.br ^bb4 loc(#loc58)
  ^bb3:  // pred: ^bb1
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc42)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc54)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc44)
  } loc(#loc83)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc3 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":22:1)
#loc4 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":33:1)
#loc5 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":30:9)
#loc6 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":30:38)
#loc7 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":24:5)
#loc8 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":24:18)
#loc9 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":25:12)
#loc10 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":25:5)
#loc11 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":27:12)
#loc12 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":27:5)
#loc13 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":28:5)
#loc14 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":32:5)
#loc15 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":30:31)
#loc16 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":31:27)
#loc17 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":31:9)
#loc18 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":72:1)
#loc19 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":76:1)
#loc20 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":74:5)
#loc21 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":74:13)
#loc22 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":75:5)
#loc23 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":75:13)
#loc24 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":40:1)
#loc25 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":51:1)
#loc26 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":48:9)
#loc27 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":48:38)
#loc28 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":42:5)
#loc29 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":42:18)
#loc30 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":43:12)
#loc31 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":43:5)
#loc32 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":45:13)
#loc33 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":45:12)
#loc34 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":45:5)
#loc35 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":46:5)
#loc36 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":50:5)
#loc37 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":48:31)
#loc38 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":49:27)
#loc39 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":49:9)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":68:19)
#loc43 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":54:1)
#loc44 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":70:1)
#loc45 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":63:9)
#loc46 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":63:38)
#loc47 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":56:5)
#loc48 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":56:18)
#loc49 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":57:12)
#loc50 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":57:5)
#loc51 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":59:12)
#loc52 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":59:5)
#loc53 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":61:5)
#loc54 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":69:5)
#loc55 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":61:9)
#loc56 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":61:16)
#loc57 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":62:5)
#loc58 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":65:5)
#loc59 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":67:5)
#loc60 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":63:31)
#loc61 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":64:27)
#loc62 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":64:9)
#loc63 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_01.c":68:9)
#loc64 = loc(fused[#loc1, #loc2])
#loc65 = loc(fused[#loc3, #loc4])
#loc66 = loc(fused[#loc5, #loc6])
#loc67 = loc(fused[#loc7, #loc8])
#loc68 = loc(fused[#loc10, #loc9])
#loc69 = loc(fused[#loc12, #loc11])
#loc70 = loc(fused[#loc13, #loc14])
#loc71 = loc(fused[#loc15, #loc6])
#loc72 = loc(fused[#loc18, #loc19])
#loc73 = loc(fused[#loc20, #loc21])
#loc74 = loc(fused[#loc22, #loc23])
#loc75 = loc(fused[#loc24, #loc25])
#loc76 = loc(fused[#loc26, #loc27])
#loc77 = loc(fused[#loc28, #loc29])
#loc78 = loc(fused[#loc31, #loc30])
#loc79 = loc(fused[#loc34, #loc32])
#loc80 = loc(fused[#loc35, #loc36])
#loc81 = loc(fused[#loc37, #loc27])
#loc82 = loc(fused[#loc40, #loc41])
#loc83 = loc(fused[#loc43, #loc44])
#loc84 = loc(fused[#loc45, #loc46])
#loc85 = loc(fused[#loc47, #loc48])
#loc86 = loc(fused[#loc50, #loc49])
#loc87 = loc(fused[#loc52, #loc51])
#loc88 = loc(fused[#loc53, #loc54])
#loc89 = loc(fused[#loc55, #loc56])
#loc90 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc91 = loc(fused[#loc60, #loc46])
