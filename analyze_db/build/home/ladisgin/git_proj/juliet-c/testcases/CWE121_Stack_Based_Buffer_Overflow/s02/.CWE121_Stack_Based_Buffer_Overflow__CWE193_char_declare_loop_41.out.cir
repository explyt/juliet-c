!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":28:78)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":28:85)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":60:82)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":60:89)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":104:10)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":104:14)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":104:20)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":104:32)
#loc144 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc60, #loc61])
#loc180 = loc(fused[#loc105, #loc106])
#loc181 = loc(fused[#loc107, #loc108])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc139)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc140)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc140)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc146)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc147)
      %4 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc140)
      cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc140)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc19)
      %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc20)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc19)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc148)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
        cir.store %10, %2 : !u64i, !cir.ptr<!u64i> loc(#loc150)
        cir.for : cond {
          %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc27)
          %12 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc28)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc29)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc29)
          %15 = cir.binop(add, %12, %14) : !u64i loc(#loc151)
          %16 = cir.cmp(lt, %11, %15) : !u64i, !cir.bool loc(#loc152)
          cir.condition(%16) loc(#loc30)
        } body {
          cir.scope {
            %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc33)
            %13 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %11 : !u64i), !cir.ptr<!s8i> loc(#loc33)
            %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc33)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
            %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc36)
            cir.store %14, %17 : !s8i, !cir.ptr<!s8i> loc(#loc154)
          } loc(#loc153)
          cir.yield loc(#loc24)
        } step {
          %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %12 = cir.unary(inc, %11) : !u64i, !u64i loc(#loc39)
          cir.store %12, %2 : !u64i, !cir.ptr<!u64i> loc(#loc155)
          cir.yield loc(#loc149)
        } loc(#loc149)
      } loc(#loc149)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    } loc(#loc145)
    cir.return loc(#loc10)
  } loc(#loc143)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc158)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc159)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc50)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc52)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc55)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_badSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.return loc(#loc43)
  } loc(#loc156)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc60, #loc61])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc163)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc139)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc165)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc166)
      %4 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc139)
      cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc139)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc68)
      %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc69)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc68)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc167)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc74)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc74)
        cir.store %10, %2 : !u64i, !cir.ptr<!u64i> loc(#loc169)
        cir.for : cond {
          %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc76)
          %12 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc77)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc78)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc78)
          %15 = cir.binop(add, %12, %14) : !u64i loc(#loc170)
          %16 = cir.cmp(lt, %11, %15) : !u64i, !cir.bool loc(#loc171)
          cir.condition(%16) loc(#loc79)
        } body {
          cir.scope {
            %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc81)
            %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc82)
            %13 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %11 : !u64i), !cir.ptr<!s8i> loc(#loc82)
            %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc82)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
            %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc84)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc85)
            cir.store %14, %17 : !s8i, !cir.ptr<!s8i> loc(#loc173)
          } loc(#loc172)
          cir.yield loc(#loc73)
        } step {
          %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc87)
          %12 = cir.unary(inc, %11) : !u64i, !u64i loc(#loc88)
          cir.store %12, %2 : !u64i, !cir.ptr<!u64i> loc(#loc174)
          cir.yield loc(#loc168)
        } loc(#loc168)
      } loc(#loc168)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    } loc(#loc164)
    cir.return loc(#loc59)
  } loc(#loc162)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc177)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc102)
  cir.func @main(%arg0: !s32i loc(fused[#loc105, #loc106]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc107, #loc108])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc104)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc109)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc110)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc111)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc111)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc112)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc99)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_good() : () -> () loc(#loc114)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc101)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_bad() : () -> () loc(#loc118)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc102)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.return %17 : !s32i loc(#loc184)
  } loc(#loc179)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc187)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc188)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc131)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc133)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc190)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.return loc(#loc124)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":63:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":63:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":31:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":31:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":42:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":29:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":41:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":32:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":32:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":32:19)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":33:21)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":33:28)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":33:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":33:34)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":36:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":39:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":36:18)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":36:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":36:21)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":36:25)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":36:37)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":36:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":37:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":38:30)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":38:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":38:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":38:18)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":38:19)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":38:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":36:41)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":36:40)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":40:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":40:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":44:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":54:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":46:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":46:12)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":47:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":47:26)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":48:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":48:29)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":51:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":51:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":52:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":52:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":52:10)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":52:11)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":53:77)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":53:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":60:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":74:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":61:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":62:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":73:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":64:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":64:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":64:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":65:21)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":65:28)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":65:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":65:34)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":68:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":71:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":68:18)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":68:14)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":68:21)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":68:25)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":68:37)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":68:23)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":69:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":70:30)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":70:23)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":70:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":70:18)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":70:19)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":70:31)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":68:41)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":68:40)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":72:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":72:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":89:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":92:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":91:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":91:13)
#loc95 = loc("/usr/include/stdlib.h":575:1)
#loc96 = loc("/usr/include/stdlib.h":575:41)
#loc97 = loc("/usr/include/time.h":76:1)
#loc98 = loc("/usr/include/time.h":76:38)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":109:15)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":111:15)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":114:15)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":116:15)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":104:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":119:1)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":105:1)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":107:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":107:22)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":107:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":109:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":110:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":110:74)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":111:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":114:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":115:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":115:73)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":116:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":118:12)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":118:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":77:1)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":87:1)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":79:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":79:12)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":80:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":80:26)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":81:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":81:29)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":84:12)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":84:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":85:15)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":85:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":85:10)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":85:11)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":86:81)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_41.c":86:5)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc145 = loc(fused[#loc14, #loc15])
#loc146 = loc(fused[#loc16, #loc17])
#loc147 = loc(fused[#loc16, #loc18])
#loc148 = loc(fused[#loc21, #loc22])
#loc149 = loc(fused[#loc23, #loc24])
#loc150 = loc(fused[#loc26, #loc25])
#loc151 = loc(fused[#loc28, #loc29])
#loc152 = loc(fused[#loc27, #loc29])
#loc153 = loc(fused[#loc31, #loc24])
#loc154 = loc(fused[#loc34, #loc37])
#loc155 = loc(fused[#loc39, #loc38])
#loc156 = loc(fused[#loc42, #loc43])
#loc157 = loc(fused[#loc44, #loc45])
#loc158 = loc(fused[#loc46, #loc47])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc51, #loc50])
#loc161 = loc(fused[#loc53, #loc52])
#loc162 = loc(fused[#loc58, #loc59])
#loc164 = loc(fused[#loc63, #loc64])
#loc165 = loc(fused[#loc65, #loc66])
#loc166 = loc(fused[#loc65, #loc67])
#loc167 = loc(fused[#loc70, #loc71])
#loc168 = loc(fused[#loc72, #loc73])
#loc169 = loc(fused[#loc75, #loc74])
#loc170 = loc(fused[#loc77, #loc78])
#loc171 = loc(fused[#loc76, #loc78])
#loc172 = loc(fused[#loc80, #loc73])
#loc173 = loc(fused[#loc83, #loc86])
#loc174 = loc(fused[#loc88, #loc87])
#loc175 = loc(fused[#loc91, #loc92])
#loc176 = loc(fused[#loc93, #loc94])
#loc177 = loc(fused[#loc95, #loc96])
#loc178 = loc(fused[#loc97, #loc98])
#loc179 = loc(fused[#loc103, #loc104])
#loc182 = loc(fused[#loc114, #loc115])
#loc183 = loc(fused[#loc118, #loc119])
#loc184 = loc(fused[#loc122, #loc121])
#loc185 = loc(fused[#loc123, #loc124])
#loc186 = loc(fused[#loc125, #loc126])
#loc187 = loc(fused[#loc127, #loc128])
#loc188 = loc(fused[#loc129, #loc130])
#loc189 = loc(fused[#loc132, #loc131])
#loc190 = loc(fused[#loc134, #loc133])
