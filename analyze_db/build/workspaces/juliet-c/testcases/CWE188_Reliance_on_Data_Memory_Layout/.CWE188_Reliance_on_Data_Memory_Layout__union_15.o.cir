!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_anon2E1 = !cir.record<struct "anon.1" {!s8i, !s8i, !s8i, !s8i} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!ty_anon2E1, !s64i}>
module @"/workspaces/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc80)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc10)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !ty_anon2E0, !cir.ptr<!ty_anon2E0>, ["unionStructLong"] {alignment = 8 : i64} loc(#loc85)
            %2 = cir.const #cir.int<270544960> : !s32i loc(#loc16)
            %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc16)
            %4 = cir.get_member %1[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0> -> !cir.ptr<!s64i> loc(#loc17)
            cir.store %3, %4 : !s64i, !cir.ptr<!s64i> loc(#loc86)
            %5 = cir.const #cir.int<128> : !s32i loc(#loc19)
            %6 = cir.get_member %1[0] {name = "structChars"} : !cir.ptr<!ty_anon2E0> -> !cir.ptr<!ty_anon2E1> loc(#loc20)
            %7 = cir.get_member %6[3] {name = "charFourth"} : !cir.ptr<!ty_anon2E1> -> !cir.ptr<!s8i> loc(#loc21)
            %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc22)
            %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc22)
            %10 = cir.binop(or, %9, %5) : !s32i loc(#loc87)
            %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc87)
            cir.store %11, %7 : !s8i, !cir.ptr<!s8i> loc(#loc87)
            %12 = cir.get_member %1[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0> -> !cir.ptr<!s64i> loc(#loc17)
            %13 = cir.load %12 : !cir.ptr<!s64i>, !s64i loc(#loc24)
            %14 = cir.cast(integral, %13 : !s64i), !s32i loc(#loc24)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc25)
          } loc(#loc84)
          cir.break loc(#loc26)
        } loc(#loc11)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc28)
          cir.break loc(#loc29)
        } loc(#loc27)
        cir.yield loc(#loc8)
      } loc(#loc8)
    } loc(#loc83)
    cir.return loc(#loc7)
  } loc(#loc82)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc89)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc90)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc88)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc40)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc43)
          cir.break loc(#loc44)
        } loc(#loc41)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc94)
            %2 = cir.const #cir.int<270544960> : !s32i loc(#loc50)
            %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc50)
            cir.store %3, %1 : !s64i, !cir.ptr<!s64i> loc(#loc95)
            %4 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc52)
            %5 = cir.unary(minus, %4) nsw : !s64i, !s64i loc(#loc52)
            %6 = cir.const #cir.int<1> : !s64i loc(#loc52)
            %7 = cir.binop(sub, %5, %6) nsw : !s64i loc(#loc52)
            %8 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc53)
            %9 = cir.binop(or, %8, %7) : !s64i loc(#loc96)
            cir.store %9, %1 : !s64i, !cir.ptr<!s64i> loc(#loc96)
            %10 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc55)
            %11 = cir.cast(integral, %10 : !s64i), !s32i loc(#loc55)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc56)
          } loc(#loc93)
          cir.break loc(#loc57)
        } loc(#loc45)
        cir.yield loc(#loc38)
      } loc(#loc38)
    } loc(#loc92)
    cir.return loc(#loc37)
  } loc(#loc91)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc62)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc100)
            %2 = cir.const #cir.int<270544960> : !s32i loc(#loc68)
            %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc68)
            cir.store %3, %1 : !s64i, !cir.ptr<!s64i> loc(#loc101)
            %4 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc70)
            %5 = cir.unary(minus, %4) nsw : !s64i, !s64i loc(#loc70)
            %6 = cir.const #cir.int<1> : !s64i loc(#loc70)
            %7 = cir.binop(sub, %5, %6) nsw : !s64i loc(#loc70)
            %8 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc71)
            %9 = cir.binop(or, %8, %7) : !s64i loc(#loc102)
            cir.store %9, %1 : !s64i, !cir.ptr<!s64i> loc(#loc102)
            %10 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc73)
            %11 = cir.cast(integral, %10 : !s64i), !s32i loc(#loc73)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc74)
          } loc(#loc99)
          cir.break loc(#loc75)
        } loc(#loc63)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc78)
          cir.break loc(#loc79)
        } loc(#loc76)
        cir.yield loc(#loc60)
      } loc(#loc60)
    } loc(#loc98)
    cir.return loc(#loc59)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":43:19)
#loc6 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":20:1)
#loc7 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":46:1)
#loc8 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":22:5)
#loc9 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":45:5)
#loc10 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":22:12)
#loc11 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":24:5)
#loc12 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":25:5)
#loc13 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":39:5)
#loc14 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":26:9)
#loc15 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":33:11)
#loc16 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":34:38)
#loc17 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":32:18)
#loc18 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":34:9)
#loc19 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":37:51)
#loc20 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":31:15)
#loc21 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":30:56)
#loc22 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":37:48)
#loc23 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":37:9)
#loc24 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":38:38)
#loc25 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":38:9)
#loc26 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":40:5)
#loc27 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":41:5)
#loc28 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":43:9)
#loc29 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":44:9)
#loc30 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":104:1)
#loc31 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":108:1)
#loc32 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":106:5)
#loc33 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":106:11)
#loc34 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":107:5)
#loc35 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":107:11)
#loc36 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":53:1)
#loc37 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":76:1)
#loc38 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":55:5)
#loc39 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":75:5)
#loc40 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":55:12)
#loc41 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":57:5)
#loc42 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":59:19)
#loc43 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":59:9)
#loc44 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":60:9)
#loc45 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":61:5)
#loc46 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":62:5)
#loc47 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":73:5)
#loc48 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":63:9)
#loc49 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":63:14)
#loc50 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":64:22)
#loc51 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":64:9)
#loc52 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":71:23)
#loc53 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":71:20)
#loc54 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":71:9)
#loc55 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":72:22)
#loc56 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":72:9)
#loc57 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":74:5)
#loc58 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":79:1)
#loc59 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":102:1)
#loc60 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":81:5)
#loc61 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":101:5)
#loc62 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":81:12)
#loc63 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":83:5)
#loc64 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":84:5)
#loc65 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":95:5)
#loc66 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":85:9)
#loc67 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":85:14)
#loc68 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":86:22)
#loc69 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":86:9)
#loc70 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":93:23)
#loc71 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":93:20)
#loc72 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":93:9)
#loc73 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":94:22)
#loc74 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":94:9)
#loc75 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":96:5)
#loc76 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":97:5)
#loc77 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":99:19)
#loc78 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":99:9)
#loc79 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_15.c":100:9)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc6, #loc7])
#loc83 = loc(fused[#loc8, #loc9])
#loc84 = loc(fused[#loc12, #loc13])
#loc85 = loc(fused[#loc14, #loc15])
#loc86 = loc(fused[#loc18, #loc16])
#loc87 = loc(fused[#loc23, #loc19])
#loc88 = loc(fused[#loc30, #loc31])
#loc89 = loc(fused[#loc32, #loc33])
#loc90 = loc(fused[#loc34, #loc35])
#loc91 = loc(fused[#loc36, #loc37])
#loc92 = loc(fused[#loc38, #loc39])
#loc93 = loc(fused[#loc46, #loc47])
#loc94 = loc(fused[#loc48, #loc49])
#loc95 = loc(fused[#loc51, #loc50])
#loc96 = loc(fused[#loc54, #loc52])
#loc97 = loc(fused[#loc58, #loc59])
#loc98 = loc(fused[#loc60, #loc61])
#loc99 = loc(fused[#loc64, #loc65])
#loc100 = loc(fused[#loc66, #loc67])
#loc101 = loc(fused[#loc69, #loc68])
#loc102 = loc(fused[#loc72, #loc70])
