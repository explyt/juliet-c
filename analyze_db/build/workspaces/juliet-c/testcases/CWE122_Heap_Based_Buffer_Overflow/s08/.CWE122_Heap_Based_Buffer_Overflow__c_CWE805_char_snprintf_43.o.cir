!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":32:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":32:31)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":61:27)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":61:35)
#loc123 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc66, #loc67])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc121)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc123)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc10)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc124)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc125)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc129)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc23)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s8i loc(#loc24)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc25)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %16, %20 : !s8i, !cir.ptr<!s8i> loc(#loc131)
    cir.return loc(#loc6)
  } loc(#loc122)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc30)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc134)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc41)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43L9badSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc43)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    %5 = cir.const #cir.int<67> : !s8i loc(#loc47)
    %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc47)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc48)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc48)
    cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc140)
    %11 = cir.const #cir.int<0> : !s8i loc(#loc52)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc55)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc141)
    %17 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc56)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc58)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc30)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc30)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %24 = cir.call @snprintf(%18, %20, %22, %23) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc56)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc62)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
    cir.br ^bb2 loc(#loc45)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc36)
  } loc(#loc135)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc143)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc69)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc70)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc70)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc145)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc149)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc80)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc82)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
    cir.br ^bb3 loc(#loc76)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc76)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s8i loc(#loc83)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc86)
    cir.store %16, %20 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    cir.return loc(#loc65)
  } loc(#loc142)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc93)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43L13goodG2BSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc95)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %5 = cir.const #cir.int<67> : !s8i loc(#loc99)
    %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc99)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc100)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc100)
    cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
    %11 = cir.const #cir.int<0> : !s8i loc(#loc104)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc105)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    %17 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc108)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc110)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc111)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc111)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
    %24 = cir.call @snprintf(%18, %20, %22, %23) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc108)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc115)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb2 loc(#loc97)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc88)
  } loc(#loc152)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc118)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":32:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":38:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":33:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":35:20)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":35:27)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":35:30)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":35:41)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":35:42)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":35:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":36:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":36:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":36:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":36:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":36:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":36:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":36:30)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":36:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":37:15)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":37:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":37:10)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":37:11)
#loc28 = loc("/usr/include/stdio.h":385:1)
#loc29 = loc("/usr/include/stdio.h":387:62)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":50:29)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("/usr/include/stdlib.h":687:1)
#loc34 = loc("/usr/include/stdlib.h":687:32)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":40:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":54:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":46:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":46:24)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":42:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":42:12)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":43:12)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":43:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":44:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":45:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":53:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":47:16)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":47:24)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":47:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":47:33)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":47:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":47:34)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":48:25)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":48:16)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":48:20)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":48:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":50:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":50:18)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":50:24)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":50:35)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":51:19)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":51:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":52:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":52:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":61:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":67:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":62:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":64:20)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":64:27)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":64:31)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":64:42)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":64:43)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":64:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":65:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":65:33)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":65:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":65:17)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":65:23)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":65:24)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":65:30)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":65:29)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":66:15)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":66:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":66:10)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":66:11)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":69:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":83:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":75:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":75:24)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":71:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":71:12)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":72:12)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":72:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":73:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":74:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":82:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":76:16)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":76:24)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":76:29)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":76:33)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":76:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":76:34)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":77:25)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":77:16)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":77:20)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":77:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":79:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":79:18)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":79:24)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":79:29)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":79:35)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":80:19)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":80:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":81:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":81:14)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":85:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":88:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_43.cpp":87:5)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc12, #loc13])
#loc125 = loc(fused[#loc11, #loc13])
#loc126 = loc(fused[#loc10, #loc14])
#loc127 = loc(fused[#loc15, #loc14])
#loc128 = loc(fused[#loc16, #loc17])
#loc129 = loc(fused[#loc18, #loc19])
#loc130 = loc(fused[#loc20, #loc17])
#loc131 = loc(fused[#loc25, #loc24])
#loc132 = loc(fused[#loc28, #loc29])
#loc133 = loc(fused[#loc31, #loc32])
#loc134 = loc(fused[#loc33, #loc34])
#loc135 = loc(fused[#loc35, #loc36])
#loc136 = loc(fused[#loc37, #loc38])
#loc137 = loc(fused[#loc39, #loc40])
#loc138 = loc(fused[#loc42, #loc41])
#loc139 = loc(fused[#loc44, #loc45])
#loc140 = loc(fused[#loc50, #loc51])
#loc141 = loc(fused[#loc55, #loc52])
#loc142 = loc(fused[#loc64, #loc65])
#loc144 = loc(fused[#loc71, #loc72])
#loc145 = loc(fused[#loc70, #loc72])
#loc146 = loc(fused[#loc69, #loc73])
#loc147 = loc(fused[#loc74, #loc73])
#loc148 = loc(fused[#loc75, #loc76])
#loc149 = loc(fused[#loc77, #loc78])
#loc150 = loc(fused[#loc79, #loc76])
#loc151 = loc(fused[#loc84, #loc83])
#loc152 = loc(fused[#loc87, #loc88])
#loc153 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc91, #loc92])
#loc155 = loc(fused[#loc94, #loc93])
#loc156 = loc(fused[#loc96, #loc97])
#loc157 = loc(fused[#loc102, #loc103])
#loc158 = loc(fused[#loc107, #loc104])
#loc159 = loc(fused[#loc117, #loc118])
