!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":148:10)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":148:14)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":148:20)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":148:32)
#loc179 = loc(fused[#loc50, #loc51])
#loc180 = loc(fused[#loc52, #loc53])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_fopen.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc161)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc164)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        %4 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc17)
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc3)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc3)
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
        %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc17)
        cir.store %9, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
        %11 = cir.call @fclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc21)
      } loc(#loc166)
    } loc(#loc165)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc24)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc24)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %5 = cir.call @fclose(%4) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc27)
      } loc(#loc169)
    } loc(#loc168)
    cir.return loc(#loc8)
  } loc(#loc162)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc29)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc175)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc176)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc57)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__fopen_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE675_Duplicate_Operations_on_Resource__fopen_04_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__fopen_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE675_Duplicate_Operations_on_Resource__fopen_04_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.return %17 : !s32i loc(#loc183)
  } loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc186)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc77)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc77)
      cir.if %3 {
        %4 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc79)
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc80)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc80)
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc81)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc81)
        %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc79)
        cir.store %9, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
        %11 = cir.call @fclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc85)
      } loc(#loc188)
    } loc(#loc187)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc88)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc88)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc92)
      } else {
      } loc(#loc191)
    } loc(#loc190)
    cir.return loc(#loc70)
  } loc(#loc184)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc97)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc194)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc101)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc101)
      cir.if %3 {
        %4 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc103)
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc104)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc104)
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc105)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc105)
        %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc103)
        cir.store %9, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc197)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc108)
        %11 = cir.call @fclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc109)
      } loc(#loc196)
    } loc(#loc195)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc112)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc112)
      cir.if %3 {
      } loc(#loc199)
    } loc(#loc198)
    cir.return loc(#loc94)
  } loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"GoodSource_fopen.txt\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc114)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc119)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc202)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc123)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc123)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc127)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } else {
        %4 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc129)
        %5 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc130)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc130)
        %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc129)
        cir.store %9, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc205)
      } loc(#loc204)
    } loc(#loc203)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc135)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc137)
        %5 = cir.call @fclose(%4) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc138)
      } loc(#loc207)
    } loc(#loc206)
    cir.return loc(#loc116)
  } loc(#loc200)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc143)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc210)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc147)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc147)
      cir.if %3 {
        %4 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc149)
        %5 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc150)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc150)
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc151)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc151)
        %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc149)
        cir.store %9, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc213)
      } loc(#loc212)
    } loc(#loc211)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc156)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc156)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc158)
        %5 = cir.call @fclose(%4) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc159)
      } loc(#loc215)
    } loc(#loc214)
    cir.return loc(#loc140)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":34:22)
#loc4 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":34:45)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":28:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":43:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":30:5)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":30:12)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":31:12)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":31:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":32:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":37:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":32:8)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":33:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":34:16)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":34:9)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":34:49)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":36:16)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":36:9)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":38:5)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":42:5)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":38:8)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":39:5)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":41:16)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":41:9)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":131:1)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":137:1)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":133:5)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":133:14)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":134:5)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":134:14)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":135:5)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":135:14)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":136:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":136:14)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":153:15)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":155:15)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":158:15)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":160:15)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":148:1)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":163:1)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":149:1)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":151:27)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":151:22)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":151:5)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":153:5)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":154:5)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":154:60)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":155:5)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":158:5)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":159:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":159:59)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":160:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":162:12)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":162:5)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":63:19)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":50:1)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":71:1)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":52:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":52:12)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":53:12)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":53:5)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":54:5)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":59:5)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":54:8)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":55:5)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":56:16)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":56:22)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":56:45)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":56:9)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":56:49)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":58:16)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":58:9)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":60:5)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":70:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":60:8)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":61:5)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":64:5)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":66:5)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":63:9)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":74:1)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":90:1)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":76:5)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":76:12)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":77:12)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":77:5)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":78:5)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":83:5)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":78:8)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":79:5)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":80:16)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":80:22)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":80:45)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":80:9)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":80:49)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":82:16)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":82:9)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":84:5)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":89:5)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":84:8)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":85:5)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":105:22)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":93:1)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":112:1)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":95:5)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":95:12)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":96:12)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":96:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":97:5)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":106:5)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":97:8)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":98:5)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":101:5)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":103:5)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":100:19)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":100:9)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":105:16)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":105:46)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":105:9)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":105:50)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":107:5)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":111:5)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":107:8)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":108:5)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":110:16)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":110:9)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":115:1)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":129:1)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":117:5)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":117:12)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":118:12)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":118:5)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":119:5)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":123:5)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":119:8)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":120:5)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":122:16)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":122:22)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":122:46)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":122:9)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":122:50)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":124:5)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":128:5)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":124:8)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":125:5)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":127:16)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_04.c":127:9)
#loc160 = loc(fused[#loc1, #loc2])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc12, #loc11])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc16, #loc14])
#loc167 = loc(fused[#loc18, #loc19])
#loc168 = loc(fused[#loc22, #loc23])
#loc169 = loc(fused[#loc25, #loc23])
#loc170 = loc(fused[#loc28, #loc29])
#loc171 = loc(fused[#loc30, #loc31])
#loc172 = loc(fused[#loc32, #loc33])
#loc173 = loc(fused[#loc34, #loc35])
#loc174 = loc(fused[#loc36, #loc37])
#loc175 = loc(fused[#loc38, #loc39])
#loc176 = loc(fused[#loc40, #loc41])
#loc177 = loc(fused[#loc42, #loc43])
#loc178 = loc(fused[#loc48, #loc49])
#loc181 = loc(fused[#loc59, #loc60])
#loc182 = loc(fused[#loc63, #loc64])
#loc183 = loc(fused[#loc67, #loc66])
#loc184 = loc(fused[#loc69, #loc70])
#loc185 = loc(fused[#loc71, #loc72])
#loc186 = loc(fused[#loc74, #loc73])
#loc187 = loc(fused[#loc75, #loc76])
#loc188 = loc(fused[#loc78, #loc76])
#loc189 = loc(fused[#loc82, #loc83])
#loc190 = loc(fused[#loc86, #loc87])
#loc191 = loc(fused[#loc89, #loc90, #loc91, #loc87])
#loc192 = loc(fused[#loc93, #loc94])
#loc193 = loc(fused[#loc95, #loc96])
#loc194 = loc(fused[#loc98, #loc97])
#loc195 = loc(fused[#loc99, #loc100])
#loc196 = loc(fused[#loc102, #loc100])
#loc197 = loc(fused[#loc106, #loc107])
#loc198 = loc(fused[#loc110, #loc111])
#loc199 = loc(fused[#loc113, #loc111])
#loc200 = loc(fused[#loc115, #loc116])
#loc201 = loc(fused[#loc117, #loc118])
#loc202 = loc(fused[#loc120, #loc119])
#loc203 = loc(fused[#loc121, #loc122])
#loc204 = loc(fused[#loc124, #loc125, #loc126, #loc122])
#loc205 = loc(fused[#loc131, #loc132])
#loc206 = loc(fused[#loc133, #loc134])
#loc207 = loc(fused[#loc136, #loc134])
#loc208 = loc(fused[#loc139, #loc140])
#loc209 = loc(fused[#loc141, #loc142])
#loc210 = loc(fused[#loc144, #loc143])
#loc211 = loc(fused[#loc145, #loc146])
#loc212 = loc(fused[#loc148, #loc146])
#loc213 = loc(fused[#loc152, #loc153])
#loc214 = loc(fused[#loc154, #loc155])
#loc215 = loc(fused[#loc157, #loc155])
