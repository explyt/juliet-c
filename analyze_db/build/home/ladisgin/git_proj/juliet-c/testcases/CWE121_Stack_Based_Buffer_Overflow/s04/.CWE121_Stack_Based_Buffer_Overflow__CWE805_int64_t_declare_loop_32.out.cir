!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":101:10)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":101:14)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":101:20)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":101:32)
#loc176 = loc(fused[#loc74, #loc75])
#loc177 = loc(fused[#loc76, #loc77])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLongLongLine(!s64i) loc(#loc147)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc151)
    %3 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc152)
    %4 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc153)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc150)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc151)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc155)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc18)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc19)
      cir.store %7, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc155)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 50>>), !cir.ptr<!s64i> loc(#loc20)
      cir.store %8, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc156)
      %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc22)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc23)
      cir.store %9, %10 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc157)
    } loc(#loc154)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc28)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
      cir.store %7, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc159)
      cir.scope {
        %8 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc161)
        %9 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc161)
        cir.store %9, %8 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc161)
        cir.scope {
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc163)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc40)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
            cir.store %16, %10 : !u64i, !cir.ptr<!u64i> loc(#loc165)
            cir.for : cond {
              %17 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc42)
              %18 = cir.const #cir.int<100> : !s32i loc(#loc43)
              %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc43)
              %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc166)
              cir.condition(%20) loc(#loc44)
            } body {
              cir.scope {
                %17 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %18 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc47)
                %19 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc47)
                %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc47)
                %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc48)
                %22 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc49)
                %23 = cir.ptr_stride(%21 : !cir.ptr<!s64i>, %22 : !u64i), !cir.ptr<!s64i> loc(#loc50)
                cir.store %20, %23 : !s64i, !cir.ptr<!s64i> loc(#loc168)
              } loc(#loc167)
              cir.yield loc(#loc39)
            } step {
              %17 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc52)
              %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc53)
              cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc169)
              cir.yield loc(#loc164)
            } loc(#loc164)
          } loc(#loc164)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc54)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc55)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc56)
          %14 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc54)
          cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc57)
        } loc(#loc162)
      } loc(#loc160)
    } loc(#loc158)
    cir.return loc(#loc4)
  } loc(#loc148)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc172)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc81)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.return %17 : !s32i loc(#loc180)
  } loc(#loc175)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc184)
    %3 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc185)
    %4 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc186)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc183)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc184)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc188)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc107)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc108)
      cir.store %7, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc188)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc109)
      cir.store %8, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc189)
      %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc111)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc112)
      cir.store %9, %10 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc190)
    } loc(#loc187)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc192)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc117)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc118)
      cir.store %7, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc192)
      cir.scope {
        %8 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc194)
        %9 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc194)
        cir.store %9, %8 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc194)
        cir.scope {
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc196)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc129)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc129)
            cir.store %16, %10 : !u64i, !cir.ptr<!u64i> loc(#loc198)
            cir.for : cond {
              %17 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc131)
              %18 = cir.const #cir.int<100> : !s32i loc(#loc132)
              %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc132)
              %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc199)
              cir.condition(%20) loc(#loc133)
            } body {
              cir.scope {
                %17 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc135)
                %18 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc136)
                %19 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc136)
                %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc136)
                %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc137)
                %22 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc138)
                %23 = cir.ptr_stride(%21 : !cir.ptr<!s64i>, %22 : !u64i), !cir.ptr<!s64i> loc(#loc139)
                cir.store %20, %23 : !s64i, !cir.ptr<!s64i> loc(#loc201)
              } loc(#loc200)
              cir.yield loc(#loc128)
            } step {
              %17 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc141)
              %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc142)
              cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc202)
              cir.yield loc(#loc197)
            } loc(#loc197)
          } loc(#loc197)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc143)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc144)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc145)
          %14 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc143)
          cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc146)
        } loc(#loc195)
      } loc(#loc193)
    } loc(#loc191)
    cir.return loc(#loc93)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":50:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":23:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":24:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":25:28)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":26:29)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":27:31)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":29:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":29:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":29:26)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":32:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":32:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":33:21)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":33:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":33:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":35:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":49:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":36:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":36:27)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":36:26)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":37:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":48:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":38:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":38:37)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":39:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":47:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":40:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":40:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":42:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":45:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":42:26)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":42:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":42:29)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":42:33)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":42:31)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":43:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":44:38)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":44:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":44:21)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":44:26)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":44:27)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":44:39)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":42:39)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":42:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":46:35)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":46:40)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":46:41)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":46:17)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":87:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":90:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":89:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":89:13)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":106:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":108:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":111:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":113:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":101:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":116:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":102:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":104:27)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":104:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":104:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":106:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":107:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":107:77)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":108:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":111:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":112:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":112:76)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":113:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":115:12)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":115:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":57:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":85:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":59:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":59:15)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":60:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":60:28)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":61:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":61:28)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":62:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":62:29)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":63:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":63:31)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":64:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":69:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":65:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":65:27)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":65:26)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":67:16)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":67:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":68:21)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":68:10)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":68:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":70:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":84:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":71:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":71:27)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":71:26)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":72:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":83:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":73:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":73:37)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":74:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":82:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":75:17)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":75:24)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":77:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":80:17)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":77:26)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":77:22)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":77:29)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":77:33)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":77:31)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":78:17)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":79:38)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":79:31)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":79:21)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":79:26)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":79:27)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":79:39)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":77:39)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":77:38)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":81:35)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":81:40)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":81:41)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_32.c":81:17)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc15, #loc16])
#loc155 = loc(fused[#loc17, #loc18])
#loc156 = loc(fused[#loc21, #loc20])
#loc157 = loc(fused[#loc24, #loc22])
#loc158 = loc(fused[#loc25, #loc26])
#loc159 = loc(fused[#loc27, #loc28])
#loc160 = loc(fused[#loc30, #loc31])
#loc161 = loc(fused[#loc32, #loc33])
#loc162 = loc(fused[#loc34, #loc35])
#loc163 = loc(fused[#loc36, #loc37])
#loc164 = loc(fused[#loc38, #loc39])
#loc165 = loc(fused[#loc41, #loc40])
#loc166 = loc(fused[#loc42, #loc43])
#loc167 = loc(fused[#loc45, #loc39])
#loc168 = loc(fused[#loc48, #loc51])
#loc169 = loc(fused[#loc53, #loc52])
#loc170 = loc(fused[#loc58, #loc59])
#loc171 = loc(fused[#loc60, #loc61])
#loc172 = loc(fused[#loc62, #loc63])
#loc173 = loc(fused[#loc64, #loc65])
#loc174 = loc(fused[#loc66, #loc67])
#loc175 = loc(fused[#loc72, #loc73])
#loc178 = loc(fused[#loc83, #loc84])
#loc179 = loc(fused[#loc87, #loc88])
#loc180 = loc(fused[#loc91, #loc90])
#loc181 = loc(fused[#loc92, #loc93])
#loc182 = loc(fused[#loc94, #loc95])
#loc183 = loc(fused[#loc96, #loc97])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc100, #loc101])
#loc186 = loc(fused[#loc102, #loc103])
#loc187 = loc(fused[#loc104, #loc105])
#loc188 = loc(fused[#loc106, #loc107])
#loc189 = loc(fused[#loc110, #loc109])
#loc190 = loc(fused[#loc113, #loc111])
#loc191 = loc(fused[#loc114, #loc115])
#loc192 = loc(fused[#loc116, #loc117])
#loc193 = loc(fused[#loc119, #loc120])
#loc194 = loc(fused[#loc121, #loc122])
#loc195 = loc(fused[#loc123, #loc124])
#loc196 = loc(fused[#loc125, #loc126])
#loc197 = loc(fused[#loc127, #loc128])
#loc198 = loc(fused[#loc130, #loc129])
#loc199 = loc(fused[#loc131, #loc132])
#loc200 = loc(fused[#loc134, #loc128])
#loc201 = loc(fused[#loc137, #loc140])
#loc202 = loc(fused[#loc142, #loc141])
