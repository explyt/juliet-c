!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc18 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":58:74)
#loc19 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":58:84)
#loc116 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":126:79)
#loc117 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":126:89)
#loc132 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":142:79)
#loc133 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":142:89)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc149 = loc(fused[#loc18, #loc19])
#loc188 = loc(fused[#loc116, #loc117])
#loc194 = loc(fused[#loc132, #loc133])
!ty__linkedList = !cir.record<struct "_linkedList" {!cir.ptr<!cir.record<struct "_linkedList">>, !cir.ptr<!cir.record<struct "_linkedList">>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty__badStruct = !cir.record<struct "_badStruct" {!ty__linkedList}>
module @"/workspaces/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__connect_socket_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @CWE123_Write_What_Where_Condition__connect_socket_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc141)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc142)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc144)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc145)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc146)
  cir.func private @close(!s32i) -> !s32i loc(#loc147)
  cir.func @CWE123_Write_What_Where_Condition__connect_socket_22_badSource(%arg0: !ty__badStruct loc(fused[#loc18, #loc19])) -> !ty__badStruct extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["__retval"] {alignment = 8 : i64} loc(#loc17)
    cir.store %arg0, %0 : !ty__badStruct, !cir.ptr<!ty__badStruct> loc(#loc20)
    cir.scope {
      %3 = cir.get_global @CWE123_Write_What_Where_Condition__connect_socket_22_badGlobal : !cir.ptr<!s32i> loc(#loc141)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc23)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc153)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc154)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc155)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc32)
          cir.store %10, %8 : !s32i, !cir.ptr<!s32i> loc(#loc155)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc37)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc38)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc39)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc40)
                cir.store %14, %8 : !s32i, !cir.ptr<!s32i> loc(#loc158)
                cir.scope {
                  %37 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc46)
                  %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc46)
                  %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc160)
                  cir.if %40 {
                    cir.break loc(#loc48)
                  } loc(#loc161)
                } loc(#loc159)
                %15 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc162)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc51)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc163)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc56)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc56)
                %20 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc57)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc165)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc59)
                %24 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc60)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc61)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc166)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc64)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc64)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc65)
                %29 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc167)
                cir.scope {
                  %37 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                  %38 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc169)
                  %39 = cir.const #cir.int<16> : !u64i loc(#loc170)
                  %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc170)
                  %41 = cir.call @connect(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc76)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc77)
                  %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc77)
                  %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc171)
                  cir.if %44 {
                    cir.break loc(#loc79)
                  } loc(#loc172)
                } loc(#loc168)
                %30 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                %31 = cir.cast(bitcast, %0 : !cir.ptr<!ty__badStruct>), !cir.ptr<!s8i> loc(#loc173)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc174)
                %33 = cir.const #cir.int<16> : !u64i loc(#loc175)
                %34 = cir.const #cir.int<0> : !s32i loc(#loc86)
                %35 = cir.call @recv(%30, %32, %33, %34) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc87)
                %36 = cir.cast(integral, %35 : !s64i), !s32i loc(#loc87)
                cir.store %36, %6 : !s32i, !cir.ptr<!s32i> loc(#loc176)
                cir.scope {
                  %37 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc93)
                  %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc178)
                  %41 = cir.ternary(%40, true {
                    %42 = cir.const #true loc(#loc94)
                    cir.yield %42 : !cir.bool loc(#loc94)
                  }, false {
                    %42 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                    %43 = cir.const #cir.int<0> : !s32i loc(#loc96)
                    %44 = cir.cmp(eq, %42, %43) : !s32i, !cir.bool loc(#loc179)
                    %45 = cir.ternary(%44, true {
                      %46 = cir.const #true loc(#loc94)
                      cir.yield %46 : !cir.bool loc(#loc94)
                    }, false {
                      %46 = cir.const #false loc(#loc94)
                      cir.yield %46 : !cir.bool loc(#loc94)
                    }) : (!cir.bool) -> !cir.bool loc(#loc94)
                    cir.yield %45 : !cir.bool loc(#loc94)
                  }) : (!cir.bool) -> !cir.bool loc(#loc94)
                  cir.if %41 {
                    cir.break loc(#loc98)
                  } loc(#loc180)
                } loc(#loc177)
              } loc(#loc157)
              cir.yield loc(#loc34)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc99)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc99)
              cir.condition(%12) loc(#loc99)
            } loc(#loc156)
          } loc(#loc156)
          cir.scope {
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc102)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc103)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc103)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc182)
            cir.if %14 {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc105)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc106)
            } loc(#loc183)
          } loc(#loc181)
        } loc(#loc152)
      } loc(#loc151)
    } loc(#loc150)
    cir.copy %0 to %1 : !cir.ptr<!ty__badStruct> loc(#loc17)
    %2 = cir.load %1 : !cir.ptr<!ty__badStruct>, !ty__badStruct loc(#loc184)
    cir.return %2 : !ty__badStruct loc(#loc184)
  } loc(#loc148)
  cir.global "private" external @CWE123_Write_What_Where_Condition__connect_socket_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc185)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc113)
  cir.func @CWE123_Write_What_Where_Condition__connect_socket_22_goodG2B1Source(%arg0: !ty__badStruct loc(fused[#loc116, #loc117])) -> !ty__badStruct extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data", init] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["__retval"] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !ty__badStruct, !cir.ptr<!ty__badStruct> loc(#loc118)
    cir.scope {
      %3 = cir.get_global @CWE123_Write_What_Where_Condition__connect_socket_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc185)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc121)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc113)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc125)
      } else {
      } loc(#loc190)
    } loc(#loc189)
    cir.copy %0 to %1 : !cir.ptr<!ty__badStruct> loc(#loc115)
    %2 = cir.load %1 : !cir.ptr<!ty__badStruct>, !ty__badStruct loc(#loc191)
    cir.return %2 : !ty__badStruct loc(#loc191)
  } loc(#loc187)
  cir.global "private" external @CWE123_Write_What_Where_Condition__connect_socket_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc192)
  cir.func @CWE123_Write_What_Where_Condition__connect_socket_22_goodG2B2Source(%arg0: !ty__badStruct loc(fused[#loc132, #loc133])) -> !ty__badStruct extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data", init] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["__retval"] {alignment = 8 : i64} loc(#loc131)
    cir.store %arg0, %0 : !ty__badStruct, !cir.ptr<!ty__badStruct> loc(#loc134)
    cir.scope {
      %3 = cir.get_global @CWE123_Write_What_Where_Condition__connect_socket_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc192)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc137)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc137)
      cir.if %5 {
      } loc(#loc196)
    } loc(#loc195)
    cir.copy %0 to %1 : !cir.ptr<!ty__badStruct> loc(#loc131)
    %2 = cir.load %1 : !cir.ptr<!ty__badStruct>, !ty__badStruct loc(#loc197)
    cir.return %2 : !ty__badStruct loc(#loc197)
  } loc(#loc193)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__connect_socket_22b.c":0:0)
#loc1 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":56:1)
#loc2 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":56:12)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":86:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":58:1)
#loc17 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":115:1)
#loc20 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":59:1)
#loc21 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":60:5)
#loc22 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":113:5)
#loc23 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":60:8)
#loc24 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":61:5)
#loc25 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":62:9)
#loc26 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":112:9)
#loc27 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":67:13)
#loc28 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":67:17)
#loc29 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":68:13)
#loc30 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":68:32)
#loc31 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":69:13)
#loc32 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":69:36)
#loc33 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":70:13)
#loc34 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":101:21)
#loc35 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":71:13)
#loc36 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":100:13)
#loc37 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":79:40)
#loc38 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":79:49)
#loc39 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":79:62)
#loc40 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":79:33)
#loc41 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":79:17)
#loc42 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":79:73)
#loc43 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":80:17)
#loc44 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":83:17)
#loc45 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":80:21)
#loc46 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":80:38)
#loc47 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":81:17)
#loc48 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":82:21)
#loc49 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":84:24)
#loc50 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":84:25)
#loc51 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":84:34)
#loc52 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":84:37)
#loc53 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":84:51)
#loc54 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":84:17)
#loc55 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":84:52)
#loc56 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":85:38)
#loc57 = loc("/usr/include/netinet/in.h":249:5)
#loc58 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":85:17)
#loc59 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":86:43)
#loc60 = loc("/usr/include/netinet/in.h":251:20)
#loc61 = loc("/usr/include/netinet/in.h":33:15)
#loc62 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":86:17)
#loc63 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":86:63)
#loc64 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":87:42)
#loc65 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":87:36)
#loc66 = loc("/usr/include/netinet/in.h":250:15)
#loc67 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":87:17)
#loc68 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":87:50)
#loc69 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":88:17)
#loc70 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":91:17)
#loc71 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":88:29)
#loc72 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":88:62)
#loc73 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":88:63)
#loc74 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":88:72)
#loc75 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":88:86)
#loc76 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":88:21)
#loc77 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":88:92)
#loc78 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":89:17)
#loc79 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":90:21)
#loc80 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:35)
#loc81 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:57)
#loc82 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:58)
#loc83 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:50)
#loc84 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:64)
#loc85 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:75)
#loc86 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:78)
#loc87 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:30)
#loc88 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:17)
#loc89 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":95:79)
#loc90 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":96:17)
#loc91 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":99:17)
#loc92 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":96:21)
#loc93 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":96:35)
#loc94 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":96:48)
#loc95 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":96:51)
#loc96 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":96:65)
#loc97 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":97:17)
#loc98 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":98:21)
#loc99 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":101:20)
#loc100 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":102:13)
#loc101 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":105:13)
#loc102 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":102:17)
#loc103 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":102:34)
#loc104 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":103:13)
#loc105 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":104:30)
#loc106 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":104:17)
#loc107 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":114:5)
#loc108 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":114:12)
#loc109 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":122:1)
#loc110 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":122:12)
#loc111 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc112 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc113 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":131:19)
#loc114 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":126:1)
#loc115 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":139:1)
#loc118 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":127:1)
#loc119 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":128:5)
#loc120 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":137:5)
#loc121 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":128:8)
#loc122 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":129:5)
#loc123 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":132:5)
#loc124 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":134:5)
#loc125 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":131:9)
#loc126 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":138:5)
#loc127 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":138:12)
#loc128 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":123:1)
#loc129 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":123:12)
#loc130 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":142:1)
#loc131 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":150:1)
#loc134 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":143:1)
#loc135 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":144:5)
#loc136 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":148:5)
#loc137 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":144:8)
#loc138 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":145:5)
#loc139 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":149:5)
#loc140 = loc("CWE123_Write_What_Where_Condition__connect_socket_22b.c":149:12)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc8, #loc9])
#loc145 = loc(fused[#loc10, #loc11])
#loc146 = loc(fused[#loc12, #loc13])
#loc147 = loc(fused[#loc14, #loc15])
#loc148 = loc(fused[#loc16, #loc17])
#loc150 = loc(fused[#loc21, #loc22])
#loc151 = loc(fused[#loc24, #loc22])
#loc152 = loc(fused[#loc25, #loc26])
#loc153 = loc(fused[#loc27, #loc28])
#loc154 = loc(fused[#loc29, #loc30])
#loc155 = loc(fused[#loc31, #loc32])
#loc156 = loc(fused[#loc33, #loc34])
#loc157 = loc(fused[#loc35, #loc36])
#loc158 = loc(fused[#loc41, #loc42])
#loc159 = loc(fused[#loc43, #loc44])
#loc160 = loc(fused[#loc45, #loc46])
#loc161 = loc(fused[#loc47, #loc44])
#loc162 = loc(fused[#loc49, #loc50])
#loc163 = loc(fused[#loc52, #loc53])
#loc164 = loc(fused[#loc54, #loc55])
#loc165 = loc(fused[#loc58, #loc56])
#loc166 = loc(fused[#loc62, #loc63])
#loc167 = loc(fused[#loc67, #loc68])
#loc168 = loc(fused[#loc69, #loc70])
#loc169 = loc(fused[#loc72, #loc73])
#loc170 = loc(fused[#loc74, #loc75])
#loc171 = loc(fused[#loc76, #loc77])
#loc172 = loc(fused[#loc78, #loc70])
#loc173 = loc(fused[#loc81, #loc82])
#loc174 = loc(fused[#loc83, #loc82])
#loc175 = loc(fused[#loc84, #loc85])
#loc176 = loc(fused[#loc88, #loc89])
#loc177 = loc(fused[#loc90, #loc91])
#loc178 = loc(fused[#loc92, #loc93])
#loc179 = loc(fused[#loc95, #loc96])
#loc180 = loc(fused[#loc97, #loc91])
#loc181 = loc(fused[#loc100, #loc101])
#loc182 = loc(fused[#loc102, #loc103])
#loc183 = loc(fused[#loc104, #loc101])
#loc184 = loc(fused[#loc107, #loc108])
#loc185 = loc(fused[#loc109, #loc110])
#loc186 = loc(fused[#loc111, #loc112])
#loc187 = loc(fused[#loc114, #loc115])
#loc189 = loc(fused[#loc119, #loc120])
#loc190 = loc(fused[#loc122, #loc123, #loc124, #loc120])
#loc191 = loc(fused[#loc126, #loc127])
#loc192 = loc(fused[#loc128, #loc129])
#loc193 = loc(fused[#loc130, #loc131])
#loc195 = loc(fused[#loc135, #loc136])
#loc196 = loc(fused[#loc138, #loc136])
#loc197 = loc(fused[#loc139, #loc140])
