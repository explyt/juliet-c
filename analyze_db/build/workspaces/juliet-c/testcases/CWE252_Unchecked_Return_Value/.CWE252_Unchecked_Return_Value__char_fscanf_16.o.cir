!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fscanf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc51)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fscanf_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc10)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc10)
        cir.condition(%1) loc(#loc10)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc57)
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc58)
            %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc57)
            cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc57)
            %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
            cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
            %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc18)
            %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc52)
            %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
            %10 = cir.call @__isoc99_fscanf(%6, %8, %9) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc18)
          } loc(#loc56)
          cir.break loc(#loc21)
        } loc(#loc55)
        cir.yield loc(#loc9)
      } loc(#loc54)
    } loc(#loc54)
    cir.return loc(#loc7)
  } loc(#loc53)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fscanf_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc60)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    cir.return loc(#loc23)
  } loc(#loc59)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc33)
        cir.condition(%1) loc(#loc33)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc66)
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc67)
            %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc66)
            cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc66)
            %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
            cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc67)
            cir.scope {
              %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc43)
              %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc52)
              %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
              %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc45)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc45)
              %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
              %10 = cir.call @__isoc99_fscanf(%6, %8, %9) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc43)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc47)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc47)
              %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc69)
              cir.if %13 {
                %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc28)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc28)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc49)
              } loc(#loc70)
            } loc(#loc68)
          } loc(#loc65)
          cir.break loc(#loc50)
        } loc(#loc64)
        cir.yield loc(#loc32)
      } loc(#loc63)
    } loc(#loc63)
    cir.return loc(#loc30)
  } loc(#loc62)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fscanf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":34:27)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":24:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":38:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":26:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":37:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":26:11)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":27:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":28:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":35:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":31:13)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":31:36)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":32:13)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":32:27)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":34:13)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":34:20)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":34:37)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":36:9)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":64:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":67:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":66:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":66:11)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":57:27)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":45:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":62:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":47:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":61:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":47:11)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":48:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":49:9)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":59:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":52:13)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":52:36)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":53:13)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":53:27)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":55:13)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":58:13)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":55:17)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":55:24)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":55:31)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":55:41)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":55:50)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":56:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":57:17)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fscanf_16.c":60:9)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc6, #loc7])
#loc54 = loc(fused[#loc8, #loc9])
#loc55 = loc(fused[#loc11, #loc9])
#loc56 = loc(fused[#loc12, #loc13])
#loc57 = loc(fused[#loc14, #loc15])
#loc58 = loc(fused[#loc16, #loc17])
#loc59 = loc(fused[#loc22, #loc23])
#loc60 = loc(fused[#loc24, #loc25])
#loc61 = loc(fused[#loc26, #loc27])
#loc62 = loc(fused[#loc29, #loc30])
#loc63 = loc(fused[#loc31, #loc32])
#loc64 = loc(fused[#loc34, #loc32])
#loc65 = loc(fused[#loc35, #loc36])
#loc66 = loc(fused[#loc37, #loc38])
#loc67 = loc(fused[#loc39, #loc40])
#loc68 = loc(fused[#loc41, #loc42])
#loc69 = loc(fused[#loc43, #loc47])
#loc70 = loc(fused[#loc48, #loc42])
