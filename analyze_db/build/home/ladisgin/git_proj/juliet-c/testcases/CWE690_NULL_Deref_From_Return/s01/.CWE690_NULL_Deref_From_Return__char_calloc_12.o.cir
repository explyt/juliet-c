!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc97)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc99)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc100)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_calloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc18)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc19)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc19)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc108)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc108)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc109)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc31)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc7)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc7)
    %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc35)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb8 loc(#loc29)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // pred: ^bb3
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
    %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc111)
    cir.brcond %24 ^bb5, ^bb6 loc(#loc112)
  ^bb5:  // pred: ^bb4
    %25 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc44)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc44)
    %29 = cir.call @strcpy(%26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc47)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc25)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc25)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc13)
  } loc(#loc101)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_calloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc113)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc57)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc59)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc60)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc60)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc118)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc59)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc122)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc122)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc67)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc67)
    cir.brcond %11 ^bb2, ^bb7 loc(#loc123)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc124)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
    %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc125)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc126)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc77)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc79)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc79)
    %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc77)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc82)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc82)
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc70)
  ^bb7:  // pred: ^bb1
    cir.br ^bb8 loc(#loc127)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc128)
    cir.brcond %28 ^bb9, ^bb10 loc(#loc129)
  ^bb9:  // pred: ^bb8
    %29 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc89)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc91)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc91)
    %33 = cir.call @strcpy(%30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %35 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc94)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
    cir.br ^bb10 loc(#loc85)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc85)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc66)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc66)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc54)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_12.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":32:22)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":23:1)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":46:1)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":25:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":25:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":26:12)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":26:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":28:20)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":28:27)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":28:31)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":28:42)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":28:43)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":28:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":29:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":45:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":29:8)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":29:33)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":30:5)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":35:5)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":37:5)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":32:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":32:16)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":33:19)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":33:9)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":34:9)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":34:14)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":39:9)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":44:9)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":39:13)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":39:21)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":40:9)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":41:13)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":41:20)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":41:26)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":42:23)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":42:13)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":43:13)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":43:18)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":82:1)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":85:1)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":84:5)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":84:13)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":54:1)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":80:1)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":56:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":56:12)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":57:12)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":57:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":59:20)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":59:27)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":59:31)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":59:42)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":59:43)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":59:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":60:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":79:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":60:8)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":60:33)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":61:5)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":69:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":71:5)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":63:9)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":68:9)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":63:13)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":63:21)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":64:9)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":65:13)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":65:20)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":65:26)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":66:23)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":66:13)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":67:13)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":67:18)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":73:9)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":78:9)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":73:13)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":73:21)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":74:9)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":75:13)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":75:20)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":75:26)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":76:23)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":76:13)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":77:13)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_calloc_12.c":77:18)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc5, #loc6])
#loc99 = loc(fused[#loc8, #loc9])
#loc100 = loc(fused[#loc10, #loc11])
#loc101 = loc(fused[#loc12, #loc13])
#loc102 = loc(fused[#loc14, #loc15])
#loc103 = loc(fused[#loc17, #loc16])
#loc104 = loc(fused[#loc20, #loc21])
#loc105 = loc(fused[#loc18, #loc22])
#loc106 = loc(fused[#loc23, #loc22])
#loc107 = loc(fused[#loc24, #loc25])
#loc108 = loc(fused[#loc26, #loc27])
#loc109 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc110 = loc(fused[#loc37, #loc38])
#loc111 = loc(fused[#loc39, #loc40])
#loc112 = loc(fused[#loc41, #loc38])
#loc113 = loc(fused[#loc49, #loc50])
#loc114 = loc(fused[#loc51, #loc52])
#loc115 = loc(fused[#loc53, #loc54])
#loc116 = loc(fused[#loc55, #loc56])
#loc117 = loc(fused[#loc58, #loc57])
#loc118 = loc(fused[#loc61, #loc62])
#loc119 = loc(fused[#loc59, #loc63])
#loc120 = loc(fused[#loc64, #loc63])
#loc121 = loc(fused[#loc65, #loc66])
#loc122 = loc(fused[#loc67, #loc68])
#loc123 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc124 = loc(fused[#loc72, #loc73])
#loc125 = loc(fused[#loc74, #loc75])
#loc126 = loc(fused[#loc76, #loc73])
#loc127 = loc(fused[#loc84, #loc85])
#loc128 = loc(fused[#loc86, #loc87])
#loc129 = loc(fused[#loc88, #loc85])
