!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":132:10)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":132:14)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":132:20)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":132:32)
#loc207 = loc(fused[#loc69, #loc70])
#loc208 = loc(fused[#loc71, #loc72])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc181)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc182)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc183)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc14)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc181)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc19)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc189)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc21)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc21)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc21)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc21)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc21)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc21)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc21)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc21)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc21)
          cir.yield %24 : !u32i loc(#loc21)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc21)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc21)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc21)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc21)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc21)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc21)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc21)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc21)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc21)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc21)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc21)
          cir.yield %28 : !u32i loc(#loc21)
        }) : (!cir.bool) -> !u32i loc(#loc21)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc21)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
      } loc(#loc190)
    } loc(#loc188)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc193)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc194)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc194)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc194)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc30)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc31)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc31)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc195)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc35)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc35)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc36)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc36)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc38)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc196)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc42)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc198)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc44)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc47)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc48)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc48)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc50)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc200)
        } loc(#loc199)
      } loc(#loc197)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    } loc(#loc192)
    cir.return loc(#loc10)
  } loc(#loc185)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc201)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc204)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc66)
  cir.func @main(%arg0: !s32i loc(fused[#loc69, #loc70]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc71, #loc72])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc73)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc74)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc75)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc75)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc76)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc63)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07_good() : () -> () loc(#loc78)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc65)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07_bad() : () -> () loc(#loc82)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc66)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    cir.return %17 : !s32i loc(#loc211)
  } loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc87)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc93)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc181)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc98)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc216)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc103)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc103)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
      } loc(#loc217)
    } loc(#loc215)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc220)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc221)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc221)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc221)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc113)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc114)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc115)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc114)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc114)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc118)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc118)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc119)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc120)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc119)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc121)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc223)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc125)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc225)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc127)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc130)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc131)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc131)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc133)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc227)
        } loc(#loc226)
      } loc(#loc224)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    } loc(#loc219)
    cir.return loc(#loc89)
  } loc(#loc212)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc141)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc181)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc146)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc232)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc148)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc149)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc148)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
      } loc(#loc233)
    } loc(#loc231)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc236)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc237)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc237)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc237)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc157)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc158)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc159)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc160)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc159)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc159)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc238)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc163)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc163)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc164)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc165)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc164)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc166)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc239)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc170)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc241)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc172)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc174)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc175)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc172)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc176)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc176)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc178)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc178)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc243)
        } loc(#loc242)
      } loc(#loc240)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    } loc(#loc235)
    cir.return loc(#loc137)
  } loc(#loc228)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":0:0)
#loc1 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":23:1)
#loc2 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":23:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":27:1)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":51:1)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":29:5)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":29:9)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":31:13)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":31:12)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":31:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":32:5)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":36:5)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":32:8)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":32:20)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":33:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":35:16)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":35:9)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":37:5)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":50:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":38:9)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":38:24)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":39:9)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":39:26)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":40:16)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":40:24)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":40:29)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":40:33)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":40:9)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":40:34)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":41:25)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":41:16)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":41:20)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":41:9)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":42:9)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":48:9)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":42:13)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":42:20)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":43:9)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":46:13)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":46:21)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":46:27)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":46:35)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":47:26)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":47:18)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":47:13)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":49:19)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":49:9)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":116:1)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":120:1)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":118:5)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":118:14)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":119:5)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":119:14)
#loc59 = loc("/usr/include/stdlib.h":575:1)
#loc60 = loc("/usr/include/stdlib.h":575:41)
#loc61 = loc("/usr/include/time.h":76:1)
#loc62 = loc("/usr/include/time.h":76:38)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":137:15)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":139:15)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":142:15)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":144:15)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":132:1)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":147:1)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":133:1)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":135:27)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":135:22)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":135:5)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":137:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":138:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":138:70)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":139:5)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":142:5)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":143:5)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":143:69)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":144:5)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":146:12)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":146:5)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":66:19)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":58:1)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":87:1)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":60:5)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":60:9)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":62:13)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":62:12)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":62:5)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":63:5)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":72:5)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":63:8)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":63:20)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":64:5)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":67:5)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":69:5)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":66:9)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":71:16)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":71:20)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":71:9)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":73:5)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":86:5)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":74:9)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":74:24)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":75:9)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":75:26)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":76:16)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":76:24)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":76:29)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":76:33)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":76:9)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":76:34)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":77:25)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":77:16)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":77:20)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":77:9)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":78:9)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":84:9)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":78:13)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":78:20)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":79:9)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":82:13)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":82:21)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":82:27)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":82:35)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":83:26)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":83:18)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":83:13)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":85:19)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":85:9)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":90:1)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":114:1)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":92:5)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":92:9)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":94:13)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":94:12)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":94:5)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":95:5)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":99:5)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":95:8)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":95:20)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":96:5)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":98:16)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":98:20)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":98:9)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":100:5)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":113:5)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":101:9)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":101:24)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":102:9)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":102:26)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":103:16)
#loc158 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":103:24)
#loc159 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":103:29)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":103:33)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":103:9)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":103:34)
#loc163 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":104:25)
#loc164 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":104:16)
#loc165 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":104:20)
#loc166 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":104:9)
#loc167 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":105:9)
#loc168 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":111:9)
#loc169 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":105:13)
#loc170 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":105:20)
#loc171 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":106:9)
#loc172 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":109:13)
#loc173 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":109:21)
#loc174 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":109:27)
#loc175 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":109:35)
#loc176 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":110:26)
#loc177 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":110:18)
#loc178 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":110:13)
#loc179 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":112:19)
#loc180 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_07.c":112:9)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc3, #loc4])
#loc183 = loc(fused[#loc5, #loc6])
#loc184 = loc(fused[#loc7, #loc8])
#loc185 = loc(fused[#loc9, #loc10])
#loc186 = loc(fused[#loc11, #loc12])
#loc187 = loc(fused[#loc15, #loc13])
#loc188 = loc(fused[#loc16, #loc17])
#loc189 = loc(fused[#loc18, #loc19])
#loc190 = loc(fused[#loc20, #loc17])
#loc191 = loc(fused[#loc22, #loc21])
#loc192 = loc(fused[#loc23, #loc24])
#loc193 = loc(fused[#loc25, #loc26])
#loc194 = loc(fused[#loc27, #loc28])
#loc195 = loc(fused[#loc33, #loc34])
#loc196 = loc(fused[#loc38, #loc35])
#loc197 = loc(fused[#loc39, #loc40])
#loc198 = loc(fused[#loc41, #loc42])
#loc199 = loc(fused[#loc43, #loc40])
#loc200 = loc(fused[#loc50, #loc48])
#loc201 = loc(fused[#loc53, #loc54])
#loc202 = loc(fused[#loc55, #loc56])
#loc203 = loc(fused[#loc57, #loc58])
#loc204 = loc(fused[#loc59, #loc60])
#loc205 = loc(fused[#loc61, #loc62])
#loc206 = loc(fused[#loc67, #loc68])
#loc209 = loc(fused[#loc78, #loc79])
#loc210 = loc(fused[#loc82, #loc83])
#loc211 = loc(fused[#loc86, #loc85])
#loc212 = loc(fused[#loc88, #loc89])
#loc213 = loc(fused[#loc90, #loc91])
#loc214 = loc(fused[#loc94, #loc92])
#loc215 = loc(fused[#loc95, #loc96])
#loc216 = loc(fused[#loc97, #loc98])
#loc217 = loc(fused[#loc99, #loc100, #loc101, #loc96])
#loc218 = loc(fused[#loc105, #loc104])
#loc219 = loc(fused[#loc106, #loc107])
#loc220 = loc(fused[#loc108, #loc109])
#loc221 = loc(fused[#loc110, #loc111])
#loc222 = loc(fused[#loc116, #loc117])
#loc223 = loc(fused[#loc121, #loc118])
#loc224 = loc(fused[#loc122, #loc123])
#loc225 = loc(fused[#loc124, #loc125])
#loc226 = loc(fused[#loc126, #loc123])
#loc227 = loc(fused[#loc133, #loc131])
#loc228 = loc(fused[#loc136, #loc137])
#loc229 = loc(fused[#loc138, #loc139])
#loc230 = loc(fused[#loc142, #loc140])
#loc231 = loc(fused[#loc143, #loc144])
#loc232 = loc(fused[#loc145, #loc146])
#loc233 = loc(fused[#loc147, #loc144])
#loc234 = loc(fused[#loc150, #loc149])
#loc235 = loc(fused[#loc151, #loc152])
#loc236 = loc(fused[#loc153, #loc154])
#loc237 = loc(fused[#loc155, #loc156])
#loc238 = loc(fused[#loc161, #loc162])
#loc239 = loc(fused[#loc166, #loc163])
#loc240 = loc(fused[#loc167, #loc168])
#loc241 = loc(fused[#loc169, #loc170])
#loc242 = loc(fused[#loc171, #loc168])
#loc243 = loc(fused[#loc178, #loc176])
