!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodB2G2.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc163)
  cir.global "private" constant cir_private @__const.goodB2G1.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc164)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_08_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc165)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc172)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc19)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc165)
          %6 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_08_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc165)
          cir.copy %6 to %5 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc165)
          %7 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc24)
          %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc25)
          %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc24)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc29)
        } loc(#loc174)
      } loc(#loc173)
    } loc(#loc171)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc177)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc32)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc32)
      cir.if %4 {
      } loc(#loc178)
    } loc(#loc176)
    cir.return loc(#loc12)
  } loc(#loc168)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc181)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc182)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc183)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc36)
  } loc(#loc179)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc47)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.return %2 : !s32i loc(#loc185)
  } loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc49)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc186)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc56)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc191)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc60)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc60)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc164)
          %6 = cir.get_global @__const.goodB2G1.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc164)
          cir.copy %6 to %5 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc164)
          %7 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc65)
          %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc66)
          %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc65)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
        } loc(#loc193)
      } loc(#loc192)
    } loc(#loc190)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc196)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc73)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc73)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc78)
      } else {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc79)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
      } loc(#loc197)
    } loc(#loc195)
    cir.return loc(#loc53)
  } loc(#loc187)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.return %2 : !s32i loc(#loc199)
  } loc(#loc198)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc89)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc204)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc93)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc93)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc163)
          %6 = cir.get_global @__const.goodB2G2.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc163)
          cir.copy %6 to %5 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc163)
          %7 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc98)
          %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc99)
          %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc103)
        } loc(#loc206)
      } loc(#loc205)
    } loc(#loc203)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc209)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc106)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc106)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc109)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc86)
  } loc(#loc200)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc113)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc118)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc216)
      %3 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc122)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc122)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc127)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } else {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc129)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc129)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc129)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc129)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc129)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc129)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc129)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc131)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
        %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc113)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc113)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc134)
      } loc(#loc217)
    } loc(#loc215)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc220)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc137)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc137)
      cir.if %4 {
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc115)
  } loc(#loc212)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc144)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc226)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc148)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc148)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc151)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc151)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc151)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc151)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc151)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc151)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc153)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
        %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc155)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc155)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc153)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc157)
      } loc(#loc227)
    } loc(#loc225)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc230)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc160)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc160)
      cir.if %4 {
      } loc(#loc231)
    } loc(#loc229)
    cir.return loc(#loc141)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_08.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_08.c":98:13)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_08.c":98:31)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_08.c":71:13)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_08.c":71:31)
#loc5 = loc("CWE401_Memory_Leak__strdup_char_08.c":44:13)
#loc6 = loc("CWE401_Memory_Leak__strdup_char_08.c":44:31)
#loc7 = loc("/usr/include/string.h":187:1)
#loc8 = loc("/usr/include/string.h":188:35)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_08.c":37:1)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_08.c":57:1)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_08.c":39:5)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_08.c":39:12)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_08.c":40:12)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_08.c":40:5)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_08.c":41:5)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_08.c":50:5)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_08.c":41:8)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_08.c":41:26)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_08.c":42:5)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_08.c":43:9)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_08.c":49:9)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_08.c":46:20)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_08.c":46:27)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_08.c":46:13)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_08.c":46:35)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_08.c":48:23)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_08.c":48:13)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_08.c":51:5)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_08.c":56:5)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_08.c":51:8)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_08.c":51:26)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_08.c":52:5)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_08.c":159:1)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_08.c":165:1)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_08.c":161:5)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_08.c":161:14)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_08.c":162:5)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_08.c":162:14)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_08.c":163:5)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_08.c":163:14)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_08.c":164:5)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_08.c":164:14)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_08.c":25:1)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_08.c":28:1)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_08.c":27:12)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_08.c":27:5)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_08.c":81:19)
#loc50 = loc("/usr/include/stdlib.h":687:1)
#loc51 = loc("/usr/include/stdlib.h":687:32)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_08.c":64:1)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_08.c":88:1)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_08.c":66:5)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_08.c":66:12)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_08.c":67:12)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_08.c":67:5)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_08.c":68:5)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_08.c":77:5)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_08.c":68:8)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_08.c":68:26)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_08.c":69:5)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_08.c":70:9)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_08.c":76:9)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_08.c":73:20)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_08.c":73:27)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_08.c":73:13)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_08.c":73:35)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_08.c":75:23)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_08.c":75:13)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_08.c":78:5)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_08.c":87:5)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_08.c":78:8)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_08.c":78:27)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_08.c":79:5)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_08.c":82:5)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_08.c":84:5)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_08.c":81:9)
#loc79 = loc("CWE401_Memory_Leak__strdup_char_08.c":86:9)
#loc80 = loc("CWE401_Memory_Leak__strdup_char_08.c":86:14)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_08.c":30:1)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_08.c":33:1)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_08.c":32:12)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_08.c":32:5)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_08.c":91:1)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_08.c":110:1)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_08.c":93:5)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_08.c":93:12)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_08.c":94:12)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_08.c":94:5)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_08.c":95:5)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_08.c":104:5)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_08.c":95:8)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_08.c":95:26)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_08.c":96:5)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_08.c":97:9)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_08.c":103:9)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_08.c":100:20)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_08.c":100:27)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_08.c":100:13)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_08.c":100:35)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_08.c":102:23)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_08.c":102:13)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_08.c":105:5)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_08.c":109:5)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_08.c":105:8)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_08.c":105:26)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_08.c":106:5)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_08.c":108:9)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_08.c":108:14)
#loc111 = loc("/usr/include/string.h":141:1)
#loc112 = loc("/usr/include/string.h":142:14)
#loc113 = loc("CWE401_Memory_Leak__strdup_char_08.c":127:22)
#loc114 = loc("CWE401_Memory_Leak__strdup_char_08.c":113:1)
#loc115 = loc("CWE401_Memory_Leak__strdup_char_08.c":136:1)
#loc116 = loc("CWE401_Memory_Leak__strdup_char_08.c":115:5)
#loc117 = loc("CWE401_Memory_Leak__strdup_char_08.c":115:12)
#loc118 = loc("CWE401_Memory_Leak__strdup_char_08.c":116:12)
#loc119 = loc("CWE401_Memory_Leak__strdup_char_08.c":116:5)
#loc120 = loc("CWE401_Memory_Leak__strdup_char_08.c":117:5)
#loc121 = loc("CWE401_Memory_Leak__strdup_char_08.c":129:5)
#loc122 = loc("CWE401_Memory_Leak__strdup_char_08.c":117:8)
#loc123 = loc("CWE401_Memory_Leak__strdup_char_08.c":117:27)
#loc124 = loc("CWE401_Memory_Leak__strdup_char_08.c":118:5)
#loc125 = loc("CWE401_Memory_Leak__strdup_char_08.c":121:5)
#loc126 = loc("CWE401_Memory_Leak__strdup_char_08.c":123:5)
#loc127 = loc("CWE401_Memory_Leak__strdup_char_08.c":120:19)
#loc128 = loc("CWE401_Memory_Leak__strdup_char_08.c":120:9)
#loc129 = loc("CWE401_Memory_Leak__strdup_char_08.c":125:24)
#loc130 = loc("CWE401_Memory_Leak__strdup_char_08.c":125:9)
#loc131 = loc("CWE401_Memory_Leak__strdup_char_08.c":127:9)
#loc132 = loc("CWE401_Memory_Leak__strdup_char_08.c":127:16)
#loc133 = loc("CWE401_Memory_Leak__strdup_char_08.c":128:19)
#loc134 = loc("CWE401_Memory_Leak__strdup_char_08.c":128:9)
#loc135 = loc("CWE401_Memory_Leak__strdup_char_08.c":130:5)
#loc136 = loc("CWE401_Memory_Leak__strdup_char_08.c":135:5)
#loc137 = loc("CWE401_Memory_Leak__strdup_char_08.c":130:8)
#loc138 = loc("CWE401_Memory_Leak__strdup_char_08.c":130:26)
#loc139 = loc("CWE401_Memory_Leak__strdup_char_08.c":131:5)
#loc140 = loc("CWE401_Memory_Leak__strdup_char_08.c":139:1)
#loc141 = loc("CWE401_Memory_Leak__strdup_char_08.c":157:1)
#loc142 = loc("CWE401_Memory_Leak__strdup_char_08.c":141:5)
#loc143 = loc("CWE401_Memory_Leak__strdup_char_08.c":141:12)
#loc144 = loc("CWE401_Memory_Leak__strdup_char_08.c":142:12)
#loc145 = loc("CWE401_Memory_Leak__strdup_char_08.c":142:5)
#loc146 = loc("CWE401_Memory_Leak__strdup_char_08.c":143:5)
#loc147 = loc("CWE401_Memory_Leak__strdup_char_08.c":150:5)
#loc148 = loc("CWE401_Memory_Leak__strdup_char_08.c":143:8)
#loc149 = loc("CWE401_Memory_Leak__strdup_char_08.c":143:26)
#loc150 = loc("CWE401_Memory_Leak__strdup_char_08.c":144:5)
#loc151 = loc("CWE401_Memory_Leak__strdup_char_08.c":146:24)
#loc152 = loc("CWE401_Memory_Leak__strdup_char_08.c":146:9)
#loc153 = loc("CWE401_Memory_Leak__strdup_char_08.c":148:9)
#loc154 = loc("CWE401_Memory_Leak__strdup_char_08.c":148:16)
#loc155 = loc("CWE401_Memory_Leak__strdup_char_08.c":148:22)
#loc156 = loc("CWE401_Memory_Leak__strdup_char_08.c":149:19)
#loc157 = loc("CWE401_Memory_Leak__strdup_char_08.c":149:9)
#loc158 = loc("CWE401_Memory_Leak__strdup_char_08.c":151:5)
#loc159 = loc("CWE401_Memory_Leak__strdup_char_08.c":156:5)
#loc160 = loc("CWE401_Memory_Leak__strdup_char_08.c":151:8)
#loc161 = loc("CWE401_Memory_Leak__strdup_char_08.c":151:26)
#loc162 = loc("CWE401_Memory_Leak__strdup_char_08.c":152:5)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc9, #loc10])
#loc168 = loc(fused[#loc11, #loc12])
#loc169 = loc(fused[#loc13, #loc14])
#loc170 = loc(fused[#loc16, #loc15])
#loc171 = loc(fused[#loc17, #loc18])
#loc172 = loc(fused[#loc19, #loc20])
#loc173 = loc(fused[#loc21, #loc18])
#loc174 = loc(fused[#loc22, #loc23])
#loc175 = loc(fused[#loc26, #loc27])
#loc176 = loc(fused[#loc30, #loc31])
#loc177 = loc(fused[#loc32, #loc33])
#loc178 = loc(fused[#loc34, #loc31])
#loc179 = loc(fused[#loc35, #loc36])
#loc180 = loc(fused[#loc37, #loc38])
#loc181 = loc(fused[#loc39, #loc40])
#loc182 = loc(fused[#loc41, #loc42])
#loc183 = loc(fused[#loc43, #loc44])
#loc184 = loc(fused[#loc45, #loc46])
#loc185 = loc(fused[#loc48, #loc47])
#loc186 = loc(fused[#loc50, #loc51])
#loc187 = loc(fused[#loc52, #loc53])
#loc188 = loc(fused[#loc54, #loc55])
#loc189 = loc(fused[#loc57, #loc56])
#loc190 = loc(fused[#loc58, #loc59])
#loc191 = loc(fused[#loc60, #loc61])
#loc192 = loc(fused[#loc62, #loc59])
#loc193 = loc(fused[#loc63, #loc64])
#loc194 = loc(fused[#loc67, #loc68])
#loc195 = loc(fused[#loc71, #loc72])
#loc196 = loc(fused[#loc73, #loc74])
#loc197 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc198 = loc(fused[#loc81, #loc82])
#loc199 = loc(fused[#loc84, #loc83])
#loc200 = loc(fused[#loc85, #loc86])
#loc201 = loc(fused[#loc87, #loc88])
#loc202 = loc(fused[#loc90, #loc89])
#loc203 = loc(fused[#loc91, #loc92])
#loc204 = loc(fused[#loc93, #loc94])
#loc205 = loc(fused[#loc95, #loc92])
#loc206 = loc(fused[#loc96, #loc97])
#loc207 = loc(fused[#loc100, #loc101])
#loc208 = loc(fused[#loc104, #loc105])
#loc209 = loc(fused[#loc106, #loc107])
#loc210 = loc(fused[#loc108, #loc105])
#loc211 = loc(fused[#loc111, #loc112])
#loc212 = loc(fused[#loc114, #loc115])
#loc213 = loc(fused[#loc116, #loc117])
#loc214 = loc(fused[#loc119, #loc118])
#loc215 = loc(fused[#loc120, #loc121])
#loc216 = loc(fused[#loc122, #loc123])
#loc217 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc218 = loc(fused[#loc130, #loc129])
#loc219 = loc(fused[#loc135, #loc136])
#loc220 = loc(fused[#loc137, #loc138])
#loc221 = loc(fused[#loc139, #loc136])
#loc222 = loc(fused[#loc140, #loc141])
#loc223 = loc(fused[#loc142, #loc143])
#loc224 = loc(fused[#loc145, #loc144])
#loc225 = loc(fused[#loc146, #loc147])
#loc226 = loc(fused[#loc148, #loc149])
#loc227 = loc(fused[#loc150, #loc147])
#loc228 = loc(fused[#loc152, #loc151])
#loc229 = loc(fused[#loc158, #loc159])
#loc230 = loc(fused[#loc160, #loc161])
#loc231 = loc(fused[#loc162, #loc159])
