!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":30:21)
#loc4 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":30:25)
#loc35 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":54:25)
#loc36 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":54:29)
#loc66 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc35, #loc36])
module @"/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc5)
    cir.return loc(#loc2)
  } loc(#loc65)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc69)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc70)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc14)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc70)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc16)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc8)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc8)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc19)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc72)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc20)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc21)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc73)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc22)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc25)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    cir.call %14(%15) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc25)
    cir.return loc(#loc10)
  } loc(#loc68)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc76)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc28)
  } loc(#loc75)
  cir.func private @close(!s32i) -> !s32i loc(#loc77)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc35, #loc36])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc79)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc37)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
      %2 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc42)
      %4 = cir.cmp(ne, %1, %3) : !s32i, !cir.bool loc(#loc81)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
        %6 = cir.call @close(%5) : (!s32i) -> !s32i loc(#loc45)
      } loc(#loc82)
    } loc(#loc80)
    cir.return loc(#loc34)
  } loc(#loc78)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc84)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc85)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc51)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc85)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc53)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc55)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc55)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc56)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc57)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc87)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc58)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc59)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc88)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc60)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc63)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.call %14(%15) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc63)
    cir.return loc(#loc47)
  } loc(#loc83)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":0:0)
#loc1 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":30:1)
#loc2 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":34:1)
#loc5 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":31:1)
#loc6 = loc("/usr/include/fcntl.h":209:1)
#loc7 = loc("/usr/include/fcntl.h":209:56)
#loc8 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":44:17)
#loc9 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":36:1)
#loc10 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":47:1)
#loc11 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":38:5)
#loc12 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":38:9)
#loc13 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":40:5)
#loc14 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":40:29)
#loc15 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":42:13)
#loc16 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":42:12)
#loc17 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":42:5)
#loc18 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":44:39)
#loc19 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":44:46)
#loc20 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":44:55)
#loc21 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":44:63)
#loc22 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":44:12)
#loc23 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":44:5)
#loc24 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":44:71)
#loc25 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":46:5)
#loc26 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":46:13)
#loc27 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":74:1)
#loc28 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":77:1)
#loc29 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":76:5)
#loc30 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":76:13)
#loc31 = loc("/usr/include/unistd.h":358:1)
#loc32 = loc("/usr/include/unistd.h":358:27)
#loc33 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":54:1)
#loc34 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":61:1)
#loc37 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":55:1)
#loc38 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":57:5)
#loc39 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":60:5)
#loc40 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":57:9)
#loc41 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":57:18)
#loc42 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":57:17)
#loc43 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":58:5)
#loc44 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":59:15)
#loc45 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":59:9)
#loc46 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":63:1)
#loc47 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":72:1)
#loc48 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":65:5)
#loc49 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":65:9)
#loc50 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":66:5)
#loc51 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":66:29)
#loc52 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":68:13)
#loc53 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":68:12)
#loc54 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":68:5)
#loc55 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":70:17)
#loc56 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":70:39)
#loc57 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":70:46)
#loc58 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":70:55)
#loc59 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":70:63)
#loc60 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":70:12)
#loc61 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":70:5)
#loc62 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":70:71)
#loc63 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":71:5)
#loc64 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_44.c":71:13)
#loc65 = loc(fused[#loc1, #loc2])
#loc67 = loc(fused[#loc6, #loc7])
#loc68 = loc(fused[#loc9, #loc10])
#loc69 = loc(fused[#loc11, #loc12])
#loc70 = loc(fused[#loc13, #loc14])
#loc71 = loc(fused[#loc17, #loc15])
#loc72 = loc(fused[#loc18, #loc19])
#loc73 = loc(fused[#loc20, #loc21])
#loc74 = loc(fused[#loc23, #loc24])
#loc75 = loc(fused[#loc27, #loc28])
#loc76 = loc(fused[#loc29, #loc30])
#loc77 = loc(fused[#loc31, #loc32])
#loc78 = loc(fused[#loc33, #loc34])
#loc80 = loc(fused[#loc38, #loc39])
#loc81 = loc(fused[#loc40, #loc41])
#loc82 = loc(fused[#loc43, #loc39])
#loc83 = loc(fused[#loc46, #loc47])
#loc84 = loc(fused[#loc48, #loc49])
#loc85 = loc(fused[#loc50, #loc51])
#loc86 = loc(fused[#loc54, #loc52])
#loc87 = loc(fused[#loc56, #loc57])
#loc88 = loc(fused[#loc58, #loc59])
#loc89 = loc(fused[#loc61, #loc62])
