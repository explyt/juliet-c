!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68_badData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc93)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_687badSinkEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc97)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %7 = cir.const #cir.int<67> : !s8i loc(#loc16)
    %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc16)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc17)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %12 bytes from %6 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc100)
    %13 = cir.const #cir.int<0> : !s8i loc(#loc21)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc22)
    %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc101)
    cir.br ^bb2 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %19 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc27)
    cir.store %20, %0 : !u64i, !cir.ptr<!u64i> loc(#loc103)
    cir.br ^bb3 loc(#loc102)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %21 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc30)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc104)
    cir.brcond %24 ^bb4, ^bb8 loc(#loc104)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc105)
  ^bb5:  // pred: ^bb4
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc33)
    %28 = cir.load %27 : !cir.ptr<!s8i>, !s8i loc(#loc33)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %28, %31 : !s8i, !cir.ptr<!s8i> loc(#loc106)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc39)
    cir.store %33, %0 : !u64i, !cir.ptr<!u64i> loc(#loc107)
    cir.br ^bb3 loc(#loc102)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    %34 = cir.const #cir.int<0> : !s8i loc(#loc40)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc42)
    %39 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc108)
    %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.delete.array %41 : <!s8i> loc(#loc47)
    cir.br ^bb10 loc(#loc14)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc95)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68_goodG2BData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc109)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_6811goodG2BSinkEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc112)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    %7 = cir.const #cir.int<67> : !s8i loc(#loc61)
    %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc61)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc62)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc62)
    cir.libc.memset %12 bytes from %6 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc115)
    %13 = cir.const #cir.int<0> : !s8i loc(#loc66)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc67)
    %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc69)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc116)
    cir.br ^bb2 loc(#loc117)
  ^bb2:  // pred: ^bb1
    %19 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc72)
    cir.store %20, %0 : !u64i, !cir.ptr<!u64i> loc(#loc118)
    cir.br ^bb3 loc(#loc117)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %21 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc75)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc119)
    cir.brcond %24 ^bb4, ^bb8 loc(#loc119)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc120)
  ^bb5:  // pred: ^bb4
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc78)
    %28 = cir.load %27 : !cir.ptr<!s8i>, !s8i loc(#loc78)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %28, %31 : !s8i, !cir.ptr<!s8i> loc(#loc121)
    cir.br ^bb6 loc(#loc71)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc84)
    cir.store %33, %0 : !u64i, !cir.ptr<!u64i> loc(#loc122)
    cir.br ^bb3 loc(#loc117)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc71)
  ^bb9:  // pred: ^bb8
    %34 = cir.const #cir.int<0> : !s8i loc(#loc85)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc87)
    %39 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc89)
    cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc123)
    %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.delete.array %41 : <!s8i> loc(#loc92)
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc51)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":21:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":21:15)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":31:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":48:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":35:9)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":35:16)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":36:9)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":36:24)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":33:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":33:19)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":34:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":47:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":37:16)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":37:24)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":37:29)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":37:33)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":37:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":37:34)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":38:25)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":38:16)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":38:20)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":38:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":40:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":43:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":40:18)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":40:14)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":40:21)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":40:25)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":41:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":42:30)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":42:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":42:13)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":42:18)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":42:19)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":42:31)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":40:31)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":40:30)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":44:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":44:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":44:14)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":44:18)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":44:19)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":45:19)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":45:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":46:19)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":22:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":22:15)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":55:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":72:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":59:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":59:16)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":60:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":60:24)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":57:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":57:19)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":58:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":71:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":61:16)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":61:24)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":61:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":61:33)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":61:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":61:34)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":62:25)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":62:16)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":62:20)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":62:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":64:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":67:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":64:18)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":64:14)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":64:21)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":64:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":65:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":66:30)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":66:23)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":66:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":66:18)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":66:19)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":66:31)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":64:31)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":64:30)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":68:23)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":68:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":68:14)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":68:18)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":68:19)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":69:19)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":69:9)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_68b.cpp":70:19)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc11, #loc12])
#loc99 = loc(fused[#loc13, #loc14])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc24, #loc21])
#loc102 = loc(fused[#loc25, #loc26])
#loc103 = loc(fused[#loc28, #loc27])
#loc104 = loc(fused[#loc29, #loc30])
#loc105 = loc(fused[#loc31, #loc26])
#loc106 = loc(fused[#loc34, #loc37])
#loc107 = loc(fused[#loc39, #loc38])
#loc108 = loc(fused[#loc41, #loc40])
#loc109 = loc(fused[#loc48, #loc49])
#loc110 = loc(fused[#loc50, #loc51])
#loc111 = loc(fused[#loc52, #loc53])
#loc112 = loc(fused[#loc54, #loc55])
#loc113 = loc(fused[#loc56, #loc57])
#loc114 = loc(fused[#loc58, #loc59])
#loc115 = loc(fused[#loc64, #loc65])
#loc116 = loc(fused[#loc69, #loc66])
#loc117 = loc(fused[#loc70, #loc71])
#loc118 = loc(fused[#loc73, #loc72])
#loc119 = loc(fused[#loc74, #loc75])
#loc120 = loc(fused[#loc76, #loc71])
#loc121 = loc(fused[#loc79, #loc82])
#loc122 = loc(fused[#loc84, #loc83])
#loc123 = loc(fused[#loc86, #loc85])
