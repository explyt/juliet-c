!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":24:23)
#loc6 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":24:28)
#loc8 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":27:12)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":48:27)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":48:32)
#loc53 = loc(fused[#loc5, #loc6])
#loc62 = loc(fused[#loc28, #loc29])
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc51)
  cir.func internal private @_ZN52CWE197_Numeric_Truncation_Error__int_rand_to_char_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc53)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc7)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc8)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc8)
    cir.brcond %4 ^bb1, ^bb2 loc(#loc8)
  ^bb1:  // pred: ^bb0
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc8)
    %7 = cir.const #cir.int<30> : !s32i loc(#loc8)
    %8 = cir.shift(left, %6 : !u32i, %7 : !s32i) -> !u32i loc(#loc8)
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc8)
    %11 = cir.const #cir.int<15> : !s32i loc(#loc8)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc8)
    %13 = cir.binop(xor, %8, %12) : !u32i loc(#loc8)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc8)
    %16 = cir.binop(xor, %13, %15) : !u32i loc(#loc8)
    cir.br ^bb3(%16 : !u32i) loc(#loc8)
  ^bb2:  // pred: ^bb0
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
    %19 = cir.const #cir.int<30> : !s32i loc(#loc8)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc8)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc8)
    %23 = cir.const #cir.int<15> : !s32i loc(#loc8)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc8)
    %25 = cir.binop(xor, %20, %24) : !u32i loc(#loc8)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc8)
    %28 = cir.binop(xor, %25, %27) : !u32i loc(#loc8)
    %29 = cir.unary(minus, %28) : !u32i, !u32i loc(#loc8)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc8)
    %32 = cir.binop(sub, %29, %31) : !u32i loc(#loc8)
    cir.br ^bb3(%32 : !u32i) loc(#loc8)
  ^bb3(%33: !u32i loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":27:12)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc8)
  ^bb4:  // pred: ^bb3
    %34 = cir.cast(integral, %33 : !u32i), !s32i loc(#loc8)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    cir.store %34, %35 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.return loc(#loc4)
  } loc(#loc52)
  cir.func private @printHexCharLine(!s8i) loc(#loc55)
  cir.func @_ZN52CWE197_Numeric_Truncation_Error__int_rand_to_char_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc57)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc58)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc19)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.call @_ZN52CWE197_Numeric_Truncation_Error__int_rand_to_char_43L9badSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc21)
    cir.br ^bb1 loc(#loc60)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc15)
    cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc57)
    %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc24)
    cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc25)
    cir.br ^bb2 loc(#loc23)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc13)
  } loc(#loc56)
  cir.func internal private @_ZN52CWE197_Numeric_Truncation_Error__int_rand_to_char_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc28, #loc29])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc62)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc30)
    %1 = cir.const #cir.int<127> : !s32i loc(#loc31)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc32)
    %3 = cir.binop(sub, %1, %2) nsw : !s32i loc(#loc31)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.return loc(#loc27)
  } loc(#loc61)
  cir.func internal private @_ZN52CWE197_Numeric_Truncation_Error__int_rand_to_char_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc65)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc66)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc41)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.call @_ZN52CWE197_Numeric_Truncation_Error__int_rand_to_char_43L13goodG2BSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc43)
    cir.br ^bb1 loc(#loc68)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc37)
    cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc65)
    %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc46)
    cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc47)
    cir.br ^bb2 loc(#loc45)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc35)
  } loc(#loc64)
  cir.func @_ZN52CWE197_Numeric_Truncation_Error__int_rand_to_char_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE197_Numeric_Truncation_Error__int_rand_to_char_43L7goodG2BEv() : () -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc69)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":24:1)
#loc4 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":28:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":25:1)
#loc9 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":27:5)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc12 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":30:1)
#loc13 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":41:1)
#loc14 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":38:9)
#loc15 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":38:31)
#loc16 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":32:5)
#loc17 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":32:9)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":34:13)
#loc19 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":34:12)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":34:5)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":35:5)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":36:5)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":40:5)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":39:26)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":39:9)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":48:1)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":52:1)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":49:1)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":51:12)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":51:21)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":51:5)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":54:1)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":65:1)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":62:9)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":62:31)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":56:5)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":56:9)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":58:13)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":58:12)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":58:5)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":59:5)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":60:5)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":64:5)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":63:26)
#loc47 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":63:9)
#loc48 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":67:1)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":70:1)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_char_43.cpp":69:5)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc54 = loc(fused[#loc9, #loc8])
#loc55 = loc(fused[#loc10, #loc11])
#loc56 = loc(fused[#loc12, #loc13])
#loc57 = loc(fused[#loc14, #loc15])
#loc58 = loc(fused[#loc16, #loc17])
#loc59 = loc(fused[#loc20, #loc18])
#loc60 = loc(fused[#loc22, #loc23])
#loc61 = loc(fused[#loc26, #loc27])
#loc63 = loc(fused[#loc33, #loc32])
#loc64 = loc(fused[#loc34, #loc35])
#loc65 = loc(fused[#loc36, #loc37])
#loc66 = loc(fused[#loc38, #loc39])
#loc67 = loc(fused[#loc42, #loc40])
#loc68 = loc(fused[#loc44, #loc45])
#loc69 = loc(fused[#loc48, #loc49])
