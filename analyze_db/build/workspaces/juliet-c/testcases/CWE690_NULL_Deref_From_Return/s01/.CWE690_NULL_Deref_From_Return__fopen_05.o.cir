!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc83)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc84)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc86)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc87)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc15)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc15)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc88)
    cir.scope {
      %8 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc83)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc20)
      cir.if %10 {
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
        %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc23)
      } loc(#loc90)
    } loc(#loc89)
    cir.return loc(#loc10)
  } loc(#loc85)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc92)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc93)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc91)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc94)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc39)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc98)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc41)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc42)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc42)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc43)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc43)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc41)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc99)
    cir.scope {
      %8 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc94)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc48)
      cir.if %10 {
        %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      } else {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc56)
          %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc103)
          cir.if %14 {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
            %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc59)
          } loc(#loc104)
        } loc(#loc102)
      } loc(#loc101)
    } loc(#loc100)
    cir.return loc(#loc36)
  } loc(#loc96)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc64)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc107)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc66)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc67)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc67)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc68)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc68)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc66)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc108)
    cir.scope {
      %8 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc83)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc73)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc73)
      cir.if %10 {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc78)
          %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc112)
          cir.if %14 {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
            %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc81)
          } loc(#loc113)
        } loc(#loc111)
      } loc(#loc110)
    } loc(#loc109)
    cir.return loc(#loc61)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_05.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":33:18)
#loc4 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":33:30)
#loc5 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":22:1)
#loc6 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":22:25)
#loc7 = loc("/usr/include/stdio.h":184:1)
#loc8 = loc("/usr/include/stdio.h":184:36)
#loc9 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":27:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":39:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":29:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":29:12)
#loc13 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":31:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":31:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":33:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":33:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":33:34)
#loc18 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":34:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":38:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":34:8)
#loc21 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":35:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":37:16)
#loc23 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":37:9)
#loc24 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":86:1)
#loc25 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":90:1)
#loc26 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":88:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":88:14)
#loc28 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":89:5)
#loc29 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":89:14)
#loc30 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":23:1)
#loc31 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":23:26)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":56:19)
#loc35 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":46:1)
#loc36 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":66:1)
#loc37 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":48:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":48:12)
#loc39 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":50:12)
#loc40 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":50:5)
#loc41 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":52:12)
#loc42 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":52:18)
#loc43 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":52:30)
#loc44 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":52:5)
#loc45 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":52:34)
#loc46 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":53:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":65:5)
#loc48 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":53:8)
#loc49 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":54:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":57:5)
#loc51 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":59:5)
#loc52 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":56:9)
#loc53 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":61:9)
#loc54 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":64:9)
#loc55 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":61:13)
#loc56 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":61:21)
#loc57 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":62:9)
#loc58 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":63:20)
#loc59 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":63:13)
#loc60 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":69:1)
#loc61 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":84:1)
#loc62 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":71:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":71:12)
#loc64 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":73:12)
#loc65 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":73:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":75:12)
#loc67 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":75:18)
#loc68 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":75:30)
#loc69 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":75:5)
#loc70 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":75:34)
#loc71 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":76:5)
#loc72 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":83:5)
#loc73 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":76:8)
#loc74 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":77:5)
#loc75 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":79:9)
#loc76 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":82:9)
#loc77 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":79:13)
#loc78 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":79:21)
#loc79 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":80:9)
#loc80 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":81:20)
#loc81 = loc("CWE690_NULL_Deref_From_Return__fopen_05.c":81:13)
#loc82 = loc(fused[#loc1, #loc2])
#loc83 = loc(fused[#loc5, #loc6])
#loc84 = loc(fused[#loc7, #loc8])
#loc85 = loc(fused[#loc9, #loc10])
#loc86 = loc(fused[#loc11, #loc12])
#loc87 = loc(fused[#loc14, #loc13])
#loc88 = loc(fused[#loc16, #loc17])
#loc89 = loc(fused[#loc18, #loc19])
#loc90 = loc(fused[#loc21, #loc19])
#loc91 = loc(fused[#loc24, #loc25])
#loc92 = loc(fused[#loc26, #loc27])
#loc93 = loc(fused[#loc28, #loc29])
#loc94 = loc(fused[#loc30, #loc31])
#loc95 = loc(fused[#loc32, #loc33])
#loc96 = loc(fused[#loc35, #loc36])
#loc97 = loc(fused[#loc37, #loc38])
#loc98 = loc(fused[#loc40, #loc39])
#loc99 = loc(fused[#loc44, #loc45])
#loc100 = loc(fused[#loc46, #loc47])
#loc101 = loc(fused[#loc49, #loc50, #loc51, #loc47])
#loc102 = loc(fused[#loc53, #loc54])
#loc103 = loc(fused[#loc55, #loc56])
#loc104 = loc(fused[#loc57, #loc54])
#loc105 = loc(fused[#loc60, #loc61])
#loc106 = loc(fused[#loc62, #loc63])
#loc107 = loc(fused[#loc65, #loc64])
#loc108 = loc(fused[#loc69, #loc70])
#loc109 = loc(fused[#loc71, #loc72])
#loc110 = loc(fused[#loc74, #loc72])
#loc111 = loc(fused[#loc75, #loc76])
#loc112 = loc(fused[#loc77, #loc78])
#loc113 = loc(fused[#loc79, #loc76])
