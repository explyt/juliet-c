!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc105)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc106)
  cir.func private @CWE415_Double_Free__malloc_free_int64_t_66b_badSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc107)
  cir.func no_proto @CWE415_Double_Free__malloc_free_int64_t_66_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.array<!cir.ptr<!s64i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc110)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc111)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc18)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc112)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc113)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc114)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc115)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc26)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s64i>, !cir.bool loc(#loc117)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc30)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc118)
    } loc(#loc116)
    %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc31)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc32)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc34)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc35)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!cir.ptr<!s64i>>, %14 : !s32i), !cir.ptr<!cir.ptr<!s64i>> loc(#loc35)
    cir.store %13, %16 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc119)
    %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc36)
    cir.call @CWE415_Double_Free__malloc_free_int64_t_66b_badSink(%17) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc37)
    cir.return loc(#loc10)
  } loc(#loc108)
  cir.func no_proto @CWE415_Double_Free__malloc_free_int64_t_66_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc122)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc120)
  cir.func private @CWE415_Double_Free__malloc_free_int64_t_66b_goodG2BSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc123)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.alloca !cir.array<!cir.ptr<!s64i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc126)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc127)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc54)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc55)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc128)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc129)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc54)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc130)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc131)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc62)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc63)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !cir.bool loc(#loc133)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc65)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc67)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
      } loc(#loc134)
    } loc(#loc132)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc68)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc70)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!cir.ptr<!s64i>>, %11 : !s32i), !cir.ptr<!cir.ptr<!s64i>> loc(#loc70)
    cir.store %10, %13 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc135)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc71)
    cir.call @CWE415_Double_Free__malloc_free_int64_t_66b_goodG2BSink(%14) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc72)
    cir.return loc(#loc47)
  } loc(#loc124)
  cir.func private @CWE415_Double_Free__malloc_free_int64_t_66b_goodB2GSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc136)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.array<!cir.ptr<!s64i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc139)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc140)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc83)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc84)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc141)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc142)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc143)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc144)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc91)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc92)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s64i>, !cir.bool loc(#loc146)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc94)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc96)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
      } loc(#loc147)
    } loc(#loc145)
    %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc97)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc98)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc98)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc99)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc100)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc101)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!cir.ptr<!s64i>>, %14 : !s32i), !cir.ptr<!cir.ptr<!s64i>> loc(#loc101)
    cir.store %13, %16 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc148)
    %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc102)
    cir.call @CWE415_Double_Free__malloc_free_int64_t_66b_goodB2GSink(%17) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc103)
    cir.return loc(#loc76)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_66a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":25:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":25:79)
#loc9 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":27:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":40:1)
#loc11 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":29:5)
#loc12 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":29:15)
#loc13 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":30:5)
#loc14 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":30:26)
#loc15 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":32:12)
#loc16 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":32:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":33:23)
#loc18 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":33:30)
#loc19 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":33:34)
#loc20 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":33:48)
#loc21 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":33:49)
#loc22 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":33:5)
#loc23 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":34:5)
#loc24 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":34:33)
#loc25 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":34:9)
#loc26 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":34:17)
#loc27 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":34:23)
#loc28 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":34:24)
#loc29 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":34:30)
#loc30 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":34:29)
#loc31 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":36:5)
#loc32 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":36:10)
#loc33 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":38:20)
#loc34 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":38:15)
#loc35 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":38:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":39:57)
#loc37 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":39:5)
#loc38 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":79:1)
#loc39 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":83:1)
#loc40 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":81:5)
#loc41 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":81:13)
#loc42 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":82:5)
#loc43 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":82:13)
#loc44 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":47:1)
#loc45 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":47:83)
#loc46 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":49:1)
#loc47 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":60:1)
#loc48 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":51:5)
#loc49 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":51:15)
#loc50 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":52:5)
#loc51 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":52:26)
#loc52 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":54:12)
#loc53 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":54:5)
#loc54 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":55:23)
#loc55 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":55:30)
#loc56 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":55:34)
#loc57 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":55:48)
#loc58 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":55:49)
#loc59 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":55:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":56:5)
#loc61 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":56:33)
#loc62 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":56:9)
#loc63 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":56:17)
#loc64 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":56:23)
#loc65 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":56:24)
#loc66 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":56:30)
#loc67 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":56:29)
#loc68 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":58:20)
#loc69 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":58:15)
#loc70 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":58:5)
#loc71 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":59:61)
#loc72 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":59:5)
#loc73 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":63:1)
#loc74 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":63:83)
#loc75 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":65:1)
#loc76 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":77:1)
#loc77 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":67:5)
#loc78 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":67:15)
#loc79 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":68:5)
#loc80 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":68:26)
#loc81 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":70:12)
#loc82 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":70:5)
#loc83 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":71:23)
#loc84 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":71:30)
#loc85 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":71:34)
#loc86 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":71:48)
#loc87 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":71:49)
#loc88 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":71:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":72:5)
#loc90 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":72:33)
#loc91 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":72:9)
#loc92 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":72:17)
#loc93 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":72:23)
#loc94 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":72:24)
#loc95 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":72:30)
#loc96 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":72:29)
#loc97 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":74:5)
#loc98 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":74:10)
#loc99 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":75:20)
#loc100 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":75:15)
#loc101 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":75:5)
#loc102 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":76:61)
#loc103 = loc("CWE415_Double_Free__malloc_free_int64_t_66a.c":76:5)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc3, #loc4])
#loc106 = loc(fused[#loc5, #loc6])
#loc107 = loc(fused[#loc7, #loc8])
#loc108 = loc(fused[#loc9, #loc10])
#loc109 = loc(fused[#loc11, #loc12])
#loc110 = loc(fused[#loc13, #loc14])
#loc111 = loc(fused[#loc16, #loc15])
#loc112 = loc(fused[#loc19, #loc20])
#loc113 = loc(fused[#loc18, #loc20])
#loc114 = loc(fused[#loc17, #loc21])
#loc115 = loc(fused[#loc22, #loc21])
#loc116 = loc(fused[#loc23, #loc24])
#loc117 = loc(fused[#loc25, #loc26])
#loc118 = loc(fused[#loc27, #loc24])
#loc119 = loc(fused[#loc35, #loc33])
#loc120 = loc(fused[#loc38, #loc39])
#loc121 = loc(fused[#loc40, #loc41])
#loc122 = loc(fused[#loc42, #loc43])
#loc123 = loc(fused[#loc44, #loc45])
#loc124 = loc(fused[#loc46, #loc47])
#loc125 = loc(fused[#loc48, #loc49])
#loc126 = loc(fused[#loc50, #loc51])
#loc127 = loc(fused[#loc53, #loc52])
#loc128 = loc(fused[#loc56, #loc57])
#loc129 = loc(fused[#loc55, #loc57])
#loc130 = loc(fused[#loc54, #loc58])
#loc131 = loc(fused[#loc59, #loc58])
#loc132 = loc(fused[#loc60, #loc61])
#loc133 = loc(fused[#loc62, #loc63])
#loc134 = loc(fused[#loc64, #loc61])
#loc135 = loc(fused[#loc70, #loc68])
#loc136 = loc(fused[#loc73, #loc74])
#loc137 = loc(fused[#loc75, #loc76])
#loc138 = loc(fused[#loc77, #loc78])
#loc139 = loc(fused[#loc79, #loc80])
#loc140 = loc(fused[#loc82, #loc81])
#loc141 = loc(fused[#loc85, #loc86])
#loc142 = loc(fused[#loc84, #loc86])
#loc143 = loc(fused[#loc83, #loc87])
#loc144 = loc(fused[#loc88, #loc87])
#loc145 = loc(fused[#loc89, #loc90])
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc93, #loc90])
#loc148 = loc(fused[#loc101, #loc99])
