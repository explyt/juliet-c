!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":100:48)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":404:10)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":404:14)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":404:20)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":404:32)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":193:48)
#loc450 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":294:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc634 = loc(fused[#loc182, #loc183])
#loc635 = loc(fused[#loc184, #loc185])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_multiply_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc560)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc561)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc562)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc563)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc564)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc565)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc566)
  cir.func private @close(!s32i) -> !s32i loc(#loc567)
  cir.func private @printIntLine(!s32i) loc(#loc568)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_multiply_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc570)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc571)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc572)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc573)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc574)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc575)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc576)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc35)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc577)
    cir.br ^bb1 loc(#loc578)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<5> : !s32i loc(#loc39)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc40)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc579)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc580)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc581)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc26)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc572)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc28)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc573)
    cir.br ^bb4 loc(#loc582)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc582)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc46)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc47)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc49)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc583)
    cir.br ^bb7 loc(#loc584)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc56)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc585)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc586)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc58)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc54)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc587)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc588)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc589)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc66)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc590)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc69)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc591)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc73)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc73)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc592)
    cir.br ^bb11 loc(#loc593)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc594)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc595)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc595)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc86)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc596)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc597)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc88)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc79)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc598)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc94)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc599)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc600)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc96)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc90)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc601)
    cir.br ^bb19 loc(#loc602)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc106)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc603)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc604)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc108)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc104)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc111)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc111)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc111)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc111)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc111)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc111)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc111)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc112)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc605)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc114)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc606)
    cir.br ^bb23 loc(#loc607)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc120)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc608)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc121)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc121)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc121)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc609)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc121)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc121)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc121)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc121)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc121)
  ^bb28(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":100:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc121)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc121)
  ^bb30(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":100:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc121)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc610)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc125)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc118)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc126)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc611)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc612)
    cir.br ^bb5 loc(#loc45)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc45)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc613)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc136)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc614)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc615)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc139)
    cir.br ^bb39 loc(#loc134)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc134)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc616)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc143)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc617)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc618)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc146)
    cir.br ^bb43 loc(#loc141)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc141)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc43)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc38)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc38)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc619)
  ^bb48:  // pred: ^bb47
    %108 = cir.const #cir.int<5> : !s32i loc(#loc149)
    %109 = cir.const #cir.int<5> : !s32i loc(#loc150)
    %110 = cir.cmp(eq, %108, %109) : !s32i, !cir.bool loc(#loc620)
    cir.brcond %110 ^bb49, ^bb54 loc(#loc621)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc622)
  ^bb50:  // pred: ^bb49
    %111 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %112 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %113 = cir.cmp(gt, %111, %112) : !s32i, !cir.bool loc(#loc623)
    cir.brcond %113 ^bb51, ^bb52 loc(#loc624)
  ^bb51:  // pred: ^bb50
    %114 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %115 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %116 = cir.binop(mul, %114, %115) nsw : !s32i loc(#loc157)
    cir.store %116, %5 : !s32i, !cir.ptr<!s32i> loc(#loc575)
    %117 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call @printIntLine(%117) : (!s32i) -> () loc(#loc159)
    cir.br ^bb52 loc(#loc153)
  ^bb52:  // 2 preds: ^bb50, ^bb51
    cir.br ^bb53 loc(#loc153)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc148)
  ^bb54:  // 2 preds: ^bb48, ^bb53
    cir.br ^bb55 loc(#loc148)
  ^bb55:  // pred: ^bb54
    cir.return loc(#loc20)
  } loc(#loc569)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_multiply_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc626)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc627)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc164)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc628)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc166)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc629)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc168)
    cir.return loc(#loc161)
  } loc(#loc625)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc630)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc631)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc632)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc179)
  cir.func @main(%arg0: !s32i loc(fused[#loc182, #loc183]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc184, #loc185])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc634)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc635)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc181)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc186)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc187)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc188)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc189)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc176)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_multiply_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc636)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_multiply_06_good() : () -> () loc(#loc191)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc177)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc178)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_multiply_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc637)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_multiply_06_bad() : () -> () loc(#loc195)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc179)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc198)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc638)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc638)
    cir.return %17 : !s32i loc(#loc638)
  } loc(#loc633)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc201)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc640)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc641)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc642)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc643)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc644)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc645)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc646)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc218)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc647)
    cir.br ^bb1 loc(#loc648)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<5> : !s32i loc(#loc222)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc223)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc649)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc650)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc651)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc209)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc642)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc211)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc643)
    cir.br ^bb4 loc(#loc652)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc652)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc229)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc229)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc229)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc230)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc231)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc232)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc233)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc653)
    cir.br ^bb7 loc(#loc654)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc239)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc655)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc656)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc241)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc237)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc657)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc244)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc658)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc659)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc249)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc249)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc660)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc251)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc251)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc661)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc253)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc253)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc254)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc662)
    cir.br ^bb11 loc(#loc663)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc664)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc665)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc665)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc264)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc265)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc265)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc666)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc667)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc267)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc258)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc668)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc271)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc272)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc273)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc669)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc670)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc275)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc269)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc277)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc278)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc279)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc671)
    cir.br ^bb19 loc(#loc672)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc285)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc285)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc673)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc674)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc287)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc283)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc289)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc289)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc290)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc290)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc290)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc290)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc290)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc290)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc290)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc291)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc291)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc675)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc292)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc293)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc293)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc676)
    cir.br ^bb23 loc(#loc677)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc298)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc299)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc299)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc678)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc300)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc300)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc300)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc302)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc679)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc300)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc300)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc300)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc300)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc300)
  ^bb28(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":193:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc300)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc300)
  ^bb30(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":193:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc300)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc680)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc304)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc297)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc305)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc305)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc306)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc307)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc307)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc681)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc308)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc309)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc682)
    cir.br ^bb5 loc(#loc228)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc228)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc683)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc314)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc315)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc315)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc684)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc685)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc317)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc318)
    cir.br ^bb39 loc(#loc313)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc313)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc686)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc322)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc322)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc687)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc688)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc324)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc325)
    cir.br ^bb43 loc(#loc320)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc320)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc226)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc221)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc221)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc689)
  ^bb48:  // pred: ^bb47
    %108 = cir.const #cir.int<5> : !s32i loc(#loc328)
    %109 = cir.const #cir.int<5> : !s32i loc(#loc329)
    %110 = cir.cmp(ne, %108, %109) : !s32i, !cir.bool loc(#loc690)
    cir.brcond %110 ^bb49, ^bb50 loc(#loc691)
  ^bb49:  // pred: ^bb48
    %111 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc200)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc333)
    cir.br ^bb60 loc(#loc331)
  ^bb50:  // pred: ^bb48
    cir.br ^bb51 loc(#loc692)
  ^bb51:  // pred: ^bb50
    %113 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    %114 = cir.const #cir.int<0> : !s32i loc(#loc337)
    %115 = cir.cmp(gt, %113, %114) : !s32i, !cir.bool loc(#loc693)
    cir.brcond %115 ^bb52, ^bb58 loc(#loc694)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc695)
  ^bb53:  // pred: ^bb52
    %116 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc341)
    %117 = cir.const #cir.int<2147483647> : !s32i loc(#loc342)
    %118 = cir.const #cir.int<2> : !s32i loc(#loc343)
    %119 = cir.binop(div, %117, %118) : !s32i loc(#loc696)
    %120 = cir.cmp(lt, %116, %119) : !s32i, !cir.bool loc(#loc697)
    cir.brcond %120 ^bb54, ^bb55 loc(#loc698)
  ^bb54:  // pred: ^bb53
    %121 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc348)
    %122 = cir.const #cir.int<2> : !s32i loc(#loc215)
    %123 = cir.binop(mul, %121, %122) nsw : !s32i loc(#loc348)
    cir.store %123, %5 : !s32i, !cir.ptr<!s32i> loc(#loc645)
    %124 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc349)
    cir.call @printIntLine(%124) : (!s32i) -> () loc(#loc350)
    cir.br ^bb56 loc(#loc346)
  ^bb55:  // pred: ^bb53
    %125 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc201)
    %126 = cir.cast(array_to_ptrdecay, %125 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%126) : (!cir.ptr<!s8i>) -> () loc(#loc351)
    cir.br ^bb56 loc(#loc340)
  ^bb56:  // 2 preds: ^bb54, ^bb55
    cir.br ^bb57 loc(#loc340)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc335)
  ^bb58:  // 2 preds: ^bb51, ^bb57
    cir.br ^bb59 loc(#loc335)
  ^bb59:  // pred: ^bb58
    cir.br ^bb60 loc(#loc327)
  ^bb60:  // 2 preds: ^bb49, ^bb59
    cir.br ^bb61 loc(#loc327)
  ^bb61:  // pred: ^bb60
    cir.return loc(#loc203)
  } loc(#loc639)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc700)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc701)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc702)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc703)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc704)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc705)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc706)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc368)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc707)
    cir.br ^bb1 loc(#loc708)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<5> : !s32i loc(#loc372)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc373)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc709)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc710)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc711)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc359)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc359)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc702)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc361)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc361)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc703)
    cir.br ^bb4 loc(#loc712)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc712)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc379)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc379)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc379)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc380)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc381)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc382)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc383)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc713)
    cir.br ^bb7 loc(#loc714)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc388)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc389)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc389)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc715)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc716)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc391)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc387)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc717)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc394)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc718)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc719)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc399)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc399)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc720)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc401)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc401)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc721)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc403)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc403)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc404)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc722)
    cir.br ^bb11 loc(#loc723)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc409)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc724)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc725)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc725)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc414)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc415)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc415)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc726)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc727)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc417)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc408)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc728)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc421)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc422)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc423)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc423)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc729)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc730)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc425)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc419)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc426)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc427)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc428)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc429)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc731)
    cir.br ^bb19 loc(#loc732)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc434)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc435)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc435)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc733)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc734)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc437)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc433)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc438)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc439)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc439)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc440)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc440)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc440)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc440)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc440)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc440)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc440)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc441)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc441)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc735)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc442)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc443)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc443)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc736)
    cir.br ^bb23 loc(#loc737)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc448)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc449)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc449)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc738)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc450)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc450)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc450)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc451)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc452)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc739)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc450)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc450)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc450)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc450)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc450)
  ^bb28(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":294:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc450)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc450)
  ^bb30(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":294:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc450)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc740)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc454)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc447)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc455)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc455)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc456)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc457)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc457)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc741)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc458)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc459)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc742)
    cir.br ^bb5 loc(#loc378)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc378)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc743)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc464)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc465)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc465)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc744)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc745)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc467)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc468)
    cir.br ^bb39 loc(#loc463)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc463)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc746)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc471)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc472)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc472)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc747)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc748)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc474)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc475)
    cir.br ^bb43 loc(#loc470)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc470)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc376)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc371)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc371)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc749)
  ^bb48:  // pred: ^bb47
    %108 = cir.const #cir.int<5> : !s32i loc(#loc478)
    %109 = cir.const #cir.int<5> : !s32i loc(#loc479)
    %110 = cir.cmp(eq, %108, %109) : !s32i, !cir.bool loc(#loc750)
    cir.brcond %110 ^bb49, ^bb59 loc(#loc751)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc752)
  ^bb50:  // pred: ^bb49
    %111 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc483)
    %112 = cir.const #cir.int<0> : !s32i loc(#loc484)
    %113 = cir.cmp(gt, %111, %112) : !s32i, !cir.bool loc(#loc753)
    cir.brcond %113 ^bb51, ^bb57 loc(#loc754)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc755)
  ^bb52:  // pred: ^bb51
    %114 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc488)
    %115 = cir.const #cir.int<2147483647> : !s32i loc(#loc489)
    %116 = cir.const #cir.int<2> : !s32i loc(#loc490)
    %117 = cir.binop(div, %115, %116) : !s32i loc(#loc756)
    %118 = cir.cmp(lt, %114, %117) : !s32i, !cir.bool loc(#loc757)
    cir.brcond %118 ^bb53, ^bb54 loc(#loc758)
  ^bb53:  // pred: ^bb52
    %119 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc495)
    %120 = cir.const #cir.int<2> : !s32i loc(#loc365)
    %121 = cir.binop(mul, %119, %120) nsw : !s32i loc(#loc495)
    cir.store %121, %5 : !s32i, !cir.ptr<!s32i> loc(#loc705)
    %122 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc496)
    cir.call @printIntLine(%122) : (!s32i) -> () loc(#loc497)
    cir.br ^bb55 loc(#loc493)
  ^bb54:  // pred: ^bb52
    %123 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc498)
    %124 = cir.cast(array_to_ptrdecay, %123 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc498)
    cir.call @printLine(%124) : (!cir.ptr<!s8i>) -> () loc(#loc499)
    cir.br ^bb55 loc(#loc487)
  ^bb55:  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc487)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc482)
  ^bb57:  // 2 preds: ^bb50, ^bb56
    cir.br ^bb58 loc(#loc482)
  ^bb58:  // pred: ^bb57
    cir.br ^bb59 loc(#loc477)
  ^bb59:  // 2 preds: ^bb48, ^bb58
    cir.br ^bb60 loc(#loc477)
  ^bb60:  // pred: ^bb59
    cir.return loc(#loc353)
  } loc(#loc699)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc760)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc761)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc506)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc762)
    cir.br ^bb1 loc(#loc763)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc510)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc511)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc764)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc765)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc515)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc515)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc516)
    cir.br ^bb4 loc(#loc513)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc517)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc766)
    cir.br ^bb4 loc(#loc509)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc509)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc767)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<5> : !s32i loc(#loc521)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc522)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc768)
    cir.brcond %11 ^bb7, ^bb12 loc(#loc769)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc770)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc526)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc527)
    %14 = cir.cmp(gt, %12, %13) : !s32i, !cir.bool loc(#loc771)
    cir.brcond %14 ^bb9, ^bb10 loc(#loc772)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc529)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc503)
    %17 = cir.binop(mul, %15, %16) nsw : !s32i loc(#loc529)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc760)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc530)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc531)
    cir.br ^bb10 loc(#loc525)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc525)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc520)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc520)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc501)
  } loc(#loc759)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc774)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc775)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc538)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc776)
    cir.br ^bb1 loc(#loc777)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc542)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc543)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc778)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc779)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc545)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc780)
    cir.br ^bb3 loc(#loc541)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc541)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc781)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<5> : !s32i loc(#loc549)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc550)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc782)
    cir.brcond %9 ^bb6, ^bb11 loc(#loc783)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc784)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc554)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc555)
    %12 = cir.cmp(gt, %10, %11) : !s32i, !cir.bool loc(#loc785)
    cir.brcond %12 ^bb8, ^bb9 loc(#loc786)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc557)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc535)
    %15 = cir.binop(mul, %13, %14) nsw : !s32i loc(#loc557)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc774)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc558)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc559)
    cir.br ^bb9 loc(#loc553)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc553)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc548)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc548)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc533)
  } loc(#loc773)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":49:1)
#loc20 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":135:1)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":61:13)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":61:17)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":62:13)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":62:32)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":63:13)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":63:35)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":64:13)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":64:35)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":65:13)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":65:45)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":131:13)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":131:33)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":51:5)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":51:9)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":53:12)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":53:5)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":54:5)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":125:5)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":54:8)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":54:27)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":55:5)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":56:9)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":124:9)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":66:13)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":109:21)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":109:20)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":76:39)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":76:48)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":76:61)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":76:32)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":76:17)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":76:72)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":77:17)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":80:17)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":77:21)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":77:37)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":78:17)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":79:21)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":81:24)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":81:25)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":81:34)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":81:37)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":81:51)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":81:17)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":81:52)
#loc66 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":82:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":82:17)
#loc69 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":83:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":83:17)
#loc73 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":84:42)
#loc74 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":84:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":84:17)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":84:50)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":85:17)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":88:17)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":85:26)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":85:58)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":85:59)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":85:68)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":85:82)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":85:21)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":85:88)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":86:17)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":87:21)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":89:17)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":92:17)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":89:28)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":89:42)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":89:21)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":89:61)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":90:17)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":91:21)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":93:39)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":93:53)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":93:59)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":93:32)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":93:17)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":93:63)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":94:17)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":97:17)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":94:21)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":94:37)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":95:17)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":96:21)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":99:35)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":99:49)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":99:62)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":99:80)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":99:83)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":99:30)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":99:17)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":99:84)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":100:17)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":103:17)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":100:21)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":100:35)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":100:51)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":100:65)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":101:17)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":102:21)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":105:43)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":105:29)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":105:17)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":107:29)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":107:24)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":107:17)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":107:40)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":110:13)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":113:13)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":110:17)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":110:33)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":111:13)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":112:30)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":112:17)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":114:13)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":117:13)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":114:17)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":114:33)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":115:13)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":116:30)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":116:17)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":126:5)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":134:5)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":126:8)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":126:27)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":127:5)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":128:9)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":133:9)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":128:12)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":128:19)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":129:9)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":131:26)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":132:26)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":132:13)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":387:1)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":393:1)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":389:5)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":389:14)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":390:5)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":390:14)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":391:5)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":391:14)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":392:5)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":392:14)
#loc170 = loc("/usr/include/stdlib.h":575:1)
#loc171 = loc("/usr/include/stdlib.h":575:41)
#loc172 = loc("/usr/include/time.h":76:1)
#loc173 = loc("/usr/include/time.h":76:38)
#loc174 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc175 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":409:15)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":411:15)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":414:15)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":416:15)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":404:1)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":419:1)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":405:1)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":407:27)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":407:22)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":407:5)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":409:5)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":410:5)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":410:65)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":411:5)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":414:5)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":415:5)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":415:64)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":416:5)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":418:12)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":418:5)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":222:19)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":236:27)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":142:1)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":240:1)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":154:13)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":154:17)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":155:13)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":155:32)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":156:13)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":156:35)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":157:13)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":157:35)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":158:13)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":158:45)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":231:17)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":231:37)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":144:5)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":144:9)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":146:12)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":146:5)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":147:5)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":218:5)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":147:8)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":147:27)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":148:5)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":149:9)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":217:9)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":159:13)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":202:21)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":202:20)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":169:39)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":169:48)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":169:61)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":169:32)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":169:17)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":169:72)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":170:17)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":173:17)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":170:21)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":170:37)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":171:17)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":172:21)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":174:24)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":174:25)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":174:34)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":174:37)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":174:51)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":174:17)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":174:52)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":175:38)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":175:17)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":176:43)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":176:17)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":177:42)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":177:36)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":177:17)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":177:50)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":178:17)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":181:17)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":178:26)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":178:58)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":178:59)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":178:68)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":178:82)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":178:21)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":178:88)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":179:17)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":180:21)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":182:17)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":185:17)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":182:28)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":182:42)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":182:21)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":182:61)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":183:17)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":184:21)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":186:39)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":186:53)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":186:59)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":186:32)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":186:17)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":186:63)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":187:17)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":190:17)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":187:21)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":187:37)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":188:17)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":189:21)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":192:35)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":192:49)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":192:62)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":192:80)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":192:83)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":192:30)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":192:17)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":192:84)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":193:17)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":196:17)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":193:21)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":193:35)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":193:51)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":193:65)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":194:17)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":195:21)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":198:43)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":198:29)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":198:17)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":200:29)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":200:24)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":200:17)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":200:40)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":203:13)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":206:13)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":203:17)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":203:33)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":204:13)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":205:30)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":205:17)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":207:13)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":210:13)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":207:17)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":207:33)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":208:13)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":209:30)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":209:17)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":219:5)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":239:5)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":219:8)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":219:27)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":220:5)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":223:5)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":225:5)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":222:9)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":226:9)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":238:9)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":226:12)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":226:19)
#loc338 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":227:9)
#loc339 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":229:13)
#loc340 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":237:13)
#loc341 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":229:17)
#loc342 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":229:25)
#loc343 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":229:33)
#loc344 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":229:34)
#loc345 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":230:13)
#loc346 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":233:13)
#loc347 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":235:13)
#loc348 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":231:30)
#loc349 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":232:30)
#loc350 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":232:17)
#loc351 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":236:17)
#loc352 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":243:1)
#loc353 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":336:1)
#loc354 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":255:13)
#loc355 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":255:17)
#loc356 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":256:13)
#loc357 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":256:32)
#loc358 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":257:13)
#loc359 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":257:35)
#loc360 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":258:13)
#loc361 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":258:35)
#loc362 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":259:13)
#loc363 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":259:45)
#loc364 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":327:17)
#loc365 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":327:37)
#loc366 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":245:5)
#loc367 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":245:9)
#loc368 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":247:12)
#loc369 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":247:5)
#loc370 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":248:5)
#loc371 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":319:5)
#loc372 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":248:8)
#loc373 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":248:27)
#loc374 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":249:5)
#loc375 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":250:9)
#loc376 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":318:9)
#loc377 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":260:13)
#loc378 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":303:21)
#loc379 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":303:20)
#loc380 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":270:39)
#loc381 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":270:48)
#loc382 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":270:61)
#loc383 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":270:32)
#loc384 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":270:17)
#loc385 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":270:72)
#loc386 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":271:17)
#loc387 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":274:17)
#loc388 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":271:21)
#loc389 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":271:37)
#loc390 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":272:17)
#loc391 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":273:21)
#loc392 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":275:24)
#loc393 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":275:25)
#loc394 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":275:34)
#loc395 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":275:37)
#loc396 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":275:51)
#loc397 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":275:17)
#loc398 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":275:52)
#loc399 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":276:38)
#loc400 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":276:17)
#loc401 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":277:43)
#loc402 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":277:17)
#loc403 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":278:42)
#loc404 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":278:36)
#loc405 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":278:17)
#loc406 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":278:50)
#loc407 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":279:17)
#loc408 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":282:17)
#loc409 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":279:26)
#loc410 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":279:58)
#loc411 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":279:59)
#loc412 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":279:68)
#loc413 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":279:82)
#loc414 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":279:21)
#loc415 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":279:88)
#loc416 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":280:17)
#loc417 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":281:21)
#loc418 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":283:17)
#loc419 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":286:17)
#loc420 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":283:28)
#loc421 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":283:42)
#loc422 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":283:21)
#loc423 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":283:61)
#loc424 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":284:17)
#loc425 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":285:21)
#loc426 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":287:39)
#loc427 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":287:53)
#loc428 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":287:59)
#loc429 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":287:32)
#loc430 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":287:17)
#loc431 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":287:63)
#loc432 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":288:17)
#loc433 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":291:17)
#loc434 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":288:21)
#loc435 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":288:37)
#loc436 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":289:17)
#loc437 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":290:21)
#loc438 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":293:35)
#loc439 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":293:49)
#loc440 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":293:62)
#loc441 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":293:80)
#loc442 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":293:83)
#loc443 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":293:30)
#loc444 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":293:17)
#loc445 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":293:84)
#loc446 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":294:17)
#loc447 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":297:17)
#loc448 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":294:21)
#loc449 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":294:35)
#loc451 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":294:51)
#loc452 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":294:65)
#loc453 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":295:17)
#loc454 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":296:21)
#loc455 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":299:43)
#loc456 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":299:29)
#loc457 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":299:17)
#loc458 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":301:29)
#loc459 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":301:24)
#loc460 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":301:17)
#loc461 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":301:40)
#loc462 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":304:13)
#loc463 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":307:13)
#loc464 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":304:17)
#loc465 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":304:33)
#loc466 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":305:13)
#loc467 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":306:30)
#loc468 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":306:17)
#loc469 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":308:13)
#loc470 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":311:13)
#loc471 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":308:17)
#loc472 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":308:33)
#loc473 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":309:13)
#loc474 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":310:30)
#loc475 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":310:17)
#loc476 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":320:5)
#loc477 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":335:5)
#loc478 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":320:8)
#loc479 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":320:27)
#loc480 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":321:5)
#loc481 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":322:9)
#loc482 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":334:9)
#loc483 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":322:12)
#loc484 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":322:19)
#loc485 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":323:9)
#loc486 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":325:13)
#loc487 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":333:13)
#loc488 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":325:17)
#loc489 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":325:25)
#loc490 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":325:33)
#loc491 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":325:34)
#loc492 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":326:13)
#loc493 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":329:13)
#loc494 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":331:13)
#loc495 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":327:30)
#loc496 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":328:30)
#loc497 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":328:17)
#loc498 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":332:27)
#loc499 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":332:17)
#loc500 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":339:1)
#loc501 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":363:1)
#loc502 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":359:13)
#loc503 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":359:33)
#loc504 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":341:5)
#loc505 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":341:9)
#loc506 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":343:12)
#loc507 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":343:5)
#loc508 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":344:5)
#loc509 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":353:5)
#loc510 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":344:8)
#loc511 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":344:27)
#loc512 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":345:5)
#loc513 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":348:5)
#loc514 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":350:5)
#loc515 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":347:19)
#loc516 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":347:9)
#loc517 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":352:16)
#loc518 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":352:9)
#loc519 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":354:5)
#loc520 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":362:5)
#loc521 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":354:8)
#loc522 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":354:27)
#loc523 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":355:5)
#loc524 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":356:9)
#loc525 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":361:9)
#loc526 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":356:12)
#loc527 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":356:19)
#loc528 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":357:9)
#loc529 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":359:26)
#loc530 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":360:26)
#loc531 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":360:13)
#loc532 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":366:1)
#loc533 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":385:1)
#loc534 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":381:13)
#loc535 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":381:33)
#loc536 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":368:5)
#loc537 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":368:9)
#loc538 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":370:12)
#loc539 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":370:5)
#loc540 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":371:5)
#loc541 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":375:5)
#loc542 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":371:8)
#loc543 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":371:27)
#loc544 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":372:5)
#loc545 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":374:16)
#loc546 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":374:9)
#loc547 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":376:5)
#loc548 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":384:5)
#loc549 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":376:8)
#loc550 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":376:27)
#loc551 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":377:5)
#loc552 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":378:9)
#loc553 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":383:9)
#loc554 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":378:12)
#loc555 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":378:19)
#loc556 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":379:9)
#loc557 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":381:26)
#loc558 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":382:26)
#loc559 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_06.c":382:13)
#loc560 = loc(fused[#loc1, #loc2])
#loc561 = loc(fused[#loc3, #loc4])
#loc562 = loc(fused[#loc5, #loc6])
#loc563 = loc(fused[#loc7, #loc8])
#loc564 = loc(fused[#loc9, #loc10])
#loc565 = loc(fused[#loc11, #loc12])
#loc566 = loc(fused[#loc13, #loc14])
#loc567 = loc(fused[#loc15, #loc16])
#loc568 = loc(fused[#loc17, #loc18])
#loc569 = loc(fused[#loc19, #loc20])
#loc570 = loc(fused[#loc21, #loc22])
#loc571 = loc(fused[#loc23, #loc24])
#loc572 = loc(fused[#loc25, #loc26])
#loc573 = loc(fused[#loc27, #loc28])
#loc574 = loc(fused[#loc29, #loc30])
#loc575 = loc(fused[#loc31, #loc32])
#loc576 = loc(fused[#loc33, #loc34])
#loc577 = loc(fused[#loc36, #loc35])
#loc578 = loc(fused[#loc37, #loc38])
#loc579 = loc(fused[#loc39, #loc40])
#loc580 = loc(fused[#loc41, #loc38])
#loc581 = loc(fused[#loc42, #loc43])
#loc582 = loc(fused[#loc44, #loc45])
#loc583 = loc(fused[#loc51, #loc52])
#loc584 = loc(fused[#loc53, #loc54])
#loc585 = loc(fused[#loc55, #loc56])
#loc586 = loc(fused[#loc57, #loc54])
#loc587 = loc(fused[#loc59, #loc60])
#loc588 = loc(fused[#loc62, #loc63])
#loc589 = loc(fused[#loc64, #loc65])
#loc590 = loc(fused[#loc68, #loc66])
#loc591 = loc(fused[#loc72, #loc69])
#loc592 = loc(fused[#loc76, #loc77])
#loc593 = loc(fused[#loc78, #loc79])
#loc594 = loc(fused[#loc81, #loc82])
#loc595 = loc(fused[#loc83, #loc84])
#loc596 = loc(fused[#loc85, #loc86])
#loc597 = loc(fused[#loc87, #loc79])
#loc598 = loc(fused[#loc89, #loc90])
#loc599 = loc(fused[#loc93, #loc94])
#loc600 = loc(fused[#loc95, #loc90])
#loc601 = loc(fused[#loc101, #loc102])
#loc602 = loc(fused[#loc103, #loc104])
#loc603 = loc(fused[#loc105, #loc106])
#loc604 = loc(fused[#loc107, #loc104])
#loc605 = loc(fused[#loc111, #loc112])
#loc606 = loc(fused[#loc115, #loc116])
#loc607 = loc(fused[#loc117, #loc118])
#loc608 = loc(fused[#loc119, #loc120])
#loc609 = loc(fused[#loc122, #loc123])
#loc610 = loc(fused[#loc124, #loc118])
#loc611 = loc(fused[#loc128, #loc126])
#loc612 = loc(fused[#loc131, #loc132])
#loc613 = loc(fused[#loc133, #loc134])
#loc614 = loc(fused[#loc135, #loc136])
#loc615 = loc(fused[#loc137, #loc134])
#loc616 = loc(fused[#loc140, #loc141])
#loc617 = loc(fused[#loc142, #loc143])
#loc618 = loc(fused[#loc144, #loc141])
#loc619 = loc(fused[#loc147, #loc148])
#loc620 = loc(fused[#loc149, #loc150])
#loc621 = loc(fused[#loc151, #loc148])
#loc622 = loc(fused[#loc152, #loc153])
#loc623 = loc(fused[#loc154, #loc155])
#loc624 = loc(fused[#loc156, #loc153])
#loc625 = loc(fused[#loc160, #loc161])
#loc626 = loc(fused[#loc162, #loc163])
#loc627 = loc(fused[#loc164, #loc165])
#loc628 = loc(fused[#loc166, #loc167])
#loc629 = loc(fused[#loc168, #loc169])
#loc630 = loc(fused[#loc170, #loc171])
#loc631 = loc(fused[#loc172, #loc173])
#loc632 = loc(fused[#loc174, #loc175])
#loc633 = loc(fused[#loc180, #loc181])
#loc636 = loc(fused[#loc191, #loc192])
#loc637 = loc(fused[#loc195, #loc196])
#loc638 = loc(fused[#loc199, #loc198])
#loc639 = loc(fused[#loc202, #loc203])
#loc640 = loc(fused[#loc204, #loc205])
#loc641 = loc(fused[#loc206, #loc207])
#loc642 = loc(fused[#loc208, #loc209])
#loc643 = loc(fused[#loc210, #loc211])
#loc644 = loc(fused[#loc212, #loc213])
#loc645 = loc(fused[#loc214, #loc215])
#loc646 = loc(fused[#loc216, #loc217])
#loc647 = loc(fused[#loc219, #loc218])
#loc648 = loc(fused[#loc220, #loc221])
#loc649 = loc(fused[#loc222, #loc223])
#loc650 = loc(fused[#loc224, #loc221])
#loc651 = loc(fused[#loc225, #loc226])
#loc652 = loc(fused[#loc227, #loc228])
#loc653 = loc(fused[#loc234, #loc235])
#loc654 = loc(fused[#loc236, #loc237])
#loc655 = loc(fused[#loc238, #loc239])
#loc656 = loc(fused[#loc240, #loc237])
#loc657 = loc(fused[#loc242, #loc243])
#loc658 = loc(fused[#loc245, #loc246])
#loc659 = loc(fused[#loc247, #loc248])
#loc660 = loc(fused[#loc250, #loc249])
#loc661 = loc(fused[#loc252, #loc251])
#loc662 = loc(fused[#loc255, #loc256])
#loc663 = loc(fused[#loc257, #loc258])
#loc664 = loc(fused[#loc260, #loc261])
#loc665 = loc(fused[#loc262, #loc263])
#loc666 = loc(fused[#loc264, #loc265])
#loc667 = loc(fused[#loc266, #loc258])
#loc668 = loc(fused[#loc268, #loc269])
#loc669 = loc(fused[#loc272, #loc273])
#loc670 = loc(fused[#loc274, #loc269])
#loc671 = loc(fused[#loc280, #loc281])
#loc672 = loc(fused[#loc282, #loc283])
#loc673 = loc(fused[#loc284, #loc285])
#loc674 = loc(fused[#loc286, #loc283])
#loc675 = loc(fused[#loc290, #loc291])
#loc676 = loc(fused[#loc294, #loc295])
#loc677 = loc(fused[#loc296, #loc297])
#loc678 = loc(fused[#loc298, #loc299])
#loc679 = loc(fused[#loc301, #loc302])
#loc680 = loc(fused[#loc303, #loc297])
#loc681 = loc(fused[#loc307, #loc305])
#loc682 = loc(fused[#loc310, #loc311])
#loc683 = loc(fused[#loc312, #loc313])
#loc684 = loc(fused[#loc314, #loc315])
#loc685 = loc(fused[#loc316, #loc313])
#loc686 = loc(fused[#loc319, #loc320])
#loc687 = loc(fused[#loc321, #loc322])
#loc688 = loc(fused[#loc323, #loc320])
#loc689 = loc(fused[#loc326, #loc327])
#loc690 = loc(fused[#loc328, #loc329])
#loc691 = loc(fused[#loc330, #loc331, #loc332, #loc327])
#loc692 = loc(fused[#loc334, #loc335])
#loc693 = loc(fused[#loc336, #loc337])
#loc694 = loc(fused[#loc338, #loc335])
#loc695 = loc(fused[#loc339, #loc340])
#loc696 = loc(fused[#loc342, #loc343])
#loc697 = loc(fused[#loc341, #loc344])
#loc698 = loc(fused[#loc345, #loc346, #loc347, #loc340])
#loc699 = loc(fused[#loc352, #loc353])
#loc700 = loc(fused[#loc354, #loc355])
#loc701 = loc(fused[#loc356, #loc357])
#loc702 = loc(fused[#loc358, #loc359])
#loc703 = loc(fused[#loc360, #loc361])
#loc704 = loc(fused[#loc362, #loc363])
#loc705 = loc(fused[#loc364, #loc365])
#loc706 = loc(fused[#loc366, #loc367])
#loc707 = loc(fused[#loc369, #loc368])
#loc708 = loc(fused[#loc370, #loc371])
#loc709 = loc(fused[#loc372, #loc373])
#loc710 = loc(fused[#loc374, #loc371])
#loc711 = loc(fused[#loc375, #loc376])
#loc712 = loc(fused[#loc377, #loc378])
#loc713 = loc(fused[#loc384, #loc385])
#loc714 = loc(fused[#loc386, #loc387])
#loc715 = loc(fused[#loc388, #loc389])
#loc716 = loc(fused[#loc390, #loc387])
#loc717 = loc(fused[#loc392, #loc393])
#loc718 = loc(fused[#loc395, #loc396])
#loc719 = loc(fused[#loc397, #loc398])
#loc720 = loc(fused[#loc400, #loc399])
#loc721 = loc(fused[#loc402, #loc401])
#loc722 = loc(fused[#loc405, #loc406])
#loc723 = loc(fused[#loc407, #loc408])
#loc724 = loc(fused[#loc410, #loc411])
#loc725 = loc(fused[#loc412, #loc413])
#loc726 = loc(fused[#loc414, #loc415])
#loc727 = loc(fused[#loc416, #loc408])
#loc728 = loc(fused[#loc418, #loc419])
#loc729 = loc(fused[#loc422, #loc423])
#loc730 = loc(fused[#loc424, #loc419])
#loc731 = loc(fused[#loc430, #loc431])
#loc732 = loc(fused[#loc432, #loc433])
#loc733 = loc(fused[#loc434, #loc435])
#loc734 = loc(fused[#loc436, #loc433])
#loc735 = loc(fused[#loc440, #loc441])
#loc736 = loc(fused[#loc444, #loc445])
#loc737 = loc(fused[#loc446, #loc447])
#loc738 = loc(fused[#loc448, #loc449])
#loc739 = loc(fused[#loc451, #loc452])
#loc740 = loc(fused[#loc453, #loc447])
#loc741 = loc(fused[#loc457, #loc455])
#loc742 = loc(fused[#loc460, #loc461])
#loc743 = loc(fused[#loc462, #loc463])
#loc744 = loc(fused[#loc464, #loc465])
#loc745 = loc(fused[#loc466, #loc463])
#loc746 = loc(fused[#loc469, #loc470])
#loc747 = loc(fused[#loc471, #loc472])
#loc748 = loc(fused[#loc473, #loc470])
#loc749 = loc(fused[#loc476, #loc477])
#loc750 = loc(fused[#loc478, #loc479])
#loc751 = loc(fused[#loc480, #loc477])
#loc752 = loc(fused[#loc481, #loc482])
#loc753 = loc(fused[#loc483, #loc484])
#loc754 = loc(fused[#loc485, #loc482])
#loc755 = loc(fused[#loc486, #loc487])
#loc756 = loc(fused[#loc489, #loc490])
#loc757 = loc(fused[#loc488, #loc491])
#loc758 = loc(fused[#loc492, #loc493, #loc494, #loc487])
#loc759 = loc(fused[#loc500, #loc501])
#loc760 = loc(fused[#loc502, #loc503])
#loc761 = loc(fused[#loc504, #loc505])
#loc762 = loc(fused[#loc507, #loc506])
#loc763 = loc(fused[#loc508, #loc509])
#loc764 = loc(fused[#loc510, #loc511])
#loc765 = loc(fused[#loc512, #loc513, #loc514, #loc509])
#loc766 = loc(fused[#loc518, #loc517])
#loc767 = loc(fused[#loc519, #loc520])
#loc768 = loc(fused[#loc521, #loc522])
#loc769 = loc(fused[#loc523, #loc520])
#loc770 = loc(fused[#loc524, #loc525])
#loc771 = loc(fused[#loc526, #loc527])
#loc772 = loc(fused[#loc528, #loc525])
#loc773 = loc(fused[#loc532, #loc533])
#loc774 = loc(fused[#loc534, #loc535])
#loc775 = loc(fused[#loc536, #loc537])
#loc776 = loc(fused[#loc539, #loc538])
#loc777 = loc(fused[#loc540, #loc541])
#loc778 = loc(fused[#loc542, #loc543])
#loc779 = loc(fused[#loc544, #loc541])
#loc780 = loc(fused[#loc546, #loc545])
#loc781 = loc(fused[#loc547, #loc548])
#loc782 = loc(fused[#loc549, #loc550])
#loc783 = loc(fused[#loc551, #loc548])
#loc784 = loc(fused[#loc552, #loc553])
#loc785 = loc(fused[#loc554, #loc555])
#loc786 = loc(fused[#loc556, #loc553])
