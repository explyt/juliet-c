!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":62:25)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":62:32)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:48)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":164:30)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":164:37)
#loc256 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":198:30)
#loc257 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":198:37)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc309 = loc(fused[#loc28, #loc29])
#loc381 = loc(fused[#loc210, #loc211])
#loc398 = loc(fused[#loc256, #loc257])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc296)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc297)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_21_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc298)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc299)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc300)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc301)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc15)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc303)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc304)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc305)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc306)
  cir.func private @close(!s32i) -> !s32i loc(#loc307)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc28, #loc29])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc310)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc311)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc312)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc313)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc314)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc309)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc27)
    cir.store %arg0, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    cir.br ^bb1 loc(#loc315)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc299)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc43)
    cir.brcond %9 ^bb2, ^bb44 loc(#loc316)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc317)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc37)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc47)
    %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc47)
    cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc314)
    cir.br ^bb4 loc(#loc318)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc318)
  ^bb5:  // pred: ^bb36
    %15 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %16 ^bb6, ^bb37 loc(#loc51)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc319)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc56)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
    cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.br ^bb8 loc(#loc321)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc63)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc322)
    cir.brcond %24 ^bb9, ^bb10 loc(#loc323)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc65)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc61)
  ^bb11:  // pred: ^bb10
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc324)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc325)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc326)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc73)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc73)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc327)
    %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc15)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc15)
    %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc76)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc328)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc81)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc81)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc82)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc329)
    cir.br ^bb12 loc(#loc330)
  ^bb12:  // pred: ^bb11
    %40 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc331)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc332)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc332)
    %44 = cir.call @connect(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc93)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc94)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %47 ^bb13, ^bb14 loc(#loc334)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc96)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc87)
  ^bb15:  // pred: ^bb14
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %49 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %50 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc100)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc335)
    %53 = cir.const #cir.int<1> : !u64i loc(#loc336)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc105)
    %56 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %57 = cir.binop(sub, %55, %56) : !u64i loc(#loc337)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc107)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc338)
    %61 = cir.binop(mul, %53, %60) : !u64i loc(#loc339)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %63 = cir.call @recv(%48, %52, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc110)
    %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc110)
    cir.store %64, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb16 loc(#loc341)
  ^bb16:  // pred: ^bb15
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc116)
    %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %68 ^bb17, ^bb18 loc(#loc117)
  ^bb17:  // pred: ^bb16
    %69 = cir.const #true loc(#loc117)
    cir.br ^bb23(%69 : !cir.bool) loc(#loc117)
  ^bb18:  // pred: ^bb16
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %72 = cir.cmp(eq, %70, %71) : !s32i, !cir.bool loc(#loc343)
    cir.brcond %72 ^bb19, ^bb20 loc(#loc117)
  ^bb19:  // pred: ^bb18
    %73 = cir.const #true loc(#loc117)
    cir.br ^bb21(%73 : !cir.bool) loc(#loc117)
  ^bb20:  // pred: ^bb18
    %74 = cir.const #false loc(#loc117)
    cir.br ^bb21(%74 : !cir.bool) loc(#loc117)
  ^bb21(%75: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc117)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%75 : !cir.bool) loc(#loc117)
  ^bb23(%76: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc117)
  ^bb24:  // pred: ^bb23
    cir.brcond %76 ^bb25, ^bb26 loc(#loc344)
  ^bb25:  // pred: ^bb24
    cir.br ^bb37 loc(#loc121)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc114)
  ^bb27:  // pred: ^bb26
    %77 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc122)
    %79 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %80 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %82 = cir.cast(integral, %81 : !s32i), !u64i loc(#loc125)
    %83 = cir.const #cir.int<1> : !u64i loc(#loc345)
    %84 = cir.binop(div, %82, %83) : !u64i loc(#loc346)
    %85 = cir.binop(add, %80, %84) : !u64i loc(#loc347)
    %86 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %85 : !u64i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %78, %86 : !s8i, !cir.ptr<!s8i> loc(#loc348)
    %87 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    %88 = cir.const #cir.int<13> : !s32i loc(#loc130)
    %89 = cir.call @strchr(%87, %88) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc131)
    cir.store %89, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc349)
    cir.br ^bb28 loc(#loc350)
  ^bb28:  // pred: ^bb27
    %90 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %91 = cir.cast(ptr_to_bool, %90 : !cir.ptr<!s8i>), !cir.bool loc(#loc136)
    cir.brcond %91 ^bb29, ^bb30 loc(#loc351)
  ^bb29:  // pred: ^bb28
    %92 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %93 = cir.cast(integral, %92 : !s32i), !s8i loc(#loc138)
    %94 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.store %93, %94 : !s8i, !cir.ptr<!s8i> loc(#loc352)
    cir.br ^bb30 loc(#loc135)
  ^bb30:  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc135)
  ^bb31:  // pred: ^bb30
    %95 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %96 = cir.const #cir.int<10> : !s32i loc(#loc142)
    %97 = cir.call @strchr(%95, %96) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc143)
    cir.store %97, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc353)
    cir.br ^bb32 loc(#loc354)
  ^bb32:  // pred: ^bb31
    %98 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    %99 = cir.cast(ptr_to_bool, %98 : !cir.ptr<!s8i>), !cir.bool loc(#loc148)
    cir.brcond %99 ^bb33, ^bb34 loc(#loc355)
  ^bb33:  // pred: ^bb32
    %100 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %101 = cir.cast(integral, %100 : !s32i), !s8i loc(#loc150)
    %102 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    cir.store %101, %102 : !s8i, !cir.ptr<!s8i> loc(#loc356)
    cir.br ^bb34 loc(#loc147)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc147)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc53)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc50)
  ^bb37:  // 4 preds: ^bb5, ^bb9, ^bb13, ^bb25
    cir.br ^bb38 loc(#loc50)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc357)
  ^bb39:  // pred: ^bb38
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %104 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %105 = cir.unary(minus, %104) nsw : !s32i, !s32i loc(#loc156)
    %106 = cir.cmp(ne, %103, %105) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %106 ^bb40, ^bb41 loc(#loc359)
  ^bb40:  // pred: ^bb39
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %108 = cir.call @close(%107) : (!s32i) -> !s32i loc(#loc159)
    cir.br ^bb41 loc(#loc154)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc154)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc46)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc42)
  ^bb44:  // 2 preds: ^bb1, ^bb43
    cir.br ^bb45 loc(#loc42)
  ^bb45:  // pred: ^bb44
    %109 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    cir.store %109, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
    %110 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc360)
    cir.return %110 : !cir.ptr<!s8i> loc(#loc360)
  } loc(#loc308)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc361)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc164)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc362)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc364)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc365)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc298)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_21_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc298)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc298)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc366)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %6 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc299)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %8 = cir.call @badSource(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc178)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc368)
    cir.br ^bb1 loc(#loc369)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc164)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc164)
    %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc184)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc370)
    cir.br ^bb2 loc(#loc371)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc189)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc190)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc190)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc372)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc373)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc192)
    %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc193)
    cir.br ^bb4 loc(#loc188)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc188)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc182)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc168)
  } loc(#loc363)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc375)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc196)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc376)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc198)
    cir.return loc(#loc195)
  } loc(#loc374)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc377)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc204)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc379)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc207)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc210, #loc211])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc381)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc209)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.br ^bb1 loc(#loc382)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc377)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc215)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc383)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc204)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    cir.br ^bb4 loc(#loc217)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc220)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc207)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc207)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc220)
    cir.br ^bb4 loc(#loc214)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc214)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc384)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc384)
    cir.return %13 : !cir.ptr<!s8i> loc(#loc384)
  } loc(#loc380)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc386)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc387)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc297)
    %3 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc297)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc297)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc230)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc388)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc232)
    %6 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc377)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
    %8 = cir.call @goodG2B1Source(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc235)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc390)
    cir.br ^bb1 loc(#loc391)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc241)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc241)
    %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc242)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc392)
    cir.br ^bb2 loc(#loc393)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc247)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc248)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc248)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc394)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc395)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc250)
    %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc251)
    cir.br ^bb4 loc(#loc246)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc246)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc239)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc225)
  } loc(#loc385)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc396)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc256, #loc257])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc398)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc255)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    cir.br ^bb1 loc(#loc399)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc396)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc261)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc400)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc263)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc264)
    %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc265)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc265)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc263)
    cir.br ^bb3 loc(#loc260)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc260)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc401)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc401)
    cir.return %11 : !cir.ptr<!s8i> loc(#loc401)
  } loc(#loc397)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc403)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc404)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc296)
    %3 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc296)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc296)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc274)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc405)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc276)
    %6 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc396)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc278)
    %8 = cir.call @goodG2B2Source(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc279)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc407)
    cir.br ^bb1 loc(#loc408)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc284)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc285)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc285)
    %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc286)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc409)
    cir.br ^bb2 loc(#loc410)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc291)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc292)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc292)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc411)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc412)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc294)
    %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc295)
    cir.br ^bb4 loc(#loc290)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc290)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc283)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc269)
  } loc(#loc402)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":211:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":211:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":182:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":182:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":140:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":140:26)
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":60:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":60:24)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc13 = loc("/usr/include/arpa/inet.h":34:1)
#loc14 = loc("/usr/include/arpa/inet.h":34:47)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":93:53)
#loc16 = loc("/usr/include/netinet/in.h":402:1)
#loc17 = loc("/usr/include/netinet/in.h":403:40)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc21 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc22 = loc("/usr/include/string.h":246:1)
#loc23 = loc("/usr/include/string.h":247:33)
#loc24 = loc("/usr/include/unistd.h":358:1)
#loc25 = loc("/usr/include/unistd.h":358:27)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":62:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":135:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":71:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":71:17)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":72:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":72:32)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":73:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":73:19)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":74:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":74:36)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":75:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":75:41)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":63:1)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":64:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":133:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":64:8)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":65:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":66:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":132:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":75:30)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":75:37)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":76:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":121:21)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":121:20)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":77:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":120:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:40)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:49)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:62)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:33)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:73)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":87:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":90:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":87:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":87:38)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":88:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":89:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:24)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:25)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:34)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:37)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:51)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:52)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":92:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":92:17)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":93:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":93:17)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":93:63)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":94:42)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":94:36)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":94:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":94:50)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":98:17)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:29)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:62)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:63)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:72)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:86)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:21)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:92)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":96:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":97:21)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:35)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:59)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:66)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:64)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:50)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:73)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:76)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:87)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:92)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:98)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:108)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:109)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:112)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:30)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:17)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:113)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:17)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":106:17)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:21)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:35)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:51)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:65)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":104:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":105:21)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:61)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:17)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:22)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:32)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:45)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:56)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:57)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:34)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:40)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:27)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:17)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:44)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":111:17)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":114:17)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":111:21)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":112:17)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":113:32)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":113:22)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":113:21)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:34)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:40)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:27)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:44)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":116:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":119:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":116:21)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":117:17)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":118:32)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":118:22)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":118:21)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":122:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":125:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":122:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":122:34)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":123:13)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":124:30)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":124:17)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":134:12)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":134:5)
#loc162 = loc("/usr/include/stdio.h":903:1)
#loc163 = loc("/usr/include/stdio.h":904:3)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:28)
#loc165 = loc("/usr/include/stdio.h":897:1)
#loc166 = loc("/usr/include/stdio.h":897:36)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":137:1)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":153:1)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":145:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":145:15)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":139:5)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":139:12)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":141:12)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":141:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":142:17)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":142:5)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":143:22)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":143:12)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":143:5)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":143:26)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":144:5)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":152:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:22)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:16)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:9)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:31)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":148:9)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":151:9)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":148:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":148:21)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":149:9)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":150:20)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":150:13)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":226:1)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":230:1)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":228:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":228:14)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":229:5)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":229:14)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":160:1)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":160:29)
#loc202 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc203 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":169:19)
#loc205 = loc("/usr/include/string.h":149:1)
#loc206 = loc("/usr/include/string.h":150:14)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":174:22)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":164:1)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":177:1)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":165:1)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":166:5)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":175:5)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":166:8)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":167:5)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":170:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":172:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":169:9)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":174:9)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":174:16)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":176:12)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":176:5)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":179:1)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":195:1)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":187:9)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":187:15)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":181:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":181:12)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":183:12)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":183:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":184:22)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":184:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":185:27)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":185:12)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":185:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":185:31)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":186:5)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":194:5)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:22)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:28)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:16)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:9)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:31)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":190:9)
#loc246 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":193:9)
#loc247 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":190:13)
#loc248 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":190:21)
#loc249 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":191:9)
#loc250 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":192:20)
#loc251 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":192:13)
#loc252 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":161:1)
#loc253 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":161:29)
#loc254 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":198:1)
#loc255 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":206:1)
#loc258 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":199:1)
#loc259 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":200:5)
#loc260 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":204:5)
#loc261 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":200:8)
#loc262 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":201:5)
#loc263 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":203:9)
#loc264 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":203:16)
#loc265 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":203:22)
#loc266 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":205:12)
#loc267 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":205:5)
#loc268 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":208:1)
#loc269 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":224:1)
#loc270 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":216:9)
#loc271 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":216:15)
#loc272 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":210:5)
#loc273 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":210:12)
#loc274 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":212:12)
#loc275 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":212:5)
#loc276 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":213:22)
#loc277 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":213:5)
#loc278 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":214:27)
#loc279 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":214:12)
#loc280 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":214:5)
#loc281 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":214:31)
#loc282 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":215:5)
#loc283 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":223:5)
#loc284 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:22)
#loc285 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:28)
#loc286 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:16)
#loc287 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:9)
#loc288 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:31)
#loc289 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":219:9)
#loc290 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":222:9)
#loc291 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":219:13)
#loc292 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":219:21)
#loc293 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":220:9)
#loc294 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":221:20)
#loc295 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":221:13)
#loc296 = loc(fused[#loc1, #loc2])
#loc297 = loc(fused[#loc3, #loc4])
#loc298 = loc(fused[#loc5, #loc6])
#loc299 = loc(fused[#loc7, #loc8])
#loc300 = loc(fused[#loc9, #loc10])
#loc301 = loc(fused[#loc11, #loc12])
#loc302 = loc(fused[#loc13, #loc14])
#loc303 = loc(fused[#loc16, #loc17])
#loc304 = loc(fused[#loc18, #loc19])
#loc305 = loc(fused[#loc20, #loc21])
#loc306 = loc(fused[#loc22, #loc23])
#loc307 = loc(fused[#loc24, #loc25])
#loc308 = loc(fused[#loc26, #loc27])
#loc310 = loc(fused[#loc30, #loc31])
#loc311 = loc(fused[#loc32, #loc33])
#loc312 = loc(fused[#loc34, #loc35])
#loc313 = loc(fused[#loc36, #loc37])
#loc314 = loc(fused[#loc38, #loc39])
#loc315 = loc(fused[#loc41, #loc42])
#loc316 = loc(fused[#loc44, #loc42])
#loc317 = loc(fused[#loc45, #loc46])
#loc318 = loc(fused[#loc49, #loc50])
#loc319 = loc(fused[#loc52, #loc53])
#loc320 = loc(fused[#loc58, #loc59])
#loc321 = loc(fused[#loc60, #loc61])
#loc322 = loc(fused[#loc62, #loc63])
#loc323 = loc(fused[#loc64, #loc61])
#loc324 = loc(fused[#loc66, #loc67])
#loc325 = loc(fused[#loc69, #loc70])
#loc326 = loc(fused[#loc71, #loc72])
#loc327 = loc(fused[#loc75, #loc73])
#loc328 = loc(fused[#loc79, #loc80])
#loc329 = loc(fused[#loc84, #loc85])
#loc330 = loc(fused[#loc86, #loc87])
#loc331 = loc(fused[#loc89, #loc90])
#loc332 = loc(fused[#loc91, #loc92])
#loc333 = loc(fused[#loc93, #loc94])
#loc334 = loc(fused[#loc95, #loc87])
#loc335 = loc(fused[#loc101, #loc102])
#loc336 = loc(fused[#loc103, #loc104])
#loc337 = loc(fused[#loc105, #loc106])
#loc338 = loc(fused[#loc105, #loc107])
#loc339 = loc(fused[#loc103, #loc108])
#loc340 = loc(fused[#loc111, #loc112])
#loc341 = loc(fused[#loc113, #loc114])
#loc342 = loc(fused[#loc115, #loc116])
#loc343 = loc(fused[#loc118, #loc119])
#loc344 = loc(fused[#loc120, #loc114])
#loc345 = loc(fused[#loc126, #loc127])
#loc346 = loc(fused[#loc125, #loc127])
#loc347 = loc(fused[#loc124, #loc127])
#loc348 = loc(fused[#loc123, #loc122])
#loc349 = loc(fused[#loc132, #loc133])
#loc350 = loc(fused[#loc134, #loc135])
#loc351 = loc(fused[#loc137, #loc135])
#loc352 = loc(fused[#loc140, #loc138])
#loc353 = loc(fused[#loc144, #loc145])
#loc354 = loc(fused[#loc146, #loc147])
#loc355 = loc(fused[#loc149, #loc147])
#loc356 = loc(fused[#loc152, #loc150])
#loc357 = loc(fused[#loc153, #loc154])
#loc358 = loc(fused[#loc155, #loc156])
#loc359 = loc(fused[#loc157, #loc154])
#loc360 = loc(fused[#loc161, #loc160])
#loc361 = loc(fused[#loc162, #loc163])
#loc362 = loc(fused[#loc165, #loc166])
#loc363 = loc(fused[#loc167, #loc168])
#loc364 = loc(fused[#loc169, #loc170])
#loc365 = loc(fused[#loc171, #loc172])
#loc366 = loc(fused[#loc174, #loc173])
#loc367 = loc(fused[#loc176, #loc175])
#loc368 = loc(fused[#loc179, #loc180])
#loc369 = loc(fused[#loc181, #loc182])
#loc370 = loc(fused[#loc185, #loc186])
#loc371 = loc(fused[#loc187, #loc188])
#loc372 = loc(fused[#loc189, #loc190])
#loc373 = loc(fused[#loc191, #loc188])
#loc374 = loc(fused[#loc194, #loc195])
#loc375 = loc(fused[#loc196, #loc197])
#loc376 = loc(fused[#loc198, #loc199])
#loc377 = loc(fused[#loc200, #loc201])
#loc378 = loc(fused[#loc202, #loc203])
#loc379 = loc(fused[#loc205, #loc206])
#loc380 = loc(fused[#loc208, #loc209])
#loc382 = loc(fused[#loc213, #loc214])
#loc383 = loc(fused[#loc216, #loc217, #loc218, #loc214])
#loc384 = loc(fused[#loc223, #loc222])
#loc385 = loc(fused[#loc224, #loc225])
#loc386 = loc(fused[#loc226, #loc227])
#loc387 = loc(fused[#loc228, #loc229])
#loc388 = loc(fused[#loc231, #loc230])
#loc389 = loc(fused[#loc233, #loc232])
#loc390 = loc(fused[#loc236, #loc237])
#loc391 = loc(fused[#loc238, #loc239])
#loc392 = loc(fused[#loc243, #loc244])
#loc393 = loc(fused[#loc245, #loc246])
#loc394 = loc(fused[#loc247, #loc248])
#loc395 = loc(fused[#loc249, #loc246])
#loc396 = loc(fused[#loc252, #loc253])
#loc397 = loc(fused[#loc254, #loc255])
#loc399 = loc(fused[#loc259, #loc260])
#loc400 = loc(fused[#loc262, #loc260])
#loc401 = loc(fused[#loc267, #loc266])
#loc402 = loc(fused[#loc268, #loc269])
#loc403 = loc(fused[#loc270, #loc271])
#loc404 = loc(fused[#loc272, #loc273])
#loc405 = loc(fused[#loc275, #loc274])
#loc406 = loc(fused[#loc277, #loc276])
#loc407 = loc(fused[#loc280, #loc281])
#loc408 = loc(fused[#loc282, #loc283])
#loc409 = loc(fused[#loc287, #loc288])
#loc410 = loc(fused[#loc289, #loc290])
#loc411 = loc(fused[#loc291, #loc292])
#loc412 = loc(fused[#loc293, #loc290])
