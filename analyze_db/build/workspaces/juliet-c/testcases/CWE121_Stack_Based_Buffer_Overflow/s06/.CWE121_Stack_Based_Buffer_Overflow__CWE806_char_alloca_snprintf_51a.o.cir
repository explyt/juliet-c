!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51b_badSink(!cir.ptr<!s8i>) loc(#loc51)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc53)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc54)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc13)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc56)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc17)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc19)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc57)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51b_badSink(%24) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    cir.return loc(#loc4)
  } loc(#loc52)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc59)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    cir.return loc(#loc25)
  } loc(#loc58)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51b_goodG2BSink(!cir.ptr<!s8i>) loc(#loc60)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc62)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc63)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc35)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc35)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc35)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc35)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc35)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc39)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc40)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc40)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc65)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc44)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc46)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc46)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc48)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc66)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51b_goodG2BSink(%24) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.return loc(#loc31)
  } loc(#loc61)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":30:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":30:93)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":32:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":41:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":34:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":34:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":35:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":35:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":36:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":36:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":38:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":38:18)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":38:23)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":38:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":38:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":38:28)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":39:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":39:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":39:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":39:14)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":39:15)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":40:81)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":40:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":62:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":65:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":64:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":64:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":48:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":48:97)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":51:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":60:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":53:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":53:12)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":54:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":54:33)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":55:12)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":55:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":57:12)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":57:18)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":57:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":57:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":57:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":57:27)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":58:18)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":58:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":58:10)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":58:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":58:14)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":59:85)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_51a.c":59:5)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc5, #loc6])
#loc54 = loc(fused[#loc7, #loc8])
#loc55 = loc(fused[#loc10, #loc9])
#loc56 = loc(fused[#loc15, #loc16])
#loc57 = loc(fused[#loc18, #loc17])
#loc58 = loc(fused[#loc24, #loc25])
#loc59 = loc(fused[#loc26, #loc27])
#loc60 = loc(fused[#loc28, #loc29])
#loc61 = loc(fused[#loc30, #loc31])
#loc62 = loc(fused[#loc32, #loc33])
#loc63 = loc(fused[#loc34, #loc35])
#loc64 = loc(fused[#loc37, #loc36])
#loc65 = loc(fused[#loc42, #loc43])
#loc66 = loc(fused[#loc45, #loc44])
