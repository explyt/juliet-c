!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_file_open_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN48CWE23_Relative_Path_Traversal__char_file_open_16L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc132)
  cir.global "private" constant cir_private @__const._ZN48CWE23_Relative_Path_Traversal__char_file_open_163badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc133)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc134)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc10)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc136)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc138)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc139)
  cir.func private @close(!s32i) -> !s32i loc(#loc140)
  cir.func @_ZN48CWE23_Relative_Path_Traversal__char_file_open_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc133)
    %2 = cir.get_global @__const._ZN48CWE23_Relative_Path_Traversal__char_file_open_163badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc133)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc133)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc30)
        cir.condition(%5) loc(#loc30)
      } do {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc147)
            %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc148)
            %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc38)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc38)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc147)
            cir.scope {
              %9 = cir.const #cir.int<4096> : !s32i loc(#loc42)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc42)
              %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc150)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc44)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc151)
              cir.if %15 {
                %16 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc46)
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
                %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc10)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc10)
                %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc46)
                cir.store %21, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc153)
                cir.scope {
                  %22 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
                  %23 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc52)
                  %24 = cir.cmp(ne, %22, %23) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc155)
                  cir.if %24 {
                    cir.scope {
                      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                      %28 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                      %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc58)
                      %30 = cir.const #cir.int<4096> : !s32i loc(#loc59)
                      %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc59)
                      %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                      %33 = cir.binop(sub, %31, %32) : !u64i loc(#loc158)
                      %34 = cir.cast(integral, %33 : !u64i), !s32i loc(#loc158)
                      %35 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
                      %36 = cir.call @fgets(%29, %34, %35) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc62)
                      %37 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc63)
                      %38 = cir.cmp(eq, %36, %37) : !cir.ptr<!s8i>, !cir.bool loc(#loc159)
                      cir.if %38 {
                        %39 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
                        %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
                        cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc65)
                        %41 = cir.const #cir.int<0> : !s8i loc(#loc66)
                        %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                        %43 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                        %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                        cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc161)
                      } loc(#loc160)
                    } loc(#loc157)
                    %25 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
                    %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc71)
                  } loc(#loc156)
                } loc(#loc154)
              } loc(#loc152)
            } loc(#loc149)
          } loc(#loc146)
          cir.break loc(#loc72)
        } loc(#loc145)
        cir.yield loc(#loc29)
      } loc(#loc144)
    } loc(#loc144)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc163)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc78)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc79)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc164)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc80)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc81)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc165)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc82)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc166)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc87)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc88)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc89)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc168)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc92)
        } loc(#loc169)
      } loc(#loc167)
    } loc(#loc162)
    cir.return loc(#loc23)
  } loc(#loc141)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc95)
  cir.func internal private @_ZN48CWE23_Relative_Path_Traversal__char_file_open_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc132)
    %2 = cir.get_global @__const._ZN48CWE23_Relative_Path_Traversal__char_file_open_16L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc132)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc132)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc104)
        cir.condition(%5) loc(#loc104)
      } do {
        cir.scope {
          %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc106)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
          %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc95)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc95)
          %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
          cir.break loc(#loc108)
        } loc(#loc175)
        cir.yield loc(#loc103)
      } loc(#loc174)
    } loc(#loc174)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc177)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc114)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc115)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc178)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc116)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc117)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc179)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc118)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc180)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc124)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc125)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc182)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc127)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc128)
        } loc(#loc183)
      } loc(#loc181)
    } loc(#loc176)
    cir.return loc(#loc97)
  } loc(#loc171)
  cir.func @_ZN48CWE23_Relative_Path_Traversal__char_file_open_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN48CWE23_Relative_Path_Traversal__char_file_open_16L7goodG2BEv() : () -> () loc(#loc131)
    cir.return loc(#loc130)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_file_open_16.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":95:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":95:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":49:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":49:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":264:1)
#loc8 = loc("/usr/include/stdio.h":266:3)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":60:31)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":60:41)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":66:35)
#loc16 = loc("/usr/include/stdio.h":184:1)
#loc17 = loc("/usr/include/stdio.h":184:36)
#loc18 = loc("/usr/include/fcntl.h":209:1)
#loc19 = loc("/usr/include/fcntl.h":209:56)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":46:1)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":85:1)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":48:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":48:12)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":50:12)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":50:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":51:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":75:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":51:11)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":52:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":53:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":73:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":55:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":55:41)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":56:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":56:20)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":55:30)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":55:37)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":58:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":72:13)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":58:17)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":58:30)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":58:40)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":59:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":60:25)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":60:17)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":60:44)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":61:17)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":71:17)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":61:21)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":61:30)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":62:17)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":64:21)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":69:21)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":64:31)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":64:36)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":64:35)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":64:51)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":64:64)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":64:74)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":64:25)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":64:84)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":65:21)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":66:25)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":68:41)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":68:25)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":68:30)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":68:37)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":70:28)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":70:21)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":74:9)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":76:5)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":84:5)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":77:9)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":77:13)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":79:25)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":79:31)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":79:38)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":79:47)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":79:55)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":79:20)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":79:9)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":79:63)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":80:9)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":83:9)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":80:13)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":80:26)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":80:25)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":81:9)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":82:19)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":82:13)
#loc93 = loc("/usr/include/string.h":149:1)
#loc94 = loc("/usr/include/string.h":150:14)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":100:22)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":92:1)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":112:1)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":94:5)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":94:12)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":96:12)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":96:5)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":97:5)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":102:5)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":97:11)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":98:5)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":100:9)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":100:16)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":101:9)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":103:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":111:5)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":104:9)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":104:13)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":106:25)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":106:31)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":106:38)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":106:47)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":106:55)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":106:20)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":106:9)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":106:63)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":107:9)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":110:9)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":107:13)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":107:26)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":107:25)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":108:9)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":109:19)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":109:13)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":114:1)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":117:1)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_file_open_16.cpp":116:5)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc11, #loc12])
#loc137 = loc(fused[#loc13, #loc14])
#loc138 = loc(fused[#loc16, #loc17])
#loc139 = loc(fused[#loc18, #loc19])
#loc140 = loc(fused[#loc20, #loc21])
#loc141 = loc(fused[#loc22, #loc23])
#loc142 = loc(fused[#loc24, #loc25])
#loc143 = loc(fused[#loc27, #loc26])
#loc144 = loc(fused[#loc28, #loc29])
#loc145 = loc(fused[#loc31, #loc29])
#loc146 = loc(fused[#loc32, #loc33])
#loc147 = loc(fused[#loc34, #loc35])
#loc148 = loc(fused[#loc36, #loc37])
#loc149 = loc(fused[#loc40, #loc41])
#loc150 = loc(fused[#loc42, #loc43])
#loc151 = loc(fused[#loc42, #loc44])
#loc152 = loc(fused[#loc45, #loc41])
#loc153 = loc(fused[#loc47, #loc48])
#loc154 = loc(fused[#loc49, #loc50])
#loc155 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc53, #loc50])
#loc157 = loc(fused[#loc54, #loc55])
#loc158 = loc(fused[#loc59, #loc60])
#loc159 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc64, #loc55])
#loc161 = loc(fused[#loc67, #loc66])
#loc162 = loc(fused[#loc73, #loc74])
#loc163 = loc(fused[#loc75, #loc76])
#loc164 = loc(fused[#loc78, #loc79])
#loc165 = loc(fused[#loc80, #loc81])
#loc166 = loc(fused[#loc83, #loc84])
#loc167 = loc(fused[#loc85, #loc86])
#loc168 = loc(fused[#loc87, #loc88])
#loc169 = loc(fused[#loc90, #loc86])
#loc170 = loc(fused[#loc93, #loc94])
#loc171 = loc(fused[#loc96, #loc97])
#loc172 = loc(fused[#loc98, #loc99])
#loc173 = loc(fused[#loc101, #loc100])
#loc174 = loc(fused[#loc102, #loc103])
#loc175 = loc(fused[#loc105, #loc103])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc111, #loc112])
#loc178 = loc(fused[#loc114, #loc115])
#loc179 = loc(fused[#loc116, #loc117])
#loc180 = loc(fused[#loc119, #loc120])
#loc181 = loc(fused[#loc121, #loc122])
#loc182 = loc(fused[#loc123, #loc124])
#loc183 = loc(fused[#loc126, #loc122])
#loc184 = loc(fused[#loc129, #loc130])
